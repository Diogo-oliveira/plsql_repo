create or replace type "AGGR_PHARM_STR_DISTINCT" as object(	l_tbl		table_varchar,	l_count		number,	static function ODCIAggregateInitialize	(		i_obj in out aggr_pharm_str_distinct	)	return number,	member function ODCIAggregateIterate	(		self	in out	aggr_pharm_str_distinct,		val		in 		varchar2	)	return number,	member function ODCIAggregateMerge	(		self	in out	aggr_pharm_str_distinct,		o_ctx2	in 		aggr_pharm_str_distinct	)	return number,	member function ODCIAggregateTerminate	(		self			in out	aggr_pharm_str_distinct,		o_return_value	out		table_varchar,		i_flags			in		number	)	return number);/create or replace type body "AGGR_PHARM_STR_DISTINCT" is	static function ODCIAggregateInitialize	(		i_obj in out aggr_pharm_str_distinct	)	return number	is	begin		i_obj := aggr_pharm_str_distinct(table_varchar(), 0);		return Odciconst.Success;	end;	member function ODCIAggregateIterate	(		self	in out	aggr_pharm_str_distinct,		val		in 		varchar2	)	return number	is		l_chk_new	boolean := true;		l_tbl_count	number := 0;	begin		if (val is not null) then			--check if exists			l_tbl_count := self.l_tbl.count;			for i in 1 .. l_tbl_count			loop				if (self.l_tbl(i) = val) then					l_chk_new := false;					exit;				end if;			end loop;			if (l_chk_new) then				self.l_count := self.l_count + 1;				self.l_tbl.extend(1);				self.l_tbl(self.l_count) := val;			end if;		end if;		return Odciconst.Success;	end;	member function ODCIAggregateMerge	(		self	in out	aggr_pharm_str_distinct,		o_ctx2	in 		aggr_pharm_str_distinct	)	return number	is	begin		return Odciconst.Success;	end;	member function ODCIAggregateTerminate	(		self			in out	aggr_pharm_str_distinct,		o_return_value	out		table_varchar,		i_flags			in		number	)	return number	is	begin		o_return_value := self.l_tbl;		return Odciconst.Success;	end;end;/