-- CHANGED BY: mario.mineiro
-- CHANGE DATE: 26/08/2013 14:44
-- CHANGE REASON: [ALERT-263008] 
declare
  e_obj_exists exception;
  pragma exception_init(e_obj_exists, -00955);
begin
  execute immediate 'create table PO_PARAM_REG
(
  id_po_param_reg    NUMBER(24) not null,
  id_po_param        NUMBER(24),
  id_inst_owner      NUMBER(24),
  id_patient         NUMBER(24) not null,
  id_episode         NUMBER(24) not null,
  dt_creation        TIMESTAMP(6) WITH LOCAL TIME ZONE not null,
  dt_result          TIMESTAMP(6) WITH LOCAL TIME ZONE not null,
  flg_origin         VARCHAR2(1 CHAR) not null,
  value              VARCHAR2(200 CHAR),
  id_unit_measure    NUMBER(24),
  id_professional    NUMBER(24) not null,
  flg_status         VARCHAR2(1 CHAR) not null,
  id_cancel_reason   NUMBER(24),
  dt_cancel          TIMESTAMP(6) WITH LOCAL TIME ZONE,
  id_prof_cancel     NUMBER(24),
  notes_cancel       CLOB,
  create_user        VARCHAR2(24 CHAR),
  create_time        TIMESTAMP(6) WITH LOCAL TIME ZONE,
  create_institution NUMBER(24),
  update_user        VARCHAR2(24 CHAR),
  update_time        TIMESTAMP(6) WITH LOCAL TIME ZONE,
  update_institution NUMBER(24)
)
';
exception when e_obj_exists then
  dbms_output.put_line('table PO_PARAM_REG exists!');
end;
/

comment on table PO_PARAM_REG
  is 'Periodic observation parameters value registry.';

comment on column PO_PARAM_REG.id_po_param_reg
  is 'Primary key.';
comment on column PO_PARAM_REG.id_po_param
  is 'Periodic observation parameter identifier.';
comment on column PO_PARAM_REG.id_inst_owner
  is 'Owner institution identifier.';
comment on column PO_PARAM_REG.id_patient
  is 'Patient identifier.';
comment on column PO_PARAM_REG.id_episode
  is 'Episode identifier.';
comment on column PO_PARAM_REG.dt_creation
  is 'Value creation date.';
comment on column PO_PARAM_REG.dt_result
  is 'Value result date.';
comment on column PO_PARAM_REG.flg_origin
  is 'Column origin: (A)utomatic, (M)anual.';
comment on column PO_PARAM_REG.value
  is 'Value.';
comment on column PO_PARAM_REG.id_unit_measure
  is 'Value measurement unit identifier.';
comment on column PO_PARAM_REG.id_professional
  is 'Registering professional identifier.';
comment on column PO_PARAM_REG.flg_status
  is 'Value status: (A)ctive, (C)ancelled.';
comment on column PO_PARAM_REG.id_cancel_reason
  is 'Cancelation reason identifier.';
comment on column PO_PARAM_REG.dt_cancel
  is 'Cancelation date.';
comment on column PO_PARAM_REG.id_prof_cancel
  is 'Canceling professional identifier.';
comment on column PO_PARAM_REG.notes_cancel
  is 'Cancelation notes.';
comment on column PO_PARAM_REG.create_user
  is 'Creation User';
comment on column PO_PARAM_REG.create_time
  is 'Creation Time';
comment on column PO_PARAM_REG.create_institution
  is 'Creation Institution';
comment on column PO_PARAM_REG.update_user
  is 'Update User';
comment on column PO_PARAM_REG.update_time
  is 'Update Time';
comment on column PO_PARAM_REG.update_institution
  is 'Update Institution';
-- CHANGE END: mario.mineiro

-- CHANGED BY: mario.mineiro
-- CHANGE DATE: 26/08/2013 14:44
-- CHANGE REASON: [ALERT-263008] 
DECLARE
    e_object_exists EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_object_exists, -01430);
BEGIN
    BEGIN
        EXECUTE IMMEDIATE 'alter table po_param_reg add id_pat_pregn_fetus number(24)';
    EXCEPTION
        WHEN e_object_exists THEN
            dbms_output.put_line('AVISO: Operação já executada anteriormente.');
    END;
    BEGIN
        EXECUTE IMMEDIATE 'alter table po_param_reg add flg_screen varchar2(2 char)';
    EXCEPTION
        WHEN e_object_exists THEN
            dbms_output.put_line('AVISO: Operação já executada anteriormente.');
    END;
    
    BEGIN
        EXECUTE IMMEDIATE 'alter table po_param_reg add free_text clob';
    EXCEPTION
        WHEN e_object_exists THEN
            dbms_output.put_line('AVISO: Operação já executada anteriormente.');
    END;
    
    BEGIN
        EXECUTE IMMEDIATE 'alter table po_param_reg add free_date varchar2(14 char)';
    EXCEPTION
        WHEN e_object_exists THEN
            dbms_output.put_line('AVISO: Operação já executada anteriormente.');
    END;
    
    BEGIN
        EXECUTE IMMEDIATE 'alter table po_param_reg add free_date_mask varchar2(14 char)';
    EXCEPTION
        WHEN e_object_exists THEN
            dbms_output.put_line('AVISO: Operação já executada anteriormente.');
    END;
    
    BEGIN
        EXECUTE IMMEDIATE 'alter table po_param_reg add flg_ref_value varchar2(1 char)';
    EXCEPTION
        WHEN e_object_exists THEN
            dbms_output.put_line('AVISO: Operação já executada anteriormente.');
    END;
    
    BEGIN
        EXECUTE IMMEDIATE 'alter table po_param_reg modify dt_result TIMESTAMP(6) WITH LOCAL TIME ZONE null';
    EXCEPTION
        WHEN e_object_exists THEN
            dbms_output.put_line('AVISO: Operação já executada anteriormente.');
    END;
END;
/
COMMENT ON COLUMN po_param_reg.id_pat_pregn_fetus  is 'pat_pregn_fetus identifier';
COMMENT ON COLUMN po_param_reg.flg_screen          is 'flag screen PO(periodic observation) WH(woman health)';
COMMENT ON COLUMN po_param_reg.free_text            is 'free text field';
COMMENT ON COLUMN po_param_reg.free_date             is 'free date field';
COMMENT ON COLUMN po_param_reg.free_date_mask       is 'free date mask';
COMMENT ON COLUMN po_param_reg.flg_ref_value       is 'flag ref value Y/N';
-- CHANGE END: mario.mineiro