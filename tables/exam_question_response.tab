

  CREATE TABLE "ALERT"."EXAM_QUESTION_RESPONSE"
   (	"ID_EXAM_QUESTION_RESPONSE" NUMBER(24,0),
	"ID_EXAM_REQ_DET" NUMBER(24,0),
	"ID_QUESTIONNAIRE" NUMBER(24,0),
	"ID_RESPONSE" NUMBER(24,0),
	"NOTES" CLOB,
	"CREATE_USER" VARCHAR2(24),
	"CREATE_TIME" TIMESTAMP (6) WITH LOCAL TIME ZONE,
	"CREATE_INSTITUTION" NUMBER(24,0),
	"UPDATE_USER" VARCHAR2(24),
	"UPDATE_TIME" TIMESTAMP (6) WITH LOCAL TIME ZONE,
	"UPDATE_INSTITUTION" NUMBER(24,0)
   ) ;


-- Para adicionar colunas pode ser usado código comentado
-- De momento só são suportados os tipos de dados mais comuns.
-- ALTER TABLE EXAM_QUESTION_RESPONSE ADD ID_EXAM_QUESTION_RESPONSE NUMBER(24,0) NOT NULL;
-- ALTER TABLE EXAM_QUESTION_RESPONSE ADD ID_EXAM_REQ_DET NUMBER(24,0) NOT NULL;
-- ALTER TABLE EXAM_QUESTION_RESPONSE ADD ID_QUESTIONNAIRE NUMBER(24,0) NOT NULL;
-- ALTER TABLE EXAM_QUESTION_RESPONSE ADD ID_RESPONSE NUMBER(24,0) ;
-- ALTER TABLE EXAM_QUESTION_RESPONSE ADD NOTES CLOB(******ERROR) ;
-- ALTER TABLE EXAM_QUESTION_RESPONSE ADD CREATE_USER VARCHAR2(24) ;
-- ALTER TABLE EXAM_QUESTION_RESPONSE ADD CREATE_TIME TIMESTAMP(6) WITH LOCAL TIME ZONE ;
-- ALTER TABLE EXAM_QUESTION_RESPONSE ADD CREATE_INSTITUTION NUMBER(24,0) ;
-- ALTER TABLE EXAM_QUESTION_RESPONSE ADD UPDATE_USER VARCHAR2(24) ;
-- ALTER TABLE EXAM_QUESTION_RESPONSE ADD UPDATE_TIME TIMESTAMP(6) WITH LOCAL TIME ZONE ;
-- ALTER TABLE EXAM_QUESTION_RESPONSE ADD UPDATE_INSTITUTION NUMBER(24,0) ;

   COMMENT ON COLUMN "ALERT"."EXAM_QUESTION_RESPONSE"."ID_EXAM_QUESTION_RESPONSE" IS 'Primary key';



   COMMENT ON COLUMN "ALERT"."EXAM_QUESTION_RESPONSE"."ID_EXAM_REQ_DET" IS 'Exam''s order detail id';



   COMMENT ON COLUMN "ALERT"."EXAM_QUESTION_RESPONSE"."ID_QUESTIONNAIRE" IS 'Question id';



   COMMENT ON COLUMN "ALERT"."EXAM_QUESTION_RESPONSE"."ID_RESPONSE" IS 'Response id';



   COMMENT ON COLUMN "ALERT"."EXAM_QUESTION_RESPONSE"."NOTES" IS 'Notes';



   COMMENT ON COLUMN "ALERT"."EXAM_QUESTION_RESPONSE"."CREATE_USER" IS 'Creation User';



   COMMENT ON COLUMN "ALERT"."EXAM_QUESTION_RESPONSE"."CREATE_TIME" IS 'Creation Time';



   COMMENT ON COLUMN "ALERT"."EXAM_QUESTION_RESPONSE"."CREATE_INSTITUTION" IS 'Creation Institution';



   COMMENT ON COLUMN "ALERT"."EXAM_QUESTION_RESPONSE"."UPDATE_USER" IS 'Update User';



   COMMENT ON COLUMN "ALERT"."EXAM_QUESTION_RESPONSE"."UPDATE_INSTITUTION" IS 'Update Institution';




-- CHANGED BY: Ana Matos
-- CHANGE DATE: 09/10/2013 10:01
-- CHANGE REASON: [ALERT-266573] 
ALTER TABLE EXAM_QUESTION_RESPONSE 
 ADD (FLG_TIME VARCHAR2(2 CHAR)
 ,ID_EPISODE NUMBER(24)
 ,ID_PROF_LAST_UPDATE NUMBER(24)
 ,DT_LAST_UPDATE_TSTZ TIMESTAMP WITH LOCAL TIME ZONE);

ALTER TABLE EXAM_QUESTION_RESPONSE MODIFY CREATE_USER VARCHAR2(24 CHAR);
ALTER TABLE EXAM_QUESTION_RESPONSE MODIFY UPDATE_USER VARCHAR2(24 CHAR);


COMMENT ON TABLE EXAM_QUESTION_RESPONSE IS 'Table that stores the answers of the clinical questions';

COMMENT ON COLUMN EXAM_QUESTION_RESPONSE.ID_EXAM_REQ_DET IS 'Exam''s order detail ID';
COMMENT ON COLUMN EXAM_QUESTION_RESPONSE.ID_QUESTIONNAIRE IS 'Question ID';
COMMENT ON COLUMN EXAM_QUESTION_RESPONSE.ID_RESPONSE IS 'Response ID';
COMMENT ON COLUMN EXAM_QUESTION_RESPONSE.FLG_TIME IS 'Flag that indicates WHEN the questionnaire was answered';
COMMENT ON COLUMN EXAM_QUESTION_RESPONSE.ID_EPISODE IS 'Episode ID';
COMMENT ON COLUMN EXAM_QUESTION_RESPONSE.ID_PROF_LAST_UPDATE IS 'Last update professional ID';
COMMENT ON COLUMN EXAM_QUESTION_RESPONSE.DT_LAST_UPDATE_TSTZ IS 'Last update date';
COMMENT ON COLUMN EXAM_QUESTION_RESPONSE.UPDATE_TIME IS 'Update Time';
-- CHANGE END: Ana Matos

-- CHANGED BY: Ana Matos
-- CHANGE DATE: 09/10/2013 10:47
-- CHANGE REASON: [ALERT-266575] 
ALTER TABLE EXAM_QUESTION_RESPONSE 
 MODIFY (FLG_TIME VARCHAR2(2 CHAR) NOT NULL
 ,ID_EPISODE NUMBER(24) NOT NULL);
 
 
 
-- CHANGE END: Ana Matos

-- CHANGED BY: Pedro Henriques
-- CHANGE DATE: 09/07/2018 11:32
-- CHANGE REASON: [EMR-4796] 
DECLARE l_sql VARCHAR2(1000 CHAR);
BEGIN
    l_sql := 'ALTER TABLE alert.exam_question_response move lob(notes) store AS (tablespace alert_lob)';
    pk_versioning.run(l_sql);
EXCEPTION
    WHEN OTHERS THEN
        NULL;
END;
/
-- CHANGE END: Pedro Henriques