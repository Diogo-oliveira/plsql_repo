CREATE OR REPLACE VIEW V_ACTIVE_FETAL_DEATH AS
SELECT death_data_folio fetfolio,
       death_fetal_info_gender prodsexo,
       pk_death_registry.get_field_value(NULL, NULL, death_fetal_info_gest_age_q, death_fetal_info_gest_age) prodedad,
       pk_death_registry.get_field_value(NULL, NULL, death_fetal_info_weight_q, death_fetal_info_weight, 'Y') prodpeso,
       death_fetal_preg_pregnancy prodcantidad,
       death_fetal_preg_prenatal_ate prodatepren,
       decode(death_fetal_preg_prenatal_ate,
              'Y',
              pk_death_registry.get_field_value(NULL, NULL, death_fetal_preg_cons_q, death_fetal_pregnancy_consults),
              '00') pro_conrecib,
       death_fetal_preg_preg_was prodtipemb,
       death_fetal_pregnancy_ocurred prodeffet,
       death_fetal_info_skin_cond pro_estpiel,
       substr(death_fetal_preg_extract_date, 1, 4) prodanio,
       substr(death_fetal_preg_extract_date, 5, 2) prodmes,
       substr(death_fetal_preg_extract_date, 7, 2) proddia,
       substr(death_fetal_preg_extract_date, 9, 2) prodhora,
       substr(death_fetal_preg_extract_date, 11, 2) prodmin,
       pk_death_registry.get_mx_name_from_list(i_lang     => id_lang,
                                               i_prof     => profissional(NULL, epis.id_institution, 0),
                                               i_value    => death_data_known_address,
                                               i_name     => death_data_adrress_number,
                                               i_flag     => 'TT',
                                               i_group_id => 15542) proddom_ocur,
       pk_death_registry.get_mx_name_from_list(i_lang     => id_lang,
                                               i_prof     => profissional(NULL, epis.id_institution, 0),
                                               i_value    => death_data_known_address,
                                               i_name     => death_data_adrress_colony,
                                               i_flag     => 'TT',
                                               i_group_id => 15542,
                                               i_id_ne    => 11555) pro_domcol,
       nvl(death_data_adrress_location,
           pk_death_registry.get_code_by_federal_entity(17,
                                                        dr.id_death_registry,
                                                        'DEATH_DATA_ADRRESS_FEDERAL_ENTITY',
                                                        15)) prodloc_ocur,
       nvl(death_data_adrress_municipy,
           pk_death_registry.get_code_by_federal_entity(17,
                                                        dr.id_death_registry,
                                                        'DEATH_DATA_ADRRESS_FEDERAL_ENTITY',
                                                        10)) prodmpo_ocur,
       nvl(death_data_adrress_entity,
           pk_death_registry.get_code_by_federal_entity(17, dr.id_death_registry, 'DEATH_DATA_ADRRESS_FEDERAL_ENTITY', 5)) prodent_ocur,
       death_data_ocurrence prodsitio,
       death_data_institution fethospit,
       pk_adt.get_clues_code(i_id_clues => NULL, i_id_institution => death_registry_clues_code) pro_clues,
       death_fetal_preg_who_attended prodatenmed,
       death_fetal_pregnancy_abortion prodtipabor,
       death_fetal_pregnancy_birth prodtippart,
       death_fetal_preg_proc_exp prodprocexp,
       nvl(death_fetal_preg_proc_exp_inf, pk_death_registry.get_procedure_desc(17, i_id_dr => dr.id_death_registry)) prod_otroexp,
       death_fetal_preg_mother_viol pro_cauviole,
       death_fetal_preg_relat_aggres pro_parenagre,
       --   death_data_cause_desc,
       pk_diagnosis_core.get_diagnosis_code(i_diagnosis   => cause_basic,
                                            i_institution => vis.id_institution,
                                            i_software    => 0) fetcausacom,
       pk_diagnosis_core.get_diagnosis_code(i_diagnosis   => cause_1,
                                            i_institution => vis.id_institution,
                                            i_software    => 0) fetcausa,
       death_data_cause_desc_1 desccausatexta,
       pk_death_registry.get_fetal_cause_type(i_id_death_registry => dr.id_death_registry, i_order => 1) fettipcausa,
       pk_diagnosis_core.get_diagnosis_code(i_diagnosis   => cause_2,
                                            i_institution => vis.id_institution,
                                            i_software    => 0) fetcausab,
       death_data_cause_desc_2 desccausatextb,
       pk_death_registry.get_fetal_cause_type(i_id_death_registry => dr.id_death_registry, i_order => 2) fettipcausab,
       pk_diagnosis_core.get_diagnosis_code(i_diagnosis   => cause_3,
                                            i_institution => vis.id_institution,
                                            i_software    => 0) fetcausac,
       death_data_cause_desc_3 desccausatextc,
       pk_death_registry.get_fetal_cause_type(i_id_death_registry => dr.id_death_registry, i_order => 3) fettipcausac,
       pk_diagnosis_core.get_diagnosis_code(i_diagnosis   => cause_4,
                                            i_institution => vis.id_institution,
                                            i_software    => 0) fetcausad,
       death_data_cause_desc_4 desccausatextd,
       pk_death_registry.get_fetal_cause_type(i_id_death_registry => dr.id_death_registry, i_order => 4) fettipcausad,
       pk_diagnosis_core.get_diagnosis_code(i_diagnosis   => cause_5,
                                            i_institution => vis.id_institution,
                                            i_software    => 0) fetcausae,
       death_data_cause_desc_5 desccausatexte,
       pk_death_registry.get_fetal_cause_type(i_id_death_registry => dr.id_death_registry, i_order => 5) fettipcausae,
       pk_diagnosis_core.get_diagnosis_code(i_diagnosis   => cause_6,
                                            i_institution => vis.id_institution,
                                            i_software    => 0) fetcausaf,
       death_data_cause_desc_6 desccausatextf,
       pk_death_registry.get_fetal_cause_type(i_id_death_registry => dr.id_death_registry, i_order => 6) fettipcausaf,
       p.first_name madnombre,
       p.last_name madapepater,
       p.middle_name madapemater,
       pk_patient.get_patient_ssn(id_lang, profissional(NULL, epis.id_institution, NULL), i_patient => p.id_patient) pro_curpmadre,
       ctry.id_content pro_nacmadre,
       CASE
            WHEN p.pat_native_lang = 2 THEN
             'N'
            WHEN p.pat_native_lang IN (4, 8) THEN
             'S'
            WHEN p.pat_native_lang = 3 THEN
             'NE'
            WHEN p.pat_native_lang IS NULL THEN
             NULL
            ELSE
             'Y'
        END AS pro_lindmadre,
       pk_patient.get_pat_age_num(i_lang    => NULL,
                                  i_prof    => profissional(NULL, epis.id_institution, NULL),
                                  i_patient => p.id_patient,
                                  i_type    => 'Y') madedad,
       psa.marital_status madedo_civ,
       cd.id_content pro_madcountry,
       pk_adt.get_patient_address(id_lang, p.id_person) maddom_hab,
       pk_adt.get_patient_address_colony(i_lang=>17, I_PROF=>profissional(NULL, epis.id_institution, NULL),i_person => p.id_person) pro_madcol,
       pk_adt.get_rb_reg_classifier_code(pk_adt.get_patient_address_id(p.id_person), 5) madent_hab,
       pk_adt.get_rb_reg_classifier_code(pk_adt.get_patient_address_id(p.id_person), 10) maddmpo_hab,
       pk_adt.get_rb_reg_classifier_code(pk_adt.get_patient_address_id(p.id_person), 15) madloc_hab,
       (SELECT id_content
          FROM occupation o
         WHERE o.id_occupation = pk_patient.get_pat_job(i_id_pat => p.id_patient)) madocupaci,
       psa.flg_job_status pro_trabact,
       death_fetal_prev_preg_live madnacvivos,
       death_fetal_prev_preg_death madnacmuertos,
       s.id_content madescolar,
       pk_adt.get_health_plan_field_mx(i_episode => epis.id_episode, i_flg_main => 'Y', i_field_to_show => 'ID_CONTENT') madderecho,
       pk_adt.get_health_plan_field_mx(i_episode       => epis.id_episode,
                                       i_flg_main      => 'Y',
                                       i_field_to_show => 'AFFILIATION_NUMBER') madafiliac,
       death_fetal_prev_preg_mother madcondic,
       pk_death_registry.get_mother_folio(NULL,
                                          NULL,
                                          death_fetal_prev_preg_mother,
                                          death_fetal_prev_preg_fol_q,
                                          death_fetal_prev_preg_folio) madcerdef,
       --       pk_death_registry.get_death_data_folio(i_patient => vis.id_patient) madcerdef,
       pk_death_registry.get_mx_name_from_list(i_lang     => id_lang,
                                               i_prof     => profissional(NULL, inst.id_institution, 0),
                                               i_value    => death_inf_info_name_q,
                                               i_name     => death_fetal_info_name,
                                               i_flag     => 'Y',
                                               i_group_id => 15544) cernombinfor,
       pk_death_registry.get_mx_name_from_list(i_lang     => id_lang,
                                               i_prof     => profissional(NULL, inst.id_institution, 0),
                                               i_value    => death_inf_info_father_q,
                                               i_name     => death_fetal_info_father,
                                               i_flag     => 'Y',
                                               i_group_id => 15544) pro_apecertinf,
       pk_death_registry.get_mx_name_from_list(i_lang     => id_lang,
                                               i_prof     => profissional(NULL, inst.id_institution, 0),
                                               i_value    => death_inf_info_mother_q,
                                               i_name     => death_fetal_info_mother,
                                               i_flag     => 'Y',
                                               i_group_id => 15544) pro_apemcertinf,
       death_fetal_infor_info_relat defparentinfor,
       death_fetal_cert_info_type cercertifi,
       pk_death_registry.get_cert_order_number(i_lang     => id_lang,
                                               i_prof     => profissional(NULL, inst.id_institution, 0),
                                               i_type     => 'F',
                                               i_question => death_cert_order_num_q,
                                               i_value    => death_certifier_order_number) cercedcertifi,
       pk_death_registry.get_mx_name_from_list(i_lang     => id_lang,
                                               i_prof     => profissional(NULL, inst.id_institution, 0),
                                               i_value    => death_fetal_cert_name_q,
                                               i_name     => death_fetal_cert_name,
                                               i_flag     => 'Y',
                                               i_group_id => 15544) cernombcertifi,
       pk_death_registry.get_mx_name_from_list(i_lang     => id_lang,
                                               i_prof     => profissional(NULL, inst.id_institution, 0),
                                               i_value    => death_fetal_cert_fname_q,
                                               i_name     => death_fetal_cert_father_name,
                                               i_flag     => 'Y',
                                               i_group_id => 15544) pro_apecertifi,
       pk_death_registry.get_mx_name_from_list(i_lang     => id_lang,
                                               i_prof     => profissional(NULL, inst.id_institution, 0),
                                               i_value    => death_fetal_cert_mname_q,
                                               i_name     => death_fetal_cert_mother_name,
                                               i_flag     => 'Y',
                                               i_group_id => 15544) pro_apemcertifi,
       --  death_certifier_name cernombcertifi,
       --  death_certifier_father_name pro_apecertifi,
       --  death_certifier_mother_name pro_apemcertifi,
       pk_death_registry.get_mx_name_from_list(i_lang     => id_lang,
                                               i_prof     => profissional(NULL, inst.id_institution, 0),
                                               i_value    => death_cert_known_address,
                                               i_name     => death_fetal_cert_street,
                                               i_flag     => 'TT',
                                               i_group_id => 15542) cerdomcertifi,
       pk_death_registry.get_mx_name_from_list(i_lang     => id_lang,
                                               i_prof     => profissional(NULL, inst.id_institution, 0),
                                               i_value    => death_cert_known_address,
                                               i_name     => death_certifier_colony,
                                               i_flag     => 'TT',
                                               i_group_id => 15542,
                                               i_id_ne    => 11555) pro_certcol,
       --       death_certifier_street cerdomcertifi,
       --       death_certifier_colony pro_certcol,
       nvl(death_certifier_location,
           pk_death_registry.get_code_by_federal_entity(17, dr.id_death_registry, 'DEATH_CERTIFIER_FEDERAL_ENTITY', 15)) pro_certloc,
       nvl(death_certifier_municipy,
           pk_death_registry.get_code_by_federal_entity(17, dr.id_death_registry, 'DEATH_CERTIFIER_FEDERAL_ENTITY', 10)) pro_certmun,
       nvl(death_certifier_entity,
           pk_death_registry.get_code_by_federal_entity(17, dr.id_death_registry, 'DEATH_CERTIFIER_FEDERAL_ENTITY', 5)) pro_certent,
       death_certifier_phone pro_certtel,
       death_fetal_cert_info_signed pro_certfirm, -------
       substr(death_certifier_date, 7, 2) cerdia_def,
       substr(death_certifier_date, 5, 2) cermes_def,
       substr(death_certifier_date, 1, 4) cerano_def,
       'UNME' usuar_cre,
       pk_date_utils.date_send_tsz(i_lang => pv.id_lang,
                                   i_date => dr.create_time,
                                   i_inst => vis.id_institution,
                                   i_soft => 0) fetfec_cre,
       'UNME' usuar_mod,
       pk_date_utils.date_send_tsz(i_lang => pv.id_lang,
                                   i_date => dr.update_time,
                                   i_inst => vis.id_institution,
                                   i_soft => 0) fetfec_mod,
       '1' idtipohojacertificado,
       --   pk_adt.get_clues_unity_status(i_id_clues => inst.id_clues) edo,
       inst.id_institution id_alert_institution,
       mkt.id_market       id_alert_market,
       epis.id_patient,
       pk_adt.get_rb_reg_classifier_code(i_rb_reg_class => pk_adt.get_clues_id_rb_regional(i_id_clues => NULL, i_id_institution => inst.id_institution), i_rank => 5) EDO_CAPT
  FROM (SELECT 17 id_lang,
               pk_death_registry.get_cause_mx(i_id_death_registry => id_death_registry,
                                              i_rank              => 1,
                                              i_field             => 'ID_DIAGNOSIS') cause_basic,
               pk_death_registry.get_cause_mx(i_id_death_registry => id_death_registry,
                                              i_rank              => 2,
                                              i_field             => 'ID_DIAGNOSIS') cause_1,
               pk_death_registry.get_cause_mx(i_id_death_registry => id_death_registry,
                                              i_rank              => 3,
                                              i_field             => 'ID_DIAGNOSIS') cause_2,
               pk_death_registry.get_cause_mx(i_id_death_registry => id_death_registry,
                                              i_rank              => 4,
                                              i_field             => 'ID_DIAGNOSIS') cause_3,
               pk_death_registry.get_cause_mx(i_id_death_registry => id_death_registry,
                                              i_rank              => 5,
                                              i_field             => 'ID_DIAGNOSIS') cause_4,
               pk_death_registry.get_cause_mx(i_id_death_registry => id_death_registry,
                                              i_rank              => 6,
                                              i_field             => 'ID_DIAGNOSIS') cause_5,
               pk_death_registry.get_cause_mx(i_id_death_registry => id_death_registry,
                                              i_rank              => 7,
                                              i_field             => 'ID_DIAGNOSIS') cause_6,
               xpv.*
          FROM v_death_fetals_pivot xpv
         WHERE rownum > 0) pv
  JOIN death_registry dr
    ON dr.id_death_registry = pv.id_death_registry
  JOIN episode epis
    ON epis.id_episode = dr.id_episode
  JOIN visit vis
    ON vis.id_visit = epis.id_visit
  JOIN patient p
    ON p.id_patient = vis.id_patient
  JOIN v_obstetric_index voi
    ON voi.id_patient = vis.id_patient
  JOIN institution inst
    ON inst.id_institution = vis.id_institution
  JOIN market mkt
    ON inst.id_market = mkt.id_market
  LEFT JOIN pat_soc_attributes psa
    ON psa.id_patient = p.id_patient
   AND psa.id_institution = vis.id_institution
  LEFT JOIN country ctry
    ON ctry.id_country = psa.id_country_nation
  LEFT JOIN v_contact_address_mx ca
    ON ca.id_contact_entity = p.id_person
   AND ca.flg_main_address = 'Y'
  LEFT JOIN country cd
    ON cd.id_country = ca.id_country
  LEFT JOIN scholarship s
    ON s.id_scholarship = psa.id_scholarship;
