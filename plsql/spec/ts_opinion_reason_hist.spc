/*-- Last Change Revision: $Rev: 1941611 $*/
/*-- Last Change by: $Author: diogo.oliveira $*/
/*-- Date of last change: $Date: 2020-03-20 09:21:15 +0000 (sex, 20 mar 2020) $*/
CREATE OR REPLACE PACKAGE ts_opinion_reason_hist
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2020-03-19 14:20:26
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on opinion_reason_hist
    TYPE opinion_reason_hist_tc IS TABLE OF opinion_reason_hist%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE opinion_reason_hist_ntt IS TABLE OF opinion_reason_hist%ROWTYPE;
    TYPE opinion_reason_hist_vat IS VARRAY(100) OF opinion_reason_hist%ROWTYPE;

    -- Column Collection based on column ID_OPINION_HIST
    TYPE id_opinion_hist_cc IS TABLE OF opinion_reason_hist.id_opinion_hist%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_DIAGNOSIS
    TYPE id_diagnosis_cc IS TABLE OF opinion_reason_hist.id_diagnosis%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_PROF_CREATED_HIST
    TYPE id_prof_created_hist_cc IS TABLE OF opinion_reason_hist.id_prof_created_hist%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column DT_CREATED_HIST
    TYPE dt_created_hist_cc IS TABLE OF opinion_reason_hist.dt_created_hist%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_USER
    TYPE create_user_cc IS TABLE OF opinion_reason_hist.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_TIME
    TYPE create_time_cc IS TABLE OF opinion_reason_hist.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_INSTITUTION
    TYPE create_institution_cc IS TABLE OF opinion_reason_hist.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_USER
    TYPE update_user_cc IS TABLE OF opinion_reason_hist.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_TIME
    TYPE update_time_cc IS TABLE OF opinion_reason_hist.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_INSTITUTION
    TYPE update_institution_cc IS TABLE OF opinion_reason_hist.update_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column DIAGNOSIS_DESC
    TYPE diagnosis_desc_cc IS TABLE OF opinion_reason_hist.diagnosis_desc%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present (with rows_out)
    PROCEDURE ins
    (
        id_opinion_hist_in      IN opinion_reason_hist.id_opinion_hist%TYPE,
        id_diagnosis_in         IN opinion_reason_hist.id_diagnosis%TYPE,
        id_prof_created_hist_in IN opinion_reason_hist.id_prof_created_hist%TYPE DEFAULT NULL,
        dt_created_hist_in      IN opinion_reason_hist.dt_created_hist%TYPE DEFAULT NULL,
        create_user_in          IN opinion_reason_hist.create_user%TYPE DEFAULT NULL,
        create_time_in          IN opinion_reason_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN opinion_reason_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN opinion_reason_hist.update_user%TYPE DEFAULT NULL,
        update_time_in          IN opinion_reason_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN opinion_reason_hist.update_institution%TYPE DEFAULT NULL,
        diagnosis_desc_in       IN opinion_reason_hist.diagnosis_desc%TYPE DEFAULT NULL,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    );

    -- Insert one row, providing primary key if present (without rows_out)
    PROCEDURE ins
    (
        id_opinion_hist_in      IN opinion_reason_hist.id_opinion_hist%TYPE,
        id_diagnosis_in         IN opinion_reason_hist.id_diagnosis%TYPE,
        id_prof_created_hist_in IN opinion_reason_hist.id_prof_created_hist%TYPE DEFAULT NULL,
        dt_created_hist_in      IN opinion_reason_hist.dt_created_hist%TYPE DEFAULT NULL,
        create_user_in          IN opinion_reason_hist.create_user%TYPE DEFAULT NULL,
        create_time_in          IN opinion_reason_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN opinion_reason_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN opinion_reason_hist.update_user%TYPE DEFAULT NULL,
        update_time_in          IN opinion_reason_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN opinion_reason_hist.update_institution%TYPE DEFAULT NULL,
        diagnosis_desc_in       IN opinion_reason_hist.diagnosis_desc%TYPE DEFAULT NULL,
        handle_error_in         IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN opinion_reason_hist%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN opinion_reason_hist%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN opinion_reason_hist_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN opinion_reason_hist_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_opinion_hist_in       IN opinion_reason_hist.id_opinion_hist%TYPE,
        id_diagnosis_in          IN opinion_reason_hist.id_diagnosis%TYPE,
        id_prof_created_hist_in  IN opinion_reason_hist.id_prof_created_hist%TYPE DEFAULT NULL,
        id_prof_created_hist_nin IN BOOLEAN := TRUE,
        dt_created_hist_in       IN opinion_reason_hist.dt_created_hist%TYPE DEFAULT NULL,
        dt_created_hist_nin      IN BOOLEAN := TRUE,
        create_user_in           IN opinion_reason_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin          IN BOOLEAN := TRUE,
        create_time_in           IN opinion_reason_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin          IN BOOLEAN := TRUE,
        create_institution_in    IN opinion_reason_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin   IN BOOLEAN := TRUE,
        update_user_in           IN opinion_reason_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin          IN BOOLEAN := TRUE,
        update_time_in           IN opinion_reason_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin          IN BOOLEAN := TRUE,
        update_institution_in    IN opinion_reason_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin   IN BOOLEAN := TRUE,
        diagnosis_desc_in        IN opinion_reason_hist.diagnosis_desc%TYPE DEFAULT NULL,
        diagnosis_desc_nin       IN BOOLEAN := TRUE,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 IN OUT table_varchar
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_opinion_hist_in       IN opinion_reason_hist.id_opinion_hist%TYPE,
        id_diagnosis_in          IN opinion_reason_hist.id_diagnosis%TYPE,
        id_prof_created_hist_in  IN opinion_reason_hist.id_prof_created_hist%TYPE DEFAULT NULL,
        id_prof_created_hist_nin IN BOOLEAN := TRUE,
        dt_created_hist_in       IN opinion_reason_hist.dt_created_hist%TYPE DEFAULT NULL,
        dt_created_hist_nin      IN BOOLEAN := TRUE,
        create_user_in           IN opinion_reason_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin          IN BOOLEAN := TRUE,
        create_time_in           IN opinion_reason_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin          IN BOOLEAN := TRUE,
        create_institution_in    IN opinion_reason_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin   IN BOOLEAN := TRUE,
        update_user_in           IN opinion_reason_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin          IN BOOLEAN := TRUE,
        update_time_in           IN opinion_reason_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin          IN BOOLEAN := TRUE,
        update_institution_in    IN opinion_reason_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin   IN BOOLEAN := TRUE,
        diagnosis_desc_in        IN opinion_reason_hist.diagnosis_desc%TYPE DEFAULT NULL,
        diagnosis_desc_nin       IN BOOLEAN := TRUE,
        handle_error_in          IN BOOLEAN := TRUE
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_prof_created_hist_in  IN opinion_reason_hist.id_prof_created_hist%TYPE DEFAULT NULL,
        id_prof_created_hist_nin IN BOOLEAN := TRUE,
        dt_created_hist_in       IN opinion_reason_hist.dt_created_hist%TYPE DEFAULT NULL,
        dt_created_hist_nin      IN BOOLEAN := TRUE,
        create_user_in           IN opinion_reason_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin          IN BOOLEAN := TRUE,
        create_time_in           IN opinion_reason_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin          IN BOOLEAN := TRUE,
        create_institution_in    IN opinion_reason_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin   IN BOOLEAN := TRUE,
        update_user_in           IN opinion_reason_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin          IN BOOLEAN := TRUE,
        update_time_in           IN opinion_reason_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin          IN BOOLEAN := TRUE,
        update_institution_in    IN opinion_reason_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin   IN BOOLEAN := TRUE,
        diagnosis_desc_in        IN opinion_reason_hist.diagnosis_desc%TYPE DEFAULT NULL,
        diagnosis_desc_nin       IN BOOLEAN := TRUE,
        where_in                 IN VARCHAR2,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 IN OUT table_varchar
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_prof_created_hist_in  IN opinion_reason_hist.id_prof_created_hist%TYPE DEFAULT NULL,
        id_prof_created_hist_nin IN BOOLEAN := TRUE,
        dt_created_hist_in       IN opinion_reason_hist.dt_created_hist%TYPE DEFAULT NULL,
        dt_created_hist_nin      IN BOOLEAN := TRUE,
        create_user_in           IN opinion_reason_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin          IN BOOLEAN := TRUE,
        create_time_in           IN opinion_reason_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin          IN BOOLEAN := TRUE,
        create_institution_in    IN opinion_reason_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin   IN BOOLEAN := TRUE,
        update_user_in           IN opinion_reason_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin          IN BOOLEAN := TRUE,
        update_time_in           IN opinion_reason_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin          IN BOOLEAN := TRUE,
        update_institution_in    IN opinion_reason_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin   IN BOOLEAN := TRUE,
        diagnosis_desc_in        IN opinion_reason_hist.diagnosis_desc%TYPE DEFAULT NULL,
        diagnosis_desc_nin       IN BOOLEAN := TRUE,
        where_in                 IN VARCHAR2,
        handle_error_in          IN BOOLEAN := TRUE
    );

    --Update/insert with columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_opinion_hist_in      IN opinion_reason_hist.id_opinion_hist%TYPE,
        id_diagnosis_in         IN opinion_reason_hist.id_diagnosis%TYPE,
        id_prof_created_hist_in IN opinion_reason_hist.id_prof_created_hist%TYPE DEFAULT NULL,
        dt_created_hist_in      IN opinion_reason_hist.dt_created_hist%TYPE DEFAULT NULL,
        create_user_in          IN opinion_reason_hist.create_user%TYPE DEFAULT NULL,
        create_time_in          IN opinion_reason_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN opinion_reason_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN opinion_reason_hist.update_user%TYPE DEFAULT NULL,
        update_time_in          IN opinion_reason_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN opinion_reason_hist.update_institution%TYPE DEFAULT NULL,
        diagnosis_desc_in       IN opinion_reason_hist.diagnosis_desc%TYPE DEFAULT NULL,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                IN OUT table_varchar
    );

    --Update/insert with columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_opinion_hist_in      IN opinion_reason_hist.id_opinion_hist%TYPE,
        id_diagnosis_in         IN opinion_reason_hist.id_diagnosis%TYPE,
        id_prof_created_hist_in IN opinion_reason_hist.id_prof_created_hist%TYPE DEFAULT NULL,
        dt_created_hist_in      IN opinion_reason_hist.dt_created_hist%TYPE DEFAULT NULL,
        create_user_in          IN opinion_reason_hist.create_user%TYPE DEFAULT NULL,
        create_time_in          IN opinion_reason_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN opinion_reason_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN opinion_reason_hist.update_user%TYPE DEFAULT NULL,
        update_time_in          IN opinion_reason_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN opinion_reason_hist.update_institution%TYPE DEFAULT NULL,
        diagnosis_desc_in       IN opinion_reason_hist.diagnosis_desc%TYPE DEFAULT NULL,
        handle_error_in         IN BOOLEAN := TRUE
    );

    --Update record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN opinion_reason_hist%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    --Update record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN opinion_reason_hist%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    --Update collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN opinion_reason_hist_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    --Update collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN opinion_reason_hist_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    --increment column value
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_opinion_hist_in IN opinion_reason_hist.id_opinion_hist%TYPE,
        id_diagnosis_in    IN opinion_reason_hist.id_diagnosis%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_opinion_hist_in IN opinion_reason_hist.id_opinion_hist%TYPE,
        id_diagnosis_in    IN opinion_reason_hist.id_diagnosis%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this OPRH_OPNH_FK foreign key value
    PROCEDURE del_oprh_opnh_fk
    (
        id_opinion_hist_in IN opinion_reason_hist.id_opinion_hist%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    -- Delete all rows for this OPRH_OPNH_FK foreign key value
    PROCEDURE del_oprh_opnh_fk
    (
        id_opinion_hist_in IN opinion_reason_hist.id_opinion_hist%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(opinion_reason_hist_inout IN OUT opinion_reason_hist%ROWTYPE);

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN opinion_reason_hist%ROWTYPE;

    -- Get data rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN opinion_reason_hist_tc;

    -- Get data rowid pragma autonomous transaccion
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN opinion_reason_hist_tc;

END ts_opinion_reason_hist;
/
