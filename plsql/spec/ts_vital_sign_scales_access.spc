/*-- Last Change Revision: $Rev: 1683523 $*/
/*-- Last Change by: $Author: luis.r.silva $*/
/*-- Date of last change: $Date: 2015-02-04 16:57:36 +0000 (qua, 04 fev 2015) $*/
CREATE OR REPLACE PACKAGE ts_vital_sign_scales_access
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Janeiro 22, 2015 10:46:22
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on "VITAL_SIGN_SCALES_ACCESS"
    TYPE vital_sign_scales_access_tc IS TABLE OF vital_sign_scales_access%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE vital_sign_scales_access_ntt IS TABLE OF vital_sign_scales_access%ROWTYPE;
    TYPE vital_sign_scales_access_vat IS VARRAY(100) OF vital_sign_scales_access%ROWTYPE;

    -- Same type structure, with a static name.
    TYPE aat IS TABLE OF vital_sign_scales_access%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE ntt IS TABLE OF vital_sign_scales_access%ROWTYPE;
    TYPE vat IS VARRAY(100) OF vital_sign_scales_access%ROWTYPE;

    -- Column Collection based on column "ID_VITAL_SIGN_SCALES_ACCESS"
    TYPE id_vital_sign_scales_access_cc IS TABLE OF vital_sign_scales_access.id_vital_sign_scales_access%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_VITAL_SIGN_SCALES"
    TYPE id_vital_sign_scales_cc IS TABLE OF vital_sign_scales_access.id_vital_sign_scales%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_INSTITUTION"
    TYPE id_institution_cc IS TABLE OF vital_sign_scales_access.id_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_SOFTWARE"
    TYPE id_software_cc IS TABLE OF vital_sign_scales_access.id_software%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_AVAILABLE"
    TYPE flg_available_cc IS TABLE OF vital_sign_scales_access.flg_available%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ADW_LAST_UPDATE"
    TYPE adw_last_update_cc IS TABLE OF vital_sign_scales_access.adw_last_update%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_USER"
    TYPE create_user_cc IS TABLE OF vital_sign_scales_access.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_TIME"
    TYPE create_time_cc IS TABLE OF vital_sign_scales_access.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_INSTITUTION"
    TYPE create_institution_cc IS TABLE OF vital_sign_scales_access.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_USER"
    TYPE update_user_cc IS TABLE OF vital_sign_scales_access.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_TIME"
    TYPE update_time_cc IS TABLE OF vital_sign_scales_access.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_INSTITUTION"
    TYPE update_institution_cc IS TABLE OF vital_sign_scales_access.update_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "RANK"
    TYPE rank_cc IS TABLE OF vital_sign_scales_access.rank%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present
    PROCEDURE ins
    (
        id_vital_sign_scales_access_in IN vital_sign_scales_access.id_vital_sign_scales_access%TYPE,
        id_vital_sign_scales_in        IN vital_sign_scales_access.id_vital_sign_scales%TYPE DEFAULT NULL,
        id_institution_in              IN vital_sign_scales_access.id_institution%TYPE DEFAULT NULL,
        id_software_in                 IN vital_sign_scales_access.id_software%TYPE DEFAULT NULL,
        flg_available_in               IN vital_sign_scales_access.flg_available%TYPE DEFAULT NULL,
        adw_last_update_in             IN vital_sign_scales_access.adw_last_update%TYPE DEFAULT SYSDATE,
        create_user_in                 IN vital_sign_scales_access.create_user%TYPE DEFAULT NULL,
        create_time_in                 IN vital_sign_scales_access.create_time%TYPE DEFAULT NULL,
        create_institution_in          IN vital_sign_scales_access.create_institution%TYPE DEFAULT NULL,
        update_user_in                 IN vital_sign_scales_access.update_user%TYPE DEFAULT NULL,
        update_time_in                 IN vital_sign_scales_access.update_time%TYPE DEFAULT NULL,
        update_institution_in          IN vital_sign_scales_access.update_institution%TYPE DEFAULT NULL,
        rank_in                        IN vital_sign_scales_access.rank%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_vital_sign_scales_access_in IN vital_sign_scales_access.id_vital_sign_scales_access%TYPE,
        id_vital_sign_scales_in        IN vital_sign_scales_access.id_vital_sign_scales%TYPE DEFAULT NULL,
        id_institution_in              IN vital_sign_scales_access.id_institution%TYPE DEFAULT NULL,
        id_software_in                 IN vital_sign_scales_access.id_software%TYPE DEFAULT NULL,
        flg_available_in               IN vital_sign_scales_access.flg_available%TYPE DEFAULT NULL,
        adw_last_update_in             IN vital_sign_scales_access.adw_last_update%TYPE DEFAULT SYSDATE,
        create_user_in                 IN vital_sign_scales_access.create_user%TYPE DEFAULT NULL,
        create_time_in                 IN vital_sign_scales_access.create_time%TYPE DEFAULT NULL,
        create_institution_in          IN vital_sign_scales_access.create_institution%TYPE DEFAULT NULL,
        update_user_in                 IN vital_sign_scales_access.update_user%TYPE DEFAULT NULL,
        update_time_in                 IN vital_sign_scales_access.update_time%TYPE DEFAULT NULL,
        update_institution_in          IN vital_sign_scales_access.update_institution%TYPE DEFAULT NULL,
        rank_in                        IN vital_sign_scales_access.rank%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record.
    -- Specify whether or not a primary key value should be generated.
    PROCEDURE ins
    (
        rec_in          IN vital_sign_scales_access%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rec_in          IN vital_sign_scales_access%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers.
    PROCEDURE ins
    (
        rows_in         IN vital_sign_scales_access_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rows_in         IN vital_sign_scales_access_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Return next primary key value using the named sequence.
    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN vital_sign_scales_access.id_vital_sign_scales_access%TYPE;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_vital_sign_scales_in IN vital_sign_scales_access.id_vital_sign_scales%TYPE DEFAULT NULL,
        id_institution_in       IN vital_sign_scales_access.id_institution%TYPE DEFAULT NULL,
        id_software_in          IN vital_sign_scales_access.id_software%TYPE DEFAULT NULL,
        flg_available_in        IN vital_sign_scales_access.flg_available%TYPE DEFAULT NULL,
        adw_last_update_in      IN vital_sign_scales_access.adw_last_update%TYPE DEFAULT SYSDATE,
        create_user_in          IN vital_sign_scales_access.create_user%TYPE DEFAULT NULL,
        create_time_in          IN vital_sign_scales_access.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN vital_sign_scales_access.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN vital_sign_scales_access.update_user%TYPE DEFAULT NULL,
        update_time_in          IN vital_sign_scales_access.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN vital_sign_scales_access.update_institution%TYPE DEFAULT NULL,
        rank_in                 IN vital_sign_scales_access.rank%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_vital_sign_scales_in IN vital_sign_scales_access.id_vital_sign_scales%TYPE DEFAULT NULL,
        id_institution_in       IN vital_sign_scales_access.id_institution%TYPE DEFAULT NULL,
        id_software_in          IN vital_sign_scales_access.id_software%TYPE DEFAULT NULL,
        flg_available_in        IN vital_sign_scales_access.flg_available%TYPE DEFAULT NULL,
        adw_last_update_in      IN vital_sign_scales_access.adw_last_update%TYPE DEFAULT SYSDATE,
        create_user_in          IN vital_sign_scales_access.create_user%TYPE DEFAULT NULL,
        create_time_in          IN vital_sign_scales_access.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN vital_sign_scales_access.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN vital_sign_scales_access.update_user%TYPE DEFAULT NULL,
        update_time_in          IN vital_sign_scales_access.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN vital_sign_scales_access.update_institution%TYPE DEFAULT NULL,
        rank_in                 IN vital_sign_scales_access.rank%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_vital_sign_scales_in IN vital_sign_scales_access.id_vital_sign_scales%TYPE DEFAULT NULL,
        id_institution_in       IN vital_sign_scales_access.id_institution%TYPE DEFAULT NULL,
        id_software_in          IN vital_sign_scales_access.id_software%TYPE DEFAULT NULL,
        flg_available_in        IN vital_sign_scales_access.flg_available%TYPE DEFAULT NULL,
        adw_last_update_in      IN vital_sign_scales_access.adw_last_update%TYPE DEFAULT SYSDATE,
        create_user_in          IN vital_sign_scales_access.create_user%TYPE DEFAULT NULL,
        create_time_in          IN vital_sign_scales_access.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN vital_sign_scales_access.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN vital_sign_scales_access.update_user%TYPE DEFAULT NULL,
        update_time_in          IN vital_sign_scales_access.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN vital_sign_scales_access.update_institution%TYPE DEFAULT NULL,
        rank_in                 IN vital_sign_scales_access.rank%TYPE DEFAULT NULL,
        id_vssa_out             IN OUT vital_sign_scales_access.id_vital_sign_scales_access%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_vital_sign_scales_in IN vital_sign_scales_access.id_vital_sign_scales%TYPE DEFAULT NULL,
        id_institution_in       IN vital_sign_scales_access.id_institution%TYPE DEFAULT NULL,
        id_software_in          IN vital_sign_scales_access.id_software%TYPE DEFAULT NULL,
        flg_available_in        IN vital_sign_scales_access.flg_available%TYPE DEFAULT NULL,
        adw_last_update_in      IN vital_sign_scales_access.adw_last_update%TYPE DEFAULT SYSDATE,
        create_user_in          IN vital_sign_scales_access.create_user%TYPE DEFAULT NULL,
        create_time_in          IN vital_sign_scales_access.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN vital_sign_scales_access.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN vital_sign_scales_access.update_user%TYPE DEFAULT NULL,
        update_time_in          IN vital_sign_scales_access.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN vital_sign_scales_access.update_institution%TYPE DEFAULT NULL,
        rank_in                 IN vital_sign_scales_access.rank%TYPE DEFAULT NULL,
        id_vssa_out             IN OUT vital_sign_scales_access.id_vital_sign_scales_access%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_vital_sign_scales_in IN vital_sign_scales_access.id_vital_sign_scales%TYPE DEFAULT NULL,
        id_institution_in       IN vital_sign_scales_access.id_institution%TYPE DEFAULT NULL,
        id_software_in          IN vital_sign_scales_access.id_software%TYPE DEFAULT NULL,
        flg_available_in        IN vital_sign_scales_access.flg_available%TYPE DEFAULT NULL,
        adw_last_update_in      IN vital_sign_scales_access.adw_last_update%TYPE DEFAULT SYSDATE,
        create_user_in          IN vital_sign_scales_access.create_user%TYPE DEFAULT NULL,
        create_time_in          IN vital_sign_scales_access.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN vital_sign_scales_access.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN vital_sign_scales_access.update_user%TYPE DEFAULT NULL,
        update_time_in          IN vital_sign_scales_access.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN vital_sign_scales_access.update_institution%TYPE DEFAULT NULL,
        rank_in                 IN vital_sign_scales_access.rank%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN vital_sign_scales_access.id_vital_sign_scales_access%TYPE;

    FUNCTION ins
    (
        id_vital_sign_scales_in IN vital_sign_scales_access.id_vital_sign_scales%TYPE DEFAULT NULL,
        id_institution_in       IN vital_sign_scales_access.id_institution%TYPE DEFAULT NULL,
        id_software_in          IN vital_sign_scales_access.id_software%TYPE DEFAULT NULL,
        flg_available_in        IN vital_sign_scales_access.flg_available%TYPE DEFAULT NULL,
        adw_last_update_in      IN vital_sign_scales_access.adw_last_update%TYPE DEFAULT SYSDATE,
        create_user_in          IN vital_sign_scales_access.create_user%TYPE DEFAULT NULL,
        create_time_in          IN vital_sign_scales_access.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN vital_sign_scales_access.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN vital_sign_scales_access.update_user%TYPE DEFAULT NULL,
        update_time_in          IN vital_sign_scales_access.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN vital_sign_scales_access.update_institution%TYPE DEFAULT NULL,
        rank_in                 IN vital_sign_scales_access.rank%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN vital_sign_scales_access.id_vital_sign_scales_access%TYPE;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.

    PROCEDURE upd
    (
        id_vital_sign_scales_access_in IN vital_sign_scales_access.id_vital_sign_scales_access%TYPE,
        id_vital_sign_scales_in        IN vital_sign_scales_access.id_vital_sign_scales%TYPE DEFAULT NULL,
        id_vital_sign_scales_nin       IN BOOLEAN := TRUE,
        id_institution_in              IN vital_sign_scales_access.id_institution%TYPE DEFAULT NULL,
        id_institution_nin             IN BOOLEAN := TRUE,
        id_software_in                 IN vital_sign_scales_access.id_software%TYPE DEFAULT NULL,
        id_software_nin                IN BOOLEAN := TRUE,
        flg_available_in               IN vital_sign_scales_access.flg_available%TYPE DEFAULT NULL,
        flg_available_nin              IN BOOLEAN := TRUE,
        adw_last_update_in             IN vital_sign_scales_access.adw_last_update%TYPE DEFAULT NULL,
        adw_last_update_nin            IN BOOLEAN := TRUE,
        create_user_in                 IN vital_sign_scales_access.create_user%TYPE DEFAULT NULL,
        create_user_nin                IN BOOLEAN := TRUE,
        create_time_in                 IN vital_sign_scales_access.create_time%TYPE DEFAULT NULL,
        create_time_nin                IN BOOLEAN := TRUE,
        create_institution_in          IN vital_sign_scales_access.create_institution%TYPE DEFAULT NULL,
        create_institution_nin         IN BOOLEAN := TRUE,
        update_user_in                 IN vital_sign_scales_access.update_user%TYPE DEFAULT NULL,
        update_user_nin                IN BOOLEAN := TRUE,
        update_time_in                 IN vital_sign_scales_access.update_time%TYPE DEFAULT NULL,
        update_time_nin                IN BOOLEAN := TRUE,
        update_institution_in          IN vital_sign_scales_access.update_institution%TYPE DEFAULT NULL,
        update_institution_nin         IN BOOLEAN := TRUE,
        rank_in                        IN vital_sign_scales_access.rank%TYPE DEFAULT NULL,
        rank_nin                       IN BOOLEAN := TRUE,
        handle_error_in                IN BOOLEAN := TRUE,
        rows_out                       IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_vital_sign_scales_access_in IN vital_sign_scales_access.id_vital_sign_scales_access%TYPE,
        id_vital_sign_scales_in        IN vital_sign_scales_access.id_vital_sign_scales%TYPE DEFAULT NULL,
        id_vital_sign_scales_nin       IN BOOLEAN := TRUE,
        id_institution_in              IN vital_sign_scales_access.id_institution%TYPE DEFAULT NULL,
        id_institution_nin             IN BOOLEAN := TRUE,
        id_software_in                 IN vital_sign_scales_access.id_software%TYPE DEFAULT NULL,
        id_software_nin                IN BOOLEAN := TRUE,
        flg_available_in               IN vital_sign_scales_access.flg_available%TYPE DEFAULT NULL,
        flg_available_nin              IN BOOLEAN := TRUE,
        adw_last_update_in             IN vital_sign_scales_access.adw_last_update%TYPE DEFAULT NULL,
        adw_last_update_nin            IN BOOLEAN := TRUE,
        create_user_in                 IN vital_sign_scales_access.create_user%TYPE DEFAULT NULL,
        create_user_nin                IN BOOLEAN := TRUE,
        create_time_in                 IN vital_sign_scales_access.create_time%TYPE DEFAULT NULL,
        create_time_nin                IN BOOLEAN := TRUE,
        create_institution_in          IN vital_sign_scales_access.create_institution%TYPE DEFAULT NULL,
        create_institution_nin         IN BOOLEAN := TRUE,
        update_user_in                 IN vital_sign_scales_access.update_user%TYPE DEFAULT NULL,
        update_user_nin                IN BOOLEAN := TRUE,
        update_time_in                 IN vital_sign_scales_access.update_time%TYPE DEFAULT NULL,
        update_time_nin                IN BOOLEAN := TRUE,
        update_institution_in          IN vital_sign_scales_access.update_institution%TYPE DEFAULT NULL,
        update_institution_nin         IN BOOLEAN := TRUE,
        rank_in                        IN vital_sign_scales_access.rank%TYPE DEFAULT NULL,
        rank_nin                       IN BOOLEAN := TRUE,
        handle_error_in                IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        id_vital_sign_scales_in  IN vital_sign_scales_access.id_vital_sign_scales%TYPE DEFAULT NULL,
        id_vital_sign_scales_nin IN BOOLEAN := TRUE,
        id_institution_in        IN vital_sign_scales_access.id_institution%TYPE DEFAULT NULL,
        id_institution_nin       IN BOOLEAN := TRUE,
        id_software_in           IN vital_sign_scales_access.id_software%TYPE DEFAULT NULL,
        id_software_nin          IN BOOLEAN := TRUE,
        flg_available_in         IN vital_sign_scales_access.flg_available%TYPE DEFAULT NULL,
        flg_available_nin        IN BOOLEAN := TRUE,
        adw_last_update_in       IN vital_sign_scales_access.adw_last_update%TYPE DEFAULT NULL,
        adw_last_update_nin      IN BOOLEAN := TRUE,
        create_user_in           IN vital_sign_scales_access.create_user%TYPE DEFAULT NULL,
        create_user_nin          IN BOOLEAN := TRUE,
        create_time_in           IN vital_sign_scales_access.create_time%TYPE DEFAULT NULL,
        create_time_nin          IN BOOLEAN := TRUE,
        create_institution_in    IN vital_sign_scales_access.create_institution%TYPE DEFAULT NULL,
        create_institution_nin   IN BOOLEAN := TRUE,
        update_user_in           IN vital_sign_scales_access.update_user%TYPE DEFAULT NULL,
        update_user_nin          IN BOOLEAN := TRUE,
        update_time_in           IN vital_sign_scales_access.update_time%TYPE DEFAULT NULL,
        update_time_nin          IN BOOLEAN := TRUE,
        update_institution_in    IN vital_sign_scales_access.update_institution%TYPE DEFAULT NULL,
        update_institution_nin   IN BOOLEAN := TRUE,
        rank_in                  IN vital_sign_scales_access.rank%TYPE DEFAULT NULL,
        rank_nin                 IN BOOLEAN := TRUE,
        where_in                 VARCHAR2,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_vital_sign_scales_in  IN vital_sign_scales_access.id_vital_sign_scales%TYPE DEFAULT NULL,
        id_vital_sign_scales_nin IN BOOLEAN := TRUE,
        id_institution_in        IN vital_sign_scales_access.id_institution%TYPE DEFAULT NULL,
        id_institution_nin       IN BOOLEAN := TRUE,
        id_software_in           IN vital_sign_scales_access.id_software%TYPE DEFAULT NULL,
        id_software_nin          IN BOOLEAN := TRUE,
        flg_available_in         IN vital_sign_scales_access.flg_available%TYPE DEFAULT NULL,
        flg_available_nin        IN BOOLEAN := TRUE,
        adw_last_update_in       IN vital_sign_scales_access.adw_last_update%TYPE DEFAULT NULL,
        adw_last_update_nin      IN BOOLEAN := TRUE,
        create_user_in           IN vital_sign_scales_access.create_user%TYPE DEFAULT NULL,
        create_user_nin          IN BOOLEAN := TRUE,
        create_time_in           IN vital_sign_scales_access.create_time%TYPE DEFAULT NULL,
        create_time_nin          IN BOOLEAN := TRUE,
        create_institution_in    IN vital_sign_scales_access.create_institution%TYPE DEFAULT NULL,
        create_institution_nin   IN BOOLEAN := TRUE,
        update_user_in           IN vital_sign_scales_access.update_user%TYPE DEFAULT NULL,
        update_user_nin          IN BOOLEAN := TRUE,
        update_time_in           IN vital_sign_scales_access.update_time%TYPE DEFAULT NULL,
        update_time_nin          IN BOOLEAN := TRUE,
        update_institution_in    IN vital_sign_scales_access.update_institution%TYPE DEFAULT NULL,
        update_institution_nin   IN BOOLEAN := TRUE,
        rank_in                  IN vital_sign_scales_access.rank%TYPE DEFAULT NULL,
        rank_nin                 IN BOOLEAN := TRUE,
        where_in                 VARCHAR2,
        handle_error_in          IN BOOLEAN := TRUE
    );

    PROCEDURE upd_ins
    (
        id_vital_sign_scales_access_in IN vital_sign_scales_access.id_vital_sign_scales_access%TYPE,
        id_vital_sign_scales_in        IN vital_sign_scales_access.id_vital_sign_scales%TYPE DEFAULT NULL,
        id_institution_in              IN vital_sign_scales_access.id_institution%TYPE DEFAULT NULL,
        id_software_in                 IN vital_sign_scales_access.id_software%TYPE DEFAULT NULL,
        flg_available_in               IN vital_sign_scales_access.flg_available%TYPE DEFAULT NULL,
        adw_last_update_in             IN vital_sign_scales_access.adw_last_update%TYPE DEFAULT NULL,
        create_user_in                 IN vital_sign_scales_access.create_user%TYPE DEFAULT NULL,
        create_time_in                 IN vital_sign_scales_access.create_time%TYPE DEFAULT NULL,
        create_institution_in          IN vital_sign_scales_access.create_institution%TYPE DEFAULT NULL,
        update_user_in                 IN vital_sign_scales_access.update_user%TYPE DEFAULT NULL,
        update_time_in                 IN vital_sign_scales_access.update_time%TYPE DEFAULT NULL,
        update_institution_in          IN vital_sign_scales_access.update_institution%TYPE DEFAULT NULL,
        rank_in                        IN vital_sign_scales_access.rank%TYPE DEFAULT NULL,
        handle_error_in                IN BOOLEAN := TRUE,
        rows_out                       OUT table_varchar
    );

    PROCEDURE upd_ins
    (
        id_vital_sign_scales_access_in IN vital_sign_scales_access.id_vital_sign_scales_access%TYPE,
        id_vital_sign_scales_in        IN vital_sign_scales_access.id_vital_sign_scales%TYPE DEFAULT NULL,
        id_institution_in              IN vital_sign_scales_access.id_institution%TYPE DEFAULT NULL,
        id_software_in                 IN vital_sign_scales_access.id_software%TYPE DEFAULT NULL,
        flg_available_in               IN vital_sign_scales_access.flg_available%TYPE DEFAULT NULL,
        adw_last_update_in             IN vital_sign_scales_access.adw_last_update%TYPE DEFAULT NULL,
        create_user_in                 IN vital_sign_scales_access.create_user%TYPE DEFAULT NULL,
        create_time_in                 IN vital_sign_scales_access.create_time%TYPE DEFAULT NULL,
        create_institution_in          IN vital_sign_scales_access.create_institution%TYPE DEFAULT NULL,
        update_user_in                 IN vital_sign_scales_access.update_user%TYPE DEFAULT NULL,
        update_time_in                 IN vital_sign_scales_access.update_time%TYPE DEFAULT NULL,
        update_institution_in          IN vital_sign_scales_access.update_institution%TYPE DEFAULT NULL,
        rank_in                        IN vital_sign_scales_access.rank%TYPE DEFAULT NULL,
        handle_error_in                IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        rec_in          IN vital_sign_scales_access%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    PROCEDURE upd
    (
        rec_in          IN vital_sign_scales_access%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        col_in            IN vital_sign_scales_access_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    PROCEDURE upd
    (
        col_in            IN vital_sign_scales_access_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_vital_sign_scales_access_in IN vital_sign_scales_access.id_vital_sign_scales_access%TYPE,
        handle_error_in                IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_vital_sign_scales_access_in IN vital_sign_scales_access.id_vital_sign_scales_access%TYPE,
        handle_error_in                IN BOOLEAN := TRUE,
        rows_out                       OUT table_varchar
    );

    -- Delete all rows for primary key column ID_VITAL_SIGN_SCALES_ACCESS
    PROCEDURE del_id_vssa
    (
        id_vital_sign_scales_access_in IN vital_sign_scales_access.id_vital_sign_scales_access%TYPE,
        handle_error_in                IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_VITAL_SIGN_SCALES_ACCESS
    PROCEDURE del_id_vssa
    (
        id_vital_sign_scales_access_in IN vital_sign_scales_access.id_vital_sign_scales_access%TYPE,
        handle_error_in                IN BOOLEAN := TRUE,
        rows_out                       OUT table_varchar
    );

    -- Delete all rows for this VSSA_INS_FK foreign key value
    PROCEDURE del_vssa_ins_fk
    (
        id_institution_in IN vital_sign_scales_access.id_institution%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Delete all rows for this VSSA_INS_FK foreign key value
    PROCEDURE del_vssa_ins_fk
    (
        id_institution_in IN vital_sign_scales_access.id_institution%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows for this VSSA_SOF_FK foreign key value
    PROCEDURE del_vssa_sof_fk
    (
        id_software_in  IN vital_sign_scales_access.id_software%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this VSSA_SOF_FK foreign key value
    PROCEDURE del_vssa_sof_fk
    (
        id_software_in  IN vital_sign_scales_access.id_software%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this VSSA_VSS_FK foreign key value
    PROCEDURE del_vssa_vss_fk
    (
        id_vital_sign_scales_in IN vital_sign_scales_access.id_vital_sign_scales%TYPE,
        handle_error_in         IN BOOLEAN := TRUE
    );

    -- Delete all rows for this VSSA_VSS_FK foreign key value
    PROCEDURE del_vssa_vss_fk
    (
        id_vital_sign_scales_in IN vital_sign_scales_access.id_vital_sign_scales%TYPE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(vital_sign_scales_access_inout IN OUT vital_sign_scales_access%ROWTYPE);

    FUNCTION initrec RETURN vital_sign_scales_access%ROWTYPE;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN vital_sign_scales_access_tc;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN vital_sign_scales_access_tc;

END ts_vital_sign_scales_access;
/