/*-- Last Change Revision: $Rev: 2029294 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:50:52 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE TS_PAT_HEALTH_PROGRAM_HIST
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Maio 29, 2009 9:41:36
| Created By: ALERT
*/
IS

  -- Collection of %ROWTYPE records based on "PAT_HEALTH_PROGRAM_HIST"
     TYPE PAT_HEALTH_PROGRAM_HIST_tc IS TABLE OF PAT_HEALTH_PROGRAM_HIST%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE pat_health_program_hist_ntt IS TABLE OF PAT_HEALTH_PROGRAM_HIST%ROWTYPE;
     TYPE pat_health_program_hist_vat IS VARRAY(100) OF PAT_HEALTH_PROGRAM_HIST%ROWTYPE;

  -- Same type structure, with a static name.
     TYPE aat IS TABLE OF PAT_HEALTH_PROGRAM_HIST%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE ntt IS TABLE OF PAT_HEALTH_PROGRAM_HIST%ROWTYPE;
     TYPE vat IS VARRAY(100) OF PAT_HEALTH_PROGRAM_HIST%ROWTYPE;

   -- Column Collection based on column "ID_PAT_HEALTH_PROGRAM"
   TYPE ID_PAT_HEALTH_PROGRAM_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.ID_PAT_HEALTH_PROGRAM%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PATIENT"
   TYPE ID_PATIENT_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.ID_PATIENT%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_HEALTH_PROGRAM"
   TYPE ID_HEALTH_PROGRAM_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.ID_HEALTH_PROGRAM%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_PAT_HPG_TSTZ"
   TYPE DT_PAT_HPG_TSTZ_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.DT_PAT_HPG_TSTZ%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PROFESSIONAL"
   TYPE ID_PROFESSIONAL_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.ID_PROFESSIONAL%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_INSTITUTION"
   TYPE ID_INSTITUTION_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.ID_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_SOFTWARE"
   TYPE ID_SOFTWARE_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.ID_SOFTWARE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_STATUS"
   TYPE FLG_STATUS_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.FLG_STATUS%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_MONITOR_LOC"
   TYPE FLG_MONITOR_LOC_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.FLG_MONITOR_LOC%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_BEGIN_TSTZ"
   TYPE DT_BEGIN_TSTZ_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.DT_BEGIN_TSTZ%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_END_TSTZ"
   TYPE DT_END_TSTZ_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.DT_END_TSTZ%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "NOTES"
   TYPE NOTES_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.NOTES%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_CANCEL_REASON"
   TYPE ID_CANCEL_REASON_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.ID_CANCEL_REASON%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CANCEL_NOTES"
   TYPE CANCEL_NOTES_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.CANCEL_NOTES%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_PAT_HPG_HIST_TSTZ"
   TYPE DT_PAT_HPG_HIST_TSTZ_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.DT_PAT_HPG_HIST_TSTZ%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_OPERATION"
   TYPE FLG_OPERATION_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.FLG_OPERATION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_USER"
   TYPE CREATE_USER_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.CREATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_TIME"
   TYPE CREATE_TIME_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.CREATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_INSTITUTION"
   TYPE CREATE_INSTITUTION_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.CREATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_USER"
   TYPE UPDATE_USER_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.UPDATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_TIME"
   TYPE UPDATE_TIME_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.UPDATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_INSTITUTION"
   TYPE UPDATE_INSTITUTION_cc IS TABLE OF PAT_HEALTH_PROGRAM_HIST.UPDATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;

   -- Insert one row, providing primary key if present
   PROCEDURE ins (
      id_pat_health_program_in IN PAT_HEALTH_PROGRAM_HIST.ID_PAT_HEALTH_PROGRAM%TYPE DEFAULT NULL,
      id_patient_in IN PAT_HEALTH_PROGRAM_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      id_health_program_in IN PAT_HEALTH_PROGRAM_HIST.ID_HEALTH_PROGRAM%TYPE DEFAULT NULL,
      dt_pat_hpg_tstz_in IN PAT_HEALTH_PROGRAM_HIST.DT_PAT_HPG_TSTZ%TYPE DEFAULT NULL,
      id_professional_in IN PAT_HEALTH_PROGRAM_HIST.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      id_institution_in IN PAT_HEALTH_PROGRAM_HIST.ID_INSTITUTION%TYPE DEFAULT NULL,
      id_software_in IN PAT_HEALTH_PROGRAM_HIST.ID_SOFTWARE%TYPE DEFAULT NULL,
      flg_status_in IN PAT_HEALTH_PROGRAM_HIST.FLG_STATUS%TYPE DEFAULT NULL,
      flg_monitor_loc_in IN PAT_HEALTH_PROGRAM_HIST.FLG_MONITOR_LOC%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN PAT_HEALTH_PROGRAM_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN PAT_HEALTH_PROGRAM_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
      notes_in IN PAT_HEALTH_PROGRAM_HIST.NOTES%TYPE DEFAULT NULL,
      id_cancel_reason_in IN PAT_HEALTH_PROGRAM_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      cancel_notes_in IN PAT_HEALTH_PROGRAM_HIST.CANCEL_NOTES%TYPE DEFAULT NULL,
      dt_pat_hpg_hist_tstz_in IN PAT_HEALTH_PROGRAM_HIST.DT_PAT_HPG_HIST_TSTZ%TYPE DEFAULT NULL,
      flg_operation_in IN PAT_HEALTH_PROGRAM_HIST.FLG_OPERATION%TYPE DEFAULT NULL,
      create_user_in IN PAT_HEALTH_PROGRAM_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN PAT_HEALTH_PROGRAM_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN PAT_HEALTH_PROGRAM_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN PAT_HEALTH_PROGRAM_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN PAT_HEALTH_PROGRAM_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN PAT_HEALTH_PROGRAM_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_pat_health_program_in IN PAT_HEALTH_PROGRAM_HIST.ID_PAT_HEALTH_PROGRAM%TYPE DEFAULT NULL,
      id_patient_in IN PAT_HEALTH_PROGRAM_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      id_health_program_in IN PAT_HEALTH_PROGRAM_HIST.ID_HEALTH_PROGRAM%TYPE DEFAULT NULL,
      dt_pat_hpg_tstz_in IN PAT_HEALTH_PROGRAM_HIST.DT_PAT_HPG_TSTZ%TYPE DEFAULT NULL,
      id_professional_in IN PAT_HEALTH_PROGRAM_HIST.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      id_institution_in IN PAT_HEALTH_PROGRAM_HIST.ID_INSTITUTION%TYPE DEFAULT NULL,
      id_software_in IN PAT_HEALTH_PROGRAM_HIST.ID_SOFTWARE%TYPE DEFAULT NULL,
      flg_status_in IN PAT_HEALTH_PROGRAM_HIST.FLG_STATUS%TYPE DEFAULT NULL,
      flg_monitor_loc_in IN PAT_HEALTH_PROGRAM_HIST.FLG_MONITOR_LOC%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN PAT_HEALTH_PROGRAM_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN PAT_HEALTH_PROGRAM_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
      notes_in IN PAT_HEALTH_PROGRAM_HIST.NOTES%TYPE DEFAULT NULL,
      id_cancel_reason_in IN PAT_HEALTH_PROGRAM_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      cancel_notes_in IN PAT_HEALTH_PROGRAM_HIST.CANCEL_NOTES%TYPE DEFAULT NULL,
      dt_pat_hpg_hist_tstz_in IN PAT_HEALTH_PROGRAM_HIST.DT_PAT_HPG_HIST_TSTZ%TYPE DEFAULT NULL,
      flg_operation_in IN PAT_HEALTH_PROGRAM_HIST.FLG_OPERATION%TYPE DEFAULT NULL,
      create_user_in IN PAT_HEALTH_PROGRAM_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN PAT_HEALTH_PROGRAM_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN PAT_HEALTH_PROGRAM_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN PAT_HEALTH_PROGRAM_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN PAT_HEALTH_PROGRAM_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN PAT_HEALTH_PROGRAM_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );


   -- Insert a row based on a record.
   PROCEDURE ins (
      rec_in IN PAT_HEALTH_PROGRAM_HIST%ROWTYPE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rec_in IN PAT_HEALTH_PROGRAM_HIST%ROWTYPE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Insert a collection of rows using FORALL; all primary key values
   -- must have already been generated, or are handled in triggers.
   PROCEDURE ins (
      rows_in IN PAT_HEALTH_PROGRAM_HIST_tc
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rows_in IN PAT_HEALTH_PROGRAM_HIST_tc
     ,handle_error_in IN BOOLEAN := TRUE
   );





   -- Use Native Dynamic SQL increment a single NUMBER column
   -- for all rows specified by the dynamic WHERE clause
   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
   );







   -- Delete all rows for this PHPH_CRE_FK foreign key value
   PROCEDURE del_PHPH_CRE_FK (
      id_cancel_reason_in IN PAT_HEALTH_PROGRAM_HIST.ID_CANCEL_REASON%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this PHPH_CRE_FK foreign key value
   PROCEDURE del_PHPH_CRE_FK (
      id_cancel_reason_in IN PAT_HEALTH_PROGRAM_HIST.ID_CANCEL_REASON%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this PHPH_HPG_FK foreign key value
   PROCEDURE del_PHPH_HPG_FK (
      id_health_program_in IN PAT_HEALTH_PROGRAM_HIST.ID_HEALTH_PROGRAM%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this PHPH_HPG_FK foreign key value
   PROCEDURE del_PHPH_HPG_FK (
      id_health_program_in IN PAT_HEALTH_PROGRAM_HIST.ID_HEALTH_PROGRAM%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this PHPH_INST_FK foreign key value
   PROCEDURE del_PHPH_INST_FK (
      id_institution_in IN PAT_HEALTH_PROGRAM_HIST.ID_INSTITUTION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this PHPH_INST_FK foreign key value
   PROCEDURE del_PHPH_INST_FK (
      id_institution_in IN PAT_HEALTH_PROGRAM_HIST.ID_INSTITUTION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this PHPH_PAT_FK foreign key value
   PROCEDURE del_PHPH_PAT_FK (
      id_patient_in IN PAT_HEALTH_PROGRAM_HIST.ID_PATIENT%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this PHPH_PAT_FK foreign key value
   PROCEDURE del_PHPH_PAT_FK (
      id_patient_in IN PAT_HEALTH_PROGRAM_HIST.ID_PATIENT%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this PHPH_PHPG_FK foreign key value
   PROCEDURE del_PHPH_PHPG_FK (
      id_pat_health_program_in IN PAT_HEALTH_PROGRAM_HIST.ID_PAT_HEALTH_PROGRAM%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this PHPH_PHPG_FK foreign key value
   PROCEDURE del_PHPH_PHPG_FK (
      id_pat_health_program_in IN PAT_HEALTH_PROGRAM_HIST.ID_PAT_HEALTH_PROGRAM%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this PHPH_PROF_FK foreign key value
   PROCEDURE del_PHPH_PROF_FK (
      id_professional_in IN PAT_HEALTH_PROGRAM_HIST.ID_PROFESSIONAL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this PHPH_PROF_FK foreign key value
   PROCEDURE del_PHPH_PROF_FK (
      id_professional_in IN PAT_HEALTH_PROGRAM_HIST.ID_PROFESSIONAL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this PHPH_SOFT_FK foreign key value
   PROCEDURE del_PHPH_SOFT_FK (
      id_software_in IN PAT_HEALTH_PROGRAM_HIST.ID_SOFTWARE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this PHPH_SOFT_FK foreign key value
   PROCEDURE del_PHPH_SOFT_FK (
      id_software_in IN PAT_HEALTH_PROGRAM_HIST.ID_SOFTWARE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );


      -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Initialize a record with default values for columns in the table.
   PROCEDURE initrec (
      pat_health_program_hist_inout IN OUT PAT_HEALTH_PROGRAM_HIST%ROWTYPE
   );

   FUNCTION initrec RETURN PAT_HEALTH_PROGRAM_HIST%ROWTYPE;



   FUNCTION get_data_rowid(
        rows_in IN TABLE_VARCHAR
        ) RETURN PAT_HEALTH_PROGRAM_HIST_tc;


   FUNCTION get_data_rowid_pat(
        rows_in IN TABLE_VARCHAR
        ) RETURN PAT_HEALTH_PROGRAM_HIST_tc;

END TS_PAT_HEALTH_PROGRAM_HIST;
/
