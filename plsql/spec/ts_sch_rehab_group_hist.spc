/*-- Last Change Revision: $Rev: 1856162 $*/
/*-- Last Change by: $Author: diogo.oliveira $*/
/*-- Date of last change: $Date: 2018-07-24 10:17:12 +0100 (ter, 24 jul 2018) $*/
CREATE OR REPLACE PACKAGE TS_SCH_REHAB_GROUP_HIST
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: January 7, 2013 12:10:57
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on sch_rehab_group_hist
    TYPE sch_rehab_group_hist_tc IS TABLE OF sch_rehab_group_hist%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE sch_rehab_group_hist_ntt IS TABLE OF sch_rehab_group_hist%ROWTYPE;
    TYPE sch_rehab_group_hist_vat IS VARRAY(100) OF sch_rehab_group_hist%ROWTYPE;

    -- Column Collection based on column ID_SCHEDULE
    TYPE id_schedule_cc IS TABLE OF sch_rehab_group_hist.id_schedule%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_REHAB_GROUP
    TYPE id_rehab_group_cc IS TABLE OF sch_rehab_group_hist.id_rehab_group%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_USER
    TYPE create_user_cc IS TABLE OF sch_rehab_group_hist.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_TIME
    TYPE create_time_cc IS TABLE OF sch_rehab_group_hist.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_INSTITUTION
    TYPE create_institution_cc IS TABLE OF sch_rehab_group_hist.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_USER
    TYPE update_user_cc IS TABLE OF sch_rehab_group_hist.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_TIME
    TYPE update_time_cc IS TABLE OF sch_rehab_group_hist.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_INSTITUTION
    TYPE update_institution_cc IS TABLE OF sch_rehab_group_hist.update_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column DT_UPDATE
    TYPE dt_update_cc IS TABLE OF sch_rehab_group_hist.dt_update%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_PROF_UPDATE
    TYPE id_prof_update_cc IS TABLE OF sch_rehab_group_hist.id_prof_update%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_REHAB_SCH_NEED
    TYPE id_rehab_sch_need_cc IS TABLE OF sch_rehab_group_hist.id_rehab_sch_need%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present (with rows_out)
    PROCEDURE ins
    (
        id_schedule_in        IN sch_rehab_group_hist.id_schedule%TYPE DEFAULT NULL,
        id_rehab_group_in     IN sch_rehab_group_hist.id_rehab_group%TYPE DEFAULT NULL,
        create_user_in        IN sch_rehab_group_hist.create_user%TYPE DEFAULT NULL,
        create_time_in        IN sch_rehab_group_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in IN sch_rehab_group_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN sch_rehab_group_hist.update_user%TYPE DEFAULT NULL,
        update_time_in        IN sch_rehab_group_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in IN sch_rehab_group_hist.update_institution%TYPE DEFAULT NULL,
        dt_update_in          IN sch_rehab_group_hist.dt_update%TYPE DEFAULT current_timestamp,
        id_prof_update_in     IN sch_rehab_group_hist.id_prof_update%TYPE DEFAULT NULL,
        id_rehab_sch_need_in  IN sch_rehab_group_hist.id_rehab_sch_need%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    );

    -- Insert one row, providing primary key if present (without rows_out)
    PROCEDURE ins
    (
        id_schedule_in        IN sch_rehab_group_hist.id_schedule%TYPE DEFAULT NULL,
        id_rehab_group_in     IN sch_rehab_group_hist.id_rehab_group%TYPE DEFAULT NULL,
        create_user_in        IN sch_rehab_group_hist.create_user%TYPE DEFAULT NULL,
        create_time_in        IN sch_rehab_group_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in IN sch_rehab_group_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN sch_rehab_group_hist.update_user%TYPE DEFAULT NULL,
        update_time_in        IN sch_rehab_group_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in IN sch_rehab_group_hist.update_institution%TYPE DEFAULT NULL,
        dt_update_in          IN sch_rehab_group_hist.dt_update%TYPE DEFAULT current_timestamp,
        id_prof_update_in     IN sch_rehab_group_hist.id_prof_update%TYPE DEFAULT NULL,
        id_rehab_sch_need_in  IN sch_rehab_group_hist.id_rehab_sch_need%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN sch_rehab_group_hist%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN sch_rehab_group_hist%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN sch_rehab_group_hist_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN sch_rehab_group_hist_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_schedule_in         IN sch_rehab_group_hist.id_schedule%TYPE DEFAULT NULL,
        id_schedule_nin        IN BOOLEAN := TRUE,
        id_rehab_group_in      IN sch_rehab_group_hist.id_rehab_group%TYPE DEFAULT NULL,
        id_rehab_group_nin     IN BOOLEAN := TRUE,
        create_user_in         IN sch_rehab_group_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN sch_rehab_group_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN sch_rehab_group_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN sch_rehab_group_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN sch_rehab_group_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN sch_rehab_group_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        dt_update_in           IN sch_rehab_group_hist.dt_update%TYPE DEFAULT NULL,
        dt_update_nin          IN BOOLEAN := TRUE,
        id_prof_update_in      IN sch_rehab_group_hist.id_prof_update%TYPE DEFAULT NULL,
        id_prof_update_nin     IN BOOLEAN := TRUE,
        id_rehab_sch_need_in   IN sch_rehab_group_hist.id_rehab_sch_need%TYPE DEFAULT NULL,
        id_rehab_sch_need_nin  IN BOOLEAN := TRUE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               IN OUT table_varchar
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_schedule_in         IN sch_rehab_group_hist.id_schedule%TYPE DEFAULT NULL,
        id_schedule_nin        IN BOOLEAN := TRUE,
        id_rehab_group_in      IN sch_rehab_group_hist.id_rehab_group%TYPE DEFAULT NULL,
        id_rehab_group_nin     IN BOOLEAN := TRUE,
        create_user_in         IN sch_rehab_group_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN sch_rehab_group_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN sch_rehab_group_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN sch_rehab_group_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN sch_rehab_group_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN sch_rehab_group_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        dt_update_in           IN sch_rehab_group_hist.dt_update%TYPE DEFAULT NULL,
        dt_update_nin          IN BOOLEAN := TRUE,
        id_prof_update_in      IN sch_rehab_group_hist.id_prof_update%TYPE DEFAULT NULL,
        id_prof_update_nin     IN BOOLEAN := TRUE,
        id_rehab_sch_need_in   IN sch_rehab_group_hist.id_rehab_sch_need%TYPE DEFAULT NULL,
        id_rehab_sch_need_nin  IN BOOLEAN := TRUE,
        handle_error_in        IN BOOLEAN := TRUE
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_schedule_in         IN sch_rehab_group_hist.id_schedule%TYPE DEFAULT NULL,
        id_schedule_nin        IN BOOLEAN := TRUE,
        id_rehab_group_in      IN sch_rehab_group_hist.id_rehab_group%TYPE DEFAULT NULL,
        id_rehab_group_nin     IN BOOLEAN := TRUE,
        create_user_in         IN sch_rehab_group_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN sch_rehab_group_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN sch_rehab_group_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN sch_rehab_group_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN sch_rehab_group_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN sch_rehab_group_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        dt_update_in           IN sch_rehab_group_hist.dt_update%TYPE DEFAULT NULL,
        dt_update_nin          IN BOOLEAN := TRUE,
        id_prof_update_in      IN sch_rehab_group_hist.id_prof_update%TYPE DEFAULT NULL,
        id_prof_update_nin     IN BOOLEAN := TRUE,
        id_rehab_sch_need_in   IN sch_rehab_group_hist.id_rehab_sch_need%TYPE DEFAULT NULL,
        id_rehab_sch_need_nin  IN BOOLEAN := TRUE,
        where_in               IN VARCHAR2,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               IN OUT table_varchar
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_schedule_in         IN sch_rehab_group_hist.id_schedule%TYPE DEFAULT NULL,
        id_schedule_nin        IN BOOLEAN := TRUE,
        id_rehab_group_in      IN sch_rehab_group_hist.id_rehab_group%TYPE DEFAULT NULL,
        id_rehab_group_nin     IN BOOLEAN := TRUE,
        create_user_in         IN sch_rehab_group_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN sch_rehab_group_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN sch_rehab_group_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN sch_rehab_group_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN sch_rehab_group_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN sch_rehab_group_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        dt_update_in           IN sch_rehab_group_hist.dt_update%TYPE DEFAULT NULL,
        dt_update_nin          IN BOOLEAN := TRUE,
        id_prof_update_in      IN sch_rehab_group_hist.id_prof_update%TYPE DEFAULT NULL,
        id_prof_update_nin     IN BOOLEAN := TRUE,
        id_rehab_sch_need_in   IN sch_rehab_group_hist.id_rehab_sch_need%TYPE DEFAULT NULL,
        id_rehab_sch_need_nin  IN BOOLEAN := TRUE,
        where_in               IN VARCHAR2,
        handle_error_in        IN BOOLEAN := TRUE
    );

    --Update/insert with columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_schedule_in        IN sch_rehab_group_hist.id_schedule%TYPE DEFAULT NULL,
        id_rehab_group_in     IN sch_rehab_group_hist.id_rehab_group%TYPE DEFAULT NULL,
        create_user_in        IN sch_rehab_group_hist.create_user%TYPE DEFAULT NULL,
        create_time_in        IN sch_rehab_group_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in IN sch_rehab_group_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN sch_rehab_group_hist.update_user%TYPE DEFAULT NULL,
        update_time_in        IN sch_rehab_group_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in IN sch_rehab_group_hist.update_institution%TYPE DEFAULT NULL,
        dt_update_in          IN sch_rehab_group_hist.dt_update%TYPE DEFAULT NULL,
        id_prof_update_in     IN sch_rehab_group_hist.id_prof_update%TYPE DEFAULT NULL,
        id_rehab_sch_need_in  IN sch_rehab_group_hist.id_rehab_sch_need%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              IN OUT table_varchar
    );

    --Update/insert with columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_schedule_in        IN sch_rehab_group_hist.id_schedule%TYPE DEFAULT NULL,
        id_rehab_group_in     IN sch_rehab_group_hist.id_rehab_group%TYPE DEFAULT NULL,
        create_user_in        IN sch_rehab_group_hist.create_user%TYPE DEFAULT NULL,
        create_time_in        IN sch_rehab_group_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in IN sch_rehab_group_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN sch_rehab_group_hist.update_user%TYPE DEFAULT NULL,
        update_time_in        IN sch_rehab_group_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in IN sch_rehab_group_hist.update_institution%TYPE DEFAULT NULL,
        dt_update_in          IN sch_rehab_group_hist.dt_update%TYPE DEFAULT NULL,
        id_prof_update_in     IN sch_rehab_group_hist.id_prof_update%TYPE DEFAULT NULL,
        id_rehab_sch_need_in  IN sch_rehab_group_hist.id_rehab_sch_need%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE
    );

    --Update record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN sch_rehab_group_hist%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    --Update record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN sch_rehab_group_hist%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    --Update collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN sch_rehab_group_hist_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    --Update collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN sch_rehab_group_hist_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    --increment column value
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete one row by primary key
    PROCEDURE del(handle_error_in IN BOOLEAN := TRUE);

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(sch_rehab_group_hist_inout IN OUT sch_rehab_group_hist%ROWTYPE);

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN sch_rehab_group_hist%ROWTYPE;

    -- Get data rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN sch_rehab_group_hist_tc;

    -- Get data rowid pragma autonomous transaccion
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN sch_rehab_group_hist_tc;

END ts_sch_rehab_group_hist;
/
