/*-- Last Change Revision: $Rev: 2029249 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:50:37 +0100 (ter, 02 ago 2022) $*/
CREATE OR REPLACE PACKAGE ts_movement
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Agosto 30, 2010 10:55:35
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on "MOVEMENT"
    TYPE movement_tc IS TABLE OF movement%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE movement_ntt IS TABLE OF movement%ROWTYPE;
    TYPE movement_vat IS VARRAY(100) OF movement%ROWTYPE;

    -- Same type structure, with a static name.
    TYPE aat IS TABLE OF movement%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE ntt IS TABLE OF movement%ROWTYPE;
    TYPE vat IS VARRAY(100) OF movement%ROWTYPE;

    -- Column Collection based on column "ID_MOVEMENT"
    TYPE id_movement_cc IS TABLE OF movement.id_movement%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_EPISODE"
    TYPE id_episode_cc IS TABLE OF movement.id_episode%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROF_REQUEST"
    TYPE id_prof_request_cc IS TABLE OF movement.id_prof_request%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROF_MOVE"
    TYPE id_prof_move_cc IS TABLE OF movement.id_prof_move%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROF_RECEIVE"
    TYPE id_prof_receive_cc IS TABLE OF movement.id_prof_receive%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_STATUS"
    TYPE flg_status_cc IS TABLE OF movement.flg_status%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROF_CANCEL"
    TYPE id_prof_cancel_cc IS TABLE OF movement.id_prof_cancel%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_NECESSITY"
    TYPE id_necessity_cc IS TABLE OF movement.id_necessity%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_ROOM_FROM"
    TYPE id_room_from_cc IS TABLE OF movement.id_room_from%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_ROOM_TO"
    TYPE id_room_to_cc IS TABLE OF movement.id_room_to%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "NOTES_CANCEL"
    TYPE notes_cancel_cc IS TABLE OF movement.notes_cancel%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_EPISODE_WRITE"
    TYPE id_episode_write_cc IS TABLE OF movement.id_episode_write%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_REQ_TSTZ"
    TYPE dt_req_tstz_cc IS TABLE OF movement.dt_req_tstz%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_BEGIN_TSTZ"
    TYPE dt_begin_tstz_cc IS TABLE OF movement.dt_begin_tstz%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_END_TSTZ"
    TYPE dt_end_tstz_cc IS TABLE OF movement.dt_end_tstz%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_CANCEL_TSTZ"
    TYPE dt_cancel_tstz_cc IS TABLE OF movement.dt_cancel_tstz%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_USER"
    TYPE create_user_cc IS TABLE OF movement.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_TIME"
    TYPE create_time_cc IS TABLE OF movement.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_INSTITUTION"
    TYPE create_institution_cc IS TABLE OF movement.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_USER"
    TYPE update_user_cc IS TABLE OF movement.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_TIME"
    TYPE update_time_cc IS TABLE OF movement.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_INSTITUTION"
    TYPE update_institution_cc IS TABLE OF movement.update_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_STATUS_PREV"
    TYPE flg_status_prev_cc IS TABLE OF movement.flg_status_prev%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_MOV_TYPE"
    TYPE flg_mov_type_cc IS TABLE OF movement.flg_mov_type%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present
    PROCEDURE ins
    (
        id_movement_in        IN movement.id_movement%TYPE,
        id_episode_in         IN movement.id_episode%TYPE DEFAULT NULL,
        id_prof_request_in    IN movement.id_prof_request%TYPE DEFAULT NULL,
        id_prof_move_in       IN movement.id_prof_move%TYPE DEFAULT NULL,
        id_prof_receive_in    IN movement.id_prof_receive%TYPE DEFAULT NULL,
        flg_status_in         IN movement.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in     IN movement.id_prof_cancel%TYPE DEFAULT NULL,
        id_necessity_in       IN movement.id_necessity%TYPE DEFAULT NULL,
        id_room_from_in       IN movement.id_room_from%TYPE DEFAULT NULL,
        id_room_to_in         IN movement.id_room_to%TYPE DEFAULT NULL,
        notes_cancel_in       IN movement.notes_cancel%TYPE DEFAULT NULL,
        id_episode_write_in   IN movement.id_episode_write%TYPE DEFAULT NULL,
        dt_req_tstz_in        IN movement.dt_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in      IN movement.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in        IN movement.dt_end_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in     IN movement.dt_cancel_tstz%TYPE DEFAULT NULL,
        create_user_in        IN movement.create_user%TYPE DEFAULT NULL,
        create_time_in        IN movement.create_time%TYPE DEFAULT NULL,
        create_institution_in IN movement.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN movement.update_user%TYPE DEFAULT NULL,
        update_time_in        IN movement.update_time%TYPE DEFAULT NULL,
        update_institution_in IN movement.update_institution%TYPE DEFAULT NULL,
        flg_status_prev_in    IN movement.flg_status_prev%TYPE DEFAULT NULL,
        flg_mov_type_in       IN movement.flg_mov_type%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_movement_in        IN movement.id_movement%TYPE,
        id_episode_in         IN movement.id_episode%TYPE DEFAULT NULL,
        id_prof_request_in    IN movement.id_prof_request%TYPE DEFAULT NULL,
        id_prof_move_in       IN movement.id_prof_move%TYPE DEFAULT NULL,
        id_prof_receive_in    IN movement.id_prof_receive%TYPE DEFAULT NULL,
        flg_status_in         IN movement.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in     IN movement.id_prof_cancel%TYPE DEFAULT NULL,
        id_necessity_in       IN movement.id_necessity%TYPE DEFAULT NULL,
        id_room_from_in       IN movement.id_room_from%TYPE DEFAULT NULL,
        id_room_to_in         IN movement.id_room_to%TYPE DEFAULT NULL,
        notes_cancel_in       IN movement.notes_cancel%TYPE DEFAULT NULL,
        id_episode_write_in   IN movement.id_episode_write%TYPE DEFAULT NULL,
        dt_req_tstz_in        IN movement.dt_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in      IN movement.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in        IN movement.dt_end_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in     IN movement.dt_cancel_tstz%TYPE DEFAULT NULL,
        create_user_in        IN movement.create_user%TYPE DEFAULT NULL,
        create_time_in        IN movement.create_time%TYPE DEFAULT NULL,
        create_institution_in IN movement.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN movement.update_user%TYPE DEFAULT NULL,
        update_time_in        IN movement.update_time%TYPE DEFAULT NULL,
        update_institution_in IN movement.update_institution%TYPE DEFAULT NULL,
        flg_status_prev_in    IN movement.flg_status_prev%TYPE DEFAULT NULL,
        flg_mov_type_in       IN movement.flg_mov_type%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record.
    -- Specify whether or not a primary key value should be generated.
    PROCEDURE ins
    (
        rec_in          IN movement%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rec_in          IN movement%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers.
    PROCEDURE ins
    (
        rows_in         IN movement_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rows_in         IN movement_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Return next primary key value using the named sequence.
    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN movement.id_movement%TYPE;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_episode_in         IN movement.id_episode%TYPE DEFAULT NULL,
        id_prof_request_in    IN movement.id_prof_request%TYPE DEFAULT NULL,
        id_prof_move_in       IN movement.id_prof_move%TYPE DEFAULT NULL,
        id_prof_receive_in    IN movement.id_prof_receive%TYPE DEFAULT NULL,
        flg_status_in         IN movement.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in     IN movement.id_prof_cancel%TYPE DEFAULT NULL,
        id_necessity_in       IN movement.id_necessity%TYPE DEFAULT NULL,
        id_room_from_in       IN movement.id_room_from%TYPE DEFAULT NULL,
        id_room_to_in         IN movement.id_room_to%TYPE DEFAULT NULL,
        notes_cancel_in       IN movement.notes_cancel%TYPE DEFAULT NULL,
        id_episode_write_in   IN movement.id_episode_write%TYPE DEFAULT NULL,
        dt_req_tstz_in        IN movement.dt_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in      IN movement.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in        IN movement.dt_end_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in     IN movement.dt_cancel_tstz%TYPE DEFAULT NULL,
        create_user_in        IN movement.create_user%TYPE DEFAULT NULL,
        create_time_in        IN movement.create_time%TYPE DEFAULT NULL,
        create_institution_in IN movement.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN movement.update_user%TYPE DEFAULT NULL,
        update_time_in        IN movement.update_time%TYPE DEFAULT NULL,
        update_institution_in IN movement.update_institution%TYPE DEFAULT NULL,
        flg_status_prev_in    IN movement.flg_status_prev%TYPE DEFAULT NULL,
        flg_mov_type_in       IN movement.flg_mov_type%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_episode_in         IN movement.id_episode%TYPE DEFAULT NULL,
        id_prof_request_in    IN movement.id_prof_request%TYPE DEFAULT NULL,
        id_prof_move_in       IN movement.id_prof_move%TYPE DEFAULT NULL,
        id_prof_receive_in    IN movement.id_prof_receive%TYPE DEFAULT NULL,
        flg_status_in         IN movement.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in     IN movement.id_prof_cancel%TYPE DEFAULT NULL,
        id_necessity_in       IN movement.id_necessity%TYPE DEFAULT NULL,
        id_room_from_in       IN movement.id_room_from%TYPE DEFAULT NULL,
        id_room_to_in         IN movement.id_room_to%TYPE DEFAULT NULL,
        notes_cancel_in       IN movement.notes_cancel%TYPE DEFAULT NULL,
        id_episode_write_in   IN movement.id_episode_write%TYPE DEFAULT NULL,
        dt_req_tstz_in        IN movement.dt_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in      IN movement.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in        IN movement.dt_end_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in     IN movement.dt_cancel_tstz%TYPE DEFAULT NULL,
        create_user_in        IN movement.create_user%TYPE DEFAULT NULL,
        create_time_in        IN movement.create_time%TYPE DEFAULT NULL,
        create_institution_in IN movement.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN movement.update_user%TYPE DEFAULT NULL,
        update_time_in        IN movement.update_time%TYPE DEFAULT NULL,
        update_institution_in IN movement.update_institution%TYPE DEFAULT NULL,
        flg_status_prev_in    IN movement.flg_status_prev%TYPE DEFAULT NULL,
        flg_mov_type_in       IN movement.flg_mov_type%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_episode_in         IN movement.id_episode%TYPE DEFAULT NULL,
        id_prof_request_in    IN movement.id_prof_request%TYPE DEFAULT NULL,
        id_prof_move_in       IN movement.id_prof_move%TYPE DEFAULT NULL,
        id_prof_receive_in    IN movement.id_prof_receive%TYPE DEFAULT NULL,
        flg_status_in         IN movement.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in     IN movement.id_prof_cancel%TYPE DEFAULT NULL,
        id_necessity_in       IN movement.id_necessity%TYPE DEFAULT NULL,
        id_room_from_in       IN movement.id_room_from%TYPE DEFAULT NULL,
        id_room_to_in         IN movement.id_room_to%TYPE DEFAULT NULL,
        notes_cancel_in       IN movement.notes_cancel%TYPE DEFAULT NULL,
        id_episode_write_in   IN movement.id_episode_write%TYPE DEFAULT NULL,
        dt_req_tstz_in        IN movement.dt_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in      IN movement.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in        IN movement.dt_end_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in     IN movement.dt_cancel_tstz%TYPE DEFAULT NULL,
        create_user_in        IN movement.create_user%TYPE DEFAULT NULL,
        create_time_in        IN movement.create_time%TYPE DEFAULT NULL,
        create_institution_in IN movement.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN movement.update_user%TYPE DEFAULT NULL,
        update_time_in        IN movement.update_time%TYPE DEFAULT NULL,
        update_institution_in IN movement.update_institution%TYPE DEFAULT NULL,
        flg_status_prev_in    IN movement.flg_status_prev%TYPE DEFAULT NULL,
        flg_mov_type_in       IN movement.flg_mov_type%TYPE DEFAULT NULL,
        id_movement_out       IN OUT movement.id_movement%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_episode_in         IN movement.id_episode%TYPE DEFAULT NULL,
        id_prof_request_in    IN movement.id_prof_request%TYPE DEFAULT NULL,
        id_prof_move_in       IN movement.id_prof_move%TYPE DEFAULT NULL,
        id_prof_receive_in    IN movement.id_prof_receive%TYPE DEFAULT NULL,
        flg_status_in         IN movement.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in     IN movement.id_prof_cancel%TYPE DEFAULT NULL,
        id_necessity_in       IN movement.id_necessity%TYPE DEFAULT NULL,
        id_room_from_in       IN movement.id_room_from%TYPE DEFAULT NULL,
        id_room_to_in         IN movement.id_room_to%TYPE DEFAULT NULL,
        notes_cancel_in       IN movement.notes_cancel%TYPE DEFAULT NULL,
        id_episode_write_in   IN movement.id_episode_write%TYPE DEFAULT NULL,
        dt_req_tstz_in        IN movement.dt_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in      IN movement.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in        IN movement.dt_end_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in     IN movement.dt_cancel_tstz%TYPE DEFAULT NULL,
        create_user_in        IN movement.create_user%TYPE DEFAULT NULL,
        create_time_in        IN movement.create_time%TYPE DEFAULT NULL,
        create_institution_in IN movement.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN movement.update_user%TYPE DEFAULT NULL,
        update_time_in        IN movement.update_time%TYPE DEFAULT NULL,
        update_institution_in IN movement.update_institution%TYPE DEFAULT NULL,
        flg_status_prev_in    IN movement.flg_status_prev%TYPE DEFAULT NULL,
        flg_mov_type_in       IN movement.flg_mov_type%TYPE DEFAULT NULL,
        id_movement_out       IN OUT movement.id_movement%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_episode_in         IN movement.id_episode%TYPE DEFAULT NULL,
        id_prof_request_in    IN movement.id_prof_request%TYPE DEFAULT NULL,
        id_prof_move_in       IN movement.id_prof_move%TYPE DEFAULT NULL,
        id_prof_receive_in    IN movement.id_prof_receive%TYPE DEFAULT NULL,
        flg_status_in         IN movement.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in     IN movement.id_prof_cancel%TYPE DEFAULT NULL,
        id_necessity_in       IN movement.id_necessity%TYPE DEFAULT NULL,
        id_room_from_in       IN movement.id_room_from%TYPE DEFAULT NULL,
        id_room_to_in         IN movement.id_room_to%TYPE DEFAULT NULL,
        notes_cancel_in       IN movement.notes_cancel%TYPE DEFAULT NULL,
        id_episode_write_in   IN movement.id_episode_write%TYPE DEFAULT NULL,
        dt_req_tstz_in        IN movement.dt_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in      IN movement.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in        IN movement.dt_end_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in     IN movement.dt_cancel_tstz%TYPE DEFAULT NULL,
        create_user_in        IN movement.create_user%TYPE DEFAULT NULL,
        create_time_in        IN movement.create_time%TYPE DEFAULT NULL,
        create_institution_in IN movement.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN movement.update_user%TYPE DEFAULT NULL,
        update_time_in        IN movement.update_time%TYPE DEFAULT NULL,
        update_institution_in IN movement.update_institution%TYPE DEFAULT NULL,
        flg_status_prev_in    IN movement.flg_status_prev%TYPE DEFAULT NULL,
        flg_mov_type_in       IN movement.flg_mov_type%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN movement.id_movement%TYPE;

    FUNCTION ins
    (
        id_episode_in         IN movement.id_episode%TYPE DEFAULT NULL,
        id_prof_request_in    IN movement.id_prof_request%TYPE DEFAULT NULL,
        id_prof_move_in       IN movement.id_prof_move%TYPE DEFAULT NULL,
        id_prof_receive_in    IN movement.id_prof_receive%TYPE DEFAULT NULL,
        flg_status_in         IN movement.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in     IN movement.id_prof_cancel%TYPE DEFAULT NULL,
        id_necessity_in       IN movement.id_necessity%TYPE DEFAULT NULL,
        id_room_from_in       IN movement.id_room_from%TYPE DEFAULT NULL,
        id_room_to_in         IN movement.id_room_to%TYPE DEFAULT NULL,
        notes_cancel_in       IN movement.notes_cancel%TYPE DEFAULT NULL,
        id_episode_write_in   IN movement.id_episode_write%TYPE DEFAULT NULL,
        dt_req_tstz_in        IN movement.dt_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in      IN movement.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in        IN movement.dt_end_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in     IN movement.dt_cancel_tstz%TYPE DEFAULT NULL,
        create_user_in        IN movement.create_user%TYPE DEFAULT NULL,
        create_time_in        IN movement.create_time%TYPE DEFAULT NULL,
        create_institution_in IN movement.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN movement.update_user%TYPE DEFAULT NULL,
        update_time_in        IN movement.update_time%TYPE DEFAULT NULL,
        update_institution_in IN movement.update_institution%TYPE DEFAULT NULL,
        flg_status_prev_in    IN movement.flg_status_prev%TYPE DEFAULT NULL,
        flg_mov_type_in       IN movement.flg_mov_type%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN movement.id_movement%TYPE;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.

    PROCEDURE upd
    (
        id_movement_in         IN movement.id_movement%TYPE,
        id_episode_in          IN movement.id_episode%TYPE DEFAULT NULL,
        id_episode_nin         IN BOOLEAN := TRUE,
        id_prof_request_in     IN movement.id_prof_request%TYPE DEFAULT NULL,
        id_prof_request_nin    IN BOOLEAN := TRUE,
        id_prof_move_in        IN movement.id_prof_move%TYPE DEFAULT NULL,
        id_prof_move_nin       IN BOOLEAN := TRUE,
        id_prof_receive_in     IN movement.id_prof_receive%TYPE DEFAULT NULL,
        id_prof_receive_nin    IN BOOLEAN := TRUE,
        flg_status_in          IN movement.flg_status%TYPE DEFAULT NULL,
        flg_status_nin         IN BOOLEAN := TRUE,
        id_prof_cancel_in      IN movement.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin     IN BOOLEAN := TRUE,
        id_necessity_in        IN movement.id_necessity%TYPE DEFAULT NULL,
        id_necessity_nin       IN BOOLEAN := TRUE,
        id_room_from_in        IN movement.id_room_from%TYPE DEFAULT NULL,
        id_room_from_nin       IN BOOLEAN := TRUE,
        id_room_to_in          IN movement.id_room_to%TYPE DEFAULT NULL,
        id_room_to_nin         IN BOOLEAN := TRUE,
        notes_cancel_in        IN movement.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin       IN BOOLEAN := TRUE,
        id_episode_write_in    IN movement.id_episode_write%TYPE DEFAULT NULL,
        id_episode_write_nin   IN BOOLEAN := TRUE,
        dt_req_tstz_in         IN movement.dt_req_tstz%TYPE DEFAULT NULL,
        dt_req_tstz_nin        IN BOOLEAN := TRUE,
        dt_begin_tstz_in       IN movement.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_nin      IN BOOLEAN := TRUE,
        dt_end_tstz_in         IN movement.dt_end_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_nin        IN BOOLEAN := TRUE,
        dt_cancel_tstz_in      IN movement.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin     IN BOOLEAN := TRUE,
        create_user_in         IN movement.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN movement.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN movement.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN movement.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN movement.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN movement.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        flg_status_prev_in     IN movement.flg_status_prev%TYPE DEFAULT NULL,
        flg_status_prev_nin    IN BOOLEAN := TRUE,
        flg_mov_type_in        IN movement.flg_mov_type%TYPE DEFAULT NULL,
        flg_mov_type_nin       IN BOOLEAN := TRUE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_movement_in         IN movement.id_movement%TYPE,
        id_episode_in          IN movement.id_episode%TYPE DEFAULT NULL,
        id_episode_nin         IN BOOLEAN := TRUE,
        id_prof_request_in     IN movement.id_prof_request%TYPE DEFAULT NULL,
        id_prof_request_nin    IN BOOLEAN := TRUE,
        id_prof_move_in        IN movement.id_prof_move%TYPE DEFAULT NULL,
        id_prof_move_nin       IN BOOLEAN := TRUE,
        id_prof_receive_in     IN movement.id_prof_receive%TYPE DEFAULT NULL,
        id_prof_receive_nin    IN BOOLEAN := TRUE,
        flg_status_in          IN movement.flg_status%TYPE DEFAULT NULL,
        flg_status_nin         IN BOOLEAN := TRUE,
        id_prof_cancel_in      IN movement.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin     IN BOOLEAN := TRUE,
        id_necessity_in        IN movement.id_necessity%TYPE DEFAULT NULL,
        id_necessity_nin       IN BOOLEAN := TRUE,
        id_room_from_in        IN movement.id_room_from%TYPE DEFAULT NULL,
        id_room_from_nin       IN BOOLEAN := TRUE,
        id_room_to_in          IN movement.id_room_to%TYPE DEFAULT NULL,
        id_room_to_nin         IN BOOLEAN := TRUE,
        notes_cancel_in        IN movement.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin       IN BOOLEAN := TRUE,
        id_episode_write_in    IN movement.id_episode_write%TYPE DEFAULT NULL,
        id_episode_write_nin   IN BOOLEAN := TRUE,
        dt_req_tstz_in         IN movement.dt_req_tstz%TYPE DEFAULT NULL,
        dt_req_tstz_nin        IN BOOLEAN := TRUE,
        dt_begin_tstz_in       IN movement.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_nin      IN BOOLEAN := TRUE,
        dt_end_tstz_in         IN movement.dt_end_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_nin        IN BOOLEAN := TRUE,
        dt_cancel_tstz_in      IN movement.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin     IN BOOLEAN := TRUE,
        create_user_in         IN movement.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN movement.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN movement.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN movement.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN movement.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN movement.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        flg_status_prev_in     IN movement.flg_status_prev%TYPE DEFAULT NULL,
        flg_status_prev_nin    IN BOOLEAN := TRUE,
        flg_mov_type_in        IN movement.flg_mov_type%TYPE DEFAULT NULL,
        flg_mov_type_nin       IN BOOLEAN := TRUE,
        handle_error_in        IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        id_episode_in          IN movement.id_episode%TYPE DEFAULT NULL,
        id_episode_nin         IN BOOLEAN := TRUE,
        id_prof_request_in     IN movement.id_prof_request%TYPE DEFAULT NULL,
        id_prof_request_nin    IN BOOLEAN := TRUE,
        id_prof_move_in        IN movement.id_prof_move%TYPE DEFAULT NULL,
        id_prof_move_nin       IN BOOLEAN := TRUE,
        id_prof_receive_in     IN movement.id_prof_receive%TYPE DEFAULT NULL,
        id_prof_receive_nin    IN BOOLEAN := TRUE,
        flg_status_in          IN movement.flg_status%TYPE DEFAULT NULL,
        flg_status_nin         IN BOOLEAN := TRUE,
        id_prof_cancel_in      IN movement.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin     IN BOOLEAN := TRUE,
        id_necessity_in        IN movement.id_necessity%TYPE DEFAULT NULL,
        id_necessity_nin       IN BOOLEAN := TRUE,
        id_room_from_in        IN movement.id_room_from%TYPE DEFAULT NULL,
        id_room_from_nin       IN BOOLEAN := TRUE,
        id_room_to_in          IN movement.id_room_to%TYPE DEFAULT NULL,
        id_room_to_nin         IN BOOLEAN := TRUE,
        notes_cancel_in        IN movement.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin       IN BOOLEAN := TRUE,
        id_episode_write_in    IN movement.id_episode_write%TYPE DEFAULT NULL,
        id_episode_write_nin   IN BOOLEAN := TRUE,
        dt_req_tstz_in         IN movement.dt_req_tstz%TYPE DEFAULT NULL,
        dt_req_tstz_nin        IN BOOLEAN := TRUE,
        dt_begin_tstz_in       IN movement.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_nin      IN BOOLEAN := TRUE,
        dt_end_tstz_in         IN movement.dt_end_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_nin        IN BOOLEAN := TRUE,
        dt_cancel_tstz_in      IN movement.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin     IN BOOLEAN := TRUE,
        create_user_in         IN movement.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN movement.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN movement.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN movement.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN movement.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN movement.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        flg_status_prev_in     IN movement.flg_status_prev%TYPE DEFAULT NULL,
        flg_status_prev_nin    IN BOOLEAN := TRUE,
        flg_mov_type_in        IN movement.flg_mov_type%TYPE DEFAULT NULL,
        flg_mov_type_nin       IN BOOLEAN := TRUE,
        where_in               VARCHAR2 DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_episode_in          IN movement.id_episode%TYPE DEFAULT NULL,
        id_episode_nin         IN BOOLEAN := TRUE,
        id_prof_request_in     IN movement.id_prof_request%TYPE DEFAULT NULL,
        id_prof_request_nin    IN BOOLEAN := TRUE,
        id_prof_move_in        IN movement.id_prof_move%TYPE DEFAULT NULL,
        id_prof_move_nin       IN BOOLEAN := TRUE,
        id_prof_receive_in     IN movement.id_prof_receive%TYPE DEFAULT NULL,
        id_prof_receive_nin    IN BOOLEAN := TRUE,
        flg_status_in          IN movement.flg_status%TYPE DEFAULT NULL,
        flg_status_nin         IN BOOLEAN := TRUE,
        id_prof_cancel_in      IN movement.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin     IN BOOLEAN := TRUE,
        id_necessity_in        IN movement.id_necessity%TYPE DEFAULT NULL,
        id_necessity_nin       IN BOOLEAN := TRUE,
        id_room_from_in        IN movement.id_room_from%TYPE DEFAULT NULL,
        id_room_from_nin       IN BOOLEAN := TRUE,
        id_room_to_in          IN movement.id_room_to%TYPE DEFAULT NULL,
        id_room_to_nin         IN BOOLEAN := TRUE,
        notes_cancel_in        IN movement.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin       IN BOOLEAN := TRUE,
        id_episode_write_in    IN movement.id_episode_write%TYPE DEFAULT NULL,
        id_episode_write_nin   IN BOOLEAN := TRUE,
        dt_req_tstz_in         IN movement.dt_req_tstz%TYPE DEFAULT NULL,
        dt_req_tstz_nin        IN BOOLEAN := TRUE,
        dt_begin_tstz_in       IN movement.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_nin      IN BOOLEAN := TRUE,
        dt_end_tstz_in         IN movement.dt_end_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_nin        IN BOOLEAN := TRUE,
        dt_cancel_tstz_in      IN movement.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin     IN BOOLEAN := TRUE,
        create_user_in         IN movement.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN movement.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN movement.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN movement.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN movement.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN movement.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        flg_status_prev_in     IN movement.flg_status_prev%TYPE DEFAULT NULL,
        flg_status_prev_nin    IN BOOLEAN := TRUE,
        flg_mov_type_in        IN movement.flg_mov_type%TYPE DEFAULT NULL,
        flg_mov_type_nin       IN BOOLEAN := TRUE,
        where_in               VARCHAR2 DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE
    );

    PROCEDURE upd_ins
    (
        id_movement_in        IN movement.id_movement%TYPE,
        id_episode_in         IN movement.id_episode%TYPE DEFAULT NULL,
        id_prof_request_in    IN movement.id_prof_request%TYPE DEFAULT NULL,
        id_prof_move_in       IN movement.id_prof_move%TYPE DEFAULT NULL,
        id_prof_receive_in    IN movement.id_prof_receive%TYPE DEFAULT NULL,
        flg_status_in         IN movement.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in     IN movement.id_prof_cancel%TYPE DEFAULT NULL,
        id_necessity_in       IN movement.id_necessity%TYPE DEFAULT NULL,
        id_room_from_in       IN movement.id_room_from%TYPE DEFAULT NULL,
        id_room_to_in         IN movement.id_room_to%TYPE DEFAULT NULL,
        notes_cancel_in       IN movement.notes_cancel%TYPE DEFAULT NULL,
        id_episode_write_in   IN movement.id_episode_write%TYPE DEFAULT NULL,
        dt_req_tstz_in        IN movement.dt_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in      IN movement.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in        IN movement.dt_end_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in     IN movement.dt_cancel_tstz%TYPE DEFAULT NULL,
        create_user_in        IN movement.create_user%TYPE DEFAULT NULL,
        create_time_in        IN movement.create_time%TYPE DEFAULT NULL,
        create_institution_in IN movement.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN movement.update_user%TYPE DEFAULT NULL,
        update_time_in        IN movement.update_time%TYPE DEFAULT NULL,
        update_institution_in IN movement.update_institution%TYPE DEFAULT NULL,
        flg_status_prev_in    IN movement.flg_status_prev%TYPE DEFAULT NULL,
        flg_mov_type_in       IN movement.flg_mov_type%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    );

    PROCEDURE upd_ins
    (
        id_movement_in        IN movement.id_movement%TYPE,
        id_episode_in         IN movement.id_episode%TYPE DEFAULT NULL,
        id_prof_request_in    IN movement.id_prof_request%TYPE DEFAULT NULL,
        id_prof_move_in       IN movement.id_prof_move%TYPE DEFAULT NULL,
        id_prof_receive_in    IN movement.id_prof_receive%TYPE DEFAULT NULL,
        flg_status_in         IN movement.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in     IN movement.id_prof_cancel%TYPE DEFAULT NULL,
        id_necessity_in       IN movement.id_necessity%TYPE DEFAULT NULL,
        id_room_from_in       IN movement.id_room_from%TYPE DEFAULT NULL,
        id_room_to_in         IN movement.id_room_to%TYPE DEFAULT NULL,
        notes_cancel_in       IN movement.notes_cancel%TYPE DEFAULT NULL,
        id_episode_write_in   IN movement.id_episode_write%TYPE DEFAULT NULL,
        dt_req_tstz_in        IN movement.dt_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in      IN movement.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in        IN movement.dt_end_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in     IN movement.dt_cancel_tstz%TYPE DEFAULT NULL,
        create_user_in        IN movement.create_user%TYPE DEFAULT NULL,
        create_time_in        IN movement.create_time%TYPE DEFAULT NULL,
        create_institution_in IN movement.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN movement.update_user%TYPE DEFAULT NULL,
        update_time_in        IN movement.update_time%TYPE DEFAULT NULL,
        update_institution_in IN movement.update_institution%TYPE DEFAULT NULL,
        flg_status_prev_in    IN movement.flg_status_prev%TYPE DEFAULT NULL,
        flg_mov_type_in       IN movement.flg_mov_type%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        rec_in          IN movement%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    PROCEDURE upd
    (
        rec_in          IN movement%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        col_in            IN movement_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    PROCEDURE upd
    (
        col_in            IN movement_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_movement_in  IN movement.id_movement%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_movement_in  IN movement.id_movement%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for primary key column ID_MOVEMENT
    PROCEDURE del_id_movement
    (
        id_movement_in  IN movement.id_movement%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_MOVEMENT
    PROCEDURE del_id_movement
    (
        id_movement_in  IN movement.id_movement%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this MOV_EPIS_FK foreign key value
    PROCEDURE del_mov_epis_fk
    (
        id_episode_in   IN movement.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this MOV_EPIS_FK foreign key value
    PROCEDURE del_mov_epis_fk
    (
        id_episode_in   IN movement.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this MOV_EPIS_WRITE_FK foreign key value
    PROCEDURE del_mov_epis_write_fk
    (
        id_episode_write_in IN movement.id_episode_write%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    );

    -- Delete all rows for this MOV_EPIS_WRITE_FK foreign key value
    PROCEDURE del_mov_epis_write_fk
    (
        id_episode_write_in IN movement.id_episode_write%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    );

    -- Delete all rows for this MOV_PROF_CANCEL_FK foreign key value
    PROCEDURE del_mov_prof_cancel_fk
    (
        id_prof_cancel_in IN movement.id_prof_cancel%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Delete all rows for this MOV_PROF_CANCEL_FK foreign key value
    PROCEDURE del_mov_prof_cancel_fk
    (
        id_prof_cancel_in IN movement.id_prof_cancel%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows for this MOV_PROF_MOVE_FK foreign key value
    PROCEDURE del_mov_prof_move_fk
    (
        id_prof_move_in IN movement.id_prof_move%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this MOV_PROF_MOVE_FK foreign key value
    PROCEDURE del_mov_prof_move_fk
    (
        id_prof_move_in IN movement.id_prof_move%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this MOV_PROF_RECEIVE_FK foreign key value
    PROCEDURE del_mov_prof_receive_fk
    (
        id_prof_receive_in IN movement.id_prof_receive%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete all rows for this MOV_PROF_RECEIVE_FK foreign key value
    PROCEDURE del_mov_prof_receive_fk
    (
        id_prof_receive_in IN movement.id_prof_receive%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    -- Delete all rows for this MOV_PROF_REQUEST_FK foreign key value
    PROCEDURE del_mov_prof_request_fk
    (
        id_prof_request_in IN movement.id_prof_request%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete all rows for this MOV_PROF_REQUEST_FK foreign key value
    PROCEDURE del_mov_prof_request_fk
    (
        id_prof_request_in IN movement.id_prof_request%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    -- Delete all rows for this MOV_ROOM_FROM_FK foreign key value
    PROCEDURE del_mov_room_from_fk
    (
        id_room_from_in IN movement.id_room_from%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this MOV_ROOM_FROM_FK foreign key value
    PROCEDURE del_mov_room_from_fk
    (
        id_room_from_in IN movement.id_room_from%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this MOV_ROOM_TO_FK foreign key value
    PROCEDURE del_mov_room_to_fk
    (
        id_room_to_in   IN movement.id_room_to%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this MOV_ROOM_TO_FK foreign key value
    PROCEDURE del_mov_room_to_fk
    (
        id_room_to_in   IN movement.id_room_to%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(movement_inout IN OUT movement%ROWTYPE);

    FUNCTION initrec RETURN movement%ROWTYPE;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN movement_tc;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN movement_tc;

END ts_movement;
/
