/*-- Last Change Revision: $Rev: 2029343 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:51:09 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE ts_rehab_epis_pl_notes_h
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Dezembro 23, 2010 11:26:51
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on "REHAB_EPIS_PL_NOTES_H"
    TYPE rehab_epis_pl_notes_h_tc IS TABLE OF rehab_epis_pl_notes_h%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE rehab_epis_pl_notes_h_ntt IS TABLE OF rehab_epis_pl_notes_h%ROWTYPE;
    TYPE rehab_epis_pl_notes_h_vat IS VARRAY(100) OF rehab_epis_pl_notes_h%ROWTYPE;

    -- Same type structure, with a static name.
    TYPE aat IS TABLE OF rehab_epis_pl_notes_h%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE ntt IS TABLE OF rehab_epis_pl_notes_h%ROWTYPE;
    TYPE vat IS VARRAY(100) OF rehab_epis_pl_notes_h%ROWTYPE;

    -- Column Collection based on column "ID_REHAB_EPIS_PL_NOTES_H"
    TYPE id_rehab_epis_pl_notes_h_cc IS TABLE OF rehab_epis_pl_notes_h.id_rehab_epis_pl_notes_h%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_REHAB_EPIS_PLAN_NOTES"
    TYPE id_rehab_epis_plan_notes_cc IS TABLE OF rehab_epis_pl_notes_h.id_rehab_epis_plan_notes%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_TYPE"
    TYPE flg_type_cc IS TABLE OF rehab_epis_pl_notes_h.flg_type%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "NOTES"
    TYPE notes_cc IS TABLE OF rehab_epis_pl_notes_h.notes%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROF_CREATE"
    TYPE id_prof_create_cc IS TABLE OF rehab_epis_pl_notes_h.id_prof_create%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_REHAB_EPIS_PLAN_NOTES"
    TYPE dt_rehab_epis_plan_notes_cc IS TABLE OF rehab_epis_pl_notes_h.dt_rehab_epis_plan_notes%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_USER"
    TYPE create_user_cc IS TABLE OF rehab_epis_pl_notes_h.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_TIME"
    TYPE create_time_cc IS TABLE OF rehab_epis_pl_notes_h.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_INSTITUTION"
    TYPE create_institution_cc IS TABLE OF rehab_epis_pl_notes_h.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_USER"
    TYPE update_user_cc IS TABLE OF rehab_epis_pl_notes_h.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_TIME"
    TYPE update_time_cc IS TABLE OF rehab_epis_pl_notes_h.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_INSTITUTION"
    TYPE update_institution_cc IS TABLE OF rehab_epis_pl_notes_h.update_institution%TYPE INDEX BY BINARY_INTEGER;

    TYPE varchar2_t IS TABLE OF VARCHAR2(32767) INDEX BY PLS_INTEGER;
    /*
    START Special logic for handling LOB columns....
    */
    PROCEDURE n_ins_clobs_in_chunks
    (
        id_rehab_epis_pl_notes_h_in IN rehab_epis_pl_notes_h.id_rehab_epis_pl_notes_h%TYPE,
        id_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.id_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        flg_type_in                 IN rehab_epis_pl_notes_h.flg_type%TYPE DEFAULT NULL,
        id_prof_create_in           IN rehab_epis_pl_notes_h.id_prof_create%TYPE DEFAULT NULL,
        dt_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.dt_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        create_user_in              IN rehab_epis_pl_notes_h.create_user%TYPE DEFAULT NULL,
        create_time_in              IN rehab_epis_pl_notes_h.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN rehab_epis_pl_notes_h.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN rehab_epis_pl_notes_h.update_user%TYPE DEFAULT NULL,
        update_time_in              IN rehab_epis_pl_notes_h.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN rehab_epis_pl_notes_h.update_institution%TYPE DEFAULT NULL,
        handle_error_in             IN BOOLEAN := TRUE,
        clob_columns_in             IN varchar2_t,
        clob_pieces_in              IN varchar2_t
    );

    PROCEDURE n_upd_clobs_in_chunks
    (
        id_rehab_epis_pl_notes_h_in IN rehab_epis_pl_notes_h.id_rehab_epis_pl_notes_h%TYPE,
        id_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.id_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        flg_type_in                 IN rehab_epis_pl_notes_h.flg_type%TYPE DEFAULT NULL,
        id_prof_create_in           IN rehab_epis_pl_notes_h.id_prof_create%TYPE DEFAULT NULL,
        dt_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.dt_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        create_user_in              IN rehab_epis_pl_notes_h.create_user%TYPE DEFAULT NULL,
        create_time_in              IN rehab_epis_pl_notes_h.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN rehab_epis_pl_notes_h.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN rehab_epis_pl_notes_h.update_user%TYPE DEFAULT NULL,
        update_time_in              IN rehab_epis_pl_notes_h.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN rehab_epis_pl_notes_h.update_institution%TYPE DEFAULT NULL,
        ignore_if_null_in           IN BOOLEAN := TRUE,
        handle_error_in             IN BOOLEAN := TRUE,
        clob_columns_in             IN varchar2_t,
        clob_pieces_in              IN varchar2_t
    );

    PROCEDURE n_upd_ins_clobs_in_chunks
    (
        id_rehab_epis_pl_notes_h_in IN rehab_epis_pl_notes_h.id_rehab_epis_pl_notes_h%TYPE,
        id_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.id_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        flg_type_in                 IN rehab_epis_pl_notes_h.flg_type%TYPE DEFAULT NULL,
        id_prof_create_in           IN rehab_epis_pl_notes_h.id_prof_create%TYPE DEFAULT NULL,
        dt_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.dt_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        create_user_in              IN rehab_epis_pl_notes_h.create_user%TYPE DEFAULT NULL,
        create_time_in              IN rehab_epis_pl_notes_h.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN rehab_epis_pl_notes_h.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN rehab_epis_pl_notes_h.update_user%TYPE DEFAULT NULL,
        update_time_in              IN rehab_epis_pl_notes_h.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN rehab_epis_pl_notes_h.update_institution%TYPE DEFAULT NULL,
        ignore_if_null_in           IN BOOLEAN DEFAULT TRUE,
        handle_error_in             IN BOOLEAN DEFAULT TRUE,
        clob_columns_in             IN varchar2_t,
        clob_pieces_in              IN varchar2_t
    );

    /*
    END Special logic for handling LOB columns.
    */
    -- Insert one row, providing primary key if present
    PROCEDURE ins
    (
        id_rehab_epis_pl_notes_h_in IN rehab_epis_pl_notes_h.id_rehab_epis_pl_notes_h%TYPE,
        id_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.id_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        flg_type_in                 IN rehab_epis_pl_notes_h.flg_type%TYPE DEFAULT NULL,
        notes_in                    IN rehab_epis_pl_notes_h.notes%TYPE DEFAULT NULL,
        id_prof_create_in           IN rehab_epis_pl_notes_h.id_prof_create%TYPE DEFAULT NULL,
        dt_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.dt_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        create_user_in              IN rehab_epis_pl_notes_h.create_user%TYPE DEFAULT NULL,
        create_time_in              IN rehab_epis_pl_notes_h.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN rehab_epis_pl_notes_h.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN rehab_epis_pl_notes_h.update_user%TYPE DEFAULT NULL,
        update_time_in              IN rehab_epis_pl_notes_h.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN rehab_epis_pl_notes_h.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_rehab_epis_pl_notes_h_in IN rehab_epis_pl_notes_h.id_rehab_epis_pl_notes_h%TYPE,
        id_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.id_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        flg_type_in                 IN rehab_epis_pl_notes_h.flg_type%TYPE DEFAULT NULL,
        notes_in                    IN rehab_epis_pl_notes_h.notes%TYPE DEFAULT NULL,
        id_prof_create_in           IN rehab_epis_pl_notes_h.id_prof_create%TYPE DEFAULT NULL,
        dt_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.dt_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        create_user_in              IN rehab_epis_pl_notes_h.create_user%TYPE DEFAULT NULL,
        create_time_in              IN rehab_epis_pl_notes_h.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN rehab_epis_pl_notes_h.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN rehab_epis_pl_notes_h.update_user%TYPE DEFAULT NULL,
        update_time_in              IN rehab_epis_pl_notes_h.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN rehab_epis_pl_notes_h.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record.
    -- Specify whether or not a primary key value should be generated.
    PROCEDURE ins
    (
        rec_in          IN rehab_epis_pl_notes_h%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rec_in          IN rehab_epis_pl_notes_h%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers.
    PROCEDURE ins
    (
        rows_in         IN rehab_epis_pl_notes_h_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rows_in         IN rehab_epis_pl_notes_h_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Return next primary key value using the named sequence.
    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN rehab_epis_pl_notes_h.id_rehab_epis_pl_notes_h%TYPE;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.id_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        flg_type_in                 IN rehab_epis_pl_notes_h.flg_type%TYPE DEFAULT NULL,
        notes_in                    IN rehab_epis_pl_notes_h.notes%TYPE DEFAULT NULL,
        id_prof_create_in           IN rehab_epis_pl_notes_h.id_prof_create%TYPE DEFAULT NULL,
        dt_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.dt_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        create_user_in              IN rehab_epis_pl_notes_h.create_user%TYPE DEFAULT NULL,
        create_time_in              IN rehab_epis_pl_notes_h.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN rehab_epis_pl_notes_h.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN rehab_epis_pl_notes_h.update_user%TYPE DEFAULT NULL,
        update_time_in              IN rehab_epis_pl_notes_h.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN rehab_epis_pl_notes_h.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.id_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        flg_type_in                 IN rehab_epis_pl_notes_h.flg_type%TYPE DEFAULT NULL,
        notes_in                    IN rehab_epis_pl_notes_h.notes%TYPE DEFAULT NULL,
        id_prof_create_in           IN rehab_epis_pl_notes_h.id_prof_create%TYPE DEFAULT NULL,
        dt_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.dt_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        create_user_in              IN rehab_epis_pl_notes_h.create_user%TYPE DEFAULT NULL,
        create_time_in              IN rehab_epis_pl_notes_h.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN rehab_epis_pl_notes_h.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN rehab_epis_pl_notes_h.update_user%TYPE DEFAULT NULL,
        update_time_in              IN rehab_epis_pl_notes_h.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN rehab_epis_pl_notes_h.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_rehab_epis_plan_notes_in  IN rehab_epis_pl_notes_h.id_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        flg_type_in                  IN rehab_epis_pl_notes_h.flg_type%TYPE DEFAULT NULL,
        notes_in                     IN rehab_epis_pl_notes_h.notes%TYPE DEFAULT NULL,
        id_prof_create_in            IN rehab_epis_pl_notes_h.id_prof_create%TYPE DEFAULT NULL,
        dt_rehab_epis_plan_notes_in  IN rehab_epis_pl_notes_h.dt_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        create_user_in               IN rehab_epis_pl_notes_h.create_user%TYPE DEFAULT NULL,
        create_time_in               IN rehab_epis_pl_notes_h.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN rehab_epis_pl_notes_h.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN rehab_epis_pl_notes_h.update_user%TYPE DEFAULT NULL,
        update_time_in               IN rehab_epis_pl_notes_h.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN rehab_epis_pl_notes_h.update_institution%TYPE DEFAULT NULL,
        id_rehab_epis_pl_notes_h_out IN OUT rehab_epis_pl_notes_h.id_rehab_epis_pl_notes_h%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_rehab_epis_plan_notes_in  IN rehab_epis_pl_notes_h.id_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        flg_type_in                  IN rehab_epis_pl_notes_h.flg_type%TYPE DEFAULT NULL,
        notes_in                     IN rehab_epis_pl_notes_h.notes%TYPE DEFAULT NULL,
        id_prof_create_in            IN rehab_epis_pl_notes_h.id_prof_create%TYPE DEFAULT NULL,
        dt_rehab_epis_plan_notes_in  IN rehab_epis_pl_notes_h.dt_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        create_user_in               IN rehab_epis_pl_notes_h.create_user%TYPE DEFAULT NULL,
        create_time_in               IN rehab_epis_pl_notes_h.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN rehab_epis_pl_notes_h.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN rehab_epis_pl_notes_h.update_user%TYPE DEFAULT NULL,
        update_time_in               IN rehab_epis_pl_notes_h.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN rehab_epis_pl_notes_h.update_institution%TYPE DEFAULT NULL,
        id_rehab_epis_pl_notes_h_out IN OUT rehab_epis_pl_notes_h.id_rehab_epis_pl_notes_h%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.id_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        flg_type_in                 IN rehab_epis_pl_notes_h.flg_type%TYPE DEFAULT NULL,
        notes_in                    IN rehab_epis_pl_notes_h.notes%TYPE DEFAULT NULL,
        id_prof_create_in           IN rehab_epis_pl_notes_h.id_prof_create%TYPE DEFAULT NULL,
        dt_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.dt_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        create_user_in              IN rehab_epis_pl_notes_h.create_user%TYPE DEFAULT NULL,
        create_time_in              IN rehab_epis_pl_notes_h.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN rehab_epis_pl_notes_h.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN rehab_epis_pl_notes_h.update_user%TYPE DEFAULT NULL,
        update_time_in              IN rehab_epis_pl_notes_h.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN rehab_epis_pl_notes_h.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN rehab_epis_pl_notes_h.id_rehab_epis_pl_notes_h%TYPE;

    FUNCTION ins
    (
        id_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.id_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        flg_type_in                 IN rehab_epis_pl_notes_h.flg_type%TYPE DEFAULT NULL,
        notes_in                    IN rehab_epis_pl_notes_h.notes%TYPE DEFAULT NULL,
        id_prof_create_in           IN rehab_epis_pl_notes_h.id_prof_create%TYPE DEFAULT NULL,
        dt_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.dt_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        create_user_in              IN rehab_epis_pl_notes_h.create_user%TYPE DEFAULT NULL,
        create_time_in              IN rehab_epis_pl_notes_h.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN rehab_epis_pl_notes_h.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN rehab_epis_pl_notes_h.update_user%TYPE DEFAULT NULL,
        update_time_in              IN rehab_epis_pl_notes_h.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN rehab_epis_pl_notes_h.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN rehab_epis_pl_notes_h.id_rehab_epis_pl_notes_h%TYPE;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.

    PROCEDURE upd
    (
        id_rehab_epis_pl_notes_h_in  IN rehab_epis_pl_notes_h.id_rehab_epis_pl_notes_h%TYPE,
        id_rehab_epis_plan_notes_in  IN rehab_epis_pl_notes_h.id_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        id_rehab_epis_plan_notes_nin IN BOOLEAN := TRUE,
        flg_type_in                  IN rehab_epis_pl_notes_h.flg_type%TYPE DEFAULT NULL,
        flg_type_nin                 IN BOOLEAN := TRUE,
        notes_in                     IN rehab_epis_pl_notes_h.notes%TYPE DEFAULT NULL,
        notes_nin                    IN BOOLEAN := TRUE,
        id_prof_create_in            IN rehab_epis_pl_notes_h.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin           IN BOOLEAN := TRUE,
        dt_rehab_epis_plan_notes_in  IN rehab_epis_pl_notes_h.dt_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        dt_rehab_epis_plan_notes_nin IN BOOLEAN := TRUE,
        create_user_in               IN rehab_epis_pl_notes_h.create_user%TYPE DEFAULT NULL,
        create_user_nin              IN BOOLEAN := TRUE,
        create_time_in               IN rehab_epis_pl_notes_h.create_time%TYPE DEFAULT NULL,
        create_time_nin              IN BOOLEAN := TRUE,
        create_institution_in        IN rehab_epis_pl_notes_h.create_institution%TYPE DEFAULT NULL,
        create_institution_nin       IN BOOLEAN := TRUE,
        update_user_in               IN rehab_epis_pl_notes_h.update_user%TYPE DEFAULT NULL,
        update_user_nin              IN BOOLEAN := TRUE,
        update_time_in               IN rehab_epis_pl_notes_h.update_time%TYPE DEFAULT NULL,
        update_time_nin              IN BOOLEAN := TRUE,
        update_institution_in        IN rehab_epis_pl_notes_h.update_institution%TYPE DEFAULT NULL,
        update_institution_nin       IN BOOLEAN := TRUE,
        handle_error_in              IN BOOLEAN := TRUE,
        rows_out                     IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_rehab_epis_pl_notes_h_in  IN rehab_epis_pl_notes_h.id_rehab_epis_pl_notes_h%TYPE,
        id_rehab_epis_plan_notes_in  IN rehab_epis_pl_notes_h.id_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        id_rehab_epis_plan_notes_nin IN BOOLEAN := TRUE,
        flg_type_in                  IN rehab_epis_pl_notes_h.flg_type%TYPE DEFAULT NULL,
        flg_type_nin                 IN BOOLEAN := TRUE,
        notes_in                     IN rehab_epis_pl_notes_h.notes%TYPE DEFAULT NULL,
        notes_nin                    IN BOOLEAN := TRUE,
        id_prof_create_in            IN rehab_epis_pl_notes_h.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin           IN BOOLEAN := TRUE,
        dt_rehab_epis_plan_notes_in  IN rehab_epis_pl_notes_h.dt_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        dt_rehab_epis_plan_notes_nin IN BOOLEAN := TRUE,
        create_user_in               IN rehab_epis_pl_notes_h.create_user%TYPE DEFAULT NULL,
        create_user_nin              IN BOOLEAN := TRUE,
        create_time_in               IN rehab_epis_pl_notes_h.create_time%TYPE DEFAULT NULL,
        create_time_nin              IN BOOLEAN := TRUE,
        create_institution_in        IN rehab_epis_pl_notes_h.create_institution%TYPE DEFAULT NULL,
        create_institution_nin       IN BOOLEAN := TRUE,
        update_user_in               IN rehab_epis_pl_notes_h.update_user%TYPE DEFAULT NULL,
        update_user_nin              IN BOOLEAN := TRUE,
        update_time_in               IN rehab_epis_pl_notes_h.update_time%TYPE DEFAULT NULL,
        update_time_nin              IN BOOLEAN := TRUE,
        update_institution_in        IN rehab_epis_pl_notes_h.update_institution%TYPE DEFAULT NULL,
        update_institution_nin       IN BOOLEAN := TRUE,
        handle_error_in              IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        id_rehab_epis_plan_notes_in  IN rehab_epis_pl_notes_h.id_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        id_rehab_epis_plan_notes_nin IN BOOLEAN := TRUE,
        flg_type_in                  IN rehab_epis_pl_notes_h.flg_type%TYPE DEFAULT NULL,
        flg_type_nin                 IN BOOLEAN := TRUE,
        notes_in                     IN rehab_epis_pl_notes_h.notes%TYPE DEFAULT NULL,
        notes_nin                    IN BOOLEAN := TRUE,
        id_prof_create_in            IN rehab_epis_pl_notes_h.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin           IN BOOLEAN := TRUE,
        dt_rehab_epis_plan_notes_in  IN rehab_epis_pl_notes_h.dt_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        dt_rehab_epis_plan_notes_nin IN BOOLEAN := TRUE,
        create_user_in               IN rehab_epis_pl_notes_h.create_user%TYPE DEFAULT NULL,
        create_user_nin              IN BOOLEAN := TRUE,
        create_time_in               IN rehab_epis_pl_notes_h.create_time%TYPE DEFAULT NULL,
        create_time_nin              IN BOOLEAN := TRUE,
        create_institution_in        IN rehab_epis_pl_notes_h.create_institution%TYPE DEFAULT NULL,
        create_institution_nin       IN BOOLEAN := TRUE,
        update_user_in               IN rehab_epis_pl_notes_h.update_user%TYPE DEFAULT NULL,
        update_user_nin              IN BOOLEAN := TRUE,
        update_time_in               IN rehab_epis_pl_notes_h.update_time%TYPE DEFAULT NULL,
        update_time_nin              IN BOOLEAN := TRUE,
        update_institution_in        IN rehab_epis_pl_notes_h.update_institution%TYPE DEFAULT NULL,
        update_institution_nin       IN BOOLEAN := TRUE,
        where_in                     VARCHAR2 DEFAULT NULL,
        handle_error_in              IN BOOLEAN := TRUE,
        rows_out                     IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_rehab_epis_plan_notes_in  IN rehab_epis_pl_notes_h.id_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        id_rehab_epis_plan_notes_nin IN BOOLEAN := TRUE,
        flg_type_in                  IN rehab_epis_pl_notes_h.flg_type%TYPE DEFAULT NULL,
        flg_type_nin                 IN BOOLEAN := TRUE,
        notes_in                     IN rehab_epis_pl_notes_h.notes%TYPE DEFAULT NULL,
        notes_nin                    IN BOOLEAN := TRUE,
        id_prof_create_in            IN rehab_epis_pl_notes_h.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin           IN BOOLEAN := TRUE,
        dt_rehab_epis_plan_notes_in  IN rehab_epis_pl_notes_h.dt_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        dt_rehab_epis_plan_notes_nin IN BOOLEAN := TRUE,
        create_user_in               IN rehab_epis_pl_notes_h.create_user%TYPE DEFAULT NULL,
        create_user_nin              IN BOOLEAN := TRUE,
        create_time_in               IN rehab_epis_pl_notes_h.create_time%TYPE DEFAULT NULL,
        create_time_nin              IN BOOLEAN := TRUE,
        create_institution_in        IN rehab_epis_pl_notes_h.create_institution%TYPE DEFAULT NULL,
        create_institution_nin       IN BOOLEAN := TRUE,
        update_user_in               IN rehab_epis_pl_notes_h.update_user%TYPE DEFAULT NULL,
        update_user_nin              IN BOOLEAN := TRUE,
        update_time_in               IN rehab_epis_pl_notes_h.update_time%TYPE DEFAULT NULL,
        update_time_nin              IN BOOLEAN := TRUE,
        update_institution_in        IN rehab_epis_pl_notes_h.update_institution%TYPE DEFAULT NULL,
        update_institution_nin       IN BOOLEAN := TRUE,
        where_in                     VARCHAR2 DEFAULT NULL,
        handle_error_in              IN BOOLEAN := TRUE
    );

    PROCEDURE upd_ins
    (
        id_rehab_epis_pl_notes_h_in IN rehab_epis_pl_notes_h.id_rehab_epis_pl_notes_h%TYPE,
        id_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.id_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        flg_type_in                 IN rehab_epis_pl_notes_h.flg_type%TYPE DEFAULT NULL,
        notes_in                    IN rehab_epis_pl_notes_h.notes%TYPE DEFAULT NULL,
        id_prof_create_in           IN rehab_epis_pl_notes_h.id_prof_create%TYPE DEFAULT NULL,
        dt_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.dt_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        create_user_in              IN rehab_epis_pl_notes_h.create_user%TYPE DEFAULT NULL,
        create_time_in              IN rehab_epis_pl_notes_h.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN rehab_epis_pl_notes_h.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN rehab_epis_pl_notes_h.update_user%TYPE DEFAULT NULL,
        update_time_in              IN rehab_epis_pl_notes_h.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN rehab_epis_pl_notes_h.update_institution%TYPE DEFAULT NULL,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    OUT table_varchar
    );

    PROCEDURE upd_ins
    (
        id_rehab_epis_pl_notes_h_in IN rehab_epis_pl_notes_h.id_rehab_epis_pl_notes_h%TYPE,
        id_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.id_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        flg_type_in                 IN rehab_epis_pl_notes_h.flg_type%TYPE DEFAULT NULL,
        notes_in                    IN rehab_epis_pl_notes_h.notes%TYPE DEFAULT NULL,
        id_prof_create_in           IN rehab_epis_pl_notes_h.id_prof_create%TYPE DEFAULT NULL,
        dt_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.dt_rehab_epis_plan_notes%TYPE DEFAULT NULL,
        create_user_in              IN rehab_epis_pl_notes_h.create_user%TYPE DEFAULT NULL,
        create_time_in              IN rehab_epis_pl_notes_h.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN rehab_epis_pl_notes_h.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN rehab_epis_pl_notes_h.update_user%TYPE DEFAULT NULL,
        update_time_in              IN rehab_epis_pl_notes_h.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN rehab_epis_pl_notes_h.update_institution%TYPE DEFAULT NULL,
        handle_error_in             IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        rec_in          IN rehab_epis_pl_notes_h%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    PROCEDURE upd
    (
        rec_in          IN rehab_epis_pl_notes_h%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        col_in            IN rehab_epis_pl_notes_h_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    PROCEDURE upd
    (
        col_in            IN rehab_epis_pl_notes_h_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_rehab_epis_pl_notes_h_in IN rehab_epis_pl_notes_h.id_rehab_epis_pl_notes_h%TYPE,
        handle_error_in             IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_rehab_epis_pl_notes_h_in IN rehab_epis_pl_notes_h.id_rehab_epis_pl_notes_h%TYPE,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    OUT table_varchar
    );

    -- Delete all rows for primary key column ID_REHAB_EPIS_PL_NOTES_H
    PROCEDURE del_id_rehab_epis_pl_notes_h
    (
        id_rehab_epis_pl_notes_h_in IN rehab_epis_pl_notes_h.id_rehab_epis_pl_notes_h%TYPE,
        handle_error_in             IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_REHAB_EPIS_PL_NOTES_H
    PROCEDURE del_id_rehab_epis_pl_notes_h
    (
        id_rehab_epis_pl_notes_h_in IN rehab_epis_pl_notes_h.id_rehab_epis_pl_notes_h%TYPE,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    OUT table_varchar
    );

    -- Delete all rows for this REPNHT_RHN_FK foreign key value
    PROCEDURE del_repnht_rhn_fk
    (
        id_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.id_rehab_epis_plan_notes%TYPE,
        handle_error_in             IN BOOLEAN := TRUE
    );

    -- Delete all rows for this REPNHT_RHN_FK foreign key value
    PROCEDURE del_repnht_rhn_fk
    (
        id_rehab_epis_plan_notes_in IN rehab_epis_pl_notes_h.id_rehab_epis_plan_notes%TYPE,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(rehab_epis_pl_notes_h_inout IN OUT rehab_epis_pl_notes_h%ROWTYPE);

    FUNCTION initrec RETURN rehab_epis_pl_notes_h%ROWTYPE;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN rehab_epis_pl_notes_h_tc;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN rehab_epis_pl_notes_h_tc;

END ts_rehab_epis_pl_notes_h;
/
