/*-- Last Change Revision: $Rev: 1674665 $*/
/*-- Last Change by: $Author: telmo.castro $*/
/*-- Date of last change: $Date: 2015-01-02 11:24:24 +0000 (sex, 02 jan 2015) $*/
CREATE OR REPLACE PACKAGE TS_SCH_GROUP_HIST
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: April 8, 2014 16:13:48
| Created By: ALERT
*/
IS

  -- Collection of %ROWTYPE records based on "SCH_GROUP_HIST"
     TYPE SCH_GROUP_HIST_tc IS TABLE OF SCH_GROUP_HIST%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE sch_group_hist_ntt IS TABLE OF SCH_GROUP_HIST%ROWTYPE;
     TYPE sch_group_hist_vat IS VARRAY(100) OF SCH_GROUP_HIST%ROWTYPE;

  -- Same type structure, with a static name.
     TYPE aat IS TABLE OF SCH_GROUP_HIST%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE ntt IS TABLE OF SCH_GROUP_HIST%ROWTYPE;
     TYPE vat IS VARRAY(100) OF SCH_GROUP_HIST%ROWTYPE;

   -- Column Collection based on column "ID_GROUP"
   TYPE ID_GROUP_cc IS TABLE OF SCH_GROUP_HIST.ID_GROUP%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_SCHEDULE"
   TYPE ID_SCHEDULE_cc IS TABLE OF SCH_GROUP_HIST.ID_SCHEDULE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PATIENT"
   TYPE ID_PATIENT_cc IS TABLE OF SCH_GROUP_HIST.ID_PATIENT%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_USER"
   TYPE CREATE_USER_cc IS TABLE OF SCH_GROUP_HIST.CREATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_TIME"
   TYPE CREATE_TIME_cc IS TABLE OF SCH_GROUP_HIST.CREATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_INSTITUTION"
   TYPE CREATE_INSTITUTION_cc IS TABLE OF SCH_GROUP_HIST.CREATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_USER"
   TYPE UPDATE_USER_cc IS TABLE OF SCH_GROUP_HIST.UPDATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_TIME"
   TYPE UPDATE_TIME_cc IS TABLE OF SCH_GROUP_HIST.UPDATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_INSTITUTION"
   TYPE UPDATE_INSTITUTION_cc IS TABLE OF SCH_GROUP_HIST.UPDATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_REF_TYPE"
   TYPE FLG_REF_TYPE_cc IS TABLE OF SCH_GROUP_HIST.FLG_REF_TYPE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PROF_REF"
   TYPE ID_PROF_REF_cc IS TABLE OF SCH_GROUP_HIST.ID_PROF_REF%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_INST_REF"
   TYPE ID_INST_REF_cc IS TABLE OF SCH_GROUP_HIST.ID_INST_REF%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_CANCEL_REASON"
   TYPE ID_CANCEL_REASON_cc IS TABLE OF SCH_GROUP_HIST.ID_CANCEL_REASON%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "NO_SHOW_NOTES"
   TYPE NO_SHOW_NOTES_cc IS TABLE OF SCH_GROUP_HIST.NO_SHOW_NOTES%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_CONTACT_TYPE"
   TYPE FLG_CONTACT_TYPE_cc IS TABLE OF SCH_GROUP_HIST.FLG_CONTACT_TYPE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_HEALTH_PLAN"
   TYPE ID_HEALTH_PLAN_cc IS TABLE OF SCH_GROUP_HIST.ID_HEALTH_PLAN%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "AUTH_CODE"
   TYPE AUTH_CODE_cc IS TABLE OF SCH_GROUP_HIST.AUTH_CODE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_AUTH_CODE_EXP"
   TYPE DT_AUTH_CODE_EXP_cc IS TABLE OF SCH_GROUP_HIST.DT_AUTH_CODE_EXP%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_UPDATE"
   TYPE DT_UPDATE_cc IS TABLE OF SCH_GROUP_HIST.DT_UPDATE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "PAT_INSTRUCTIONS"
   TYPE PAT_INSTRUCTIONS_cc IS TABLE OF SCH_GROUP_HIST.PAT_INSTRUCTIONS%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PAT_HEALTH_PLAN"
   TYPE ID_PAT_HEALTH_PLAN_cc IS TABLE OF SCH_GROUP_HIST.ID_PAT_HEALTH_PLAN%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PROF_UPDATE"
   TYPE ID_PROF_UPDATE_cc IS TABLE OF SCH_GROUP_HIST.ID_PROF_UPDATE%TYPE INDEX BY BINARY_INTEGER;

   TYPE varchar2_t IS TABLE OF VARCHAR2(32767) INDEX BY PLS_INTEGER;
   /*
   START Special logic for handling LOB columns....
   */
   PROCEDURE n_ins_clobs_in_chunks (
      id_group_in IN SCH_GROUP_HIST.ID_GROUP%TYPE DEFAULT NULL,
      id_schedule_in IN SCH_GROUP_HIST.ID_SCHEDULE%TYPE DEFAULT NULL,
      id_patient_in IN SCH_GROUP_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      create_user_in IN SCH_GROUP_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN SCH_GROUP_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN SCH_GROUP_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN SCH_GROUP_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN SCH_GROUP_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN SCH_GROUP_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_ref_type_in IN SCH_GROUP_HIST.FLG_REF_TYPE%TYPE DEFAULT NULL,
      id_prof_ref_in IN SCH_GROUP_HIST.ID_PROF_REF%TYPE DEFAULT NULL,
      id_inst_ref_in IN SCH_GROUP_HIST.ID_INST_REF%TYPE DEFAULT NULL,
      id_cancel_reason_in IN SCH_GROUP_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      flg_contact_type_in IN SCH_GROUP_HIST.FLG_CONTACT_TYPE%TYPE DEFAULT NULL,
      id_health_plan_in IN SCH_GROUP_HIST.ID_HEALTH_PLAN%TYPE DEFAULT NULL,
      auth_code_in IN SCH_GROUP_HIST.AUTH_CODE%TYPE DEFAULT NULL,
      dt_auth_code_exp_in IN SCH_GROUP_HIST.DT_AUTH_CODE_EXP%TYPE DEFAULT NULL,
      dt_update_in IN SCH_GROUP_HIST.DT_UPDATE%TYPE DEFAULT current_timestamp
						,
      id_pat_health_plan_in IN SCH_GROUP_HIST.ID_PAT_HEALTH_PLAN%TYPE DEFAULT NULL,
      id_prof_update_in IN SCH_GROUP_HIST.ID_PROF_UPDATE%TYPE DEFAULT NULL,
      handle_error_in IN BOOLEAN := TRUE,
      clob_columns_in IN varchar2_t,
      clob_pieces_in IN  varchar2_t
   );
/*
   PROCEDURE n_upd_clobs_in_chunks (
      id_group_in IN SCH_GROUP_HIST.ID_GROUP%TYPE DEFAULT NULL,
      id_schedule_in IN SCH_GROUP_HIST.ID_SCHEDULE%TYPE DEFAULT NULL,
      id_patient_in IN SCH_GROUP_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      create_user_in IN SCH_GROUP_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN SCH_GROUP_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN SCH_GROUP_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN SCH_GROUP_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN SCH_GROUP_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN SCH_GROUP_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_ref_type_in IN SCH_GROUP_HIST.FLG_REF_TYPE%TYPE DEFAULT NULL,
      id_prof_ref_in IN SCH_GROUP_HIST.ID_PROF_REF%TYPE DEFAULT NULL,
      id_inst_ref_in IN SCH_GROUP_HIST.ID_INST_REF%TYPE DEFAULT NULL,
      id_cancel_reason_in IN SCH_GROUP_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      flg_contact_type_in IN SCH_GROUP_HIST.FLG_CONTACT_TYPE%TYPE DEFAULT NULL,
      id_health_plan_in IN SCH_GROUP_HIST.ID_HEALTH_PLAN%TYPE DEFAULT NULL,
      auth_code_in IN SCH_GROUP_HIST.AUTH_CODE%TYPE DEFAULT NULL,
      dt_auth_code_exp_in IN SCH_GROUP_HIST.DT_AUTH_CODE_EXP%TYPE DEFAULT NULL,
      dt_update_in IN SCH_GROUP_HIST.DT_UPDATE%TYPE DEFAULT current_timestamp
            ,
      id_pat_health_plan_in IN SCH_GROUP_HIST.ID_PAT_HEALTH_PLAN%TYPE DEFAULT NULL,
      id_prof_update_in IN SCH_GROUP_HIST.ID_PROF_UPDATE%TYPE DEFAULT NULL,
      ignore_if_null_in IN BOOLEAN := TRUE,
      handle_error_in IN BOOLEAN := TRUE,
      clob_columns_in IN varchar2_t,
      clob_pieces_in IN  varchar2_t
      );

   PROCEDURE n_upd_ins_clobs_in_chunks (
      id_group_in IN SCH_GROUP_HIST.ID_GROUP%TYPE DEFAULT NULL,
      id_schedule_in IN SCH_GROUP_HIST.ID_SCHEDULE%TYPE DEFAULT NULL,
      id_patient_in IN SCH_GROUP_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      create_user_in IN SCH_GROUP_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN SCH_GROUP_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN SCH_GROUP_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN SCH_GROUP_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN SCH_GROUP_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN SCH_GROUP_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_ref_type_in IN SCH_GROUP_HIST.FLG_REF_TYPE%TYPE DEFAULT NULL,
      id_prof_ref_in IN SCH_GROUP_HIST.ID_PROF_REF%TYPE DEFAULT NULL,
      id_inst_ref_in IN SCH_GROUP_HIST.ID_INST_REF%TYPE DEFAULT NULL,
      id_cancel_reason_in IN SCH_GROUP_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      flg_contact_type_in IN SCH_GROUP_HIST.FLG_CONTACT_TYPE%TYPE DEFAULT NULL,
      id_health_plan_in IN SCH_GROUP_HIST.ID_HEALTH_PLAN%TYPE DEFAULT NULL,
      auth_code_in IN SCH_GROUP_HIST.AUTH_CODE%TYPE DEFAULT NULL,
      dt_auth_code_exp_in IN SCH_GROUP_HIST.DT_AUTH_CODE_EXP%TYPE DEFAULT NULL,
      dt_update_in IN SCH_GROUP_HIST.DT_UPDATE%TYPE DEFAULT current_timestamp
            ,
      id_pat_health_plan_in IN SCH_GROUP_HIST.ID_PAT_HEALTH_PLAN%TYPE DEFAULT NULL,
      id_prof_update_in IN SCH_GROUP_HIST.ID_PROF_UPDATE%TYPE DEFAULT NULL,
      ignore_if_null_in IN BOOLEAN DEFAULT TRUE,
      handle_error_in IN BOOLEAN DEFAULT TRUE,
      clob_columns_in IN varchar2_t,
      clob_pieces_in IN  varchar2_t
      );
*/
   /*
   END Special logic for handling LOB columns.
   */
   -- Insert one row, providing primary key if present
   PROCEDURE ins (
      id_group_in IN SCH_GROUP_HIST.ID_GROUP%TYPE DEFAULT NULL,
      id_schedule_in IN SCH_GROUP_HIST.ID_SCHEDULE%TYPE DEFAULT NULL,
      id_patient_in IN SCH_GROUP_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      create_user_in IN SCH_GROUP_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN SCH_GROUP_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN SCH_GROUP_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN SCH_GROUP_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN SCH_GROUP_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN SCH_GROUP_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_ref_type_in IN SCH_GROUP_HIST.FLG_REF_TYPE%TYPE DEFAULT NULL,
      id_prof_ref_in IN SCH_GROUP_HIST.ID_PROF_REF%TYPE DEFAULT NULL,
      id_inst_ref_in IN SCH_GROUP_HIST.ID_INST_REF%TYPE DEFAULT NULL,
      id_cancel_reason_in IN SCH_GROUP_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      no_show_notes_in IN SCH_GROUP_HIST.NO_SHOW_NOTES%TYPE DEFAULT NULL,
      flg_contact_type_in IN SCH_GROUP_HIST.FLG_CONTACT_TYPE%TYPE DEFAULT NULL,
      id_health_plan_in IN SCH_GROUP_HIST.ID_HEALTH_PLAN%TYPE DEFAULT NULL,
      auth_code_in IN SCH_GROUP_HIST.AUTH_CODE%TYPE DEFAULT NULL,
      dt_auth_code_exp_in IN SCH_GROUP_HIST.DT_AUTH_CODE_EXP%TYPE DEFAULT NULL,
      dt_update_in IN SCH_GROUP_HIST.DT_UPDATE%TYPE DEFAULT current_timestamp
						,
      pat_instructions_in IN SCH_GROUP_HIST.PAT_INSTRUCTIONS%TYPE DEFAULT NULL,
      id_pat_health_plan_in IN SCH_GROUP_HIST.ID_PAT_HEALTH_PLAN%TYPE DEFAULT NULL,
      id_prof_update_in IN SCH_GROUP_HIST.ID_PROF_UPDATE%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_group_in IN SCH_GROUP_HIST.ID_GROUP%TYPE DEFAULT NULL,
      id_schedule_in IN SCH_GROUP_HIST.ID_SCHEDULE%TYPE DEFAULT NULL,
      id_patient_in IN SCH_GROUP_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      create_user_in IN SCH_GROUP_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN SCH_GROUP_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN SCH_GROUP_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN SCH_GROUP_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN SCH_GROUP_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN SCH_GROUP_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_ref_type_in IN SCH_GROUP_HIST.FLG_REF_TYPE%TYPE DEFAULT NULL,
      id_prof_ref_in IN SCH_GROUP_HIST.ID_PROF_REF%TYPE DEFAULT NULL,
      id_inst_ref_in IN SCH_GROUP_HIST.ID_INST_REF%TYPE DEFAULT NULL,
      id_cancel_reason_in IN SCH_GROUP_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      no_show_notes_in IN SCH_GROUP_HIST.NO_SHOW_NOTES%TYPE DEFAULT NULL,
      flg_contact_type_in IN SCH_GROUP_HIST.FLG_CONTACT_TYPE%TYPE DEFAULT NULL,
      id_health_plan_in IN SCH_GROUP_HIST.ID_HEALTH_PLAN%TYPE DEFAULT NULL,
      auth_code_in IN SCH_GROUP_HIST.AUTH_CODE%TYPE DEFAULT NULL,
      dt_auth_code_exp_in IN SCH_GROUP_HIST.DT_AUTH_CODE_EXP%TYPE DEFAULT NULL,
      dt_update_in IN SCH_GROUP_HIST.DT_UPDATE%TYPE DEFAULT current_timestamp
						,
      pat_instructions_in IN SCH_GROUP_HIST.PAT_INSTRUCTIONS%TYPE DEFAULT NULL,
      id_pat_health_plan_in IN SCH_GROUP_HIST.ID_PAT_HEALTH_PLAN%TYPE DEFAULT NULL,
      id_prof_update_in IN SCH_GROUP_HIST.ID_PROF_UPDATE%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );


   -- Insert a row based on a record.
   PROCEDURE ins (
      rec_in IN SCH_GROUP_HIST%ROWTYPE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rec_in IN SCH_GROUP_HIST%ROWTYPE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Insert a collection of rows using FORALL; all primary key values
   -- must have already been generated, or are handled in triggers.
   PROCEDURE ins (
      rows_in IN SCH_GROUP_HIST_tc
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rows_in IN SCH_GROUP_HIST_tc
     ,handle_error_in IN BOOLEAN := TRUE
   );





   -- Use Native Dynamic SQL increment a single NUMBER column
   -- for all rows specified by the dynamic WHERE clause
   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
   );







    -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );


      -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Initialize a record with default values for columns in the table.
   PROCEDURE initrec (
      sch_group_hist_inout IN OUT SCH_GROUP_HIST%ROWTYPE
   );

   FUNCTION initrec RETURN SCH_GROUP_HIST%ROWTYPE;



   FUNCTION get_data_rowid(
        rows_in IN TABLE_VARCHAR
        ) RETURN SCH_GROUP_HIST_tc;


   FUNCTION get_data_rowid_pat(
        rows_in IN TABLE_VARCHAR
        ) RETURN SCH_GROUP_HIST_tc;

END TS_SCH_GROUP_HIST;
/
