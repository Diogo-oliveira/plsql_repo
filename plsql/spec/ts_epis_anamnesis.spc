/*-- Last Change Revision: $Rev: 792943 $*/
/*-- Last Change by: $Author: pedro.carneiro $*/
/*-- Date of last change: $Date: 2010-12-02 17:48:34 +0000 (qui, 02 dez 2010) $*/


CREATE OR REPLACE PACKAGE TS_EPIS_ANAMNESIS
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Outubro 20, 2010 10:38:52
| Created By: ALERT
*/
IS

  -- Collection of %ROWTYPE records based on "EPIS_ANAMNESIS"
     TYPE EPIS_ANAMNESIS_tc IS TABLE OF EPIS_ANAMNESIS%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE epis_anamnesis_ntt IS TABLE OF EPIS_ANAMNESIS%ROWTYPE;
     TYPE epis_anamnesis_vat IS VARRAY(100) OF EPIS_ANAMNESIS%ROWTYPE;

  -- Same type structure, with a static name.
     TYPE aat IS TABLE OF EPIS_ANAMNESIS%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE ntt IS TABLE OF EPIS_ANAMNESIS%ROWTYPE;
     TYPE vat IS VARRAY(100) OF EPIS_ANAMNESIS%ROWTYPE;

   -- Column Collection based on column "ID_EPIS_ANAMNESIS"
   TYPE ID_EPIS_ANAMNESIS_cc IS TABLE OF EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DESC_EPIS_ANAMNESIS_BCK"
   TYPE DESC_EPIS_ANAMNESIS_BCK_cc IS TABLE OF EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS_BCK%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_EPISODE"
   TYPE ID_EPISODE_cc IS TABLE OF EPIS_ANAMNESIS.ID_EPISODE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PROFESSIONAL"
   TYPE ID_PROFESSIONAL_cc IS TABLE OF EPIS_ANAMNESIS.ID_PROFESSIONAL%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_TYPE"
   TYPE FLG_TYPE_cc IS TABLE OF EPIS_ANAMNESIS.FLG_TYPE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_TEMP"
   TYPE FLG_TEMP_cc IS TABLE OF EPIS_ANAMNESIS.FLG_TEMP%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_INSTITUTION"
   TYPE ID_INSTITUTION_cc IS TABLE OF EPIS_ANAMNESIS.ID_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_SOFTWARE"
   TYPE ID_SOFTWARE_cc IS TABLE OF EPIS_ANAMNESIS.ID_SOFTWARE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_DIAGNOSIS"
   TYPE ID_DIAGNOSIS_cc IS TABLE OF EPIS_ANAMNESIS.ID_DIAGNOSIS%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_CLASS"
   TYPE FLG_CLASS_cc IS TABLE OF EPIS_ANAMNESIS.FLG_CLASS%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PATIENT"
   TYPE ID_PATIENT_cc IS TABLE OF EPIS_ANAMNESIS.ID_PATIENT%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_EPIS_ANAMNESIS_TSTZ"
   TYPE DT_EPIS_ANAMNESIS_TSTZ_cc IS TABLE OF EPIS_ANAMNESIS.DT_EPIS_ANAMNESIS_TSTZ%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_EPIS_ANAMNESIS_PARENT"
   TYPE ID_EPIS_ANAMNESIS_PARENT_cc IS TABLE OF EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS_PARENT%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_STATUS"
   TYPE FLG_STATUS_cc IS TABLE OF EPIS_ANAMNESIS.FLG_STATUS%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_EDITION_TYPE"
   TYPE FLG_EDITION_TYPE_cc IS TABLE OF EPIS_ANAMNESIS.FLG_EDITION_TYPE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_USER"
   TYPE CREATE_USER_cc IS TABLE OF EPIS_ANAMNESIS.CREATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_TIME"
   TYPE CREATE_TIME_cc IS TABLE OF EPIS_ANAMNESIS.CREATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_INSTITUTION"
   TYPE CREATE_INSTITUTION_cc IS TABLE OF EPIS_ANAMNESIS.CREATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_USER"
   TYPE UPDATE_USER_cc IS TABLE OF EPIS_ANAMNESIS.UPDATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_TIME"
   TYPE UPDATE_TIME_cc IS TABLE OF EPIS_ANAMNESIS.UPDATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_INSTITUTION"
   TYPE UPDATE_INSTITUTION_cc IS TABLE OF EPIS_ANAMNESIS.UPDATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DESC_EPIS_ANAMNESIS"
   TYPE DESC_EPIS_ANAMNESIS_cc IS TABLE OF EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_CANCEL_INFO_DET"
   TYPE ID_CANCEL_INFO_DET_cc IS TABLE OF EPIS_ANAMNESIS.ID_CANCEL_INFO_DET%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_REPORTED_BY"
   TYPE FLG_REPORTED_BY_cc IS TABLE OF EPIS_ANAMNESIS.FLG_REPORTED_BY%TYPE INDEX BY BINARY_INTEGER;

   TYPE varchar2_t IS TABLE OF VARCHAR2(32767) INDEX BY PLS_INTEGER;
   /*
   START Special logic for handling LOB columns....
   */
   PROCEDURE n_ins_clobs_in_chunks (
      id_epis_anamnesis_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS%TYPE,
      desc_epis_anamnesis_bck_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS_BCK%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_ANAMNESIS.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_ANAMNESIS.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      flg_type_in IN EPIS_ANAMNESIS.FLG_TYPE%TYPE DEFAULT NULL,
      flg_temp_in IN EPIS_ANAMNESIS.FLG_TEMP%TYPE DEFAULT NULL,
      id_institution_in IN EPIS_ANAMNESIS.ID_INSTITUTION%TYPE DEFAULT NULL,
      id_software_in IN EPIS_ANAMNESIS.ID_SOFTWARE%TYPE DEFAULT NULL,
      id_diagnosis_in IN EPIS_ANAMNESIS.ID_DIAGNOSIS%TYPE DEFAULT NULL,
      flg_class_in IN EPIS_ANAMNESIS.FLG_CLASS%TYPE DEFAULT NULL,
      id_patient_in IN EPIS_ANAMNESIS.ID_PATIENT%TYPE DEFAULT NULL,
      dt_epis_anamnesis_tstz_in IN EPIS_ANAMNESIS.DT_EPIS_ANAMNESIS_TSTZ%TYPE DEFAULT NULL,
      id_epis_anamnesis_parent_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS_PARENT%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_ANAMNESIS.FLG_STATUS%TYPE DEFAULT NULL,
      flg_edition_type_in IN EPIS_ANAMNESIS.FLG_EDITION_TYPE%TYPE DEFAULT NULL,
      create_user_in IN EPIS_ANAMNESIS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN EPIS_ANAMNESIS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN EPIS_ANAMNESIS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN EPIS_ANAMNESIS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN EPIS_ANAMNESIS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN EPIS_ANAMNESIS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_cancel_info_det_in IN EPIS_ANAMNESIS.ID_CANCEL_INFO_DET%TYPE DEFAULT NULL,
      flg_reported_by_in IN EPIS_ANAMNESIS.FLG_REPORTED_BY%TYPE DEFAULT NULL,
      handle_error_in IN BOOLEAN := TRUE,
      clob_columns_in IN varchar2_t,
      clob_pieces_in IN  varchar2_t
   );

   PROCEDURE n_upd_clobs_in_chunks (
      id_epis_anamnesis_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS%TYPE,
      desc_epis_anamnesis_bck_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS_BCK%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_ANAMNESIS.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_ANAMNESIS.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      flg_type_in IN EPIS_ANAMNESIS.FLG_TYPE%TYPE DEFAULT NULL,
      flg_temp_in IN EPIS_ANAMNESIS.FLG_TEMP%TYPE DEFAULT NULL,
      id_institution_in IN EPIS_ANAMNESIS.ID_INSTITUTION%TYPE DEFAULT NULL,
      id_software_in IN EPIS_ANAMNESIS.ID_SOFTWARE%TYPE DEFAULT NULL,
      id_diagnosis_in IN EPIS_ANAMNESIS.ID_DIAGNOSIS%TYPE DEFAULT NULL,
      flg_class_in IN EPIS_ANAMNESIS.FLG_CLASS%TYPE DEFAULT NULL,
      id_patient_in IN EPIS_ANAMNESIS.ID_PATIENT%TYPE DEFAULT NULL,
      dt_epis_anamnesis_tstz_in IN EPIS_ANAMNESIS.DT_EPIS_ANAMNESIS_TSTZ%TYPE DEFAULT NULL,
      id_epis_anamnesis_parent_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS_PARENT%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_ANAMNESIS.FLG_STATUS%TYPE DEFAULT NULL,
      flg_edition_type_in IN EPIS_ANAMNESIS.FLG_EDITION_TYPE%TYPE DEFAULT NULL,
      create_user_in IN EPIS_ANAMNESIS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN EPIS_ANAMNESIS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN EPIS_ANAMNESIS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN EPIS_ANAMNESIS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN EPIS_ANAMNESIS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN EPIS_ANAMNESIS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_cancel_info_det_in IN EPIS_ANAMNESIS.ID_CANCEL_INFO_DET%TYPE DEFAULT NULL,
      flg_reported_by_in IN EPIS_ANAMNESIS.FLG_REPORTED_BY%TYPE DEFAULT NULL,
      ignore_if_null_in IN BOOLEAN := TRUE,
      handle_error_in IN BOOLEAN := TRUE,
      clob_columns_in IN varchar2_t,
      clob_pieces_in IN  varchar2_t
      );

   PROCEDURE n_upd_ins_clobs_in_chunks (
      id_epis_anamnesis_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS%TYPE,
      desc_epis_anamnesis_bck_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS_BCK%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_ANAMNESIS.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_ANAMNESIS.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      flg_type_in IN EPIS_ANAMNESIS.FLG_TYPE%TYPE DEFAULT NULL,
      flg_temp_in IN EPIS_ANAMNESIS.FLG_TEMP%TYPE DEFAULT NULL,
      id_institution_in IN EPIS_ANAMNESIS.ID_INSTITUTION%TYPE DEFAULT NULL,
      id_software_in IN EPIS_ANAMNESIS.ID_SOFTWARE%TYPE DEFAULT NULL,
      id_diagnosis_in IN EPIS_ANAMNESIS.ID_DIAGNOSIS%TYPE DEFAULT NULL,
      flg_class_in IN EPIS_ANAMNESIS.FLG_CLASS%TYPE DEFAULT NULL,
      id_patient_in IN EPIS_ANAMNESIS.ID_PATIENT%TYPE DEFAULT NULL,
      dt_epis_anamnesis_tstz_in IN EPIS_ANAMNESIS.DT_EPIS_ANAMNESIS_TSTZ%TYPE DEFAULT NULL,
      id_epis_anamnesis_parent_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS_PARENT%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_ANAMNESIS.FLG_STATUS%TYPE DEFAULT NULL,
      flg_edition_type_in IN EPIS_ANAMNESIS.FLG_EDITION_TYPE%TYPE DEFAULT NULL,
      create_user_in IN EPIS_ANAMNESIS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN EPIS_ANAMNESIS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN EPIS_ANAMNESIS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN EPIS_ANAMNESIS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN EPIS_ANAMNESIS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN EPIS_ANAMNESIS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_cancel_info_det_in IN EPIS_ANAMNESIS.ID_CANCEL_INFO_DET%TYPE DEFAULT NULL,
      flg_reported_by_in IN EPIS_ANAMNESIS.FLG_REPORTED_BY%TYPE DEFAULT NULL,
      ignore_if_null_in IN BOOLEAN DEFAULT TRUE,
      handle_error_in IN BOOLEAN DEFAULT TRUE,
      clob_columns_in IN varchar2_t,
      clob_pieces_in IN  varchar2_t
      );

   /*
   END Special logic for handling LOB columns.
   */
   -- Insert one row, providing primary key if present
   PROCEDURE ins (
      id_epis_anamnesis_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS%TYPE
      ,
      desc_epis_anamnesis_bck_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS_BCK%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_ANAMNESIS.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_ANAMNESIS.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      flg_type_in IN EPIS_ANAMNESIS.FLG_TYPE%TYPE DEFAULT NULL,
      flg_temp_in IN EPIS_ANAMNESIS.FLG_TEMP%TYPE DEFAULT NULL,
      id_institution_in IN EPIS_ANAMNESIS.ID_INSTITUTION%TYPE DEFAULT NULL,
      id_software_in IN EPIS_ANAMNESIS.ID_SOFTWARE%TYPE DEFAULT NULL,
      id_diagnosis_in IN EPIS_ANAMNESIS.ID_DIAGNOSIS%TYPE DEFAULT NULL,
      flg_class_in IN EPIS_ANAMNESIS.FLG_CLASS%TYPE DEFAULT NULL,
      id_patient_in IN EPIS_ANAMNESIS.ID_PATIENT%TYPE DEFAULT NULL,
      dt_epis_anamnesis_tstz_in IN EPIS_ANAMNESIS.DT_EPIS_ANAMNESIS_TSTZ%TYPE DEFAULT NULL,
      id_epis_anamnesis_parent_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS_PARENT%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_ANAMNESIS.FLG_STATUS%TYPE DEFAULT NULL,
      flg_edition_type_in IN EPIS_ANAMNESIS.FLG_EDITION_TYPE%TYPE DEFAULT NULL,
      create_user_in IN EPIS_ANAMNESIS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN EPIS_ANAMNESIS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN EPIS_ANAMNESIS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN EPIS_ANAMNESIS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN EPIS_ANAMNESIS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN EPIS_ANAMNESIS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      desc_epis_anamnesis_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS%TYPE DEFAULT NULL,
      id_cancel_info_det_in IN EPIS_ANAMNESIS.ID_CANCEL_INFO_DET%TYPE DEFAULT NULL,
      flg_reported_by_in IN EPIS_ANAMNESIS.FLG_REPORTED_BY%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_epis_anamnesis_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS%TYPE
      ,
      desc_epis_anamnesis_bck_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS_BCK%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_ANAMNESIS.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_ANAMNESIS.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      flg_type_in IN EPIS_ANAMNESIS.FLG_TYPE%TYPE DEFAULT NULL,
      flg_temp_in IN EPIS_ANAMNESIS.FLG_TEMP%TYPE DEFAULT NULL,
      id_institution_in IN EPIS_ANAMNESIS.ID_INSTITUTION%TYPE DEFAULT NULL,
      id_software_in IN EPIS_ANAMNESIS.ID_SOFTWARE%TYPE DEFAULT NULL,
      id_diagnosis_in IN EPIS_ANAMNESIS.ID_DIAGNOSIS%TYPE DEFAULT NULL,
      flg_class_in IN EPIS_ANAMNESIS.FLG_CLASS%TYPE DEFAULT NULL,
      id_patient_in IN EPIS_ANAMNESIS.ID_PATIENT%TYPE DEFAULT NULL,
      dt_epis_anamnesis_tstz_in IN EPIS_ANAMNESIS.DT_EPIS_ANAMNESIS_TSTZ%TYPE DEFAULT NULL,
      id_epis_anamnesis_parent_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS_PARENT%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_ANAMNESIS.FLG_STATUS%TYPE DEFAULT NULL,
      flg_edition_type_in IN EPIS_ANAMNESIS.FLG_EDITION_TYPE%TYPE DEFAULT NULL,
      create_user_in IN EPIS_ANAMNESIS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN EPIS_ANAMNESIS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN EPIS_ANAMNESIS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN EPIS_ANAMNESIS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN EPIS_ANAMNESIS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN EPIS_ANAMNESIS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      desc_epis_anamnesis_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS%TYPE DEFAULT NULL,
      id_cancel_info_det_in IN EPIS_ANAMNESIS.ID_CANCEL_INFO_DET%TYPE DEFAULT NULL,
      flg_reported_by_in IN EPIS_ANAMNESIS.FLG_REPORTED_BY%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );


   -- Insert a row based on a record.
   -- Specify whether or not a primary key value should be generated.
   PROCEDURE ins (
      rec_in IN EPIS_ANAMNESIS%ROWTYPE
     ,gen_pky_in IN BOOLEAN DEFAULT FALSE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rec_in IN EPIS_ANAMNESIS%ROWTYPE
     ,gen_pky_in IN BOOLEAN DEFAULT FALSE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Insert a collection of rows using FORALL; all primary key values
   -- must have already been generated, or are handled in triggers.
   PROCEDURE ins (
      rows_in IN EPIS_ANAMNESIS_tc
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rows_in IN EPIS_ANAMNESIS_tc
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Return next primary key value using the named sequence.
     FUNCTION next_key (sequence_in IN VARCHAR2 := NULL) RETURN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS%TYPE;

   -- Insert one row, generating hidden primary key using a sequence
   PROCEDURE ins (
      desc_epis_anamnesis_bck_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS_BCK%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_ANAMNESIS.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_ANAMNESIS.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      flg_type_in IN EPIS_ANAMNESIS.FLG_TYPE%TYPE DEFAULT NULL,
      flg_temp_in IN EPIS_ANAMNESIS.FLG_TEMP%TYPE DEFAULT NULL,
      id_institution_in IN EPIS_ANAMNESIS.ID_INSTITUTION%TYPE DEFAULT NULL,
      id_software_in IN EPIS_ANAMNESIS.ID_SOFTWARE%TYPE DEFAULT NULL,
      id_diagnosis_in IN EPIS_ANAMNESIS.ID_DIAGNOSIS%TYPE DEFAULT NULL,
      flg_class_in IN EPIS_ANAMNESIS.FLG_CLASS%TYPE DEFAULT NULL,
      id_patient_in IN EPIS_ANAMNESIS.ID_PATIENT%TYPE DEFAULT NULL,
      dt_epis_anamnesis_tstz_in IN EPIS_ANAMNESIS.DT_EPIS_ANAMNESIS_TSTZ%TYPE DEFAULT NULL,
      id_epis_anamnesis_parent_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS_PARENT%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_ANAMNESIS.FLG_STATUS%TYPE DEFAULT NULL,
      flg_edition_type_in IN EPIS_ANAMNESIS.FLG_EDITION_TYPE%TYPE DEFAULT NULL,
      create_user_in IN EPIS_ANAMNESIS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN EPIS_ANAMNESIS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN EPIS_ANAMNESIS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN EPIS_ANAMNESIS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN EPIS_ANAMNESIS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN EPIS_ANAMNESIS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      desc_epis_anamnesis_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS%TYPE DEFAULT NULL,
      id_cancel_info_det_in IN EPIS_ANAMNESIS.ID_CANCEL_INFO_DET%TYPE DEFAULT NULL,
      flg_reported_by_in IN EPIS_ANAMNESIS.FLG_REPORTED_BY%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      desc_epis_anamnesis_bck_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS_BCK%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_ANAMNESIS.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_ANAMNESIS.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      flg_type_in IN EPIS_ANAMNESIS.FLG_TYPE%TYPE DEFAULT NULL,
      flg_temp_in IN EPIS_ANAMNESIS.FLG_TEMP%TYPE DEFAULT NULL,
      id_institution_in IN EPIS_ANAMNESIS.ID_INSTITUTION%TYPE DEFAULT NULL,
      id_software_in IN EPIS_ANAMNESIS.ID_SOFTWARE%TYPE DEFAULT NULL,
      id_diagnosis_in IN EPIS_ANAMNESIS.ID_DIAGNOSIS%TYPE DEFAULT NULL,
      flg_class_in IN EPIS_ANAMNESIS.FLG_CLASS%TYPE DEFAULT NULL,
      id_patient_in IN EPIS_ANAMNESIS.ID_PATIENT%TYPE DEFAULT NULL,
      dt_epis_anamnesis_tstz_in IN EPIS_ANAMNESIS.DT_EPIS_ANAMNESIS_TSTZ%TYPE DEFAULT NULL,
      id_epis_anamnesis_parent_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS_PARENT%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_ANAMNESIS.FLG_STATUS%TYPE DEFAULT NULL,
      flg_edition_type_in IN EPIS_ANAMNESIS.FLG_EDITION_TYPE%TYPE DEFAULT NULL,
      create_user_in IN EPIS_ANAMNESIS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN EPIS_ANAMNESIS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN EPIS_ANAMNESIS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN EPIS_ANAMNESIS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN EPIS_ANAMNESIS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN EPIS_ANAMNESIS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      desc_epis_anamnesis_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS%TYPE DEFAULT NULL,
      id_cancel_info_det_in IN EPIS_ANAMNESIS.ID_CANCEL_INFO_DET%TYPE DEFAULT NULL,
      flg_reported_by_in IN EPIS_ANAMNESIS.FLG_REPORTED_BY%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );

   -- Insert one row, returning primary key generated by sequence
   PROCEDURE ins (
      desc_epis_anamnesis_bck_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS_BCK%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_ANAMNESIS.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_ANAMNESIS.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      flg_type_in IN EPIS_ANAMNESIS.FLG_TYPE%TYPE DEFAULT NULL,
      flg_temp_in IN EPIS_ANAMNESIS.FLG_TEMP%TYPE DEFAULT NULL,
      id_institution_in IN EPIS_ANAMNESIS.ID_INSTITUTION%TYPE DEFAULT NULL,
      id_software_in IN EPIS_ANAMNESIS.ID_SOFTWARE%TYPE DEFAULT NULL,
      id_diagnosis_in IN EPIS_ANAMNESIS.ID_DIAGNOSIS%TYPE DEFAULT NULL,
      flg_class_in IN EPIS_ANAMNESIS.FLG_CLASS%TYPE DEFAULT NULL,
      id_patient_in IN EPIS_ANAMNESIS.ID_PATIENT%TYPE DEFAULT NULL,
      dt_epis_anamnesis_tstz_in IN EPIS_ANAMNESIS.DT_EPIS_ANAMNESIS_TSTZ%TYPE DEFAULT NULL,
      id_epis_anamnesis_parent_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS_PARENT%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_ANAMNESIS.FLG_STATUS%TYPE DEFAULT NULL,
      flg_edition_type_in IN EPIS_ANAMNESIS.FLG_EDITION_TYPE%TYPE DEFAULT NULL,
      create_user_in IN EPIS_ANAMNESIS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN EPIS_ANAMNESIS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN EPIS_ANAMNESIS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN EPIS_ANAMNESIS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN EPIS_ANAMNESIS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN EPIS_ANAMNESIS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      desc_epis_anamnesis_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS%TYPE DEFAULT NULL,
      id_cancel_info_det_in IN EPIS_ANAMNESIS.ID_CANCEL_INFO_DET%TYPE DEFAULT NULL,
      flg_reported_by_in IN EPIS_ANAMNESIS.FLG_REPORTED_BY%TYPE DEFAULT NULL,
      id_epis_anamnesis_out IN OUT EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS%TYPE
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      desc_epis_anamnesis_bck_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS_BCK%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_ANAMNESIS.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_ANAMNESIS.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      flg_type_in IN EPIS_ANAMNESIS.FLG_TYPE%TYPE DEFAULT NULL,
      flg_temp_in IN EPIS_ANAMNESIS.FLG_TEMP%TYPE DEFAULT NULL,
      id_institution_in IN EPIS_ANAMNESIS.ID_INSTITUTION%TYPE DEFAULT NULL,
      id_software_in IN EPIS_ANAMNESIS.ID_SOFTWARE%TYPE DEFAULT NULL,
      id_diagnosis_in IN EPIS_ANAMNESIS.ID_DIAGNOSIS%TYPE DEFAULT NULL,
      flg_class_in IN EPIS_ANAMNESIS.FLG_CLASS%TYPE DEFAULT NULL,
      id_patient_in IN EPIS_ANAMNESIS.ID_PATIENT%TYPE DEFAULT NULL,
      dt_epis_anamnesis_tstz_in IN EPIS_ANAMNESIS.DT_EPIS_ANAMNESIS_TSTZ%TYPE DEFAULT NULL,
      id_epis_anamnesis_parent_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS_PARENT%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_ANAMNESIS.FLG_STATUS%TYPE DEFAULT NULL,
      flg_edition_type_in IN EPIS_ANAMNESIS.FLG_EDITION_TYPE%TYPE DEFAULT NULL,
      create_user_in IN EPIS_ANAMNESIS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN EPIS_ANAMNESIS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN EPIS_ANAMNESIS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN EPIS_ANAMNESIS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN EPIS_ANAMNESIS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN EPIS_ANAMNESIS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      desc_epis_anamnesis_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS%TYPE DEFAULT NULL,
      id_cancel_info_det_in IN EPIS_ANAMNESIS.ID_CANCEL_INFO_DET%TYPE DEFAULT NULL,
      flg_reported_by_in IN EPIS_ANAMNESIS.FLG_REPORTED_BY%TYPE DEFAULT NULL,
      id_epis_anamnesis_out IN OUT EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS%TYPE
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );

   -- Insert one row with function, return generated primary key
   FUNCTION ins (
      desc_epis_anamnesis_bck_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS_BCK%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_ANAMNESIS.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_ANAMNESIS.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      flg_type_in IN EPIS_ANAMNESIS.FLG_TYPE%TYPE DEFAULT NULL,
      flg_temp_in IN EPIS_ANAMNESIS.FLG_TEMP%TYPE DEFAULT NULL,
      id_institution_in IN EPIS_ANAMNESIS.ID_INSTITUTION%TYPE DEFAULT NULL,
      id_software_in IN EPIS_ANAMNESIS.ID_SOFTWARE%TYPE DEFAULT NULL,
      id_diagnosis_in IN EPIS_ANAMNESIS.ID_DIAGNOSIS%TYPE DEFAULT NULL,
      flg_class_in IN EPIS_ANAMNESIS.FLG_CLASS%TYPE DEFAULT NULL,
      id_patient_in IN EPIS_ANAMNESIS.ID_PATIENT%TYPE DEFAULT NULL,
      dt_epis_anamnesis_tstz_in IN EPIS_ANAMNESIS.DT_EPIS_ANAMNESIS_TSTZ%TYPE DEFAULT NULL,
      id_epis_anamnesis_parent_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS_PARENT%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_ANAMNESIS.FLG_STATUS%TYPE DEFAULT NULL,
      flg_edition_type_in IN EPIS_ANAMNESIS.FLG_EDITION_TYPE%TYPE DEFAULT NULL,
      create_user_in IN EPIS_ANAMNESIS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN EPIS_ANAMNESIS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN EPIS_ANAMNESIS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN EPIS_ANAMNESIS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN EPIS_ANAMNESIS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN EPIS_ANAMNESIS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      desc_epis_anamnesis_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS%TYPE DEFAULT NULL,
      id_cancel_info_det_in IN EPIS_ANAMNESIS.ID_CANCEL_INFO_DET%TYPE DEFAULT NULL,
      flg_reported_by_in IN EPIS_ANAMNESIS.FLG_REPORTED_BY%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
      RETURN
         EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS%TYPE
      ;

   FUNCTION ins (
      desc_epis_anamnesis_bck_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS_BCK%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_ANAMNESIS.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_ANAMNESIS.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      flg_type_in IN EPIS_ANAMNESIS.FLG_TYPE%TYPE DEFAULT NULL,
      flg_temp_in IN EPIS_ANAMNESIS.FLG_TEMP%TYPE DEFAULT NULL,
      id_institution_in IN EPIS_ANAMNESIS.ID_INSTITUTION%TYPE DEFAULT NULL,
      id_software_in IN EPIS_ANAMNESIS.ID_SOFTWARE%TYPE DEFAULT NULL,
      id_diagnosis_in IN EPIS_ANAMNESIS.ID_DIAGNOSIS%TYPE DEFAULT NULL,
      flg_class_in IN EPIS_ANAMNESIS.FLG_CLASS%TYPE DEFAULT NULL,
      id_patient_in IN EPIS_ANAMNESIS.ID_PATIENT%TYPE DEFAULT NULL,
      dt_epis_anamnesis_tstz_in IN EPIS_ANAMNESIS.DT_EPIS_ANAMNESIS_TSTZ%TYPE DEFAULT NULL,
      id_epis_anamnesis_parent_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS_PARENT%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_ANAMNESIS.FLG_STATUS%TYPE DEFAULT NULL,
      flg_edition_type_in IN EPIS_ANAMNESIS.FLG_EDITION_TYPE%TYPE DEFAULT NULL,
      create_user_in IN EPIS_ANAMNESIS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN EPIS_ANAMNESIS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN EPIS_ANAMNESIS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN EPIS_ANAMNESIS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN EPIS_ANAMNESIS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN EPIS_ANAMNESIS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      desc_epis_anamnesis_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS%TYPE DEFAULT NULL,
      id_cancel_info_det_in IN EPIS_ANAMNESIS.ID_CANCEL_INFO_DET%TYPE DEFAULT NULL,
      flg_reported_by_in IN EPIS_ANAMNESIS.FLG_REPORTED_BY%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      )
      RETURN
         EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS%TYPE
      ;

   -- Update any/all columns by primary key. If you pass NULL, then
   -- the current column value is set to itself. If you need a more
   -- selected UPDATE then use one of the onecol procedures below.

  PROCEDURE upd (
      id_epis_anamnesis_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS%TYPE,
      desc_epis_anamnesis_bck_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS_BCK%TYPE DEFAULT NULL,
      DESC_EPIS_ANAMNESIS_BCK_nin IN BOOLEAN := TRUE,
      id_episode_in IN EPIS_ANAMNESIS.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      id_professional_in IN EPIS_ANAMNESIS.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      ID_PROFESSIONAL_nin IN BOOLEAN := TRUE,
      flg_type_in IN EPIS_ANAMNESIS.FLG_TYPE%TYPE DEFAULT NULL,
      FLG_TYPE_nin IN BOOLEAN := TRUE,
      flg_temp_in IN EPIS_ANAMNESIS.FLG_TEMP%TYPE DEFAULT NULL,
      FLG_TEMP_nin IN BOOLEAN := TRUE,
      id_institution_in IN EPIS_ANAMNESIS.ID_INSTITUTION%TYPE DEFAULT NULL,
      ID_INSTITUTION_nin IN BOOLEAN := TRUE,
      id_software_in IN EPIS_ANAMNESIS.ID_SOFTWARE%TYPE DEFAULT NULL,
      ID_SOFTWARE_nin IN BOOLEAN := TRUE,
      id_diagnosis_in IN EPIS_ANAMNESIS.ID_DIAGNOSIS%TYPE DEFAULT NULL,
      ID_DIAGNOSIS_nin IN BOOLEAN := TRUE,
      flg_class_in IN EPIS_ANAMNESIS.FLG_CLASS%TYPE DEFAULT NULL,
      FLG_CLASS_nin IN BOOLEAN := TRUE,
      id_patient_in IN EPIS_ANAMNESIS.ID_PATIENT%TYPE DEFAULT NULL,
      ID_PATIENT_nin IN BOOLEAN := TRUE,
      dt_epis_anamnesis_tstz_in IN EPIS_ANAMNESIS.DT_EPIS_ANAMNESIS_TSTZ%TYPE DEFAULT NULL,
      DT_EPIS_ANAMNESIS_TSTZ_nin IN BOOLEAN := TRUE,
      id_epis_anamnesis_parent_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS_PARENT%TYPE DEFAULT NULL,
      ID_EPIS_ANAMNESIS_PARENT_nin IN BOOLEAN := TRUE,
      flg_status_in IN EPIS_ANAMNESIS.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      flg_edition_type_in IN EPIS_ANAMNESIS.FLG_EDITION_TYPE%TYPE DEFAULT NULL,
      FLG_EDITION_TYPE_nin IN BOOLEAN := TRUE,
      create_user_in IN EPIS_ANAMNESIS.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN EPIS_ANAMNESIS.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN EPIS_ANAMNESIS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN EPIS_ANAMNESIS.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN EPIS_ANAMNESIS.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN EPIS_ANAMNESIS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      desc_epis_anamnesis_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS%TYPE DEFAULT NULL,
      DESC_EPIS_ANAMNESIS_nin IN BOOLEAN := TRUE,
      id_cancel_info_det_in IN EPIS_ANAMNESIS.ID_CANCEL_INFO_DET%TYPE DEFAULT NULL,
      ID_CANCEL_INFO_DET_nin IN BOOLEAN := TRUE,
      flg_reported_by_in IN EPIS_ANAMNESIS.FLG_REPORTED_BY%TYPE DEFAULT NULL,
      FLG_REPORTED_BY_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


       PROCEDURE upd (
      id_epis_anamnesis_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS%TYPE,
      desc_epis_anamnesis_bck_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS_BCK%TYPE DEFAULT NULL,
      DESC_EPIS_ANAMNESIS_BCK_nin IN BOOLEAN := TRUE,
      id_episode_in IN EPIS_ANAMNESIS.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      id_professional_in IN EPIS_ANAMNESIS.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      ID_PROFESSIONAL_nin IN BOOLEAN := TRUE,
      flg_type_in IN EPIS_ANAMNESIS.FLG_TYPE%TYPE DEFAULT NULL,
      FLG_TYPE_nin IN BOOLEAN := TRUE,
      flg_temp_in IN EPIS_ANAMNESIS.FLG_TEMP%TYPE DEFAULT NULL,
      FLG_TEMP_nin IN BOOLEAN := TRUE,
      id_institution_in IN EPIS_ANAMNESIS.ID_INSTITUTION%TYPE DEFAULT NULL,
      ID_INSTITUTION_nin IN BOOLEAN := TRUE,
      id_software_in IN EPIS_ANAMNESIS.ID_SOFTWARE%TYPE DEFAULT NULL,
      ID_SOFTWARE_nin IN BOOLEAN := TRUE,
      id_diagnosis_in IN EPIS_ANAMNESIS.ID_DIAGNOSIS%TYPE DEFAULT NULL,
      ID_DIAGNOSIS_nin IN BOOLEAN := TRUE,
      flg_class_in IN EPIS_ANAMNESIS.FLG_CLASS%TYPE DEFAULT NULL,
      FLG_CLASS_nin IN BOOLEAN := TRUE,
      id_patient_in IN EPIS_ANAMNESIS.ID_PATIENT%TYPE DEFAULT NULL,
      ID_PATIENT_nin IN BOOLEAN := TRUE,
      dt_epis_anamnesis_tstz_in IN EPIS_ANAMNESIS.DT_EPIS_ANAMNESIS_TSTZ%TYPE DEFAULT NULL,
      DT_EPIS_ANAMNESIS_TSTZ_nin IN BOOLEAN := TRUE,
      id_epis_anamnesis_parent_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS_PARENT%TYPE DEFAULT NULL,
      ID_EPIS_ANAMNESIS_PARENT_nin IN BOOLEAN := TRUE,
      flg_status_in IN EPIS_ANAMNESIS.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      flg_edition_type_in IN EPIS_ANAMNESIS.FLG_EDITION_TYPE%TYPE DEFAULT NULL,
      FLG_EDITION_TYPE_nin IN BOOLEAN := TRUE,
      create_user_in IN EPIS_ANAMNESIS.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN EPIS_ANAMNESIS.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN EPIS_ANAMNESIS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN EPIS_ANAMNESIS.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN EPIS_ANAMNESIS.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN EPIS_ANAMNESIS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      desc_epis_anamnesis_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS%TYPE DEFAULT NULL,
      DESC_EPIS_ANAMNESIS_nin IN BOOLEAN := TRUE,
      id_cancel_info_det_in IN EPIS_ANAMNESIS.ID_CANCEL_INFO_DET%TYPE DEFAULT NULL,
      ID_CANCEL_INFO_DET_nin IN BOOLEAN := TRUE,
      flg_reported_by_in IN EPIS_ANAMNESIS.FLG_REPORTED_BY%TYPE DEFAULT NULL,
      FLG_REPORTED_BY_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
      );



      PROCEDURE upd (
      desc_epis_anamnesis_bck_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS_BCK%TYPE DEFAULT NULL,
      DESC_EPIS_ANAMNESIS_BCK_nin IN BOOLEAN := TRUE,
      id_episode_in IN EPIS_ANAMNESIS.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      id_professional_in IN EPIS_ANAMNESIS.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      ID_PROFESSIONAL_nin IN BOOLEAN := TRUE,
      flg_type_in IN EPIS_ANAMNESIS.FLG_TYPE%TYPE DEFAULT NULL,
      FLG_TYPE_nin IN BOOLEAN := TRUE,
      flg_temp_in IN EPIS_ANAMNESIS.FLG_TEMP%TYPE DEFAULT NULL,
      FLG_TEMP_nin IN BOOLEAN := TRUE,
      id_institution_in IN EPIS_ANAMNESIS.ID_INSTITUTION%TYPE DEFAULT NULL,
      ID_INSTITUTION_nin IN BOOLEAN := TRUE,
      id_software_in IN EPIS_ANAMNESIS.ID_SOFTWARE%TYPE DEFAULT NULL,
      ID_SOFTWARE_nin IN BOOLEAN := TRUE,
      id_diagnosis_in IN EPIS_ANAMNESIS.ID_DIAGNOSIS%TYPE DEFAULT NULL,
      ID_DIAGNOSIS_nin IN BOOLEAN := TRUE,
      flg_class_in IN EPIS_ANAMNESIS.FLG_CLASS%TYPE DEFAULT NULL,
      FLG_CLASS_nin IN BOOLEAN := TRUE,
      id_patient_in IN EPIS_ANAMNESIS.ID_PATIENT%TYPE DEFAULT NULL,
      ID_PATIENT_nin IN BOOLEAN := TRUE,
      dt_epis_anamnesis_tstz_in IN EPIS_ANAMNESIS.DT_EPIS_ANAMNESIS_TSTZ%TYPE DEFAULT NULL,
      DT_EPIS_ANAMNESIS_TSTZ_nin IN BOOLEAN := TRUE,
      id_epis_anamnesis_parent_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS_PARENT%TYPE DEFAULT NULL,
      ID_EPIS_ANAMNESIS_PARENT_nin IN BOOLEAN := TRUE,
      flg_status_in IN EPIS_ANAMNESIS.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      flg_edition_type_in IN EPIS_ANAMNESIS.FLG_EDITION_TYPE%TYPE DEFAULT NULL,
      FLG_EDITION_TYPE_nin IN BOOLEAN := TRUE,
      create_user_in IN EPIS_ANAMNESIS.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN EPIS_ANAMNESIS.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN EPIS_ANAMNESIS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN EPIS_ANAMNESIS.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN EPIS_ANAMNESIS.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN EPIS_ANAMNESIS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      desc_epis_anamnesis_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS%TYPE DEFAULT NULL,
      DESC_EPIS_ANAMNESIS_nin IN BOOLEAN := TRUE,
      id_cancel_info_det_in IN EPIS_ANAMNESIS.ID_CANCEL_INFO_DET%TYPE DEFAULT NULL,
      ID_CANCEL_INFO_DET_nin IN BOOLEAN := TRUE,
      flg_reported_by_in IN EPIS_ANAMNESIS.FLG_REPORTED_BY%TYPE DEFAULT NULL,
      FLG_REPORTED_BY_nin IN BOOLEAN := TRUE,
    where_in varchar2 DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


      PROCEDURE upd (
      desc_epis_anamnesis_bck_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS_BCK%TYPE DEFAULT NULL,
      DESC_EPIS_ANAMNESIS_BCK_nin IN BOOLEAN := TRUE,
      id_episode_in IN EPIS_ANAMNESIS.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      id_professional_in IN EPIS_ANAMNESIS.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      ID_PROFESSIONAL_nin IN BOOLEAN := TRUE,
      flg_type_in IN EPIS_ANAMNESIS.FLG_TYPE%TYPE DEFAULT NULL,
      FLG_TYPE_nin IN BOOLEAN := TRUE,
      flg_temp_in IN EPIS_ANAMNESIS.FLG_TEMP%TYPE DEFAULT NULL,
      FLG_TEMP_nin IN BOOLEAN := TRUE,
      id_institution_in IN EPIS_ANAMNESIS.ID_INSTITUTION%TYPE DEFAULT NULL,
      ID_INSTITUTION_nin IN BOOLEAN := TRUE,
      id_software_in IN EPIS_ANAMNESIS.ID_SOFTWARE%TYPE DEFAULT NULL,
      ID_SOFTWARE_nin IN BOOLEAN := TRUE,
      id_diagnosis_in IN EPIS_ANAMNESIS.ID_DIAGNOSIS%TYPE DEFAULT NULL,
      ID_DIAGNOSIS_nin IN BOOLEAN := TRUE,
      flg_class_in IN EPIS_ANAMNESIS.FLG_CLASS%TYPE DEFAULT NULL,
      FLG_CLASS_nin IN BOOLEAN := TRUE,
      id_patient_in IN EPIS_ANAMNESIS.ID_PATIENT%TYPE DEFAULT NULL,
      ID_PATIENT_nin IN BOOLEAN := TRUE,
      dt_epis_anamnesis_tstz_in IN EPIS_ANAMNESIS.DT_EPIS_ANAMNESIS_TSTZ%TYPE DEFAULT NULL,
      DT_EPIS_ANAMNESIS_TSTZ_nin IN BOOLEAN := TRUE,
      id_epis_anamnesis_parent_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS_PARENT%TYPE DEFAULT NULL,
      ID_EPIS_ANAMNESIS_PARENT_nin IN BOOLEAN := TRUE,
      flg_status_in IN EPIS_ANAMNESIS.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      flg_edition_type_in IN EPIS_ANAMNESIS.FLG_EDITION_TYPE%TYPE DEFAULT NULL,
      FLG_EDITION_TYPE_nin IN BOOLEAN := TRUE,
      create_user_in IN EPIS_ANAMNESIS.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN EPIS_ANAMNESIS.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN EPIS_ANAMNESIS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN EPIS_ANAMNESIS.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN EPIS_ANAMNESIS.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN EPIS_ANAMNESIS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      desc_epis_anamnesis_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS%TYPE DEFAULT NULL,
      DESC_EPIS_ANAMNESIS_nin IN BOOLEAN := TRUE,
      id_cancel_info_det_in IN EPIS_ANAMNESIS.ID_CANCEL_INFO_DET%TYPE DEFAULT NULL,
      ID_CANCEL_INFO_DET_nin IN BOOLEAN := TRUE,
      flg_reported_by_in IN EPIS_ANAMNESIS.FLG_REPORTED_BY%TYPE DEFAULT NULL,
      FLG_REPORTED_BY_nin IN BOOLEAN := TRUE,
    where_in varchar2 DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
      );



   PROCEDURE upd_ins (
      id_epis_anamnesis_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS%TYPE,
      desc_epis_anamnesis_bck_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS_BCK%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_ANAMNESIS.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_ANAMNESIS.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      flg_type_in IN EPIS_ANAMNESIS.FLG_TYPE%TYPE DEFAULT NULL,
      flg_temp_in IN EPIS_ANAMNESIS.FLG_TEMP%TYPE DEFAULT NULL,
      id_institution_in IN EPIS_ANAMNESIS.ID_INSTITUTION%TYPE DEFAULT NULL,
      id_software_in IN EPIS_ANAMNESIS.ID_SOFTWARE%TYPE DEFAULT NULL,
      id_diagnosis_in IN EPIS_ANAMNESIS.ID_DIAGNOSIS%TYPE DEFAULT NULL,
      flg_class_in IN EPIS_ANAMNESIS.FLG_CLASS%TYPE DEFAULT NULL,
      id_patient_in IN EPIS_ANAMNESIS.ID_PATIENT%TYPE DEFAULT NULL,
      dt_epis_anamnesis_tstz_in IN EPIS_ANAMNESIS.DT_EPIS_ANAMNESIS_TSTZ%TYPE DEFAULT NULL,
      id_epis_anamnesis_parent_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS_PARENT%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_ANAMNESIS.FLG_STATUS%TYPE DEFAULT NULL,
      flg_edition_type_in IN EPIS_ANAMNESIS.FLG_EDITION_TYPE%TYPE DEFAULT NULL,
      create_user_in IN EPIS_ANAMNESIS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN EPIS_ANAMNESIS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN EPIS_ANAMNESIS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN EPIS_ANAMNESIS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN EPIS_ANAMNESIS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN EPIS_ANAMNESIS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      desc_epis_anamnesis_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS%TYPE DEFAULT NULL,
      id_cancel_info_det_in IN EPIS_ANAMNESIS.ID_CANCEL_INFO_DET%TYPE DEFAULT NULL,
      flg_reported_by_in IN EPIS_ANAMNESIS.FLG_REPORTED_BY%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

      PROCEDURE upd_ins (
      id_epis_anamnesis_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS%TYPE,
      desc_epis_anamnesis_bck_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS_BCK%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_ANAMNESIS.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_ANAMNESIS.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      flg_type_in IN EPIS_ANAMNESIS.FLG_TYPE%TYPE DEFAULT NULL,
      flg_temp_in IN EPIS_ANAMNESIS.FLG_TEMP%TYPE DEFAULT NULL,
      id_institution_in IN EPIS_ANAMNESIS.ID_INSTITUTION%TYPE DEFAULT NULL,
      id_software_in IN EPIS_ANAMNESIS.ID_SOFTWARE%TYPE DEFAULT NULL,
      id_diagnosis_in IN EPIS_ANAMNESIS.ID_DIAGNOSIS%TYPE DEFAULT NULL,
      flg_class_in IN EPIS_ANAMNESIS.FLG_CLASS%TYPE DEFAULT NULL,
      id_patient_in IN EPIS_ANAMNESIS.ID_PATIENT%TYPE DEFAULT NULL,
      dt_epis_anamnesis_tstz_in IN EPIS_ANAMNESIS.DT_EPIS_ANAMNESIS_TSTZ%TYPE DEFAULT NULL,
      id_epis_anamnesis_parent_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS_PARENT%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_ANAMNESIS.FLG_STATUS%TYPE DEFAULT NULL,
      flg_edition_type_in IN EPIS_ANAMNESIS.FLG_EDITION_TYPE%TYPE DEFAULT NULL,
      create_user_in IN EPIS_ANAMNESIS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN EPIS_ANAMNESIS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN EPIS_ANAMNESIS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN EPIS_ANAMNESIS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN EPIS_ANAMNESIS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN EPIS_ANAMNESIS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      desc_epis_anamnesis_in IN EPIS_ANAMNESIS.DESC_EPIS_ANAMNESIS%TYPE DEFAULT NULL,
      id_cancel_info_det_in IN EPIS_ANAMNESIS.ID_CANCEL_INFO_DET%TYPE DEFAULT NULL,
      flg_reported_by_in IN EPIS_ANAMNESIS.FLG_REPORTED_BY%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
      );

   PROCEDURE upd (
      rec_in IN EPIS_ANAMNESIS%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      rec_in IN EPIS_ANAMNESIS%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
      );

      PROCEDURE upd (
      col_in IN EPIS_ANAMNESIS_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      col_in IN EPIS_ANAMNESIS_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
      );





   -- Use Native Dynamic SQL increment a single NUMBER column
   -- for all rows specified by the dynamic WHERE clause
   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
   );









    -- Delete one row by primary key
   PROCEDURE del (
      id_epis_anamnesis_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

-- Delete one row by primary key
   PROCEDURE del (
      id_epis_anamnesis_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


   -- Delete all rows for primary key column ID_EPIS_ANAMNESIS
   PROCEDURE del_ID_EPIS_ANAMNESIS (
      id_epis_anamnesis_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_EPIS_ANAMNESIS
   PROCEDURE del_ID_EPIS_ANAMNESIS (
      id_epis_anamnesis_in IN EPIS_ANAMNESIS.ID_EPIS_ANAMNESIS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );

   -- Delete all rows for this COMP_CID_FK foreign key value
   PROCEDURE del_COMP_CID_FK (
      id_cancel_info_det_in IN EPIS_ANAMNESIS.ID_CANCEL_INFO_DET%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this COMP_CID_FK foreign key value
   PROCEDURE del_COMP_CID_FK (
      id_cancel_info_det_in IN EPIS_ANAMNESIS.ID_CANCEL_INFO_DET%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this COMP_DIAG_FK foreign key value
   PROCEDURE del_COMP_DIAG_FK (
      id_diagnosis_in IN EPIS_ANAMNESIS.ID_DIAGNOSIS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this COMP_DIAG_FK foreign key value
   PROCEDURE del_COMP_DIAG_FK (
      id_diagnosis_in IN EPIS_ANAMNESIS.ID_DIAGNOSIS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this COMP_EPIS_FK foreign key value
   PROCEDURE del_COMP_EPIS_FK (
      id_episode_in IN EPIS_ANAMNESIS.ID_EPISODE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this COMP_EPIS_FK foreign key value
   PROCEDURE del_COMP_EPIS_FK (
      id_episode_in IN EPIS_ANAMNESIS.ID_EPISODE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this COMP_INST_FK foreign key value
   PROCEDURE del_COMP_INST_FK (
      id_institution_in IN EPIS_ANAMNESIS.ID_INSTITUTION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this COMP_INST_FK foreign key value
   PROCEDURE del_COMP_INST_FK (
      id_institution_in IN EPIS_ANAMNESIS.ID_INSTITUTION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this COMP_PAT_FK foreign key value
   PROCEDURE del_COMP_PAT_FK (
      id_patient_in IN EPIS_ANAMNESIS.ID_PATIENT%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this COMP_PAT_FK foreign key value
   PROCEDURE del_COMP_PAT_FK (
      id_patient_in IN EPIS_ANAMNESIS.ID_PATIENT%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this COMP_PROF_FK foreign key value
   PROCEDURE del_COMP_PROF_FK (
      id_professional_in IN EPIS_ANAMNESIS.ID_PROFESSIONAL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this COMP_PROF_FK foreign key value
   PROCEDURE del_COMP_PROF_FK (
      id_professional_in IN EPIS_ANAMNESIS.ID_PROFESSIONAL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this COMP_S_FK foreign key value
   PROCEDURE del_COMP_S_FK (
      id_software_in IN EPIS_ANAMNESIS.ID_SOFTWARE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this COMP_S_FK foreign key value
   PROCEDURE del_COMP_S_FK (
      id_software_in IN EPIS_ANAMNESIS.ID_SOFTWARE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );


      -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Initialize a record with default values for columns in the table.
   PROCEDURE initrec (
      epis_anamnesis_inout IN OUT EPIS_ANAMNESIS%ROWTYPE
   );

   FUNCTION initrec RETURN EPIS_ANAMNESIS%ROWTYPE;



   FUNCTION get_data_rowid(
        rows_in IN TABLE_VARCHAR
        ) RETURN EPIS_ANAMNESIS_tc;


   FUNCTION get_data_rowid_pat(
        rows_in IN TABLE_VARCHAR
        ) RETURN EPIS_ANAMNESIS_tc;

END TS_EPIS_ANAMNESIS;
/
