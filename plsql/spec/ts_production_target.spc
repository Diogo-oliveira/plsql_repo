/*-- Last Change Revision: $Rev: 2029318 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:51:00 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE ts_production_target
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Junho 29, 2009 18:32:5
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on "PRODUCTION_TARGET"
    TYPE production_target_tc IS TABLE OF production_target%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE production_target_ntt IS TABLE OF production_target%ROWTYPE;
    TYPE production_target_vat IS VARRAY(100) OF production_target%ROWTYPE;

    -- Same type structure, with a static name.
    TYPE aat IS TABLE OF production_target%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE ntt IS TABLE OF production_target%ROWTYPE;
    TYPE vat IS VARRAY(100) OF production_target%ROWTYPE;

    -- Column Collection based on column "ID_PRODUCTION_TARGET"
    TYPE id_production_target_cc IS TABLE OF production_target.id_production_target%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROFESSIONAL_SUBJECT"
    TYPE id_professional_subject_cc IS TABLE OF production_target.id_professional_subject%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_DCS_SUBJECT"
    TYPE id_dcs_subject_cc IS TABLE OF production_target.id_dcs_subject%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_DCS_TYPE_SLOT"
    TYPE id_dcs_type_slot_cc IS TABLE OF production_target.id_dcs_type_slot%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_SCH_EVENT"
    TYPE id_sch_event_cc IS TABLE OF production_target.id_sch_event%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_SCH_DEP_TYPE"
    TYPE id_sch_dep_type_cc IS TABLE OF production_target.id_sch_dep_type%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_INSTITUTION"
    TYPE id_institution_cc IS TABLE OF production_target.id_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_SOFTWARE"
    TYPE id_software_cc IS TABLE OF production_target.id_software%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_START"
    TYPE dt_start_cc IS TABLE OF production_target.dt_start%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_END"
    TYPE dt_end_cc IS TABLE OF production_target.dt_end%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "TARGET"
    TYPE target_cc IS TABLE OF production_target.target%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "NOTES"
    TYPE notes_cc IS TABLE OF production_target.notes%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_AVAILABLE"
    TYPE flg_available_cc IS TABLE OF production_target.flg_available%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_CREATE"
    TYPE dt_create_cc IS TABLE OF production_target.dt_create%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "PROF_CREATE"
    TYPE prof_create_cc IS TABLE OF production_target.prof_create%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_USER"
    TYPE create_user_cc IS TABLE OF production_target.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_TIME"
    TYPE create_time_cc IS TABLE OF production_target.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_INSTITUTION"
    TYPE create_institution_cc IS TABLE OF production_target.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_USER"
    TYPE update_user_cc IS TABLE OF production_target.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_TIME"
    TYPE update_time_cc IS TABLE OF production_target.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_INSTITUTION"
    TYPE update_institution_cc IS TABLE OF production_target.update_institution%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present
    PROCEDURE ins
    (
        id_production_target_in    IN production_target.id_production_target%TYPE,
        id_professional_subject_in IN production_target.id_professional_subject%TYPE DEFAULT NULL,
        id_dcs_subject_in          IN production_target.id_dcs_subject%TYPE DEFAULT NULL,
        id_dcs_type_slot_in        IN production_target.id_dcs_type_slot%TYPE DEFAULT NULL,
        id_sch_event_in            IN production_target.id_sch_event%TYPE DEFAULT NULL,
        id_sch_dep_type_in         IN production_target.id_sch_dep_type%TYPE DEFAULT NULL,
        id_institution_in          IN production_target.id_institution%TYPE DEFAULT NULL,
        id_software_in             IN production_target.id_software%TYPE DEFAULT NULL,
        dt_start_in                IN production_target.dt_start%TYPE DEFAULT NULL,
        dt_end_in                  IN production_target.dt_end%TYPE DEFAULT NULL,
        target_in                  IN production_target.target%TYPE DEFAULT NULL,
        notes_in                   IN production_target.notes%TYPE DEFAULT NULL,
        flg_available_in           IN production_target.flg_available%TYPE DEFAULT NULL,
        dt_create_in               IN production_target.dt_create%TYPE DEFAULT NULL,
        prof_create_in             IN production_target.prof_create%TYPE DEFAULT NULL,
        create_user_in             IN production_target.create_user%TYPE DEFAULT NULL,
        create_time_in             IN production_target.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN production_target.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN production_target.update_user%TYPE DEFAULT NULL,
        update_time_in             IN production_target.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN production_target.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_production_target_in    IN production_target.id_production_target%TYPE,
        id_professional_subject_in IN production_target.id_professional_subject%TYPE DEFAULT NULL,
        id_dcs_subject_in          IN production_target.id_dcs_subject%TYPE DEFAULT NULL,
        id_dcs_type_slot_in        IN production_target.id_dcs_type_slot%TYPE DEFAULT NULL,
        id_sch_event_in            IN production_target.id_sch_event%TYPE DEFAULT NULL,
        id_sch_dep_type_in         IN production_target.id_sch_dep_type%TYPE DEFAULT NULL,
        id_institution_in          IN production_target.id_institution%TYPE DEFAULT NULL,
        id_software_in             IN production_target.id_software%TYPE DEFAULT NULL,
        dt_start_in                IN production_target.dt_start%TYPE DEFAULT NULL,
        dt_end_in                  IN production_target.dt_end%TYPE DEFAULT NULL,
        target_in                  IN production_target.target%TYPE DEFAULT NULL,
        notes_in                   IN production_target.notes%TYPE DEFAULT NULL,
        flg_available_in           IN production_target.flg_available%TYPE DEFAULT NULL,
        dt_create_in               IN production_target.dt_create%TYPE DEFAULT NULL,
        prof_create_in             IN production_target.prof_create%TYPE DEFAULT NULL,
        create_user_in             IN production_target.create_user%TYPE DEFAULT NULL,
        create_time_in             IN production_target.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN production_target.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN production_target.update_user%TYPE DEFAULT NULL,
        update_time_in             IN production_target.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN production_target.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record.
    -- Specify whether or not a primary key value should be generated.
    PROCEDURE ins
    (
        rec_in          IN production_target%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rec_in          IN production_target%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers.
    PROCEDURE ins
    (
        rows_in         IN production_target_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rows_in         IN production_target_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Return next primary key value using the named sequence.
    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN production_target.id_production_target%TYPE;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_professional_subject_in IN production_target.id_professional_subject%TYPE DEFAULT NULL,
        id_dcs_subject_in          IN production_target.id_dcs_subject%TYPE DEFAULT NULL,
        id_dcs_type_slot_in        IN production_target.id_dcs_type_slot%TYPE DEFAULT NULL,
        id_sch_event_in            IN production_target.id_sch_event%TYPE DEFAULT NULL,
        id_sch_dep_type_in         IN production_target.id_sch_dep_type%TYPE DEFAULT NULL,
        id_institution_in          IN production_target.id_institution%TYPE DEFAULT NULL,
        id_software_in             IN production_target.id_software%TYPE DEFAULT NULL,
        dt_start_in                IN production_target.dt_start%TYPE DEFAULT NULL,
        dt_end_in                  IN production_target.dt_end%TYPE DEFAULT NULL,
        target_in                  IN production_target.target%TYPE DEFAULT NULL,
        notes_in                   IN production_target.notes%TYPE DEFAULT NULL,
        flg_available_in           IN production_target.flg_available%TYPE DEFAULT NULL,
        dt_create_in               IN production_target.dt_create%TYPE DEFAULT NULL,
        prof_create_in             IN production_target.prof_create%TYPE DEFAULT NULL,
        create_user_in             IN production_target.create_user%TYPE DEFAULT NULL,
        create_time_in             IN production_target.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN production_target.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN production_target.update_user%TYPE DEFAULT NULL,
        update_time_in             IN production_target.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN production_target.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_professional_subject_in IN production_target.id_professional_subject%TYPE DEFAULT NULL,
        id_dcs_subject_in          IN production_target.id_dcs_subject%TYPE DEFAULT NULL,
        id_dcs_type_slot_in        IN production_target.id_dcs_type_slot%TYPE DEFAULT NULL,
        id_sch_event_in            IN production_target.id_sch_event%TYPE DEFAULT NULL,
        id_sch_dep_type_in         IN production_target.id_sch_dep_type%TYPE DEFAULT NULL,
        id_institution_in          IN production_target.id_institution%TYPE DEFAULT NULL,
        id_software_in             IN production_target.id_software%TYPE DEFAULT NULL,
        dt_start_in                IN production_target.dt_start%TYPE DEFAULT NULL,
        dt_end_in                  IN production_target.dt_end%TYPE DEFAULT NULL,
        target_in                  IN production_target.target%TYPE DEFAULT NULL,
        notes_in                   IN production_target.notes%TYPE DEFAULT NULL,
        flg_available_in           IN production_target.flg_available%TYPE DEFAULT NULL,
        dt_create_in               IN production_target.dt_create%TYPE DEFAULT NULL,
        prof_create_in             IN production_target.prof_create%TYPE DEFAULT NULL,
        create_user_in             IN production_target.create_user%TYPE DEFAULT NULL,
        create_time_in             IN production_target.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN production_target.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN production_target.update_user%TYPE DEFAULT NULL,
        update_time_in             IN production_target.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN production_target.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_professional_subject_in IN production_target.id_professional_subject%TYPE DEFAULT NULL,
        id_dcs_subject_in          IN production_target.id_dcs_subject%TYPE DEFAULT NULL,
        id_dcs_type_slot_in        IN production_target.id_dcs_type_slot%TYPE DEFAULT NULL,
        id_sch_event_in            IN production_target.id_sch_event%TYPE DEFAULT NULL,
        id_sch_dep_type_in         IN production_target.id_sch_dep_type%TYPE DEFAULT NULL,
        id_institution_in          IN production_target.id_institution%TYPE DEFAULT NULL,
        id_software_in             IN production_target.id_software%TYPE DEFAULT NULL,
        dt_start_in                IN production_target.dt_start%TYPE DEFAULT NULL,
        dt_end_in                  IN production_target.dt_end%TYPE DEFAULT NULL,
        target_in                  IN production_target.target%TYPE DEFAULT NULL,
        notes_in                   IN production_target.notes%TYPE DEFAULT NULL,
        flg_available_in           IN production_target.flg_available%TYPE DEFAULT NULL,
        dt_create_in               IN production_target.dt_create%TYPE DEFAULT NULL,
        prof_create_in             IN production_target.prof_create%TYPE DEFAULT NULL,
        create_user_in             IN production_target.create_user%TYPE DEFAULT NULL,
        create_time_in             IN production_target.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN production_target.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN production_target.update_user%TYPE DEFAULT NULL,
        update_time_in             IN production_target.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN production_target.update_institution%TYPE DEFAULT NULL,
        id_production_target_out   IN OUT production_target.id_production_target%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_professional_subject_in IN production_target.id_professional_subject%TYPE DEFAULT NULL,
        id_dcs_subject_in          IN production_target.id_dcs_subject%TYPE DEFAULT NULL,
        id_dcs_type_slot_in        IN production_target.id_dcs_type_slot%TYPE DEFAULT NULL,
        id_sch_event_in            IN production_target.id_sch_event%TYPE DEFAULT NULL,
        id_sch_dep_type_in         IN production_target.id_sch_dep_type%TYPE DEFAULT NULL,
        id_institution_in          IN production_target.id_institution%TYPE DEFAULT NULL,
        id_software_in             IN production_target.id_software%TYPE DEFAULT NULL,
        dt_start_in                IN production_target.dt_start%TYPE DEFAULT NULL,
        dt_end_in                  IN production_target.dt_end%TYPE DEFAULT NULL,
        target_in                  IN production_target.target%TYPE DEFAULT NULL,
        notes_in                   IN production_target.notes%TYPE DEFAULT NULL,
        flg_available_in           IN production_target.flg_available%TYPE DEFAULT NULL,
        dt_create_in               IN production_target.dt_create%TYPE DEFAULT NULL,
        prof_create_in             IN production_target.prof_create%TYPE DEFAULT NULL,
        create_user_in             IN production_target.create_user%TYPE DEFAULT NULL,
        create_time_in             IN production_target.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN production_target.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN production_target.update_user%TYPE DEFAULT NULL,
        update_time_in             IN production_target.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN production_target.update_institution%TYPE DEFAULT NULL,
        id_production_target_out   IN OUT production_target.id_production_target%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_professional_subject_in IN production_target.id_professional_subject%TYPE DEFAULT NULL,
        id_dcs_subject_in          IN production_target.id_dcs_subject%TYPE DEFAULT NULL,
        id_dcs_type_slot_in        IN production_target.id_dcs_type_slot%TYPE DEFAULT NULL,
        id_sch_event_in            IN production_target.id_sch_event%TYPE DEFAULT NULL,
        id_sch_dep_type_in         IN production_target.id_sch_dep_type%TYPE DEFAULT NULL,
        id_institution_in          IN production_target.id_institution%TYPE DEFAULT NULL,
        id_software_in             IN production_target.id_software%TYPE DEFAULT NULL,
        dt_start_in                IN production_target.dt_start%TYPE DEFAULT NULL,
        dt_end_in                  IN production_target.dt_end%TYPE DEFAULT NULL,
        target_in                  IN production_target.target%TYPE DEFAULT NULL,
        notes_in                   IN production_target.notes%TYPE DEFAULT NULL,
        flg_available_in           IN production_target.flg_available%TYPE DEFAULT NULL,
        dt_create_in               IN production_target.dt_create%TYPE DEFAULT NULL,
        prof_create_in             IN production_target.prof_create%TYPE DEFAULT NULL,
        create_user_in             IN production_target.create_user%TYPE DEFAULT NULL,
        create_time_in             IN production_target.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN production_target.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN production_target.update_user%TYPE DEFAULT NULL,
        update_time_in             IN production_target.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN production_target.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN production_target.id_production_target%TYPE;

    FUNCTION ins
    (
        id_professional_subject_in IN production_target.id_professional_subject%TYPE DEFAULT NULL,
        id_dcs_subject_in          IN production_target.id_dcs_subject%TYPE DEFAULT NULL,
        id_dcs_type_slot_in        IN production_target.id_dcs_type_slot%TYPE DEFAULT NULL,
        id_sch_event_in            IN production_target.id_sch_event%TYPE DEFAULT NULL,
        id_sch_dep_type_in         IN production_target.id_sch_dep_type%TYPE DEFAULT NULL,
        id_institution_in          IN production_target.id_institution%TYPE DEFAULT NULL,
        id_software_in             IN production_target.id_software%TYPE DEFAULT NULL,
        dt_start_in                IN production_target.dt_start%TYPE DEFAULT NULL,
        dt_end_in                  IN production_target.dt_end%TYPE DEFAULT NULL,
        target_in                  IN production_target.target%TYPE DEFAULT NULL,
        notes_in                   IN production_target.notes%TYPE DEFAULT NULL,
        flg_available_in           IN production_target.flg_available%TYPE DEFAULT NULL,
        dt_create_in               IN production_target.dt_create%TYPE DEFAULT NULL,
        prof_create_in             IN production_target.prof_create%TYPE DEFAULT NULL,
        create_user_in             IN production_target.create_user%TYPE DEFAULT NULL,
        create_time_in             IN production_target.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN production_target.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN production_target.update_user%TYPE DEFAULT NULL,
        update_time_in             IN production_target.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN production_target.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN production_target.id_production_target%TYPE;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.

    PROCEDURE upd
    (
        id_production_target_in     IN production_target.id_production_target%TYPE,
        id_professional_subject_in  IN production_target.id_professional_subject%TYPE DEFAULT NULL,
        id_professional_subject_nin IN BOOLEAN := TRUE,
        id_dcs_subject_in           IN production_target.id_dcs_subject%TYPE DEFAULT NULL,
        id_dcs_subject_nin          IN BOOLEAN := TRUE,
        id_dcs_type_slot_in         IN production_target.id_dcs_type_slot%TYPE DEFAULT NULL,
        id_dcs_type_slot_nin        IN BOOLEAN := TRUE,
        id_sch_event_in             IN production_target.id_sch_event%TYPE DEFAULT NULL,
        id_sch_event_nin            IN BOOLEAN := TRUE,
        id_sch_dep_type_in          IN production_target.id_sch_dep_type%TYPE DEFAULT NULL,
        id_sch_dep_type_nin         IN BOOLEAN := TRUE,
        id_institution_in           IN production_target.id_institution%TYPE DEFAULT NULL,
        id_institution_nin          IN BOOLEAN := TRUE,
        id_software_in              IN production_target.id_software%TYPE DEFAULT NULL,
        id_software_nin             IN BOOLEAN := TRUE,
        dt_start_in                 IN production_target.dt_start%TYPE DEFAULT NULL,
        dt_start_nin                IN BOOLEAN := TRUE,
        dt_end_in                   IN production_target.dt_end%TYPE DEFAULT NULL,
        dt_end_nin                  IN BOOLEAN := TRUE,
        target_in                   IN production_target.target%TYPE DEFAULT NULL,
        target_nin                  IN BOOLEAN := TRUE,
        notes_in                    IN production_target.notes%TYPE DEFAULT NULL,
        notes_nin                   IN BOOLEAN := TRUE,
        flg_available_in            IN production_target.flg_available%TYPE DEFAULT NULL,
        flg_available_nin           IN BOOLEAN := TRUE,
        dt_create_in                IN production_target.dt_create%TYPE DEFAULT NULL,
        dt_create_nin               IN BOOLEAN := TRUE,
        prof_create_in              IN production_target.prof_create%TYPE DEFAULT NULL,
        prof_create_nin             IN BOOLEAN := TRUE,
        create_user_in              IN production_target.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN production_target.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN production_target.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN production_target.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN production_target.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN production_target.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_production_target_in     IN production_target.id_production_target%TYPE,
        id_professional_subject_in  IN production_target.id_professional_subject%TYPE DEFAULT NULL,
        id_professional_subject_nin IN BOOLEAN := TRUE,
        id_dcs_subject_in           IN production_target.id_dcs_subject%TYPE DEFAULT NULL,
        id_dcs_subject_nin          IN BOOLEAN := TRUE,
        id_dcs_type_slot_in         IN production_target.id_dcs_type_slot%TYPE DEFAULT NULL,
        id_dcs_type_slot_nin        IN BOOLEAN := TRUE,
        id_sch_event_in             IN production_target.id_sch_event%TYPE DEFAULT NULL,
        id_sch_event_nin            IN BOOLEAN := TRUE,
        id_sch_dep_type_in          IN production_target.id_sch_dep_type%TYPE DEFAULT NULL,
        id_sch_dep_type_nin         IN BOOLEAN := TRUE,
        id_institution_in           IN production_target.id_institution%TYPE DEFAULT NULL,
        id_institution_nin          IN BOOLEAN := TRUE,
        id_software_in              IN production_target.id_software%TYPE DEFAULT NULL,
        id_software_nin             IN BOOLEAN := TRUE,
        dt_start_in                 IN production_target.dt_start%TYPE DEFAULT NULL,
        dt_start_nin                IN BOOLEAN := TRUE,
        dt_end_in                   IN production_target.dt_end%TYPE DEFAULT NULL,
        dt_end_nin                  IN BOOLEAN := TRUE,
        target_in                   IN production_target.target%TYPE DEFAULT NULL,
        target_nin                  IN BOOLEAN := TRUE,
        notes_in                    IN production_target.notes%TYPE DEFAULT NULL,
        notes_nin                   IN BOOLEAN := TRUE,
        flg_available_in            IN production_target.flg_available%TYPE DEFAULT NULL,
        flg_available_nin           IN BOOLEAN := TRUE,
        dt_create_in                IN production_target.dt_create%TYPE DEFAULT NULL,
        dt_create_nin               IN BOOLEAN := TRUE,
        prof_create_in              IN production_target.prof_create%TYPE DEFAULT NULL,
        prof_create_nin             IN BOOLEAN := TRUE,
        create_user_in              IN production_target.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN production_target.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN production_target.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN production_target.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN production_target.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN production_target.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        handle_error_in             IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        id_professional_subject_in  IN production_target.id_professional_subject%TYPE DEFAULT NULL,
        id_professional_subject_nin IN BOOLEAN := TRUE,
        id_dcs_subject_in           IN production_target.id_dcs_subject%TYPE DEFAULT NULL,
        id_dcs_subject_nin          IN BOOLEAN := TRUE,
        id_dcs_type_slot_in         IN production_target.id_dcs_type_slot%TYPE DEFAULT NULL,
        id_dcs_type_slot_nin        IN BOOLEAN := TRUE,
        id_sch_event_in             IN production_target.id_sch_event%TYPE DEFAULT NULL,
        id_sch_event_nin            IN BOOLEAN := TRUE,
        id_sch_dep_type_in          IN production_target.id_sch_dep_type%TYPE DEFAULT NULL,
        id_sch_dep_type_nin         IN BOOLEAN := TRUE,
        id_institution_in           IN production_target.id_institution%TYPE DEFAULT NULL,
        id_institution_nin          IN BOOLEAN := TRUE,
        id_software_in              IN production_target.id_software%TYPE DEFAULT NULL,
        id_software_nin             IN BOOLEAN := TRUE,
        dt_start_in                 IN production_target.dt_start%TYPE DEFAULT NULL,
        dt_start_nin                IN BOOLEAN := TRUE,
        dt_end_in                   IN production_target.dt_end%TYPE DEFAULT NULL,
        dt_end_nin                  IN BOOLEAN := TRUE,
        target_in                   IN production_target.target%TYPE DEFAULT NULL,
        target_nin                  IN BOOLEAN := TRUE,
        notes_in                    IN production_target.notes%TYPE DEFAULT NULL,
        notes_nin                   IN BOOLEAN := TRUE,
        flg_available_in            IN production_target.flg_available%TYPE DEFAULT NULL,
        flg_available_nin           IN BOOLEAN := TRUE,
        dt_create_in                IN production_target.dt_create%TYPE DEFAULT NULL,
        dt_create_nin               IN BOOLEAN := TRUE,
        prof_create_in              IN production_target.prof_create%TYPE DEFAULT NULL,
        prof_create_nin             IN BOOLEAN := TRUE,
        create_user_in              IN production_target.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN production_target.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN production_target.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN production_target.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN production_target.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN production_target.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        where_in                    VARCHAR2 DEFAULT NULL,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_professional_subject_in  IN production_target.id_professional_subject%TYPE DEFAULT NULL,
        id_professional_subject_nin IN BOOLEAN := TRUE,
        id_dcs_subject_in           IN production_target.id_dcs_subject%TYPE DEFAULT NULL,
        id_dcs_subject_nin          IN BOOLEAN := TRUE,
        id_dcs_type_slot_in         IN production_target.id_dcs_type_slot%TYPE DEFAULT NULL,
        id_dcs_type_slot_nin        IN BOOLEAN := TRUE,
        id_sch_event_in             IN production_target.id_sch_event%TYPE DEFAULT NULL,
        id_sch_event_nin            IN BOOLEAN := TRUE,
        id_sch_dep_type_in          IN production_target.id_sch_dep_type%TYPE DEFAULT NULL,
        id_sch_dep_type_nin         IN BOOLEAN := TRUE,
        id_institution_in           IN production_target.id_institution%TYPE DEFAULT NULL,
        id_institution_nin          IN BOOLEAN := TRUE,
        id_software_in              IN production_target.id_software%TYPE DEFAULT NULL,
        id_software_nin             IN BOOLEAN := TRUE,
        dt_start_in                 IN production_target.dt_start%TYPE DEFAULT NULL,
        dt_start_nin                IN BOOLEAN := TRUE,
        dt_end_in                   IN production_target.dt_end%TYPE DEFAULT NULL,
        dt_end_nin                  IN BOOLEAN := TRUE,
        target_in                   IN production_target.target%TYPE DEFAULT NULL,
        target_nin                  IN BOOLEAN := TRUE,
        notes_in                    IN production_target.notes%TYPE DEFAULT NULL,
        notes_nin                   IN BOOLEAN := TRUE,
        flg_available_in            IN production_target.flg_available%TYPE DEFAULT NULL,
        flg_available_nin           IN BOOLEAN := TRUE,
        dt_create_in                IN production_target.dt_create%TYPE DEFAULT NULL,
        dt_create_nin               IN BOOLEAN := TRUE,
        prof_create_in              IN production_target.prof_create%TYPE DEFAULT NULL,
        prof_create_nin             IN BOOLEAN := TRUE,
        create_user_in              IN production_target.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN production_target.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN production_target.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN production_target.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN production_target.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN production_target.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        where_in                    VARCHAR2 DEFAULT NULL,
        handle_error_in             IN BOOLEAN := TRUE
    );

    PROCEDURE upd_ins
    (
        id_production_target_in    IN production_target.id_production_target%TYPE,
        id_professional_subject_in IN production_target.id_professional_subject%TYPE DEFAULT NULL,
        id_dcs_subject_in          IN production_target.id_dcs_subject%TYPE DEFAULT NULL,
        id_dcs_type_slot_in        IN production_target.id_dcs_type_slot%TYPE DEFAULT NULL,
        id_sch_event_in            IN production_target.id_sch_event%TYPE DEFAULT NULL,
        id_sch_dep_type_in         IN production_target.id_sch_dep_type%TYPE DEFAULT NULL,
        id_institution_in          IN production_target.id_institution%TYPE DEFAULT NULL,
        id_software_in             IN production_target.id_software%TYPE DEFAULT NULL,
        dt_start_in                IN production_target.dt_start%TYPE DEFAULT NULL,
        dt_end_in                  IN production_target.dt_end%TYPE DEFAULT NULL,
        target_in                  IN production_target.target%TYPE DEFAULT NULL,
        notes_in                   IN production_target.notes%TYPE DEFAULT NULL,
        flg_available_in           IN production_target.flg_available%TYPE DEFAULT NULL,
        dt_create_in               IN production_target.dt_create%TYPE DEFAULT NULL,
        prof_create_in             IN production_target.prof_create%TYPE DEFAULT NULL,
        create_user_in             IN production_target.create_user%TYPE DEFAULT NULL,
        create_time_in             IN production_target.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN production_target.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN production_target.update_user%TYPE DEFAULT NULL,
        update_time_in             IN production_target.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN production_target.update_institution%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT table_varchar
    );

    PROCEDURE upd_ins
    (
        id_production_target_in    IN production_target.id_production_target%TYPE,
        id_professional_subject_in IN production_target.id_professional_subject%TYPE DEFAULT NULL,
        id_dcs_subject_in          IN production_target.id_dcs_subject%TYPE DEFAULT NULL,
        id_dcs_type_slot_in        IN production_target.id_dcs_type_slot%TYPE DEFAULT NULL,
        id_sch_event_in            IN production_target.id_sch_event%TYPE DEFAULT NULL,
        id_sch_dep_type_in         IN production_target.id_sch_dep_type%TYPE DEFAULT NULL,
        id_institution_in          IN production_target.id_institution%TYPE DEFAULT NULL,
        id_software_in             IN production_target.id_software%TYPE DEFAULT NULL,
        dt_start_in                IN production_target.dt_start%TYPE DEFAULT NULL,
        dt_end_in                  IN production_target.dt_end%TYPE DEFAULT NULL,
        target_in                  IN production_target.target%TYPE DEFAULT NULL,
        notes_in                   IN production_target.notes%TYPE DEFAULT NULL,
        flg_available_in           IN production_target.flg_available%TYPE DEFAULT NULL,
        dt_create_in               IN production_target.dt_create%TYPE DEFAULT NULL,
        prof_create_in             IN production_target.prof_create%TYPE DEFAULT NULL,
        create_user_in             IN production_target.create_user%TYPE DEFAULT NULL,
        create_time_in             IN production_target.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN production_target.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN production_target.update_user%TYPE DEFAULT NULL,
        update_time_in             IN production_target.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN production_target.update_institution%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        rec_in          IN production_target%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    PROCEDURE upd
    (
        rec_in          IN production_target%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        col_in            IN production_target_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    PROCEDURE upd
    (
        col_in            IN production_target_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_production_target_in IN production_target.id_production_target%TYPE,
        handle_error_in         IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_production_target_in IN production_target.id_production_target%TYPE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    );

    -- Delete all rows for primary key column ID_PRODUCTION_TARGET
    PROCEDURE del_id_production_target
    (
        id_production_target_in IN production_target.id_production_target%TYPE,
        handle_error_in         IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_PRODUCTION_TARGET
    PROCEDURE del_id_production_target
    (
        id_production_target_in IN production_target.id_production_target%TYPE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    );

    -- Delete for unique value of PTT_UK
    PROCEDURE del_ptt_uk
    (
        id_professional_subject_in IN production_target.id_professional_subject%TYPE,
        id_dcs_subject_in          IN production_target.id_dcs_subject%TYPE,
        id_dcs_type_slot_in        IN production_target.id_dcs_type_slot%TYPE,
        id_sch_event_in            IN production_target.id_sch_event%TYPE,
        id_sch_dep_type_in         IN production_target.id_sch_dep_type%TYPE,
        id_institution_in          IN production_target.id_institution%TYPE,
        id_software_in             IN production_target.id_software%TYPE,
        dt_start_in                IN production_target.dt_start%TYPE,
        dt_end_in                  IN production_target.dt_end%TYPE,
        flg_available_in           IN production_target.flg_available%TYPE,
        handle_error_in            IN BOOLEAN := TRUE
    );

    -- Delete for unique value of PTT_UK
    PROCEDURE del_ptt_uk
    (
        id_professional_subject_in IN production_target.id_professional_subject%TYPE,
        id_dcs_subject_in          IN production_target.id_dcs_subject%TYPE,
        id_dcs_type_slot_in        IN production_target.id_dcs_type_slot%TYPE,
        id_sch_event_in            IN production_target.id_sch_event%TYPE,
        id_sch_dep_type_in         IN production_target.id_sch_dep_type%TYPE,
        id_institution_in          IN production_target.id_institution%TYPE,
        id_software_in             IN production_target.id_software%TYPE,
        dt_start_in                IN production_target.dt_start%TYPE,
        dt_end_in                  IN production_target.dt_end%TYPE,
        flg_available_in           IN production_target.flg_available%TYPE,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT table_varchar
    );

    -- Delete all rows for this PTTDCSS_FK foreign key value
    PROCEDURE del_pttdcss_fk
    (
        id_dcs_subject_in IN production_target.id_dcs_subject%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PTTDCSS_FK foreign key value
    PROCEDURE del_pttdcss_fk
    (
        id_dcs_subject_in IN production_target.id_dcs_subject%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows for this PTTDCSTS_FK foreign key value
    PROCEDURE del_pttdcsts_fk
    (
        id_dcs_type_slot_in IN production_target.id_dcs_type_slot%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PTTDCSTS_FK foreign key value
    PROCEDURE del_pttdcsts_fk
    (
        id_dcs_type_slot_in IN production_target.id_dcs_type_slot%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    );

    -- Delete all rows for this PTTI_FK foreign key value
    PROCEDURE del_ptti_fk
    (
        id_institution_in IN production_target.id_institution%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PTTI_FK foreign key value
    PROCEDURE del_ptti_fk
    (
        id_institution_in IN production_target.id_institution%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows for this PTTPRC_FK foreign key value
    PROCEDURE del_pttprc_fk
    (
        prof_create_in  IN production_target.prof_create%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PTTPRC_FK foreign key value
    PROCEDURE del_pttprc_fk
    (
        prof_create_in  IN production_target.prof_create%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this PTTPRF_FK foreign key value
    PROCEDURE del_pttprf_fk
    (
        id_professional_subject_in IN production_target.id_professional_subject%TYPE,
        handle_error_in            IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PTTPRF_FK foreign key value
    PROCEDURE del_pttprf_fk
    (
        id_professional_subject_in IN production_target.id_professional_subject%TYPE,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT table_varchar
    );

    -- Delete all rows for this PTTSDT_FK foreign key value
    PROCEDURE del_pttsdt_fk
    (
        id_sch_dep_type_in IN production_target.id_sch_dep_type%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PTTSDT_FK foreign key value
    PROCEDURE del_pttsdt_fk
    (
        id_sch_dep_type_in IN production_target.id_sch_dep_type%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    -- Delete all rows for this PTTSE_FK foreign key value
    PROCEDURE del_pttse_fk
    (
        id_sch_event_in IN production_target.id_sch_event%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PTTSE_FK foreign key value
    PROCEDURE del_pttse_fk
    (
        id_sch_event_in IN production_target.id_sch_event%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this PTTST_FK foreign key value
    PROCEDURE del_pttst_fk
    (
        id_software_in  IN production_target.id_software%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PTTST_FK foreign key value
    PROCEDURE del_pttst_fk
    (
        id_software_in  IN production_target.id_software%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(production_target_inout IN OUT production_target%ROWTYPE);

    FUNCTION initrec RETURN production_target%ROWTYPE;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN production_target_tc;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN production_target_tc;

END ts_production_target;
/
