/*-- Last Change Revision: $Rev: 2029117 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:49:52 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE TS_DONOR_CONT_DISEASE_HIST
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Junho 14, 2010 10:11:57
| Created By: ALERT
*/
IS

  -- Collection of %ROWTYPE records based on "DONOR_CONT_DISEASE_HIST"
     TYPE DONOR_CONT_DISEASE_HIST_tc IS TABLE OF DONOR_CONT_DISEASE_HIST%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE donor_cont_disease_hist_ntt IS TABLE OF DONOR_CONT_DISEASE_HIST%ROWTYPE;
     TYPE donor_cont_disease_hist_vat IS VARRAY(100) OF DONOR_CONT_DISEASE_HIST%ROWTYPE;

  -- Same type structure, with a static name.
     TYPE aat IS TABLE OF DONOR_CONT_DISEASE_HIST%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE ntt IS TABLE OF DONOR_CONT_DISEASE_HIST%ROWTYPE;
     TYPE vat IS VARRAY(100) OF DONOR_CONT_DISEASE_HIST%ROWTYPE;

   -- Column Collection based on column "ID_DONOR_CONT_DISEASE_HIST"
   TYPE ID_DONOR_CONT_DISEASE_HIST_cc IS TABLE OF DONOR_CONT_DISEASE_HIST.ID_DONOR_CONT_DISEASE_HIST%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_ORGAN_DONOR_HIST"
   TYPE ID_ORGAN_DONOR_HIST_cc IS TABLE OF DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR_HIST%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_DONOR_CONTAG_DISEASE"
   TYPE ID_DONOR_CONTAG_DISEASE_cc IS TABLE OF DONOR_CONT_DISEASE_HIST.ID_DONOR_CONTAG_DISEASE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_ORGAN_DONOR"
   TYPE ID_ORGAN_DONOR_cc IS TABLE OF DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PAT_HISTORY_DIAGNOSIS"
   TYPE ID_PAT_HISTORY_DIAGNOSIS_cc IS TABLE OF DONOR_CONT_DISEASE_HIST.ID_PAT_HISTORY_DIAGNOSIS%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_USER"
   TYPE CREATE_USER_cc IS TABLE OF DONOR_CONT_DISEASE_HIST.CREATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_TIME"
   TYPE CREATE_TIME_cc IS TABLE OF DONOR_CONT_DISEASE_HIST.CREATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_INSTITUTION"
   TYPE CREATE_INSTITUTION_cc IS TABLE OF DONOR_CONT_DISEASE_HIST.CREATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_USER"
   TYPE UPDATE_USER_cc IS TABLE OF DONOR_CONT_DISEASE_HIST.UPDATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_TIME"
   TYPE UPDATE_TIME_cc IS TABLE OF DONOR_CONT_DISEASE_HIST.UPDATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_INSTITUTION"
   TYPE UPDATE_INSTITUTION_cc IS TABLE OF DONOR_CONT_DISEASE_HIST.UPDATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;

   -- Insert one row, providing primary key if present
   PROCEDURE ins (
      id_organ_donor_hist_in IN DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR_HIST%TYPE,
      id_pat_history_diagnosis_in IN DONOR_CONT_DISEASE_HIST.ID_PAT_HISTORY_DIAGNOSIS%TYPE
      ,
      id_donor_cont_disease_hist_in IN DONOR_CONT_DISEASE_HIST.ID_DONOR_CONT_DISEASE_HIST%TYPE DEFAULT NULL,
      id_donor_contag_disease_in IN DONOR_CONT_DISEASE_HIST.ID_DONOR_CONTAG_DISEASE%TYPE DEFAULT NULL,
      id_organ_donor_in IN DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR%TYPE DEFAULT NULL,
      create_user_in IN DONOR_CONT_DISEASE_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN DONOR_CONT_DISEASE_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN DONOR_CONT_DISEASE_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN DONOR_CONT_DISEASE_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN DONOR_CONT_DISEASE_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN DONOR_CONT_DISEASE_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_organ_donor_hist_in IN DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR_HIST%TYPE,
      id_pat_history_diagnosis_in IN DONOR_CONT_DISEASE_HIST.ID_PAT_HISTORY_DIAGNOSIS%TYPE
      ,
      id_donor_cont_disease_hist_in IN DONOR_CONT_DISEASE_HIST.ID_DONOR_CONT_DISEASE_HIST%TYPE DEFAULT NULL,
      id_donor_contag_disease_in IN DONOR_CONT_DISEASE_HIST.ID_DONOR_CONTAG_DISEASE%TYPE DEFAULT NULL,
      id_organ_donor_in IN DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR%TYPE DEFAULT NULL,
      create_user_in IN DONOR_CONT_DISEASE_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN DONOR_CONT_DISEASE_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN DONOR_CONT_DISEASE_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN DONOR_CONT_DISEASE_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN DONOR_CONT_DISEASE_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN DONOR_CONT_DISEASE_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );


   -- Insert a row based on a record.
   PROCEDURE ins (
      rec_in IN DONOR_CONT_DISEASE_HIST%ROWTYPE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rec_in IN DONOR_CONT_DISEASE_HIST%ROWTYPE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Insert a collection of rows using FORALL; all primary key values
   -- must have already been generated, or are handled in triggers.
   PROCEDURE ins (
      rows_in IN DONOR_CONT_DISEASE_HIST_tc
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rows_in IN DONOR_CONT_DISEASE_HIST_tc
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Update any/all columns by primary key. If you pass NULL, then
   -- the current column value is set to itself. If you need a more
   -- selected UPDATE then use one of the onecol procedures below.

  PROCEDURE upd (
      id_organ_donor_hist_in IN DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR_HIST%TYPE,
      id_pat_history_diagnosis_in IN DONOR_CONT_DISEASE_HIST.ID_PAT_HISTORY_DIAGNOSIS%TYPE,
      id_donor_cont_disease_hist_in IN DONOR_CONT_DISEASE_HIST.ID_DONOR_CONT_DISEASE_HIST%TYPE DEFAULT NULL,
      ID_DONOR_CONT_DISEASE_HIST_nin IN BOOLEAN := TRUE,
      id_donor_contag_disease_in IN DONOR_CONT_DISEASE_HIST.ID_DONOR_CONTAG_DISEASE%TYPE DEFAULT NULL,
      ID_DONOR_CONTAG_DISEASE_nin IN BOOLEAN := TRUE,
      id_organ_donor_in IN DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR%TYPE DEFAULT NULL,
      ID_ORGAN_DONOR_nin IN BOOLEAN := TRUE,
      create_user_in IN DONOR_CONT_DISEASE_HIST.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN DONOR_CONT_DISEASE_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN DONOR_CONT_DISEASE_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN DONOR_CONT_DISEASE_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN DONOR_CONT_DISEASE_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN DONOR_CONT_DISEASE_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


       PROCEDURE upd (
      id_organ_donor_hist_in IN DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR_HIST%TYPE,
      id_pat_history_diagnosis_in IN DONOR_CONT_DISEASE_HIST.ID_PAT_HISTORY_DIAGNOSIS%TYPE,
      id_donor_cont_disease_hist_in IN DONOR_CONT_DISEASE_HIST.ID_DONOR_CONT_DISEASE_HIST%TYPE DEFAULT NULL,
      ID_DONOR_CONT_DISEASE_HIST_nin IN BOOLEAN := TRUE,
      id_donor_contag_disease_in IN DONOR_CONT_DISEASE_HIST.ID_DONOR_CONTAG_DISEASE%TYPE DEFAULT NULL,
      ID_DONOR_CONTAG_DISEASE_nin IN BOOLEAN := TRUE,
      id_organ_donor_in IN DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR%TYPE DEFAULT NULL,
      ID_ORGAN_DONOR_nin IN BOOLEAN := TRUE,
      create_user_in IN DONOR_CONT_DISEASE_HIST.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN DONOR_CONT_DISEASE_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN DONOR_CONT_DISEASE_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN DONOR_CONT_DISEASE_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN DONOR_CONT_DISEASE_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN DONOR_CONT_DISEASE_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
      );



      PROCEDURE upd (
      id_donor_cont_disease_hist_in IN DONOR_CONT_DISEASE_HIST.ID_DONOR_CONT_DISEASE_HIST%TYPE DEFAULT NULL,
      ID_DONOR_CONT_DISEASE_HIST_nin IN BOOLEAN := TRUE,
      id_donor_contag_disease_in IN DONOR_CONT_DISEASE_HIST.ID_DONOR_CONTAG_DISEASE%TYPE DEFAULT NULL,
      ID_DONOR_CONTAG_DISEASE_nin IN BOOLEAN := TRUE,
      id_organ_donor_in IN DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR%TYPE DEFAULT NULL,
      ID_ORGAN_DONOR_nin IN BOOLEAN := TRUE,
      create_user_in IN DONOR_CONT_DISEASE_HIST.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN DONOR_CONT_DISEASE_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN DONOR_CONT_DISEASE_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN DONOR_CONT_DISEASE_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN DONOR_CONT_DISEASE_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN DONOR_CONT_DISEASE_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
    where_in varchar2 DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


      PROCEDURE upd (
      id_donor_cont_disease_hist_in IN DONOR_CONT_DISEASE_HIST.ID_DONOR_CONT_DISEASE_HIST%TYPE DEFAULT NULL,
      ID_DONOR_CONT_DISEASE_HIST_nin IN BOOLEAN := TRUE,
      id_donor_contag_disease_in IN DONOR_CONT_DISEASE_HIST.ID_DONOR_CONTAG_DISEASE%TYPE DEFAULT NULL,
      ID_DONOR_CONTAG_DISEASE_nin IN BOOLEAN := TRUE,
      id_organ_donor_in IN DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR%TYPE DEFAULT NULL,
      ID_ORGAN_DONOR_nin IN BOOLEAN := TRUE,
      create_user_in IN DONOR_CONT_DISEASE_HIST.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN DONOR_CONT_DISEASE_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN DONOR_CONT_DISEASE_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN DONOR_CONT_DISEASE_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN DONOR_CONT_DISEASE_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN DONOR_CONT_DISEASE_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
    where_in varchar2 DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
      );



   PROCEDURE upd_ins (
      id_organ_donor_hist_in IN DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR_HIST%TYPE,
      id_pat_history_diagnosis_in IN DONOR_CONT_DISEASE_HIST.ID_PAT_HISTORY_DIAGNOSIS%TYPE,
      id_donor_cont_disease_hist_in IN DONOR_CONT_DISEASE_HIST.ID_DONOR_CONT_DISEASE_HIST%TYPE DEFAULT NULL,
      id_donor_contag_disease_in IN DONOR_CONT_DISEASE_HIST.ID_DONOR_CONTAG_DISEASE%TYPE DEFAULT NULL,
      id_organ_donor_in IN DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR%TYPE DEFAULT NULL,
      create_user_in IN DONOR_CONT_DISEASE_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN DONOR_CONT_DISEASE_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN DONOR_CONT_DISEASE_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN DONOR_CONT_DISEASE_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN DONOR_CONT_DISEASE_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN DONOR_CONT_DISEASE_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

      PROCEDURE upd_ins (
      id_organ_donor_hist_in IN DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR_HIST%TYPE,
      id_pat_history_diagnosis_in IN DONOR_CONT_DISEASE_HIST.ID_PAT_HISTORY_DIAGNOSIS%TYPE,
      id_donor_cont_disease_hist_in IN DONOR_CONT_DISEASE_HIST.ID_DONOR_CONT_DISEASE_HIST%TYPE DEFAULT NULL,
      id_donor_contag_disease_in IN DONOR_CONT_DISEASE_HIST.ID_DONOR_CONTAG_DISEASE%TYPE DEFAULT NULL,
      id_organ_donor_in IN DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR%TYPE DEFAULT NULL,
      create_user_in IN DONOR_CONT_DISEASE_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN DONOR_CONT_DISEASE_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN DONOR_CONT_DISEASE_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN DONOR_CONT_DISEASE_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN DONOR_CONT_DISEASE_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN DONOR_CONT_DISEASE_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
      );

   PROCEDURE upd (
      rec_in IN DONOR_CONT_DISEASE_HIST%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      rec_in IN DONOR_CONT_DISEASE_HIST%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
      );

      PROCEDURE upd (
      col_in IN DONOR_CONT_DISEASE_HIST_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      col_in IN DONOR_CONT_DISEASE_HIST_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
      );





   -- Use Native Dynamic SQL increment a single NUMBER column
   -- for all rows specified by the dynamic WHERE clause
   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
   );









    -- Delete one row by primary key
   PROCEDURE del (
      id_organ_donor_hist_in IN DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR_HIST%TYPE,
      id_pat_history_diagnosis_in IN DONOR_CONT_DISEASE_HIST.ID_PAT_HISTORY_DIAGNOSIS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

-- Delete one row by primary key
   PROCEDURE del (
      id_organ_donor_hist_in IN DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR_HIST%TYPE,
      id_pat_history_diagnosis_in IN DONOR_CONT_DISEASE_HIST.ID_PAT_HISTORY_DIAGNOSIS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


   -- Delete all rows for primary key column ID_ORGAN_DONOR_HIST
   PROCEDURE del_ID_ORGAN_DONOR_HIST (
      id_organ_donor_hist_in IN DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR_HIST%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_ORGAN_DONOR_HIST
   PROCEDURE del_ID_ORGAN_DONOR_HIST (
      id_organ_donor_hist_in IN DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR_HIST%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );


   -- Delete all rows for primary key column ID_PAT_HISTORY_DIAGNOSIS
   PROCEDURE del_ID_PAT_HISTORY_DIAGNOSIS (
      id_pat_history_diagnosis_in IN DONOR_CONT_DISEASE_HIST.ID_PAT_HISTORY_DIAGNOSIS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_PAT_HISTORY_DIAGNOSIS
   PROCEDURE del_ID_PAT_HISTORY_DIAGNOSIS (
      id_pat_history_diagnosis_in IN DONOR_CONT_DISEASE_HIST.ID_PAT_HISTORY_DIAGNOSIS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );

   -- Delete for unique value of DCDH_DCDH_UK
   PROCEDURE del_DCDH_DCDH_UK (
      id_donor_cont_disease_hist_in IN DONOR_CONT_DISEASE_HIST.ID_DONOR_CONT_DISEASE_HIST%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

   -- Delete for unique value of DCDH_DCDH_UK
   PROCEDURE del_DCDH_DCDH_UK (
      id_donor_cont_disease_hist_in IN DONOR_CONT_DISEASE_HIST.ID_DONOR_CONT_DISEASE_HIST%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this DCDH_ODH_FK foreign key value
   PROCEDURE del_DCDH_ODH_FK (
      id_organ_donor_hist_in IN DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR_HIST%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this DCDH_ODH_FK foreign key value
   PROCEDURE del_DCDH_ODH_FK (
      id_organ_donor_hist_in IN DONOR_CONT_DISEASE_HIST.ID_ORGAN_DONOR_HIST%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );


      -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Initialize a record with default values for columns in the table.
   PROCEDURE initrec (
      donor_cont_disease_hist_inout IN OUT DONOR_CONT_DISEASE_HIST%ROWTYPE
   );

   FUNCTION initrec RETURN DONOR_CONT_DISEASE_HIST%ROWTYPE;



   FUNCTION get_data_rowid(
        rows_in IN TABLE_VARCHAR
        ) RETURN DONOR_CONT_DISEASE_HIST_tc;


   FUNCTION get_data_rowid_pat(
        rows_in IN TABLE_VARCHAR
        ) RETURN DONOR_CONT_DISEASE_HIST_tc;

END TS_DONOR_CONT_DISEASE_HIST;
/
