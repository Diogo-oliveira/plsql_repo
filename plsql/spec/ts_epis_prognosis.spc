/*-- Last Change Revision: $Rev: 2054552 $*/
/*-- Last Change by: $Author: elisabete.bugalho $*/
/*-- Date of last change: $Date: 2023-01-13 14:52:34 +0000 (sex, 13 jan 2023) $*/
CREATE OR REPLACE PACKAGE ts_epis_prognosis
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2023-01-09 16:49:55
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on epis_prognosis
    TYPE epis_prognosis_tc IS TABLE OF epis_prognosis%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE epis_prognosis_ntt IS TABLE OF epis_prognosis%ROWTYPE;
    TYPE epis_prognosis_vat IS VARRAY(100) OF epis_prognosis%ROWTYPE;

    -- Column Collection based on column ID_EPIS_PROGNOSIS
    TYPE id_epis_prognosis_cc IS TABLE OF epis_prognosis.id_epis_prognosis%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_EPISODE
    TYPE id_episode_cc IS TABLE OF epis_prognosis.id_episode%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column FLG_STATUS
    TYPE flg_status_cc IS TABLE OF epis_prognosis.flg_status%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column PROGNOSIS_NOTES
    TYPE prognosis_notes_cc IS TABLE OF epis_prognosis.prognosis_notes%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_PROF_CREATE
    TYPE id_prof_create_cc IS TABLE OF epis_prognosis.id_prof_create%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column DT_CREATE
    TYPE dt_create_cc IS TABLE OF epis_prognosis.dt_create%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_PROF_LAST_UPDATE
    TYPE id_prof_last_update_cc IS TABLE OF epis_prognosis.id_prof_last_update%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column DT_LAST_UPDATE
    TYPE dt_last_update_cc IS TABLE OF epis_prognosis.dt_last_update%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_PROF_CANCEL
    TYPE id_prof_cancel_cc IS TABLE OF epis_prognosis.id_prof_cancel%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_CANCEL_REASON
    TYPE id_cancel_reason_cc IS TABLE OF epis_prognosis.id_cancel_reason%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CANCEL_NOTES
    TYPE cancel_notes_cc IS TABLE OF epis_prognosis.cancel_notes%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column DT_CANCEL
    TYPE dt_cancel_cc IS TABLE OF epis_prognosis.dt_cancel%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_USER
    TYPE create_user_cc IS TABLE OF epis_prognosis.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_TIME
    TYPE create_time_cc IS TABLE OF epis_prognosis.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_INSTITUTION
    TYPE create_institution_cc IS TABLE OF epis_prognosis.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_USER
    TYPE update_user_cc IS TABLE OF epis_prognosis.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_TIME
    TYPE update_time_cc IS TABLE OF epis_prognosis.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_INSTITUTION
    TYPE update_institution_cc IS TABLE OF epis_prognosis.update_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_PROGNOSIS
    TYPE id_prognosis_cc IS TABLE OF epis_prognosis.id_prognosis%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present (with rows_out)
    PROCEDURE ins
    (
        id_epis_prognosis_in   IN epis_prognosis.id_epis_prognosis%TYPE,
        id_episode_in          IN epis_prognosis.id_episode%TYPE DEFAULT NULL,
        flg_status_in          IN epis_prognosis.flg_status%TYPE DEFAULT NULL,
        prognosis_notes_in     IN epis_prognosis.prognosis_notes%TYPE DEFAULT NULL,
        id_prof_create_in      IN epis_prognosis.id_prof_create%TYPE DEFAULT NULL,
        dt_create_in           IN epis_prognosis.dt_create%TYPE DEFAULT NULL,
        id_prof_last_update_in IN epis_prognosis.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_in      IN epis_prognosis.dt_last_update%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN epis_prognosis.id_prof_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in    IN epis_prognosis.id_cancel_reason%TYPE DEFAULT NULL,
        cancel_notes_in        IN epis_prognosis.cancel_notes%TYPE DEFAULT NULL,
        dt_cancel_in           IN epis_prognosis.dt_cancel%TYPE DEFAULT NULL,
        create_user_in         IN epis_prognosis.create_user%TYPE DEFAULT NULL,
        create_time_in         IN epis_prognosis.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN epis_prognosis.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN epis_prognosis.update_user%TYPE DEFAULT NULL,
        update_time_in         IN epis_prognosis.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN epis_prognosis.update_institution%TYPE DEFAULT NULL,
        id_prognosis_in        IN epis_prognosis.id_prognosis%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := FALSE,
        rows_out               OUT table_varchar
    );

    -- Insert one row, providing primary key if present (without rows_out)
    PROCEDURE ins
    (
        id_epis_prognosis_in   IN epis_prognosis.id_epis_prognosis%TYPE,
        id_episode_in          IN epis_prognosis.id_episode%TYPE DEFAULT NULL,
        flg_status_in          IN epis_prognosis.flg_status%TYPE DEFAULT NULL,
        prognosis_notes_in     IN epis_prognosis.prognosis_notes%TYPE DEFAULT NULL,
        id_prof_create_in      IN epis_prognosis.id_prof_create%TYPE DEFAULT NULL,
        dt_create_in           IN epis_prognosis.dt_create%TYPE DEFAULT NULL,
        id_prof_last_update_in IN epis_prognosis.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_in      IN epis_prognosis.dt_last_update%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN epis_prognosis.id_prof_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in    IN epis_prognosis.id_cancel_reason%TYPE DEFAULT NULL,
        cancel_notes_in        IN epis_prognosis.cancel_notes%TYPE DEFAULT NULL,
        dt_cancel_in           IN epis_prognosis.dt_cancel%TYPE DEFAULT NULL,
        create_user_in         IN epis_prognosis.create_user%TYPE DEFAULT NULL,
        create_time_in         IN epis_prognosis.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN epis_prognosis.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN epis_prognosis.update_user%TYPE DEFAULT NULL,
        update_time_in         IN epis_prognosis.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN epis_prognosis.update_institution%TYPE DEFAULT NULL,
        id_prognosis_in        IN epis_prognosis.id_prognosis%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := FALSE
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN epis_prognosis%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN epis_prognosis%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := FALSE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN epis_prognosis_tc,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN epis_prognosis_tc,
        handle_error_in IN BOOLEAN := FALSE
    );

    -- Return next primary key value using the named sequence
    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN epis_prognosis.id_epis_prognosis%TYPE;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_episode_in          IN epis_prognosis.id_episode%TYPE DEFAULT NULL,
        flg_status_in          IN epis_prognosis.flg_status%TYPE DEFAULT NULL,
        prognosis_notes_in     IN epis_prognosis.prognosis_notes%TYPE DEFAULT NULL,
        id_prof_create_in      IN epis_prognosis.id_prof_create%TYPE DEFAULT NULL,
        dt_create_in           IN epis_prognosis.dt_create%TYPE DEFAULT NULL,
        id_prof_last_update_in IN epis_prognosis.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_in      IN epis_prognosis.dt_last_update%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN epis_prognosis.id_prof_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in    IN epis_prognosis.id_cancel_reason%TYPE DEFAULT NULL,
        cancel_notes_in        IN epis_prognosis.cancel_notes%TYPE DEFAULT NULL,
        dt_cancel_in           IN epis_prognosis.dt_cancel%TYPE DEFAULT NULL,
        create_user_in         IN epis_prognosis.create_user%TYPE DEFAULT NULL,
        create_time_in         IN epis_prognosis.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN epis_prognosis.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN epis_prognosis.update_user%TYPE DEFAULT NULL,
        update_time_in         IN epis_prognosis.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN epis_prognosis.update_institution%TYPE DEFAULT NULL,
        id_prognosis_in        IN epis_prognosis.id_prognosis%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    );

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_episode_in          IN epis_prognosis.id_episode%TYPE DEFAULT NULL,
        flg_status_in          IN epis_prognosis.flg_status%TYPE DEFAULT NULL,
        prognosis_notes_in     IN epis_prognosis.prognosis_notes%TYPE DEFAULT NULL,
        id_prof_create_in      IN epis_prognosis.id_prof_create%TYPE DEFAULT NULL,
        dt_create_in           IN epis_prognosis.dt_create%TYPE DEFAULT NULL,
        id_prof_last_update_in IN epis_prognosis.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_in      IN epis_prognosis.dt_last_update%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN epis_prognosis.id_prof_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in    IN epis_prognosis.id_cancel_reason%TYPE DEFAULT NULL,
        cancel_notes_in        IN epis_prognosis.cancel_notes%TYPE DEFAULT NULL,
        dt_cancel_in           IN epis_prognosis.dt_cancel%TYPE DEFAULT NULL,
        create_user_in         IN epis_prognosis.create_user%TYPE DEFAULT NULL,
        create_time_in         IN epis_prognosis.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN epis_prognosis.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN epis_prognosis.update_user%TYPE DEFAULT NULL,
        update_time_in         IN epis_prognosis.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN epis_prognosis.update_institution%TYPE DEFAULT NULL,
        id_prognosis_in        IN epis_prognosis.id_prognosis%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_episode_in          IN epis_prognosis.id_episode%TYPE DEFAULT NULL,
        flg_status_in          IN epis_prognosis.flg_status%TYPE DEFAULT NULL,
        prognosis_notes_in     IN epis_prognosis.prognosis_notes%TYPE DEFAULT NULL,
        id_prof_create_in      IN epis_prognosis.id_prof_create%TYPE DEFAULT NULL,
        dt_create_in           IN epis_prognosis.dt_create%TYPE DEFAULT NULL,
        id_prof_last_update_in IN epis_prognosis.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_in      IN epis_prognosis.dt_last_update%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN epis_prognosis.id_prof_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in    IN epis_prognosis.id_cancel_reason%TYPE DEFAULT NULL,
        cancel_notes_in        IN epis_prognosis.cancel_notes%TYPE DEFAULT NULL,
        dt_cancel_in           IN epis_prognosis.dt_cancel%TYPE DEFAULT NULL,
        create_user_in         IN epis_prognosis.create_user%TYPE DEFAULT NULL,
        create_time_in         IN epis_prognosis.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN epis_prognosis.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN epis_prognosis.update_user%TYPE DEFAULT NULL,
        update_time_in         IN epis_prognosis.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN epis_prognosis.update_institution%TYPE DEFAULT NULL,
        id_prognosis_in        IN epis_prognosis.id_prognosis%TYPE DEFAULT NULL,
        id_epis_prognosis_out  IN OUT epis_prognosis.id_epis_prognosis%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_episode_in          IN epis_prognosis.id_episode%TYPE DEFAULT NULL,
        flg_status_in          IN epis_prognosis.flg_status%TYPE DEFAULT NULL,
        prognosis_notes_in     IN epis_prognosis.prognosis_notes%TYPE DEFAULT NULL,
        id_prof_create_in      IN epis_prognosis.id_prof_create%TYPE DEFAULT NULL,
        dt_create_in           IN epis_prognosis.dt_create%TYPE DEFAULT NULL,
        id_prof_last_update_in IN epis_prognosis.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_in      IN epis_prognosis.dt_last_update%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN epis_prognosis.id_prof_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in    IN epis_prognosis.id_cancel_reason%TYPE DEFAULT NULL,
        cancel_notes_in        IN epis_prognosis.cancel_notes%TYPE DEFAULT NULL,
        dt_cancel_in           IN epis_prognosis.dt_cancel%TYPE DEFAULT NULL,
        create_user_in         IN epis_prognosis.create_user%TYPE DEFAULT NULL,
        create_time_in         IN epis_prognosis.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN epis_prognosis.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN epis_prognosis.update_user%TYPE DEFAULT NULL,
        update_time_in         IN epis_prognosis.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN epis_prognosis.update_institution%TYPE DEFAULT NULL,
        id_prognosis_in        IN epis_prognosis.id_prognosis%TYPE DEFAULT NULL,
        id_epis_prognosis_out  IN OUT epis_prognosis.id_epis_prognosis%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE
    );

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_episode_in          IN epis_prognosis.id_episode%TYPE DEFAULT NULL,
        flg_status_in          IN epis_prognosis.flg_status%TYPE DEFAULT NULL,
        prognosis_notes_in     IN epis_prognosis.prognosis_notes%TYPE DEFAULT NULL,
        id_prof_create_in      IN epis_prognosis.id_prof_create%TYPE DEFAULT NULL,
        dt_create_in           IN epis_prognosis.dt_create%TYPE DEFAULT NULL,
        id_prof_last_update_in IN epis_prognosis.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_in      IN epis_prognosis.dt_last_update%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN epis_prognosis.id_prof_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in    IN epis_prognosis.id_cancel_reason%TYPE DEFAULT NULL,
        cancel_notes_in        IN epis_prognosis.cancel_notes%TYPE DEFAULT NULL,
        dt_cancel_in           IN epis_prognosis.dt_cancel%TYPE DEFAULT NULL,
        create_user_in         IN epis_prognosis.create_user%TYPE DEFAULT NULL,
        create_time_in         IN epis_prognosis.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN epis_prognosis.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN epis_prognosis.update_user%TYPE DEFAULT NULL,
        update_time_in         IN epis_prognosis.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN epis_prognosis.update_institution%TYPE DEFAULT NULL,
        id_prognosis_in        IN epis_prognosis.id_prognosis%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) RETURN epis_prognosis.id_epis_prognosis%TYPE;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_episode_in          IN epis_prognosis.id_episode%TYPE DEFAULT NULL,
        flg_status_in          IN epis_prognosis.flg_status%TYPE DEFAULT NULL,
        prognosis_notes_in     IN epis_prognosis.prognosis_notes%TYPE DEFAULT NULL,
        id_prof_create_in      IN epis_prognosis.id_prof_create%TYPE DEFAULT NULL,
        dt_create_in           IN epis_prognosis.dt_create%TYPE DEFAULT NULL,
        id_prof_last_update_in IN epis_prognosis.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_in      IN epis_prognosis.dt_last_update%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN epis_prognosis.id_prof_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in    IN epis_prognosis.id_cancel_reason%TYPE DEFAULT NULL,
        cancel_notes_in        IN epis_prognosis.cancel_notes%TYPE DEFAULT NULL,
        dt_cancel_in           IN epis_prognosis.dt_cancel%TYPE DEFAULT NULL,
        create_user_in         IN epis_prognosis.create_user%TYPE DEFAULT NULL,
        create_time_in         IN epis_prognosis.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN epis_prognosis.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN epis_prognosis.update_user%TYPE DEFAULT NULL,
        update_time_in         IN epis_prognosis.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN epis_prognosis.update_institution%TYPE DEFAULT NULL,
        id_prognosis_in        IN epis_prognosis.id_prognosis%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE
    ) RETURN epis_prognosis.id_epis_prognosis%TYPE;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_epis_prognosis_in    IN epis_prognosis.id_epis_prognosis%TYPE,
        id_episode_in           IN epis_prognosis.id_episode%TYPE DEFAULT NULL,
        id_episode_nin          IN BOOLEAN := TRUE,
        flg_status_in           IN epis_prognosis.flg_status%TYPE DEFAULT NULL,
        flg_status_nin          IN BOOLEAN := TRUE,
        prognosis_notes_in      IN epis_prognosis.prognosis_notes%TYPE DEFAULT NULL,
        prognosis_notes_nin     IN BOOLEAN := TRUE,
        id_prof_create_in       IN epis_prognosis.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin      IN BOOLEAN := TRUE,
        dt_create_in            IN epis_prognosis.dt_create%TYPE DEFAULT NULL,
        dt_create_nin           IN BOOLEAN := TRUE,
        id_prof_last_update_in  IN epis_prognosis.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin IN BOOLEAN := TRUE,
        dt_last_update_in       IN epis_prognosis.dt_last_update%TYPE DEFAULT NULL,
        dt_last_update_nin      IN BOOLEAN := TRUE,
        id_prof_cancel_in       IN epis_prognosis.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin      IN BOOLEAN := TRUE,
        id_cancel_reason_in     IN epis_prognosis.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin    IN BOOLEAN := TRUE,
        cancel_notes_in         IN epis_prognosis.cancel_notes%TYPE DEFAULT NULL,
        cancel_notes_nin        IN BOOLEAN := TRUE,
        dt_cancel_in            IN epis_prognosis.dt_cancel%TYPE DEFAULT NULL,
        dt_cancel_nin           IN BOOLEAN := TRUE,
        create_user_in          IN epis_prognosis.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN epis_prognosis.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN epis_prognosis.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN epis_prognosis.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN epis_prognosis.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN epis_prognosis.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        id_prognosis_in         IN epis_prognosis.id_prognosis%TYPE DEFAULT NULL,
        id_prognosis_nin        IN BOOLEAN := TRUE,
        handle_error_in         IN BOOLEAN := FALSE,
        rows_out                IN OUT table_varchar
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_epis_prognosis_in    IN epis_prognosis.id_epis_prognosis%TYPE,
        id_episode_in           IN epis_prognosis.id_episode%TYPE DEFAULT NULL,
        id_episode_nin          IN BOOLEAN := TRUE,
        flg_status_in           IN epis_prognosis.flg_status%TYPE DEFAULT NULL,
        flg_status_nin          IN BOOLEAN := TRUE,
        prognosis_notes_in      IN epis_prognosis.prognosis_notes%TYPE DEFAULT NULL,
        prognosis_notes_nin     IN BOOLEAN := TRUE,
        id_prof_create_in       IN epis_prognosis.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin      IN BOOLEAN := TRUE,
        dt_create_in            IN epis_prognosis.dt_create%TYPE DEFAULT NULL,
        dt_create_nin           IN BOOLEAN := TRUE,
        id_prof_last_update_in  IN epis_prognosis.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin IN BOOLEAN := TRUE,
        dt_last_update_in       IN epis_prognosis.dt_last_update%TYPE DEFAULT NULL,
        dt_last_update_nin      IN BOOLEAN := TRUE,
        id_prof_cancel_in       IN epis_prognosis.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin      IN BOOLEAN := TRUE,
        id_cancel_reason_in     IN epis_prognosis.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin    IN BOOLEAN := TRUE,
        cancel_notes_in         IN epis_prognosis.cancel_notes%TYPE DEFAULT NULL,
        cancel_notes_nin        IN BOOLEAN := TRUE,
        dt_cancel_in            IN epis_prognosis.dt_cancel%TYPE DEFAULT NULL,
        dt_cancel_nin           IN BOOLEAN := TRUE,
        create_user_in          IN epis_prognosis.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN epis_prognosis.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN epis_prognosis.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN epis_prognosis.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN epis_prognosis.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN epis_prognosis.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        id_prognosis_in         IN epis_prognosis.id_prognosis%TYPE DEFAULT NULL,
        id_prognosis_nin        IN BOOLEAN := TRUE,
        handle_error_in         IN BOOLEAN := FALSE
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_episode_in           IN epis_prognosis.id_episode%TYPE DEFAULT NULL,
        id_episode_nin          IN BOOLEAN := TRUE,
        flg_status_in           IN epis_prognosis.flg_status%TYPE DEFAULT NULL,
        flg_status_nin          IN BOOLEAN := TRUE,
        prognosis_notes_in      IN epis_prognosis.prognosis_notes%TYPE DEFAULT NULL,
        prognosis_notes_nin     IN BOOLEAN := TRUE,
        id_prof_create_in       IN epis_prognosis.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin      IN BOOLEAN := TRUE,
        dt_create_in            IN epis_prognosis.dt_create%TYPE DEFAULT NULL,
        dt_create_nin           IN BOOLEAN := TRUE,
        id_prof_last_update_in  IN epis_prognosis.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin IN BOOLEAN := TRUE,
        dt_last_update_in       IN epis_prognosis.dt_last_update%TYPE DEFAULT NULL,
        dt_last_update_nin      IN BOOLEAN := TRUE,
        id_prof_cancel_in       IN epis_prognosis.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin      IN BOOLEAN := TRUE,
        id_cancel_reason_in     IN epis_prognosis.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin    IN BOOLEAN := TRUE,
        cancel_notes_in         IN epis_prognosis.cancel_notes%TYPE DEFAULT NULL,
        cancel_notes_nin        IN BOOLEAN := TRUE,
        dt_cancel_in            IN epis_prognosis.dt_cancel%TYPE DEFAULT NULL,
        dt_cancel_nin           IN BOOLEAN := TRUE,
        create_user_in          IN epis_prognosis.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN epis_prognosis.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN epis_prognosis.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN epis_prognosis.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN epis_prognosis.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN epis_prognosis.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        id_prognosis_in         IN epis_prognosis.id_prognosis%TYPE DEFAULT NULL,
        id_prognosis_nin        IN BOOLEAN := TRUE,
        where_in                IN VARCHAR2,
        handle_error_in         IN BOOLEAN := FALSE,
        rows_out                IN OUT table_varchar
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_episode_in           IN epis_prognosis.id_episode%TYPE DEFAULT NULL,
        id_episode_nin          IN BOOLEAN := TRUE,
        flg_status_in           IN epis_prognosis.flg_status%TYPE DEFAULT NULL,
        flg_status_nin          IN BOOLEAN := TRUE,
        prognosis_notes_in      IN epis_prognosis.prognosis_notes%TYPE DEFAULT NULL,
        prognosis_notes_nin     IN BOOLEAN := TRUE,
        id_prof_create_in       IN epis_prognosis.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin      IN BOOLEAN := TRUE,
        dt_create_in            IN epis_prognosis.dt_create%TYPE DEFAULT NULL,
        dt_create_nin           IN BOOLEAN := TRUE,
        id_prof_last_update_in  IN epis_prognosis.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin IN BOOLEAN := TRUE,
        dt_last_update_in       IN epis_prognosis.dt_last_update%TYPE DEFAULT NULL,
        dt_last_update_nin      IN BOOLEAN := TRUE,
        id_prof_cancel_in       IN epis_prognosis.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin      IN BOOLEAN := TRUE,
        id_cancel_reason_in     IN epis_prognosis.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin    IN BOOLEAN := TRUE,
        cancel_notes_in         IN epis_prognosis.cancel_notes%TYPE DEFAULT NULL,
        cancel_notes_nin        IN BOOLEAN := TRUE,
        dt_cancel_in            IN epis_prognosis.dt_cancel%TYPE DEFAULT NULL,
        dt_cancel_nin           IN BOOLEAN := TRUE,
        create_user_in          IN epis_prognosis.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN epis_prognosis.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN epis_prognosis.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN epis_prognosis.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN epis_prognosis.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN epis_prognosis.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        id_prognosis_in         IN epis_prognosis.id_prognosis%TYPE DEFAULT NULL,
        id_prognosis_nin        IN BOOLEAN := TRUE,
        where_in                IN VARCHAR2,
        handle_error_in         IN BOOLEAN := FALSE
    );

    --Update/insert with columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_epis_prognosis_in   IN epis_prognosis.id_epis_prognosis%TYPE,
        id_episode_in          IN epis_prognosis.id_episode%TYPE DEFAULT NULL,
        flg_status_in          IN epis_prognosis.flg_status%TYPE DEFAULT NULL,
        prognosis_notes_in     IN epis_prognosis.prognosis_notes%TYPE DEFAULT NULL,
        id_prof_create_in      IN epis_prognosis.id_prof_create%TYPE DEFAULT NULL,
        dt_create_in           IN epis_prognosis.dt_create%TYPE DEFAULT NULL,
        id_prof_last_update_in IN epis_prognosis.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_in      IN epis_prognosis.dt_last_update%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN epis_prognosis.id_prof_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in    IN epis_prognosis.id_cancel_reason%TYPE DEFAULT NULL,
        cancel_notes_in        IN epis_prognosis.cancel_notes%TYPE DEFAULT NULL,
        dt_cancel_in           IN epis_prognosis.dt_cancel%TYPE DEFAULT NULL,
        create_user_in         IN epis_prognosis.create_user%TYPE DEFAULT NULL,
        create_time_in         IN epis_prognosis.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN epis_prognosis.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN epis_prognosis.update_user%TYPE DEFAULT NULL,
        update_time_in         IN epis_prognosis.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN epis_prognosis.update_institution%TYPE DEFAULT NULL,
        id_prognosis_in        IN epis_prognosis.id_prognosis%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := FALSE,
        rows_out               IN OUT table_varchar
    );

    --Update/insert with columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_epis_prognosis_in   IN epis_prognosis.id_epis_prognosis%TYPE,
        id_episode_in          IN epis_prognosis.id_episode%TYPE DEFAULT NULL,
        flg_status_in          IN epis_prognosis.flg_status%TYPE DEFAULT NULL,
        prognosis_notes_in     IN epis_prognosis.prognosis_notes%TYPE DEFAULT NULL,
        id_prof_create_in      IN epis_prognosis.id_prof_create%TYPE DEFAULT NULL,
        dt_create_in           IN epis_prognosis.dt_create%TYPE DEFAULT NULL,
        id_prof_last_update_in IN epis_prognosis.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_in      IN epis_prognosis.dt_last_update%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN epis_prognosis.id_prof_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in    IN epis_prognosis.id_cancel_reason%TYPE DEFAULT NULL,
        cancel_notes_in        IN epis_prognosis.cancel_notes%TYPE DEFAULT NULL,
        dt_cancel_in           IN epis_prognosis.dt_cancel%TYPE DEFAULT NULL,
        create_user_in         IN epis_prognosis.create_user%TYPE DEFAULT NULL,
        create_time_in         IN epis_prognosis.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN epis_prognosis.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN epis_prognosis.update_user%TYPE DEFAULT NULL,
        update_time_in         IN epis_prognosis.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN epis_prognosis.update_institution%TYPE DEFAULT NULL,
        id_prognosis_in        IN epis_prognosis.id_prognosis%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := FALSE
    );

    --Update record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN epis_prognosis%ROWTYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        IN OUT table_varchar
    );

    --Update record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN epis_prognosis%ROWTYPE,
        handle_error_in IN BOOLEAN := FALSE
    );

    --Update collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN epis_prognosis_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := FALSE,
        rows_out          IN OUT table_varchar
    );

    --Update collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN epis_prognosis_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := FALSE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := FALSE,
        rows_out           OUT table_varchar
    );

    --increment column value
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := FALSE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_epis_prognosis_in IN epis_prognosis.id_epis_prognosis%TYPE,
        handle_error_in      IN BOOLEAN := FALSE,
        rows_out             OUT table_varchar
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_epis_prognosis_in IN epis_prognosis.id_epis_prognosis%TYPE,
        handle_error_in      IN BOOLEAN := FALSE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := FALSE
    );

    -- Delete all rows for this EP_CR_FK foreign key value
    PROCEDURE del_ep_cr_fk
    (
        id_cancel_reason_in IN epis_prognosis.id_cancel_reason%TYPE,
        handle_error_in     IN BOOLEAN := FALSE,
        rows_out            OUT table_varchar
    );

    -- Delete all rows for this EP_EPIS_FK foreign key value
    PROCEDURE del_ep_epis_fk
    (
        id_episode_in   IN epis_prognosis.id_episode%TYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this EP_PROF_CANCEL_FK foreign key value
    PROCEDURE del_ep_prof_cancel_fk
    (
        id_prof_cancel_in IN epis_prognosis.id_prof_cancel%TYPE,
        handle_error_in   IN BOOLEAN := FALSE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows for this EP_PROF_CREATE_FK foreign key value
    PROCEDURE del_ep_prof_create_fk
    (
        id_prof_create_in IN epis_prognosis.id_prof_create%TYPE,
        handle_error_in   IN BOOLEAN := FALSE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows for this EP_PROF_UPDATE_FK foreign key value
    PROCEDURE del_ep_prof_update_fk
    (
        id_prof_last_update_in IN epis_prognosis.id_prof_last_update%TYPE,
        handle_error_in        IN BOOLEAN := FALSE,
        rows_out               OUT table_varchar
    );

    -- Delete all rows for this EP_CR_FK foreign key value
    PROCEDURE del_ep_cr_fk
    (
        id_cancel_reason_in IN epis_prognosis.id_cancel_reason%TYPE,
        handle_error_in     IN BOOLEAN := FALSE
    );

    -- Delete all rows for this EP_EPIS_FK foreign key value
    PROCEDURE del_ep_epis_fk
    (
        id_episode_in   IN epis_prognosis.id_episode%TYPE,
        handle_error_in IN BOOLEAN := FALSE
    );

    -- Delete all rows for this EP_PROF_CANCEL_FK foreign key value
    PROCEDURE del_ep_prof_cancel_fk
    (
        id_prof_cancel_in IN epis_prognosis.id_prof_cancel%TYPE,
        handle_error_in   IN BOOLEAN := FALSE
    );

    -- Delete all rows for this EP_PROF_CREATE_FK foreign key value
    PROCEDURE del_ep_prof_create_fk
    (
        id_prof_create_in IN epis_prognosis.id_prof_create%TYPE,
        handle_error_in   IN BOOLEAN := FALSE
    );

    -- Delete all rows for this EP_PROF_UPDATE_FK foreign key value
    PROCEDURE del_ep_prof_update_fk
    (
        id_prof_last_update_in IN epis_prognosis.id_prof_last_update%TYPE,
        handle_error_in        IN BOOLEAN := FALSE
    );

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(epis_prognosis_inout IN OUT epis_prognosis%ROWTYPE);

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN epis_prognosis%ROWTYPE;

    -- Get data rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN epis_prognosis_tc;

    -- Get data rowid pragma autonomous transaccion
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN epis_prognosis_tc;

END ts_epis_prognosis;
/
