/*-- Last Change Revision: $Rev: 2029113 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:49:51 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE ts_discharge_notes_follow_up
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Maio 22, 2009 17:55:49
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on "DISCHARGE_NOTES_FOLLOW_UP"
    TYPE discharge_notes_follow_up_tc IS TABLE OF discharge_notes_follow_up%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE discharge_notes_follow_up_ntt IS TABLE OF discharge_notes_follow_up%ROWTYPE;
    TYPE discharge_notes_follow_up_vat IS VARRAY(100) OF discharge_notes_follow_up%ROWTYPE;

    -- Same type structure, with a static name.
    TYPE aat IS TABLE OF discharge_notes_follow_up%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE ntt IS TABLE OF discharge_notes_follow_up%ROWTYPE;
    TYPE vat IS VARRAY(100) OF discharge_notes_follow_up%ROWTYPE;

    -- Column Collection based on column "ID_DISCHARGE_NOTES"
    TYPE id_discharge_notes_cc IS TABLE OF discharge_notes_follow_up.id_discharge_notes%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_FOLLOW_UP_WITH"
    TYPE id_follow_up_with_cc IS TABLE OF discharge_notes_follow_up.id_follow_up_with%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_FOLLOW_UP_ENTITY"
    TYPE id_follow_up_entity_cc IS TABLE OF discharge_notes_follow_up.id_follow_up_entity%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FOLLOW_UP_WITH_TEXT"
    TYPE follow_up_with_text_cc IS TABLE OF discharge_notes_follow_up.follow_up_with_text%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROF_CREATE"
    TYPE id_prof_create_cc IS TABLE OF discharge_notes_follow_up.id_prof_create%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_CREATION"
    TYPE dt_creation_cc IS TABLE OF discharge_notes_follow_up.dt_creation%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FOLLOW_UP_IN"
    TYPE follow_up_in_cc IS TABLE OF discharge_notes_follow_up.follow_up_in%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_FOLLOW_UP_TYPE"
    TYPE id_follow_up_type_cc IS TABLE OF discharge_notes_follow_up.id_follow_up_type%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_USER"
    TYPE create_user_cc IS TABLE OF discharge_notes_follow_up.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_TIME"
    TYPE create_time_cc IS TABLE OF discharge_notes_follow_up.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_INSTITUTION"
    TYPE create_institution_cc IS TABLE OF discharge_notes_follow_up.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_USER"
    TYPE update_user_cc IS TABLE OF discharge_notes_follow_up.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_TIME"
    TYPE update_time_cc IS TABLE OF discharge_notes_follow_up.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_INSTITUTION"
    TYPE update_institution_cc IS TABLE OF discharge_notes_follow_up.update_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "NOTES"
    TYPE notes_cc IS TABLE OF discharge_notes_follow_up.notes%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present
    PROCEDURE ins
    (
        id_discharge_notes_in  IN discharge_notes_follow_up.id_discharge_notes%TYPE,
        id_follow_up_with_in   IN discharge_notes_follow_up.id_follow_up_with%TYPE,
        id_follow_up_entity_in IN discharge_notes_follow_up.id_follow_up_entity%TYPE,
        follow_up_with_text_in IN discharge_notes_follow_up.follow_up_with_text%TYPE DEFAULT NULL,
        id_prof_create_in      IN discharge_notes_follow_up.id_prof_create%TYPE DEFAULT NULL,
        dt_creation_in         IN discharge_notes_follow_up.dt_creation%TYPE DEFAULT NULL,
        follow_up_in_in        IN discharge_notes_follow_up.follow_up_in%TYPE DEFAULT NULL,
        id_follow_up_type_in   IN discharge_notes_follow_up.id_follow_up_type%TYPE DEFAULT NULL,
        create_user_in         IN discharge_notes_follow_up.create_user%TYPE DEFAULT NULL,
        create_time_in         IN discharge_notes_follow_up.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN discharge_notes_follow_up.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN discharge_notes_follow_up.update_user%TYPE DEFAULT NULL,
        update_time_in         IN discharge_notes_follow_up.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN discharge_notes_follow_up.update_institution%TYPE DEFAULT NULL,
        notes_in               IN discharge_notes_follow_up.notes%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_discharge_notes_in  IN discharge_notes_follow_up.id_discharge_notes%TYPE,
        id_follow_up_with_in   IN discharge_notes_follow_up.id_follow_up_with%TYPE,
        id_follow_up_entity_in IN discharge_notes_follow_up.id_follow_up_entity%TYPE,
        follow_up_with_text_in IN discharge_notes_follow_up.follow_up_with_text%TYPE DEFAULT NULL,
        id_prof_create_in      IN discharge_notes_follow_up.id_prof_create%TYPE DEFAULT NULL,
        dt_creation_in         IN discharge_notes_follow_up.dt_creation%TYPE DEFAULT NULL,
        follow_up_in_in        IN discharge_notes_follow_up.follow_up_in%TYPE DEFAULT NULL,
        id_follow_up_type_in   IN discharge_notes_follow_up.id_follow_up_type%TYPE DEFAULT NULL,
        create_user_in         IN discharge_notes_follow_up.create_user%TYPE DEFAULT NULL,
        create_time_in         IN discharge_notes_follow_up.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN discharge_notes_follow_up.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN discharge_notes_follow_up.update_user%TYPE DEFAULT NULL,
        update_time_in         IN discharge_notes_follow_up.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN discharge_notes_follow_up.update_institution%TYPE DEFAULT NULL,
        notes_in               IN discharge_notes_follow_up.notes%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record.
    PROCEDURE ins
    (
        rec_in          IN discharge_notes_follow_up%ROWTYPE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rec_in          IN discharge_notes_follow_up%ROWTYPE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers.
    PROCEDURE ins
    (
        rows_in         IN discharge_notes_follow_up_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rows_in         IN discharge_notes_follow_up_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.

    PROCEDURE upd
    (
        id_discharge_notes_in   IN discharge_notes_follow_up.id_discharge_notes%TYPE,
        id_follow_up_with_in    IN discharge_notes_follow_up.id_follow_up_with%TYPE,
        id_follow_up_entity_in  IN discharge_notes_follow_up.id_follow_up_entity%TYPE,
        follow_up_with_text_in  IN discharge_notes_follow_up.follow_up_with_text%TYPE DEFAULT NULL,
        follow_up_with_text_nin IN BOOLEAN := TRUE,
        id_prof_create_in       IN discharge_notes_follow_up.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin      IN BOOLEAN := TRUE,
        dt_creation_in          IN discharge_notes_follow_up.dt_creation%TYPE DEFAULT NULL,
        dt_creation_nin         IN BOOLEAN := TRUE,
        follow_up_in_in         IN discharge_notes_follow_up.follow_up_in%TYPE DEFAULT NULL,
        follow_up_in_nin        IN BOOLEAN := TRUE,
        id_follow_up_type_in    IN discharge_notes_follow_up.id_follow_up_type%TYPE DEFAULT NULL,
        id_follow_up_type_nin   IN BOOLEAN := TRUE,
        create_user_in          IN discharge_notes_follow_up.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN discharge_notes_follow_up.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN discharge_notes_follow_up.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN discharge_notes_follow_up.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN discharge_notes_follow_up.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN discharge_notes_follow_up.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        notes_in                IN discharge_notes_follow_up.notes%TYPE DEFAULT NULL,
        notes_nin               IN BOOLEAN := TRUE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_discharge_notes_in   IN discharge_notes_follow_up.id_discharge_notes%TYPE,
        id_follow_up_with_in    IN discharge_notes_follow_up.id_follow_up_with%TYPE,
        id_follow_up_entity_in  IN discharge_notes_follow_up.id_follow_up_entity%TYPE,
        follow_up_with_text_in  IN discharge_notes_follow_up.follow_up_with_text%TYPE DEFAULT NULL,
        follow_up_with_text_nin IN BOOLEAN := TRUE,
        id_prof_create_in       IN discharge_notes_follow_up.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin      IN BOOLEAN := TRUE,
        dt_creation_in          IN discharge_notes_follow_up.dt_creation%TYPE DEFAULT NULL,
        dt_creation_nin         IN BOOLEAN := TRUE,
        follow_up_in_in         IN discharge_notes_follow_up.follow_up_in%TYPE DEFAULT NULL,
        follow_up_in_nin        IN BOOLEAN := TRUE,
        id_follow_up_type_in    IN discharge_notes_follow_up.id_follow_up_type%TYPE DEFAULT NULL,
        id_follow_up_type_nin   IN BOOLEAN := TRUE,
        create_user_in          IN discharge_notes_follow_up.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN discharge_notes_follow_up.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN discharge_notes_follow_up.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN discharge_notes_follow_up.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN discharge_notes_follow_up.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN discharge_notes_follow_up.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        notes_in                IN discharge_notes_follow_up.notes%TYPE DEFAULT NULL,
        notes_nin               IN BOOLEAN := TRUE,
        handle_error_in         IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        follow_up_with_text_in  IN discharge_notes_follow_up.follow_up_with_text%TYPE DEFAULT NULL,
        follow_up_with_text_nin IN BOOLEAN := TRUE,
        id_prof_create_in       IN discharge_notes_follow_up.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin      IN BOOLEAN := TRUE,
        dt_creation_in          IN discharge_notes_follow_up.dt_creation%TYPE DEFAULT NULL,
        dt_creation_nin         IN BOOLEAN := TRUE,
        follow_up_in_in         IN discharge_notes_follow_up.follow_up_in%TYPE DEFAULT NULL,
        follow_up_in_nin        IN BOOLEAN := TRUE,
        id_follow_up_type_in    IN discharge_notes_follow_up.id_follow_up_type%TYPE DEFAULT NULL,
        id_follow_up_type_nin   IN BOOLEAN := TRUE,
        create_user_in          IN discharge_notes_follow_up.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN discharge_notes_follow_up.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN discharge_notes_follow_up.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN discharge_notes_follow_up.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN discharge_notes_follow_up.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN discharge_notes_follow_up.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        notes_in                IN discharge_notes_follow_up.notes%TYPE DEFAULT NULL,
        notes_nin               IN BOOLEAN := TRUE,
        where_in                VARCHAR2 DEFAULT NULL,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                IN OUT table_varchar
    );

    PROCEDURE upd
    (
        follow_up_with_text_in  IN discharge_notes_follow_up.follow_up_with_text%TYPE DEFAULT NULL,
        follow_up_with_text_nin IN BOOLEAN := TRUE,
        id_prof_create_in       IN discharge_notes_follow_up.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin      IN BOOLEAN := TRUE,
        dt_creation_in          IN discharge_notes_follow_up.dt_creation%TYPE DEFAULT NULL,
        dt_creation_nin         IN BOOLEAN := TRUE,
        follow_up_in_in         IN discharge_notes_follow_up.follow_up_in%TYPE DEFAULT NULL,
        follow_up_in_nin        IN BOOLEAN := TRUE,
        id_follow_up_type_in    IN discharge_notes_follow_up.id_follow_up_type%TYPE DEFAULT NULL,
        id_follow_up_type_nin   IN BOOLEAN := TRUE,
        create_user_in          IN discharge_notes_follow_up.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN discharge_notes_follow_up.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN discharge_notes_follow_up.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN discharge_notes_follow_up.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN discharge_notes_follow_up.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN discharge_notes_follow_up.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        notes_in                IN discharge_notes_follow_up.notes%TYPE DEFAULT NULL,
        notes_nin               IN BOOLEAN := TRUE,
        where_in                VARCHAR2 DEFAULT NULL,
        handle_error_in         IN BOOLEAN := TRUE
    );

    PROCEDURE upd_ins
    (
        id_discharge_notes_in  IN discharge_notes_follow_up.id_discharge_notes%TYPE,
        id_follow_up_with_in   IN discharge_notes_follow_up.id_follow_up_with%TYPE,
        id_follow_up_entity_in IN discharge_notes_follow_up.id_follow_up_entity%TYPE,
        follow_up_with_text_in IN discharge_notes_follow_up.follow_up_with_text%TYPE DEFAULT NULL,
        id_prof_create_in      IN discharge_notes_follow_up.id_prof_create%TYPE DEFAULT NULL,
        dt_creation_in         IN discharge_notes_follow_up.dt_creation%TYPE DEFAULT NULL,
        follow_up_in_in        IN discharge_notes_follow_up.follow_up_in%TYPE DEFAULT NULL,
        id_follow_up_type_in   IN discharge_notes_follow_up.id_follow_up_type%TYPE DEFAULT NULL,
        create_user_in         IN discharge_notes_follow_up.create_user%TYPE DEFAULT NULL,
        create_time_in         IN discharge_notes_follow_up.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN discharge_notes_follow_up.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN discharge_notes_follow_up.update_user%TYPE DEFAULT NULL,
        update_time_in         IN discharge_notes_follow_up.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN discharge_notes_follow_up.update_institution%TYPE DEFAULT NULL,
        notes_in               IN discharge_notes_follow_up.notes%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    );

    PROCEDURE upd_ins
    (
        id_discharge_notes_in  IN discharge_notes_follow_up.id_discharge_notes%TYPE,
        id_follow_up_with_in   IN discharge_notes_follow_up.id_follow_up_with%TYPE,
        id_follow_up_entity_in IN discharge_notes_follow_up.id_follow_up_entity%TYPE,
        follow_up_with_text_in IN discharge_notes_follow_up.follow_up_with_text%TYPE DEFAULT NULL,
        id_prof_create_in      IN discharge_notes_follow_up.id_prof_create%TYPE DEFAULT NULL,
        dt_creation_in         IN discharge_notes_follow_up.dt_creation%TYPE DEFAULT NULL,
        follow_up_in_in        IN discharge_notes_follow_up.follow_up_in%TYPE DEFAULT NULL,
        id_follow_up_type_in   IN discharge_notes_follow_up.id_follow_up_type%TYPE DEFAULT NULL,
        create_user_in         IN discharge_notes_follow_up.create_user%TYPE DEFAULT NULL,
        create_time_in         IN discharge_notes_follow_up.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN discharge_notes_follow_up.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN discharge_notes_follow_up.update_user%TYPE DEFAULT NULL,
        update_time_in         IN discharge_notes_follow_up.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN discharge_notes_follow_up.update_institution%TYPE DEFAULT NULL,
        notes_in               IN discharge_notes_follow_up.notes%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        rec_in          IN discharge_notes_follow_up%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    PROCEDURE upd
    (
        rec_in          IN discharge_notes_follow_up%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        col_in            IN discharge_notes_follow_up_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    PROCEDURE upd
    (
        col_in            IN discharge_notes_follow_up_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_discharge_notes_in  IN discharge_notes_follow_up.id_discharge_notes%TYPE,
        id_follow_up_with_in   IN discharge_notes_follow_up.id_follow_up_with%TYPE,
        id_follow_up_entity_in IN discharge_notes_follow_up.id_follow_up_entity%TYPE,
        handle_error_in        IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_discharge_notes_in  IN discharge_notes_follow_up.id_discharge_notes%TYPE,
        id_follow_up_with_in   IN discharge_notes_follow_up.id_follow_up_with%TYPE,
        id_follow_up_entity_in IN discharge_notes_follow_up.id_follow_up_entity%TYPE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    );

    -- Delete all rows for primary key column ID_DISCHARGE_NOTES
    PROCEDURE del_id_discharge_notes
    (
        id_discharge_notes_in IN discharge_notes_follow_up.id_discharge_notes%TYPE,
        handle_error_in       IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_DISCHARGE_NOTES
    PROCEDURE del_id_discharge_notes
    (
        id_discharge_notes_in IN discharge_notes_follow_up.id_discharge_notes%TYPE,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    );

    -- Delete all rows for primary key column ID_FOLLOW_UP_WITH
    PROCEDURE del_id_follow_up_with
    (
        id_follow_up_with_in IN discharge_notes_follow_up.id_follow_up_with%TYPE,
        handle_error_in      IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_FOLLOW_UP_WITH
    PROCEDURE del_id_follow_up_with
    (
        id_follow_up_with_in IN discharge_notes_follow_up.id_follow_up_with%TYPE,
        handle_error_in      IN BOOLEAN := TRUE,
        rows_out             OUT table_varchar
    );

    -- Delete all rows for primary key column ID_FOLLOW_UP_ENTITY
    PROCEDURE del_id_follow_up_entity
    (
        id_follow_up_entity_in IN discharge_notes_follow_up.id_follow_up_entity%TYPE,
        handle_error_in        IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_FOLLOW_UP_ENTITY
    PROCEDURE del_id_follow_up_entity
    (
        id_follow_up_entity_in IN discharge_notes_follow_up.id_follow_up_entity%TYPE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    );

    -- Delete all rows for this DNU_FU_ENTITY_FK foreign key value
    PROCEDURE del_dnu_fu_entity_fk
    (
        id_follow_up_entity_in IN discharge_notes_follow_up.id_follow_up_entity%TYPE,
        handle_error_in        IN BOOLEAN := TRUE
    );

    -- Delete all rows for this DNU_FU_ENTITY_FK foreign key value
    PROCEDURE del_dnu_fu_entity_fk
    (
        id_follow_up_entity_in IN discharge_notes_follow_up.id_follow_up_entity%TYPE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    );

    -- Delete all rows for this DNU_FUP_FK foreign key value
    PROCEDURE del_dnu_fup_fk
    (
        id_follow_up_type_in IN discharge_notes_follow_up.id_follow_up_type%TYPE,
        handle_error_in      IN BOOLEAN := TRUE
    );

    -- Delete all rows for this DNU_FUP_FK foreign key value
    PROCEDURE del_dnu_fup_fk
    (
        id_follow_up_type_in IN discharge_notes_follow_up.id_follow_up_type%TYPE,
        handle_error_in      IN BOOLEAN := TRUE,
        rows_out             OUT table_varchar
    );

    -- Delete all rows for this DNU_PROF_CREATE_FK foreign key value
    PROCEDURE del_dnu_prof_create_fk
    (
        id_prof_create_in IN discharge_notes_follow_up.id_prof_create%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Delete all rows for this DNU_PROF_CREATE_FK foreign key value
    PROCEDURE del_dnu_prof_create_fk
    (
        id_prof_create_in IN discharge_notes_follow_up.id_prof_create%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(dischargenotesfollowup_inout IN OUT discharge_notes_follow_up%ROWTYPE);

    FUNCTION initrec RETURN discharge_notes_follow_up%ROWTYPE;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN discharge_notes_follow_up_tc;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN discharge_notes_follow_up_tc;

END ts_discharge_notes_follow_up;
/
