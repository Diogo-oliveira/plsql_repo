/*-- Last Change Revision: $Rev: 1779838 $*/
/*-- Last Change by: $Author: vanessa.barsottelli $*/
/*-- Date of last change: $Date: 2017-04-20 15:32:24 +0100 (qui, 20 abr 2017) $*/
CREATE OR REPLACE PACKAGE ts_bmng_action_sch_map
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2017-04-13 10:42:51
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on bmng_action_sch_map
    TYPE bmng_action_sch_map_tc IS TABLE OF bmng_action_sch_map%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE bmng_action_sch_map_ntt IS TABLE OF bmng_action_sch_map%ROWTYPE;
    TYPE bmng_action_sch_map_vat IS VARRAY(100) OF bmng_action_sch_map%ROWTYPE;

    -- Column Collection based on column ID_SCH_RESOURCE
    TYPE id_sch_resource_cc IS TABLE OF bmng_action_sch_map.id_sch_resource%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_BMNG_ACTION
    TYPE id_bmng_action_cc IS TABLE OF bmng_action_sch_map.id_bmng_action%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column FLG_ACTION
    TYPE flg_action_cc IS TABLE OF bmng_action_sch_map.flg_action%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column DT_CREATED
    TYPE dt_created_cc IS TABLE OF bmng_action_sch_map.dt_created%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_USER
    TYPE create_user_cc IS TABLE OF bmng_action_sch_map.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_TIME
    TYPE create_time_cc IS TABLE OF bmng_action_sch_map.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_INSTITUTION
    TYPE create_institution_cc IS TABLE OF bmng_action_sch_map.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_USER
    TYPE update_user_cc IS TABLE OF bmng_action_sch_map.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_TIME
    TYPE update_time_cc IS TABLE OF bmng_action_sch_map.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_INSTITUTION
    TYPE update_institution_cc IS TABLE OF bmng_action_sch_map.update_institution%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present (with rows_out)
    PROCEDURE ins
    (
        id_sch_resource_in    IN bmng_action_sch_map.id_sch_resource%TYPE,
        id_bmng_action_in     IN bmng_action_sch_map.id_bmng_action%TYPE,
        flg_action_in         IN bmng_action_sch_map.flg_action%TYPE DEFAULT NULL,
        dt_created_in         IN bmng_action_sch_map.dt_created%TYPE DEFAULT current_timestamp,
        create_user_in        IN bmng_action_sch_map.create_user%TYPE DEFAULT NULL,
        create_time_in        IN bmng_action_sch_map.create_time%TYPE DEFAULT NULL,
        create_institution_in IN bmng_action_sch_map.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN bmng_action_sch_map.update_user%TYPE DEFAULT NULL,
        update_time_in        IN bmng_action_sch_map.update_time%TYPE DEFAULT NULL,
        update_institution_in IN bmng_action_sch_map.update_institution%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    );

    -- Insert one row, providing primary key if present (without rows_out)
    PROCEDURE ins
    (
        id_sch_resource_in    IN bmng_action_sch_map.id_sch_resource%TYPE,
        id_bmng_action_in     IN bmng_action_sch_map.id_bmng_action%TYPE,
        flg_action_in         IN bmng_action_sch_map.flg_action%TYPE DEFAULT NULL,
        dt_created_in         IN bmng_action_sch_map.dt_created%TYPE DEFAULT current_timestamp,
        create_user_in        IN bmng_action_sch_map.create_user%TYPE DEFAULT NULL,
        create_time_in        IN bmng_action_sch_map.create_time%TYPE DEFAULT NULL,
        create_institution_in IN bmng_action_sch_map.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN bmng_action_sch_map.update_user%TYPE DEFAULT NULL,
        update_time_in        IN bmng_action_sch_map.update_time%TYPE DEFAULT NULL,
        update_institution_in IN bmng_action_sch_map.update_institution%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN bmng_action_sch_map%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN bmng_action_sch_map%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN bmng_action_sch_map_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN bmng_action_sch_map_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_sch_resource_in     IN bmng_action_sch_map.id_sch_resource%TYPE,
        id_bmng_action_in      IN bmng_action_sch_map.id_bmng_action%TYPE,
        flg_action_in          IN bmng_action_sch_map.flg_action%TYPE DEFAULT NULL,
        flg_action_nin         IN BOOLEAN := TRUE,
        dt_created_in          IN bmng_action_sch_map.dt_created%TYPE DEFAULT NULL,
        dt_created_nin         IN BOOLEAN := TRUE,
        create_user_in         IN bmng_action_sch_map.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN bmng_action_sch_map.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN bmng_action_sch_map.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN bmng_action_sch_map.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN bmng_action_sch_map.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN bmng_action_sch_map.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               IN OUT table_varchar
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_sch_resource_in     IN bmng_action_sch_map.id_sch_resource%TYPE,
        id_bmng_action_in      IN bmng_action_sch_map.id_bmng_action%TYPE,
        flg_action_in          IN bmng_action_sch_map.flg_action%TYPE DEFAULT NULL,
        flg_action_nin         IN BOOLEAN := TRUE,
        dt_created_in          IN bmng_action_sch_map.dt_created%TYPE DEFAULT NULL,
        dt_created_nin         IN BOOLEAN := TRUE,
        create_user_in         IN bmng_action_sch_map.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN bmng_action_sch_map.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN bmng_action_sch_map.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN bmng_action_sch_map.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN bmng_action_sch_map.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN bmng_action_sch_map.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        handle_error_in        IN BOOLEAN := TRUE
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        flg_action_in          IN bmng_action_sch_map.flg_action%TYPE DEFAULT NULL,
        flg_action_nin         IN BOOLEAN := TRUE,
        dt_created_in          IN bmng_action_sch_map.dt_created%TYPE DEFAULT NULL,
        dt_created_nin         IN BOOLEAN := TRUE,
        create_user_in         IN bmng_action_sch_map.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN bmng_action_sch_map.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN bmng_action_sch_map.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN bmng_action_sch_map.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN bmng_action_sch_map.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN bmng_action_sch_map.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        where_in               IN VARCHAR2,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               IN OUT table_varchar
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        flg_action_in          IN bmng_action_sch_map.flg_action%TYPE DEFAULT NULL,
        flg_action_nin         IN BOOLEAN := TRUE,
        dt_created_in          IN bmng_action_sch_map.dt_created%TYPE DEFAULT NULL,
        dt_created_nin         IN BOOLEAN := TRUE,
        create_user_in         IN bmng_action_sch_map.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN bmng_action_sch_map.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN bmng_action_sch_map.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN bmng_action_sch_map.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN bmng_action_sch_map.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN bmng_action_sch_map.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        where_in               IN VARCHAR2,
        handle_error_in        IN BOOLEAN := TRUE
    );

    --Update/insert with columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_sch_resource_in    IN bmng_action_sch_map.id_sch_resource%TYPE,
        id_bmng_action_in     IN bmng_action_sch_map.id_bmng_action%TYPE,
        flg_action_in         IN bmng_action_sch_map.flg_action%TYPE DEFAULT NULL,
        dt_created_in         IN bmng_action_sch_map.dt_created%TYPE DEFAULT NULL,
        create_user_in        IN bmng_action_sch_map.create_user%TYPE DEFAULT NULL,
        create_time_in        IN bmng_action_sch_map.create_time%TYPE DEFAULT NULL,
        create_institution_in IN bmng_action_sch_map.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN bmng_action_sch_map.update_user%TYPE DEFAULT NULL,
        update_time_in        IN bmng_action_sch_map.update_time%TYPE DEFAULT NULL,
        update_institution_in IN bmng_action_sch_map.update_institution%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              IN OUT table_varchar
    );

    --Update/insert with columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_sch_resource_in    IN bmng_action_sch_map.id_sch_resource%TYPE,
        id_bmng_action_in     IN bmng_action_sch_map.id_bmng_action%TYPE,
        flg_action_in         IN bmng_action_sch_map.flg_action%TYPE DEFAULT NULL,
        dt_created_in         IN bmng_action_sch_map.dt_created%TYPE DEFAULT NULL,
        create_user_in        IN bmng_action_sch_map.create_user%TYPE DEFAULT NULL,
        create_time_in        IN bmng_action_sch_map.create_time%TYPE DEFAULT NULL,
        create_institution_in IN bmng_action_sch_map.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN bmng_action_sch_map.update_user%TYPE DEFAULT NULL,
        update_time_in        IN bmng_action_sch_map.update_time%TYPE DEFAULT NULL,
        update_institution_in IN bmng_action_sch_map.update_institution%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE
    );

    --Update record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN bmng_action_sch_map%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    --Update record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN bmng_action_sch_map%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    --Update collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN bmng_action_sch_map_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    --Update collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN bmng_action_sch_map_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    --increment column value
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_sch_resource_in IN bmng_action_sch_map.id_sch_resource%TYPE,
        id_bmng_action_in  IN bmng_action_sch_map.id_bmng_action%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_sch_resource_in IN bmng_action_sch_map.id_sch_resource%TYPE,
        id_bmng_action_in  IN bmng_action_sch_map.id_bmng_action%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this BASM_BMNGA_FK foreign key value
    PROCEDURE del_basm_bmnga_fk
    (
        id_bmng_action_in IN bmng_action_sch_map.id_bmng_action%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows for this BASM_BMNGA_FK foreign key value
    PROCEDURE del_basm_bmnga_fk
    (
        id_bmng_action_in IN bmng_action_sch_map.id_bmng_action%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(bmng_action_sch_map_inout IN OUT bmng_action_sch_map%ROWTYPE);

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN bmng_action_sch_map%ROWTYPE;

    -- Get data rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN bmng_action_sch_map_tc;

    -- Get data rowid pragma autonomous transaccion
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN bmng_action_sch_map_tc;

END ts_bmng_action_sch_map;
/
