/*-- Last Change Revision: $Rev: 1357225 $*/
/*-- Last Change by: $Author: sofia.mendes $*/
/*-- Date of last change: $Date: 2012-07-27 14:21:42 +0100 (sex, 27 jul 2012) $*/
CREATE OR REPLACE PACKAGE ts_epis_pn_det
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Julho 20, 2012 12:32:35
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on "EPIS_PN_DET"
    TYPE epis_pn_det_tc IS TABLE OF epis_pn_det%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE epis_pn_det_ntt IS TABLE OF epis_pn_det%ROWTYPE;
    TYPE epis_pn_det_vat IS VARRAY(100) OF epis_pn_det%ROWTYPE;

    -- Same type structure, with a static name.
    TYPE aat IS TABLE OF epis_pn_det%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE ntt IS TABLE OF epis_pn_det%ROWTYPE;
    TYPE vat IS VARRAY(100) OF epis_pn_det%ROWTYPE;

    -- Column Collection based on column "ID_EPIS_PN_DET"
    TYPE id_epis_pn_det_cc IS TABLE OF epis_pn_det.id_epis_pn_det%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_EPIS_PN"
    TYPE id_epis_pn_cc IS TABLE OF epis_pn_det.id_epis_pn%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROFESSIONAL"
    TYPE id_professional_cc IS TABLE OF epis_pn_det.id_professional%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_PN"
    TYPE dt_pn_cc IS TABLE OF epis_pn_det.dt_pn%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PN_DATA_BLOCK"
    TYPE id_pn_data_block_cc IS TABLE OF epis_pn_det.id_pn_data_block%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PN_SOAP_BLOCK"
    TYPE id_pn_soap_block_cc IS TABLE OF epis_pn_det.id_pn_soap_block%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_STATUS"
    TYPE flg_status_cc IS TABLE OF epis_pn_det.flg_status%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "PN_NOTE"
    TYPE pn_note_cc IS TABLE OF epis_pn_det.pn_note%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_USER"
    TYPE create_user_cc IS TABLE OF epis_pn_det.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_TIME"
    TYPE create_time_cc IS TABLE OF epis_pn_det.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_INSTITUTION"
    TYPE create_institution_cc IS TABLE OF epis_pn_det.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_USER"
    TYPE update_user_cc IS TABLE OF epis_pn_det.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_TIME"
    TYPE update_time_cc IS TABLE OF epis_pn_det.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_INSTITUTION"
    TYPE update_institution_cc IS TABLE OF epis_pn_det.update_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_NOTE"
    TYPE dt_note_cc IS TABLE OF epis_pn_det.dt_note%TYPE INDEX BY BINARY_INTEGER;

    TYPE varchar2_t IS TABLE OF VARCHAR2(32767) INDEX BY PLS_INTEGER;
    /*
    START Special logic for handling LOB columns....
    */
    PROCEDURE n_ins_clobs_in_chunks
    (
        id_epis_pn_det_in     IN epis_pn_det.id_epis_pn_det%TYPE,
        id_epis_pn_in         IN epis_pn_det.id_epis_pn%TYPE DEFAULT NULL,
        id_professional_in    IN epis_pn_det.id_professional%TYPE DEFAULT NULL,
        dt_pn_in              IN epis_pn_det.dt_pn%TYPE DEFAULT NULL,
        id_pn_data_block_in   IN epis_pn_det.id_pn_data_block%TYPE DEFAULT NULL,
        id_pn_soap_block_in   IN epis_pn_det.id_pn_soap_block%TYPE DEFAULT NULL,
        flg_status_in         IN epis_pn_det.flg_status%TYPE DEFAULT 'A',
        create_user_in        IN epis_pn_det.create_user%TYPE DEFAULT NULL,
        create_time_in        IN epis_pn_det.create_time%TYPE DEFAULT NULL,
        create_institution_in IN epis_pn_det.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN epis_pn_det.update_user%TYPE DEFAULT NULL,
        update_time_in        IN epis_pn_det.update_time%TYPE DEFAULT NULL,
        update_institution_in IN epis_pn_det.update_institution%TYPE DEFAULT NULL,
        dt_note_in            IN epis_pn_det.dt_note%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE,
        clob_columns_in       IN varchar2_t,
        clob_pieces_in        IN varchar2_t
    );

    PROCEDURE n_upd_clobs_in_chunks
    (
        id_epis_pn_det_in     IN epis_pn_det.id_epis_pn_det%TYPE,
        id_epis_pn_in         IN epis_pn_det.id_epis_pn%TYPE DEFAULT NULL,
        id_professional_in    IN epis_pn_det.id_professional%TYPE DEFAULT NULL,
        dt_pn_in              IN epis_pn_det.dt_pn%TYPE DEFAULT NULL,
        id_pn_data_block_in   IN epis_pn_det.id_pn_data_block%TYPE DEFAULT NULL,
        id_pn_soap_block_in   IN epis_pn_det.id_pn_soap_block%TYPE DEFAULT NULL,
        flg_status_in         IN epis_pn_det.flg_status%TYPE DEFAULT 'A',
        create_user_in        IN epis_pn_det.create_user%TYPE DEFAULT NULL,
        create_time_in        IN epis_pn_det.create_time%TYPE DEFAULT NULL,
        create_institution_in IN epis_pn_det.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN epis_pn_det.update_user%TYPE DEFAULT NULL,
        update_time_in        IN epis_pn_det.update_time%TYPE DEFAULT NULL,
        update_institution_in IN epis_pn_det.update_institution%TYPE DEFAULT NULL,
        dt_note_in            IN epis_pn_det.dt_note%TYPE DEFAULT NULL,
        ignore_if_null_in     IN BOOLEAN := TRUE,
        handle_error_in       IN BOOLEAN := TRUE,
        clob_columns_in       IN varchar2_t,
        clob_pieces_in        IN varchar2_t
    );

    PROCEDURE n_upd_ins_clobs_in_chunks
    (
        id_epis_pn_det_in     IN epis_pn_det.id_epis_pn_det%TYPE,
        id_epis_pn_in         IN epis_pn_det.id_epis_pn%TYPE DEFAULT NULL,
        id_professional_in    IN epis_pn_det.id_professional%TYPE DEFAULT NULL,
        dt_pn_in              IN epis_pn_det.dt_pn%TYPE DEFAULT NULL,
        id_pn_data_block_in   IN epis_pn_det.id_pn_data_block%TYPE DEFAULT NULL,
        id_pn_soap_block_in   IN epis_pn_det.id_pn_soap_block%TYPE DEFAULT NULL,
        flg_status_in         IN epis_pn_det.flg_status%TYPE DEFAULT 'A',
        create_user_in        IN epis_pn_det.create_user%TYPE DEFAULT NULL,
        create_time_in        IN epis_pn_det.create_time%TYPE DEFAULT NULL,
        create_institution_in IN epis_pn_det.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN epis_pn_det.update_user%TYPE DEFAULT NULL,
        update_time_in        IN epis_pn_det.update_time%TYPE DEFAULT NULL,
        update_institution_in IN epis_pn_det.update_institution%TYPE DEFAULT NULL,
        dt_note_in            IN epis_pn_det.dt_note%TYPE DEFAULT NULL,
        ignore_if_null_in     IN BOOLEAN DEFAULT TRUE,
        handle_error_in       IN BOOLEAN DEFAULT TRUE,
        clob_columns_in       IN varchar2_t,
        clob_pieces_in        IN varchar2_t
    );

    /*
    END Special logic for handling LOB columns.
    */
    -- Insert one row, providing primary key if present
    PROCEDURE ins
    (
        id_epis_pn_det_in     IN epis_pn_det.id_epis_pn_det%TYPE,
        id_epis_pn_in         IN epis_pn_det.id_epis_pn%TYPE DEFAULT NULL,
        id_professional_in    IN epis_pn_det.id_professional%TYPE DEFAULT NULL,
        dt_pn_in              IN epis_pn_det.dt_pn%TYPE DEFAULT NULL,
        id_pn_data_block_in   IN epis_pn_det.id_pn_data_block%TYPE DEFAULT NULL,
        id_pn_soap_block_in   IN epis_pn_det.id_pn_soap_block%TYPE DEFAULT NULL,
        flg_status_in         IN epis_pn_det.flg_status%TYPE DEFAULT 'A',
        pn_note_in            IN epis_pn_det.pn_note%TYPE DEFAULT NULL,
        create_user_in        IN epis_pn_det.create_user%TYPE DEFAULT NULL,
        create_time_in        IN epis_pn_det.create_time%TYPE DEFAULT NULL,
        create_institution_in IN epis_pn_det.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN epis_pn_det.update_user%TYPE DEFAULT NULL,
        update_time_in        IN epis_pn_det.update_time%TYPE DEFAULT NULL,
        update_institution_in IN epis_pn_det.update_institution%TYPE DEFAULT NULL,
        dt_note_in            IN epis_pn_det.dt_note%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_epis_pn_det_in     IN epis_pn_det.id_epis_pn_det%TYPE,
        id_epis_pn_in         IN epis_pn_det.id_epis_pn%TYPE DEFAULT NULL,
        id_professional_in    IN epis_pn_det.id_professional%TYPE DEFAULT NULL,
        dt_pn_in              IN epis_pn_det.dt_pn%TYPE DEFAULT NULL,
        id_pn_data_block_in   IN epis_pn_det.id_pn_data_block%TYPE DEFAULT NULL,
        id_pn_soap_block_in   IN epis_pn_det.id_pn_soap_block%TYPE DEFAULT NULL,
        flg_status_in         IN epis_pn_det.flg_status%TYPE DEFAULT 'A',
        pn_note_in            IN epis_pn_det.pn_note%TYPE DEFAULT NULL,
        create_user_in        IN epis_pn_det.create_user%TYPE DEFAULT NULL,
        create_time_in        IN epis_pn_det.create_time%TYPE DEFAULT NULL,
        create_institution_in IN epis_pn_det.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN epis_pn_det.update_user%TYPE DEFAULT NULL,
        update_time_in        IN epis_pn_det.update_time%TYPE DEFAULT NULL,
        update_institution_in IN epis_pn_det.update_institution%TYPE DEFAULT NULL,
        dt_note_in            IN epis_pn_det.dt_note%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record.
    -- Specify whether or not a primary key value should be generated.
    PROCEDURE ins
    (
        rec_in          IN epis_pn_det%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rec_in          IN epis_pn_det%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers.
    PROCEDURE ins
    (
        rows_in         IN epis_pn_det_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rows_in         IN epis_pn_det_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Return next primary key value using the named sequence.
    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN epis_pn_det.id_epis_pn_det%TYPE;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_epis_pn_in         IN epis_pn_det.id_epis_pn%TYPE DEFAULT NULL,
        id_professional_in    IN epis_pn_det.id_professional%TYPE DEFAULT NULL,
        dt_pn_in              IN epis_pn_det.dt_pn%TYPE DEFAULT NULL,
        id_pn_data_block_in   IN epis_pn_det.id_pn_data_block%TYPE DEFAULT NULL,
        id_pn_soap_block_in   IN epis_pn_det.id_pn_soap_block%TYPE DEFAULT NULL,
        flg_status_in         IN epis_pn_det.flg_status%TYPE DEFAULT 'A',
        pn_note_in            IN epis_pn_det.pn_note%TYPE DEFAULT NULL,
        create_user_in        IN epis_pn_det.create_user%TYPE DEFAULT NULL,
        create_time_in        IN epis_pn_det.create_time%TYPE DEFAULT NULL,
        create_institution_in IN epis_pn_det.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN epis_pn_det.update_user%TYPE DEFAULT NULL,
        update_time_in        IN epis_pn_det.update_time%TYPE DEFAULT NULL,
        update_institution_in IN epis_pn_det.update_institution%TYPE DEFAULT NULL,
        dt_note_in            IN epis_pn_det.dt_note%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_epis_pn_in         IN epis_pn_det.id_epis_pn%TYPE DEFAULT NULL,
        id_professional_in    IN epis_pn_det.id_professional%TYPE DEFAULT NULL,
        dt_pn_in              IN epis_pn_det.dt_pn%TYPE DEFAULT NULL,
        id_pn_data_block_in   IN epis_pn_det.id_pn_data_block%TYPE DEFAULT NULL,
        id_pn_soap_block_in   IN epis_pn_det.id_pn_soap_block%TYPE DEFAULT NULL,
        flg_status_in         IN epis_pn_det.flg_status%TYPE DEFAULT 'A',
        pn_note_in            IN epis_pn_det.pn_note%TYPE DEFAULT NULL,
        create_user_in        IN epis_pn_det.create_user%TYPE DEFAULT NULL,
        create_time_in        IN epis_pn_det.create_time%TYPE DEFAULT NULL,
        create_institution_in IN epis_pn_det.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN epis_pn_det.update_user%TYPE DEFAULT NULL,
        update_time_in        IN epis_pn_det.update_time%TYPE DEFAULT NULL,
        update_institution_in IN epis_pn_det.update_institution%TYPE DEFAULT NULL,
        dt_note_in            IN epis_pn_det.dt_note%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_epis_pn_in         IN epis_pn_det.id_epis_pn%TYPE DEFAULT NULL,
        id_professional_in    IN epis_pn_det.id_professional%TYPE DEFAULT NULL,
        dt_pn_in              IN epis_pn_det.dt_pn%TYPE DEFAULT NULL,
        id_pn_data_block_in   IN epis_pn_det.id_pn_data_block%TYPE DEFAULT NULL,
        id_pn_soap_block_in   IN epis_pn_det.id_pn_soap_block%TYPE DEFAULT NULL,
        flg_status_in         IN epis_pn_det.flg_status%TYPE DEFAULT 'A',
        pn_note_in            IN epis_pn_det.pn_note%TYPE DEFAULT NULL,
        create_user_in        IN epis_pn_det.create_user%TYPE DEFAULT NULL,
        create_time_in        IN epis_pn_det.create_time%TYPE DEFAULT NULL,
        create_institution_in IN epis_pn_det.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN epis_pn_det.update_user%TYPE DEFAULT NULL,
        update_time_in        IN epis_pn_det.update_time%TYPE DEFAULT NULL,
        update_institution_in IN epis_pn_det.update_institution%TYPE DEFAULT NULL,
        dt_note_in            IN epis_pn_det.dt_note%TYPE DEFAULT NULL,
        id_epis_pn_det_out    IN OUT epis_pn_det.id_epis_pn_det%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_epis_pn_in         IN epis_pn_det.id_epis_pn%TYPE DEFAULT NULL,
        id_professional_in    IN epis_pn_det.id_professional%TYPE DEFAULT NULL,
        dt_pn_in              IN epis_pn_det.dt_pn%TYPE DEFAULT NULL,
        id_pn_data_block_in   IN epis_pn_det.id_pn_data_block%TYPE DEFAULT NULL,
        id_pn_soap_block_in   IN epis_pn_det.id_pn_soap_block%TYPE DEFAULT NULL,
        flg_status_in         IN epis_pn_det.flg_status%TYPE DEFAULT 'A',
        pn_note_in            IN epis_pn_det.pn_note%TYPE DEFAULT NULL,
        create_user_in        IN epis_pn_det.create_user%TYPE DEFAULT NULL,
        create_time_in        IN epis_pn_det.create_time%TYPE DEFAULT NULL,
        create_institution_in IN epis_pn_det.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN epis_pn_det.update_user%TYPE DEFAULT NULL,
        update_time_in        IN epis_pn_det.update_time%TYPE DEFAULT NULL,
        update_institution_in IN epis_pn_det.update_institution%TYPE DEFAULT NULL,
        dt_note_in            IN epis_pn_det.dt_note%TYPE DEFAULT NULL,
        id_epis_pn_det_out    IN OUT epis_pn_det.id_epis_pn_det%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_epis_pn_in         IN epis_pn_det.id_epis_pn%TYPE DEFAULT NULL,
        id_professional_in    IN epis_pn_det.id_professional%TYPE DEFAULT NULL,
        dt_pn_in              IN epis_pn_det.dt_pn%TYPE DEFAULT NULL,
        id_pn_data_block_in   IN epis_pn_det.id_pn_data_block%TYPE DEFAULT NULL,
        id_pn_soap_block_in   IN epis_pn_det.id_pn_soap_block%TYPE DEFAULT NULL,
        flg_status_in         IN epis_pn_det.flg_status%TYPE DEFAULT 'A',
        pn_note_in            IN epis_pn_det.pn_note%TYPE DEFAULT NULL,
        create_user_in        IN epis_pn_det.create_user%TYPE DEFAULT NULL,
        create_time_in        IN epis_pn_det.create_time%TYPE DEFAULT NULL,
        create_institution_in IN epis_pn_det.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN epis_pn_det.update_user%TYPE DEFAULT NULL,
        update_time_in        IN epis_pn_det.update_time%TYPE DEFAULT NULL,
        update_institution_in IN epis_pn_det.update_institution%TYPE DEFAULT NULL,
        dt_note_in            IN epis_pn_det.dt_note%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN epis_pn_det.id_epis_pn_det%TYPE;

    FUNCTION ins
    (
        id_epis_pn_in         IN epis_pn_det.id_epis_pn%TYPE DEFAULT NULL,
        id_professional_in    IN epis_pn_det.id_professional%TYPE DEFAULT NULL,
        dt_pn_in              IN epis_pn_det.dt_pn%TYPE DEFAULT NULL,
        id_pn_data_block_in   IN epis_pn_det.id_pn_data_block%TYPE DEFAULT NULL,
        id_pn_soap_block_in   IN epis_pn_det.id_pn_soap_block%TYPE DEFAULT NULL,
        flg_status_in         IN epis_pn_det.flg_status%TYPE DEFAULT 'A',
        pn_note_in            IN epis_pn_det.pn_note%TYPE DEFAULT NULL,
        create_user_in        IN epis_pn_det.create_user%TYPE DEFAULT NULL,
        create_time_in        IN epis_pn_det.create_time%TYPE DEFAULT NULL,
        create_institution_in IN epis_pn_det.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN epis_pn_det.update_user%TYPE DEFAULT NULL,
        update_time_in        IN epis_pn_det.update_time%TYPE DEFAULT NULL,
        update_institution_in IN epis_pn_det.update_institution%TYPE DEFAULT NULL,
        dt_note_in            IN epis_pn_det.dt_note%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN epis_pn_det.id_epis_pn_det%TYPE;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.

    PROCEDURE upd
    (
        id_epis_pn_det_in      IN epis_pn_det.id_epis_pn_det%TYPE,
        id_epis_pn_in          IN epis_pn_det.id_epis_pn%TYPE DEFAULT NULL,
        id_epis_pn_nin         IN BOOLEAN := TRUE,
        id_professional_in     IN epis_pn_det.id_professional%TYPE DEFAULT NULL,
        id_professional_nin    IN BOOLEAN := TRUE,
        dt_pn_in               IN epis_pn_det.dt_pn%TYPE DEFAULT NULL,
        dt_pn_nin              IN BOOLEAN := TRUE,
        id_pn_data_block_in    IN epis_pn_det.id_pn_data_block%TYPE DEFAULT NULL,
        id_pn_data_block_nin   IN BOOLEAN := TRUE,
        id_pn_soap_block_in    IN epis_pn_det.id_pn_soap_block%TYPE DEFAULT NULL,
        id_pn_soap_block_nin   IN BOOLEAN := TRUE,
        flg_status_in          IN epis_pn_det.flg_status%TYPE DEFAULT NULL,
        flg_status_nin         IN BOOLEAN := TRUE,
        pn_note_in             IN epis_pn_det.pn_note%TYPE DEFAULT NULL,
        pn_note_nin            IN BOOLEAN := TRUE,
        create_user_in         IN epis_pn_det.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN epis_pn_det.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN epis_pn_det.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN epis_pn_det.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN epis_pn_det.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN epis_pn_det.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        dt_note_in             IN epis_pn_det.dt_note%TYPE DEFAULT NULL,
        dt_note_nin            IN BOOLEAN := TRUE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_epis_pn_det_in      IN epis_pn_det.id_epis_pn_det%TYPE,
        id_epis_pn_in          IN epis_pn_det.id_epis_pn%TYPE DEFAULT NULL,
        id_epis_pn_nin         IN BOOLEAN := TRUE,
        id_professional_in     IN epis_pn_det.id_professional%TYPE DEFAULT NULL,
        id_professional_nin    IN BOOLEAN := TRUE,
        dt_pn_in               IN epis_pn_det.dt_pn%TYPE DEFAULT NULL,
        dt_pn_nin              IN BOOLEAN := TRUE,
        id_pn_data_block_in    IN epis_pn_det.id_pn_data_block%TYPE DEFAULT NULL,
        id_pn_data_block_nin   IN BOOLEAN := TRUE,
        id_pn_soap_block_in    IN epis_pn_det.id_pn_soap_block%TYPE DEFAULT NULL,
        id_pn_soap_block_nin   IN BOOLEAN := TRUE,
        flg_status_in          IN epis_pn_det.flg_status%TYPE DEFAULT NULL,
        flg_status_nin         IN BOOLEAN := TRUE,
        pn_note_in             IN epis_pn_det.pn_note%TYPE DEFAULT NULL,
        pn_note_nin            IN BOOLEAN := TRUE,
        create_user_in         IN epis_pn_det.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN epis_pn_det.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN epis_pn_det.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN epis_pn_det.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN epis_pn_det.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN epis_pn_det.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        dt_note_in             IN epis_pn_det.dt_note%TYPE DEFAULT NULL,
        dt_note_nin            IN BOOLEAN := TRUE,
        handle_error_in        IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        id_epis_pn_in          IN epis_pn_det.id_epis_pn%TYPE DEFAULT NULL,
        id_epis_pn_nin         IN BOOLEAN := TRUE,
        id_professional_in     IN epis_pn_det.id_professional%TYPE DEFAULT NULL,
        id_professional_nin    IN BOOLEAN := TRUE,
        dt_pn_in               IN epis_pn_det.dt_pn%TYPE DEFAULT NULL,
        dt_pn_nin              IN BOOLEAN := TRUE,
        id_pn_data_block_in    IN epis_pn_det.id_pn_data_block%TYPE DEFAULT NULL,
        id_pn_data_block_nin   IN BOOLEAN := TRUE,
        id_pn_soap_block_in    IN epis_pn_det.id_pn_soap_block%TYPE DEFAULT NULL,
        id_pn_soap_block_nin   IN BOOLEAN := TRUE,
        flg_status_in          IN epis_pn_det.flg_status%TYPE DEFAULT NULL,
        flg_status_nin         IN BOOLEAN := TRUE,
        pn_note_in             IN epis_pn_det.pn_note%TYPE DEFAULT NULL,
        pn_note_nin            IN BOOLEAN := TRUE,
        create_user_in         IN epis_pn_det.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN epis_pn_det.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN epis_pn_det.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN epis_pn_det.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN epis_pn_det.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN epis_pn_det.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        dt_note_in             IN epis_pn_det.dt_note%TYPE DEFAULT NULL,
        dt_note_nin            IN BOOLEAN := TRUE,
        where_in               VARCHAR2,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_epis_pn_in          IN epis_pn_det.id_epis_pn%TYPE DEFAULT NULL,
        id_epis_pn_nin         IN BOOLEAN := TRUE,
        id_professional_in     IN epis_pn_det.id_professional%TYPE DEFAULT NULL,
        id_professional_nin    IN BOOLEAN := TRUE,
        dt_pn_in               IN epis_pn_det.dt_pn%TYPE DEFAULT NULL,
        dt_pn_nin              IN BOOLEAN := TRUE,
        id_pn_data_block_in    IN epis_pn_det.id_pn_data_block%TYPE DEFAULT NULL,
        id_pn_data_block_nin   IN BOOLEAN := TRUE,
        id_pn_soap_block_in    IN epis_pn_det.id_pn_soap_block%TYPE DEFAULT NULL,
        id_pn_soap_block_nin   IN BOOLEAN := TRUE,
        flg_status_in          IN epis_pn_det.flg_status%TYPE DEFAULT NULL,
        flg_status_nin         IN BOOLEAN := TRUE,
        pn_note_in             IN epis_pn_det.pn_note%TYPE DEFAULT NULL,
        pn_note_nin            IN BOOLEAN := TRUE,
        create_user_in         IN epis_pn_det.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN epis_pn_det.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN epis_pn_det.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN epis_pn_det.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN epis_pn_det.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN epis_pn_det.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        dt_note_in             IN epis_pn_det.dt_note%TYPE DEFAULT NULL,
        dt_note_nin            IN BOOLEAN := TRUE,
        where_in               VARCHAR2,
        handle_error_in        IN BOOLEAN := TRUE
    );

    PROCEDURE upd_ins
    (
        id_epis_pn_det_in     IN epis_pn_det.id_epis_pn_det%TYPE,
        id_epis_pn_in         IN epis_pn_det.id_epis_pn%TYPE DEFAULT NULL,
        id_professional_in    IN epis_pn_det.id_professional%TYPE DEFAULT NULL,
        dt_pn_in              IN epis_pn_det.dt_pn%TYPE DEFAULT NULL,
        id_pn_data_block_in   IN epis_pn_det.id_pn_data_block%TYPE DEFAULT NULL,
        id_pn_soap_block_in   IN epis_pn_det.id_pn_soap_block%TYPE DEFAULT NULL,
        flg_status_in         IN epis_pn_det.flg_status%TYPE DEFAULT NULL,
        pn_note_in            IN epis_pn_det.pn_note%TYPE DEFAULT NULL,
        create_user_in        IN epis_pn_det.create_user%TYPE DEFAULT NULL,
        create_time_in        IN epis_pn_det.create_time%TYPE DEFAULT NULL,
        create_institution_in IN epis_pn_det.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN epis_pn_det.update_user%TYPE DEFAULT NULL,
        update_time_in        IN epis_pn_det.update_time%TYPE DEFAULT NULL,
        update_institution_in IN epis_pn_det.update_institution%TYPE DEFAULT NULL,
        dt_note_in            IN epis_pn_det.dt_note%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    );

    PROCEDURE upd_ins
    (
        id_epis_pn_det_in     IN epis_pn_det.id_epis_pn_det%TYPE,
        id_epis_pn_in         IN epis_pn_det.id_epis_pn%TYPE DEFAULT NULL,
        id_professional_in    IN epis_pn_det.id_professional%TYPE DEFAULT NULL,
        dt_pn_in              IN epis_pn_det.dt_pn%TYPE DEFAULT NULL,
        id_pn_data_block_in   IN epis_pn_det.id_pn_data_block%TYPE DEFAULT NULL,
        id_pn_soap_block_in   IN epis_pn_det.id_pn_soap_block%TYPE DEFAULT NULL,
        flg_status_in         IN epis_pn_det.flg_status%TYPE DEFAULT NULL,
        pn_note_in            IN epis_pn_det.pn_note%TYPE DEFAULT NULL,
        create_user_in        IN epis_pn_det.create_user%TYPE DEFAULT NULL,
        create_time_in        IN epis_pn_det.create_time%TYPE DEFAULT NULL,
        create_institution_in IN epis_pn_det.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN epis_pn_det.update_user%TYPE DEFAULT NULL,
        update_time_in        IN epis_pn_det.update_time%TYPE DEFAULT NULL,
        update_institution_in IN epis_pn_det.update_institution%TYPE DEFAULT NULL,
        dt_note_in            IN epis_pn_det.dt_note%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        rec_in          IN epis_pn_det%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    PROCEDURE upd
    (
        rec_in          IN epis_pn_det%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        col_in            IN epis_pn_det_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    PROCEDURE upd
    (
        col_in            IN epis_pn_det_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_epis_pn_det_in IN epis_pn_det.id_epis_pn_det%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_epis_pn_det_in IN epis_pn_det.id_epis_pn_det%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows for primary key column ID_EPIS_PN_DET
    PROCEDURE del_id_epis_pn_det
    (
        id_epis_pn_det_in IN epis_pn_det.id_epis_pn_det%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_EPIS_PN_DET
    PROCEDURE del_id_epis_pn_det
    (
        id_epis_pn_det_in IN epis_pn_det.id_epis_pn_det%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows for this EPTD_EPN_FK foreign key value
    PROCEDURE del_eptd_epn_fk
    (
        id_epis_pn_in   IN epis_pn_det.id_epis_pn%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EPTD_EPN_FK foreign key value
    PROCEDURE del_eptd_epn_fk
    (
        id_epis_pn_in   IN epis_pn_det.id_epis_pn%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this EPTD_PDK_FK foreign key value
    PROCEDURE del_eptd_pdk_fk
    (
        id_pn_data_block_in IN epis_pn_det.id_pn_data_block%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EPTD_PDK_FK foreign key value
    PROCEDURE del_eptd_pdk_fk
    (
        id_pn_data_block_in IN epis_pn_det.id_pn_data_block%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    );

    -- Delete all rows for this EPTD_PNSB_FK foreign key value
    PROCEDURE del_eptd_pnsb_fk
    (
        id_pn_soap_block_in IN epis_pn_det.id_pn_soap_block%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EPTD_PNSB_FK foreign key value
    PROCEDURE del_eptd_pnsb_fk
    (
        id_pn_soap_block_in IN epis_pn_det.id_pn_soap_block%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    );

    -- Delete all rows for this EPTD_PROF_FK foreign key value
    PROCEDURE del_eptd_prof_fk
    (
        id_professional_in IN epis_pn_det.id_professional%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EPTD_PROF_FK foreign key value
    PROCEDURE del_eptd_prof_fk
    (
        id_professional_in IN epis_pn_det.id_professional%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(epis_pn_det_inout IN OUT epis_pn_det%ROWTYPE);

    FUNCTION initrec RETURN epis_pn_det%ROWTYPE;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN epis_pn_det_tc;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN epis_pn_det_tc;

END ts_epis_pn_det;
/
