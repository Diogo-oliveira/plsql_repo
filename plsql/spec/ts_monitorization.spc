/*-- Last Change Revision: $Rev: 2029245 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:50:36 +0100 (ter, 02 ago 2022) $*/
CREATE OR REPLACE PACKAGE TS_MONITORIZATION
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Dezembro 19, 2014 17:27:58
| Created By: ALERT
*/
IS

  -- Collection of %ROWTYPE records based on "MONITORIZATION"
     TYPE MONITORIZATION_tc IS TABLE OF MONITORIZATION%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE monitorization_ntt IS TABLE OF MONITORIZATION%ROWTYPE;
     TYPE monitorization_vat IS VARRAY(100) OF MONITORIZATION%ROWTYPE;

  -- Same type structure, with a static name.
     TYPE aat IS TABLE OF MONITORIZATION%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE ntt IS TABLE OF MONITORIZATION%ROWTYPE;
     TYPE vat IS VARRAY(100) OF MONITORIZATION%ROWTYPE;

   -- Column Collection based on column "ID_MONITORIZATION"
   TYPE ID_MONITORIZATION_cc IS TABLE OF MONITORIZATION.ID_MONITORIZATION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_EPISODE"
   TYPE ID_EPISODE_cc IS TABLE OF MONITORIZATION.ID_EPISODE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PROFESSIONAL"
   TYPE ID_PROFESSIONAL_cc IS TABLE OF MONITORIZATION.ID_PROFESSIONAL%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "NOTES"
   TYPE NOTES_cc IS TABLE OF MONITORIZATION.NOTES%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_TIME"
   TYPE FLG_TIME_cc IS TABLE OF MONITORIZATION.FLG_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "INTERVAL"
   TYPE INTERVAL_cc IS TABLE OF MONITORIZATION.INTERVAL%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_STATUS"
   TYPE FLG_STATUS_cc IS TABLE OF MONITORIZATION.FLG_STATUS%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PROF_CANCEL"
   TYPE ID_PROF_CANCEL_cc IS TABLE OF MONITORIZATION.ID_PROF_CANCEL%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "NOTES_CANCEL"
   TYPE NOTES_CANCEL_cc IS TABLE OF MONITORIZATION.NOTES_CANCEL%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_EPISODE_ORIGIN"
   TYPE ID_EPISODE_ORIGIN_cc IS TABLE OF MONITORIZATION.ID_EPISODE_ORIGIN%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_EPISODE_DESTINATION"
   TYPE ID_EPISODE_DESTINATION_cc IS TABLE OF MONITORIZATION.ID_EPISODE_DESTINATION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PREV_EPISODE"
   TYPE ID_PREV_EPISODE_cc IS TABLE OF MONITORIZATION.ID_PREV_EPISODE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_MONITORIZATION_TSTZ"
   TYPE DT_MONITORIZATION_TSTZ_cc IS TABLE OF MONITORIZATION.DT_MONITORIZATION_TSTZ%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_BEGIN_TSTZ"
   TYPE DT_BEGIN_TSTZ_cc IS TABLE OF MONITORIZATION.DT_BEGIN_TSTZ%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_END_TSTZ"
   TYPE DT_END_TSTZ_cc IS TABLE OF MONITORIZATION.DT_END_TSTZ%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_CANCEL_TSTZ"
   TYPE DT_CANCEL_TSTZ_cc IS TABLE OF MONITORIZATION.DT_CANCEL_TSTZ%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PATIENT"
   TYPE ID_PATIENT_cc IS TABLE OF MONITORIZATION.ID_PATIENT%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_USER"
   TYPE CREATE_USER_cc IS TABLE OF MONITORIZATION.CREATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_TIME"
   TYPE CREATE_TIME_cc IS TABLE OF MONITORIZATION.CREATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_INSTITUTION"
   TYPE CREATE_INSTITUTION_cc IS TABLE OF MONITORIZATION.CREATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_USER"
   TYPE UPDATE_USER_cc IS TABLE OF MONITORIZATION.UPDATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_TIME"
   TYPE UPDATE_TIME_cc IS TABLE OF MONITORIZATION.UPDATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_INSTITUTION"
   TYPE UPDATE_INSTITUTION_cc IS TABLE OF MONITORIZATION.UPDATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_STATUS_PREV"
   TYPE FLG_STATUS_PREV_cc IS TABLE OF MONITORIZATION.FLG_STATUS_PREV%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_CO_SIGN_ORDER"
   TYPE ID_CO_SIGN_ORDER_cc IS TABLE OF MONITORIZATION.ID_CO_SIGN_ORDER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_CO_SIGN_CANCEL"
   TYPE ID_CO_SIGN_CANCEL_cc IS TABLE OF MONITORIZATION.ID_CO_SIGN_CANCEL%TYPE INDEX BY BINARY_INTEGER;

   -- Insert one row, providing primary key if present
   PROCEDURE ins (
      id_monitorization_in IN MONITORIZATION.ID_MONITORIZATION%TYPE
      ,
      id_episode_in IN MONITORIZATION.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN MONITORIZATION.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      notes_in IN MONITORIZATION.NOTES%TYPE DEFAULT NULL,
      flg_time_in IN MONITORIZATION.FLG_TIME%TYPE DEFAULT NULL,
      interval_in IN MONITORIZATION.INTERVAL%TYPE DEFAULT NULL,
      flg_status_in IN MONITORIZATION.FLG_STATUS%TYPE DEFAULT NULL,
      id_prof_cancel_in IN MONITORIZATION.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN MONITORIZATION.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_episode_origin_in IN MONITORIZATION.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN MONITORIZATION.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      id_prev_episode_in IN MONITORIZATION.ID_PREV_EPISODE%TYPE DEFAULT NULL,
      dt_monitorization_tstz_in IN MONITORIZATION.DT_MONITORIZATION_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN MONITORIZATION.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN MONITORIZATION.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_cancel_tstz_in IN MONITORIZATION.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      id_patient_in IN MONITORIZATION.ID_PATIENT%TYPE DEFAULT NULL,
      create_user_in IN MONITORIZATION.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN MONITORIZATION.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN MONITORIZATION.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN MONITORIZATION.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN MONITORIZATION.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN MONITORIZATION.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_status_prev_in IN MONITORIZATION.FLG_STATUS_PREV%TYPE DEFAULT NULL,
      id_co_sign_order_in IN MONITORIZATION.ID_CO_SIGN_ORDER%TYPE DEFAULT NULL,
      id_co_sign_cancel_in IN MONITORIZATION.ID_CO_SIGN_CANCEL%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_monitorization_in IN MONITORIZATION.ID_MONITORIZATION%TYPE
      ,
      id_episode_in IN MONITORIZATION.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN MONITORIZATION.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      notes_in IN MONITORIZATION.NOTES%TYPE DEFAULT NULL,
      flg_time_in IN MONITORIZATION.FLG_TIME%TYPE DEFAULT NULL,
      interval_in IN MONITORIZATION.INTERVAL%TYPE DEFAULT NULL,
      flg_status_in IN MONITORIZATION.FLG_STATUS%TYPE DEFAULT NULL,
      id_prof_cancel_in IN MONITORIZATION.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN MONITORIZATION.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_episode_origin_in IN MONITORIZATION.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN MONITORIZATION.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      id_prev_episode_in IN MONITORIZATION.ID_PREV_EPISODE%TYPE DEFAULT NULL,
      dt_monitorization_tstz_in IN MONITORIZATION.DT_MONITORIZATION_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN MONITORIZATION.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN MONITORIZATION.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_cancel_tstz_in IN MONITORIZATION.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      id_patient_in IN MONITORIZATION.ID_PATIENT%TYPE DEFAULT NULL,
      create_user_in IN MONITORIZATION.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN MONITORIZATION.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN MONITORIZATION.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN MONITORIZATION.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN MONITORIZATION.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN MONITORIZATION.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_status_prev_in IN MONITORIZATION.FLG_STATUS_PREV%TYPE DEFAULT NULL,
      id_co_sign_order_in IN MONITORIZATION.ID_CO_SIGN_ORDER%TYPE DEFAULT NULL,
      id_co_sign_cancel_in IN MONITORIZATION.ID_CO_SIGN_CANCEL%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );


   -- Insert a row based on a record.
   -- Specify whether or not a primary key value should be generated.
   PROCEDURE ins (
      rec_in IN MONITORIZATION%ROWTYPE
     ,gen_pky_in IN BOOLEAN DEFAULT FALSE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rec_in IN MONITORIZATION%ROWTYPE
     ,gen_pky_in IN BOOLEAN DEFAULT FALSE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Insert a collection of rows using FORALL; all primary key values
   -- must have already been generated, or are handled in triggers.
   PROCEDURE ins (
      rows_in IN MONITORIZATION_tc
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rows_in IN MONITORIZATION_tc
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Return next primary key value using the named sequence.
     FUNCTION next_key (sequence_in IN VARCHAR2 := NULL) RETURN MONITORIZATION.ID_MONITORIZATION%TYPE;

   -- Insert one row, generating hidden primary key using a sequence
   PROCEDURE ins (
      id_episode_in IN MONITORIZATION.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN MONITORIZATION.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      notes_in IN MONITORIZATION.NOTES%TYPE DEFAULT NULL,
      flg_time_in IN MONITORIZATION.FLG_TIME%TYPE DEFAULT NULL,
      interval_in IN MONITORIZATION.INTERVAL%TYPE DEFAULT NULL,
      flg_status_in IN MONITORIZATION.FLG_STATUS%TYPE DEFAULT NULL,
      id_prof_cancel_in IN MONITORIZATION.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN MONITORIZATION.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_episode_origin_in IN MONITORIZATION.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN MONITORIZATION.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      id_prev_episode_in IN MONITORIZATION.ID_PREV_EPISODE%TYPE DEFAULT NULL,
      dt_monitorization_tstz_in IN MONITORIZATION.DT_MONITORIZATION_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN MONITORIZATION.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN MONITORIZATION.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_cancel_tstz_in IN MONITORIZATION.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      id_patient_in IN MONITORIZATION.ID_PATIENT%TYPE DEFAULT NULL,
      create_user_in IN MONITORIZATION.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN MONITORIZATION.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN MONITORIZATION.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN MONITORIZATION.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN MONITORIZATION.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN MONITORIZATION.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_status_prev_in IN MONITORIZATION.FLG_STATUS_PREV%TYPE DEFAULT NULL,
      id_co_sign_order_in IN MONITORIZATION.ID_CO_SIGN_ORDER%TYPE DEFAULT NULL,
      id_co_sign_cancel_in IN MONITORIZATION.ID_CO_SIGN_CANCEL%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_episode_in IN MONITORIZATION.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN MONITORIZATION.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      notes_in IN MONITORIZATION.NOTES%TYPE DEFAULT NULL,
      flg_time_in IN MONITORIZATION.FLG_TIME%TYPE DEFAULT NULL,
      interval_in IN MONITORIZATION.INTERVAL%TYPE DEFAULT NULL,
      flg_status_in IN MONITORIZATION.FLG_STATUS%TYPE DEFAULT NULL,
      id_prof_cancel_in IN MONITORIZATION.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN MONITORIZATION.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_episode_origin_in IN MONITORIZATION.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN MONITORIZATION.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      id_prev_episode_in IN MONITORIZATION.ID_PREV_EPISODE%TYPE DEFAULT NULL,
      dt_monitorization_tstz_in IN MONITORIZATION.DT_MONITORIZATION_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN MONITORIZATION.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN MONITORIZATION.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_cancel_tstz_in IN MONITORIZATION.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      id_patient_in IN MONITORIZATION.ID_PATIENT%TYPE DEFAULT NULL,
      create_user_in IN MONITORIZATION.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN MONITORIZATION.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN MONITORIZATION.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN MONITORIZATION.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN MONITORIZATION.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN MONITORIZATION.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_status_prev_in IN MONITORIZATION.FLG_STATUS_PREV%TYPE DEFAULT NULL,
      id_co_sign_order_in IN MONITORIZATION.ID_CO_SIGN_ORDER%TYPE DEFAULT NULL,
      id_co_sign_cancel_in IN MONITORIZATION.ID_CO_SIGN_CANCEL%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );

   -- Insert one row, returning primary key generated by sequence
   PROCEDURE ins (
      id_episode_in IN MONITORIZATION.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN MONITORIZATION.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      notes_in IN MONITORIZATION.NOTES%TYPE DEFAULT NULL,
      flg_time_in IN MONITORIZATION.FLG_TIME%TYPE DEFAULT NULL,
      interval_in IN MONITORIZATION.INTERVAL%TYPE DEFAULT NULL,
      flg_status_in IN MONITORIZATION.FLG_STATUS%TYPE DEFAULT NULL,
      id_prof_cancel_in IN MONITORIZATION.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN MONITORIZATION.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_episode_origin_in IN MONITORIZATION.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN MONITORIZATION.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      id_prev_episode_in IN MONITORIZATION.ID_PREV_EPISODE%TYPE DEFAULT NULL,
      dt_monitorization_tstz_in IN MONITORIZATION.DT_MONITORIZATION_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN MONITORIZATION.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN MONITORIZATION.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_cancel_tstz_in IN MONITORIZATION.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      id_patient_in IN MONITORIZATION.ID_PATIENT%TYPE DEFAULT NULL,
      create_user_in IN MONITORIZATION.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN MONITORIZATION.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN MONITORIZATION.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN MONITORIZATION.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN MONITORIZATION.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN MONITORIZATION.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_status_prev_in IN MONITORIZATION.FLG_STATUS_PREV%TYPE DEFAULT NULL,
      id_co_sign_order_in IN MONITORIZATION.ID_CO_SIGN_ORDER%TYPE DEFAULT NULL,
      id_co_sign_cancel_in IN MONITORIZATION.ID_CO_SIGN_CANCEL%TYPE DEFAULT NULL,
      id_monitorization_out IN OUT MONITORIZATION.ID_MONITORIZATION%TYPE
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_episode_in IN MONITORIZATION.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN MONITORIZATION.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      notes_in IN MONITORIZATION.NOTES%TYPE DEFAULT NULL,
      flg_time_in IN MONITORIZATION.FLG_TIME%TYPE DEFAULT NULL,
      interval_in IN MONITORIZATION.INTERVAL%TYPE DEFAULT NULL,
      flg_status_in IN MONITORIZATION.FLG_STATUS%TYPE DEFAULT NULL,
      id_prof_cancel_in IN MONITORIZATION.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN MONITORIZATION.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_episode_origin_in IN MONITORIZATION.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN MONITORIZATION.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      id_prev_episode_in IN MONITORIZATION.ID_PREV_EPISODE%TYPE DEFAULT NULL,
      dt_monitorization_tstz_in IN MONITORIZATION.DT_MONITORIZATION_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN MONITORIZATION.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN MONITORIZATION.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_cancel_tstz_in IN MONITORIZATION.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      id_patient_in IN MONITORIZATION.ID_PATIENT%TYPE DEFAULT NULL,
      create_user_in IN MONITORIZATION.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN MONITORIZATION.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN MONITORIZATION.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN MONITORIZATION.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN MONITORIZATION.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN MONITORIZATION.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_status_prev_in IN MONITORIZATION.FLG_STATUS_PREV%TYPE DEFAULT NULL,
      id_co_sign_order_in IN MONITORIZATION.ID_CO_SIGN_ORDER%TYPE DEFAULT NULL,
      id_co_sign_cancel_in IN MONITORIZATION.ID_CO_SIGN_CANCEL%TYPE DEFAULT NULL,
      id_monitorization_out IN OUT MONITORIZATION.ID_MONITORIZATION%TYPE
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );

   -- Insert one row with function, return generated primary key
   FUNCTION ins (
      id_episode_in IN MONITORIZATION.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN MONITORIZATION.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      notes_in IN MONITORIZATION.NOTES%TYPE DEFAULT NULL,
      flg_time_in IN MONITORIZATION.FLG_TIME%TYPE DEFAULT NULL,
      interval_in IN MONITORIZATION.INTERVAL%TYPE DEFAULT NULL,
      flg_status_in IN MONITORIZATION.FLG_STATUS%TYPE DEFAULT NULL,
      id_prof_cancel_in IN MONITORIZATION.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN MONITORIZATION.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_episode_origin_in IN MONITORIZATION.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN MONITORIZATION.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      id_prev_episode_in IN MONITORIZATION.ID_PREV_EPISODE%TYPE DEFAULT NULL,
      dt_monitorization_tstz_in IN MONITORIZATION.DT_MONITORIZATION_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN MONITORIZATION.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN MONITORIZATION.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_cancel_tstz_in IN MONITORIZATION.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      id_patient_in IN MONITORIZATION.ID_PATIENT%TYPE DEFAULT NULL,
      create_user_in IN MONITORIZATION.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN MONITORIZATION.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN MONITORIZATION.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN MONITORIZATION.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN MONITORIZATION.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN MONITORIZATION.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_status_prev_in IN MONITORIZATION.FLG_STATUS_PREV%TYPE DEFAULT NULL,
      id_co_sign_order_in IN MONITORIZATION.ID_CO_SIGN_ORDER%TYPE DEFAULT NULL,
      id_co_sign_cancel_in IN MONITORIZATION.ID_CO_SIGN_CANCEL%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
      RETURN
         MONITORIZATION.ID_MONITORIZATION%TYPE
      ;

   FUNCTION ins (
      id_episode_in IN MONITORIZATION.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN MONITORIZATION.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      notes_in IN MONITORIZATION.NOTES%TYPE DEFAULT NULL,
      flg_time_in IN MONITORIZATION.FLG_TIME%TYPE DEFAULT NULL,
      interval_in IN MONITORIZATION.INTERVAL%TYPE DEFAULT NULL,
      flg_status_in IN MONITORIZATION.FLG_STATUS%TYPE DEFAULT NULL,
      id_prof_cancel_in IN MONITORIZATION.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN MONITORIZATION.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_episode_origin_in IN MONITORIZATION.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN MONITORIZATION.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      id_prev_episode_in IN MONITORIZATION.ID_PREV_EPISODE%TYPE DEFAULT NULL,
      dt_monitorization_tstz_in IN MONITORIZATION.DT_MONITORIZATION_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN MONITORIZATION.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN MONITORIZATION.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_cancel_tstz_in IN MONITORIZATION.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      id_patient_in IN MONITORIZATION.ID_PATIENT%TYPE DEFAULT NULL,
      create_user_in IN MONITORIZATION.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN MONITORIZATION.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN MONITORIZATION.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN MONITORIZATION.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN MONITORIZATION.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN MONITORIZATION.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_status_prev_in IN MONITORIZATION.FLG_STATUS_PREV%TYPE DEFAULT NULL,
      id_co_sign_order_in IN MONITORIZATION.ID_CO_SIGN_ORDER%TYPE DEFAULT NULL,
      id_co_sign_cancel_in IN MONITORIZATION.ID_CO_SIGN_CANCEL%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      )
      RETURN
         MONITORIZATION.ID_MONITORIZATION%TYPE
      ;

   -- Update any/all columns by primary key. If you pass NULL, then
   -- the current column value is set to itself. If you need a more
   -- selected UPDATE then use one of the onecol procedures below.

  PROCEDURE upd (
      id_monitorization_in IN MONITORIZATION.ID_MONITORIZATION%TYPE,
      id_episode_in IN MONITORIZATION.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      id_professional_in IN MONITORIZATION.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      ID_PROFESSIONAL_nin IN BOOLEAN := TRUE,
      notes_in IN MONITORIZATION.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      flg_time_in IN MONITORIZATION.FLG_TIME%TYPE DEFAULT NULL,
      FLG_TIME_nin IN BOOLEAN := TRUE,
      interval_in IN MONITORIZATION.INTERVAL%TYPE DEFAULT NULL,
      INTERVAL_nin IN BOOLEAN := TRUE,
      flg_status_in IN MONITORIZATION.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      id_prof_cancel_in IN MONITORIZATION.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      ID_PROF_CANCEL_nin IN BOOLEAN := TRUE,
      notes_cancel_in IN MONITORIZATION.NOTES_CANCEL%TYPE DEFAULT NULL,
      NOTES_CANCEL_nin IN BOOLEAN := TRUE,
      id_episode_origin_in IN MONITORIZATION.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      ID_EPISODE_ORIGIN_nin IN BOOLEAN := TRUE,
      id_episode_destination_in IN MONITORIZATION.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      ID_EPISODE_DESTINATION_nin IN BOOLEAN := TRUE,
      id_prev_episode_in IN MONITORIZATION.ID_PREV_EPISODE%TYPE DEFAULT NULL,
      ID_PREV_EPISODE_nin IN BOOLEAN := TRUE,
      dt_monitorization_tstz_in IN MONITORIZATION.DT_MONITORIZATION_TSTZ%TYPE DEFAULT NULL,
      DT_MONITORIZATION_TSTZ_nin IN BOOLEAN := TRUE,
      dt_begin_tstz_in IN MONITORIZATION.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      DT_BEGIN_TSTZ_nin IN BOOLEAN := TRUE,
      dt_end_tstz_in IN MONITORIZATION.DT_END_TSTZ%TYPE DEFAULT NULL,
      DT_END_TSTZ_nin IN BOOLEAN := TRUE,
      dt_cancel_tstz_in IN MONITORIZATION.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      DT_CANCEL_TSTZ_nin IN BOOLEAN := TRUE,
      id_patient_in IN MONITORIZATION.ID_PATIENT%TYPE DEFAULT NULL,
      ID_PATIENT_nin IN BOOLEAN := TRUE,
      create_user_in IN MONITORIZATION.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN MONITORIZATION.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN MONITORIZATION.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN MONITORIZATION.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN MONITORIZATION.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN MONITORIZATION.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      flg_status_prev_in IN MONITORIZATION.FLG_STATUS_PREV%TYPE DEFAULT NULL,
      FLG_STATUS_PREV_nin IN BOOLEAN := TRUE,
      id_co_sign_order_in IN MONITORIZATION.ID_CO_SIGN_ORDER%TYPE DEFAULT NULL,
      ID_CO_SIGN_ORDER_nin IN BOOLEAN := TRUE,
      id_co_sign_cancel_in IN MONITORIZATION.ID_CO_SIGN_CANCEL%TYPE DEFAULT NULL,
      ID_CO_SIGN_CANCEL_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


       PROCEDURE upd (
      id_monitorization_in IN MONITORIZATION.ID_MONITORIZATION%TYPE,
      id_episode_in IN MONITORIZATION.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      id_professional_in IN MONITORIZATION.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      ID_PROFESSIONAL_nin IN BOOLEAN := TRUE,
      notes_in IN MONITORIZATION.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      flg_time_in IN MONITORIZATION.FLG_TIME%TYPE DEFAULT NULL,
      FLG_TIME_nin IN BOOLEAN := TRUE,
      interval_in IN MONITORIZATION.INTERVAL%TYPE DEFAULT NULL,
      INTERVAL_nin IN BOOLEAN := TRUE,
      flg_status_in IN MONITORIZATION.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      id_prof_cancel_in IN MONITORIZATION.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      ID_PROF_CANCEL_nin IN BOOLEAN := TRUE,
      notes_cancel_in IN MONITORIZATION.NOTES_CANCEL%TYPE DEFAULT NULL,
      NOTES_CANCEL_nin IN BOOLEAN := TRUE,
      id_episode_origin_in IN MONITORIZATION.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      ID_EPISODE_ORIGIN_nin IN BOOLEAN := TRUE,
      id_episode_destination_in IN MONITORIZATION.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      ID_EPISODE_DESTINATION_nin IN BOOLEAN := TRUE,
      id_prev_episode_in IN MONITORIZATION.ID_PREV_EPISODE%TYPE DEFAULT NULL,
      ID_PREV_EPISODE_nin IN BOOLEAN := TRUE,
      dt_monitorization_tstz_in IN MONITORIZATION.DT_MONITORIZATION_TSTZ%TYPE DEFAULT NULL,
      DT_MONITORIZATION_TSTZ_nin IN BOOLEAN := TRUE,
      dt_begin_tstz_in IN MONITORIZATION.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      DT_BEGIN_TSTZ_nin IN BOOLEAN := TRUE,
      dt_end_tstz_in IN MONITORIZATION.DT_END_TSTZ%TYPE DEFAULT NULL,
      DT_END_TSTZ_nin IN BOOLEAN := TRUE,
      dt_cancel_tstz_in IN MONITORIZATION.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      DT_CANCEL_TSTZ_nin IN BOOLEAN := TRUE,
      id_patient_in IN MONITORIZATION.ID_PATIENT%TYPE DEFAULT NULL,
      ID_PATIENT_nin IN BOOLEAN := TRUE,
      create_user_in IN MONITORIZATION.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN MONITORIZATION.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN MONITORIZATION.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN MONITORIZATION.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN MONITORIZATION.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN MONITORIZATION.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      flg_status_prev_in IN MONITORIZATION.FLG_STATUS_PREV%TYPE DEFAULT NULL,
      FLG_STATUS_PREV_nin IN BOOLEAN := TRUE,
      id_co_sign_order_in IN MONITORIZATION.ID_CO_SIGN_ORDER%TYPE DEFAULT NULL,
      ID_CO_SIGN_ORDER_nin IN BOOLEAN := TRUE,
      id_co_sign_cancel_in IN MONITORIZATION.ID_CO_SIGN_CANCEL%TYPE DEFAULT NULL,
      ID_CO_SIGN_CANCEL_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
      );



      PROCEDURE upd (
      id_episode_in IN MONITORIZATION.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      id_professional_in IN MONITORIZATION.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      ID_PROFESSIONAL_nin IN BOOLEAN := TRUE,
      notes_in IN MONITORIZATION.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      flg_time_in IN MONITORIZATION.FLG_TIME%TYPE DEFAULT NULL,
      FLG_TIME_nin IN BOOLEAN := TRUE,
      interval_in IN MONITORIZATION.INTERVAL%TYPE DEFAULT NULL,
      INTERVAL_nin IN BOOLEAN := TRUE,
      flg_status_in IN MONITORIZATION.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      id_prof_cancel_in IN MONITORIZATION.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      ID_PROF_CANCEL_nin IN BOOLEAN := TRUE,
      notes_cancel_in IN MONITORIZATION.NOTES_CANCEL%TYPE DEFAULT NULL,
      NOTES_CANCEL_nin IN BOOLEAN := TRUE,
      id_episode_origin_in IN MONITORIZATION.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      ID_EPISODE_ORIGIN_nin IN BOOLEAN := TRUE,
      id_episode_destination_in IN MONITORIZATION.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      ID_EPISODE_DESTINATION_nin IN BOOLEAN := TRUE,
      id_prev_episode_in IN MONITORIZATION.ID_PREV_EPISODE%TYPE DEFAULT NULL,
      ID_PREV_EPISODE_nin IN BOOLEAN := TRUE,
      dt_monitorization_tstz_in IN MONITORIZATION.DT_MONITORIZATION_TSTZ%TYPE DEFAULT NULL,
      DT_MONITORIZATION_TSTZ_nin IN BOOLEAN := TRUE,
      dt_begin_tstz_in IN MONITORIZATION.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      DT_BEGIN_TSTZ_nin IN BOOLEAN := TRUE,
      dt_end_tstz_in IN MONITORIZATION.DT_END_TSTZ%TYPE DEFAULT NULL,
      DT_END_TSTZ_nin IN BOOLEAN := TRUE,
      dt_cancel_tstz_in IN MONITORIZATION.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      DT_CANCEL_TSTZ_nin IN BOOLEAN := TRUE,
      id_patient_in IN MONITORIZATION.ID_PATIENT%TYPE DEFAULT NULL,
      ID_PATIENT_nin IN BOOLEAN := TRUE,
      create_user_in IN MONITORIZATION.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN MONITORIZATION.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN MONITORIZATION.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN MONITORIZATION.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN MONITORIZATION.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN MONITORIZATION.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      flg_status_prev_in IN MONITORIZATION.FLG_STATUS_PREV%TYPE DEFAULT NULL,
      FLG_STATUS_PREV_nin IN BOOLEAN := TRUE,
      id_co_sign_order_in IN MONITORIZATION.ID_CO_SIGN_ORDER%TYPE DEFAULT NULL,
      ID_CO_SIGN_ORDER_nin IN BOOLEAN := TRUE,
      id_co_sign_cancel_in IN MONITORIZATION.ID_CO_SIGN_CANCEL%TYPE DEFAULT NULL,
      ID_CO_SIGN_CANCEL_nin IN BOOLEAN := TRUE,
    where_in varchar2,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


      PROCEDURE upd (
      id_episode_in IN MONITORIZATION.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      id_professional_in IN MONITORIZATION.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      ID_PROFESSIONAL_nin IN BOOLEAN := TRUE,
      notes_in IN MONITORIZATION.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      flg_time_in IN MONITORIZATION.FLG_TIME%TYPE DEFAULT NULL,
      FLG_TIME_nin IN BOOLEAN := TRUE,
      interval_in IN MONITORIZATION.INTERVAL%TYPE DEFAULT NULL,
      INTERVAL_nin IN BOOLEAN := TRUE,
      flg_status_in IN MONITORIZATION.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      id_prof_cancel_in IN MONITORIZATION.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      ID_PROF_CANCEL_nin IN BOOLEAN := TRUE,
      notes_cancel_in IN MONITORIZATION.NOTES_CANCEL%TYPE DEFAULT NULL,
      NOTES_CANCEL_nin IN BOOLEAN := TRUE,
      id_episode_origin_in IN MONITORIZATION.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      ID_EPISODE_ORIGIN_nin IN BOOLEAN := TRUE,
      id_episode_destination_in IN MONITORIZATION.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      ID_EPISODE_DESTINATION_nin IN BOOLEAN := TRUE,
      id_prev_episode_in IN MONITORIZATION.ID_PREV_EPISODE%TYPE DEFAULT NULL,
      ID_PREV_EPISODE_nin IN BOOLEAN := TRUE,
      dt_monitorization_tstz_in IN MONITORIZATION.DT_MONITORIZATION_TSTZ%TYPE DEFAULT NULL,
      DT_MONITORIZATION_TSTZ_nin IN BOOLEAN := TRUE,
      dt_begin_tstz_in IN MONITORIZATION.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      DT_BEGIN_TSTZ_nin IN BOOLEAN := TRUE,
      dt_end_tstz_in IN MONITORIZATION.DT_END_TSTZ%TYPE DEFAULT NULL,
      DT_END_TSTZ_nin IN BOOLEAN := TRUE,
      dt_cancel_tstz_in IN MONITORIZATION.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      DT_CANCEL_TSTZ_nin IN BOOLEAN := TRUE,
      id_patient_in IN MONITORIZATION.ID_PATIENT%TYPE DEFAULT NULL,
      ID_PATIENT_nin IN BOOLEAN := TRUE,
      create_user_in IN MONITORIZATION.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN MONITORIZATION.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN MONITORIZATION.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN MONITORIZATION.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN MONITORIZATION.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN MONITORIZATION.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      flg_status_prev_in IN MONITORIZATION.FLG_STATUS_PREV%TYPE DEFAULT NULL,
      FLG_STATUS_PREV_nin IN BOOLEAN := TRUE,
      id_co_sign_order_in IN MONITORIZATION.ID_CO_SIGN_ORDER%TYPE DEFAULT NULL,
      ID_CO_SIGN_ORDER_nin IN BOOLEAN := TRUE,
      id_co_sign_cancel_in IN MONITORIZATION.ID_CO_SIGN_CANCEL%TYPE DEFAULT NULL,
      ID_CO_SIGN_CANCEL_nin IN BOOLEAN := TRUE,
    where_in varchar2,
     handle_error_in IN BOOLEAN := TRUE
      );



   PROCEDURE upd_ins (
      id_monitorization_in IN MONITORIZATION.ID_MONITORIZATION%TYPE,
      id_episode_in IN MONITORIZATION.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN MONITORIZATION.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      notes_in IN MONITORIZATION.NOTES%TYPE DEFAULT NULL,
      flg_time_in IN MONITORIZATION.FLG_TIME%TYPE DEFAULT NULL,
      interval_in IN MONITORIZATION.INTERVAL%TYPE DEFAULT NULL,
      flg_status_in IN MONITORIZATION.FLG_STATUS%TYPE DEFAULT NULL,
      id_prof_cancel_in IN MONITORIZATION.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN MONITORIZATION.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_episode_origin_in IN MONITORIZATION.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN MONITORIZATION.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      id_prev_episode_in IN MONITORIZATION.ID_PREV_EPISODE%TYPE DEFAULT NULL,
      dt_monitorization_tstz_in IN MONITORIZATION.DT_MONITORIZATION_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN MONITORIZATION.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN MONITORIZATION.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_cancel_tstz_in IN MONITORIZATION.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      id_patient_in IN MONITORIZATION.ID_PATIENT%TYPE DEFAULT NULL,
      create_user_in IN MONITORIZATION.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN MONITORIZATION.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN MONITORIZATION.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN MONITORIZATION.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN MONITORIZATION.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN MONITORIZATION.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_status_prev_in IN MONITORIZATION.FLG_STATUS_PREV%TYPE DEFAULT NULL,
      id_co_sign_order_in IN MONITORIZATION.ID_CO_SIGN_ORDER%TYPE DEFAULT NULL,
      id_co_sign_cancel_in IN MONITORIZATION.ID_CO_SIGN_CANCEL%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

      PROCEDURE upd_ins (
      id_monitorization_in IN MONITORIZATION.ID_MONITORIZATION%TYPE,
      id_episode_in IN MONITORIZATION.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN MONITORIZATION.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      notes_in IN MONITORIZATION.NOTES%TYPE DEFAULT NULL,
      flg_time_in IN MONITORIZATION.FLG_TIME%TYPE DEFAULT NULL,
      interval_in IN MONITORIZATION.INTERVAL%TYPE DEFAULT NULL,
      flg_status_in IN MONITORIZATION.FLG_STATUS%TYPE DEFAULT NULL,
      id_prof_cancel_in IN MONITORIZATION.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN MONITORIZATION.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_episode_origin_in IN MONITORIZATION.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN MONITORIZATION.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      id_prev_episode_in IN MONITORIZATION.ID_PREV_EPISODE%TYPE DEFAULT NULL,
      dt_monitorization_tstz_in IN MONITORIZATION.DT_MONITORIZATION_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN MONITORIZATION.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN MONITORIZATION.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_cancel_tstz_in IN MONITORIZATION.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      id_patient_in IN MONITORIZATION.ID_PATIENT%TYPE DEFAULT NULL,
      create_user_in IN MONITORIZATION.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN MONITORIZATION.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN MONITORIZATION.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN MONITORIZATION.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN MONITORIZATION.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN MONITORIZATION.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_status_prev_in IN MONITORIZATION.FLG_STATUS_PREV%TYPE DEFAULT NULL,
      id_co_sign_order_in IN MONITORIZATION.ID_CO_SIGN_ORDER%TYPE DEFAULT NULL,
      id_co_sign_cancel_in IN MONITORIZATION.ID_CO_SIGN_CANCEL%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
      );

   PROCEDURE upd (
      rec_in IN MONITORIZATION%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      rec_in IN MONITORIZATION%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
      );

      PROCEDURE upd (
      col_in IN MONITORIZATION_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      col_in IN MONITORIZATION_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
      );





   -- Use Native Dynamic SQL increment a single NUMBER column
   -- for all rows specified by the dynamic WHERE clause
   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
   );









    -- Delete one row by primary key
   PROCEDURE del (
      id_monitorization_in IN MONITORIZATION.ID_MONITORIZATION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

-- Delete one row by primary key
   PROCEDURE del (
      id_monitorization_in IN MONITORIZATION.ID_MONITORIZATION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


   -- Delete all rows for primary key column ID_MONITORIZATION
   PROCEDURE del_ID_MONITORIZATION (
      id_monitorization_in IN MONITORIZATION.ID_MONITORIZATION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_MONITORIZATION
   PROCEDURE del_ID_MONITORIZATION (
      id_monitorization_in IN MONITORIZATION.ID_MONITORIZATION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );

   -- Delete all rows for this MON_PAT_FK foreign key value
   PROCEDURE del_MON_PAT_FK (
      id_patient_in IN MONITORIZATION.ID_PATIENT%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this MON_PAT_FK foreign key value
   PROCEDURE del_MON_PAT_FK (
      id_patient_in IN MONITORIZATION.ID_PATIENT%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this MONT_CSC_FK foreign key value
   PROCEDURE del_MONT_CSC_FK (
      id_co_sign_cancel_in IN MONITORIZATION.ID_CO_SIGN_CANCEL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this MONT_CSC_FK foreign key value
   PROCEDURE del_MONT_CSC_FK (
      id_co_sign_cancel_in IN MONITORIZATION.ID_CO_SIGN_CANCEL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this MONT_CSO_FK foreign key value
   PROCEDURE del_MONT_CSO_FK (
      id_co_sign_order_in IN MONITORIZATION.ID_CO_SIGN_ORDER%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this MONT_CSO_FK foreign key value
   PROCEDURE del_MONT_CSO_FK (
      id_co_sign_order_in IN MONITORIZATION.ID_CO_SIGN_ORDER%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this MONT_EPIS_DEST_FK foreign key value
   PROCEDURE del_MONT_EPIS_DEST_FK (
      id_episode_destination_in IN MONITORIZATION.ID_EPISODE_DESTINATION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this MONT_EPIS_DEST_FK foreign key value
   PROCEDURE del_MONT_EPIS_DEST_FK (
      id_episode_destination_in IN MONITORIZATION.ID_EPISODE_DESTINATION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this MONT_EPIS_FK foreign key value
   PROCEDURE del_MONT_EPIS_FK (
      id_episode_in IN MONITORIZATION.ID_EPISODE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this MONT_EPIS_FK foreign key value
   PROCEDURE del_MONT_EPIS_FK (
      id_episode_in IN MONITORIZATION.ID_EPISODE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this MONT_EPIS_FK1 foreign key value
   PROCEDURE del_MONT_EPIS_FK1 (
      id_prev_episode_in IN MONITORIZATION.ID_PREV_EPISODE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this MONT_EPIS_FK1 foreign key value
   PROCEDURE del_MONT_EPIS_FK1 (
      id_prev_episode_in IN MONITORIZATION.ID_PREV_EPISODE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this MONT_EPIS_ORIGIN_FK foreign key value
   PROCEDURE del_MONT_EPIS_ORIGIN_FK (
      id_episode_origin_in IN MONITORIZATION.ID_EPISODE_ORIGIN%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this MONT_EPIS_ORIGIN_FK foreign key value
   PROCEDURE del_MONT_EPIS_ORIGIN_FK (
      id_episode_origin_in IN MONITORIZATION.ID_EPISODE_ORIGIN%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this MONT_PROF_CANCEL_FK foreign key value
   PROCEDURE del_MONT_PROF_CANCEL_FK (
      id_prof_cancel_in IN MONITORIZATION.ID_PROF_CANCEL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this MONT_PROF_CANCEL_FK foreign key value
   PROCEDURE del_MONT_PROF_CANCEL_FK (
      id_prof_cancel_in IN MONITORIZATION.ID_PROF_CANCEL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this MONT_PROF_FK foreign key value
   PROCEDURE del_MONT_PROF_FK (
      id_professional_in IN MONITORIZATION.ID_PROFESSIONAL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this MONT_PROF_FK foreign key value
   PROCEDURE del_MONT_PROF_FK (
      id_professional_in IN MONITORIZATION.ID_PROFESSIONAL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );


      -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Initialize a record with default values for columns in the table.
   PROCEDURE initrec (
      monitorization_inout IN OUT MONITORIZATION%ROWTYPE
   );

   FUNCTION initrec RETURN MONITORIZATION%ROWTYPE;



   FUNCTION get_data_rowid(
        rows_in IN TABLE_VARCHAR
        ) RETURN MONITORIZATION_tc;


   FUNCTION get_data_rowid_pat(
        rows_in IN TABLE_VARCHAR
        ) RETURN MONITORIZATION_tc;

END TS_MONITORIZATION;
/
