/*-- Last Change Revision: $Rev: 2029178 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:50:14 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE ts_epis_report_disclosure
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Abril 19, 2011 11:6:40
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on "EPIS_REPORT_DISCLOSURE"
    TYPE epis_report_disclosure_tc IS TABLE OF epis_report_disclosure%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE epis_report_disclosure_ntt IS TABLE OF epis_report_disclosure%ROWTYPE;
    TYPE epis_report_disclosure_vat IS VARRAY(100) OF epis_report_disclosure%ROWTYPE;

    -- Same type structure, with a static name.
    TYPE aat IS TABLE OF epis_report_disclosure%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE ntt IS TABLE OF epis_report_disclosure%ROWTYPE;
    TYPE vat IS VARRAY(100) OF epis_report_disclosure%ROWTYPE;

    -- Column Collection based on column "ID_EPIS_REPORT"
    TYPE id_epis_report_cc IS TABLE OF epis_report_disclosure.id_epis_report%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_REGISTER"
    TYPE dt_register_cc IS TABLE OF epis_report_disclosure.dt_register%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROF_DISCLOSURE"
    TYPE id_prof_disclosure_cc IS TABLE OF epis_report_disclosure.id_prof_disclosure%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_REQUEST"
    TYPE dt_request_cc IS TABLE OF epis_report_disclosure.dt_request%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_DISCLOSURE"
    TYPE dt_disclosure_cc IS TABLE OF epis_report_disclosure.dt_disclosure%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DISCLOSURE_RECIPIENT"
    TYPE disclosure_recipient_cc IS TABLE OF epis_report_disclosure.disclosure_recipient%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "RECIPIENT_ADDRESS"
    TYPE recipient_address_cc IS TABLE OF epis_report_disclosure.recipient_address%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_SAMPLE_TEXT"
    TYPE id_sample_text_cc IS TABLE OF epis_report_disclosure.id_sample_text%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FREE_TEXT_PURP_DISC"
    TYPE free_text_purp_disc_cc IS TABLE OF epis_report_disclosure.free_text_purp_disc%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "NOTES"
    TYPE notes_cc IS TABLE OF epis_report_disclosure.notes%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_USER"
    TYPE create_user_cc IS TABLE OF epis_report_disclosure.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_TIME"
    TYPE create_time_cc IS TABLE OF epis_report_disclosure.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_INSTITUTION"
    TYPE create_institution_cc IS TABLE OF epis_report_disclosure.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_USER"
    TYPE update_user_cc IS TABLE OF epis_report_disclosure.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_TIME"
    TYPE update_time_cc IS TABLE OF epis_report_disclosure.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_INSTITUTION"
    TYPE update_institution_cc IS TABLE OF epis_report_disclosure.update_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_DISC_RECIPIENT"
    TYPE flg_disc_recipient_cc IS TABLE OF epis_report_disclosure.flg_disc_recipient%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present
    PROCEDURE ins
    (
        id_epis_report_in       IN epis_report_disclosure.id_epis_report%TYPE,
        dt_register_in          IN epis_report_disclosure.dt_register%TYPE DEFAULT NULL,
        id_prof_disclosure_in   IN epis_report_disclosure.id_prof_disclosure%TYPE DEFAULT NULL,
        dt_request_in           IN epis_report_disclosure.dt_request%TYPE DEFAULT NULL,
        dt_disclosure_in        IN epis_report_disclosure.dt_disclosure%TYPE DEFAULT NULL,
        disclosure_recipient_in IN epis_report_disclosure.disclosure_recipient%TYPE DEFAULT NULL,
        recipient_address_in    IN epis_report_disclosure.recipient_address%TYPE DEFAULT NULL,
        id_sample_text_in       IN epis_report_disclosure.id_sample_text%TYPE DEFAULT NULL,
        free_text_purp_disc_in  IN epis_report_disclosure.free_text_purp_disc%TYPE DEFAULT NULL,
        notes_in                IN epis_report_disclosure.notes%TYPE DEFAULT NULL,
        create_user_in          IN epis_report_disclosure.create_user%TYPE DEFAULT NULL,
        create_time_in          IN epis_report_disclosure.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN epis_report_disclosure.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN epis_report_disclosure.update_user%TYPE DEFAULT NULL,
        update_time_in          IN epis_report_disclosure.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN epis_report_disclosure.update_institution%TYPE DEFAULT NULL,
        flg_disc_recipient_in   IN epis_report_disclosure.flg_disc_recipient%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_epis_report_in       IN epis_report_disclosure.id_epis_report%TYPE,
        dt_register_in          IN epis_report_disclosure.dt_register%TYPE DEFAULT NULL,
        id_prof_disclosure_in   IN epis_report_disclosure.id_prof_disclosure%TYPE DEFAULT NULL,
        dt_request_in           IN epis_report_disclosure.dt_request%TYPE DEFAULT NULL,
        dt_disclosure_in        IN epis_report_disclosure.dt_disclosure%TYPE DEFAULT NULL,
        disclosure_recipient_in IN epis_report_disclosure.disclosure_recipient%TYPE DEFAULT NULL,
        recipient_address_in    IN epis_report_disclosure.recipient_address%TYPE DEFAULT NULL,
        id_sample_text_in       IN epis_report_disclosure.id_sample_text%TYPE DEFAULT NULL,
        free_text_purp_disc_in  IN epis_report_disclosure.free_text_purp_disc%TYPE DEFAULT NULL,
        notes_in                IN epis_report_disclosure.notes%TYPE DEFAULT NULL,
        create_user_in          IN epis_report_disclosure.create_user%TYPE DEFAULT NULL,
        create_time_in          IN epis_report_disclosure.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN epis_report_disclosure.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN epis_report_disclosure.update_user%TYPE DEFAULT NULL,
        update_time_in          IN epis_report_disclosure.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN epis_report_disclosure.update_institution%TYPE DEFAULT NULL,
        flg_disc_recipient_in   IN epis_report_disclosure.flg_disc_recipient%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record.
    PROCEDURE ins
    (
        rec_in          IN epis_report_disclosure%ROWTYPE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rec_in          IN epis_report_disclosure%ROWTYPE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers.
    PROCEDURE ins
    (
        rows_in         IN epis_report_disclosure_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rows_in         IN epis_report_disclosure_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.

    PROCEDURE upd
    (
        id_epis_report_in        IN epis_report_disclosure.id_epis_report%TYPE,
        dt_register_in           IN epis_report_disclosure.dt_register%TYPE DEFAULT NULL,
        dt_register_nin          IN BOOLEAN := TRUE,
        id_prof_disclosure_in    IN epis_report_disclosure.id_prof_disclosure%TYPE DEFAULT NULL,
        id_prof_disclosure_nin   IN BOOLEAN := TRUE,
        dt_request_in            IN epis_report_disclosure.dt_request%TYPE DEFAULT NULL,
        dt_request_nin           IN BOOLEAN := TRUE,
        dt_disclosure_in         IN epis_report_disclosure.dt_disclosure%TYPE DEFAULT NULL,
        dt_disclosure_nin        IN BOOLEAN := TRUE,
        disclosure_recipient_in  IN epis_report_disclosure.disclosure_recipient%TYPE DEFAULT NULL,
        disclosure_recipient_nin IN BOOLEAN := TRUE,
        recipient_address_in     IN epis_report_disclosure.recipient_address%TYPE DEFAULT NULL,
        recipient_address_nin    IN BOOLEAN := TRUE,
        id_sample_text_in        IN epis_report_disclosure.id_sample_text%TYPE DEFAULT NULL,
        id_sample_text_nin       IN BOOLEAN := TRUE,
        free_text_purp_disc_in   IN epis_report_disclosure.free_text_purp_disc%TYPE DEFAULT NULL,
        free_text_purp_disc_nin  IN BOOLEAN := TRUE,
        notes_in                 IN epis_report_disclosure.notes%TYPE DEFAULT NULL,
        notes_nin                IN BOOLEAN := TRUE,
        create_user_in           IN epis_report_disclosure.create_user%TYPE DEFAULT NULL,
        create_user_nin          IN BOOLEAN := TRUE,
        create_time_in           IN epis_report_disclosure.create_time%TYPE DEFAULT NULL,
        create_time_nin          IN BOOLEAN := TRUE,
        create_institution_in    IN epis_report_disclosure.create_institution%TYPE DEFAULT NULL,
        create_institution_nin   IN BOOLEAN := TRUE,
        update_user_in           IN epis_report_disclosure.update_user%TYPE DEFAULT NULL,
        update_user_nin          IN BOOLEAN := TRUE,
        update_time_in           IN epis_report_disclosure.update_time%TYPE DEFAULT NULL,
        update_time_nin          IN BOOLEAN := TRUE,
        update_institution_in    IN epis_report_disclosure.update_institution%TYPE DEFAULT NULL,
        update_institution_nin   IN BOOLEAN := TRUE,
        flg_disc_recipient_in    IN epis_report_disclosure.flg_disc_recipient%TYPE DEFAULT NULL,
        flg_disc_recipient_nin   IN BOOLEAN := TRUE,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_epis_report_in        IN epis_report_disclosure.id_epis_report%TYPE,
        dt_register_in           IN epis_report_disclosure.dt_register%TYPE DEFAULT NULL,
        dt_register_nin          IN BOOLEAN := TRUE,
        id_prof_disclosure_in    IN epis_report_disclosure.id_prof_disclosure%TYPE DEFAULT NULL,
        id_prof_disclosure_nin   IN BOOLEAN := TRUE,
        dt_request_in            IN epis_report_disclosure.dt_request%TYPE DEFAULT NULL,
        dt_request_nin           IN BOOLEAN := TRUE,
        dt_disclosure_in         IN epis_report_disclosure.dt_disclosure%TYPE DEFAULT NULL,
        dt_disclosure_nin        IN BOOLEAN := TRUE,
        disclosure_recipient_in  IN epis_report_disclosure.disclosure_recipient%TYPE DEFAULT NULL,
        disclosure_recipient_nin IN BOOLEAN := TRUE,
        recipient_address_in     IN epis_report_disclosure.recipient_address%TYPE DEFAULT NULL,
        recipient_address_nin    IN BOOLEAN := TRUE,
        id_sample_text_in        IN epis_report_disclosure.id_sample_text%TYPE DEFAULT NULL,
        id_sample_text_nin       IN BOOLEAN := TRUE,
        free_text_purp_disc_in   IN epis_report_disclosure.free_text_purp_disc%TYPE DEFAULT NULL,
        free_text_purp_disc_nin  IN BOOLEAN := TRUE,
        notes_in                 IN epis_report_disclosure.notes%TYPE DEFAULT NULL,
        notes_nin                IN BOOLEAN := TRUE,
        create_user_in           IN epis_report_disclosure.create_user%TYPE DEFAULT NULL,
        create_user_nin          IN BOOLEAN := TRUE,
        create_time_in           IN epis_report_disclosure.create_time%TYPE DEFAULT NULL,
        create_time_nin          IN BOOLEAN := TRUE,
        create_institution_in    IN epis_report_disclosure.create_institution%TYPE DEFAULT NULL,
        create_institution_nin   IN BOOLEAN := TRUE,
        update_user_in           IN epis_report_disclosure.update_user%TYPE DEFAULT NULL,
        update_user_nin          IN BOOLEAN := TRUE,
        update_time_in           IN epis_report_disclosure.update_time%TYPE DEFAULT NULL,
        update_time_nin          IN BOOLEAN := TRUE,
        update_institution_in    IN epis_report_disclosure.update_institution%TYPE DEFAULT NULL,
        update_institution_nin   IN BOOLEAN := TRUE,
        flg_disc_recipient_in    IN epis_report_disclosure.flg_disc_recipient%TYPE DEFAULT NULL,
        flg_disc_recipient_nin   IN BOOLEAN := TRUE,
        handle_error_in          IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        dt_register_in           IN epis_report_disclosure.dt_register%TYPE DEFAULT NULL,
        dt_register_nin          IN BOOLEAN := TRUE,
        id_prof_disclosure_in    IN epis_report_disclosure.id_prof_disclosure%TYPE DEFAULT NULL,
        id_prof_disclosure_nin   IN BOOLEAN := TRUE,
        dt_request_in            IN epis_report_disclosure.dt_request%TYPE DEFAULT NULL,
        dt_request_nin           IN BOOLEAN := TRUE,
        dt_disclosure_in         IN epis_report_disclosure.dt_disclosure%TYPE DEFAULT NULL,
        dt_disclosure_nin        IN BOOLEAN := TRUE,
        disclosure_recipient_in  IN epis_report_disclosure.disclosure_recipient%TYPE DEFAULT NULL,
        disclosure_recipient_nin IN BOOLEAN := TRUE,
        recipient_address_in     IN epis_report_disclosure.recipient_address%TYPE DEFAULT NULL,
        recipient_address_nin    IN BOOLEAN := TRUE,
        id_sample_text_in        IN epis_report_disclosure.id_sample_text%TYPE DEFAULT NULL,
        id_sample_text_nin       IN BOOLEAN := TRUE,
        free_text_purp_disc_in   IN epis_report_disclosure.free_text_purp_disc%TYPE DEFAULT NULL,
        free_text_purp_disc_nin  IN BOOLEAN := TRUE,
        notes_in                 IN epis_report_disclosure.notes%TYPE DEFAULT NULL,
        notes_nin                IN BOOLEAN := TRUE,
        create_user_in           IN epis_report_disclosure.create_user%TYPE DEFAULT NULL,
        create_user_nin          IN BOOLEAN := TRUE,
        create_time_in           IN epis_report_disclosure.create_time%TYPE DEFAULT NULL,
        create_time_nin          IN BOOLEAN := TRUE,
        create_institution_in    IN epis_report_disclosure.create_institution%TYPE DEFAULT NULL,
        create_institution_nin   IN BOOLEAN := TRUE,
        update_user_in           IN epis_report_disclosure.update_user%TYPE DEFAULT NULL,
        update_user_nin          IN BOOLEAN := TRUE,
        update_time_in           IN epis_report_disclosure.update_time%TYPE DEFAULT NULL,
        update_time_nin          IN BOOLEAN := TRUE,
        update_institution_in    IN epis_report_disclosure.update_institution%TYPE DEFAULT NULL,
        update_institution_nin   IN BOOLEAN := TRUE,
        flg_disc_recipient_in    IN epis_report_disclosure.flg_disc_recipient%TYPE DEFAULT NULL,
        flg_disc_recipient_nin   IN BOOLEAN := TRUE,
        where_in                 VARCHAR2 DEFAULT NULL,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 IN OUT table_varchar
    );

    PROCEDURE upd
    (
        dt_register_in           IN epis_report_disclosure.dt_register%TYPE DEFAULT NULL,
        dt_register_nin          IN BOOLEAN := TRUE,
        id_prof_disclosure_in    IN epis_report_disclosure.id_prof_disclosure%TYPE DEFAULT NULL,
        id_prof_disclosure_nin   IN BOOLEAN := TRUE,
        dt_request_in            IN epis_report_disclosure.dt_request%TYPE DEFAULT NULL,
        dt_request_nin           IN BOOLEAN := TRUE,
        dt_disclosure_in         IN epis_report_disclosure.dt_disclosure%TYPE DEFAULT NULL,
        dt_disclosure_nin        IN BOOLEAN := TRUE,
        disclosure_recipient_in  IN epis_report_disclosure.disclosure_recipient%TYPE DEFAULT NULL,
        disclosure_recipient_nin IN BOOLEAN := TRUE,
        recipient_address_in     IN epis_report_disclosure.recipient_address%TYPE DEFAULT NULL,
        recipient_address_nin    IN BOOLEAN := TRUE,
        id_sample_text_in        IN epis_report_disclosure.id_sample_text%TYPE DEFAULT NULL,
        id_sample_text_nin       IN BOOLEAN := TRUE,
        free_text_purp_disc_in   IN epis_report_disclosure.free_text_purp_disc%TYPE DEFAULT NULL,
        free_text_purp_disc_nin  IN BOOLEAN := TRUE,
        notes_in                 IN epis_report_disclosure.notes%TYPE DEFAULT NULL,
        notes_nin                IN BOOLEAN := TRUE,
        create_user_in           IN epis_report_disclosure.create_user%TYPE DEFAULT NULL,
        create_user_nin          IN BOOLEAN := TRUE,
        create_time_in           IN epis_report_disclosure.create_time%TYPE DEFAULT NULL,
        create_time_nin          IN BOOLEAN := TRUE,
        create_institution_in    IN epis_report_disclosure.create_institution%TYPE DEFAULT NULL,
        create_institution_nin   IN BOOLEAN := TRUE,
        update_user_in           IN epis_report_disclosure.update_user%TYPE DEFAULT NULL,
        update_user_nin          IN BOOLEAN := TRUE,
        update_time_in           IN epis_report_disclosure.update_time%TYPE DEFAULT NULL,
        update_time_nin          IN BOOLEAN := TRUE,
        update_institution_in    IN epis_report_disclosure.update_institution%TYPE DEFAULT NULL,
        update_institution_nin   IN BOOLEAN := TRUE,
        flg_disc_recipient_in    IN epis_report_disclosure.flg_disc_recipient%TYPE DEFAULT NULL,
        flg_disc_recipient_nin   IN BOOLEAN := TRUE,
        where_in                 VARCHAR2 DEFAULT NULL,
        handle_error_in          IN BOOLEAN := TRUE
    );

    PROCEDURE upd_ins
    (
        id_epis_report_in       IN epis_report_disclosure.id_epis_report%TYPE,
        dt_register_in          IN epis_report_disclosure.dt_register%TYPE DEFAULT NULL,
        id_prof_disclosure_in   IN epis_report_disclosure.id_prof_disclosure%TYPE DEFAULT NULL,
        dt_request_in           IN epis_report_disclosure.dt_request%TYPE DEFAULT NULL,
        dt_disclosure_in        IN epis_report_disclosure.dt_disclosure%TYPE DEFAULT NULL,
        disclosure_recipient_in IN epis_report_disclosure.disclosure_recipient%TYPE DEFAULT NULL,
        recipient_address_in    IN epis_report_disclosure.recipient_address%TYPE DEFAULT NULL,
        id_sample_text_in       IN epis_report_disclosure.id_sample_text%TYPE DEFAULT NULL,
        free_text_purp_disc_in  IN epis_report_disclosure.free_text_purp_disc%TYPE DEFAULT NULL,
        notes_in                IN epis_report_disclosure.notes%TYPE DEFAULT NULL,
        create_user_in          IN epis_report_disclosure.create_user%TYPE DEFAULT NULL,
        create_time_in          IN epis_report_disclosure.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN epis_report_disclosure.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN epis_report_disclosure.update_user%TYPE DEFAULT NULL,
        update_time_in          IN epis_report_disclosure.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN epis_report_disclosure.update_institution%TYPE DEFAULT NULL,
        flg_disc_recipient_in   IN epis_report_disclosure.flg_disc_recipient%TYPE DEFAULT NULL,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    );

    PROCEDURE upd_ins
    (
        id_epis_report_in       IN epis_report_disclosure.id_epis_report%TYPE,
        dt_register_in          IN epis_report_disclosure.dt_register%TYPE DEFAULT NULL,
        id_prof_disclosure_in   IN epis_report_disclosure.id_prof_disclosure%TYPE DEFAULT NULL,
        dt_request_in           IN epis_report_disclosure.dt_request%TYPE DEFAULT NULL,
        dt_disclosure_in        IN epis_report_disclosure.dt_disclosure%TYPE DEFAULT NULL,
        disclosure_recipient_in IN epis_report_disclosure.disclosure_recipient%TYPE DEFAULT NULL,
        recipient_address_in    IN epis_report_disclosure.recipient_address%TYPE DEFAULT NULL,
        id_sample_text_in       IN epis_report_disclosure.id_sample_text%TYPE DEFAULT NULL,
        free_text_purp_disc_in  IN epis_report_disclosure.free_text_purp_disc%TYPE DEFAULT NULL,
        notes_in                IN epis_report_disclosure.notes%TYPE DEFAULT NULL,
        create_user_in          IN epis_report_disclosure.create_user%TYPE DEFAULT NULL,
        create_time_in          IN epis_report_disclosure.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN epis_report_disclosure.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN epis_report_disclosure.update_user%TYPE DEFAULT NULL,
        update_time_in          IN epis_report_disclosure.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN epis_report_disclosure.update_institution%TYPE DEFAULT NULL,
        flg_disc_recipient_in   IN epis_report_disclosure.flg_disc_recipient%TYPE DEFAULT NULL,
        handle_error_in         IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        rec_in          IN epis_report_disclosure%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    PROCEDURE upd
    (
        rec_in          IN epis_report_disclosure%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        col_in            IN epis_report_disclosure_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    PROCEDURE upd
    (
        col_in            IN epis_report_disclosure_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_epis_report_in IN epis_report_disclosure.id_epis_report%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_epis_report_in IN epis_report_disclosure.id_epis_report%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows for primary key column ID_EPIS_REPORT
    PROCEDURE del_id_epis_report
    (
        id_epis_report_in IN epis_report_disclosure.id_epis_report%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_EPIS_REPORT
    PROCEDURE del_id_epis_report
    (
        id_epis_report_in IN epis_report_disclosure.id_epis_report%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows for this ERDISCL_ER_FK foreign key value
    PROCEDURE del_erdiscl_er_fk
    (
        id_epis_report_in IN epis_report_disclosure.id_epis_report%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Delete all rows for this ERDISCL_ER_FK foreign key value
    PROCEDURE del_erdiscl_er_fk
    (
        id_epis_report_in IN epis_report_disclosure.id_epis_report%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows for this ERDISCL_PROF_FK foreign key value
    PROCEDURE del_erdiscl_prof_fk
    (
        id_prof_disclosure_in IN epis_report_disclosure.id_prof_disclosure%TYPE,
        handle_error_in       IN BOOLEAN := TRUE
    );

    -- Delete all rows for this ERDISCL_PROF_FK foreign key value
    PROCEDURE del_erdiscl_prof_fk
    (
        id_prof_disclosure_in IN epis_report_disclosure.id_prof_disclosure%TYPE,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    );

    -- Delete all rows for this ERDISCL_SAMP_TEXT_FK foreign key value
    PROCEDURE del_erdiscl_samp_text_fk
    (
        id_sample_text_in IN epis_report_disclosure.id_sample_text%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Delete all rows for this ERDISCL_SAMP_TEXT_FK foreign key value
    PROCEDURE del_erdiscl_samp_text_fk
    (
        id_sample_text_in IN epis_report_disclosure.id_sample_text%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(epis_report_disclosure_inout IN OUT epis_report_disclosure%ROWTYPE);

    FUNCTION initrec RETURN epis_report_disclosure%ROWTYPE;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN epis_report_disclosure_tc;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN epis_report_disclosure_tc;

END ts_epis_report_disclosure;
/
