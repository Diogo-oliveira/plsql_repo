/*-- Last Change Revision: $Rev: 2029162 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:50:08 +0100 (ter, 02 ago 2022) $*/
CREATE OR REPLACE PACKAGE ts_epis_mtos_param
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2018-01-26 10:50:19
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on epis_mtos_param
    TYPE epis_mtos_param_tc IS TABLE OF epis_mtos_param%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE epis_mtos_param_ntt IS TABLE OF epis_mtos_param%ROWTYPE;
    TYPE epis_mtos_param_vat IS VARRAY(100) OF epis_mtos_param%ROWTYPE;

    -- Column Collection based on column ID_EPIS_MTOS_PARAM
    TYPE id_epis_mtos_param_cc IS TABLE OF epis_mtos_param.id_epis_mtos_param%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_MTOS_PARAM
    TYPE id_mtos_param_cc IS TABLE OF epis_mtos_param.id_mtos_param%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_EPIS_MTOS_SCORE
    TYPE id_epis_mtos_score_cc IS TABLE OF epis_mtos_param.id_epis_mtos_score%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_VITAL_SIGN_READ
    TYPE id_vital_sign_read_cc IS TABLE OF epis_mtos_param.id_vital_sign_read%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_PROF_CREATE
    TYPE id_prof_create_cc IS TABLE OF epis_mtos_param.id_prof_create%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column DT_CREATE
    TYPE dt_create_cc IS TABLE OF epis_mtos_param.dt_create%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_USER
    TYPE create_user_cc IS TABLE OF epis_mtos_param.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_TIME
    TYPE create_time_cc IS TABLE OF epis_mtos_param.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_INSTITUTION
    TYPE create_institution_cc IS TABLE OF epis_mtos_param.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_USER
    TYPE update_user_cc IS TABLE OF epis_mtos_param.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_TIME
    TYPE update_time_cc IS TABLE OF epis_mtos_param.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_INSTITUTION
    TYPE update_institution_cc IS TABLE OF epis_mtos_param.update_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column REGISTERED_VALUE
    TYPE registered_value_cc IS TABLE OF epis_mtos_param.registered_value%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column EXTRA_SCORE
    TYPE extra_score_cc IS TABLE OF epis_mtos_param.extra_score%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column FLG_PARAM_TASK_TYPE
    TYPE flg_param_task_type_cc IS TABLE OF epis_mtos_param.flg_param_task_type%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_TASK_REFID
    TYPE id_task_refid_cc IS TABLE OF epis_mtos_param.id_task_refid%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column NOTES
    TYPE notes_cc IS TABLE OF epis_mtos_param.notes%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present (with rows_out)
    PROCEDURE ins
    (
        id_epis_mtos_param_in  IN epis_mtos_param.id_epis_mtos_param%TYPE,
        id_mtos_param_in       IN epis_mtos_param.id_mtos_param%TYPE,
        id_epis_mtos_score_in  IN epis_mtos_param.id_epis_mtos_score%TYPE,
        id_vital_sign_read_in  IN epis_mtos_param.id_vital_sign_read%TYPE DEFAULT NULL,
        id_prof_create_in      IN epis_mtos_param.id_prof_create%TYPE DEFAULT NULL,
        dt_create_in           IN epis_mtos_param.dt_create%TYPE DEFAULT NULL,
        create_user_in         IN epis_mtos_param.create_user%TYPE DEFAULT NULL,
        create_time_in         IN epis_mtos_param.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN epis_mtos_param.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN epis_mtos_param.update_user%TYPE DEFAULT NULL,
        update_time_in         IN epis_mtos_param.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN epis_mtos_param.update_institution%TYPE DEFAULT NULL,
        registered_value_in    IN epis_mtos_param.registered_value%TYPE DEFAULT NULL,
        extra_score_in         IN epis_mtos_param.extra_score%TYPE DEFAULT NULL,
        flg_param_task_type_in IN epis_mtos_param.flg_param_task_type%TYPE DEFAULT NULL,
        id_task_refid_in       IN epis_mtos_param.id_task_refid%TYPE DEFAULT NULL,
        notes_in               IN epis_mtos_param.notes%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    );

    -- Insert one row, providing primary key if present (without rows_out)
    PROCEDURE ins
    (
        id_epis_mtos_param_in  IN epis_mtos_param.id_epis_mtos_param%TYPE,
        id_mtos_param_in       IN epis_mtos_param.id_mtos_param%TYPE,
        id_epis_mtos_score_in  IN epis_mtos_param.id_epis_mtos_score%TYPE,
        id_vital_sign_read_in  IN epis_mtos_param.id_vital_sign_read%TYPE DEFAULT NULL,
        id_prof_create_in      IN epis_mtos_param.id_prof_create%TYPE DEFAULT NULL,
        dt_create_in           IN epis_mtos_param.dt_create%TYPE DEFAULT NULL,
        create_user_in         IN epis_mtos_param.create_user%TYPE DEFAULT NULL,
        create_time_in         IN epis_mtos_param.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN epis_mtos_param.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN epis_mtos_param.update_user%TYPE DEFAULT NULL,
        update_time_in         IN epis_mtos_param.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN epis_mtos_param.update_institution%TYPE DEFAULT NULL,
        registered_value_in    IN epis_mtos_param.registered_value%TYPE DEFAULT NULL,
        extra_score_in         IN epis_mtos_param.extra_score%TYPE DEFAULT NULL,
        flg_param_task_type_in IN epis_mtos_param.flg_param_task_type%TYPE DEFAULT NULL,
        id_task_refid_in       IN epis_mtos_param.id_task_refid%TYPE DEFAULT NULL,
        notes_in               IN epis_mtos_param.notes%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN epis_mtos_param%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN epis_mtos_param%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN epis_mtos_param_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN epis_mtos_param_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_epis_mtos_param_in   IN epis_mtos_param.id_epis_mtos_param%TYPE,
        id_mtos_param_in        IN epis_mtos_param.id_mtos_param%TYPE,
        id_epis_mtos_score_in   IN epis_mtos_param.id_epis_mtos_score%TYPE,
        id_vital_sign_read_in   IN epis_mtos_param.id_vital_sign_read%TYPE DEFAULT NULL,
        id_vital_sign_read_nin  IN BOOLEAN := TRUE,
        id_prof_create_in       IN epis_mtos_param.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin      IN BOOLEAN := TRUE,
        dt_create_in            IN epis_mtos_param.dt_create%TYPE DEFAULT NULL,
        dt_create_nin           IN BOOLEAN := TRUE,
        create_user_in          IN epis_mtos_param.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN epis_mtos_param.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN epis_mtos_param.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN epis_mtos_param.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN epis_mtos_param.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN epis_mtos_param.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        registered_value_in     IN epis_mtos_param.registered_value%TYPE DEFAULT NULL,
        registered_value_nin    IN BOOLEAN := TRUE,
        extra_score_in          IN epis_mtos_param.extra_score%TYPE DEFAULT NULL,
        extra_score_nin         IN BOOLEAN := TRUE,
        flg_param_task_type_in  IN epis_mtos_param.flg_param_task_type%TYPE DEFAULT NULL,
        flg_param_task_type_nin IN BOOLEAN := TRUE,
        id_task_refid_in        IN epis_mtos_param.id_task_refid%TYPE DEFAULT NULL,
        id_task_refid_nin       IN BOOLEAN := TRUE,
        notes_in                IN epis_mtos_param.notes%TYPE DEFAULT NULL,
        notes_nin               IN BOOLEAN := TRUE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                IN OUT table_varchar
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_epis_mtos_param_in   IN epis_mtos_param.id_epis_mtos_param%TYPE,
        id_mtos_param_in        IN epis_mtos_param.id_mtos_param%TYPE,
        id_epis_mtos_score_in   IN epis_mtos_param.id_epis_mtos_score%TYPE,
        id_vital_sign_read_in   IN epis_mtos_param.id_vital_sign_read%TYPE DEFAULT NULL,
        id_vital_sign_read_nin  IN BOOLEAN := TRUE,
        id_prof_create_in       IN epis_mtos_param.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin      IN BOOLEAN := TRUE,
        dt_create_in            IN epis_mtos_param.dt_create%TYPE DEFAULT NULL,
        dt_create_nin           IN BOOLEAN := TRUE,
        create_user_in          IN epis_mtos_param.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN epis_mtos_param.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN epis_mtos_param.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN epis_mtos_param.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN epis_mtos_param.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN epis_mtos_param.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        registered_value_in     IN epis_mtos_param.registered_value%TYPE DEFAULT NULL,
        registered_value_nin    IN BOOLEAN := TRUE,
        extra_score_in          IN epis_mtos_param.extra_score%TYPE DEFAULT NULL,
        extra_score_nin         IN BOOLEAN := TRUE,
        flg_param_task_type_in  IN epis_mtos_param.flg_param_task_type%TYPE DEFAULT NULL,
        flg_param_task_type_nin IN BOOLEAN := TRUE,
        id_task_refid_in        IN epis_mtos_param.id_task_refid%TYPE DEFAULT NULL,
        id_task_refid_nin       IN BOOLEAN := TRUE,
        notes_in                IN epis_mtos_param.notes%TYPE DEFAULT NULL,
        notes_nin               IN BOOLEAN := TRUE,
        handle_error_in         IN BOOLEAN := TRUE
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_vital_sign_read_in   IN epis_mtos_param.id_vital_sign_read%TYPE DEFAULT NULL,
        id_vital_sign_read_nin  IN BOOLEAN := TRUE,
        id_prof_create_in       IN epis_mtos_param.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin      IN BOOLEAN := TRUE,
        dt_create_in            IN epis_mtos_param.dt_create%TYPE DEFAULT NULL,
        dt_create_nin           IN BOOLEAN := TRUE,
        create_user_in          IN epis_mtos_param.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN epis_mtos_param.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN epis_mtos_param.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN epis_mtos_param.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN epis_mtos_param.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN epis_mtos_param.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        registered_value_in     IN epis_mtos_param.registered_value%TYPE DEFAULT NULL,
        registered_value_nin    IN BOOLEAN := TRUE,
        extra_score_in          IN epis_mtos_param.extra_score%TYPE DEFAULT NULL,
        extra_score_nin         IN BOOLEAN := TRUE,
        flg_param_task_type_in  IN epis_mtos_param.flg_param_task_type%TYPE DEFAULT NULL,
        flg_param_task_type_nin IN BOOLEAN := TRUE,
        id_task_refid_in        IN epis_mtos_param.id_task_refid%TYPE DEFAULT NULL,
        id_task_refid_nin       IN BOOLEAN := TRUE,
        notes_in                IN epis_mtos_param.notes%TYPE DEFAULT NULL,
        notes_nin               IN BOOLEAN := TRUE,
        where_in                IN VARCHAR2,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                IN OUT table_varchar
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_vital_sign_read_in   IN epis_mtos_param.id_vital_sign_read%TYPE DEFAULT NULL,
        id_vital_sign_read_nin  IN BOOLEAN := TRUE,
        id_prof_create_in       IN epis_mtos_param.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin      IN BOOLEAN := TRUE,
        dt_create_in            IN epis_mtos_param.dt_create%TYPE DEFAULT NULL,
        dt_create_nin           IN BOOLEAN := TRUE,
        create_user_in          IN epis_mtos_param.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN epis_mtos_param.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN epis_mtos_param.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN epis_mtos_param.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN epis_mtos_param.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN epis_mtos_param.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        registered_value_in     IN epis_mtos_param.registered_value%TYPE DEFAULT NULL,
        registered_value_nin    IN BOOLEAN := TRUE,
        extra_score_in          IN epis_mtos_param.extra_score%TYPE DEFAULT NULL,
        extra_score_nin         IN BOOLEAN := TRUE,
        flg_param_task_type_in  IN epis_mtos_param.flg_param_task_type%TYPE DEFAULT NULL,
        flg_param_task_type_nin IN BOOLEAN := TRUE,
        id_task_refid_in        IN epis_mtos_param.id_task_refid%TYPE DEFAULT NULL,
        id_task_refid_nin       IN BOOLEAN := TRUE,
        notes_in                IN epis_mtos_param.notes%TYPE DEFAULT NULL,
        notes_nin               IN BOOLEAN := TRUE,
        where_in                IN VARCHAR2,
        handle_error_in         IN BOOLEAN := TRUE
    );

    --Update/insert with columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_epis_mtos_param_in  IN epis_mtos_param.id_epis_mtos_param%TYPE,
        id_mtos_param_in       IN epis_mtos_param.id_mtos_param%TYPE,
        id_epis_mtos_score_in  IN epis_mtos_param.id_epis_mtos_score%TYPE,
        id_vital_sign_read_in  IN epis_mtos_param.id_vital_sign_read%TYPE DEFAULT NULL,
        id_prof_create_in      IN epis_mtos_param.id_prof_create%TYPE DEFAULT NULL,
        dt_create_in           IN epis_mtos_param.dt_create%TYPE DEFAULT NULL,
        create_user_in         IN epis_mtos_param.create_user%TYPE DEFAULT NULL,
        create_time_in         IN epis_mtos_param.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN epis_mtos_param.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN epis_mtos_param.update_user%TYPE DEFAULT NULL,
        update_time_in         IN epis_mtos_param.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN epis_mtos_param.update_institution%TYPE DEFAULT NULL,
        registered_value_in    IN epis_mtos_param.registered_value%TYPE DEFAULT NULL,
        extra_score_in         IN epis_mtos_param.extra_score%TYPE DEFAULT NULL,
        flg_param_task_type_in IN epis_mtos_param.flg_param_task_type%TYPE DEFAULT NULL,
        id_task_refid_in       IN epis_mtos_param.id_task_refid%TYPE DEFAULT NULL,
        notes_in               IN epis_mtos_param.notes%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               IN OUT table_varchar
    );

    --Update/insert with columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_epis_mtos_param_in  IN epis_mtos_param.id_epis_mtos_param%TYPE,
        id_mtos_param_in       IN epis_mtos_param.id_mtos_param%TYPE,
        id_epis_mtos_score_in  IN epis_mtos_param.id_epis_mtos_score%TYPE,
        id_vital_sign_read_in  IN epis_mtos_param.id_vital_sign_read%TYPE DEFAULT NULL,
        id_prof_create_in      IN epis_mtos_param.id_prof_create%TYPE DEFAULT NULL,
        dt_create_in           IN epis_mtos_param.dt_create%TYPE DEFAULT NULL,
        create_user_in         IN epis_mtos_param.create_user%TYPE DEFAULT NULL,
        create_time_in         IN epis_mtos_param.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN epis_mtos_param.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN epis_mtos_param.update_user%TYPE DEFAULT NULL,
        update_time_in         IN epis_mtos_param.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN epis_mtos_param.update_institution%TYPE DEFAULT NULL,
        registered_value_in    IN epis_mtos_param.registered_value%TYPE DEFAULT NULL,
        extra_score_in         IN epis_mtos_param.extra_score%TYPE DEFAULT NULL,
        flg_param_task_type_in IN epis_mtos_param.flg_param_task_type%TYPE DEFAULT NULL,
        id_task_refid_in       IN epis_mtos_param.id_task_refid%TYPE DEFAULT NULL,
        notes_in               IN epis_mtos_param.notes%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE
    );

    --Update record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN epis_mtos_param%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    --Update record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN epis_mtos_param%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    --Update collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN epis_mtos_param_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    --Update collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN epis_mtos_param_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    --increment column value
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_epis_mtos_param_in IN epis_mtos_param.id_epis_mtos_param%TYPE,
        id_mtos_param_in      IN epis_mtos_param.id_mtos_param%TYPE,
        id_epis_mtos_score_in IN epis_mtos_param.id_epis_mtos_score%TYPE,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_epis_mtos_param_in IN epis_mtos_param.id_epis_mtos_param%TYPE,
        id_mtos_param_in      IN epis_mtos_param.id_mtos_param%TYPE,
        id_epis_mtos_score_in IN epis_mtos_param.id_epis_mtos_score%TYPE,
        handle_error_in       IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EMP_EMS_FK foreign key value
    PROCEDURE del_emp_ems_fk
    (
        id_epis_mtos_score_in IN epis_mtos_param.id_epis_mtos_score%TYPE,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    );

    -- Delete all rows for this EMP_MPM_FK foreign key value
    PROCEDURE del_emp_mpm_fk
    (
        id_mtos_param_in IN epis_mtos_param.id_mtos_param%TYPE,
        handle_error_in  IN BOOLEAN := TRUE,
        rows_out         OUT table_varchar
    );

    -- Delete all rows for this EMP_PFR_FK foreign key value
    PROCEDURE del_emp_pfr_fk
    (
        id_prof_create_in IN epis_mtos_param.id_prof_create%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows for this EMP_VSR_FK foreign key value
    PROCEDURE del_emp_vsr_fk
    (
        id_vital_sign_read_in IN epis_mtos_param.id_vital_sign_read%TYPE,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    );

    -- Delete all rows for this EMP_EMS_FK foreign key value
    PROCEDURE del_emp_ems_fk
    (
        id_epis_mtos_score_in IN epis_mtos_param.id_epis_mtos_score%TYPE,
        handle_error_in       IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EMP_MPM_FK foreign key value
    PROCEDURE del_emp_mpm_fk
    (
        id_mtos_param_in IN epis_mtos_param.id_mtos_param%TYPE,
        handle_error_in  IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EMP_PFR_FK foreign key value
    PROCEDURE del_emp_pfr_fk
    (
        id_prof_create_in IN epis_mtos_param.id_prof_create%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EMP_VSR_FK foreign key value
    PROCEDURE del_emp_vsr_fk
    (
        id_vital_sign_read_in IN epis_mtos_param.id_vital_sign_read%TYPE,
        handle_error_in       IN BOOLEAN := TRUE
    );

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(epis_mtos_param_inout IN OUT epis_mtos_param%ROWTYPE);

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN epis_mtos_param%ROWTYPE;

    -- Get data rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN epis_mtos_param_tc;

    -- Get data rowid pragma autonomous transaccion
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN epis_mtos_param_tc;

END ts_epis_mtos_param;
/
