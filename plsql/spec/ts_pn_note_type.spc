/*-- Last Change Revision: $Rev: 1738197 $*/
/*-- Last Change by: $Author: vanessa.barsottelli $*/
/*-- Date of last change: $Date: 2016-05-19 12:02:03 +0100 (qui, 19 mai 2016) $*/
CREATE OR REPLACE PACKAGE ts_pn_note_type
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Maio 2, 2016 17:24:57
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on "PN_NOTE_TYPE"
    TYPE pn_note_type_tc IS TABLE OF pn_note_type%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE pn_note_type_ntt IS TABLE OF pn_note_type%ROWTYPE;
    TYPE pn_note_type_vat IS VARRAY(100) OF pn_note_type%ROWTYPE;

    -- Same type structure, with a static name.
    TYPE aat IS TABLE OF pn_note_type%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE ntt IS TABLE OF pn_note_type%ROWTYPE;
    TYPE vat IS VARRAY(100) OF pn_note_type%ROWTYPE;

    -- Column Collection based on column "ID_PN_NOTE_TYPE"
    TYPE id_pn_note_type_cc IS TABLE OF pn_note_type.id_pn_note_type%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "INTERNAL_NAME"
    TYPE internal_name_cc IS TABLE OF pn_note_type.internal_name%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CODE_PN_NOTE_TYPE"
    TYPE code_pn_note_type_cc IS TABLE OF pn_note_type.code_pn_note_type%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CODE_SIGN_OFF_DESC"
    TYPE code_sign_off_desc_cc IS TABLE OF pn_note_type.code_sign_off_desc%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CODE_CANCEL_DESC"
    TYPE code_cancel_desc_cc IS TABLE OF pn_note_type.code_cancel_desc%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CODE_EDIT_DESC"
    TYPE code_edit_desc_cc IS TABLE OF pn_note_type.code_edit_desc%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CODE_ADD_ACTION"
    TYPE code_add_action_cc IS TABLE OF pn_note_type.code_add_action%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_USER"
    TYPE create_user_cc IS TABLE OF pn_note_type.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_TIME"
    TYPE create_time_cc IS TABLE OF pn_note_type.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_INSTITUTION"
    TYPE create_institution_cc IS TABLE OF pn_note_type.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_USER"
    TYPE update_user_cc IS TABLE OF pn_note_type.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_TIME"
    TYPE update_time_cc IS TABLE OF pn_note_type.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_INSTITUTION"
    TYPE update_institution_cc IS TABLE OF pn_note_type.update_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_VIEWER_TYPE"
    TYPE flg_viewer_type_cc IS TABLE OF pn_note_type.flg_viewer_type%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_TYPE"
    TYPE flg_type_cc IS TABLE OF pn_note_type.flg_type%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present
    PROCEDURE ins
    (
        id_pn_note_type_in    IN pn_note_type.id_pn_note_type%TYPE,
        internal_name_in      IN pn_note_type.internal_name%TYPE DEFAULT NULL,
        code_pn_note_type_in  IN pn_note_type.code_pn_note_type%TYPE DEFAULT NULL,
        code_sign_off_desc_in IN pn_note_type.code_sign_off_desc%TYPE DEFAULT NULL,
        code_cancel_desc_in   IN pn_note_type.code_cancel_desc%TYPE DEFAULT NULL,
        code_edit_desc_in     IN pn_note_type.code_edit_desc%TYPE DEFAULT NULL,
        code_add_action_in    IN pn_note_type.code_add_action%TYPE DEFAULT NULL,
        create_user_in        IN pn_note_type.create_user%TYPE DEFAULT NULL,
        create_time_in        IN pn_note_type.create_time%TYPE DEFAULT NULL,
        create_institution_in IN pn_note_type.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN pn_note_type.update_user%TYPE DEFAULT NULL,
        update_time_in        IN pn_note_type.update_time%TYPE DEFAULT NULL,
        update_institution_in IN pn_note_type.update_institution%TYPE DEFAULT NULL,
        flg_viewer_type_in    IN pn_note_type.flg_viewer_type%TYPE DEFAULT NULL,
        flg_type_in           IN pn_note_type.flg_type%TYPE DEFAULT 'S'
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_pn_note_type_in    IN pn_note_type.id_pn_note_type%TYPE,
        internal_name_in      IN pn_note_type.internal_name%TYPE DEFAULT NULL,
        code_pn_note_type_in  IN pn_note_type.code_pn_note_type%TYPE DEFAULT NULL,
        code_sign_off_desc_in IN pn_note_type.code_sign_off_desc%TYPE DEFAULT NULL,
        code_cancel_desc_in   IN pn_note_type.code_cancel_desc%TYPE DEFAULT NULL,
        code_edit_desc_in     IN pn_note_type.code_edit_desc%TYPE DEFAULT NULL,
        code_add_action_in    IN pn_note_type.code_add_action%TYPE DEFAULT NULL,
        create_user_in        IN pn_note_type.create_user%TYPE DEFAULT NULL,
        create_time_in        IN pn_note_type.create_time%TYPE DEFAULT NULL,
        create_institution_in IN pn_note_type.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN pn_note_type.update_user%TYPE DEFAULT NULL,
        update_time_in        IN pn_note_type.update_time%TYPE DEFAULT NULL,
        update_institution_in IN pn_note_type.update_institution%TYPE DEFAULT NULL,
        flg_viewer_type_in    IN pn_note_type.flg_viewer_type%TYPE DEFAULT NULL,
        flg_type_in           IN pn_note_type.flg_type%TYPE DEFAULT 'S'
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record.
    PROCEDURE ins
    (
        rec_in          IN pn_note_type%ROWTYPE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rec_in          IN pn_note_type%ROWTYPE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers.
    PROCEDURE ins
    (
        rows_in         IN pn_note_type_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rows_in         IN pn_note_type_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.

    PROCEDURE upd
    (
        id_pn_note_type_in     IN pn_note_type.id_pn_note_type%TYPE,
        internal_name_in       IN pn_note_type.internal_name%TYPE DEFAULT NULL,
        internal_name_nin      IN BOOLEAN := TRUE,
        code_pn_note_type_in   IN pn_note_type.code_pn_note_type%TYPE DEFAULT NULL,
        code_pn_note_type_nin  IN BOOLEAN := TRUE,
        code_sign_off_desc_in  IN pn_note_type.code_sign_off_desc%TYPE DEFAULT NULL,
        code_sign_off_desc_nin IN BOOLEAN := TRUE,
        code_cancel_desc_in    IN pn_note_type.code_cancel_desc%TYPE DEFAULT NULL,
        code_cancel_desc_nin   IN BOOLEAN := TRUE,
        code_edit_desc_in      IN pn_note_type.code_edit_desc%TYPE DEFAULT NULL,
        code_edit_desc_nin     IN BOOLEAN := TRUE,
        code_add_action_in     IN pn_note_type.code_add_action%TYPE DEFAULT NULL,
        code_add_action_nin    IN BOOLEAN := TRUE,
        create_user_in         IN pn_note_type.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN pn_note_type.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN pn_note_type.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN pn_note_type.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN pn_note_type.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN pn_note_type.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        flg_viewer_type_in     IN pn_note_type.flg_viewer_type%TYPE DEFAULT NULL,
        flg_viewer_type_nin    IN BOOLEAN := TRUE,
        flg_type_in            IN pn_note_type.flg_type%TYPE DEFAULT NULL,
        flg_type_nin           IN BOOLEAN := TRUE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_pn_note_type_in     IN pn_note_type.id_pn_note_type%TYPE,
        internal_name_in       IN pn_note_type.internal_name%TYPE DEFAULT NULL,
        internal_name_nin      IN BOOLEAN := TRUE,
        code_pn_note_type_in   IN pn_note_type.code_pn_note_type%TYPE DEFAULT NULL,
        code_pn_note_type_nin  IN BOOLEAN := TRUE,
        code_sign_off_desc_in  IN pn_note_type.code_sign_off_desc%TYPE DEFAULT NULL,
        code_sign_off_desc_nin IN BOOLEAN := TRUE,
        code_cancel_desc_in    IN pn_note_type.code_cancel_desc%TYPE DEFAULT NULL,
        code_cancel_desc_nin   IN BOOLEAN := TRUE,
        code_edit_desc_in      IN pn_note_type.code_edit_desc%TYPE DEFAULT NULL,
        code_edit_desc_nin     IN BOOLEAN := TRUE,
        code_add_action_in     IN pn_note_type.code_add_action%TYPE DEFAULT NULL,
        code_add_action_nin    IN BOOLEAN := TRUE,
        create_user_in         IN pn_note_type.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN pn_note_type.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN pn_note_type.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN pn_note_type.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN pn_note_type.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN pn_note_type.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        flg_viewer_type_in     IN pn_note_type.flg_viewer_type%TYPE DEFAULT NULL,
        flg_viewer_type_nin    IN BOOLEAN := TRUE,
        flg_type_in            IN pn_note_type.flg_type%TYPE DEFAULT NULL,
        flg_type_nin           IN BOOLEAN := TRUE,
        handle_error_in        IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        internal_name_in       IN pn_note_type.internal_name%TYPE DEFAULT NULL,
        internal_name_nin      IN BOOLEAN := TRUE,
        code_pn_note_type_in   IN pn_note_type.code_pn_note_type%TYPE DEFAULT NULL,
        code_pn_note_type_nin  IN BOOLEAN := TRUE,
        code_sign_off_desc_in  IN pn_note_type.code_sign_off_desc%TYPE DEFAULT NULL,
        code_sign_off_desc_nin IN BOOLEAN := TRUE,
        code_cancel_desc_in    IN pn_note_type.code_cancel_desc%TYPE DEFAULT NULL,
        code_cancel_desc_nin   IN BOOLEAN := TRUE,
        code_edit_desc_in      IN pn_note_type.code_edit_desc%TYPE DEFAULT NULL,
        code_edit_desc_nin     IN BOOLEAN := TRUE,
        code_add_action_in     IN pn_note_type.code_add_action%TYPE DEFAULT NULL,
        code_add_action_nin    IN BOOLEAN := TRUE,
        create_user_in         IN pn_note_type.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN pn_note_type.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN pn_note_type.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN pn_note_type.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN pn_note_type.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN pn_note_type.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        flg_viewer_type_in     IN pn_note_type.flg_viewer_type%TYPE DEFAULT NULL,
        flg_viewer_type_nin    IN BOOLEAN := TRUE,
        flg_type_in            IN pn_note_type.flg_type%TYPE DEFAULT NULL,
        flg_type_nin           IN BOOLEAN := TRUE,
        where_in               VARCHAR2,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               IN OUT table_varchar
    );

    PROCEDURE upd
    (
        internal_name_in       IN pn_note_type.internal_name%TYPE DEFAULT NULL,
        internal_name_nin      IN BOOLEAN := TRUE,
        code_pn_note_type_in   IN pn_note_type.code_pn_note_type%TYPE DEFAULT NULL,
        code_pn_note_type_nin  IN BOOLEAN := TRUE,
        code_sign_off_desc_in  IN pn_note_type.code_sign_off_desc%TYPE DEFAULT NULL,
        code_sign_off_desc_nin IN BOOLEAN := TRUE,
        code_cancel_desc_in    IN pn_note_type.code_cancel_desc%TYPE DEFAULT NULL,
        code_cancel_desc_nin   IN BOOLEAN := TRUE,
        code_edit_desc_in      IN pn_note_type.code_edit_desc%TYPE DEFAULT NULL,
        code_edit_desc_nin     IN BOOLEAN := TRUE,
        code_add_action_in     IN pn_note_type.code_add_action%TYPE DEFAULT NULL,
        code_add_action_nin    IN BOOLEAN := TRUE,
        create_user_in         IN pn_note_type.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN pn_note_type.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN pn_note_type.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN pn_note_type.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN pn_note_type.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN pn_note_type.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        flg_viewer_type_in     IN pn_note_type.flg_viewer_type%TYPE DEFAULT NULL,
        flg_viewer_type_nin    IN BOOLEAN := TRUE,
        flg_type_in            IN pn_note_type.flg_type%TYPE DEFAULT NULL,
        flg_type_nin           IN BOOLEAN := TRUE,
        where_in               VARCHAR2,
        handle_error_in        IN BOOLEAN := TRUE
    );

    PROCEDURE upd_ins
    (
        id_pn_note_type_in    IN pn_note_type.id_pn_note_type%TYPE,
        internal_name_in      IN pn_note_type.internal_name%TYPE DEFAULT NULL,
        code_pn_note_type_in  IN pn_note_type.code_pn_note_type%TYPE DEFAULT NULL,
        code_sign_off_desc_in IN pn_note_type.code_sign_off_desc%TYPE DEFAULT NULL,
        code_cancel_desc_in   IN pn_note_type.code_cancel_desc%TYPE DEFAULT NULL,
        code_edit_desc_in     IN pn_note_type.code_edit_desc%TYPE DEFAULT NULL,
        code_add_action_in    IN pn_note_type.code_add_action%TYPE DEFAULT NULL,
        create_user_in        IN pn_note_type.create_user%TYPE DEFAULT NULL,
        create_time_in        IN pn_note_type.create_time%TYPE DEFAULT NULL,
        create_institution_in IN pn_note_type.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN pn_note_type.update_user%TYPE DEFAULT NULL,
        update_time_in        IN pn_note_type.update_time%TYPE DEFAULT NULL,
        update_institution_in IN pn_note_type.update_institution%TYPE DEFAULT NULL,
        flg_viewer_type_in    IN pn_note_type.flg_viewer_type%TYPE DEFAULT NULL,
        flg_type_in           IN pn_note_type.flg_type%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    );

    PROCEDURE upd_ins
    (
        id_pn_note_type_in    IN pn_note_type.id_pn_note_type%TYPE,
        internal_name_in      IN pn_note_type.internal_name%TYPE DEFAULT NULL,
        code_pn_note_type_in  IN pn_note_type.code_pn_note_type%TYPE DEFAULT NULL,
        code_sign_off_desc_in IN pn_note_type.code_sign_off_desc%TYPE DEFAULT NULL,
        code_cancel_desc_in   IN pn_note_type.code_cancel_desc%TYPE DEFAULT NULL,
        code_edit_desc_in     IN pn_note_type.code_edit_desc%TYPE DEFAULT NULL,
        code_add_action_in    IN pn_note_type.code_add_action%TYPE DEFAULT NULL,
        create_user_in        IN pn_note_type.create_user%TYPE DEFAULT NULL,
        create_time_in        IN pn_note_type.create_time%TYPE DEFAULT NULL,
        create_institution_in IN pn_note_type.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN pn_note_type.update_user%TYPE DEFAULT NULL,
        update_time_in        IN pn_note_type.update_time%TYPE DEFAULT NULL,
        update_institution_in IN pn_note_type.update_institution%TYPE DEFAULT NULL,
        flg_viewer_type_in    IN pn_note_type.flg_viewer_type%TYPE DEFAULT NULL,
        flg_type_in           IN pn_note_type.flg_type%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        rec_in          IN pn_note_type%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    PROCEDURE upd
    (
        rec_in          IN pn_note_type%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        col_in            IN pn_note_type_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    PROCEDURE upd
    (
        col_in            IN pn_note_type_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_pn_note_type_in IN pn_note_type.id_pn_note_type%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_pn_note_type_in IN pn_note_type.id_pn_note_type%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    -- Delete all rows for primary key column ID_PN_NOTE_TYPE
    PROCEDURE del_id_pn_note_type
    (
        id_pn_note_type_in IN pn_note_type.id_pn_note_type%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_PN_NOTE_TYPE
    PROCEDURE del_id_pn_note_type
    (
        id_pn_note_type_in IN pn_note_type.id_pn_note_type%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(pn_note_type_inout IN OUT pn_note_type%ROWTYPE);

    FUNCTION initrec RETURN pn_note_type%ROWTYPE;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN pn_note_type_tc;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN pn_note_type_tc;

END ts_pn_note_type;
/
