/*-- Last Change Revision: $Rev: 451968 $*/
/*-- Last Change by: $Author: alexandre.santos $*/
/*-- Date of last change: $Date: 2010-03-25 15:09:59 +0000 (qui, 25 mar 2010) $*/

CREATE OR REPLACE PACKAGE ts_epis_complication
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Fevereiro 19, 2010 11:15:22
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on "EPIS_COMPLICATION"
    TYPE epis_complication_tc IS TABLE OF epis_complication%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE epis_complication_ntt IS TABLE OF epis_complication%ROWTYPE;
    TYPE epis_complication_vat IS VARRAY(100) OF epis_complication%ROWTYPE;

    -- Same type structure, with a static name.
    TYPE aat IS TABLE OF epis_complication%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE ntt IS TABLE OF epis_complication%ROWTYPE;
    TYPE vat IS VARRAY(100) OF epis_complication%ROWTYPE;

    -- Column Collection based on column "ID_EPIS_COMPLICATION"
    TYPE id_epis_complication_cc IS TABLE OF epis_complication.id_epis_complication%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_EPISODE"
    TYPE id_episode_cc IS TABLE OF epis_complication.id_episode%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_EPISODE_ORIGIN"
    TYPE id_episode_origin_cc IS TABLE OF epis_complication.id_episode_origin%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_COMPLICATION"
    TYPE id_complication_cc IS TABLE OF epis_complication.id_complication%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DESCRIPTION"
    TYPE description_cc IS TABLE OF epis_complication.description%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_VERIF_COMP"
    TYPE dt_verif_comp_cc IS TABLE OF epis_complication.dt_verif_comp%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_VERIF_REQ"
    TYPE dt_verif_req_cc IS TABLE OF epis_complication.dt_verif_req%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_CLIN_SERV_DEST"
    TYPE id_clin_serv_dest_cc IS TABLE OF epis_complication.id_clin_serv_dest%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_STATUS_COMP"
    TYPE flg_status_comp_cc IS TABLE OF epis_complication.flg_status_comp%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_STATUS_REQ"
    TYPE flg_status_req_cc IS TABLE OF epis_complication.flg_status_req%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "NOTES_COMP"
    TYPE notes_comp_cc IS TABLE OF epis_complication.notes_comp%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "NOTES_REQ"
    TYPE notes_req_cc IS TABLE OF epis_complication.notes_req%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_CANCEL_REASON"
    TYPE id_cancel_reason_cc IS TABLE OF epis_complication.id_cancel_reason%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "NOTES_CANCEL"
    TYPE notes_cancel_cc IS TABLE OF epis_complication.notes_cancel%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_REJECT_REASON"
    TYPE id_reject_reason_cc IS TABLE OF epis_complication.id_reject_reason%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "NOTES_REJECTED"
    TYPE notes_rejected_cc IS TABLE OF epis_complication.notes_rejected%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_EPIS_COMPLICATION"
    TYPE dt_epis_complication_cc IS TABLE OF epis_complication.dt_epis_complication%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROF_CREATE"
    TYPE id_prof_create_cc IS TABLE OF epis_complication.id_prof_create%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROF_CLIN_SERV"
    TYPE id_prof_clin_serv_cc IS TABLE OF epis_complication.id_prof_clin_serv%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_USER"
    TYPE create_user_cc IS TABLE OF epis_complication.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_TIME"
    TYPE create_time_cc IS TABLE OF epis_complication.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_INSTITUTION"
    TYPE create_institution_cc IS TABLE OF epis_complication.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_USER"
    TYPE update_user_cc IS TABLE OF epis_complication.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_TIME"
    TYPE update_time_cc IS TABLE OF epis_complication.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_INSTITUTION"
    TYPE update_institution_cc IS TABLE OF epis_complication.update_institution%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present
    PROCEDURE ins
    (
        id_epis_complication_in IN epis_complication.id_epis_complication%TYPE,
        id_episode_in           IN epis_complication.id_episode%TYPE DEFAULT NULL,
        id_episode_origin_in    IN epis_complication.id_episode_origin%TYPE DEFAULT NULL,
        id_complication_in      IN epis_complication.id_complication%TYPE DEFAULT NULL,
        description_in          IN epis_complication.description%TYPE DEFAULT NULL,
        dt_verif_comp_in        IN epis_complication.dt_verif_comp%TYPE DEFAULT NULL,
        dt_verif_req_in         IN epis_complication.dt_verif_req%TYPE DEFAULT NULL,
        id_clin_serv_dest_in    IN epis_complication.id_clin_serv_dest%TYPE DEFAULT NULL,
        flg_status_comp_in      IN epis_complication.flg_status_comp%TYPE DEFAULT NULL,
        flg_status_req_in       IN epis_complication.flg_status_req%TYPE DEFAULT NULL,
        notes_comp_in           IN epis_complication.notes_comp%TYPE DEFAULT NULL,
        notes_req_in            IN epis_complication.notes_req%TYPE DEFAULT NULL,
        id_cancel_reason_in     IN epis_complication.id_cancel_reason%TYPE DEFAULT NULL,
        notes_cancel_in         IN epis_complication.notes_cancel%TYPE DEFAULT NULL,
        id_reject_reason_in     IN epis_complication.id_reject_reason%TYPE DEFAULT NULL,
        notes_rejected_in       IN epis_complication.notes_rejected%TYPE DEFAULT NULL,
        dt_epis_complication_in IN epis_complication.dt_epis_complication%TYPE DEFAULT NULL,
        id_prof_create_in       IN epis_complication.id_prof_create%TYPE DEFAULT NULL,
        id_prof_clin_serv_in    IN epis_complication.id_prof_clin_serv%TYPE DEFAULT NULL,
        create_user_in          IN epis_complication.create_user%TYPE DEFAULT NULL,
        create_time_in          IN epis_complication.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN epis_complication.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN epis_complication.update_user%TYPE DEFAULT NULL,
        update_time_in          IN epis_complication.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN epis_complication.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_epis_complication_in IN epis_complication.id_epis_complication%TYPE,
        id_episode_in           IN epis_complication.id_episode%TYPE DEFAULT NULL,
        id_episode_origin_in    IN epis_complication.id_episode_origin%TYPE DEFAULT NULL,
        id_complication_in      IN epis_complication.id_complication%TYPE DEFAULT NULL,
        description_in          IN epis_complication.description%TYPE DEFAULT NULL,
        dt_verif_comp_in        IN epis_complication.dt_verif_comp%TYPE DEFAULT NULL,
        dt_verif_req_in         IN epis_complication.dt_verif_req%TYPE DEFAULT NULL,
        id_clin_serv_dest_in    IN epis_complication.id_clin_serv_dest%TYPE DEFAULT NULL,
        flg_status_comp_in      IN epis_complication.flg_status_comp%TYPE DEFAULT NULL,
        flg_status_req_in       IN epis_complication.flg_status_req%TYPE DEFAULT NULL,
        notes_comp_in           IN epis_complication.notes_comp%TYPE DEFAULT NULL,
        notes_req_in            IN epis_complication.notes_req%TYPE DEFAULT NULL,
        id_cancel_reason_in     IN epis_complication.id_cancel_reason%TYPE DEFAULT NULL,
        notes_cancel_in         IN epis_complication.notes_cancel%TYPE DEFAULT NULL,
        id_reject_reason_in     IN epis_complication.id_reject_reason%TYPE DEFAULT NULL,
        notes_rejected_in       IN epis_complication.notes_rejected%TYPE DEFAULT NULL,
        dt_epis_complication_in IN epis_complication.dt_epis_complication%TYPE DEFAULT NULL,
        id_prof_create_in       IN epis_complication.id_prof_create%TYPE DEFAULT NULL,
        id_prof_clin_serv_in    IN epis_complication.id_prof_clin_serv%TYPE DEFAULT NULL,
        create_user_in          IN epis_complication.create_user%TYPE DEFAULT NULL,
        create_time_in          IN epis_complication.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN epis_complication.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN epis_complication.update_user%TYPE DEFAULT NULL,
        update_time_in          IN epis_complication.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN epis_complication.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record.
    -- Specify whether or not a primary key value should be generated.
    PROCEDURE ins
    (
        rec_in          IN epis_complication%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rec_in          IN epis_complication%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers.
    PROCEDURE ins
    (
        rows_in         IN epis_complication_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rows_in         IN epis_complication_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Return next primary key value using the named sequence.
    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN epis_complication.id_epis_complication%TYPE;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_episode_in           IN epis_complication.id_episode%TYPE DEFAULT NULL,
        id_episode_origin_in    IN epis_complication.id_episode_origin%TYPE DEFAULT NULL,
        id_complication_in      IN epis_complication.id_complication%TYPE DEFAULT NULL,
        description_in          IN epis_complication.description%TYPE DEFAULT NULL,
        dt_verif_comp_in        IN epis_complication.dt_verif_comp%TYPE DEFAULT NULL,
        dt_verif_req_in         IN epis_complication.dt_verif_req%TYPE DEFAULT NULL,
        id_clin_serv_dest_in    IN epis_complication.id_clin_serv_dest%TYPE DEFAULT NULL,
        flg_status_comp_in      IN epis_complication.flg_status_comp%TYPE DEFAULT NULL,
        flg_status_req_in       IN epis_complication.flg_status_req%TYPE DEFAULT NULL,
        notes_comp_in           IN epis_complication.notes_comp%TYPE DEFAULT NULL,
        notes_req_in            IN epis_complication.notes_req%TYPE DEFAULT NULL,
        id_cancel_reason_in     IN epis_complication.id_cancel_reason%TYPE DEFAULT NULL,
        notes_cancel_in         IN epis_complication.notes_cancel%TYPE DEFAULT NULL,
        id_reject_reason_in     IN epis_complication.id_reject_reason%TYPE DEFAULT NULL,
        notes_rejected_in       IN epis_complication.notes_rejected%TYPE DEFAULT NULL,
        dt_epis_complication_in IN epis_complication.dt_epis_complication%TYPE DEFAULT NULL,
        id_prof_create_in       IN epis_complication.id_prof_create%TYPE DEFAULT NULL,
        id_prof_clin_serv_in    IN epis_complication.id_prof_clin_serv%TYPE DEFAULT NULL,
        create_user_in          IN epis_complication.create_user%TYPE DEFAULT NULL,
        create_time_in          IN epis_complication.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN epis_complication.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN epis_complication.update_user%TYPE DEFAULT NULL,
        update_time_in          IN epis_complication.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN epis_complication.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_episode_in           IN epis_complication.id_episode%TYPE DEFAULT NULL,
        id_episode_origin_in    IN epis_complication.id_episode_origin%TYPE DEFAULT NULL,
        id_complication_in      IN epis_complication.id_complication%TYPE DEFAULT NULL,
        description_in          IN epis_complication.description%TYPE DEFAULT NULL,
        dt_verif_comp_in        IN epis_complication.dt_verif_comp%TYPE DEFAULT NULL,
        dt_verif_req_in         IN epis_complication.dt_verif_req%TYPE DEFAULT NULL,
        id_clin_serv_dest_in    IN epis_complication.id_clin_serv_dest%TYPE DEFAULT NULL,
        flg_status_comp_in      IN epis_complication.flg_status_comp%TYPE DEFAULT NULL,
        flg_status_req_in       IN epis_complication.flg_status_req%TYPE DEFAULT NULL,
        notes_comp_in           IN epis_complication.notes_comp%TYPE DEFAULT NULL,
        notes_req_in            IN epis_complication.notes_req%TYPE DEFAULT NULL,
        id_cancel_reason_in     IN epis_complication.id_cancel_reason%TYPE DEFAULT NULL,
        notes_cancel_in         IN epis_complication.notes_cancel%TYPE DEFAULT NULL,
        id_reject_reason_in     IN epis_complication.id_reject_reason%TYPE DEFAULT NULL,
        notes_rejected_in       IN epis_complication.notes_rejected%TYPE DEFAULT NULL,
        dt_epis_complication_in IN epis_complication.dt_epis_complication%TYPE DEFAULT NULL,
        id_prof_create_in       IN epis_complication.id_prof_create%TYPE DEFAULT NULL,
        id_prof_clin_serv_in    IN epis_complication.id_prof_clin_serv%TYPE DEFAULT NULL,
        create_user_in          IN epis_complication.create_user%TYPE DEFAULT NULL,
        create_time_in          IN epis_complication.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN epis_complication.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN epis_complication.update_user%TYPE DEFAULT NULL,
        update_time_in          IN epis_complication.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN epis_complication.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_episode_in            IN epis_complication.id_episode%TYPE DEFAULT NULL,
        id_episode_origin_in     IN epis_complication.id_episode_origin%TYPE DEFAULT NULL,
        id_complication_in       IN epis_complication.id_complication%TYPE DEFAULT NULL,
        description_in           IN epis_complication.description%TYPE DEFAULT NULL,
        dt_verif_comp_in         IN epis_complication.dt_verif_comp%TYPE DEFAULT NULL,
        dt_verif_req_in          IN epis_complication.dt_verif_req%TYPE DEFAULT NULL,
        id_clin_serv_dest_in     IN epis_complication.id_clin_serv_dest%TYPE DEFAULT NULL,
        flg_status_comp_in       IN epis_complication.flg_status_comp%TYPE DEFAULT NULL,
        flg_status_req_in        IN epis_complication.flg_status_req%TYPE DEFAULT NULL,
        notes_comp_in            IN epis_complication.notes_comp%TYPE DEFAULT NULL,
        notes_req_in             IN epis_complication.notes_req%TYPE DEFAULT NULL,
        id_cancel_reason_in      IN epis_complication.id_cancel_reason%TYPE DEFAULT NULL,
        notes_cancel_in          IN epis_complication.notes_cancel%TYPE DEFAULT NULL,
        id_reject_reason_in      IN epis_complication.id_reject_reason%TYPE DEFAULT NULL,
        notes_rejected_in        IN epis_complication.notes_rejected%TYPE DEFAULT NULL,
        dt_epis_complication_in  IN epis_complication.dt_epis_complication%TYPE DEFAULT NULL,
        id_prof_create_in        IN epis_complication.id_prof_create%TYPE DEFAULT NULL,
        id_prof_clin_serv_in     IN epis_complication.id_prof_clin_serv%TYPE DEFAULT NULL,
        create_user_in           IN epis_complication.create_user%TYPE DEFAULT NULL,
        create_time_in           IN epis_complication.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN epis_complication.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN epis_complication.update_user%TYPE DEFAULT NULL,
        update_time_in           IN epis_complication.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN epis_complication.update_institution%TYPE DEFAULT NULL,
        id_epis_complication_out IN OUT epis_complication.id_epis_complication%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_episode_in            IN epis_complication.id_episode%TYPE DEFAULT NULL,
        id_episode_origin_in     IN epis_complication.id_episode_origin%TYPE DEFAULT NULL,
        id_complication_in       IN epis_complication.id_complication%TYPE DEFAULT NULL,
        description_in           IN epis_complication.description%TYPE DEFAULT NULL,
        dt_verif_comp_in         IN epis_complication.dt_verif_comp%TYPE DEFAULT NULL,
        dt_verif_req_in          IN epis_complication.dt_verif_req%TYPE DEFAULT NULL,
        id_clin_serv_dest_in     IN epis_complication.id_clin_serv_dest%TYPE DEFAULT NULL,
        flg_status_comp_in       IN epis_complication.flg_status_comp%TYPE DEFAULT NULL,
        flg_status_req_in        IN epis_complication.flg_status_req%TYPE DEFAULT NULL,
        notes_comp_in            IN epis_complication.notes_comp%TYPE DEFAULT NULL,
        notes_req_in             IN epis_complication.notes_req%TYPE DEFAULT NULL,
        id_cancel_reason_in      IN epis_complication.id_cancel_reason%TYPE DEFAULT NULL,
        notes_cancel_in          IN epis_complication.notes_cancel%TYPE DEFAULT NULL,
        id_reject_reason_in      IN epis_complication.id_reject_reason%TYPE DEFAULT NULL,
        notes_rejected_in        IN epis_complication.notes_rejected%TYPE DEFAULT NULL,
        dt_epis_complication_in  IN epis_complication.dt_epis_complication%TYPE DEFAULT NULL,
        id_prof_create_in        IN epis_complication.id_prof_create%TYPE DEFAULT NULL,
        id_prof_clin_serv_in     IN epis_complication.id_prof_clin_serv%TYPE DEFAULT NULL,
        create_user_in           IN epis_complication.create_user%TYPE DEFAULT NULL,
        create_time_in           IN epis_complication.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN epis_complication.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN epis_complication.update_user%TYPE DEFAULT NULL,
        update_time_in           IN epis_complication.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN epis_complication.update_institution%TYPE DEFAULT NULL,
        id_epis_complication_out IN OUT epis_complication.id_epis_complication%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_episode_in           IN epis_complication.id_episode%TYPE DEFAULT NULL,
        id_episode_origin_in    IN epis_complication.id_episode_origin%TYPE DEFAULT NULL,
        id_complication_in      IN epis_complication.id_complication%TYPE DEFAULT NULL,
        description_in          IN epis_complication.description%TYPE DEFAULT NULL,
        dt_verif_comp_in        IN epis_complication.dt_verif_comp%TYPE DEFAULT NULL,
        dt_verif_req_in         IN epis_complication.dt_verif_req%TYPE DEFAULT NULL,
        id_clin_serv_dest_in    IN epis_complication.id_clin_serv_dest%TYPE DEFAULT NULL,
        flg_status_comp_in      IN epis_complication.flg_status_comp%TYPE DEFAULT NULL,
        flg_status_req_in       IN epis_complication.flg_status_req%TYPE DEFAULT NULL,
        notes_comp_in           IN epis_complication.notes_comp%TYPE DEFAULT NULL,
        notes_req_in            IN epis_complication.notes_req%TYPE DEFAULT NULL,
        id_cancel_reason_in     IN epis_complication.id_cancel_reason%TYPE DEFAULT NULL,
        notes_cancel_in         IN epis_complication.notes_cancel%TYPE DEFAULT NULL,
        id_reject_reason_in     IN epis_complication.id_reject_reason%TYPE DEFAULT NULL,
        notes_rejected_in       IN epis_complication.notes_rejected%TYPE DEFAULT NULL,
        dt_epis_complication_in IN epis_complication.dt_epis_complication%TYPE DEFAULT NULL,
        id_prof_create_in       IN epis_complication.id_prof_create%TYPE DEFAULT NULL,
        id_prof_clin_serv_in    IN epis_complication.id_prof_clin_serv%TYPE DEFAULT NULL,
        create_user_in          IN epis_complication.create_user%TYPE DEFAULT NULL,
        create_time_in          IN epis_complication.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN epis_complication.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN epis_complication.update_user%TYPE DEFAULT NULL,
        update_time_in          IN epis_complication.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN epis_complication.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN epis_complication.id_epis_complication%TYPE;

    FUNCTION ins
    (
        id_episode_in           IN epis_complication.id_episode%TYPE DEFAULT NULL,
        id_episode_origin_in    IN epis_complication.id_episode_origin%TYPE DEFAULT NULL,
        id_complication_in      IN epis_complication.id_complication%TYPE DEFAULT NULL,
        description_in          IN epis_complication.description%TYPE DEFAULT NULL,
        dt_verif_comp_in        IN epis_complication.dt_verif_comp%TYPE DEFAULT NULL,
        dt_verif_req_in         IN epis_complication.dt_verif_req%TYPE DEFAULT NULL,
        id_clin_serv_dest_in    IN epis_complication.id_clin_serv_dest%TYPE DEFAULT NULL,
        flg_status_comp_in      IN epis_complication.flg_status_comp%TYPE DEFAULT NULL,
        flg_status_req_in       IN epis_complication.flg_status_req%TYPE DEFAULT NULL,
        notes_comp_in           IN epis_complication.notes_comp%TYPE DEFAULT NULL,
        notes_req_in            IN epis_complication.notes_req%TYPE DEFAULT NULL,
        id_cancel_reason_in     IN epis_complication.id_cancel_reason%TYPE DEFAULT NULL,
        notes_cancel_in         IN epis_complication.notes_cancel%TYPE DEFAULT NULL,
        id_reject_reason_in     IN epis_complication.id_reject_reason%TYPE DEFAULT NULL,
        notes_rejected_in       IN epis_complication.notes_rejected%TYPE DEFAULT NULL,
        dt_epis_complication_in IN epis_complication.dt_epis_complication%TYPE DEFAULT NULL,
        id_prof_create_in       IN epis_complication.id_prof_create%TYPE DEFAULT NULL,
        id_prof_clin_serv_in    IN epis_complication.id_prof_clin_serv%TYPE DEFAULT NULL,
        create_user_in          IN epis_complication.create_user%TYPE DEFAULT NULL,
        create_time_in          IN epis_complication.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN epis_complication.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN epis_complication.update_user%TYPE DEFAULT NULL,
        update_time_in          IN epis_complication.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN epis_complication.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN epis_complication.id_epis_complication%TYPE;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.

    PROCEDURE upd
    (
        id_epis_complication_in  IN epis_complication.id_epis_complication%TYPE,
        id_episode_in            IN epis_complication.id_episode%TYPE DEFAULT NULL,
        id_episode_nin           IN BOOLEAN := TRUE,
        id_episode_origin_in     IN epis_complication.id_episode_origin%TYPE DEFAULT NULL,
        id_episode_origin_nin    IN BOOLEAN := TRUE,
        id_complication_in       IN epis_complication.id_complication%TYPE DEFAULT NULL,
        id_complication_nin      IN BOOLEAN := TRUE,
        description_in           IN epis_complication.description%TYPE DEFAULT NULL,
        description_nin          IN BOOLEAN := TRUE,
        dt_verif_comp_in         IN epis_complication.dt_verif_comp%TYPE DEFAULT NULL,
        dt_verif_comp_nin        IN BOOLEAN := TRUE,
        dt_verif_req_in          IN epis_complication.dt_verif_req%TYPE DEFAULT NULL,
        dt_verif_req_nin         IN BOOLEAN := TRUE,
        id_clin_serv_dest_in     IN epis_complication.id_clin_serv_dest%TYPE DEFAULT NULL,
        id_clin_serv_dest_nin    IN BOOLEAN := TRUE,
        flg_status_comp_in       IN epis_complication.flg_status_comp%TYPE DEFAULT NULL,
        flg_status_comp_nin      IN BOOLEAN := TRUE,
        flg_status_req_in        IN epis_complication.flg_status_req%TYPE DEFAULT NULL,
        flg_status_req_nin       IN BOOLEAN := TRUE,
        notes_comp_in            IN epis_complication.notes_comp%TYPE DEFAULT NULL,
        notes_comp_nin           IN BOOLEAN := TRUE,
        notes_req_in             IN epis_complication.notes_req%TYPE DEFAULT NULL,
        notes_req_nin            IN BOOLEAN := TRUE,
        id_cancel_reason_in      IN epis_complication.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin     IN BOOLEAN := TRUE,
        notes_cancel_in          IN epis_complication.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin         IN BOOLEAN := TRUE,
        id_reject_reason_in      IN epis_complication.id_reject_reason%TYPE DEFAULT NULL,
        id_reject_reason_nin     IN BOOLEAN := TRUE,
        notes_rejected_in        IN epis_complication.notes_rejected%TYPE DEFAULT NULL,
        notes_rejected_nin       IN BOOLEAN := TRUE,
        dt_epis_complication_in  IN epis_complication.dt_epis_complication%TYPE DEFAULT NULL,
        dt_epis_complication_nin IN BOOLEAN := TRUE,
        id_prof_create_in        IN epis_complication.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin       IN BOOLEAN := TRUE,
        id_prof_clin_serv_in     IN epis_complication.id_prof_clin_serv%TYPE DEFAULT NULL,
        id_prof_clin_serv_nin    IN BOOLEAN := TRUE,
        create_user_in           IN epis_complication.create_user%TYPE DEFAULT NULL,
        create_user_nin          IN BOOLEAN := TRUE,
        create_time_in           IN epis_complication.create_time%TYPE DEFAULT NULL,
        create_time_nin          IN BOOLEAN := TRUE,
        create_institution_in    IN epis_complication.create_institution%TYPE DEFAULT NULL,
        create_institution_nin   IN BOOLEAN := TRUE,
        update_user_in           IN epis_complication.update_user%TYPE DEFAULT NULL,
        update_user_nin          IN BOOLEAN := TRUE,
        update_time_in           IN epis_complication.update_time%TYPE DEFAULT NULL,
        update_time_nin          IN BOOLEAN := TRUE,
        update_institution_in    IN epis_complication.update_institution%TYPE DEFAULT NULL,
        update_institution_nin   IN BOOLEAN := TRUE,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_epis_complication_in  IN epis_complication.id_epis_complication%TYPE,
        id_episode_in            IN epis_complication.id_episode%TYPE DEFAULT NULL,
        id_episode_nin           IN BOOLEAN := TRUE,
        id_episode_origin_in     IN epis_complication.id_episode_origin%TYPE DEFAULT NULL,
        id_episode_origin_nin    IN BOOLEAN := TRUE,
        id_complication_in       IN epis_complication.id_complication%TYPE DEFAULT NULL,
        id_complication_nin      IN BOOLEAN := TRUE,
        description_in           IN epis_complication.description%TYPE DEFAULT NULL,
        description_nin          IN BOOLEAN := TRUE,
        dt_verif_comp_in         IN epis_complication.dt_verif_comp%TYPE DEFAULT NULL,
        dt_verif_comp_nin        IN BOOLEAN := TRUE,
        dt_verif_req_in          IN epis_complication.dt_verif_req%TYPE DEFAULT NULL,
        dt_verif_req_nin         IN BOOLEAN := TRUE,
        id_clin_serv_dest_in     IN epis_complication.id_clin_serv_dest%TYPE DEFAULT NULL,
        id_clin_serv_dest_nin    IN BOOLEAN := TRUE,
        flg_status_comp_in       IN epis_complication.flg_status_comp%TYPE DEFAULT NULL,
        flg_status_comp_nin      IN BOOLEAN := TRUE,
        flg_status_req_in        IN epis_complication.flg_status_req%TYPE DEFAULT NULL,
        flg_status_req_nin       IN BOOLEAN := TRUE,
        notes_comp_in            IN epis_complication.notes_comp%TYPE DEFAULT NULL,
        notes_comp_nin           IN BOOLEAN := TRUE,
        notes_req_in             IN epis_complication.notes_req%TYPE DEFAULT NULL,
        notes_req_nin            IN BOOLEAN := TRUE,
        id_cancel_reason_in      IN epis_complication.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin     IN BOOLEAN := TRUE,
        notes_cancel_in          IN epis_complication.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin         IN BOOLEAN := TRUE,
        id_reject_reason_in      IN epis_complication.id_reject_reason%TYPE DEFAULT NULL,
        id_reject_reason_nin     IN BOOLEAN := TRUE,
        notes_rejected_in        IN epis_complication.notes_rejected%TYPE DEFAULT NULL,
        notes_rejected_nin       IN BOOLEAN := TRUE,
        dt_epis_complication_in  IN epis_complication.dt_epis_complication%TYPE DEFAULT NULL,
        dt_epis_complication_nin IN BOOLEAN := TRUE,
        id_prof_create_in        IN epis_complication.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin       IN BOOLEAN := TRUE,
        id_prof_clin_serv_in     IN epis_complication.id_prof_clin_serv%TYPE DEFAULT NULL,
        id_prof_clin_serv_nin    IN BOOLEAN := TRUE,
        create_user_in           IN epis_complication.create_user%TYPE DEFAULT NULL,
        create_user_nin          IN BOOLEAN := TRUE,
        create_time_in           IN epis_complication.create_time%TYPE DEFAULT NULL,
        create_time_nin          IN BOOLEAN := TRUE,
        create_institution_in    IN epis_complication.create_institution%TYPE DEFAULT NULL,
        create_institution_nin   IN BOOLEAN := TRUE,
        update_user_in           IN epis_complication.update_user%TYPE DEFAULT NULL,
        update_user_nin          IN BOOLEAN := TRUE,
        update_time_in           IN epis_complication.update_time%TYPE DEFAULT NULL,
        update_time_nin          IN BOOLEAN := TRUE,
        update_institution_in    IN epis_complication.update_institution%TYPE DEFAULT NULL,
        update_institution_nin   IN BOOLEAN := TRUE,
        handle_error_in          IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        id_episode_in            IN epis_complication.id_episode%TYPE DEFAULT NULL,
        id_episode_nin           IN BOOLEAN := TRUE,
        id_episode_origin_in     IN epis_complication.id_episode_origin%TYPE DEFAULT NULL,
        id_episode_origin_nin    IN BOOLEAN := TRUE,
        id_complication_in       IN epis_complication.id_complication%TYPE DEFAULT NULL,
        id_complication_nin      IN BOOLEAN := TRUE,
        description_in           IN epis_complication.description%TYPE DEFAULT NULL,
        description_nin          IN BOOLEAN := TRUE,
        dt_verif_comp_in         IN epis_complication.dt_verif_comp%TYPE DEFAULT NULL,
        dt_verif_comp_nin        IN BOOLEAN := TRUE,
        dt_verif_req_in          IN epis_complication.dt_verif_req%TYPE DEFAULT NULL,
        dt_verif_req_nin         IN BOOLEAN := TRUE,
        id_clin_serv_dest_in     IN epis_complication.id_clin_serv_dest%TYPE DEFAULT NULL,
        id_clin_serv_dest_nin    IN BOOLEAN := TRUE,
        flg_status_comp_in       IN epis_complication.flg_status_comp%TYPE DEFAULT NULL,
        flg_status_comp_nin      IN BOOLEAN := TRUE,
        flg_status_req_in        IN epis_complication.flg_status_req%TYPE DEFAULT NULL,
        flg_status_req_nin       IN BOOLEAN := TRUE,
        notes_comp_in            IN epis_complication.notes_comp%TYPE DEFAULT NULL,
        notes_comp_nin           IN BOOLEAN := TRUE,
        notes_req_in             IN epis_complication.notes_req%TYPE DEFAULT NULL,
        notes_req_nin            IN BOOLEAN := TRUE,
        id_cancel_reason_in      IN epis_complication.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin     IN BOOLEAN := TRUE,
        notes_cancel_in          IN epis_complication.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin         IN BOOLEAN := TRUE,
        id_reject_reason_in      IN epis_complication.id_reject_reason%TYPE DEFAULT NULL,
        id_reject_reason_nin     IN BOOLEAN := TRUE,
        notes_rejected_in        IN epis_complication.notes_rejected%TYPE DEFAULT NULL,
        notes_rejected_nin       IN BOOLEAN := TRUE,
        dt_epis_complication_in  IN epis_complication.dt_epis_complication%TYPE DEFAULT NULL,
        dt_epis_complication_nin IN BOOLEAN := TRUE,
        id_prof_create_in        IN epis_complication.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin       IN BOOLEAN := TRUE,
        id_prof_clin_serv_in     IN epis_complication.id_prof_clin_serv%TYPE DEFAULT NULL,
        id_prof_clin_serv_nin    IN BOOLEAN := TRUE,
        create_user_in           IN epis_complication.create_user%TYPE DEFAULT NULL,
        create_user_nin          IN BOOLEAN := TRUE,
        create_time_in           IN epis_complication.create_time%TYPE DEFAULT NULL,
        create_time_nin          IN BOOLEAN := TRUE,
        create_institution_in    IN epis_complication.create_institution%TYPE DEFAULT NULL,
        create_institution_nin   IN BOOLEAN := TRUE,
        update_user_in           IN epis_complication.update_user%TYPE DEFAULT NULL,
        update_user_nin          IN BOOLEAN := TRUE,
        update_time_in           IN epis_complication.update_time%TYPE DEFAULT NULL,
        update_time_nin          IN BOOLEAN := TRUE,
        update_institution_in    IN epis_complication.update_institution%TYPE DEFAULT NULL,
        update_institution_nin   IN BOOLEAN := TRUE,
        where_in                 VARCHAR2 DEFAULT NULL,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_episode_in            IN epis_complication.id_episode%TYPE DEFAULT NULL,
        id_episode_nin           IN BOOLEAN := TRUE,
        id_episode_origin_in     IN epis_complication.id_episode_origin%TYPE DEFAULT NULL,
        id_episode_origin_nin    IN BOOLEAN := TRUE,
        id_complication_in       IN epis_complication.id_complication%TYPE DEFAULT NULL,
        id_complication_nin      IN BOOLEAN := TRUE,
        description_in           IN epis_complication.description%TYPE DEFAULT NULL,
        description_nin          IN BOOLEAN := TRUE,
        dt_verif_comp_in         IN epis_complication.dt_verif_comp%TYPE DEFAULT NULL,
        dt_verif_comp_nin        IN BOOLEAN := TRUE,
        dt_verif_req_in          IN epis_complication.dt_verif_req%TYPE DEFAULT NULL,
        dt_verif_req_nin         IN BOOLEAN := TRUE,
        id_clin_serv_dest_in     IN epis_complication.id_clin_serv_dest%TYPE DEFAULT NULL,
        id_clin_serv_dest_nin    IN BOOLEAN := TRUE,
        flg_status_comp_in       IN epis_complication.flg_status_comp%TYPE DEFAULT NULL,
        flg_status_comp_nin      IN BOOLEAN := TRUE,
        flg_status_req_in        IN epis_complication.flg_status_req%TYPE DEFAULT NULL,
        flg_status_req_nin       IN BOOLEAN := TRUE,
        notes_comp_in            IN epis_complication.notes_comp%TYPE DEFAULT NULL,
        notes_comp_nin           IN BOOLEAN := TRUE,
        notes_req_in             IN epis_complication.notes_req%TYPE DEFAULT NULL,
        notes_req_nin            IN BOOLEAN := TRUE,
        id_cancel_reason_in      IN epis_complication.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin     IN BOOLEAN := TRUE,
        notes_cancel_in          IN epis_complication.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin         IN BOOLEAN := TRUE,
        id_reject_reason_in      IN epis_complication.id_reject_reason%TYPE DEFAULT NULL,
        id_reject_reason_nin     IN BOOLEAN := TRUE,
        notes_rejected_in        IN epis_complication.notes_rejected%TYPE DEFAULT NULL,
        notes_rejected_nin       IN BOOLEAN := TRUE,
        dt_epis_complication_in  IN epis_complication.dt_epis_complication%TYPE DEFAULT NULL,
        dt_epis_complication_nin IN BOOLEAN := TRUE,
        id_prof_create_in        IN epis_complication.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin       IN BOOLEAN := TRUE,
        id_prof_clin_serv_in     IN epis_complication.id_prof_clin_serv%TYPE DEFAULT NULL,
        id_prof_clin_serv_nin    IN BOOLEAN := TRUE,
        create_user_in           IN epis_complication.create_user%TYPE DEFAULT NULL,
        create_user_nin          IN BOOLEAN := TRUE,
        create_time_in           IN epis_complication.create_time%TYPE DEFAULT NULL,
        create_time_nin          IN BOOLEAN := TRUE,
        create_institution_in    IN epis_complication.create_institution%TYPE DEFAULT NULL,
        create_institution_nin   IN BOOLEAN := TRUE,
        update_user_in           IN epis_complication.update_user%TYPE DEFAULT NULL,
        update_user_nin          IN BOOLEAN := TRUE,
        update_time_in           IN epis_complication.update_time%TYPE DEFAULT NULL,
        update_time_nin          IN BOOLEAN := TRUE,
        update_institution_in    IN epis_complication.update_institution%TYPE DEFAULT NULL,
        update_institution_nin   IN BOOLEAN := TRUE,
        where_in                 VARCHAR2 DEFAULT NULL,
        handle_error_in          IN BOOLEAN := TRUE
    );

    PROCEDURE upd_ins
    (
        id_epis_complication_in IN epis_complication.id_epis_complication%TYPE,
        id_episode_in           IN epis_complication.id_episode%TYPE DEFAULT NULL,
        id_episode_origin_in    IN epis_complication.id_episode_origin%TYPE DEFAULT NULL,
        id_complication_in      IN epis_complication.id_complication%TYPE DEFAULT NULL,
        description_in          IN epis_complication.description%TYPE DEFAULT NULL,
        dt_verif_comp_in        IN epis_complication.dt_verif_comp%TYPE DEFAULT NULL,
        dt_verif_req_in         IN epis_complication.dt_verif_req%TYPE DEFAULT NULL,
        id_clin_serv_dest_in    IN epis_complication.id_clin_serv_dest%TYPE DEFAULT NULL,
        flg_status_comp_in      IN epis_complication.flg_status_comp%TYPE DEFAULT NULL,
        flg_status_req_in       IN epis_complication.flg_status_req%TYPE DEFAULT NULL,
        notes_comp_in           IN epis_complication.notes_comp%TYPE DEFAULT NULL,
        notes_req_in            IN epis_complication.notes_req%TYPE DEFAULT NULL,
        id_cancel_reason_in     IN epis_complication.id_cancel_reason%TYPE DEFAULT NULL,
        notes_cancel_in         IN epis_complication.notes_cancel%TYPE DEFAULT NULL,
        id_reject_reason_in     IN epis_complication.id_reject_reason%TYPE DEFAULT NULL,
        notes_rejected_in       IN epis_complication.notes_rejected%TYPE DEFAULT NULL,
        dt_epis_complication_in IN epis_complication.dt_epis_complication%TYPE DEFAULT NULL,
        id_prof_create_in       IN epis_complication.id_prof_create%TYPE DEFAULT NULL,
        id_prof_clin_serv_in    IN epis_complication.id_prof_clin_serv%TYPE DEFAULT NULL,
        create_user_in          IN epis_complication.create_user%TYPE DEFAULT NULL,
        create_time_in          IN epis_complication.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN epis_complication.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN epis_complication.update_user%TYPE DEFAULT NULL,
        update_time_in          IN epis_complication.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN epis_complication.update_institution%TYPE DEFAULT NULL,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    );

    PROCEDURE upd_ins
    (
        id_epis_complication_in IN epis_complication.id_epis_complication%TYPE,
        id_episode_in           IN epis_complication.id_episode%TYPE DEFAULT NULL,
        id_episode_origin_in    IN epis_complication.id_episode_origin%TYPE DEFAULT NULL,
        id_complication_in      IN epis_complication.id_complication%TYPE DEFAULT NULL,
        description_in          IN epis_complication.description%TYPE DEFAULT NULL,
        dt_verif_comp_in        IN epis_complication.dt_verif_comp%TYPE DEFAULT NULL,
        dt_verif_req_in         IN epis_complication.dt_verif_req%TYPE DEFAULT NULL,
        id_clin_serv_dest_in    IN epis_complication.id_clin_serv_dest%TYPE DEFAULT NULL,
        flg_status_comp_in      IN epis_complication.flg_status_comp%TYPE DEFAULT NULL,
        flg_status_req_in       IN epis_complication.flg_status_req%TYPE DEFAULT NULL,
        notes_comp_in           IN epis_complication.notes_comp%TYPE DEFAULT NULL,
        notes_req_in            IN epis_complication.notes_req%TYPE DEFAULT NULL,
        id_cancel_reason_in     IN epis_complication.id_cancel_reason%TYPE DEFAULT NULL,
        notes_cancel_in         IN epis_complication.notes_cancel%TYPE DEFAULT NULL,
        id_reject_reason_in     IN epis_complication.id_reject_reason%TYPE DEFAULT NULL,
        notes_rejected_in       IN epis_complication.notes_rejected%TYPE DEFAULT NULL,
        dt_epis_complication_in IN epis_complication.dt_epis_complication%TYPE DEFAULT NULL,
        id_prof_create_in       IN epis_complication.id_prof_create%TYPE DEFAULT NULL,
        id_prof_clin_serv_in    IN epis_complication.id_prof_clin_serv%TYPE DEFAULT NULL,
        create_user_in          IN epis_complication.create_user%TYPE DEFAULT NULL,
        create_time_in          IN epis_complication.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN epis_complication.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN epis_complication.update_user%TYPE DEFAULT NULL,
        update_time_in          IN epis_complication.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN epis_complication.update_institution%TYPE DEFAULT NULL,
        handle_error_in         IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        rec_in          IN epis_complication%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    PROCEDURE upd
    (
        rec_in          IN epis_complication%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        col_in            IN epis_complication_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    PROCEDURE upd
    (
        col_in            IN epis_complication_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_epis_complication_in IN epis_complication.id_epis_complication%TYPE,
        handle_error_in         IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_epis_complication_in IN epis_complication.id_epis_complication%TYPE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    );

    -- Delete all rows for primary key column ID_EPIS_COMPLICATION
    PROCEDURE del_id_epis_complication
    (
        id_epis_complication_in IN epis_complication.id_epis_complication%TYPE,
        handle_error_in         IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_EPIS_COMPLICATION
    PROCEDURE del_id_epis_complication
    (
        id_epis_complication_in IN epis_complication.id_epis_complication%TYPE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    );

    -- Delete all rows for this EPIS_COMP_CLIN_SERV_FK foreign key value
    PROCEDURE del_epis_comp_clin_serv_fk
    (
        id_clin_serv_dest_in IN epis_complication.id_clin_serv_dest%TYPE,
        handle_error_in      IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EPIS_COMP_CLIN_SERV_FK foreign key value
    PROCEDURE del_epis_comp_clin_serv_fk
    (
        id_clin_serv_dest_in IN epis_complication.id_clin_serv_dest%TYPE,
        handle_error_in      IN BOOLEAN := TRUE,
        rows_out             OUT table_varchar
    );

    -- Delete all rows for this EPIS_COMP_CNC_RS_FK foreign key value
    PROCEDURE del_epis_comp_cnc_rs_fk
    (
        id_cancel_reason_in IN epis_complication.id_cancel_reason%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EPIS_COMP_CNC_RS_FK foreign key value
    PROCEDURE del_epis_comp_cnc_rs_fk
    (
        id_cancel_reason_in IN epis_complication.id_cancel_reason%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    );

    -- Delete all rows for this EPIS_COMP_COMPLICATION_FK foreign key value
    PROCEDURE del_epis_comp_complication_fk
    (
        id_complication_in IN epis_complication.id_complication%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EPIS_COMP_COMPLICATION_FK foreign key value
    PROCEDURE del_epis_comp_complication_fk
    (
        id_complication_in IN epis_complication.id_complication%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    -- Delete all rows for this EPIS_COMP_EPIS_FK foreign key value
    PROCEDURE del_epis_comp_epis_fk
    (
        id_episode_in   IN epis_complication.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EPIS_COMP_EPIS_FK foreign key value
    PROCEDURE del_epis_comp_epis_fk
    (
        id_episode_in   IN epis_complication.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this EPIS_COMP_EPIS_ORI_FK foreign key value
    PROCEDURE del_epis_comp_epis_ori_fk
    (
        id_episode_origin_in IN epis_complication.id_episode_origin%TYPE,
        handle_error_in      IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EPIS_COMP_EPIS_ORI_FK foreign key value
    PROCEDURE del_epis_comp_epis_ori_fk
    (
        id_episode_origin_in IN epis_complication.id_episode_origin%TYPE,
        handle_error_in      IN BOOLEAN := TRUE,
        rows_out             OUT table_varchar
    );

    -- Delete all rows for this EPIS_COMP_PROF_CLS_FK foreign key value
    PROCEDURE del_epis_comp_prof_cls_fk
    (
        id_prof_clin_serv_in IN epis_complication.id_prof_clin_serv%TYPE,
        handle_error_in      IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EPIS_COMP_PROF_CLS_FK foreign key value
    PROCEDURE del_epis_comp_prof_cls_fk
    (
        id_prof_clin_serv_in IN epis_complication.id_prof_clin_serv%TYPE,
        handle_error_in      IN BOOLEAN := TRUE,
        rows_out             OUT table_varchar
    );

    -- Delete all rows for this EPIS_COMP_PROF_FK foreign key value
    PROCEDURE del_epis_comp_prof_fk
    (
        id_prof_create_in IN epis_complication.id_prof_create%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EPIS_COMP_PROF_FK foreign key value
    PROCEDURE del_epis_comp_prof_fk
    (
        id_prof_create_in IN epis_complication.id_prof_create%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows for this EPIS_COMP_RJCT_RS_FK foreign key value
    PROCEDURE del_epis_comp_rjct_rs_fk
    (
        id_reject_reason_in IN epis_complication.id_reject_reason%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EPIS_COMP_RJCT_RS_FK foreign key value
    PROCEDURE del_epis_comp_rjct_rs_fk
    (
        id_reject_reason_in IN epis_complication.id_reject_reason%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(epis_complication_inout IN OUT epis_complication%ROWTYPE);

    FUNCTION initrec RETURN epis_complication%ROWTYPE;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN epis_complication_tc;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN epis_complication_tc;

END ts_epis_complication;
/
