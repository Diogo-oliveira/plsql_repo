/*-- Last Change Revision: $Rev: 2029331 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:51:04 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE TS_PROF_TEAM_EA
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: July 3, 2009 11:27:35
| Created By: ALERT
*/
IS

  -- Collection of %ROWTYPE records based on "PROF_TEAM_EA"
     TYPE PROF_TEAM_EA_tc IS TABLE OF PROF_TEAM_EA%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE prof_team_ea_ntt IS TABLE OF PROF_TEAM_EA%ROWTYPE;
     TYPE prof_team_ea_vat IS VARRAY(100) OF PROF_TEAM_EA%ROWTYPE;

  -- Same type structure, with a static name.
     TYPE aat IS TABLE OF PROF_TEAM_EA%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE ntt IS TABLE OF PROF_TEAM_EA%ROWTYPE;
     TYPE vat IS VARRAY(100) OF PROF_TEAM_EA%ROWTYPE;

   -- Column Collection based on column "ID_PROF_TEAM"
   TYPE ID_PROF_TEAM_cc IS TABLE OF PROF_TEAM_EA.ID_PROF_TEAM%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PROF_TEAM_LEADER"
   TYPE ID_PROF_TEAM_LEADER_cc IS TABLE OF PROF_TEAM_EA.ID_PROF_TEAM_LEADER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "PROF_TEAM_NAME"
   TYPE PROF_TEAM_NAME_cc IS TABLE OF PROF_TEAM_EA.PROF_TEAM_NAME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "PROF_TEAM_DESC"
   TYPE PROF_TEAM_DESC_cc IS TABLE OF PROF_TEAM_EA.PROF_TEAM_DESC%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_AVAILABLE"
   TYPE FLG_AVAILABLE_cc IS TABLE OF PROF_TEAM_EA.FLG_AVAILABLE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_STATUS"
   TYPE FLG_STATUS_cc IS TABLE OF PROF_TEAM_EA.FLG_STATUS%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_SOFTWARE"
   TYPE ID_SOFTWARE_cc IS TABLE OF PROF_TEAM_EA.ID_SOFTWARE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_INSTITUTION"
   TYPE ID_INSTITUTION_cc IS TABLE OF PROF_TEAM_EA.ID_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_TYPE"
   TYPE FLG_TYPE_cc IS TABLE OF PROF_TEAM_EA.FLG_TYPE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_BEGIN_TSTZ"
   TYPE DT_BEGIN_TSTZ_cc IS TABLE OF PROF_TEAM_EA.DT_BEGIN_TSTZ%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_END_TSTZ"
   TYPE DT_END_TSTZ_cc IS TABLE OF PROF_TEAM_EA.DT_END_TSTZ%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_DEPARTMENT"
   TYPE ID_DEPARTMENT_cc IS TABLE OF PROF_TEAM_EA.ID_DEPARTMENT%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "NOTES"
   TYPE NOTES_cc IS TABLE OF PROF_TEAM_EA.NOTES%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_TIME"
   TYPE CREATE_TIME_cc IS TABLE OF PROF_TEAM_EA.CREATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_USER"
   TYPE CREATE_USER_cc IS TABLE OF PROF_TEAM_EA.CREATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "NUM_MEMBERS"
   TYPE NUM_MEMBERS_cc IS TABLE OF PROF_TEAM_EA.NUM_MEMBERS%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_INSTITUTION"
   TYPE CREATE_INSTITUTION_cc IS TABLE OF PROF_TEAM_EA.CREATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_USER"
   TYPE UPDATE_USER_cc IS TABLE OF PROF_TEAM_EA.UPDATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_TIME"
   TYPE UPDATE_TIME_cc IS TABLE OF PROF_TEAM_EA.UPDATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_INSTITUTION"
   TYPE UPDATE_INSTITUTION_cc IS TABLE OF PROF_TEAM_EA.UPDATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PROF_REGISTER"
   TYPE ID_PROF_REGISTER_cc IS TABLE OF PROF_TEAM_EA.ID_PROF_REGISTER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_REGISTER"
   TYPE DT_REGISTER_cc IS TABLE OF PROF_TEAM_EA.DT_REGISTER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_TEAM_TYPE"
   TYPE ID_TEAM_TYPE_cc IS TABLE OF PROF_TEAM_EA.ID_TEAM_TYPE%TYPE INDEX BY BINARY_INTEGER;

   -- Insert one row, providing primary key if present
   PROCEDURE ins (
      id_prof_team_in IN PROF_TEAM_EA.ID_PROF_TEAM%TYPE
      ,
      id_prof_team_leader_in IN PROF_TEAM_EA.ID_PROF_TEAM_LEADER%TYPE DEFAULT NULL,
      prof_team_name_in IN PROF_TEAM_EA.PROF_TEAM_NAME%TYPE DEFAULT NULL,
      prof_team_desc_in IN PROF_TEAM_EA.PROF_TEAM_DESC%TYPE DEFAULT NULL,
      flg_available_in IN PROF_TEAM_EA.FLG_AVAILABLE%TYPE DEFAULT NULL,
      flg_status_in IN PROF_TEAM_EA.FLG_STATUS%TYPE DEFAULT NULL,
      id_software_in IN PROF_TEAM_EA.ID_SOFTWARE%TYPE DEFAULT NULL,
      id_institution_in IN PROF_TEAM_EA.ID_INSTITUTION%TYPE DEFAULT NULL,
      flg_type_in IN PROF_TEAM_EA.FLG_TYPE%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN PROF_TEAM_EA.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN PROF_TEAM_EA.DT_END_TSTZ%TYPE DEFAULT NULL,
      id_department_in IN PROF_TEAM_EA.ID_DEPARTMENT%TYPE DEFAULT NULL,
      notes_in IN PROF_TEAM_EA.NOTES%TYPE DEFAULT NULL,
      create_time_in IN PROF_TEAM_EA.CREATE_TIME%TYPE DEFAULT NULL,
      create_user_in IN PROF_TEAM_EA.CREATE_USER%TYPE DEFAULT NULL,
      num_members_in IN PROF_TEAM_EA.NUM_MEMBERS%TYPE DEFAULT NULL,
      create_institution_in IN PROF_TEAM_EA.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN PROF_TEAM_EA.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN PROF_TEAM_EA.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN PROF_TEAM_EA.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_prof_register_in IN PROF_TEAM_EA.ID_PROF_REGISTER%TYPE DEFAULT NULL,
      dt_register_in IN PROF_TEAM_EA.DT_REGISTER%TYPE DEFAULT NULL,
      id_team_type_in IN PROF_TEAM_EA.ID_TEAM_TYPE%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_prof_team_in IN PROF_TEAM_EA.ID_PROF_TEAM%TYPE
      ,
      id_prof_team_leader_in IN PROF_TEAM_EA.ID_PROF_TEAM_LEADER%TYPE DEFAULT NULL,
      prof_team_name_in IN PROF_TEAM_EA.PROF_TEAM_NAME%TYPE DEFAULT NULL,
      prof_team_desc_in IN PROF_TEAM_EA.PROF_TEAM_DESC%TYPE DEFAULT NULL,
      flg_available_in IN PROF_TEAM_EA.FLG_AVAILABLE%TYPE DEFAULT NULL,
      flg_status_in IN PROF_TEAM_EA.FLG_STATUS%TYPE DEFAULT NULL,
      id_software_in IN PROF_TEAM_EA.ID_SOFTWARE%TYPE DEFAULT NULL,
      id_institution_in IN PROF_TEAM_EA.ID_INSTITUTION%TYPE DEFAULT NULL,
      flg_type_in IN PROF_TEAM_EA.FLG_TYPE%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN PROF_TEAM_EA.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN PROF_TEAM_EA.DT_END_TSTZ%TYPE DEFAULT NULL,
      id_department_in IN PROF_TEAM_EA.ID_DEPARTMENT%TYPE DEFAULT NULL,
      notes_in IN PROF_TEAM_EA.NOTES%TYPE DEFAULT NULL,
      create_time_in IN PROF_TEAM_EA.CREATE_TIME%TYPE DEFAULT NULL,
      create_user_in IN PROF_TEAM_EA.CREATE_USER%TYPE DEFAULT NULL,
      num_members_in IN PROF_TEAM_EA.NUM_MEMBERS%TYPE DEFAULT NULL,
      create_institution_in IN PROF_TEAM_EA.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN PROF_TEAM_EA.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN PROF_TEAM_EA.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN PROF_TEAM_EA.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_prof_register_in IN PROF_TEAM_EA.ID_PROF_REGISTER%TYPE DEFAULT NULL,
      dt_register_in IN PROF_TEAM_EA.DT_REGISTER%TYPE DEFAULT NULL,
      id_team_type_in IN PROF_TEAM_EA.ID_TEAM_TYPE%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );


   -- Insert a row based on a record.
   PROCEDURE ins (
      rec_in IN PROF_TEAM_EA%ROWTYPE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rec_in IN PROF_TEAM_EA%ROWTYPE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Insert a collection of rows using FORALL; all primary key values
   -- must have already been generated, or are handled in triggers.
   PROCEDURE ins (
      rows_in IN PROF_TEAM_EA_tc
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rows_in IN PROF_TEAM_EA_tc
     ,handle_error_in IN BOOLEAN := TRUE
   );


   -- Update any/all columns by primary key. If you pass NULL, then
   -- the current column value is set to itself. If you need a more
   -- selected UPDATE then use one of the onecol procedures below.

  PROCEDURE upd (
      id_prof_team_in IN PROF_TEAM_EA.ID_PROF_TEAM%TYPE,
      id_prof_team_leader_in IN PROF_TEAM_EA.ID_PROF_TEAM_LEADER%TYPE DEFAULT NULL,
      ID_PROF_TEAM_LEADER_nin IN BOOLEAN := TRUE,
      prof_team_name_in IN PROF_TEAM_EA.PROF_TEAM_NAME%TYPE DEFAULT NULL,
      PROF_TEAM_NAME_nin IN BOOLEAN := TRUE,
      prof_team_desc_in IN PROF_TEAM_EA.PROF_TEAM_DESC%TYPE DEFAULT NULL,
      PROF_TEAM_DESC_nin IN BOOLEAN := TRUE,
      flg_available_in IN PROF_TEAM_EA.FLG_AVAILABLE%TYPE DEFAULT NULL,
      FLG_AVAILABLE_nin IN BOOLEAN := TRUE,
      flg_status_in IN PROF_TEAM_EA.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      id_software_in IN PROF_TEAM_EA.ID_SOFTWARE%TYPE DEFAULT NULL,
      ID_SOFTWARE_nin IN BOOLEAN := TRUE,
      id_institution_in IN PROF_TEAM_EA.ID_INSTITUTION%TYPE DEFAULT NULL,
      ID_INSTITUTION_nin IN BOOLEAN := TRUE,
      flg_type_in IN PROF_TEAM_EA.FLG_TYPE%TYPE DEFAULT NULL,
      FLG_TYPE_nin IN BOOLEAN := TRUE,
      dt_begin_tstz_in IN PROF_TEAM_EA.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      DT_BEGIN_TSTZ_nin IN BOOLEAN := TRUE,
      dt_end_tstz_in IN PROF_TEAM_EA.DT_END_TSTZ%TYPE DEFAULT NULL,
      DT_END_TSTZ_nin IN BOOLEAN := TRUE,
      id_department_in IN PROF_TEAM_EA.ID_DEPARTMENT%TYPE DEFAULT NULL,
      ID_DEPARTMENT_nin IN BOOLEAN := TRUE,
      notes_in IN PROF_TEAM_EA.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      create_time_in IN PROF_TEAM_EA.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_user_in IN PROF_TEAM_EA.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      num_members_in IN PROF_TEAM_EA.NUM_MEMBERS%TYPE DEFAULT NULL,
      NUM_MEMBERS_nin IN BOOLEAN := TRUE,
      create_institution_in IN PROF_TEAM_EA.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN PROF_TEAM_EA.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN PROF_TEAM_EA.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN PROF_TEAM_EA.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      id_prof_register_in IN PROF_TEAM_EA.ID_PROF_REGISTER%TYPE DEFAULT NULL,
      ID_PROF_REGISTER_nin IN BOOLEAN := TRUE,
      dt_register_in IN PROF_TEAM_EA.DT_REGISTER%TYPE DEFAULT NULL,
      DT_REGISTER_nin IN BOOLEAN := TRUE,
      id_team_type_in IN PROF_TEAM_EA.ID_TEAM_TYPE%TYPE DEFAULT NULL,
      ID_TEAM_TYPE_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


       PROCEDURE upd (
      id_prof_team_in IN PROF_TEAM_EA.ID_PROF_TEAM%TYPE,
      id_prof_team_leader_in IN PROF_TEAM_EA.ID_PROF_TEAM_LEADER%TYPE DEFAULT NULL,
      ID_PROF_TEAM_LEADER_nin IN BOOLEAN := TRUE,
      prof_team_name_in IN PROF_TEAM_EA.PROF_TEAM_NAME%TYPE DEFAULT NULL,
      PROF_TEAM_NAME_nin IN BOOLEAN := TRUE,
      prof_team_desc_in IN PROF_TEAM_EA.PROF_TEAM_DESC%TYPE DEFAULT NULL,
      PROF_TEAM_DESC_nin IN BOOLEAN := TRUE,
      flg_available_in IN PROF_TEAM_EA.FLG_AVAILABLE%TYPE DEFAULT NULL,
      FLG_AVAILABLE_nin IN BOOLEAN := TRUE,
      flg_status_in IN PROF_TEAM_EA.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      id_software_in IN PROF_TEAM_EA.ID_SOFTWARE%TYPE DEFAULT NULL,
      ID_SOFTWARE_nin IN BOOLEAN := TRUE,
      id_institution_in IN PROF_TEAM_EA.ID_INSTITUTION%TYPE DEFAULT NULL,
      ID_INSTITUTION_nin IN BOOLEAN := TRUE,
      flg_type_in IN PROF_TEAM_EA.FLG_TYPE%TYPE DEFAULT NULL,
      FLG_TYPE_nin IN BOOLEAN := TRUE,
      dt_begin_tstz_in IN PROF_TEAM_EA.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      DT_BEGIN_TSTZ_nin IN BOOLEAN := TRUE,
      dt_end_tstz_in IN PROF_TEAM_EA.DT_END_TSTZ%TYPE DEFAULT NULL,
      DT_END_TSTZ_nin IN BOOLEAN := TRUE,
      id_department_in IN PROF_TEAM_EA.ID_DEPARTMENT%TYPE DEFAULT NULL,
      ID_DEPARTMENT_nin IN BOOLEAN := TRUE,
      notes_in IN PROF_TEAM_EA.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      create_time_in IN PROF_TEAM_EA.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_user_in IN PROF_TEAM_EA.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      num_members_in IN PROF_TEAM_EA.NUM_MEMBERS%TYPE DEFAULT NULL,
      NUM_MEMBERS_nin IN BOOLEAN := TRUE,
      create_institution_in IN PROF_TEAM_EA.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN PROF_TEAM_EA.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN PROF_TEAM_EA.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN PROF_TEAM_EA.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      id_prof_register_in IN PROF_TEAM_EA.ID_PROF_REGISTER%TYPE DEFAULT NULL,
      ID_PROF_REGISTER_nin IN BOOLEAN := TRUE,
      dt_register_in IN PROF_TEAM_EA.DT_REGISTER%TYPE DEFAULT NULL,
      DT_REGISTER_nin IN BOOLEAN := TRUE,
      id_team_type_in IN PROF_TEAM_EA.ID_TEAM_TYPE%TYPE DEFAULT NULL,
      ID_TEAM_TYPE_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
      );



      PROCEDURE upd (
      id_prof_team_leader_in IN PROF_TEAM_EA.ID_PROF_TEAM_LEADER%TYPE DEFAULT NULL,
      ID_PROF_TEAM_LEADER_nin IN BOOLEAN := TRUE,
      prof_team_name_in IN PROF_TEAM_EA.PROF_TEAM_NAME%TYPE DEFAULT NULL,
      PROF_TEAM_NAME_nin IN BOOLEAN := TRUE,
      prof_team_desc_in IN PROF_TEAM_EA.PROF_TEAM_DESC%TYPE DEFAULT NULL,
      PROF_TEAM_DESC_nin IN BOOLEAN := TRUE,
      flg_available_in IN PROF_TEAM_EA.FLG_AVAILABLE%TYPE DEFAULT NULL,
      FLG_AVAILABLE_nin IN BOOLEAN := TRUE,
      flg_status_in IN PROF_TEAM_EA.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      id_software_in IN PROF_TEAM_EA.ID_SOFTWARE%TYPE DEFAULT NULL,
      ID_SOFTWARE_nin IN BOOLEAN := TRUE,
      id_institution_in IN PROF_TEAM_EA.ID_INSTITUTION%TYPE DEFAULT NULL,
      ID_INSTITUTION_nin IN BOOLEAN := TRUE,
      flg_type_in IN PROF_TEAM_EA.FLG_TYPE%TYPE DEFAULT NULL,
      FLG_TYPE_nin IN BOOLEAN := TRUE,
      dt_begin_tstz_in IN PROF_TEAM_EA.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      DT_BEGIN_TSTZ_nin IN BOOLEAN := TRUE,
      dt_end_tstz_in IN PROF_TEAM_EA.DT_END_TSTZ%TYPE DEFAULT NULL,
      DT_END_TSTZ_nin IN BOOLEAN := TRUE,
      id_department_in IN PROF_TEAM_EA.ID_DEPARTMENT%TYPE DEFAULT NULL,
      ID_DEPARTMENT_nin IN BOOLEAN := TRUE,
      notes_in IN PROF_TEAM_EA.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      create_time_in IN PROF_TEAM_EA.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_user_in IN PROF_TEAM_EA.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      num_members_in IN PROF_TEAM_EA.NUM_MEMBERS%TYPE DEFAULT NULL,
      NUM_MEMBERS_nin IN BOOLEAN := TRUE,
      create_institution_in IN PROF_TEAM_EA.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN PROF_TEAM_EA.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN PROF_TEAM_EA.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN PROF_TEAM_EA.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      id_prof_register_in IN PROF_TEAM_EA.ID_PROF_REGISTER%TYPE DEFAULT NULL,
      ID_PROF_REGISTER_nin IN BOOLEAN := TRUE,
      dt_register_in IN PROF_TEAM_EA.DT_REGISTER%TYPE DEFAULT NULL,
      DT_REGISTER_nin IN BOOLEAN := TRUE,
      id_team_type_in IN PROF_TEAM_EA.ID_TEAM_TYPE%TYPE DEFAULT NULL,
      ID_TEAM_TYPE_nin IN BOOLEAN := TRUE,
    where_in varchar2 DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


      PROCEDURE upd (
      id_prof_team_leader_in IN PROF_TEAM_EA.ID_PROF_TEAM_LEADER%TYPE DEFAULT NULL,
      ID_PROF_TEAM_LEADER_nin IN BOOLEAN := TRUE,
      prof_team_name_in IN PROF_TEAM_EA.PROF_TEAM_NAME%TYPE DEFAULT NULL,
      PROF_TEAM_NAME_nin IN BOOLEAN := TRUE,
      prof_team_desc_in IN PROF_TEAM_EA.PROF_TEAM_DESC%TYPE DEFAULT NULL,
      PROF_TEAM_DESC_nin IN BOOLEAN := TRUE,
      flg_available_in IN PROF_TEAM_EA.FLG_AVAILABLE%TYPE DEFAULT NULL,
      FLG_AVAILABLE_nin IN BOOLEAN := TRUE,
      flg_status_in IN PROF_TEAM_EA.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      id_software_in IN PROF_TEAM_EA.ID_SOFTWARE%TYPE DEFAULT NULL,
      ID_SOFTWARE_nin IN BOOLEAN := TRUE,
      id_institution_in IN PROF_TEAM_EA.ID_INSTITUTION%TYPE DEFAULT NULL,
      ID_INSTITUTION_nin IN BOOLEAN := TRUE,
      flg_type_in IN PROF_TEAM_EA.FLG_TYPE%TYPE DEFAULT NULL,
      FLG_TYPE_nin IN BOOLEAN := TRUE,
      dt_begin_tstz_in IN PROF_TEAM_EA.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      DT_BEGIN_TSTZ_nin IN BOOLEAN := TRUE,
      dt_end_tstz_in IN PROF_TEAM_EA.DT_END_TSTZ%TYPE DEFAULT NULL,
      DT_END_TSTZ_nin IN BOOLEAN := TRUE,
      id_department_in IN PROF_TEAM_EA.ID_DEPARTMENT%TYPE DEFAULT NULL,
      ID_DEPARTMENT_nin IN BOOLEAN := TRUE,
      notes_in IN PROF_TEAM_EA.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      create_time_in IN PROF_TEAM_EA.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_user_in IN PROF_TEAM_EA.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      num_members_in IN PROF_TEAM_EA.NUM_MEMBERS%TYPE DEFAULT NULL,
      NUM_MEMBERS_nin IN BOOLEAN := TRUE,
      create_institution_in IN PROF_TEAM_EA.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN PROF_TEAM_EA.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN PROF_TEAM_EA.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN PROF_TEAM_EA.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      id_prof_register_in IN PROF_TEAM_EA.ID_PROF_REGISTER%TYPE DEFAULT NULL,
      ID_PROF_REGISTER_nin IN BOOLEAN := TRUE,
      dt_register_in IN PROF_TEAM_EA.DT_REGISTER%TYPE DEFAULT NULL,
      DT_REGISTER_nin IN BOOLEAN := TRUE,
      id_team_type_in IN PROF_TEAM_EA.ID_TEAM_TYPE%TYPE DEFAULT NULL,
      ID_TEAM_TYPE_nin IN BOOLEAN := TRUE,
    where_in varchar2 DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
      );



   PROCEDURE upd_ins (
      id_prof_team_in IN PROF_TEAM_EA.ID_PROF_TEAM%TYPE,
      id_prof_team_leader_in IN PROF_TEAM_EA.ID_PROF_TEAM_LEADER%TYPE DEFAULT NULL,
      prof_team_name_in IN PROF_TEAM_EA.PROF_TEAM_NAME%TYPE DEFAULT NULL,
      prof_team_desc_in IN PROF_TEAM_EA.PROF_TEAM_DESC%TYPE DEFAULT NULL,
      flg_available_in IN PROF_TEAM_EA.FLG_AVAILABLE%TYPE DEFAULT NULL,
      flg_status_in IN PROF_TEAM_EA.FLG_STATUS%TYPE DEFAULT NULL,
      id_software_in IN PROF_TEAM_EA.ID_SOFTWARE%TYPE DEFAULT NULL,
      id_institution_in IN PROF_TEAM_EA.ID_INSTITUTION%TYPE DEFAULT NULL,
      flg_type_in IN PROF_TEAM_EA.FLG_TYPE%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN PROF_TEAM_EA.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN PROF_TEAM_EA.DT_END_TSTZ%TYPE DEFAULT NULL,
      id_department_in IN PROF_TEAM_EA.ID_DEPARTMENT%TYPE DEFAULT NULL,
      notes_in IN PROF_TEAM_EA.NOTES%TYPE DEFAULT NULL,
      create_time_in IN PROF_TEAM_EA.CREATE_TIME%TYPE DEFAULT NULL,
      create_user_in IN PROF_TEAM_EA.CREATE_USER%TYPE DEFAULT NULL,
      num_members_in IN PROF_TEAM_EA.NUM_MEMBERS%TYPE DEFAULT NULL,
      create_institution_in IN PROF_TEAM_EA.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN PROF_TEAM_EA.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN PROF_TEAM_EA.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN PROF_TEAM_EA.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_prof_register_in IN PROF_TEAM_EA.ID_PROF_REGISTER%TYPE DEFAULT NULL,
      dt_register_in IN PROF_TEAM_EA.DT_REGISTER%TYPE DEFAULT NULL,
      id_team_type_in IN PROF_TEAM_EA.ID_TEAM_TYPE%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

      PROCEDURE upd_ins (
      id_prof_team_in IN PROF_TEAM_EA.ID_PROF_TEAM%TYPE,
      id_prof_team_leader_in IN PROF_TEAM_EA.ID_PROF_TEAM_LEADER%TYPE DEFAULT NULL,
      prof_team_name_in IN PROF_TEAM_EA.PROF_TEAM_NAME%TYPE DEFAULT NULL,
      prof_team_desc_in IN PROF_TEAM_EA.PROF_TEAM_DESC%TYPE DEFAULT NULL,
      flg_available_in IN PROF_TEAM_EA.FLG_AVAILABLE%TYPE DEFAULT NULL,
      flg_status_in IN PROF_TEAM_EA.FLG_STATUS%TYPE DEFAULT NULL,
      id_software_in IN PROF_TEAM_EA.ID_SOFTWARE%TYPE DEFAULT NULL,
      id_institution_in IN PROF_TEAM_EA.ID_INSTITUTION%TYPE DEFAULT NULL,
      flg_type_in IN PROF_TEAM_EA.FLG_TYPE%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN PROF_TEAM_EA.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN PROF_TEAM_EA.DT_END_TSTZ%TYPE DEFAULT NULL,
      id_department_in IN PROF_TEAM_EA.ID_DEPARTMENT%TYPE DEFAULT NULL,
      notes_in IN PROF_TEAM_EA.NOTES%TYPE DEFAULT NULL,
      create_time_in IN PROF_TEAM_EA.CREATE_TIME%TYPE DEFAULT NULL,
      create_user_in IN PROF_TEAM_EA.CREATE_USER%TYPE DEFAULT NULL,
      num_members_in IN PROF_TEAM_EA.NUM_MEMBERS%TYPE DEFAULT NULL,
      create_institution_in IN PROF_TEAM_EA.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN PROF_TEAM_EA.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN PROF_TEAM_EA.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN PROF_TEAM_EA.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_prof_register_in IN PROF_TEAM_EA.ID_PROF_REGISTER%TYPE DEFAULT NULL,
      dt_register_in IN PROF_TEAM_EA.DT_REGISTER%TYPE DEFAULT NULL,
      id_team_type_in IN PROF_TEAM_EA.ID_TEAM_TYPE%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
      );

   PROCEDURE upd (
      rec_in IN PROF_TEAM_EA%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      rec_in IN PROF_TEAM_EA%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
      );

      PROCEDURE upd (
      col_in IN PROF_TEAM_EA_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      col_in IN PROF_TEAM_EA_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
      );





   -- Use Native Dynamic SQL increment a single NUMBER column
   -- for all rows specified by the dynamic WHERE clause
   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
   );









    -- Delete one row by primary key
   PROCEDURE del (
      id_prof_team_in IN PROF_TEAM_EA.ID_PROF_TEAM%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

-- Delete one row by primary key
   PROCEDURE del (
      id_prof_team_in IN PROF_TEAM_EA.ID_PROF_TEAM%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


   -- Delete all rows for primary key column ID_PROF_TEAM
   PROCEDURE del_ID_PROF_TEAM (
      id_prof_team_in IN PROF_TEAM_EA.ID_PROF_TEAM%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_PROF_TEAM
   PROCEDURE del_ID_PROF_TEAM (
      id_prof_team_in IN PROF_TEAM_EA.ID_PROF_TEAM%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );

   -- Delete all rows for this PROF_TEAMEA_DEP_FK foreign key value
   PROCEDURE del_PROF_TEAMEA_DEP_FK (
      id_department_in IN PROF_TEAM_EA.ID_DEPARTMENT%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this PROF_TEAMEA_DEP_FK foreign key value
   PROCEDURE del_PROF_TEAMEA_DEP_FK (
      id_department_in IN PROF_TEAM_EA.ID_DEPARTMENT%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this PROF_TEAMEA_INST_FK foreign key value
   PROCEDURE del_PROF_TEAMEA_INST_FK (
      id_institution_in IN PROF_TEAM_EA.ID_INSTITUTION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this PROF_TEAMEA_INST_FK foreign key value
   PROCEDURE del_PROF_TEAMEA_INST_FK (
      id_institution_in IN PROF_TEAM_EA.ID_INSTITUTION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this PROF_TEAMEA_PROFRG_FK foreign key value
   PROCEDURE del_PROF_TEAMEA_PROFRG_FK (
      id_prof_register_in IN PROF_TEAM_EA.ID_PROF_REGISTER%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this PROF_TEAMEA_PROFRG_FK foreign key value
   PROCEDURE del_PROF_TEAMEA_PROFRG_FK (
      id_prof_register_in IN PROF_TEAM_EA.ID_PROF_REGISTER%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this PROF_TEAMEA_PROFR_FK foreign key value
   PROCEDURE del_PROF_TEAMEA_PROFR_FK (
      create_user_in IN PROF_TEAM_EA.CREATE_USER%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this PROF_TEAMEA_PROFR_FK foreign key value
   PROCEDURE del_PROF_TEAMEA_PROFR_FK (
      create_user_in IN PROF_TEAM_EA.CREATE_USER%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this PROF_TEAMEA_PROF_FK foreign key value
   PROCEDURE del_PROF_TEAMEA_PROF_FK (
      id_prof_team_leader_in IN PROF_TEAM_EA.ID_PROF_TEAM_LEADER%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this PROF_TEAMEA_PROF_FK foreign key value
   PROCEDURE del_PROF_TEAMEA_PROF_FK (
      id_prof_team_leader_in IN PROF_TEAM_EA.ID_PROF_TEAM_LEADER%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this PROF_TEAMEA_SOFT_FK foreign key value
   PROCEDURE del_PROF_TEAMEA_SOFT_FK (
      id_software_in IN PROF_TEAM_EA.ID_SOFTWARE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this PROF_TEAMEA_SOFT_FK foreign key value
   PROCEDURE del_PROF_TEAMEA_SOFT_FK (
      id_software_in IN PROF_TEAM_EA.ID_SOFTWARE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );


      -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Initialize a record with default values for columns in the table.
   PROCEDURE initrec (
      prof_team_ea_inout IN OUT PROF_TEAM_EA%ROWTYPE
   );

   FUNCTION initrec RETURN PROF_TEAM_EA%ROWTYPE;



   FUNCTION get_data_rowid(
        rows_in IN TABLE_VARCHAR
        ) RETURN PROF_TEAM_EA_tc;


   FUNCTION get_data_rowid_pat(
        rows_in IN TABLE_VARCHAR
        ) RETURN PROF_TEAM_EA_tc;

END TS_PROF_TEAM_EA;
/
