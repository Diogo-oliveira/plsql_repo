/*-- Last Change Revision: $Rev: 1491809 $*/
/*-- Last Change by: $Author: elisabete.bugalho $*/
/*-- Date of last change: $Date: 2013-07-24 11:35:26 +0100 (qua, 24 jul 2013) $*/
CREATE OR REPLACE PACKAGE TS_ANNOUNCED_ARRIVAL
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Julho 8, 2013 15:16:16
| Created By: ALERT
*/
IS

  -- Collection of %ROWTYPE records based on "ANNOUNCED_ARRIVAL"
     TYPE ANNOUNCED_ARRIVAL_tc IS TABLE OF ANNOUNCED_ARRIVAL%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE announced_arrival_ntt IS TABLE OF ANNOUNCED_ARRIVAL%ROWTYPE;
     TYPE announced_arrival_vat IS VARRAY(100) OF ANNOUNCED_ARRIVAL%ROWTYPE;

  -- Same type structure, with a static name.
     TYPE aat IS TABLE OF ANNOUNCED_ARRIVAL%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE ntt IS TABLE OF ANNOUNCED_ARRIVAL%ROWTYPE;
     TYPE vat IS VARRAY(100) OF ANNOUNCED_ARRIVAL%ROWTYPE;

   -- Column Collection based on column "ID_ANNOUNCED_ARRIVAL"
   TYPE ID_ANNOUNCED_ARRIVAL_cc IS TABLE OF ANNOUNCED_ARRIVAL.ID_ANNOUNCED_ARRIVAL%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PRE_HOSP_ACCIDENT"
   TYPE ID_PRE_HOSP_ACCIDENT_cc IS TABLE OF ANNOUNCED_ARRIVAL.ID_PRE_HOSP_ACCIDENT%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_EPISODE"
   TYPE ID_EPISODE_cc IS TABLE OF ANNOUNCED_ARRIVAL.ID_EPISODE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_EPI_TYPE"
   TYPE FLG_EPI_TYPE_cc IS TABLE OF ANNOUNCED_ARRIVAL.FLG_EPI_TYPE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "TYPE_INJURY"
   TYPE TYPE_INJURY_cc IS TABLE OF ANNOUNCED_ARRIVAL.TYPE_INJURY%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CONDITION"
   TYPE CONDITION_cc IS TABLE OF ANNOUNCED_ARRIVAL.CONDITION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "REFERRED_BY"
   TYPE REFERRED_BY_cc IS TABLE OF ANNOUNCED_ARRIVAL.REFERRED_BY%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_SPECIALITY"
   TYPE ID_SPECIALITY_cc IS TABLE OF ANNOUNCED_ARRIVAL.ID_SPECIALITY%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_CLINICAL_SERVICE"
   TYPE ID_CLINICAL_SERVICE_cc IS TABLE OF ANNOUNCED_ARRIVAL.ID_CLINICAL_SERVICE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_ED_PHYSICIAN"
   TYPE ID_ED_PHYSICIAN_cc IS TABLE OF ANNOUNCED_ARRIVAL.ID_ED_PHYSICIAN%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_EXPECTED_ARRIVAL"
   TYPE DT_EXPECTED_ARRIVAL_cc IS TABLE OF ANNOUNCED_ARRIVAL.DT_EXPECTED_ARRIVAL%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_CANCEL_REASON"
   TYPE ID_CANCEL_REASON_cc IS TABLE OF ANNOUNCED_ARRIVAL.ID_CANCEL_REASON%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CANCEL_NOTES"
   TYPE CANCEL_NOTES_cc IS TABLE OF ANNOUNCED_ARRIVAL.CANCEL_NOTES%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_STATUS"
   TYPE FLG_STATUS_cc IS TABLE OF ANNOUNCED_ARRIVAL.FLG_STATUS%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_ANNOUNCED_ARRIVAL"
   TYPE DT_ANNOUNCED_ARRIVAL_cc IS TABLE OF ANNOUNCED_ARRIVAL.DT_ANNOUNCED_ARRIVAL%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_USER"
   TYPE CREATE_USER_cc IS TABLE OF ANNOUNCED_ARRIVAL.CREATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_TIME"
   TYPE CREATE_TIME_cc IS TABLE OF ANNOUNCED_ARRIVAL.CREATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_INSTITUTION"
   TYPE CREATE_INSTITUTION_cc IS TABLE OF ANNOUNCED_ARRIVAL.CREATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_USER"
   TYPE UPDATE_USER_cc IS TABLE OF ANNOUNCED_ARRIVAL.UPDATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_TIME"
   TYPE UPDATE_TIME_cc IS TABLE OF ANNOUNCED_ARRIVAL.UPDATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_INSTITUTION"
   TYPE UPDATE_INSTITUTION_cc IS TABLE OF ANNOUNCED_ARRIVAL.UPDATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PATIENT"
   TYPE ID_PATIENT_cc IS TABLE OF ANNOUNCED_ARRIVAL.ID_PATIENT%TYPE INDEX BY BINARY_INTEGER;

   -- Insert one row, providing primary key if present
   PROCEDURE ins (
      id_announced_arrival_in IN ANNOUNCED_ARRIVAL.ID_ANNOUNCED_ARRIVAL%TYPE,
      id_pre_hosp_accident_in IN ANNOUNCED_ARRIVAL.ID_PRE_HOSP_ACCIDENT%TYPE
      ,
      id_episode_in IN ANNOUNCED_ARRIVAL.ID_EPISODE%TYPE DEFAULT NULL,
      flg_epi_type_in IN ANNOUNCED_ARRIVAL.FLG_EPI_TYPE%TYPE DEFAULT NULL,
      type_injury_in IN ANNOUNCED_ARRIVAL.TYPE_INJURY%TYPE DEFAULT NULL,
      condition_in IN ANNOUNCED_ARRIVAL.CONDITION%TYPE DEFAULT NULL,
      referred_by_in IN ANNOUNCED_ARRIVAL.REFERRED_BY%TYPE DEFAULT NULL,
      id_speciality_in IN ANNOUNCED_ARRIVAL.ID_SPECIALITY%TYPE DEFAULT NULL,
      id_clinical_service_in IN ANNOUNCED_ARRIVAL.ID_CLINICAL_SERVICE%TYPE DEFAULT NULL,
      id_ed_physician_in IN ANNOUNCED_ARRIVAL.ID_ED_PHYSICIAN%TYPE DEFAULT NULL,
      dt_expected_arrival_in IN ANNOUNCED_ARRIVAL.DT_EXPECTED_ARRIVAL%TYPE DEFAULT NULL,
      id_cancel_reason_in IN ANNOUNCED_ARRIVAL.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      cancel_notes_in IN ANNOUNCED_ARRIVAL.CANCEL_NOTES%TYPE DEFAULT NULL,
      flg_status_in IN ANNOUNCED_ARRIVAL.FLG_STATUS%TYPE DEFAULT NULL,
      dt_announced_arrival_in IN ANNOUNCED_ARRIVAL.DT_ANNOUNCED_ARRIVAL%TYPE DEFAULT NULL,
      create_user_in IN ANNOUNCED_ARRIVAL.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN ANNOUNCED_ARRIVAL.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN ANNOUNCED_ARRIVAL.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN ANNOUNCED_ARRIVAL.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN ANNOUNCED_ARRIVAL.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN ANNOUNCED_ARRIVAL.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_patient_in IN ANNOUNCED_ARRIVAL.ID_PATIENT%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_announced_arrival_in IN ANNOUNCED_ARRIVAL.ID_ANNOUNCED_ARRIVAL%TYPE,
      id_pre_hosp_accident_in IN ANNOUNCED_ARRIVAL.ID_PRE_HOSP_ACCIDENT%TYPE
      ,
      id_episode_in IN ANNOUNCED_ARRIVAL.ID_EPISODE%TYPE DEFAULT NULL,
      flg_epi_type_in IN ANNOUNCED_ARRIVAL.FLG_EPI_TYPE%TYPE DEFAULT NULL,
      type_injury_in IN ANNOUNCED_ARRIVAL.TYPE_INJURY%TYPE DEFAULT NULL,
      condition_in IN ANNOUNCED_ARRIVAL.CONDITION%TYPE DEFAULT NULL,
      referred_by_in IN ANNOUNCED_ARRIVAL.REFERRED_BY%TYPE DEFAULT NULL,
      id_speciality_in IN ANNOUNCED_ARRIVAL.ID_SPECIALITY%TYPE DEFAULT NULL,
      id_clinical_service_in IN ANNOUNCED_ARRIVAL.ID_CLINICAL_SERVICE%TYPE DEFAULT NULL,
      id_ed_physician_in IN ANNOUNCED_ARRIVAL.ID_ED_PHYSICIAN%TYPE DEFAULT NULL,
      dt_expected_arrival_in IN ANNOUNCED_ARRIVAL.DT_EXPECTED_ARRIVAL%TYPE DEFAULT NULL,
      id_cancel_reason_in IN ANNOUNCED_ARRIVAL.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      cancel_notes_in IN ANNOUNCED_ARRIVAL.CANCEL_NOTES%TYPE DEFAULT NULL,
      flg_status_in IN ANNOUNCED_ARRIVAL.FLG_STATUS%TYPE DEFAULT NULL,
      dt_announced_arrival_in IN ANNOUNCED_ARRIVAL.DT_ANNOUNCED_ARRIVAL%TYPE DEFAULT NULL,
      create_user_in IN ANNOUNCED_ARRIVAL.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN ANNOUNCED_ARRIVAL.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN ANNOUNCED_ARRIVAL.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN ANNOUNCED_ARRIVAL.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN ANNOUNCED_ARRIVAL.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN ANNOUNCED_ARRIVAL.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_patient_in IN ANNOUNCED_ARRIVAL.ID_PATIENT%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );


   -- Insert a row based on a record.
   PROCEDURE ins (
      rec_in IN ANNOUNCED_ARRIVAL%ROWTYPE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rec_in IN ANNOUNCED_ARRIVAL%ROWTYPE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Insert a collection of rows using FORALL; all primary key values
   -- must have already been generated, or are handled in triggers.
   PROCEDURE ins (
      rows_in IN ANNOUNCED_ARRIVAL_tc
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rows_in IN ANNOUNCED_ARRIVAL_tc
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Update any/all columns by primary key. If you pass NULL, then
   -- the current column value is set to itself. If you need a more
   -- selected UPDATE then use one of the onecol procedures below.

  PROCEDURE upd (
      id_announced_arrival_in IN ANNOUNCED_ARRIVAL.ID_ANNOUNCED_ARRIVAL%TYPE,
      id_pre_hosp_accident_in IN ANNOUNCED_ARRIVAL.ID_PRE_HOSP_ACCIDENT%TYPE,
      id_episode_in IN ANNOUNCED_ARRIVAL.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      flg_epi_type_in IN ANNOUNCED_ARRIVAL.FLG_EPI_TYPE%TYPE DEFAULT NULL,
      FLG_EPI_TYPE_nin IN BOOLEAN := TRUE,
      type_injury_in IN ANNOUNCED_ARRIVAL.TYPE_INJURY%TYPE DEFAULT NULL,
      TYPE_INJURY_nin IN BOOLEAN := TRUE,
      condition_in IN ANNOUNCED_ARRIVAL.CONDITION%TYPE DEFAULT NULL,
      CONDITION_nin IN BOOLEAN := TRUE,
      referred_by_in IN ANNOUNCED_ARRIVAL.REFERRED_BY%TYPE DEFAULT NULL,
      REFERRED_BY_nin IN BOOLEAN := TRUE,
      id_speciality_in IN ANNOUNCED_ARRIVAL.ID_SPECIALITY%TYPE DEFAULT NULL,
      ID_SPECIALITY_nin IN BOOLEAN := TRUE,
      id_clinical_service_in IN ANNOUNCED_ARRIVAL.ID_CLINICAL_SERVICE%TYPE DEFAULT NULL,
      ID_CLINICAL_SERVICE_nin IN BOOLEAN := TRUE,
      id_ed_physician_in IN ANNOUNCED_ARRIVAL.ID_ED_PHYSICIAN%TYPE DEFAULT NULL,
      ID_ED_PHYSICIAN_nin IN BOOLEAN := TRUE,
      dt_expected_arrival_in IN ANNOUNCED_ARRIVAL.DT_EXPECTED_ARRIVAL%TYPE DEFAULT NULL,
      DT_EXPECTED_ARRIVAL_nin IN BOOLEAN := TRUE,
      id_cancel_reason_in IN ANNOUNCED_ARRIVAL.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      ID_CANCEL_REASON_nin IN BOOLEAN := TRUE,
      cancel_notes_in IN ANNOUNCED_ARRIVAL.CANCEL_NOTES%TYPE DEFAULT NULL,
      CANCEL_NOTES_nin IN BOOLEAN := TRUE,
      flg_status_in IN ANNOUNCED_ARRIVAL.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      dt_announced_arrival_in IN ANNOUNCED_ARRIVAL.DT_ANNOUNCED_ARRIVAL%TYPE DEFAULT NULL,
      DT_ANNOUNCED_ARRIVAL_nin IN BOOLEAN := TRUE,
      create_user_in IN ANNOUNCED_ARRIVAL.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN ANNOUNCED_ARRIVAL.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN ANNOUNCED_ARRIVAL.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN ANNOUNCED_ARRIVAL.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN ANNOUNCED_ARRIVAL.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN ANNOUNCED_ARRIVAL.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      id_patient_in IN ANNOUNCED_ARRIVAL.ID_PATIENT%TYPE DEFAULT NULL,
      ID_PATIENT_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


       PROCEDURE upd (
      id_announced_arrival_in IN ANNOUNCED_ARRIVAL.ID_ANNOUNCED_ARRIVAL%TYPE,
      id_pre_hosp_accident_in IN ANNOUNCED_ARRIVAL.ID_PRE_HOSP_ACCIDENT%TYPE,
      id_episode_in IN ANNOUNCED_ARRIVAL.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      flg_epi_type_in IN ANNOUNCED_ARRIVAL.FLG_EPI_TYPE%TYPE DEFAULT NULL,
      FLG_EPI_TYPE_nin IN BOOLEAN := TRUE,
      type_injury_in IN ANNOUNCED_ARRIVAL.TYPE_INJURY%TYPE DEFAULT NULL,
      TYPE_INJURY_nin IN BOOLEAN := TRUE,
      condition_in IN ANNOUNCED_ARRIVAL.CONDITION%TYPE DEFAULT NULL,
      CONDITION_nin IN BOOLEAN := TRUE,
      referred_by_in IN ANNOUNCED_ARRIVAL.REFERRED_BY%TYPE DEFAULT NULL,
      REFERRED_BY_nin IN BOOLEAN := TRUE,
      id_speciality_in IN ANNOUNCED_ARRIVAL.ID_SPECIALITY%TYPE DEFAULT NULL,
      ID_SPECIALITY_nin IN BOOLEAN := TRUE,
      id_clinical_service_in IN ANNOUNCED_ARRIVAL.ID_CLINICAL_SERVICE%TYPE DEFAULT NULL,
      ID_CLINICAL_SERVICE_nin IN BOOLEAN := TRUE,
      id_ed_physician_in IN ANNOUNCED_ARRIVAL.ID_ED_PHYSICIAN%TYPE DEFAULT NULL,
      ID_ED_PHYSICIAN_nin IN BOOLEAN := TRUE,
      dt_expected_arrival_in IN ANNOUNCED_ARRIVAL.DT_EXPECTED_ARRIVAL%TYPE DEFAULT NULL,
      DT_EXPECTED_ARRIVAL_nin IN BOOLEAN := TRUE,
      id_cancel_reason_in IN ANNOUNCED_ARRIVAL.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      ID_CANCEL_REASON_nin IN BOOLEAN := TRUE,
      cancel_notes_in IN ANNOUNCED_ARRIVAL.CANCEL_NOTES%TYPE DEFAULT NULL,
      CANCEL_NOTES_nin IN BOOLEAN := TRUE,
      flg_status_in IN ANNOUNCED_ARRIVAL.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      dt_announced_arrival_in IN ANNOUNCED_ARRIVAL.DT_ANNOUNCED_ARRIVAL%TYPE DEFAULT NULL,
      DT_ANNOUNCED_ARRIVAL_nin IN BOOLEAN := TRUE,
      create_user_in IN ANNOUNCED_ARRIVAL.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN ANNOUNCED_ARRIVAL.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN ANNOUNCED_ARRIVAL.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN ANNOUNCED_ARRIVAL.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN ANNOUNCED_ARRIVAL.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN ANNOUNCED_ARRIVAL.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      id_patient_in IN ANNOUNCED_ARRIVAL.ID_PATIENT%TYPE DEFAULT NULL,
      ID_PATIENT_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
      );



      PROCEDURE upd (
      id_episode_in IN ANNOUNCED_ARRIVAL.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      flg_epi_type_in IN ANNOUNCED_ARRIVAL.FLG_EPI_TYPE%TYPE DEFAULT NULL,
      FLG_EPI_TYPE_nin IN BOOLEAN := TRUE,
      type_injury_in IN ANNOUNCED_ARRIVAL.TYPE_INJURY%TYPE DEFAULT NULL,
      TYPE_INJURY_nin IN BOOLEAN := TRUE,
      condition_in IN ANNOUNCED_ARRIVAL.CONDITION%TYPE DEFAULT NULL,
      CONDITION_nin IN BOOLEAN := TRUE,
      referred_by_in IN ANNOUNCED_ARRIVAL.REFERRED_BY%TYPE DEFAULT NULL,
      REFERRED_BY_nin IN BOOLEAN := TRUE,
      id_speciality_in IN ANNOUNCED_ARRIVAL.ID_SPECIALITY%TYPE DEFAULT NULL,
      ID_SPECIALITY_nin IN BOOLEAN := TRUE,
      id_clinical_service_in IN ANNOUNCED_ARRIVAL.ID_CLINICAL_SERVICE%TYPE DEFAULT NULL,
      ID_CLINICAL_SERVICE_nin IN BOOLEAN := TRUE,
      id_ed_physician_in IN ANNOUNCED_ARRIVAL.ID_ED_PHYSICIAN%TYPE DEFAULT NULL,
      ID_ED_PHYSICIAN_nin IN BOOLEAN := TRUE,
      dt_expected_arrival_in IN ANNOUNCED_ARRIVAL.DT_EXPECTED_ARRIVAL%TYPE DEFAULT NULL,
      DT_EXPECTED_ARRIVAL_nin IN BOOLEAN := TRUE,
      id_cancel_reason_in IN ANNOUNCED_ARRIVAL.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      ID_CANCEL_REASON_nin IN BOOLEAN := TRUE,
      cancel_notes_in IN ANNOUNCED_ARRIVAL.CANCEL_NOTES%TYPE DEFAULT NULL,
      CANCEL_NOTES_nin IN BOOLEAN := TRUE,
      flg_status_in IN ANNOUNCED_ARRIVAL.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      dt_announced_arrival_in IN ANNOUNCED_ARRIVAL.DT_ANNOUNCED_ARRIVAL%TYPE DEFAULT NULL,
      DT_ANNOUNCED_ARRIVAL_nin IN BOOLEAN := TRUE,
      create_user_in IN ANNOUNCED_ARRIVAL.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN ANNOUNCED_ARRIVAL.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN ANNOUNCED_ARRIVAL.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN ANNOUNCED_ARRIVAL.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN ANNOUNCED_ARRIVAL.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN ANNOUNCED_ARRIVAL.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      id_patient_in IN ANNOUNCED_ARRIVAL.ID_PATIENT%TYPE DEFAULT NULL,
      ID_PATIENT_nin IN BOOLEAN := TRUE,
    where_in varchar2,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


      PROCEDURE upd (
      id_episode_in IN ANNOUNCED_ARRIVAL.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      flg_epi_type_in IN ANNOUNCED_ARRIVAL.FLG_EPI_TYPE%TYPE DEFAULT NULL,
      FLG_EPI_TYPE_nin IN BOOLEAN := TRUE,
      type_injury_in IN ANNOUNCED_ARRIVAL.TYPE_INJURY%TYPE DEFAULT NULL,
      TYPE_INJURY_nin IN BOOLEAN := TRUE,
      condition_in IN ANNOUNCED_ARRIVAL.CONDITION%TYPE DEFAULT NULL,
      CONDITION_nin IN BOOLEAN := TRUE,
      referred_by_in IN ANNOUNCED_ARRIVAL.REFERRED_BY%TYPE DEFAULT NULL,
      REFERRED_BY_nin IN BOOLEAN := TRUE,
      id_speciality_in IN ANNOUNCED_ARRIVAL.ID_SPECIALITY%TYPE DEFAULT NULL,
      ID_SPECIALITY_nin IN BOOLEAN := TRUE,
      id_clinical_service_in IN ANNOUNCED_ARRIVAL.ID_CLINICAL_SERVICE%TYPE DEFAULT NULL,
      ID_CLINICAL_SERVICE_nin IN BOOLEAN := TRUE,
      id_ed_physician_in IN ANNOUNCED_ARRIVAL.ID_ED_PHYSICIAN%TYPE DEFAULT NULL,
      ID_ED_PHYSICIAN_nin IN BOOLEAN := TRUE,
      dt_expected_arrival_in IN ANNOUNCED_ARRIVAL.DT_EXPECTED_ARRIVAL%TYPE DEFAULT NULL,
      DT_EXPECTED_ARRIVAL_nin IN BOOLEAN := TRUE,
      id_cancel_reason_in IN ANNOUNCED_ARRIVAL.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      ID_CANCEL_REASON_nin IN BOOLEAN := TRUE,
      cancel_notes_in IN ANNOUNCED_ARRIVAL.CANCEL_NOTES%TYPE DEFAULT NULL,
      CANCEL_NOTES_nin IN BOOLEAN := TRUE,
      flg_status_in IN ANNOUNCED_ARRIVAL.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      dt_announced_arrival_in IN ANNOUNCED_ARRIVAL.DT_ANNOUNCED_ARRIVAL%TYPE DEFAULT NULL,
      DT_ANNOUNCED_ARRIVAL_nin IN BOOLEAN := TRUE,
      create_user_in IN ANNOUNCED_ARRIVAL.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN ANNOUNCED_ARRIVAL.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN ANNOUNCED_ARRIVAL.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN ANNOUNCED_ARRIVAL.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN ANNOUNCED_ARRIVAL.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN ANNOUNCED_ARRIVAL.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      id_patient_in IN ANNOUNCED_ARRIVAL.ID_PATIENT%TYPE DEFAULT NULL,
      ID_PATIENT_nin IN BOOLEAN := TRUE,
    where_in varchar2,
     handle_error_in IN BOOLEAN := TRUE
      );



   PROCEDURE upd_ins (
      id_announced_arrival_in IN ANNOUNCED_ARRIVAL.ID_ANNOUNCED_ARRIVAL%TYPE,
      id_pre_hosp_accident_in IN ANNOUNCED_ARRIVAL.ID_PRE_HOSP_ACCIDENT%TYPE,
      id_episode_in IN ANNOUNCED_ARRIVAL.ID_EPISODE%TYPE DEFAULT NULL,
      flg_epi_type_in IN ANNOUNCED_ARRIVAL.FLG_EPI_TYPE%TYPE DEFAULT NULL,
      type_injury_in IN ANNOUNCED_ARRIVAL.TYPE_INJURY%TYPE DEFAULT NULL,
      condition_in IN ANNOUNCED_ARRIVAL.CONDITION%TYPE DEFAULT NULL,
      referred_by_in IN ANNOUNCED_ARRIVAL.REFERRED_BY%TYPE DEFAULT NULL,
      id_speciality_in IN ANNOUNCED_ARRIVAL.ID_SPECIALITY%TYPE DEFAULT NULL,
      id_clinical_service_in IN ANNOUNCED_ARRIVAL.ID_CLINICAL_SERVICE%TYPE DEFAULT NULL,
      id_ed_physician_in IN ANNOUNCED_ARRIVAL.ID_ED_PHYSICIAN%TYPE DEFAULT NULL,
      dt_expected_arrival_in IN ANNOUNCED_ARRIVAL.DT_EXPECTED_ARRIVAL%TYPE DEFAULT NULL,
      id_cancel_reason_in IN ANNOUNCED_ARRIVAL.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      cancel_notes_in IN ANNOUNCED_ARRIVAL.CANCEL_NOTES%TYPE DEFAULT NULL,
      flg_status_in IN ANNOUNCED_ARRIVAL.FLG_STATUS%TYPE DEFAULT NULL,
      dt_announced_arrival_in IN ANNOUNCED_ARRIVAL.DT_ANNOUNCED_ARRIVAL%TYPE DEFAULT NULL,
      create_user_in IN ANNOUNCED_ARRIVAL.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN ANNOUNCED_ARRIVAL.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN ANNOUNCED_ARRIVAL.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN ANNOUNCED_ARRIVAL.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN ANNOUNCED_ARRIVAL.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN ANNOUNCED_ARRIVAL.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_patient_in IN ANNOUNCED_ARRIVAL.ID_PATIENT%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

      PROCEDURE upd_ins (
      id_announced_arrival_in IN ANNOUNCED_ARRIVAL.ID_ANNOUNCED_ARRIVAL%TYPE,
      id_pre_hosp_accident_in IN ANNOUNCED_ARRIVAL.ID_PRE_HOSP_ACCIDENT%TYPE,
      id_episode_in IN ANNOUNCED_ARRIVAL.ID_EPISODE%TYPE DEFAULT NULL,
      flg_epi_type_in IN ANNOUNCED_ARRIVAL.FLG_EPI_TYPE%TYPE DEFAULT NULL,
      type_injury_in IN ANNOUNCED_ARRIVAL.TYPE_INJURY%TYPE DEFAULT NULL,
      condition_in IN ANNOUNCED_ARRIVAL.CONDITION%TYPE DEFAULT NULL,
      referred_by_in IN ANNOUNCED_ARRIVAL.REFERRED_BY%TYPE DEFAULT NULL,
      id_speciality_in IN ANNOUNCED_ARRIVAL.ID_SPECIALITY%TYPE DEFAULT NULL,
      id_clinical_service_in IN ANNOUNCED_ARRIVAL.ID_CLINICAL_SERVICE%TYPE DEFAULT NULL,
      id_ed_physician_in IN ANNOUNCED_ARRIVAL.ID_ED_PHYSICIAN%TYPE DEFAULT NULL,
      dt_expected_arrival_in IN ANNOUNCED_ARRIVAL.DT_EXPECTED_ARRIVAL%TYPE DEFAULT NULL,
      id_cancel_reason_in IN ANNOUNCED_ARRIVAL.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      cancel_notes_in IN ANNOUNCED_ARRIVAL.CANCEL_NOTES%TYPE DEFAULT NULL,
      flg_status_in IN ANNOUNCED_ARRIVAL.FLG_STATUS%TYPE DEFAULT NULL,
      dt_announced_arrival_in IN ANNOUNCED_ARRIVAL.DT_ANNOUNCED_ARRIVAL%TYPE DEFAULT NULL,
      create_user_in IN ANNOUNCED_ARRIVAL.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN ANNOUNCED_ARRIVAL.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN ANNOUNCED_ARRIVAL.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN ANNOUNCED_ARRIVAL.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN ANNOUNCED_ARRIVAL.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN ANNOUNCED_ARRIVAL.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_patient_in IN ANNOUNCED_ARRIVAL.ID_PATIENT%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
      );

   PROCEDURE upd (
      rec_in IN ANNOUNCED_ARRIVAL%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      rec_in IN ANNOUNCED_ARRIVAL%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
      );

      PROCEDURE upd (
      col_in IN ANNOUNCED_ARRIVAL_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      col_in IN ANNOUNCED_ARRIVAL_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
      );





   -- Use Native Dynamic SQL increment a single NUMBER column
   -- for all rows specified by the dynamic WHERE clause
   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
   );









    -- Delete one row by primary key
   PROCEDURE del (
      id_announced_arrival_in IN ANNOUNCED_ARRIVAL.ID_ANNOUNCED_ARRIVAL%TYPE,
      id_pre_hosp_accident_in IN ANNOUNCED_ARRIVAL.ID_PRE_HOSP_ACCIDENT%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

-- Delete one row by primary key
   PROCEDURE del (
      id_announced_arrival_in IN ANNOUNCED_ARRIVAL.ID_ANNOUNCED_ARRIVAL%TYPE,
      id_pre_hosp_accident_in IN ANNOUNCED_ARRIVAL.ID_PRE_HOSP_ACCIDENT%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


   -- Delete all rows for primary key column ID_ANNOUNCED_ARRIVAL
   PROCEDURE del_ID_ANNOUNCED_ARRIVAL (
      id_announced_arrival_in IN ANNOUNCED_ARRIVAL.ID_ANNOUNCED_ARRIVAL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_ANNOUNCED_ARRIVAL
   PROCEDURE del_ID_ANNOUNCED_ARRIVAL (
      id_announced_arrival_in IN ANNOUNCED_ARRIVAL.ID_ANNOUNCED_ARRIVAL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );


   -- Delete all rows for primary key column ID_PRE_HOSP_ACCIDENT
   PROCEDURE del_ID_PRE_HOSP_ACCIDENT (
      id_pre_hosp_accident_in IN ANNOUNCED_ARRIVAL.ID_PRE_HOSP_ACCIDENT%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_PRE_HOSP_ACCIDENT
   PROCEDURE del_ID_PRE_HOSP_ACCIDENT (
      id_pre_hosp_accident_in IN ANNOUNCED_ARRIVAL.ID_PRE_HOSP_ACCIDENT%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );

   -- Delete all rows for this ANN_ARR_CANCEL_REASON_FK foreign key value
   PROCEDURE del_ANN_ARR_CANCEL_REASON_FK (
      id_cancel_reason_in IN ANNOUNCED_ARRIVAL.ID_CANCEL_REASON%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this ANN_ARR_CANCEL_REASON_FK foreign key value
   PROCEDURE del_ANN_ARR_CANCEL_REASON_FK (
      id_cancel_reason_in IN ANNOUNCED_ARRIVAL.ID_CANCEL_REASON%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this ANN_ARR_CLN_SRV_FK foreign key value
   PROCEDURE del_ANN_ARR_CLN_SRV_FK (
      id_clinical_service_in IN ANNOUNCED_ARRIVAL.ID_CLINICAL_SERVICE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this ANN_ARR_CLN_SRV_FK foreign key value
   PROCEDURE del_ANN_ARR_CLN_SRV_FK (
      id_clinical_service_in IN ANNOUNCED_ARRIVAL.ID_CLINICAL_SERVICE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this ANN_ARR_EPI_FK foreign key value
   PROCEDURE del_ANN_ARR_EPI_FK (
      id_episode_in IN ANNOUNCED_ARRIVAL.ID_EPISODE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this ANN_ARR_EPI_FK foreign key value
   PROCEDURE del_ANN_ARR_EPI_FK (
      id_episode_in IN ANNOUNCED_ARRIVAL.ID_EPISODE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this ANN_ARR_PAT_FK foreign key value
   PROCEDURE del_ANN_ARR_PAT_FK (
      id_patient_in IN ANNOUNCED_ARRIVAL.ID_PATIENT%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this ANN_ARR_PAT_FK foreign key value
   PROCEDURE del_ANN_ARR_PAT_FK (
      id_patient_in IN ANNOUNCED_ARRIVAL.ID_PATIENT%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this ANN_ARR_PRE_HOSP_ACC_FK foreign key value
   PROCEDURE del_ANN_ARR_PRE_HOSP_ACC_FK (
      id_pre_hosp_accident_in IN ANNOUNCED_ARRIVAL.ID_PRE_HOSP_ACCIDENT%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this ANN_ARR_PRE_HOSP_ACC_FK foreign key value
   PROCEDURE del_ANN_ARR_PRE_HOSP_ACC_FK (
      id_pre_hosp_accident_in IN ANNOUNCED_ARRIVAL.ID_PRE_HOSP_ACCIDENT%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this ANN_ARR_PROF_FK foreign key value
   PROCEDURE del_ANN_ARR_PROF_FK (
      id_ed_physician_in IN ANNOUNCED_ARRIVAL.ID_ED_PHYSICIAN%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this ANN_ARR_PROF_FK foreign key value
   PROCEDURE del_ANN_ARR_PROF_FK (
      id_ed_physician_in IN ANNOUNCED_ARRIVAL.ID_ED_PHYSICIAN%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this ANN_ARR_SPEC_FK foreign key value
   PROCEDURE del_ANN_ARR_SPEC_FK (
      id_speciality_in IN ANNOUNCED_ARRIVAL.ID_SPECIALITY%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this ANN_ARR_SPEC_FK foreign key value
   PROCEDURE del_ANN_ARR_SPEC_FK (
      id_speciality_in IN ANNOUNCED_ARRIVAL.ID_SPECIALITY%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );


      -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Initialize a record with default values for columns in the table.
   PROCEDURE initrec (
      announced_arrival_inout IN OUT ANNOUNCED_ARRIVAL%ROWTYPE
   );

   FUNCTION initrec RETURN ANNOUNCED_ARRIVAL%ROWTYPE;



   FUNCTION get_data_rowid(
        rows_in IN TABLE_VARCHAR
        ) RETURN ANNOUNCED_ARRIVAL_tc;


   FUNCTION get_data_rowid_pat(
        rows_in IN TABLE_VARCHAR
        ) RETURN ANNOUNCED_ARRIVAL_tc;

END TS_ANNOUNCED_ARRIVAL;
/
