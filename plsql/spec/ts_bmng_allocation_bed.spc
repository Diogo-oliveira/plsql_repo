/*-- Last Change Revision: $Rev: 2029092 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:49:44 +0100 (ter, 02 ago 2022) $*/


CREATE OR REPLACE PACKAGE ts_bmng_allocation_bed
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Agosto 27, 2009 8:4:42
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on "BMNG_ALLOCATION_BED"
    TYPE bmng_allocation_bed_tc IS TABLE OF bmng_allocation_bed%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE bmng_allocation_bed_ntt IS TABLE OF bmng_allocation_bed%ROWTYPE;
    TYPE bmng_allocation_bed_vat IS VARRAY(100) OF bmng_allocation_bed%ROWTYPE;

    -- Same type structure, with a static name.
    TYPE aat IS TABLE OF bmng_allocation_bed%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE ntt IS TABLE OF bmng_allocation_bed%ROWTYPE;
    TYPE vat IS VARRAY(100) OF bmng_allocation_bed%ROWTYPE;

    -- Column Collection based on column "ID_BMNG_ALLOCATION_BED"
    TYPE id_bmng_allocation_bed_cc IS TABLE OF bmng_allocation_bed.id_bmng_allocation_bed%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_EPISODE"
    TYPE id_episode_cc IS TABLE OF bmng_allocation_bed.id_episode%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PATIENT"
    TYPE id_patient_cc IS TABLE OF bmng_allocation_bed.id_patient%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_BED"
    TYPE id_bed_cc IS TABLE OF bmng_allocation_bed.id_bed%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ALLOCATION_NOTES"
    TYPE allocation_notes_cc IS TABLE OF bmng_allocation_bed.allocation_notes%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_ROOM"
    TYPE id_room_cc IS TABLE OF bmng_allocation_bed.id_room%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROF_CREATION"
    TYPE id_prof_creation_cc IS TABLE OF bmng_allocation_bed.id_prof_creation%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_CREATION"
    TYPE dt_creation_cc IS TABLE OF bmng_allocation_bed.dt_creation%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROF_RELEASE"
    TYPE id_prof_release_cc IS TABLE OF bmng_allocation_bed.id_prof_release%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_RELEASE"
    TYPE dt_release_cc IS TABLE OF bmng_allocation_bed.dt_release%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_OUTDATED"
    TYPE flg_outdated_cc IS TABLE OF bmng_allocation_bed.flg_outdated%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_USER"
    TYPE create_user_cc IS TABLE OF bmng_allocation_bed.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_TIME"
    TYPE create_time_cc IS TABLE OF bmng_allocation_bed.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_INSTITUTION"
    TYPE create_institution_cc IS TABLE OF bmng_allocation_bed.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_USER"
    TYPE update_user_cc IS TABLE OF bmng_allocation_bed.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_TIME"
    TYPE update_time_cc IS TABLE OF bmng_allocation_bed.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_INSTITUTION"
    TYPE update_institution_cc IS TABLE OF bmng_allocation_bed.update_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_EPIS_NCH"
    TYPE id_epis_nch_cc IS TABLE OF bmng_allocation_bed.id_epis_nch%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present
    PROCEDURE ins
    (
        id_bmng_allocation_bed_in IN bmng_allocation_bed.id_bmng_allocation_bed%TYPE,
        id_episode_in             IN bmng_allocation_bed.id_episode%TYPE DEFAULT NULL,
        id_patient_in             IN bmng_allocation_bed.id_patient%TYPE DEFAULT NULL,
        id_bed_in                 IN bmng_allocation_bed.id_bed%TYPE DEFAULT NULL,
        allocation_notes_in       IN bmng_allocation_bed.allocation_notes%TYPE DEFAULT NULL,
        id_room_in                IN bmng_allocation_bed.id_room%TYPE DEFAULT NULL,
        id_prof_creation_in       IN bmng_allocation_bed.id_prof_creation%TYPE DEFAULT NULL,
        dt_creation_in            IN bmng_allocation_bed.dt_creation%TYPE DEFAULT current_timestamp,
        id_prof_release_in        IN bmng_allocation_bed.id_prof_release%TYPE DEFAULT NULL,
        dt_release_in             IN bmng_allocation_bed.dt_release%TYPE DEFAULT NULL,
        flg_outdated_in           IN bmng_allocation_bed.flg_outdated%TYPE DEFAULT 'N',
        create_user_in            IN bmng_allocation_bed.create_user%TYPE DEFAULT NULL,
        create_time_in            IN bmng_allocation_bed.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN bmng_allocation_bed.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN bmng_allocation_bed.update_user%TYPE DEFAULT NULL,
        update_time_in            IN bmng_allocation_bed.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN bmng_allocation_bed.update_institution%TYPE DEFAULT NULL,
        id_epis_nch_in            IN bmng_allocation_bed.id_epis_nch%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_bmng_allocation_bed_in IN bmng_allocation_bed.id_bmng_allocation_bed%TYPE,
        id_episode_in             IN bmng_allocation_bed.id_episode%TYPE DEFAULT NULL,
        id_patient_in             IN bmng_allocation_bed.id_patient%TYPE DEFAULT NULL,
        id_bed_in                 IN bmng_allocation_bed.id_bed%TYPE DEFAULT NULL,
        allocation_notes_in       IN bmng_allocation_bed.allocation_notes%TYPE DEFAULT NULL,
        id_room_in                IN bmng_allocation_bed.id_room%TYPE DEFAULT NULL,
        id_prof_creation_in       IN bmng_allocation_bed.id_prof_creation%TYPE DEFAULT NULL,
        dt_creation_in            IN bmng_allocation_bed.dt_creation%TYPE DEFAULT current_timestamp,
        id_prof_release_in        IN bmng_allocation_bed.id_prof_release%TYPE DEFAULT NULL,
        dt_release_in             IN bmng_allocation_bed.dt_release%TYPE DEFAULT NULL,
        flg_outdated_in           IN bmng_allocation_bed.flg_outdated%TYPE DEFAULT 'N',
        create_user_in            IN bmng_allocation_bed.create_user%TYPE DEFAULT NULL,
        create_time_in            IN bmng_allocation_bed.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN bmng_allocation_bed.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN bmng_allocation_bed.update_user%TYPE DEFAULT NULL,
        update_time_in            IN bmng_allocation_bed.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN bmng_allocation_bed.update_institution%TYPE DEFAULT NULL,
        id_epis_nch_in            IN bmng_allocation_bed.id_epis_nch%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record.
    -- Specify whether or not a primary key value should be generated.
    PROCEDURE ins
    (
        rec_in          IN bmng_allocation_bed%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rec_in          IN bmng_allocation_bed%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers.
    PROCEDURE ins
    (
        rows_in         IN bmng_allocation_bed_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rows_in         IN bmng_allocation_bed_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Return next primary key value using the named sequence.
    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN bmng_allocation_bed.id_bmng_allocation_bed%TYPE;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_episode_in         IN bmng_allocation_bed.id_episode%TYPE DEFAULT NULL,
        id_patient_in         IN bmng_allocation_bed.id_patient%TYPE DEFAULT NULL,
        id_bed_in             IN bmng_allocation_bed.id_bed%TYPE DEFAULT NULL,
        allocation_notes_in   IN bmng_allocation_bed.allocation_notes%TYPE DEFAULT NULL,
        id_room_in            IN bmng_allocation_bed.id_room%TYPE DEFAULT NULL,
        id_prof_creation_in   IN bmng_allocation_bed.id_prof_creation%TYPE DEFAULT NULL,
        dt_creation_in        IN bmng_allocation_bed.dt_creation%TYPE DEFAULT current_timestamp,
        id_prof_release_in    IN bmng_allocation_bed.id_prof_release%TYPE DEFAULT NULL,
        dt_release_in         IN bmng_allocation_bed.dt_release%TYPE DEFAULT NULL,
        flg_outdated_in       IN bmng_allocation_bed.flg_outdated%TYPE DEFAULT 'N',
        create_user_in        IN bmng_allocation_bed.create_user%TYPE DEFAULT NULL,
        create_time_in        IN bmng_allocation_bed.create_time%TYPE DEFAULT NULL,
        create_institution_in IN bmng_allocation_bed.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN bmng_allocation_bed.update_user%TYPE DEFAULT NULL,
        update_time_in        IN bmng_allocation_bed.update_time%TYPE DEFAULT NULL,
        update_institution_in IN bmng_allocation_bed.update_institution%TYPE DEFAULT NULL,
        id_epis_nch_in        IN bmng_allocation_bed.id_epis_nch%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_episode_in         IN bmng_allocation_bed.id_episode%TYPE DEFAULT NULL,
        id_patient_in         IN bmng_allocation_bed.id_patient%TYPE DEFAULT NULL,
        id_bed_in             IN bmng_allocation_bed.id_bed%TYPE DEFAULT NULL,
        allocation_notes_in   IN bmng_allocation_bed.allocation_notes%TYPE DEFAULT NULL,
        id_room_in            IN bmng_allocation_bed.id_room%TYPE DEFAULT NULL,
        id_prof_creation_in   IN bmng_allocation_bed.id_prof_creation%TYPE DEFAULT NULL,
        dt_creation_in        IN bmng_allocation_bed.dt_creation%TYPE DEFAULT current_timestamp,
        id_prof_release_in    IN bmng_allocation_bed.id_prof_release%TYPE DEFAULT NULL,
        dt_release_in         IN bmng_allocation_bed.dt_release%TYPE DEFAULT NULL,
        flg_outdated_in       IN bmng_allocation_bed.flg_outdated%TYPE DEFAULT 'N',
        create_user_in        IN bmng_allocation_bed.create_user%TYPE DEFAULT NULL,
        create_time_in        IN bmng_allocation_bed.create_time%TYPE DEFAULT NULL,
        create_institution_in IN bmng_allocation_bed.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN bmng_allocation_bed.update_user%TYPE DEFAULT NULL,
        update_time_in        IN bmng_allocation_bed.update_time%TYPE DEFAULT NULL,
        update_institution_in IN bmng_allocation_bed.update_institution%TYPE DEFAULT NULL,
        id_epis_nch_in        IN bmng_allocation_bed.id_epis_nch%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_episode_in              IN bmng_allocation_bed.id_episode%TYPE DEFAULT NULL,
        id_patient_in              IN bmng_allocation_bed.id_patient%TYPE DEFAULT NULL,
        id_bed_in                  IN bmng_allocation_bed.id_bed%TYPE DEFAULT NULL,
        allocation_notes_in        IN bmng_allocation_bed.allocation_notes%TYPE DEFAULT NULL,
        id_room_in                 IN bmng_allocation_bed.id_room%TYPE DEFAULT NULL,
        id_prof_creation_in        IN bmng_allocation_bed.id_prof_creation%TYPE DEFAULT NULL,
        dt_creation_in             IN bmng_allocation_bed.dt_creation%TYPE DEFAULT current_timestamp,
        id_prof_release_in         IN bmng_allocation_bed.id_prof_release%TYPE DEFAULT NULL,
        dt_release_in              IN bmng_allocation_bed.dt_release%TYPE DEFAULT NULL,
        flg_outdated_in            IN bmng_allocation_bed.flg_outdated%TYPE DEFAULT 'N',
        create_user_in             IN bmng_allocation_bed.create_user%TYPE DEFAULT NULL,
        create_time_in             IN bmng_allocation_bed.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN bmng_allocation_bed.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN bmng_allocation_bed.update_user%TYPE DEFAULT NULL,
        update_time_in             IN bmng_allocation_bed.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN bmng_allocation_bed.update_institution%TYPE DEFAULT NULL,
        id_epis_nch_in             IN bmng_allocation_bed.id_epis_nch%TYPE DEFAULT NULL,
        id_bmng_allocation_bed_out IN OUT bmng_allocation_bed.id_bmng_allocation_bed%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_episode_in              IN bmng_allocation_bed.id_episode%TYPE DEFAULT NULL,
        id_patient_in              IN bmng_allocation_bed.id_patient%TYPE DEFAULT NULL,
        id_bed_in                  IN bmng_allocation_bed.id_bed%TYPE DEFAULT NULL,
        allocation_notes_in        IN bmng_allocation_bed.allocation_notes%TYPE DEFAULT NULL,
        id_room_in                 IN bmng_allocation_bed.id_room%TYPE DEFAULT NULL,
        id_prof_creation_in        IN bmng_allocation_bed.id_prof_creation%TYPE DEFAULT NULL,
        dt_creation_in             IN bmng_allocation_bed.dt_creation%TYPE DEFAULT current_timestamp,
        id_prof_release_in         IN bmng_allocation_bed.id_prof_release%TYPE DEFAULT NULL,
        dt_release_in              IN bmng_allocation_bed.dt_release%TYPE DEFAULT NULL,
        flg_outdated_in            IN bmng_allocation_bed.flg_outdated%TYPE DEFAULT 'N',
        create_user_in             IN bmng_allocation_bed.create_user%TYPE DEFAULT NULL,
        create_time_in             IN bmng_allocation_bed.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN bmng_allocation_bed.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN bmng_allocation_bed.update_user%TYPE DEFAULT NULL,
        update_time_in             IN bmng_allocation_bed.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN bmng_allocation_bed.update_institution%TYPE DEFAULT NULL,
        id_epis_nch_in             IN bmng_allocation_bed.id_epis_nch%TYPE DEFAULT NULL,
        id_bmng_allocation_bed_out IN OUT bmng_allocation_bed.id_bmng_allocation_bed%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_episode_in         IN bmng_allocation_bed.id_episode%TYPE DEFAULT NULL,
        id_patient_in         IN bmng_allocation_bed.id_patient%TYPE DEFAULT NULL,
        id_bed_in             IN bmng_allocation_bed.id_bed%TYPE DEFAULT NULL,
        allocation_notes_in   IN bmng_allocation_bed.allocation_notes%TYPE DEFAULT NULL,
        id_room_in            IN bmng_allocation_bed.id_room%TYPE DEFAULT NULL,
        id_prof_creation_in   IN bmng_allocation_bed.id_prof_creation%TYPE DEFAULT NULL,
        dt_creation_in        IN bmng_allocation_bed.dt_creation%TYPE DEFAULT current_timestamp,
        id_prof_release_in    IN bmng_allocation_bed.id_prof_release%TYPE DEFAULT NULL,
        dt_release_in         IN bmng_allocation_bed.dt_release%TYPE DEFAULT NULL,
        flg_outdated_in       IN bmng_allocation_bed.flg_outdated%TYPE DEFAULT 'N',
        create_user_in        IN bmng_allocation_bed.create_user%TYPE DEFAULT NULL,
        create_time_in        IN bmng_allocation_bed.create_time%TYPE DEFAULT NULL,
        create_institution_in IN bmng_allocation_bed.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN bmng_allocation_bed.update_user%TYPE DEFAULT NULL,
        update_time_in        IN bmng_allocation_bed.update_time%TYPE DEFAULT NULL,
        update_institution_in IN bmng_allocation_bed.update_institution%TYPE DEFAULT NULL,
        id_epis_nch_in        IN bmng_allocation_bed.id_epis_nch%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN bmng_allocation_bed.id_bmng_allocation_bed%TYPE;

    FUNCTION ins
    (
        id_episode_in         IN bmng_allocation_bed.id_episode%TYPE DEFAULT NULL,
        id_patient_in         IN bmng_allocation_bed.id_patient%TYPE DEFAULT NULL,
        id_bed_in             IN bmng_allocation_bed.id_bed%TYPE DEFAULT NULL,
        allocation_notes_in   IN bmng_allocation_bed.allocation_notes%TYPE DEFAULT NULL,
        id_room_in            IN bmng_allocation_bed.id_room%TYPE DEFAULT NULL,
        id_prof_creation_in   IN bmng_allocation_bed.id_prof_creation%TYPE DEFAULT NULL,
        dt_creation_in        IN bmng_allocation_bed.dt_creation%TYPE DEFAULT current_timestamp,
        id_prof_release_in    IN bmng_allocation_bed.id_prof_release%TYPE DEFAULT NULL,
        dt_release_in         IN bmng_allocation_bed.dt_release%TYPE DEFAULT NULL,
        flg_outdated_in       IN bmng_allocation_bed.flg_outdated%TYPE DEFAULT 'N',
        create_user_in        IN bmng_allocation_bed.create_user%TYPE DEFAULT NULL,
        create_time_in        IN bmng_allocation_bed.create_time%TYPE DEFAULT NULL,
        create_institution_in IN bmng_allocation_bed.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN bmng_allocation_bed.update_user%TYPE DEFAULT NULL,
        update_time_in        IN bmng_allocation_bed.update_time%TYPE DEFAULT NULL,
        update_institution_in IN bmng_allocation_bed.update_institution%TYPE DEFAULT NULL,
        id_epis_nch_in        IN bmng_allocation_bed.id_epis_nch%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN bmng_allocation_bed.id_bmng_allocation_bed%TYPE;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.

    PROCEDURE upd
    (
        id_bmng_allocation_bed_in IN bmng_allocation_bed.id_bmng_allocation_bed%TYPE,
        id_episode_in             IN bmng_allocation_bed.id_episode%TYPE DEFAULT NULL,
        id_episode_nin            IN BOOLEAN := TRUE,
        id_patient_in             IN bmng_allocation_bed.id_patient%TYPE DEFAULT NULL,
        id_patient_nin            IN BOOLEAN := TRUE,
        id_bed_in                 IN bmng_allocation_bed.id_bed%TYPE DEFAULT NULL,
        id_bed_nin                IN BOOLEAN := TRUE,
        allocation_notes_in       IN bmng_allocation_bed.allocation_notes%TYPE DEFAULT NULL,
        allocation_notes_nin      IN BOOLEAN := TRUE,
        id_room_in                IN bmng_allocation_bed.id_room%TYPE DEFAULT NULL,
        id_room_nin               IN BOOLEAN := TRUE,
        id_prof_creation_in       IN bmng_allocation_bed.id_prof_creation%TYPE DEFAULT NULL,
        id_prof_creation_nin      IN BOOLEAN := TRUE,
        dt_creation_in            IN bmng_allocation_bed.dt_creation%TYPE DEFAULT NULL,
        dt_creation_nin           IN BOOLEAN := TRUE,
        id_prof_release_in        IN bmng_allocation_bed.id_prof_release%TYPE DEFAULT NULL,
        id_prof_release_nin       IN BOOLEAN := TRUE,
        dt_release_in             IN bmng_allocation_bed.dt_release%TYPE DEFAULT NULL,
        dt_release_nin            IN BOOLEAN := TRUE,
        flg_outdated_in           IN bmng_allocation_bed.flg_outdated%TYPE DEFAULT NULL,
        flg_outdated_nin          IN BOOLEAN := TRUE,
        create_user_in            IN bmng_allocation_bed.create_user%TYPE DEFAULT NULL,
        create_user_nin           IN BOOLEAN := TRUE,
        create_time_in            IN bmng_allocation_bed.create_time%TYPE DEFAULT NULL,
        create_time_nin           IN BOOLEAN := TRUE,
        create_institution_in     IN bmng_allocation_bed.create_institution%TYPE DEFAULT NULL,
        create_institution_nin    IN BOOLEAN := TRUE,
        update_user_in            IN bmng_allocation_bed.update_user%TYPE DEFAULT NULL,
        update_user_nin           IN BOOLEAN := TRUE,
        update_time_in            IN bmng_allocation_bed.update_time%TYPE DEFAULT NULL,
        update_time_nin           IN BOOLEAN := TRUE,
        update_institution_in     IN bmng_allocation_bed.update_institution%TYPE DEFAULT NULL,
        update_institution_nin    IN BOOLEAN := TRUE,
        id_epis_nch_in            IN bmng_allocation_bed.id_epis_nch%TYPE DEFAULT NULL,
        id_epis_nch_nin           IN BOOLEAN := TRUE,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_bmng_allocation_bed_in IN bmng_allocation_bed.id_bmng_allocation_bed%TYPE,
        id_episode_in             IN bmng_allocation_bed.id_episode%TYPE DEFAULT NULL,
        id_episode_nin            IN BOOLEAN := TRUE,
        id_patient_in             IN bmng_allocation_bed.id_patient%TYPE DEFAULT NULL,
        id_patient_nin            IN BOOLEAN := TRUE,
        id_bed_in                 IN bmng_allocation_bed.id_bed%TYPE DEFAULT NULL,
        id_bed_nin                IN BOOLEAN := TRUE,
        allocation_notes_in       IN bmng_allocation_bed.allocation_notes%TYPE DEFAULT NULL,
        allocation_notes_nin      IN BOOLEAN := TRUE,
        id_room_in                IN bmng_allocation_bed.id_room%TYPE DEFAULT NULL,
        id_room_nin               IN BOOLEAN := TRUE,
        id_prof_creation_in       IN bmng_allocation_bed.id_prof_creation%TYPE DEFAULT NULL,
        id_prof_creation_nin      IN BOOLEAN := TRUE,
        dt_creation_in            IN bmng_allocation_bed.dt_creation%TYPE DEFAULT NULL,
        dt_creation_nin           IN BOOLEAN := TRUE,
        id_prof_release_in        IN bmng_allocation_bed.id_prof_release%TYPE DEFAULT NULL,
        id_prof_release_nin       IN BOOLEAN := TRUE,
        dt_release_in             IN bmng_allocation_bed.dt_release%TYPE DEFAULT NULL,
        dt_release_nin            IN BOOLEAN := TRUE,
        flg_outdated_in           IN bmng_allocation_bed.flg_outdated%TYPE DEFAULT NULL,
        flg_outdated_nin          IN BOOLEAN := TRUE,
        create_user_in            IN bmng_allocation_bed.create_user%TYPE DEFAULT NULL,
        create_user_nin           IN BOOLEAN := TRUE,
        create_time_in            IN bmng_allocation_bed.create_time%TYPE DEFAULT NULL,
        create_time_nin           IN BOOLEAN := TRUE,
        create_institution_in     IN bmng_allocation_bed.create_institution%TYPE DEFAULT NULL,
        create_institution_nin    IN BOOLEAN := TRUE,
        update_user_in            IN bmng_allocation_bed.update_user%TYPE DEFAULT NULL,
        update_user_nin           IN BOOLEAN := TRUE,
        update_time_in            IN bmng_allocation_bed.update_time%TYPE DEFAULT NULL,
        update_time_nin           IN BOOLEAN := TRUE,
        update_institution_in     IN bmng_allocation_bed.update_institution%TYPE DEFAULT NULL,
        update_institution_nin    IN BOOLEAN := TRUE,
        id_epis_nch_in            IN bmng_allocation_bed.id_epis_nch%TYPE DEFAULT NULL,
        id_epis_nch_nin           IN BOOLEAN := TRUE,
        handle_error_in           IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        id_episode_in          IN bmng_allocation_bed.id_episode%TYPE DEFAULT NULL,
        id_episode_nin         IN BOOLEAN := TRUE,
        id_patient_in          IN bmng_allocation_bed.id_patient%TYPE DEFAULT NULL,
        id_patient_nin         IN BOOLEAN := TRUE,
        id_bed_in              IN bmng_allocation_bed.id_bed%TYPE DEFAULT NULL,
        id_bed_nin             IN BOOLEAN := TRUE,
        allocation_notes_in    IN bmng_allocation_bed.allocation_notes%TYPE DEFAULT NULL,
        allocation_notes_nin   IN BOOLEAN := TRUE,
        id_room_in             IN bmng_allocation_bed.id_room%TYPE DEFAULT NULL,
        id_room_nin            IN BOOLEAN := TRUE,
        id_prof_creation_in    IN bmng_allocation_bed.id_prof_creation%TYPE DEFAULT NULL,
        id_prof_creation_nin   IN BOOLEAN := TRUE,
        dt_creation_in         IN bmng_allocation_bed.dt_creation%TYPE DEFAULT NULL,
        dt_creation_nin        IN BOOLEAN := TRUE,
        id_prof_release_in     IN bmng_allocation_bed.id_prof_release%TYPE DEFAULT NULL,
        id_prof_release_nin    IN BOOLEAN := TRUE,
        dt_release_in          IN bmng_allocation_bed.dt_release%TYPE DEFAULT NULL,
        dt_release_nin         IN BOOLEAN := TRUE,
        flg_outdated_in        IN bmng_allocation_bed.flg_outdated%TYPE DEFAULT NULL,
        flg_outdated_nin       IN BOOLEAN := TRUE,
        create_user_in         IN bmng_allocation_bed.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN bmng_allocation_bed.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN bmng_allocation_bed.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN bmng_allocation_bed.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN bmng_allocation_bed.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN bmng_allocation_bed.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        id_epis_nch_in         IN bmng_allocation_bed.id_epis_nch%TYPE DEFAULT NULL,
        id_epis_nch_nin        IN BOOLEAN := TRUE,
        where_in               VARCHAR2 DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_episode_in          IN bmng_allocation_bed.id_episode%TYPE DEFAULT NULL,
        id_episode_nin         IN BOOLEAN := TRUE,
        id_patient_in          IN bmng_allocation_bed.id_patient%TYPE DEFAULT NULL,
        id_patient_nin         IN BOOLEAN := TRUE,
        id_bed_in              IN bmng_allocation_bed.id_bed%TYPE DEFAULT NULL,
        id_bed_nin             IN BOOLEAN := TRUE,
        allocation_notes_in    IN bmng_allocation_bed.allocation_notes%TYPE DEFAULT NULL,
        allocation_notes_nin   IN BOOLEAN := TRUE,
        id_room_in             IN bmng_allocation_bed.id_room%TYPE DEFAULT NULL,
        id_room_nin            IN BOOLEAN := TRUE,
        id_prof_creation_in    IN bmng_allocation_bed.id_prof_creation%TYPE DEFAULT NULL,
        id_prof_creation_nin   IN BOOLEAN := TRUE,
        dt_creation_in         IN bmng_allocation_bed.dt_creation%TYPE DEFAULT NULL,
        dt_creation_nin        IN BOOLEAN := TRUE,
        id_prof_release_in     IN bmng_allocation_bed.id_prof_release%TYPE DEFAULT NULL,
        id_prof_release_nin    IN BOOLEAN := TRUE,
        dt_release_in          IN bmng_allocation_bed.dt_release%TYPE DEFAULT NULL,
        dt_release_nin         IN BOOLEAN := TRUE,
        flg_outdated_in        IN bmng_allocation_bed.flg_outdated%TYPE DEFAULT NULL,
        flg_outdated_nin       IN BOOLEAN := TRUE,
        create_user_in         IN bmng_allocation_bed.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN bmng_allocation_bed.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN bmng_allocation_bed.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN bmng_allocation_bed.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN bmng_allocation_bed.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN bmng_allocation_bed.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        id_epis_nch_in         IN bmng_allocation_bed.id_epis_nch%TYPE DEFAULT NULL,
        id_epis_nch_nin        IN BOOLEAN := TRUE,
        where_in               VARCHAR2 DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE
    );

    PROCEDURE upd_ins
    (
        id_bmng_allocation_bed_in IN bmng_allocation_bed.id_bmng_allocation_bed%TYPE,
        id_episode_in             IN bmng_allocation_bed.id_episode%TYPE DEFAULT NULL,
        id_patient_in             IN bmng_allocation_bed.id_patient%TYPE DEFAULT NULL,
        id_bed_in                 IN bmng_allocation_bed.id_bed%TYPE DEFAULT NULL,
        allocation_notes_in       IN bmng_allocation_bed.allocation_notes%TYPE DEFAULT NULL,
        id_room_in                IN bmng_allocation_bed.id_room%TYPE DEFAULT NULL,
        id_prof_creation_in       IN bmng_allocation_bed.id_prof_creation%TYPE DEFAULT NULL,
        dt_creation_in            IN bmng_allocation_bed.dt_creation%TYPE DEFAULT NULL,
        id_prof_release_in        IN bmng_allocation_bed.id_prof_release%TYPE DEFAULT NULL,
        dt_release_in             IN bmng_allocation_bed.dt_release%TYPE DEFAULT NULL,
        flg_outdated_in           IN bmng_allocation_bed.flg_outdated%TYPE DEFAULT NULL,
        create_user_in            IN bmng_allocation_bed.create_user%TYPE DEFAULT NULL,
        create_time_in            IN bmng_allocation_bed.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN bmng_allocation_bed.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN bmng_allocation_bed.update_user%TYPE DEFAULT NULL,
        update_time_in            IN bmng_allocation_bed.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN bmng_allocation_bed.update_institution%TYPE DEFAULT NULL,
        id_epis_nch_in            IN bmng_allocation_bed.id_epis_nch%TYPE DEFAULT NULL,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  OUT table_varchar
    );

    PROCEDURE upd_ins
    (
        id_bmng_allocation_bed_in IN bmng_allocation_bed.id_bmng_allocation_bed%TYPE,
        id_episode_in             IN bmng_allocation_bed.id_episode%TYPE DEFAULT NULL,
        id_patient_in             IN bmng_allocation_bed.id_patient%TYPE DEFAULT NULL,
        id_bed_in                 IN bmng_allocation_bed.id_bed%TYPE DEFAULT NULL,
        allocation_notes_in       IN bmng_allocation_bed.allocation_notes%TYPE DEFAULT NULL,
        id_room_in                IN bmng_allocation_bed.id_room%TYPE DEFAULT NULL,
        id_prof_creation_in       IN bmng_allocation_bed.id_prof_creation%TYPE DEFAULT NULL,
        dt_creation_in            IN bmng_allocation_bed.dt_creation%TYPE DEFAULT NULL,
        id_prof_release_in        IN bmng_allocation_bed.id_prof_release%TYPE DEFAULT NULL,
        dt_release_in             IN bmng_allocation_bed.dt_release%TYPE DEFAULT NULL,
        flg_outdated_in           IN bmng_allocation_bed.flg_outdated%TYPE DEFAULT NULL,
        create_user_in            IN bmng_allocation_bed.create_user%TYPE DEFAULT NULL,
        create_time_in            IN bmng_allocation_bed.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN bmng_allocation_bed.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN bmng_allocation_bed.update_user%TYPE DEFAULT NULL,
        update_time_in            IN bmng_allocation_bed.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN bmng_allocation_bed.update_institution%TYPE DEFAULT NULL,
        id_epis_nch_in            IN bmng_allocation_bed.id_epis_nch%TYPE DEFAULT NULL,
        handle_error_in           IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        rec_in          IN bmng_allocation_bed%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    PROCEDURE upd
    (
        rec_in          IN bmng_allocation_bed%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        col_in            IN bmng_allocation_bed_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    PROCEDURE upd
    (
        col_in            IN bmng_allocation_bed_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_bmng_allocation_bed_in IN bmng_allocation_bed.id_bmng_allocation_bed%TYPE,
        handle_error_in           IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_bmng_allocation_bed_in IN bmng_allocation_bed.id_bmng_allocation_bed%TYPE,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  OUT table_varchar
    );

    -- Delete all rows for primary key column ID_BMNG_ALLOCATION_BED
    PROCEDURE del_id_bmng_allocation_bed
    (
        id_bmng_allocation_bed_in IN bmng_allocation_bed.id_bmng_allocation_bed%TYPE,
        handle_error_in           IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_BMNG_ALLOCATION_BED
    PROCEDURE del_id_bmng_allocation_bed
    (
        id_bmng_allocation_bed_in IN bmng_allocation_bed.id_bmng_allocation_bed%TYPE,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  OUT table_varchar
    );

    -- Delete all rows for this BAB_BED_FK foreign key value
    PROCEDURE del_bab_bed_fk
    (
        id_bed_in       IN bmng_allocation_bed.id_bed%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this BAB_BED_FK foreign key value
    PROCEDURE del_bab_bed_fk
    (
        id_bed_in       IN bmng_allocation_bed.id_bed%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this BAB_ENH_FK foreign key value
    PROCEDURE del_bab_enh_fk
    (
        id_epis_nch_in  IN bmng_allocation_bed.id_epis_nch%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this BAB_ENH_FK foreign key value
    PROCEDURE del_bab_enh_fk
    (
        id_epis_nch_in  IN bmng_allocation_bed.id_epis_nch%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this BAB_EPI_FK foreign key value
    PROCEDURE del_bab_epi_fk
    (
        id_episode_in   IN bmng_allocation_bed.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this BAB_EPI_FK foreign key value
    PROCEDURE del_bab_epi_fk
    (
        id_episode_in   IN bmng_allocation_bed.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this BAB_PAT_FK foreign key value
    PROCEDURE del_bab_pat_fk
    (
        id_patient_in   IN bmng_allocation_bed.id_patient%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this BAB_PAT_FK foreign key value
    PROCEDURE del_bab_pat_fk
    (
        id_patient_in   IN bmng_allocation_bed.id_patient%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this BAB_PROF_CREATE_FK foreign key value
    PROCEDURE del_bab_prof_create_fk
    (
        id_prof_creation_in IN bmng_allocation_bed.id_prof_creation%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    );

    -- Delete all rows for this BAB_PROF_CREATE_FK foreign key value
    PROCEDURE del_bab_prof_create_fk
    (
        id_prof_creation_in IN bmng_allocation_bed.id_prof_creation%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    );

    -- Delete all rows for this BAB_PROF_RELEASE_FK foreign key value
    PROCEDURE del_bab_prof_release_fk
    (
        id_prof_release_in IN bmng_allocation_bed.id_prof_release%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete all rows for this BAB_PROF_RELEASE_FK foreign key value
    PROCEDURE del_bab_prof_release_fk
    (
        id_prof_release_in IN bmng_allocation_bed.id_prof_release%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    -- Delete all rows for this BAB_ROOM_FK foreign key value
    PROCEDURE del_bab_room_fk
    (
        id_room_in      IN bmng_allocation_bed.id_room%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this BAB_ROOM_FK foreign key value
    PROCEDURE del_bab_room_fk
    (
        id_room_in      IN bmng_allocation_bed.id_room%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(bmng_allocation_bed_inout IN OUT bmng_allocation_bed%ROWTYPE);

    FUNCTION initrec RETURN bmng_allocation_bed%ROWTYPE;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN bmng_allocation_bed_tc;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN bmng_allocation_bed_tc;

END ts_bmng_allocation_bed;
/
