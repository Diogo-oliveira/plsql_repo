/*-- Last Change Revision: $Rev: 2029126 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:49:55 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE ts_epis_addendum
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Dezembro 14, 2010 16:50:37
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on "EPIS_ADDENDUM"
    TYPE epis_addendum_tc IS TABLE OF epis_addendum%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE epis_addendum_ntt IS TABLE OF epis_addendum%ROWTYPE;
    TYPE epis_addendum_vat IS VARRAY(100) OF epis_addendum%ROWTYPE;

    -- Same type structure, with a static name.
    TYPE aat IS TABLE OF epis_addendum%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE ntt IS TABLE OF epis_addendum%ROWTYPE;
    TYPE vat IS VARRAY(100) OF epis_addendum%ROWTYPE;

    -- Column Collection based on column "ID_EPIS_ADDENDUM"
    TYPE id_epis_addendum_cc IS TABLE OF epis_addendum.id_epis_addendum%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_EPIS_SIGN_OFF"
    TYPE id_epis_sign_off_cc IS TABLE OF epis_addendum.id_epis_sign_off%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROFESSIONAL"
    TYPE id_professional_cc IS TABLE OF epis_addendum.id_professional%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_EVENT"
    TYPE dt_event_cc IS TABLE OF epis_addendum.dt_event%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROFESSIONAL_SIGN_OFF"
    TYPE id_professional_sign_off_cc IS TABLE OF epis_addendum.id_professional_sign_off%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_SIGN_OFF"
    TYPE dt_sign_off_cc IS TABLE OF epis_addendum.dt_sign_off%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "NOTES"
    TYPE notes_cc IS TABLE OF epis_addendum.notes%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_STATUS"
    TYPE flg_status_cc IS TABLE OF epis_addendum.flg_status%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROF_CANCEL"
    TYPE id_prof_cancel_cc IS TABLE OF epis_addendum.id_prof_cancel%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "NOTES_CANCEL"
    TYPE notes_cancel_cc IS TABLE OF epis_addendum.notes_cancel%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_CANCEL"
    TYPE dt_cancel_cc IS TABLE OF epis_addendum.dt_cancel%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_CANCEL_REASON"
    TYPE id_cancel_reason_cc IS TABLE OF epis_addendum.id_cancel_reason%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_USER"
    TYPE create_user_cc IS TABLE OF epis_addendum.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_TIME"
    TYPE create_time_cc IS TABLE OF epis_addendum.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_INSTITUTION"
    TYPE create_institution_cc IS TABLE OF epis_addendum.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_USER"
    TYPE update_user_cc IS TABLE OF epis_addendum.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_TIME"
    TYPE update_time_cc IS TABLE OF epis_addendum.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_INSTITUTION"
    TYPE update_institution_cc IS TABLE OF epis_addendum.update_institution%TYPE INDEX BY BINARY_INTEGER;

    TYPE varchar2_t IS TABLE OF VARCHAR2(32767) INDEX BY PLS_INTEGER;
    /*
    START Special logic for handling LOB columns....
    */
    PROCEDURE n_ins_clobs_in_chunks
    (
        id_epis_addendum_in         IN epis_addendum.id_epis_addendum%TYPE,
        id_epis_sign_off_in         IN epis_addendum.id_epis_sign_off%TYPE DEFAULT NULL,
        id_professional_in          IN epis_addendum.id_professional%TYPE DEFAULT NULL,
        dt_event_in                 IN epis_addendum.dt_event%TYPE DEFAULT NULL,
        id_professional_sign_off_in IN epis_addendum.id_professional_sign_off%TYPE DEFAULT NULL,
        dt_sign_off_in              IN epis_addendum.dt_sign_off%TYPE DEFAULT NULL,
        flg_status_in               IN epis_addendum.flg_status%TYPE DEFAULT 'A',
        id_prof_cancel_in           IN epis_addendum.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in             IN epis_addendum.notes_cancel%TYPE DEFAULT NULL,
        dt_cancel_in                IN epis_addendum.dt_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in         IN epis_addendum.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in              IN epis_addendum.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_addendum.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_addendum.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_addendum.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_addendum.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_addendum.update_institution%TYPE DEFAULT NULL,
        handle_error_in             IN BOOLEAN := TRUE,
        clob_columns_in             IN varchar2_t,
        clob_pieces_in              IN varchar2_t
    );

    PROCEDURE n_upd_clobs_in_chunks
    (
        id_epis_addendum_in         IN epis_addendum.id_epis_addendum%TYPE,
        id_epis_sign_off_in         IN epis_addendum.id_epis_sign_off%TYPE DEFAULT NULL,
        id_professional_in          IN epis_addendum.id_professional%TYPE DEFAULT NULL,
        dt_event_in                 IN epis_addendum.dt_event%TYPE DEFAULT NULL,
        id_professional_sign_off_in IN epis_addendum.id_professional_sign_off%TYPE DEFAULT NULL,
        dt_sign_off_in              IN epis_addendum.dt_sign_off%TYPE DEFAULT NULL,
        flg_status_in               IN epis_addendum.flg_status%TYPE DEFAULT 'A',
        id_prof_cancel_in           IN epis_addendum.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in             IN epis_addendum.notes_cancel%TYPE DEFAULT NULL,
        dt_cancel_in                IN epis_addendum.dt_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in         IN epis_addendum.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in              IN epis_addendum.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_addendum.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_addendum.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_addendum.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_addendum.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_addendum.update_institution%TYPE DEFAULT NULL,
        ignore_if_null_in           IN BOOLEAN := TRUE,
        handle_error_in             IN BOOLEAN := TRUE,
        clob_columns_in             IN varchar2_t,
        clob_pieces_in              IN varchar2_t
    );

    PROCEDURE n_upd_ins_clobs_in_chunks
    (
        id_epis_addendum_in         IN epis_addendum.id_epis_addendum%TYPE,
        id_epis_sign_off_in         IN epis_addendum.id_epis_sign_off%TYPE DEFAULT NULL,
        id_professional_in          IN epis_addendum.id_professional%TYPE DEFAULT NULL,
        dt_event_in                 IN epis_addendum.dt_event%TYPE DEFAULT NULL,
        id_professional_sign_off_in IN epis_addendum.id_professional_sign_off%TYPE DEFAULT NULL,
        dt_sign_off_in              IN epis_addendum.dt_sign_off%TYPE DEFAULT NULL,
        flg_status_in               IN epis_addendum.flg_status%TYPE DEFAULT 'A',
        id_prof_cancel_in           IN epis_addendum.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in             IN epis_addendum.notes_cancel%TYPE DEFAULT NULL,
        dt_cancel_in                IN epis_addendum.dt_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in         IN epis_addendum.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in              IN epis_addendum.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_addendum.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_addendum.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_addendum.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_addendum.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_addendum.update_institution%TYPE DEFAULT NULL,
        ignore_if_null_in           IN BOOLEAN DEFAULT TRUE,
        handle_error_in             IN BOOLEAN DEFAULT TRUE,
        clob_columns_in             IN varchar2_t,
        clob_pieces_in              IN varchar2_t
    );

    /*
    END Special logic for handling LOB columns.
    */
    -- Insert one row, providing primary key if present
    PROCEDURE ins
    (
        id_epis_addendum_in         IN epis_addendum.id_epis_addendum%TYPE,
        id_epis_sign_off_in         IN epis_addendum.id_epis_sign_off%TYPE DEFAULT NULL,
        id_professional_in          IN epis_addendum.id_professional%TYPE DEFAULT NULL,
        dt_event_in                 IN epis_addendum.dt_event%TYPE DEFAULT NULL,
        id_professional_sign_off_in IN epis_addendum.id_professional_sign_off%TYPE DEFAULT NULL,
        dt_sign_off_in              IN epis_addendum.dt_sign_off%TYPE DEFAULT NULL,
        notes_in                    IN epis_addendum.notes%TYPE DEFAULT NULL,
        flg_status_in               IN epis_addendum.flg_status%TYPE DEFAULT 'A',
        id_prof_cancel_in           IN epis_addendum.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in             IN epis_addendum.notes_cancel%TYPE DEFAULT NULL,
        dt_cancel_in                IN epis_addendum.dt_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in         IN epis_addendum.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in              IN epis_addendum.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_addendum.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_addendum.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_addendum.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_addendum.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_addendum.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_epis_addendum_in         IN epis_addendum.id_epis_addendum%TYPE,
        id_epis_sign_off_in         IN epis_addendum.id_epis_sign_off%TYPE DEFAULT NULL,
        id_professional_in          IN epis_addendum.id_professional%TYPE DEFAULT NULL,
        dt_event_in                 IN epis_addendum.dt_event%TYPE DEFAULT NULL,
        id_professional_sign_off_in IN epis_addendum.id_professional_sign_off%TYPE DEFAULT NULL,
        dt_sign_off_in              IN epis_addendum.dt_sign_off%TYPE DEFAULT NULL,
        notes_in                    IN epis_addendum.notes%TYPE DEFAULT NULL,
        flg_status_in               IN epis_addendum.flg_status%TYPE DEFAULT 'A',
        id_prof_cancel_in           IN epis_addendum.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in             IN epis_addendum.notes_cancel%TYPE DEFAULT NULL,
        dt_cancel_in                IN epis_addendum.dt_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in         IN epis_addendum.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in              IN epis_addendum.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_addendum.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_addendum.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_addendum.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_addendum.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_addendum.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record.
    -- Specify whether or not a primary key value should be generated.
    PROCEDURE ins
    (
        rec_in          IN epis_addendum%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rec_in          IN epis_addendum%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers.
    PROCEDURE ins
    (
        rows_in         IN epis_addendum_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rows_in         IN epis_addendum_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Return next primary key value using the named sequence.
    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN epis_addendum.id_epis_addendum%TYPE;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_epis_sign_off_in         IN epis_addendum.id_epis_sign_off%TYPE DEFAULT NULL,
        id_professional_in          IN epis_addendum.id_professional%TYPE DEFAULT NULL,
        dt_event_in                 IN epis_addendum.dt_event%TYPE DEFAULT NULL,
        id_professional_sign_off_in IN epis_addendum.id_professional_sign_off%TYPE DEFAULT NULL,
        dt_sign_off_in              IN epis_addendum.dt_sign_off%TYPE DEFAULT NULL,
        notes_in                    IN epis_addendum.notes%TYPE DEFAULT NULL,
        flg_status_in               IN epis_addendum.flg_status%TYPE DEFAULT 'A',
        id_prof_cancel_in           IN epis_addendum.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in             IN epis_addendum.notes_cancel%TYPE DEFAULT NULL,
        dt_cancel_in                IN epis_addendum.dt_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in         IN epis_addendum.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in              IN epis_addendum.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_addendum.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_addendum.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_addendum.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_addendum.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_addendum.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_epis_sign_off_in         IN epis_addendum.id_epis_sign_off%TYPE DEFAULT NULL,
        id_professional_in          IN epis_addendum.id_professional%TYPE DEFAULT NULL,
        dt_event_in                 IN epis_addendum.dt_event%TYPE DEFAULT NULL,
        id_professional_sign_off_in IN epis_addendum.id_professional_sign_off%TYPE DEFAULT NULL,
        dt_sign_off_in              IN epis_addendum.dt_sign_off%TYPE DEFAULT NULL,
        notes_in                    IN epis_addendum.notes%TYPE DEFAULT NULL,
        flg_status_in               IN epis_addendum.flg_status%TYPE DEFAULT 'A',
        id_prof_cancel_in           IN epis_addendum.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in             IN epis_addendum.notes_cancel%TYPE DEFAULT NULL,
        dt_cancel_in                IN epis_addendum.dt_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in         IN epis_addendum.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in              IN epis_addendum.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_addendum.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_addendum.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_addendum.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_addendum.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_addendum.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_epis_sign_off_in         IN epis_addendum.id_epis_sign_off%TYPE DEFAULT NULL,
        id_professional_in          IN epis_addendum.id_professional%TYPE DEFAULT NULL,
        dt_event_in                 IN epis_addendum.dt_event%TYPE DEFAULT NULL,
        id_professional_sign_off_in IN epis_addendum.id_professional_sign_off%TYPE DEFAULT NULL,
        dt_sign_off_in              IN epis_addendum.dt_sign_off%TYPE DEFAULT NULL,
        notes_in                    IN epis_addendum.notes%TYPE DEFAULT NULL,
        flg_status_in               IN epis_addendum.flg_status%TYPE DEFAULT 'A',
        id_prof_cancel_in           IN epis_addendum.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in             IN epis_addendum.notes_cancel%TYPE DEFAULT NULL,
        dt_cancel_in                IN epis_addendum.dt_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in         IN epis_addendum.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in              IN epis_addendum.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_addendum.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_addendum.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_addendum.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_addendum.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_addendum.update_institution%TYPE DEFAULT NULL,
        id_epis_addendum_out        IN OUT epis_addendum.id_epis_addendum%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_epis_sign_off_in         IN epis_addendum.id_epis_sign_off%TYPE DEFAULT NULL,
        id_professional_in          IN epis_addendum.id_professional%TYPE DEFAULT NULL,
        dt_event_in                 IN epis_addendum.dt_event%TYPE DEFAULT NULL,
        id_professional_sign_off_in IN epis_addendum.id_professional_sign_off%TYPE DEFAULT NULL,
        dt_sign_off_in              IN epis_addendum.dt_sign_off%TYPE DEFAULT NULL,
        notes_in                    IN epis_addendum.notes%TYPE DEFAULT NULL,
        flg_status_in               IN epis_addendum.flg_status%TYPE DEFAULT 'A',
        id_prof_cancel_in           IN epis_addendum.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in             IN epis_addendum.notes_cancel%TYPE DEFAULT NULL,
        dt_cancel_in                IN epis_addendum.dt_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in         IN epis_addendum.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in              IN epis_addendum.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_addendum.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_addendum.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_addendum.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_addendum.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_addendum.update_institution%TYPE DEFAULT NULL,
        id_epis_addendum_out        IN OUT epis_addendum.id_epis_addendum%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_epis_sign_off_in         IN epis_addendum.id_epis_sign_off%TYPE DEFAULT NULL,
        id_professional_in          IN epis_addendum.id_professional%TYPE DEFAULT NULL,
        dt_event_in                 IN epis_addendum.dt_event%TYPE DEFAULT NULL,
        id_professional_sign_off_in IN epis_addendum.id_professional_sign_off%TYPE DEFAULT NULL,
        dt_sign_off_in              IN epis_addendum.dt_sign_off%TYPE DEFAULT NULL,
        notes_in                    IN epis_addendum.notes%TYPE DEFAULT NULL,
        flg_status_in               IN epis_addendum.flg_status%TYPE DEFAULT 'A',
        id_prof_cancel_in           IN epis_addendum.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in             IN epis_addendum.notes_cancel%TYPE DEFAULT NULL,
        dt_cancel_in                IN epis_addendum.dt_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in         IN epis_addendum.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in              IN epis_addendum.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_addendum.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_addendum.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_addendum.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_addendum.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_addendum.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN epis_addendum.id_epis_addendum%TYPE;

    FUNCTION ins
    (
        id_epis_sign_off_in         IN epis_addendum.id_epis_sign_off%TYPE DEFAULT NULL,
        id_professional_in          IN epis_addendum.id_professional%TYPE DEFAULT NULL,
        dt_event_in                 IN epis_addendum.dt_event%TYPE DEFAULT NULL,
        id_professional_sign_off_in IN epis_addendum.id_professional_sign_off%TYPE DEFAULT NULL,
        dt_sign_off_in              IN epis_addendum.dt_sign_off%TYPE DEFAULT NULL,
        notes_in                    IN epis_addendum.notes%TYPE DEFAULT NULL,
        flg_status_in               IN epis_addendum.flg_status%TYPE DEFAULT 'A',
        id_prof_cancel_in           IN epis_addendum.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in             IN epis_addendum.notes_cancel%TYPE DEFAULT NULL,
        dt_cancel_in                IN epis_addendum.dt_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in         IN epis_addendum.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in              IN epis_addendum.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_addendum.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_addendum.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_addendum.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_addendum.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_addendum.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN epis_addendum.id_epis_addendum%TYPE;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.

    PROCEDURE upd
    (
        id_epis_addendum_in          IN epis_addendum.id_epis_addendum%TYPE,
        id_epis_sign_off_in          IN epis_addendum.id_epis_sign_off%TYPE DEFAULT NULL,
        id_epis_sign_off_nin         IN BOOLEAN := TRUE,
        id_professional_in           IN epis_addendum.id_professional%TYPE DEFAULT NULL,
        id_professional_nin          IN BOOLEAN := TRUE,
        dt_event_in                  IN epis_addendum.dt_event%TYPE DEFAULT NULL,
        dt_event_nin                 IN BOOLEAN := TRUE,
        id_professional_sign_off_in  IN epis_addendum.id_professional_sign_off%TYPE DEFAULT NULL,
        id_professional_sign_off_nin IN BOOLEAN := TRUE,
        dt_sign_off_in               IN epis_addendum.dt_sign_off%TYPE DEFAULT NULL,
        dt_sign_off_nin              IN BOOLEAN := TRUE,
        notes_in                     IN epis_addendum.notes%TYPE DEFAULT NULL,
        notes_nin                    IN BOOLEAN := TRUE,
        flg_status_in                IN epis_addendum.flg_status%TYPE DEFAULT NULL,
        flg_status_nin               IN BOOLEAN := TRUE,
        id_prof_cancel_in            IN epis_addendum.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin           IN BOOLEAN := TRUE,
        notes_cancel_in              IN epis_addendum.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin             IN BOOLEAN := TRUE,
        dt_cancel_in                 IN epis_addendum.dt_cancel%TYPE DEFAULT NULL,
        dt_cancel_nin                IN BOOLEAN := TRUE,
        id_cancel_reason_in          IN epis_addendum.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin         IN BOOLEAN := TRUE,
        create_user_in               IN epis_addendum.create_user%TYPE DEFAULT NULL,
        create_user_nin              IN BOOLEAN := TRUE,
        create_time_in               IN epis_addendum.create_time%TYPE DEFAULT NULL,
        create_time_nin              IN BOOLEAN := TRUE,
        create_institution_in        IN epis_addendum.create_institution%TYPE DEFAULT NULL,
        create_institution_nin       IN BOOLEAN := TRUE,
        update_user_in               IN epis_addendum.update_user%TYPE DEFAULT NULL,
        update_user_nin              IN BOOLEAN := TRUE,
        update_time_in               IN epis_addendum.update_time%TYPE DEFAULT NULL,
        update_time_nin              IN BOOLEAN := TRUE,
        update_institution_in        IN epis_addendum.update_institution%TYPE DEFAULT NULL,
        update_institution_nin       IN BOOLEAN := TRUE,
        handle_error_in              IN BOOLEAN := TRUE,
        rows_out                     IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_epis_addendum_in          IN epis_addendum.id_epis_addendum%TYPE,
        id_epis_sign_off_in          IN epis_addendum.id_epis_sign_off%TYPE DEFAULT NULL,
        id_epis_sign_off_nin         IN BOOLEAN := TRUE,
        id_professional_in           IN epis_addendum.id_professional%TYPE DEFAULT NULL,
        id_professional_nin          IN BOOLEAN := TRUE,
        dt_event_in                  IN epis_addendum.dt_event%TYPE DEFAULT NULL,
        dt_event_nin                 IN BOOLEAN := TRUE,
        id_professional_sign_off_in  IN epis_addendum.id_professional_sign_off%TYPE DEFAULT NULL,
        id_professional_sign_off_nin IN BOOLEAN := TRUE,
        dt_sign_off_in               IN epis_addendum.dt_sign_off%TYPE DEFAULT NULL,
        dt_sign_off_nin              IN BOOLEAN := TRUE,
        notes_in                     IN epis_addendum.notes%TYPE DEFAULT NULL,
        notes_nin                    IN BOOLEAN := TRUE,
        flg_status_in                IN epis_addendum.flg_status%TYPE DEFAULT NULL,
        flg_status_nin               IN BOOLEAN := TRUE,
        id_prof_cancel_in            IN epis_addendum.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin           IN BOOLEAN := TRUE,
        notes_cancel_in              IN epis_addendum.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin             IN BOOLEAN := TRUE,
        dt_cancel_in                 IN epis_addendum.dt_cancel%TYPE DEFAULT NULL,
        dt_cancel_nin                IN BOOLEAN := TRUE,
        id_cancel_reason_in          IN epis_addendum.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin         IN BOOLEAN := TRUE,
        create_user_in               IN epis_addendum.create_user%TYPE DEFAULT NULL,
        create_user_nin              IN BOOLEAN := TRUE,
        create_time_in               IN epis_addendum.create_time%TYPE DEFAULT NULL,
        create_time_nin              IN BOOLEAN := TRUE,
        create_institution_in        IN epis_addendum.create_institution%TYPE DEFAULT NULL,
        create_institution_nin       IN BOOLEAN := TRUE,
        update_user_in               IN epis_addendum.update_user%TYPE DEFAULT NULL,
        update_user_nin              IN BOOLEAN := TRUE,
        update_time_in               IN epis_addendum.update_time%TYPE DEFAULT NULL,
        update_time_nin              IN BOOLEAN := TRUE,
        update_institution_in        IN epis_addendum.update_institution%TYPE DEFAULT NULL,
        update_institution_nin       IN BOOLEAN := TRUE,
        handle_error_in              IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        id_epis_sign_off_in          IN epis_addendum.id_epis_sign_off%TYPE DEFAULT NULL,
        id_epis_sign_off_nin         IN BOOLEAN := TRUE,
        id_professional_in           IN epis_addendum.id_professional%TYPE DEFAULT NULL,
        id_professional_nin          IN BOOLEAN := TRUE,
        dt_event_in                  IN epis_addendum.dt_event%TYPE DEFAULT NULL,
        dt_event_nin                 IN BOOLEAN := TRUE,
        id_professional_sign_off_in  IN epis_addendum.id_professional_sign_off%TYPE DEFAULT NULL,
        id_professional_sign_off_nin IN BOOLEAN := TRUE,
        dt_sign_off_in               IN epis_addendum.dt_sign_off%TYPE DEFAULT NULL,
        dt_sign_off_nin              IN BOOLEAN := TRUE,
        notes_in                     IN epis_addendum.notes%TYPE DEFAULT NULL,
        notes_nin                    IN BOOLEAN := TRUE,
        flg_status_in                IN epis_addendum.flg_status%TYPE DEFAULT NULL,
        flg_status_nin               IN BOOLEAN := TRUE,
        id_prof_cancel_in            IN epis_addendum.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin           IN BOOLEAN := TRUE,
        notes_cancel_in              IN epis_addendum.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin             IN BOOLEAN := TRUE,
        dt_cancel_in                 IN epis_addendum.dt_cancel%TYPE DEFAULT NULL,
        dt_cancel_nin                IN BOOLEAN := TRUE,
        id_cancel_reason_in          IN epis_addendum.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin         IN BOOLEAN := TRUE,
        create_user_in               IN epis_addendum.create_user%TYPE DEFAULT NULL,
        create_user_nin              IN BOOLEAN := TRUE,
        create_time_in               IN epis_addendum.create_time%TYPE DEFAULT NULL,
        create_time_nin              IN BOOLEAN := TRUE,
        create_institution_in        IN epis_addendum.create_institution%TYPE DEFAULT NULL,
        create_institution_nin       IN BOOLEAN := TRUE,
        update_user_in               IN epis_addendum.update_user%TYPE DEFAULT NULL,
        update_user_nin              IN BOOLEAN := TRUE,
        update_time_in               IN epis_addendum.update_time%TYPE DEFAULT NULL,
        update_time_nin              IN BOOLEAN := TRUE,
        update_institution_in        IN epis_addendum.update_institution%TYPE DEFAULT NULL,
        update_institution_nin       IN BOOLEAN := TRUE,
        where_in                     VARCHAR2 DEFAULT NULL,
        handle_error_in              IN BOOLEAN := TRUE,
        rows_out                     IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_epis_sign_off_in          IN epis_addendum.id_epis_sign_off%TYPE DEFAULT NULL,
        id_epis_sign_off_nin         IN BOOLEAN := TRUE,
        id_professional_in           IN epis_addendum.id_professional%TYPE DEFAULT NULL,
        id_professional_nin          IN BOOLEAN := TRUE,
        dt_event_in                  IN epis_addendum.dt_event%TYPE DEFAULT NULL,
        dt_event_nin                 IN BOOLEAN := TRUE,
        id_professional_sign_off_in  IN epis_addendum.id_professional_sign_off%TYPE DEFAULT NULL,
        id_professional_sign_off_nin IN BOOLEAN := TRUE,
        dt_sign_off_in               IN epis_addendum.dt_sign_off%TYPE DEFAULT NULL,
        dt_sign_off_nin              IN BOOLEAN := TRUE,
        notes_in                     IN epis_addendum.notes%TYPE DEFAULT NULL,
        notes_nin                    IN BOOLEAN := TRUE,
        flg_status_in                IN epis_addendum.flg_status%TYPE DEFAULT NULL,
        flg_status_nin               IN BOOLEAN := TRUE,
        id_prof_cancel_in            IN epis_addendum.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin           IN BOOLEAN := TRUE,
        notes_cancel_in              IN epis_addendum.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin             IN BOOLEAN := TRUE,
        dt_cancel_in                 IN epis_addendum.dt_cancel%TYPE DEFAULT NULL,
        dt_cancel_nin                IN BOOLEAN := TRUE,
        id_cancel_reason_in          IN epis_addendum.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin         IN BOOLEAN := TRUE,
        create_user_in               IN epis_addendum.create_user%TYPE DEFAULT NULL,
        create_user_nin              IN BOOLEAN := TRUE,
        create_time_in               IN epis_addendum.create_time%TYPE DEFAULT NULL,
        create_time_nin              IN BOOLEAN := TRUE,
        create_institution_in        IN epis_addendum.create_institution%TYPE DEFAULT NULL,
        create_institution_nin       IN BOOLEAN := TRUE,
        update_user_in               IN epis_addendum.update_user%TYPE DEFAULT NULL,
        update_user_nin              IN BOOLEAN := TRUE,
        update_time_in               IN epis_addendum.update_time%TYPE DEFAULT NULL,
        update_time_nin              IN BOOLEAN := TRUE,
        update_institution_in        IN epis_addendum.update_institution%TYPE DEFAULT NULL,
        update_institution_nin       IN BOOLEAN := TRUE,
        where_in                     VARCHAR2 DEFAULT NULL,
        handle_error_in              IN BOOLEAN := TRUE
    );

    PROCEDURE upd_ins
    (
        id_epis_addendum_in         IN epis_addendum.id_epis_addendum%TYPE,
        id_epis_sign_off_in         IN epis_addendum.id_epis_sign_off%TYPE DEFAULT NULL,
        id_professional_in          IN epis_addendum.id_professional%TYPE DEFAULT NULL,
        dt_event_in                 IN epis_addendum.dt_event%TYPE DEFAULT NULL,
        id_professional_sign_off_in IN epis_addendum.id_professional_sign_off%TYPE DEFAULT NULL,
        dt_sign_off_in              IN epis_addendum.dt_sign_off%TYPE DEFAULT NULL,
        notes_in                    IN epis_addendum.notes%TYPE DEFAULT NULL,
        flg_status_in               IN epis_addendum.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in           IN epis_addendum.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in             IN epis_addendum.notes_cancel%TYPE DEFAULT NULL,
        dt_cancel_in                IN epis_addendum.dt_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in         IN epis_addendum.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in              IN epis_addendum.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_addendum.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_addendum.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_addendum.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_addendum.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_addendum.update_institution%TYPE DEFAULT NULL,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    OUT table_varchar
    );

    PROCEDURE upd_ins
    (
        id_epis_addendum_in         IN epis_addendum.id_epis_addendum%TYPE,
        id_epis_sign_off_in         IN epis_addendum.id_epis_sign_off%TYPE DEFAULT NULL,
        id_professional_in          IN epis_addendum.id_professional%TYPE DEFAULT NULL,
        dt_event_in                 IN epis_addendum.dt_event%TYPE DEFAULT NULL,
        id_professional_sign_off_in IN epis_addendum.id_professional_sign_off%TYPE DEFAULT NULL,
        dt_sign_off_in              IN epis_addendum.dt_sign_off%TYPE DEFAULT NULL,
        notes_in                    IN epis_addendum.notes%TYPE DEFAULT NULL,
        flg_status_in               IN epis_addendum.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in           IN epis_addendum.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in             IN epis_addendum.notes_cancel%TYPE DEFAULT NULL,
        dt_cancel_in                IN epis_addendum.dt_cancel%TYPE DEFAULT NULL,
        id_cancel_reason_in         IN epis_addendum.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in              IN epis_addendum.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_addendum.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_addendum.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_addendum.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_addendum.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_addendum.update_institution%TYPE DEFAULT NULL,
        handle_error_in             IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        rec_in          IN epis_addendum%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    PROCEDURE upd
    (
        rec_in          IN epis_addendum%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        col_in            IN epis_addendum_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    PROCEDURE upd
    (
        col_in            IN epis_addendum_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_epis_addendum_in IN epis_addendum.id_epis_addendum%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_epis_addendum_in IN epis_addendum.id_epis_addendum%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    );

    -- Delete all rows for primary key column ID_EPIS_ADDENDUM
    PROCEDURE del_id_epis_addendum
    (
        id_epis_addendum_in IN epis_addendum.id_epis_addendum%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_EPIS_ADDENDUM
    PROCEDURE del_id_epis_addendum
    (
        id_epis_addendum_in IN epis_addendum.id_epis_addendum%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    );

    -- Delete all rows for this EA_CR_FK foreign key value
    PROCEDURE del_ea_cr_fk
    (
        id_cancel_reason_in IN epis_addendum.id_cancel_reason%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EA_CR_FK foreign key value
    PROCEDURE del_ea_cr_fk
    (
        id_cancel_reason_in IN epis_addendum.id_cancel_reason%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    );

    -- Delete all rows for this EA_ESO_FK foreign key value
    PROCEDURE del_ea_eso_fk
    (
        id_epis_sign_off_in IN epis_addendum.id_epis_sign_off%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EA_ESO_FK foreign key value
    PROCEDURE del_ea_eso_fk
    (
        id_epis_sign_off_in IN epis_addendum.id_epis_sign_off%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    );

    -- Delete all rows for this EA_PC_FK foreign key value
    PROCEDURE del_ea_pc_fk
    (
        id_prof_cancel_in IN epis_addendum.id_prof_cancel%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EA_PC_FK foreign key value
    PROCEDURE del_ea_pc_fk
    (
        id_prof_cancel_in IN epis_addendum.id_prof_cancel%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows for this EA_P_FK foreign key value
    PROCEDURE del_ea_p_fk
    (
        id_professional_in IN epis_addendum.id_professional%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EA_P_FK foreign key value
    PROCEDURE del_ea_p_fk
    (
        id_professional_in IN epis_addendum.id_professional%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    -- Delete all rows for this EA_PSO_FK foreign key value
    PROCEDURE del_ea_pso_fk
    (
        id_professional_sign_off_in IN epis_addendum.id_professional_sign_off%TYPE,
        handle_error_in             IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EA_PSO_FK foreign key value
    PROCEDURE del_ea_pso_fk
    (
        id_professional_sign_off_in IN epis_addendum.id_professional_sign_off%TYPE,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(epis_addendum_inout IN OUT epis_addendum%ROWTYPE);

    FUNCTION initrec RETURN epis_addendum%ROWTYPE;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN epis_addendum_tc;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN epis_addendum_tc;

END ts_epis_addendum;
/
