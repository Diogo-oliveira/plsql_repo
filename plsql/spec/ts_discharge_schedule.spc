/*-- Last Change Revision: $Rev: 2029114 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:49:51 +0100 (ter, 02 ago 2022) $*/


CREATE OR REPLACE PACKAGE ts_discharge_schedule
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2017-02-01 11:55:57
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on discharge_schedule
    TYPE discharge_schedule_tc IS TABLE OF discharge_schedule%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE discharge_schedule_ntt IS TABLE OF discharge_schedule%ROWTYPE;
    TYPE discharge_schedule_vat IS VARRAY(100) OF discharge_schedule%ROWTYPE;

    -- Column Collection based on column ID_DISCHARGE_SCHEDULE
    TYPE id_discharge_schedule_cc IS TABLE OF discharge_schedule.id_discharge_schedule%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_EPISODE
    TYPE id_episode_cc IS TABLE OF discharge_schedule.id_episode%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_PATIENT
    TYPE id_patient_cc IS TABLE OF discharge_schedule.id_patient%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column DT_DISCHARGE_SCHEDULE
    TYPE dt_discharge_schedule_cc IS TABLE OF discharge_schedule.dt_discharge_schedule%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column FLG_STATUS
    TYPE flg_status_cc IS TABLE OF discharge_schedule.flg_status%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_TIME
    TYPE create_time_cc IS TABLE OF discharge_schedule.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_INSTITUTION
    TYPE create_institution_cc IS TABLE OF discharge_schedule.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_USER
    TYPE update_user_cc IS TABLE OF discharge_schedule.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_TIME
    TYPE update_time_cc IS TABLE OF discharge_schedule.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_INSTITUTION
    TYPE update_institution_cc IS TABLE OF discharge_schedule.update_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column FLG_HOUR_ORIGIN
    TYPE flg_hour_origin_cc IS TABLE OF discharge_schedule.flg_hour_origin%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_USER
    TYPE create_user_cc IS TABLE OF discharge_schedule.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_PROF_REQ
    TYPE id_prof_req_cc IS TABLE OF discharge_schedule.id_prof_req%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column DT_REQ
    TYPE dt_req_cc IS TABLE OF discharge_schedule.dt_req%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present (with rows_out)
    PROCEDURE ins
    (
        id_discharge_schedule_in IN discharge_schedule.id_discharge_schedule%TYPE,
        id_episode_in            IN discharge_schedule.id_episode%TYPE DEFAULT NULL,
        id_patient_in            IN discharge_schedule.id_patient%TYPE DEFAULT NULL,
        dt_discharge_schedule_in IN discharge_schedule.dt_discharge_schedule%TYPE DEFAULT NULL,
        flg_status_in            IN discharge_schedule.flg_status%TYPE DEFAULT NULL,
        create_time_in           IN discharge_schedule.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN discharge_schedule.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN discharge_schedule.update_user%TYPE DEFAULT NULL,
        update_time_in           IN discharge_schedule.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN discharge_schedule.update_institution%TYPE DEFAULT NULL,
        flg_hour_origin_in       IN discharge_schedule.flg_hour_origin%TYPE DEFAULT NULL,
        create_user_in           IN discharge_schedule.create_user%TYPE DEFAULT NULL,
        id_prof_req_in           IN discharge_schedule.id_prof_req%TYPE DEFAULT NULL,
        dt_req_in                IN discharge_schedule.dt_req%TYPE DEFAULT NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert one row, providing primary key if present (without rows_out)
    PROCEDURE ins
    (
        id_discharge_schedule_in IN discharge_schedule.id_discharge_schedule%TYPE,
        id_episode_in            IN discharge_schedule.id_episode%TYPE DEFAULT NULL,
        id_patient_in            IN discharge_schedule.id_patient%TYPE DEFAULT NULL,
        dt_discharge_schedule_in IN discharge_schedule.dt_discharge_schedule%TYPE DEFAULT NULL,
        flg_status_in            IN discharge_schedule.flg_status%TYPE DEFAULT NULL,
        create_time_in           IN discharge_schedule.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN discharge_schedule.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN discharge_schedule.update_user%TYPE DEFAULT NULL,
        update_time_in           IN discharge_schedule.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN discharge_schedule.update_institution%TYPE DEFAULT NULL,
        flg_hour_origin_in       IN discharge_schedule.flg_hour_origin%TYPE DEFAULT NULL,
        create_user_in           IN discharge_schedule.create_user%TYPE DEFAULT NULL,
        id_prof_req_in           IN discharge_schedule.id_prof_req%TYPE DEFAULT NULL,
        dt_req_in                IN discharge_schedule.dt_req%TYPE DEFAULT NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN discharge_schedule%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN discharge_schedule%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN discharge_schedule_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN discharge_schedule_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Return next primary key value using the named sequence
    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN discharge_schedule.id_discharge_schedule%TYPE;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_episode_in            IN discharge_schedule.id_episode%TYPE DEFAULT NULL,
        id_patient_in            IN discharge_schedule.id_patient%TYPE DEFAULT NULL,
        dt_discharge_schedule_in IN discharge_schedule.dt_discharge_schedule%TYPE DEFAULT NULL,
        flg_status_in            IN discharge_schedule.flg_status%TYPE DEFAULT NULL,
        create_time_in           IN discharge_schedule.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN discharge_schedule.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN discharge_schedule.update_user%TYPE DEFAULT NULL,
        update_time_in           IN discharge_schedule.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN discharge_schedule.update_institution%TYPE DEFAULT NULL,
        flg_hour_origin_in       IN discharge_schedule.flg_hour_origin%TYPE DEFAULT NULL,
        create_user_in           IN discharge_schedule.create_user%TYPE DEFAULT NULL,
        id_prof_req_in           IN discharge_schedule.id_prof_req%TYPE DEFAULT NULL,
        dt_req_in                IN discharge_schedule.dt_req%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_episode_in            IN discharge_schedule.id_episode%TYPE DEFAULT NULL,
        id_patient_in            IN discharge_schedule.id_patient%TYPE DEFAULT NULL,
        dt_discharge_schedule_in IN discharge_schedule.dt_discharge_schedule%TYPE DEFAULT NULL,
        flg_status_in            IN discharge_schedule.flg_status%TYPE DEFAULT NULL,
        create_time_in           IN discharge_schedule.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN discharge_schedule.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN discharge_schedule.update_user%TYPE DEFAULT NULL,
        update_time_in           IN discharge_schedule.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN discharge_schedule.update_institution%TYPE DEFAULT NULL,
        flg_hour_origin_in       IN discharge_schedule.flg_hour_origin%TYPE DEFAULT NULL,
        create_user_in           IN discharge_schedule.create_user%TYPE DEFAULT NULL,
        id_prof_req_in           IN discharge_schedule.id_prof_req%TYPE DEFAULT NULL,
        dt_req_in                IN discharge_schedule.dt_req%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_episode_in             IN discharge_schedule.id_episode%TYPE DEFAULT NULL,
        id_patient_in             IN discharge_schedule.id_patient%TYPE DEFAULT NULL,
        dt_discharge_schedule_in  IN discharge_schedule.dt_discharge_schedule%TYPE DEFAULT NULL,
        flg_status_in             IN discharge_schedule.flg_status%TYPE DEFAULT NULL,
        create_time_in            IN discharge_schedule.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN discharge_schedule.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN discharge_schedule.update_user%TYPE DEFAULT NULL,
        update_time_in            IN discharge_schedule.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN discharge_schedule.update_institution%TYPE DEFAULT NULL,
        flg_hour_origin_in        IN discharge_schedule.flg_hour_origin%TYPE DEFAULT NULL,
        create_user_in            IN discharge_schedule.create_user%TYPE DEFAULT NULL,
        id_prof_req_in            IN discharge_schedule.id_prof_req%TYPE DEFAULT NULL,
        dt_req_in                 IN discharge_schedule.dt_req%TYPE DEFAULT NULL,
        id_discharge_schedule_out IN OUT discharge_schedule.id_discharge_schedule%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_episode_in             IN discharge_schedule.id_episode%TYPE DEFAULT NULL,
        id_patient_in             IN discharge_schedule.id_patient%TYPE DEFAULT NULL,
        dt_discharge_schedule_in  IN discharge_schedule.dt_discharge_schedule%TYPE DEFAULT NULL,
        flg_status_in             IN discharge_schedule.flg_status%TYPE DEFAULT NULL,
        create_time_in            IN discharge_schedule.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN discharge_schedule.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN discharge_schedule.update_user%TYPE DEFAULT NULL,
        update_time_in            IN discharge_schedule.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN discharge_schedule.update_institution%TYPE DEFAULT NULL,
        flg_hour_origin_in        IN discharge_schedule.flg_hour_origin%TYPE DEFAULT NULL,
        create_user_in            IN discharge_schedule.create_user%TYPE DEFAULT NULL,
        id_prof_req_in            IN discharge_schedule.id_prof_req%TYPE DEFAULT NULL,
        dt_req_in                 IN discharge_schedule.dt_req%TYPE DEFAULT NULL,
        id_discharge_schedule_out IN OUT discharge_schedule.id_discharge_schedule%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_episode_in            IN discharge_schedule.id_episode%TYPE DEFAULT NULL,
        id_patient_in            IN discharge_schedule.id_patient%TYPE DEFAULT NULL,
        dt_discharge_schedule_in IN discharge_schedule.dt_discharge_schedule%TYPE DEFAULT NULL,
        flg_status_in            IN discharge_schedule.flg_status%TYPE DEFAULT NULL,
        create_time_in           IN discharge_schedule.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN discharge_schedule.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN discharge_schedule.update_user%TYPE DEFAULT NULL,
        update_time_in           IN discharge_schedule.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN discharge_schedule.update_institution%TYPE DEFAULT NULL,
        flg_hour_origin_in       IN discharge_schedule.flg_hour_origin%TYPE DEFAULT NULL,
        create_user_in           IN discharge_schedule.create_user%TYPE DEFAULT NULL,
        id_prof_req_in           IN discharge_schedule.id_prof_req%TYPE DEFAULT NULL,
        dt_req_in                IN discharge_schedule.dt_req%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN discharge_schedule.id_discharge_schedule%TYPE;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_episode_in            IN discharge_schedule.id_episode%TYPE DEFAULT NULL,
        id_patient_in            IN discharge_schedule.id_patient%TYPE DEFAULT NULL,
        dt_discharge_schedule_in IN discharge_schedule.dt_discharge_schedule%TYPE DEFAULT NULL,
        flg_status_in            IN discharge_schedule.flg_status%TYPE DEFAULT NULL,
        create_time_in           IN discharge_schedule.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN discharge_schedule.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN discharge_schedule.update_user%TYPE DEFAULT NULL,
        update_time_in           IN discharge_schedule.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN discharge_schedule.update_institution%TYPE DEFAULT NULL,
        flg_hour_origin_in       IN discharge_schedule.flg_hour_origin%TYPE DEFAULT NULL,
        create_user_in           IN discharge_schedule.create_user%TYPE DEFAULT NULL,
        id_prof_req_in           IN discharge_schedule.id_prof_req%TYPE DEFAULT NULL,
        dt_req_in                IN discharge_schedule.dt_req%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN discharge_schedule.id_discharge_schedule%TYPE;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.

    PROCEDURE upd
    (
        id_discharge_schedule_in  IN discharge_schedule.id_discharge_schedule%TYPE,
        id_episode_in             IN discharge_schedule.id_episode%TYPE DEFAULT NULL,
        id_episode_nin            IN BOOLEAN := TRUE,
        id_patient_in             IN discharge_schedule.id_patient%TYPE DEFAULT NULL,
        id_patient_nin            IN BOOLEAN := TRUE,
        dt_discharge_schedule_in  IN discharge_schedule.dt_discharge_schedule%TYPE DEFAULT NULL,
        dt_discharge_schedule_nin IN BOOLEAN := TRUE,
        flg_status_in             IN discharge_schedule.flg_status%TYPE DEFAULT NULL,
        flg_status_nin            IN BOOLEAN := TRUE,
        create_time_in            IN discharge_schedule.create_time%TYPE DEFAULT NULL,
        create_time_nin           IN BOOLEAN := TRUE,
        create_institution_in     IN discharge_schedule.create_institution%TYPE DEFAULT NULL,
        create_institution_nin    IN BOOLEAN := TRUE,
        update_user_in            IN discharge_schedule.update_user%TYPE DEFAULT NULL,
        update_user_nin           IN BOOLEAN := TRUE,
        update_time_in            IN discharge_schedule.update_time%TYPE DEFAULT NULL,
        update_time_nin           IN BOOLEAN := TRUE,
        update_institution_in     IN discharge_schedule.update_institution%TYPE DEFAULT NULL,
        update_institution_nin    IN BOOLEAN := TRUE,
        flg_hour_origin_in        IN discharge_schedule.flg_hour_origin%TYPE DEFAULT NULL,
        flg_hour_origin_nin       IN BOOLEAN := TRUE,
        create_user_in            IN discharge_schedule.create_user%TYPE DEFAULT NULL,
        create_user_nin           IN BOOLEAN := TRUE,
        id_prof_req_in            IN discharge_schedule.id_prof_req%TYPE DEFAULT NULL,
        id_prof_req_nin           IN BOOLEAN := TRUE,
        dt_req_in                 IN discharge_schedule.dt_req%TYPE DEFAULT NULL,
        dt_req_nin                IN BOOLEAN := TRUE,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  IN OUT table_varchar
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_discharge_schedule_in  IN discharge_schedule.id_discharge_schedule%TYPE,
        id_episode_in             IN discharge_schedule.id_episode%TYPE DEFAULT NULL,
        id_episode_nin            IN BOOLEAN := TRUE,
        id_patient_in             IN discharge_schedule.id_patient%TYPE DEFAULT NULL,
        id_patient_nin            IN BOOLEAN := TRUE,
        dt_discharge_schedule_in  IN discharge_schedule.dt_discharge_schedule%TYPE DEFAULT NULL,
        dt_discharge_schedule_nin IN BOOLEAN := TRUE,
        flg_status_in             IN discharge_schedule.flg_status%TYPE DEFAULT NULL,
        flg_status_nin            IN BOOLEAN := TRUE,
        create_time_in            IN discharge_schedule.create_time%TYPE DEFAULT NULL,
        create_time_nin           IN BOOLEAN := TRUE,
        create_institution_in     IN discharge_schedule.create_institution%TYPE DEFAULT NULL,
        create_institution_nin    IN BOOLEAN := TRUE,
        update_user_in            IN discharge_schedule.update_user%TYPE DEFAULT NULL,
        update_user_nin           IN BOOLEAN := TRUE,
        update_time_in            IN discharge_schedule.update_time%TYPE DEFAULT NULL,
        update_time_nin           IN BOOLEAN := TRUE,
        update_institution_in     IN discharge_schedule.update_institution%TYPE DEFAULT NULL,
        update_institution_nin    IN BOOLEAN := TRUE,
        flg_hour_origin_in        IN discharge_schedule.flg_hour_origin%TYPE DEFAULT NULL,
        flg_hour_origin_nin       IN BOOLEAN := TRUE,
        create_user_in            IN discharge_schedule.create_user%TYPE DEFAULT NULL,
        create_user_nin           IN BOOLEAN := TRUE,
        id_prof_req_in            IN discharge_schedule.id_prof_req%TYPE DEFAULT NULL,
        id_prof_req_nin           IN BOOLEAN := TRUE,
        dt_req_in                 IN discharge_schedule.dt_req%TYPE DEFAULT NULL,
        dt_req_nin                IN BOOLEAN := TRUE,
        handle_error_in           IN BOOLEAN := TRUE
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_episode_in             IN discharge_schedule.id_episode%TYPE DEFAULT NULL,
        id_episode_nin            IN BOOLEAN := TRUE,
        id_patient_in             IN discharge_schedule.id_patient%TYPE DEFAULT NULL,
        id_patient_nin            IN BOOLEAN := TRUE,
        dt_discharge_schedule_in  IN discharge_schedule.dt_discharge_schedule%TYPE DEFAULT NULL,
        dt_discharge_schedule_nin IN BOOLEAN := TRUE,
        flg_status_in             IN discharge_schedule.flg_status%TYPE DEFAULT NULL,
        flg_status_nin            IN BOOLEAN := TRUE,
        create_time_in            IN discharge_schedule.create_time%TYPE DEFAULT NULL,
        create_time_nin           IN BOOLEAN := TRUE,
        create_institution_in     IN discharge_schedule.create_institution%TYPE DEFAULT NULL,
        create_institution_nin    IN BOOLEAN := TRUE,
        update_user_in            IN discharge_schedule.update_user%TYPE DEFAULT NULL,
        update_user_nin           IN BOOLEAN := TRUE,
        update_time_in            IN discharge_schedule.update_time%TYPE DEFAULT NULL,
        update_time_nin           IN BOOLEAN := TRUE,
        update_institution_in     IN discharge_schedule.update_institution%TYPE DEFAULT NULL,
        update_institution_nin    IN BOOLEAN := TRUE,
        flg_hour_origin_in        IN discharge_schedule.flg_hour_origin%TYPE DEFAULT NULL,
        flg_hour_origin_nin       IN BOOLEAN := TRUE,
        create_user_in            IN discharge_schedule.create_user%TYPE DEFAULT NULL,
        create_user_nin           IN BOOLEAN := TRUE,
        id_prof_req_in            IN discharge_schedule.id_prof_req%TYPE DEFAULT NULL,
        id_prof_req_nin           IN BOOLEAN := TRUE,
        dt_req_in                 IN discharge_schedule.dt_req%TYPE DEFAULT NULL,
        dt_req_nin                IN BOOLEAN := TRUE,
        where_in                  IN VARCHAR2,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  IN OUT table_varchar
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_episode_in             IN discharge_schedule.id_episode%TYPE DEFAULT NULL,
        id_episode_nin            IN BOOLEAN := TRUE,
        id_patient_in             IN discharge_schedule.id_patient%TYPE DEFAULT NULL,
        id_patient_nin            IN BOOLEAN := TRUE,
        dt_discharge_schedule_in  IN discharge_schedule.dt_discharge_schedule%TYPE DEFAULT NULL,
        dt_discharge_schedule_nin IN BOOLEAN := TRUE,
        flg_status_in             IN discharge_schedule.flg_status%TYPE DEFAULT NULL,
        flg_status_nin            IN BOOLEAN := TRUE,
        create_time_in            IN discharge_schedule.create_time%TYPE DEFAULT NULL,
        create_time_nin           IN BOOLEAN := TRUE,
        create_institution_in     IN discharge_schedule.create_institution%TYPE DEFAULT NULL,
        create_institution_nin    IN BOOLEAN := TRUE,
        update_user_in            IN discharge_schedule.update_user%TYPE DEFAULT NULL,
        update_user_nin           IN BOOLEAN := TRUE,
        update_time_in            IN discharge_schedule.update_time%TYPE DEFAULT NULL,
        update_time_nin           IN BOOLEAN := TRUE,
        update_institution_in     IN discharge_schedule.update_institution%TYPE DEFAULT NULL,
        update_institution_nin    IN BOOLEAN := TRUE,
        flg_hour_origin_in        IN discharge_schedule.flg_hour_origin%TYPE DEFAULT NULL,
        flg_hour_origin_nin       IN BOOLEAN := TRUE,
        create_user_in            IN discharge_schedule.create_user%TYPE DEFAULT NULL,
        create_user_nin           IN BOOLEAN := TRUE,
        id_prof_req_in            IN discharge_schedule.id_prof_req%TYPE DEFAULT NULL,
        id_prof_req_nin           IN BOOLEAN := TRUE,
        dt_req_in                 IN discharge_schedule.dt_req%TYPE DEFAULT NULL,
        dt_req_nin                IN BOOLEAN := TRUE,
        where_in                  IN VARCHAR2,
        handle_error_in           IN BOOLEAN := TRUE
    );

    --Update/insert with columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_discharge_schedule_in IN discharge_schedule.id_discharge_schedule%TYPE,
        id_episode_in            IN discharge_schedule.id_episode%TYPE DEFAULT NULL,
        id_patient_in            IN discharge_schedule.id_patient%TYPE DEFAULT NULL,
        dt_discharge_schedule_in IN discharge_schedule.dt_discharge_schedule%TYPE DEFAULT NULL,
        flg_status_in            IN discharge_schedule.flg_status%TYPE DEFAULT NULL,
        create_time_in           IN discharge_schedule.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN discharge_schedule.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN discharge_schedule.update_user%TYPE DEFAULT NULL,
        update_time_in           IN discharge_schedule.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN discharge_schedule.update_institution%TYPE DEFAULT NULL,
        flg_hour_origin_in       IN discharge_schedule.flg_hour_origin%TYPE DEFAULT NULL,
        create_user_in           IN discharge_schedule.create_user%TYPE DEFAULT NULL,
        id_prof_req_in           IN discharge_schedule.id_prof_req%TYPE DEFAULT NULL,
        dt_req_in                IN discharge_schedule.dt_req%TYPE DEFAULT NULL,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 IN OUT table_varchar
    );

    --Update/insert with columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_discharge_schedule_in IN discharge_schedule.id_discharge_schedule%TYPE,
        id_episode_in            IN discharge_schedule.id_episode%TYPE DEFAULT NULL,
        id_patient_in            IN discharge_schedule.id_patient%TYPE DEFAULT NULL,
        dt_discharge_schedule_in IN discharge_schedule.dt_discharge_schedule%TYPE DEFAULT NULL,
        flg_status_in            IN discharge_schedule.flg_status%TYPE DEFAULT NULL,
        create_time_in           IN discharge_schedule.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN discharge_schedule.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN discharge_schedule.update_user%TYPE DEFAULT NULL,
        update_time_in           IN discharge_schedule.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN discharge_schedule.update_institution%TYPE DEFAULT NULL,
        flg_hour_origin_in       IN discharge_schedule.flg_hour_origin%TYPE DEFAULT NULL,
        create_user_in           IN discharge_schedule.create_user%TYPE DEFAULT NULL,
        id_prof_req_in           IN discharge_schedule.id_prof_req%TYPE DEFAULT NULL,
        dt_req_in                IN discharge_schedule.dt_req%TYPE DEFAULT NULL,
        handle_error_in          IN BOOLEAN := TRUE
    );

    --Update record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN discharge_schedule%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    --Update record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN discharge_schedule%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    --Update collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN discharge_schedule_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    --Update collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN discharge_schedule_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    --increment column value
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_discharge_schedule_in IN discharge_schedule.id_discharge_schedule%TYPE,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 OUT table_varchar
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_discharge_schedule_in IN discharge_schedule.id_discharge_schedule%TYPE,
        handle_error_in          IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in          IN BOOLEAN := TRUE
    );

    -- Delete all rows for this DD_SCH_FK foreign key value
    PROCEDURE del_dd_sch_fk
    (
        id_prof_req_in  IN discharge_schedule.id_prof_req%TYPE,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 OUT table_varchar
    );

    -- Delete all rows for this DISCH_SCHED_EPIS_FK foreign key value
    PROCEDURE del_disch_sched_epis_fk
    (
        id_episode_in   IN discharge_schedule.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this DISCH_SCHED_PAT_FK foreign key value
    PROCEDURE del_disch_sched_pat_fk
    (
        id_patient_in   IN discharge_schedule.id_patient%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this DD_SCH_FK foreign key value
    PROCEDURE del_dd_sch_fk
    (
        id_prof_req_in  IN discharge_schedule.id_prof_req%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this DISCH_SCHED_EPIS_FK foreign key value
    PROCEDURE del_disch_sched_epis_fk
    (
        id_episode_in   IN discharge_schedule.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this DISCH_SCHED_PAT_FK foreign key value
    PROCEDURE del_disch_sched_pat_fk
    (
        id_patient_in   IN discharge_schedule.id_patient%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(discharge_schedule_inout IN OUT discharge_schedule%ROWTYPE);

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN discharge_schedule%ROWTYPE;

    -- Get data rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN discharge_schedule_tc;

    -- Get data rowid pragma autonomous transaccion
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN discharge_schedule_tc;

END ts_discharge_schedule;
/
