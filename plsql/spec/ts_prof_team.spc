/*-- Last Change Revision: $Rev: 2029326 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:51:03 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE ts_prof_team
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2020-01-16 14:36:54
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on prof_team
    TYPE prof_team_tc IS TABLE OF prof_team%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE prof_team_ntt IS TABLE OF prof_team%ROWTYPE;
    TYPE prof_team_vat IS VARRAY(100) OF prof_team%ROWTYPE;

    -- Column Collection based on column ID_PROF_TEAM
    TYPE id_prof_team_cc IS TABLE OF prof_team.id_prof_team%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_PROF_TEAM_LEADER
    TYPE id_prof_team_leader_cc IS TABLE OF prof_team.id_prof_team_leader%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column PROF_TEAM_NAME
    TYPE prof_team_name_cc IS TABLE OF prof_team.prof_team_name%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column PROF_TEAM_DESC
    TYPE prof_team_desc_cc IS TABLE OF prof_team.prof_team_desc%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column FLG_AVAILABLE
    TYPE flg_available_cc IS TABLE OF prof_team.flg_available%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column FLG_STATUS
    TYPE flg_status_cc IS TABLE OF prof_team.flg_status%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_SOFTWARE
    TYPE id_software_cc IS TABLE OF prof_team.id_software%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_INSTITUTION
    TYPE id_institution_cc IS TABLE OF prof_team.id_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ADW_LAST_UPDATE
    TYPE adw_last_update_cc IS TABLE OF prof_team.adw_last_update%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column FLG_TYPE
    TYPE flg_type_cc IS TABLE OF prof_team.flg_type%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column DT_BEGIN_TSTZ
    TYPE dt_begin_tstz_cc IS TABLE OF prof_team.dt_begin_tstz%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column DT_END_TSTZ
    TYPE dt_end_tstz_cc IS TABLE OF prof_team.dt_end_tstz%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_PROF_TEAM_OLD
    TYPE id_prof_team_old_cc IS TABLE OF prof_team.id_prof_team_old%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_DEPARTMENT
    TYPE id_department_cc IS TABLE OF prof_team.id_department%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column NOTES
    TYPE notes_cc IS TABLE OF prof_team.notes%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_CANCEL_REASON
    TYPE id_cancel_reason_cc IS TABLE OF prof_team.id_cancel_reason%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column NOTES_CANCEL
    TYPE notes_cancel_cc IS TABLE OF prof_team.notes_cancel%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column DT_CANCEL
    TYPE dt_cancel_cc IS TABLE OF prof_team.dt_cancel%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column NUM_MEMBERS
    TYPE num_members_cc IS TABLE OF prof_team.num_members%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_TIME
    TYPE create_time_cc IS TABLE OF prof_team.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_INSTITUTION
    TYPE create_institution_cc IS TABLE OF prof_team.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_USER
    TYPE update_user_cc IS TABLE OF prof_team.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_TIME
    TYPE update_time_cc IS TABLE OF prof_team.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_INSTITUTION
    TYPE update_institution_cc IS TABLE OF prof_team.update_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_PROF_REGISTER
    TYPE id_prof_register_cc IS TABLE OF prof_team.id_prof_register%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column DT_REGISTER
    TYPE dt_register_cc IS TABLE OF prof_team.dt_register%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_TEAM_TYPE
    TYPE id_team_type_cc IS TABLE OF prof_team.id_team_type%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_USER
    TYPE create_user_cc IS TABLE OF prof_team.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_EPISODE
    TYPE id_episode_cc IS TABLE OF prof_team.id_episode%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present (with rows_out)
    PROCEDURE ins
    (
        id_prof_team_in        IN prof_team.id_prof_team%TYPE,
        id_prof_team_leader_in IN prof_team.id_prof_team_leader%TYPE DEFAULT NULL,
        prof_team_name_in      IN prof_team.prof_team_name%TYPE DEFAULT NULL,
        prof_team_desc_in      IN prof_team.prof_team_desc%TYPE DEFAULT NULL,
        flg_available_in       IN prof_team.flg_available%TYPE DEFAULT NULL,
        flg_status_in          IN prof_team.flg_status%TYPE DEFAULT NULL,
        id_software_in         IN prof_team.id_software%TYPE DEFAULT NULL,
        id_institution_in      IN prof_team.id_institution%TYPE DEFAULT NULL,
        adw_last_update_in     IN prof_team.adw_last_update%TYPE DEFAULT NULL,
        flg_type_in            IN prof_team.flg_type%TYPE DEFAULT NULL,
        dt_begin_tstz_in       IN prof_team.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in         IN prof_team.dt_end_tstz%TYPE DEFAULT NULL,
        id_prof_team_old_in    IN prof_team.id_prof_team_old%TYPE DEFAULT NULL,
        id_department_in       IN prof_team.id_department%TYPE DEFAULT NULL,
        notes_in               IN prof_team.notes%TYPE DEFAULT NULL,
        id_cancel_reason_in    IN prof_team.id_cancel_reason%TYPE DEFAULT NULL,
        notes_cancel_in        IN prof_team.notes_cancel%TYPE DEFAULT NULL,
        dt_cancel_in           IN prof_team.dt_cancel%TYPE DEFAULT NULL,
        num_members_in         IN prof_team.num_members%TYPE DEFAULT NULL,
        create_time_in         IN prof_team.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN prof_team.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN prof_team.update_user%TYPE DEFAULT NULL,
        update_time_in         IN prof_team.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN prof_team.update_institution%TYPE DEFAULT NULL,
        id_prof_register_in    IN prof_team.id_prof_register%TYPE DEFAULT NULL,
        dt_register_in         IN prof_team.dt_register%TYPE DEFAULT NULL,
        id_team_type_in        IN prof_team.id_team_type%TYPE DEFAULT NULL,
        create_user_in         IN prof_team.create_user%TYPE DEFAULT NULL,
        id_episode_in          IN prof_team.id_episode%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    );

    -- Insert one row, providing primary key if present (without rows_out)
    PROCEDURE ins
    (
        id_prof_team_in        IN prof_team.id_prof_team%TYPE,
        id_prof_team_leader_in IN prof_team.id_prof_team_leader%TYPE DEFAULT NULL,
        prof_team_name_in      IN prof_team.prof_team_name%TYPE DEFAULT NULL,
        prof_team_desc_in      IN prof_team.prof_team_desc%TYPE DEFAULT NULL,
        flg_available_in       IN prof_team.flg_available%TYPE DEFAULT NULL,
        flg_status_in          IN prof_team.flg_status%TYPE DEFAULT NULL,
        id_software_in         IN prof_team.id_software%TYPE DEFAULT NULL,
        id_institution_in      IN prof_team.id_institution%TYPE DEFAULT NULL,
        adw_last_update_in     IN prof_team.adw_last_update%TYPE DEFAULT NULL,
        flg_type_in            IN prof_team.flg_type%TYPE DEFAULT NULL,
        dt_begin_tstz_in       IN prof_team.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in         IN prof_team.dt_end_tstz%TYPE DEFAULT NULL,
        id_prof_team_old_in    IN prof_team.id_prof_team_old%TYPE DEFAULT NULL,
        id_department_in       IN prof_team.id_department%TYPE DEFAULT NULL,
        notes_in               IN prof_team.notes%TYPE DEFAULT NULL,
        id_cancel_reason_in    IN prof_team.id_cancel_reason%TYPE DEFAULT NULL,
        notes_cancel_in        IN prof_team.notes_cancel%TYPE DEFAULT NULL,
        dt_cancel_in           IN prof_team.dt_cancel%TYPE DEFAULT NULL,
        num_members_in         IN prof_team.num_members%TYPE DEFAULT NULL,
        create_time_in         IN prof_team.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN prof_team.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN prof_team.update_user%TYPE DEFAULT NULL,
        update_time_in         IN prof_team.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN prof_team.update_institution%TYPE DEFAULT NULL,
        id_prof_register_in    IN prof_team.id_prof_register%TYPE DEFAULT NULL,
        dt_register_in         IN prof_team.dt_register%TYPE DEFAULT NULL,
        id_team_type_in        IN prof_team.id_team_type%TYPE DEFAULT NULL,
        create_user_in         IN prof_team.create_user%TYPE DEFAULT NULL,
        id_episode_in          IN prof_team.id_episode%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN prof_team%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN prof_team%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN prof_team_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN prof_team_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_prof_team_in         IN prof_team.id_prof_team%TYPE,
        id_prof_team_leader_in  IN prof_team.id_prof_team_leader%TYPE DEFAULT NULL,
        id_prof_team_leader_nin IN BOOLEAN := TRUE,
        prof_team_name_in       IN prof_team.prof_team_name%TYPE DEFAULT NULL,
        prof_team_name_nin      IN BOOLEAN := TRUE,
        prof_team_desc_in       IN prof_team.prof_team_desc%TYPE DEFAULT NULL,
        prof_team_desc_nin      IN BOOLEAN := TRUE,
        flg_available_in        IN prof_team.flg_available%TYPE DEFAULT NULL,
        flg_available_nin       IN BOOLEAN := TRUE,
        flg_status_in           IN prof_team.flg_status%TYPE DEFAULT NULL,
        flg_status_nin          IN BOOLEAN := TRUE,
        id_software_in          IN prof_team.id_software%TYPE DEFAULT NULL,
        id_software_nin         IN BOOLEAN := TRUE,
        id_institution_in       IN prof_team.id_institution%TYPE DEFAULT NULL,
        id_institution_nin      IN BOOLEAN := TRUE,
        adw_last_update_in      IN prof_team.adw_last_update%TYPE DEFAULT NULL,
        adw_last_update_nin     IN BOOLEAN := TRUE,
        flg_type_in             IN prof_team.flg_type%TYPE DEFAULT NULL,
        flg_type_nin            IN BOOLEAN := TRUE,
        dt_begin_tstz_in        IN prof_team.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_nin       IN BOOLEAN := TRUE,
        dt_end_tstz_in          IN prof_team.dt_end_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_nin         IN BOOLEAN := TRUE,
        id_prof_team_old_in     IN prof_team.id_prof_team_old%TYPE DEFAULT NULL,
        id_prof_team_old_nin    IN BOOLEAN := TRUE,
        id_department_in        IN prof_team.id_department%TYPE DEFAULT NULL,
        id_department_nin       IN BOOLEAN := TRUE,
        notes_in                IN prof_team.notes%TYPE DEFAULT NULL,
        notes_nin               IN BOOLEAN := TRUE,
        id_cancel_reason_in     IN prof_team.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin    IN BOOLEAN := TRUE,
        notes_cancel_in         IN prof_team.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin        IN BOOLEAN := TRUE,
        dt_cancel_in            IN prof_team.dt_cancel%TYPE DEFAULT NULL,
        dt_cancel_nin           IN BOOLEAN := TRUE,
        num_members_in          IN prof_team.num_members%TYPE DEFAULT NULL,
        num_members_nin         IN BOOLEAN := TRUE,
        create_time_in          IN prof_team.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN prof_team.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN prof_team.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN prof_team.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN prof_team.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        id_prof_register_in     IN prof_team.id_prof_register%TYPE DEFAULT NULL,
        id_prof_register_nin    IN BOOLEAN := TRUE,
        dt_register_in          IN prof_team.dt_register%TYPE DEFAULT NULL,
        dt_register_nin         IN BOOLEAN := TRUE,
        id_team_type_in         IN prof_team.id_team_type%TYPE DEFAULT NULL,
        id_team_type_nin        IN BOOLEAN := TRUE,
        create_user_in          IN prof_team.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        id_episode_in           IN prof_team.id_episode%TYPE DEFAULT NULL,
        id_episode_nin          IN BOOLEAN := TRUE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                IN OUT table_varchar
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_prof_team_in         IN prof_team.id_prof_team%TYPE,
        id_prof_team_leader_in  IN prof_team.id_prof_team_leader%TYPE DEFAULT NULL,
        id_prof_team_leader_nin IN BOOLEAN := TRUE,
        prof_team_name_in       IN prof_team.prof_team_name%TYPE DEFAULT NULL,
        prof_team_name_nin      IN BOOLEAN := TRUE,
        prof_team_desc_in       IN prof_team.prof_team_desc%TYPE DEFAULT NULL,
        prof_team_desc_nin      IN BOOLEAN := TRUE,
        flg_available_in        IN prof_team.flg_available%TYPE DEFAULT NULL,
        flg_available_nin       IN BOOLEAN := TRUE,
        flg_status_in           IN prof_team.flg_status%TYPE DEFAULT NULL,
        flg_status_nin          IN BOOLEAN := TRUE,
        id_software_in          IN prof_team.id_software%TYPE DEFAULT NULL,
        id_software_nin         IN BOOLEAN := TRUE,
        id_institution_in       IN prof_team.id_institution%TYPE DEFAULT NULL,
        id_institution_nin      IN BOOLEAN := TRUE,
        adw_last_update_in      IN prof_team.adw_last_update%TYPE DEFAULT NULL,
        adw_last_update_nin     IN BOOLEAN := TRUE,
        flg_type_in             IN prof_team.flg_type%TYPE DEFAULT NULL,
        flg_type_nin            IN BOOLEAN := TRUE,
        dt_begin_tstz_in        IN prof_team.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_nin       IN BOOLEAN := TRUE,
        dt_end_tstz_in          IN prof_team.dt_end_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_nin         IN BOOLEAN := TRUE,
        id_prof_team_old_in     IN prof_team.id_prof_team_old%TYPE DEFAULT NULL,
        id_prof_team_old_nin    IN BOOLEAN := TRUE,
        id_department_in        IN prof_team.id_department%TYPE DEFAULT NULL,
        id_department_nin       IN BOOLEAN := TRUE,
        notes_in                IN prof_team.notes%TYPE DEFAULT NULL,
        notes_nin               IN BOOLEAN := TRUE,
        id_cancel_reason_in     IN prof_team.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin    IN BOOLEAN := TRUE,
        notes_cancel_in         IN prof_team.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin        IN BOOLEAN := TRUE,
        dt_cancel_in            IN prof_team.dt_cancel%TYPE DEFAULT NULL,
        dt_cancel_nin           IN BOOLEAN := TRUE,
        num_members_in          IN prof_team.num_members%TYPE DEFAULT NULL,
        num_members_nin         IN BOOLEAN := TRUE,
        create_time_in          IN prof_team.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN prof_team.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN prof_team.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN prof_team.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN prof_team.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        id_prof_register_in     IN prof_team.id_prof_register%TYPE DEFAULT NULL,
        id_prof_register_nin    IN BOOLEAN := TRUE,
        dt_register_in          IN prof_team.dt_register%TYPE DEFAULT NULL,
        dt_register_nin         IN BOOLEAN := TRUE,
        id_team_type_in         IN prof_team.id_team_type%TYPE DEFAULT NULL,
        id_team_type_nin        IN BOOLEAN := TRUE,
        create_user_in          IN prof_team.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        id_episode_in           IN prof_team.id_episode%TYPE DEFAULT NULL,
        id_episode_nin          IN BOOLEAN := TRUE,
        handle_error_in         IN BOOLEAN := TRUE
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_prof_team_leader_in  IN prof_team.id_prof_team_leader%TYPE DEFAULT NULL,
        id_prof_team_leader_nin IN BOOLEAN := TRUE,
        prof_team_name_in       IN prof_team.prof_team_name%TYPE DEFAULT NULL,
        prof_team_name_nin      IN BOOLEAN := TRUE,
        prof_team_desc_in       IN prof_team.prof_team_desc%TYPE DEFAULT NULL,
        prof_team_desc_nin      IN BOOLEAN := TRUE,
        flg_available_in        IN prof_team.flg_available%TYPE DEFAULT NULL,
        flg_available_nin       IN BOOLEAN := TRUE,
        flg_status_in           IN prof_team.flg_status%TYPE DEFAULT NULL,
        flg_status_nin          IN BOOLEAN := TRUE,
        id_software_in          IN prof_team.id_software%TYPE DEFAULT NULL,
        id_software_nin         IN BOOLEAN := TRUE,
        id_institution_in       IN prof_team.id_institution%TYPE DEFAULT NULL,
        id_institution_nin      IN BOOLEAN := TRUE,
        adw_last_update_in      IN prof_team.adw_last_update%TYPE DEFAULT NULL,
        adw_last_update_nin     IN BOOLEAN := TRUE,
        flg_type_in             IN prof_team.flg_type%TYPE DEFAULT NULL,
        flg_type_nin            IN BOOLEAN := TRUE,
        dt_begin_tstz_in        IN prof_team.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_nin       IN BOOLEAN := TRUE,
        dt_end_tstz_in          IN prof_team.dt_end_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_nin         IN BOOLEAN := TRUE,
        id_prof_team_old_in     IN prof_team.id_prof_team_old%TYPE DEFAULT NULL,
        id_prof_team_old_nin    IN BOOLEAN := TRUE,
        id_department_in        IN prof_team.id_department%TYPE DEFAULT NULL,
        id_department_nin       IN BOOLEAN := TRUE,
        notes_in                IN prof_team.notes%TYPE DEFAULT NULL,
        notes_nin               IN BOOLEAN := TRUE,
        id_cancel_reason_in     IN prof_team.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin    IN BOOLEAN := TRUE,
        notes_cancel_in         IN prof_team.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin        IN BOOLEAN := TRUE,
        dt_cancel_in            IN prof_team.dt_cancel%TYPE DEFAULT NULL,
        dt_cancel_nin           IN BOOLEAN := TRUE,
        num_members_in          IN prof_team.num_members%TYPE DEFAULT NULL,
        num_members_nin         IN BOOLEAN := TRUE,
        create_time_in          IN prof_team.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN prof_team.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN prof_team.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN prof_team.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN prof_team.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        id_prof_register_in     IN prof_team.id_prof_register%TYPE DEFAULT NULL,
        id_prof_register_nin    IN BOOLEAN := TRUE,
        dt_register_in          IN prof_team.dt_register%TYPE DEFAULT NULL,
        dt_register_nin         IN BOOLEAN := TRUE,
        id_team_type_in         IN prof_team.id_team_type%TYPE DEFAULT NULL,
        id_team_type_nin        IN BOOLEAN := TRUE,
        create_user_in          IN prof_team.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        id_episode_in           IN prof_team.id_episode%TYPE DEFAULT NULL,
        id_episode_nin          IN BOOLEAN := TRUE,
        where_in                IN VARCHAR2,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                IN OUT table_varchar
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_prof_team_leader_in  IN prof_team.id_prof_team_leader%TYPE DEFAULT NULL,
        id_prof_team_leader_nin IN BOOLEAN := TRUE,
        prof_team_name_in       IN prof_team.prof_team_name%TYPE DEFAULT NULL,
        prof_team_name_nin      IN BOOLEAN := TRUE,
        prof_team_desc_in       IN prof_team.prof_team_desc%TYPE DEFAULT NULL,
        prof_team_desc_nin      IN BOOLEAN := TRUE,
        flg_available_in        IN prof_team.flg_available%TYPE DEFAULT NULL,
        flg_available_nin       IN BOOLEAN := TRUE,
        flg_status_in           IN prof_team.flg_status%TYPE DEFAULT NULL,
        flg_status_nin          IN BOOLEAN := TRUE,
        id_software_in          IN prof_team.id_software%TYPE DEFAULT NULL,
        id_software_nin         IN BOOLEAN := TRUE,
        id_institution_in       IN prof_team.id_institution%TYPE DEFAULT NULL,
        id_institution_nin      IN BOOLEAN := TRUE,
        adw_last_update_in      IN prof_team.adw_last_update%TYPE DEFAULT NULL,
        adw_last_update_nin     IN BOOLEAN := TRUE,
        flg_type_in             IN prof_team.flg_type%TYPE DEFAULT NULL,
        flg_type_nin            IN BOOLEAN := TRUE,
        dt_begin_tstz_in        IN prof_team.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_nin       IN BOOLEAN := TRUE,
        dt_end_tstz_in          IN prof_team.dt_end_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_nin         IN BOOLEAN := TRUE,
        id_prof_team_old_in     IN prof_team.id_prof_team_old%TYPE DEFAULT NULL,
        id_prof_team_old_nin    IN BOOLEAN := TRUE,
        id_department_in        IN prof_team.id_department%TYPE DEFAULT NULL,
        id_department_nin       IN BOOLEAN := TRUE,
        notes_in                IN prof_team.notes%TYPE DEFAULT NULL,
        notes_nin               IN BOOLEAN := TRUE,
        id_cancel_reason_in     IN prof_team.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin    IN BOOLEAN := TRUE,
        notes_cancel_in         IN prof_team.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin        IN BOOLEAN := TRUE,
        dt_cancel_in            IN prof_team.dt_cancel%TYPE DEFAULT NULL,
        dt_cancel_nin           IN BOOLEAN := TRUE,
        num_members_in          IN prof_team.num_members%TYPE DEFAULT NULL,
        num_members_nin         IN BOOLEAN := TRUE,
        create_time_in          IN prof_team.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN prof_team.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN prof_team.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN prof_team.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN prof_team.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        id_prof_register_in     IN prof_team.id_prof_register%TYPE DEFAULT NULL,
        id_prof_register_nin    IN BOOLEAN := TRUE,
        dt_register_in          IN prof_team.dt_register%TYPE DEFAULT NULL,
        dt_register_nin         IN BOOLEAN := TRUE,
        id_team_type_in         IN prof_team.id_team_type%TYPE DEFAULT NULL,
        id_team_type_nin        IN BOOLEAN := TRUE,
        create_user_in          IN prof_team.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        id_episode_in           IN prof_team.id_episode%TYPE DEFAULT NULL,
        id_episode_nin          IN BOOLEAN := TRUE,
        where_in                IN VARCHAR2,
        handle_error_in         IN BOOLEAN := TRUE
    );

    --Update/insert with columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_prof_team_in        IN prof_team.id_prof_team%TYPE,
        id_prof_team_leader_in IN prof_team.id_prof_team_leader%TYPE DEFAULT NULL,
        prof_team_name_in      IN prof_team.prof_team_name%TYPE DEFAULT NULL,
        prof_team_desc_in      IN prof_team.prof_team_desc%TYPE DEFAULT NULL,
        flg_available_in       IN prof_team.flg_available%TYPE DEFAULT NULL,
        flg_status_in          IN prof_team.flg_status%TYPE DEFAULT NULL,
        id_software_in         IN prof_team.id_software%TYPE DEFAULT NULL,
        id_institution_in      IN prof_team.id_institution%TYPE DEFAULT NULL,
        adw_last_update_in     IN prof_team.adw_last_update%TYPE DEFAULT NULL,
        flg_type_in            IN prof_team.flg_type%TYPE DEFAULT NULL,
        dt_begin_tstz_in       IN prof_team.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in         IN prof_team.dt_end_tstz%TYPE DEFAULT NULL,
        id_prof_team_old_in    IN prof_team.id_prof_team_old%TYPE DEFAULT NULL,
        id_department_in       IN prof_team.id_department%TYPE DEFAULT NULL,
        notes_in               IN prof_team.notes%TYPE DEFAULT NULL,
        id_cancel_reason_in    IN prof_team.id_cancel_reason%TYPE DEFAULT NULL,
        notes_cancel_in        IN prof_team.notes_cancel%TYPE DEFAULT NULL,
        dt_cancel_in           IN prof_team.dt_cancel%TYPE DEFAULT NULL,
        num_members_in         IN prof_team.num_members%TYPE DEFAULT NULL,
        create_time_in         IN prof_team.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN prof_team.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN prof_team.update_user%TYPE DEFAULT NULL,
        update_time_in         IN prof_team.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN prof_team.update_institution%TYPE DEFAULT NULL,
        id_prof_register_in    IN prof_team.id_prof_register%TYPE DEFAULT NULL,
        dt_register_in         IN prof_team.dt_register%TYPE DEFAULT NULL,
        id_team_type_in        IN prof_team.id_team_type%TYPE DEFAULT NULL,
        create_user_in         IN prof_team.create_user%TYPE DEFAULT NULL,
        id_episode_in          IN prof_team.id_episode%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               IN OUT table_varchar
    );

    --Update/insert with columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_prof_team_in        IN prof_team.id_prof_team%TYPE,
        id_prof_team_leader_in IN prof_team.id_prof_team_leader%TYPE DEFAULT NULL,
        prof_team_name_in      IN prof_team.prof_team_name%TYPE DEFAULT NULL,
        prof_team_desc_in      IN prof_team.prof_team_desc%TYPE DEFAULT NULL,
        flg_available_in       IN prof_team.flg_available%TYPE DEFAULT NULL,
        flg_status_in          IN prof_team.flg_status%TYPE DEFAULT NULL,
        id_software_in         IN prof_team.id_software%TYPE DEFAULT NULL,
        id_institution_in      IN prof_team.id_institution%TYPE DEFAULT NULL,
        adw_last_update_in     IN prof_team.adw_last_update%TYPE DEFAULT NULL,
        flg_type_in            IN prof_team.flg_type%TYPE DEFAULT NULL,
        dt_begin_tstz_in       IN prof_team.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in         IN prof_team.dt_end_tstz%TYPE DEFAULT NULL,
        id_prof_team_old_in    IN prof_team.id_prof_team_old%TYPE DEFAULT NULL,
        id_department_in       IN prof_team.id_department%TYPE DEFAULT NULL,
        notes_in               IN prof_team.notes%TYPE DEFAULT NULL,
        id_cancel_reason_in    IN prof_team.id_cancel_reason%TYPE DEFAULT NULL,
        notes_cancel_in        IN prof_team.notes_cancel%TYPE DEFAULT NULL,
        dt_cancel_in           IN prof_team.dt_cancel%TYPE DEFAULT NULL,
        num_members_in         IN prof_team.num_members%TYPE DEFAULT NULL,
        create_time_in         IN prof_team.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN prof_team.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN prof_team.update_user%TYPE DEFAULT NULL,
        update_time_in         IN prof_team.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN prof_team.update_institution%TYPE DEFAULT NULL,
        id_prof_register_in    IN prof_team.id_prof_register%TYPE DEFAULT NULL,
        dt_register_in         IN prof_team.dt_register%TYPE DEFAULT NULL,
        id_team_type_in        IN prof_team.id_team_type%TYPE DEFAULT NULL,
        create_user_in         IN prof_team.create_user%TYPE DEFAULT NULL,
        id_episode_in          IN prof_team.id_episode%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE
    );

    --Update record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN prof_team%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    --Update record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN prof_team%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    --Update collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN prof_team_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    --Update collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN prof_team_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    --increment column value
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_prof_team_in IN prof_team.id_prof_team%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_prof_team_in IN prof_team.id_prof_team%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PROF_TEAM_CRE_FK foreign key value
    PROCEDURE del_prof_team_cre_fk
    (
        id_cancel_reason_in IN prof_team.id_cancel_reason%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    );

    -- Delete all rows for this PROF_TEAM_DEP_FK foreign key value
    PROCEDURE del_prof_team_dep_fk
    (
        id_department_in IN prof_team.id_department%TYPE,
        handle_error_in  IN BOOLEAN := TRUE,
        rows_out         OUT table_varchar
    );

    -- Delete all rows for this PROF_TEAM_EPIS_FK foreign key value
    PROCEDURE del_prof_team_epis_fk
    (
        id_episode_in   IN prof_team.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this PROF_TEAM_INST_FK foreign key value
    PROCEDURE del_prof_team_inst_fk
    (
        id_institution_in IN prof_team.id_institution%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows for this PROF_TEAM_PROFRG_FK foreign key value
    PROCEDURE del_prof_team_profrg_fk
    (
        id_prof_register_in IN prof_team.id_prof_register%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    );

    -- Delete all rows for this PROF_TEAM_PROF_FK foreign key value
    PROCEDURE del_prof_team_prof_fk
    (
        id_prof_team_leader_in IN prof_team.id_prof_team_leader%TYPE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    );

    -- Delete all rows for this PROF_TEAM_S_FK foreign key value
    PROCEDURE del_prof_team_s_fk
    (
        id_software_in  IN prof_team.id_software%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this PROF_TEAM_TTYPE_FK foreign key value
    PROCEDURE del_prof_team_ttype_fk
    (
        id_team_type_in IN prof_team.id_team_type%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this PROF_TEAM_CRE_FK foreign key value
    PROCEDURE del_prof_team_cre_fk
    (
        id_cancel_reason_in IN prof_team.id_cancel_reason%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PROF_TEAM_DEP_FK foreign key value
    PROCEDURE del_prof_team_dep_fk
    (
        id_department_in IN prof_team.id_department%TYPE,
        handle_error_in  IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PROF_TEAM_EPIS_FK foreign key value
    PROCEDURE del_prof_team_epis_fk
    (
        id_episode_in   IN prof_team.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PROF_TEAM_INST_FK foreign key value
    PROCEDURE del_prof_team_inst_fk
    (
        id_institution_in IN prof_team.id_institution%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PROF_TEAM_PROFRG_FK foreign key value
    PROCEDURE del_prof_team_profrg_fk
    (
        id_prof_register_in IN prof_team.id_prof_register%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PROF_TEAM_PROF_FK foreign key value
    PROCEDURE del_prof_team_prof_fk
    (
        id_prof_team_leader_in IN prof_team.id_prof_team_leader%TYPE,
        handle_error_in        IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PROF_TEAM_S_FK foreign key value
    PROCEDURE del_prof_team_s_fk
    (
        id_software_in  IN prof_team.id_software%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PROF_TEAM_TTYPE_FK foreign key value
    PROCEDURE del_prof_team_ttype_fk
    (
        id_team_type_in IN prof_team.id_team_type%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(prof_team_inout IN OUT prof_team%ROWTYPE);

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN prof_team%ROWTYPE;

    -- Get data rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN prof_team_tc;

    -- Get data rowid pragma autonomous transaccion
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN prof_team_tc;

END ts_prof_team;
/
