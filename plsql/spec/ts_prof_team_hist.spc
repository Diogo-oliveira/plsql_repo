/*-- Last Change Revision: $Rev: 2029332 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:51:05 +0100 (ter, 02 ago 2022) $*/
CREATE OR REPLACE PACKAGE ts_prof_team_hist
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2020-01-28 12:01:38
| Created By: ALERT
*/
IS

-- Collection of %ROWTYPE records based on prof_team_hist
TYPE prof_team_hist_tc IS TABLE OF prof_team_hist%ROWTYPE INDEX BY BINARY_INTEGER;
TYPE prof_team_hist_ntt IS TABLE OF prof_team_hist%ROWTYPE;
TYPE prof_team_hist_vat IS VARRAY(100) OF prof_team_hist%ROWTYPE;

-- Column Collection based on column ID_PROF_TEAM_HIST
TYPE ID_PROF_TEAM_HIST_CC IS TABLE OF prof_team_hist.ID_PROF_TEAM_HIST%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column ID_PROF_TEAM
TYPE ID_PROF_TEAM_CC IS TABLE OF prof_team_hist.ID_PROF_TEAM%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column ID_PROF_TEAM_LEADER
TYPE ID_PROF_TEAM_LEADER_CC IS TABLE OF prof_team_hist.ID_PROF_TEAM_LEADER%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column PROF_TEAM_NAME
TYPE PROF_TEAM_NAME_CC IS TABLE OF prof_team_hist.PROF_TEAM_NAME%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column PROF_TEAM_DESC
TYPE PROF_TEAM_DESC_CC IS TABLE OF prof_team_hist.PROF_TEAM_DESC%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column FLG_AVAILABLE
TYPE FLG_AVAILABLE_CC IS TABLE OF prof_team_hist.FLG_AVAILABLE%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column FLG_STATUS
TYPE FLG_STATUS_CC IS TABLE OF prof_team_hist.FLG_STATUS%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column ID_SOFTWARE
TYPE ID_SOFTWARE_CC IS TABLE OF prof_team_hist.ID_SOFTWARE%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column ID_INSTITUTION
TYPE ID_INSTITUTION_CC IS TABLE OF prof_team_hist.ID_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column FLG_TYPE
TYPE FLG_TYPE_CC IS TABLE OF prof_team_hist.FLG_TYPE%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column DT_BEGIN_TSTZ
TYPE DT_BEGIN_TSTZ_CC IS TABLE OF prof_team_hist.DT_BEGIN_TSTZ%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column DT_END_TSTZ
TYPE DT_END_TSTZ_CC IS TABLE OF prof_team_hist.DT_END_TSTZ%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column ID_DEPARTMENT
TYPE ID_DEPARTMENT_CC IS TABLE OF prof_team_hist.ID_DEPARTMENT%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column NOTES
TYPE NOTES_CC IS TABLE OF prof_team_hist.NOTES%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column CREATE_TIME
TYPE CREATE_TIME_CC IS TABLE OF prof_team_hist.CREATE_TIME%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column FLG_TYPE_REGISTER
TYPE FLG_TYPE_REGISTER_CC IS TABLE OF prof_team_hist.FLG_TYPE_REGISTER%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column CREATE_INSTITUTION
TYPE CREATE_INSTITUTION_CC IS TABLE OF prof_team_hist.CREATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column UPDATE_USER
TYPE UPDATE_USER_CC IS TABLE OF prof_team_hist.UPDATE_USER%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column UPDATE_TIME
TYPE UPDATE_TIME_CC IS TABLE OF prof_team_hist.UPDATE_TIME%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column UPDATE_INSTITUTION
TYPE UPDATE_INSTITUTION_CC IS TABLE OF prof_team_hist.UPDATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column ID_PROF_REGISTER
TYPE ID_PROF_REGISTER_CC IS TABLE OF prof_team_hist.ID_PROF_REGISTER%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column DT_REGISTER
TYPE DT_REGISTER_CC IS TABLE OF prof_team_hist.DT_REGISTER%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column ID_TEAM_TYPE
TYPE ID_TEAM_TYPE_CC IS TABLE OF prof_team_hist.ID_TEAM_TYPE%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column CREATE_USER
TYPE CREATE_USER_CC IS TABLE OF prof_team_hist.CREATE_USER%TYPE INDEX BY BINARY_INTEGER;
-- Column Collection based on column ID_EPISODE
TYPE ID_EPISODE_CC IS TABLE OF prof_team_hist.ID_EPISODE%TYPE INDEX BY BINARY_INTEGER;

-- Insert one row, providing primary key if present (with rows_out)
PROCEDURE ins
(
ID_PROF_TEAM_HIST_in IN prof_team_hist.ID_PROF_TEAM_HIST%TYPE,
ID_PROF_TEAM_in IN PROF_TEAM_HIST.ID_PROF_TEAM%TYPE DEFAULT NULL,
ID_PROF_TEAM_LEADER_in IN PROF_TEAM_HIST.ID_PROF_TEAM_LEADER%TYPE DEFAULT NULL,
PROF_TEAM_NAME_in IN PROF_TEAM_HIST.PROF_TEAM_NAME%TYPE DEFAULT NULL,
PROF_TEAM_DESC_in IN PROF_TEAM_HIST.PROF_TEAM_DESC%TYPE DEFAULT NULL,
FLG_AVAILABLE_in IN PROF_TEAM_HIST.FLG_AVAILABLE%TYPE DEFAULT NULL,
FLG_STATUS_in IN PROF_TEAM_HIST.FLG_STATUS%TYPE DEFAULT NULL,
ID_SOFTWARE_in IN PROF_TEAM_HIST.ID_SOFTWARE%TYPE DEFAULT NULL,
ID_INSTITUTION_in IN PROF_TEAM_HIST.ID_INSTITUTION%TYPE DEFAULT NULL,
FLG_TYPE_in IN PROF_TEAM_HIST.FLG_TYPE%TYPE DEFAULT NULL,
DT_BEGIN_TSTZ_in IN PROF_TEAM_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
DT_END_TSTZ_in IN PROF_TEAM_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
ID_DEPARTMENT_in IN PROF_TEAM_HIST.ID_DEPARTMENT%TYPE DEFAULT NULL,
NOTES_in IN PROF_TEAM_HIST.NOTES%TYPE DEFAULT NULL,
CREATE_TIME_in IN PROF_TEAM_HIST.CREATE_TIME%TYPE DEFAULT NULL,
FLG_TYPE_REGISTER_in IN PROF_TEAM_HIST.FLG_TYPE_REGISTER%TYPE DEFAULT NULL,
CREATE_INSTITUTION_in IN PROF_TEAM_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
UPDATE_USER_in IN PROF_TEAM_HIST.UPDATE_USER%TYPE DEFAULT NULL,
UPDATE_TIME_in IN PROF_TEAM_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
UPDATE_INSTITUTION_in IN PROF_TEAM_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
ID_PROF_REGISTER_in IN PROF_TEAM_HIST.ID_PROF_REGISTER%TYPE DEFAULT NULL,
DT_REGISTER_in IN PROF_TEAM_HIST.DT_REGISTER%TYPE DEFAULT NULL,
ID_TEAM_TYPE_in IN PROF_TEAM_HIST.ID_TEAM_TYPE%TYPE DEFAULT NULL,
CREATE_USER_in IN PROF_TEAM_HIST.CREATE_USER%TYPE DEFAULT NULL,
ID_EPISODE_in IN PROF_TEAM_HIST.ID_EPISODE%TYPE DEFAULT NULL,
handle_error_in IN BOOLEAN := TRUE,
rows_out OUT table_varchar
);

-- Insert one row, providing primary key if present (without rows_out)
PROCEDURE ins
(
ID_PROF_TEAM_HIST_in IN prof_team_hist.ID_PROF_TEAM_HIST%TYPE,
ID_PROF_TEAM_in IN PROF_TEAM_HIST.ID_PROF_TEAM%TYPE DEFAULT NULL,
ID_PROF_TEAM_LEADER_in IN PROF_TEAM_HIST.ID_PROF_TEAM_LEADER%TYPE DEFAULT NULL,
PROF_TEAM_NAME_in IN PROF_TEAM_HIST.PROF_TEAM_NAME%TYPE DEFAULT NULL,
PROF_TEAM_DESC_in IN PROF_TEAM_HIST.PROF_TEAM_DESC%TYPE DEFAULT NULL,
FLG_AVAILABLE_in IN PROF_TEAM_HIST.FLG_AVAILABLE%TYPE DEFAULT NULL,
FLG_STATUS_in IN PROF_TEAM_HIST.FLG_STATUS%TYPE DEFAULT NULL,
ID_SOFTWARE_in IN PROF_TEAM_HIST.ID_SOFTWARE%TYPE DEFAULT NULL,
ID_INSTITUTION_in IN PROF_TEAM_HIST.ID_INSTITUTION%TYPE DEFAULT NULL,
FLG_TYPE_in IN PROF_TEAM_HIST.FLG_TYPE%TYPE DEFAULT NULL,
DT_BEGIN_TSTZ_in IN PROF_TEAM_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
DT_END_TSTZ_in IN PROF_TEAM_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
ID_DEPARTMENT_in IN PROF_TEAM_HIST.ID_DEPARTMENT%TYPE DEFAULT NULL,
NOTES_in IN PROF_TEAM_HIST.NOTES%TYPE DEFAULT NULL,
CREATE_TIME_in IN PROF_TEAM_HIST.CREATE_TIME%TYPE DEFAULT NULL,
FLG_TYPE_REGISTER_in IN PROF_TEAM_HIST.FLG_TYPE_REGISTER%TYPE DEFAULT NULL,
CREATE_INSTITUTION_in IN PROF_TEAM_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
UPDATE_USER_in IN PROF_TEAM_HIST.UPDATE_USER%TYPE DEFAULT NULL,
UPDATE_TIME_in IN PROF_TEAM_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
UPDATE_INSTITUTION_in IN PROF_TEAM_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
ID_PROF_REGISTER_in IN PROF_TEAM_HIST.ID_PROF_REGISTER%TYPE DEFAULT NULL,
DT_REGISTER_in IN PROF_TEAM_HIST.DT_REGISTER%TYPE DEFAULT NULL,
ID_TEAM_TYPE_in IN PROF_TEAM_HIST.ID_TEAM_TYPE%TYPE DEFAULT NULL,
CREATE_USER_in IN PROF_TEAM_HIST.CREATE_USER%TYPE DEFAULT NULL,
ID_EPISODE_in IN PROF_TEAM_HIST.ID_EPISODE%TYPE DEFAULT NULL,
handle_error_in IN BOOLEAN := TRUE
);

-- Insert a row based on a record
-- Specify whether or not a primary key value should be generated
PROCEDURE ins
(
rec_in          IN prof_team_hist%ROWTYPE,
gen_pky_in      IN BOOLEAN DEFAULT FALSE,
sequence_in     IN VARCHAR2 := NULL,
handle_error_in IN BOOLEAN := TRUE,
rows_out        OUT table_varchar
);

-- Insert a row based on a record
-- Specify whether or not a primary key value should be generated
PROCEDURE ins
(
rec_in          IN prof_team_hist%ROWTYPE,
gen_pky_in      IN BOOLEAN DEFAULT FALSE,
sequence_in     IN VARCHAR2 := NULL,
handle_error_in IN BOOLEAN := TRUE
);

-- Insert a collection of rows using FORALL; all primary key values
-- must have already been generated, or are handled in triggers
PROCEDURE ins
(
rows_in         IN prof_team_hist_tc,
handle_error_in IN BOOLEAN := TRUE,
rows_out        OUT table_varchar
);

-- Insert a collection of rows using FORALL; all primary key values
-- must have already been generated, or are handled in triggers
PROCEDURE ins
(
rows_in         IN prof_team_hist_tc,
handle_error_in IN BOOLEAN := TRUE
);

-- Update any/all columns by primary key. If you pass NULL, then
-- the current column value is set to itself. If you need a more
-- selected UPDATE then use one of the onecol procedures below.
PROCEDURE upd
(
ID_PROF_TEAM_HIST_in IN prof_team_hist.ID_PROF_TEAM_HIST%TYPE,
ID_PROF_TEAM_in IN PROF_TEAM_HIST.ID_PROF_TEAM%TYPE DEFAULT NULL,
ID_PROF_TEAM_nin IN BOOLEAN := TRUE,
ID_PROF_TEAM_LEADER_in IN PROF_TEAM_HIST.ID_PROF_TEAM_LEADER%TYPE DEFAULT NULL,
ID_PROF_TEAM_LEADER_nin IN BOOLEAN := TRUE,
PROF_TEAM_NAME_in IN PROF_TEAM_HIST.PROF_TEAM_NAME%TYPE DEFAULT NULL,
PROF_TEAM_NAME_nin IN BOOLEAN := TRUE,
PROF_TEAM_DESC_in IN PROF_TEAM_HIST.PROF_TEAM_DESC%TYPE DEFAULT NULL,
PROF_TEAM_DESC_nin IN BOOLEAN := TRUE,
FLG_AVAILABLE_in IN PROF_TEAM_HIST.FLG_AVAILABLE%TYPE DEFAULT NULL,
FLG_AVAILABLE_nin IN BOOLEAN := TRUE,
FLG_STATUS_in IN PROF_TEAM_HIST.FLG_STATUS%TYPE DEFAULT NULL,
FLG_STATUS_nin IN BOOLEAN := TRUE,
ID_SOFTWARE_in IN PROF_TEAM_HIST.ID_SOFTWARE%TYPE DEFAULT NULL,
ID_SOFTWARE_nin IN BOOLEAN := TRUE,
ID_INSTITUTION_in IN PROF_TEAM_HIST.ID_INSTITUTION%TYPE DEFAULT NULL,
ID_INSTITUTION_nin IN BOOLEAN := TRUE,
FLG_TYPE_in IN PROF_TEAM_HIST.FLG_TYPE%TYPE DEFAULT NULL,
FLG_TYPE_nin IN BOOLEAN := TRUE,
DT_BEGIN_TSTZ_in IN PROF_TEAM_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
DT_BEGIN_TSTZ_nin IN BOOLEAN := TRUE,
DT_END_TSTZ_in IN PROF_TEAM_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
DT_END_TSTZ_nin IN BOOLEAN := TRUE,
ID_DEPARTMENT_in IN PROF_TEAM_HIST.ID_DEPARTMENT%TYPE DEFAULT NULL,
ID_DEPARTMENT_nin IN BOOLEAN := TRUE,
NOTES_in IN PROF_TEAM_HIST.NOTES%TYPE DEFAULT NULL,
NOTES_nin IN BOOLEAN := TRUE,
CREATE_TIME_in IN PROF_TEAM_HIST.CREATE_TIME%TYPE DEFAULT NULL,
CREATE_TIME_nin IN BOOLEAN := TRUE,
FLG_TYPE_REGISTER_in IN PROF_TEAM_HIST.FLG_TYPE_REGISTER%TYPE DEFAULT NULL,
FLG_TYPE_REGISTER_nin IN BOOLEAN := TRUE,
CREATE_INSTITUTION_in IN PROF_TEAM_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
UPDATE_USER_in IN PROF_TEAM_HIST.UPDATE_USER%TYPE DEFAULT NULL,
UPDATE_USER_nin IN BOOLEAN := TRUE,
UPDATE_TIME_in IN PROF_TEAM_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
UPDATE_TIME_nin IN BOOLEAN := TRUE,
UPDATE_INSTITUTION_in IN PROF_TEAM_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
ID_PROF_REGISTER_in IN PROF_TEAM_HIST.ID_PROF_REGISTER%TYPE DEFAULT NULL,
ID_PROF_REGISTER_nin IN BOOLEAN := TRUE,
DT_REGISTER_in IN PROF_TEAM_HIST.DT_REGISTER%TYPE DEFAULT NULL,
DT_REGISTER_nin IN BOOLEAN := TRUE,
ID_TEAM_TYPE_in IN PROF_TEAM_HIST.ID_TEAM_TYPE%TYPE DEFAULT NULL,
ID_TEAM_TYPE_nin IN BOOLEAN := TRUE,
CREATE_USER_in IN PROF_TEAM_HIST.CREATE_USER%TYPE DEFAULT NULL,
CREATE_USER_nin IN BOOLEAN := TRUE,
ID_EPISODE_in IN PROF_TEAM_HIST.ID_EPISODE%TYPE DEFAULT NULL,
ID_EPISODE_nin IN BOOLEAN := TRUE,
handle_error_in        IN BOOLEAN := TRUE,
rows_out               IN OUT table_varchar
);

-- Update any/all columns by primary key. If you pass NULL, then
-- the current column value is set to itself. If you need a more
-- selected UPDATE then use one of the onecol procedures below.
PROCEDURE upd
(
ID_PROF_TEAM_HIST_in IN prof_team_hist.ID_PROF_TEAM_HIST%TYPE,
ID_PROF_TEAM_in IN PROF_TEAM_HIST.ID_PROF_TEAM%TYPE DEFAULT NULL,
ID_PROF_TEAM_nin IN BOOLEAN := TRUE,
ID_PROF_TEAM_LEADER_in IN PROF_TEAM_HIST.ID_PROF_TEAM_LEADER%TYPE DEFAULT NULL,
ID_PROF_TEAM_LEADER_nin IN BOOLEAN := TRUE,
PROF_TEAM_NAME_in IN PROF_TEAM_HIST.PROF_TEAM_NAME%TYPE DEFAULT NULL,
PROF_TEAM_NAME_nin IN BOOLEAN := TRUE,
PROF_TEAM_DESC_in IN PROF_TEAM_HIST.PROF_TEAM_DESC%TYPE DEFAULT NULL,
PROF_TEAM_DESC_nin IN BOOLEAN := TRUE,
FLG_AVAILABLE_in IN PROF_TEAM_HIST.FLG_AVAILABLE%TYPE DEFAULT NULL,
FLG_AVAILABLE_nin IN BOOLEAN := TRUE,
FLG_STATUS_in IN PROF_TEAM_HIST.FLG_STATUS%TYPE DEFAULT NULL,
FLG_STATUS_nin IN BOOLEAN := TRUE,
ID_SOFTWARE_in IN PROF_TEAM_HIST.ID_SOFTWARE%TYPE DEFAULT NULL,
ID_SOFTWARE_nin IN BOOLEAN := TRUE,
ID_INSTITUTION_in IN PROF_TEAM_HIST.ID_INSTITUTION%TYPE DEFAULT NULL,
ID_INSTITUTION_nin IN BOOLEAN := TRUE,
FLG_TYPE_in IN PROF_TEAM_HIST.FLG_TYPE%TYPE DEFAULT NULL,
FLG_TYPE_nin IN BOOLEAN := TRUE,
DT_BEGIN_TSTZ_in IN PROF_TEAM_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
DT_BEGIN_TSTZ_nin IN BOOLEAN := TRUE,
DT_END_TSTZ_in IN PROF_TEAM_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
DT_END_TSTZ_nin IN BOOLEAN := TRUE,
ID_DEPARTMENT_in IN PROF_TEAM_HIST.ID_DEPARTMENT%TYPE DEFAULT NULL,
ID_DEPARTMENT_nin IN BOOLEAN := TRUE,
NOTES_in IN PROF_TEAM_HIST.NOTES%TYPE DEFAULT NULL,
NOTES_nin IN BOOLEAN := TRUE,
CREATE_TIME_in IN PROF_TEAM_HIST.CREATE_TIME%TYPE DEFAULT NULL,
CREATE_TIME_nin IN BOOLEAN := TRUE,
FLG_TYPE_REGISTER_in IN PROF_TEAM_HIST.FLG_TYPE_REGISTER%TYPE DEFAULT NULL,
FLG_TYPE_REGISTER_nin IN BOOLEAN := TRUE,
CREATE_INSTITUTION_in IN PROF_TEAM_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
UPDATE_USER_in IN PROF_TEAM_HIST.UPDATE_USER%TYPE DEFAULT NULL,
UPDATE_USER_nin IN BOOLEAN := TRUE,
UPDATE_TIME_in IN PROF_TEAM_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
UPDATE_TIME_nin IN BOOLEAN := TRUE,
UPDATE_INSTITUTION_in IN PROF_TEAM_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
ID_PROF_REGISTER_in IN PROF_TEAM_HIST.ID_PROF_REGISTER%TYPE DEFAULT NULL,
ID_PROF_REGISTER_nin IN BOOLEAN := TRUE,
DT_REGISTER_in IN PROF_TEAM_HIST.DT_REGISTER%TYPE DEFAULT NULL,
DT_REGISTER_nin IN BOOLEAN := TRUE,
ID_TEAM_TYPE_in IN PROF_TEAM_HIST.ID_TEAM_TYPE%TYPE DEFAULT NULL,
ID_TEAM_TYPE_nin IN BOOLEAN := TRUE,
CREATE_USER_in IN PROF_TEAM_HIST.CREATE_USER%TYPE DEFAULT NULL,
CREATE_USER_nin IN BOOLEAN := TRUE,
ID_EPISODE_in IN PROF_TEAM_HIST.ID_EPISODE%TYPE DEFAULT NULL,
ID_EPISODE_nin IN BOOLEAN := TRUE,
handle_error_in        IN BOOLEAN := TRUE
);

--Update any/all columns by dynamic WHERE
-- If you pass NULL, then the current column value is set to itself
PROCEDURE upd
(
ID_PROF_TEAM_in IN PROF_TEAM_HIST.ID_PROF_TEAM%TYPE DEFAULT NULL,
ID_PROF_TEAM_nin IN BOOLEAN := TRUE,
ID_PROF_TEAM_LEADER_in IN PROF_TEAM_HIST.ID_PROF_TEAM_LEADER%TYPE DEFAULT NULL,
ID_PROF_TEAM_LEADER_nin IN BOOLEAN := TRUE,
PROF_TEAM_NAME_in IN PROF_TEAM_HIST.PROF_TEAM_NAME%TYPE DEFAULT NULL,
PROF_TEAM_NAME_nin IN BOOLEAN := TRUE,
PROF_TEAM_DESC_in IN PROF_TEAM_HIST.PROF_TEAM_DESC%TYPE DEFAULT NULL,
PROF_TEAM_DESC_nin IN BOOLEAN := TRUE,
FLG_AVAILABLE_in IN PROF_TEAM_HIST.FLG_AVAILABLE%TYPE DEFAULT NULL,
FLG_AVAILABLE_nin IN BOOLEAN := TRUE,
FLG_STATUS_in IN PROF_TEAM_HIST.FLG_STATUS%TYPE DEFAULT NULL,
FLG_STATUS_nin IN BOOLEAN := TRUE,
ID_SOFTWARE_in IN PROF_TEAM_HIST.ID_SOFTWARE%TYPE DEFAULT NULL,
ID_SOFTWARE_nin IN BOOLEAN := TRUE,
ID_INSTITUTION_in IN PROF_TEAM_HIST.ID_INSTITUTION%TYPE DEFAULT NULL,
ID_INSTITUTION_nin IN BOOLEAN := TRUE,
FLG_TYPE_in IN PROF_TEAM_HIST.FLG_TYPE%TYPE DEFAULT NULL,
FLG_TYPE_nin IN BOOLEAN := TRUE,
DT_BEGIN_TSTZ_in IN PROF_TEAM_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
DT_BEGIN_TSTZ_nin IN BOOLEAN := TRUE,
DT_END_TSTZ_in IN PROF_TEAM_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
DT_END_TSTZ_nin IN BOOLEAN := TRUE,
ID_DEPARTMENT_in IN PROF_TEAM_HIST.ID_DEPARTMENT%TYPE DEFAULT NULL,
ID_DEPARTMENT_nin IN BOOLEAN := TRUE,
NOTES_in IN PROF_TEAM_HIST.NOTES%TYPE DEFAULT NULL,
NOTES_nin IN BOOLEAN := TRUE,
CREATE_TIME_in IN PROF_TEAM_HIST.CREATE_TIME%TYPE DEFAULT NULL,
CREATE_TIME_nin IN BOOLEAN := TRUE,
FLG_TYPE_REGISTER_in IN PROF_TEAM_HIST.FLG_TYPE_REGISTER%TYPE DEFAULT NULL,
FLG_TYPE_REGISTER_nin IN BOOLEAN := TRUE,
CREATE_INSTITUTION_in IN PROF_TEAM_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
UPDATE_USER_in IN PROF_TEAM_HIST.UPDATE_USER%TYPE DEFAULT NULL,
UPDATE_USER_nin IN BOOLEAN := TRUE,
UPDATE_TIME_in IN PROF_TEAM_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
UPDATE_TIME_nin IN BOOLEAN := TRUE,
UPDATE_INSTITUTION_in IN PROF_TEAM_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
ID_PROF_REGISTER_in IN PROF_TEAM_HIST.ID_PROF_REGISTER%TYPE DEFAULT NULL,
ID_PROF_REGISTER_nin IN BOOLEAN := TRUE,
DT_REGISTER_in IN PROF_TEAM_HIST.DT_REGISTER%TYPE DEFAULT NULL,
DT_REGISTER_nin IN BOOLEAN := TRUE,
ID_TEAM_TYPE_in IN PROF_TEAM_HIST.ID_TEAM_TYPE%TYPE DEFAULT NULL,
ID_TEAM_TYPE_nin IN BOOLEAN := TRUE,
CREATE_USER_in IN PROF_TEAM_HIST.CREATE_USER%TYPE DEFAULT NULL,
CREATE_USER_nin IN BOOLEAN := TRUE,
ID_EPISODE_in IN PROF_TEAM_HIST.ID_EPISODE%TYPE DEFAULT NULL,
ID_EPISODE_nin IN BOOLEAN := TRUE,
where_in               IN VARCHAR2,
handle_error_in        IN BOOLEAN := TRUE,
rows_out               IN OUT table_varchar
);

--Update any/all columns by dynamic WHERE
-- If you pass NULL, then the current column value is set to itself
PROCEDURE upd
(
ID_PROF_TEAM_in IN PROF_TEAM_HIST.ID_PROF_TEAM%TYPE DEFAULT NULL,
ID_PROF_TEAM_nin IN BOOLEAN := TRUE,
ID_PROF_TEAM_LEADER_in IN PROF_TEAM_HIST.ID_PROF_TEAM_LEADER%TYPE DEFAULT NULL,
ID_PROF_TEAM_LEADER_nin IN BOOLEAN := TRUE,
PROF_TEAM_NAME_in IN PROF_TEAM_HIST.PROF_TEAM_NAME%TYPE DEFAULT NULL,
PROF_TEAM_NAME_nin IN BOOLEAN := TRUE,
PROF_TEAM_DESC_in IN PROF_TEAM_HIST.PROF_TEAM_DESC%TYPE DEFAULT NULL,
PROF_TEAM_DESC_nin IN BOOLEAN := TRUE,
FLG_AVAILABLE_in IN PROF_TEAM_HIST.FLG_AVAILABLE%TYPE DEFAULT NULL,
FLG_AVAILABLE_nin IN BOOLEAN := TRUE,
FLG_STATUS_in IN PROF_TEAM_HIST.FLG_STATUS%TYPE DEFAULT NULL,
FLG_STATUS_nin IN BOOLEAN := TRUE,
ID_SOFTWARE_in IN PROF_TEAM_HIST.ID_SOFTWARE%TYPE DEFAULT NULL,
ID_SOFTWARE_nin IN BOOLEAN := TRUE,
ID_INSTITUTION_in IN PROF_TEAM_HIST.ID_INSTITUTION%TYPE DEFAULT NULL,
ID_INSTITUTION_nin IN BOOLEAN := TRUE,
FLG_TYPE_in IN PROF_TEAM_HIST.FLG_TYPE%TYPE DEFAULT NULL,
FLG_TYPE_nin IN BOOLEAN := TRUE,
DT_BEGIN_TSTZ_in IN PROF_TEAM_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
DT_BEGIN_TSTZ_nin IN BOOLEAN := TRUE,
DT_END_TSTZ_in IN PROF_TEAM_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
DT_END_TSTZ_nin IN BOOLEAN := TRUE,
ID_DEPARTMENT_in IN PROF_TEAM_HIST.ID_DEPARTMENT%TYPE DEFAULT NULL,
ID_DEPARTMENT_nin IN BOOLEAN := TRUE,
NOTES_in IN PROF_TEAM_HIST.NOTES%TYPE DEFAULT NULL,
NOTES_nin IN BOOLEAN := TRUE,
CREATE_TIME_in IN PROF_TEAM_HIST.CREATE_TIME%TYPE DEFAULT NULL,
CREATE_TIME_nin IN BOOLEAN := TRUE,
FLG_TYPE_REGISTER_in IN PROF_TEAM_HIST.FLG_TYPE_REGISTER%TYPE DEFAULT NULL,
FLG_TYPE_REGISTER_nin IN BOOLEAN := TRUE,
CREATE_INSTITUTION_in IN PROF_TEAM_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
UPDATE_USER_in IN PROF_TEAM_HIST.UPDATE_USER%TYPE DEFAULT NULL,
UPDATE_USER_nin IN BOOLEAN := TRUE,
UPDATE_TIME_in IN PROF_TEAM_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
UPDATE_TIME_nin IN BOOLEAN := TRUE,
UPDATE_INSTITUTION_in IN PROF_TEAM_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
ID_PROF_REGISTER_in IN PROF_TEAM_HIST.ID_PROF_REGISTER%TYPE DEFAULT NULL,
ID_PROF_REGISTER_nin IN BOOLEAN := TRUE,
DT_REGISTER_in IN PROF_TEAM_HIST.DT_REGISTER%TYPE DEFAULT NULL,
DT_REGISTER_nin IN BOOLEAN := TRUE,
ID_TEAM_TYPE_in IN PROF_TEAM_HIST.ID_TEAM_TYPE%TYPE DEFAULT NULL,
ID_TEAM_TYPE_nin IN BOOLEAN := TRUE,
CREATE_USER_in IN PROF_TEAM_HIST.CREATE_USER%TYPE DEFAULT NULL,
CREATE_USER_nin IN BOOLEAN := TRUE,
ID_EPISODE_in IN PROF_TEAM_HIST.ID_EPISODE%TYPE DEFAULT NULL,
ID_EPISODE_nin IN BOOLEAN := TRUE,
where_in               IN VARCHAR2,
handle_error_in        IN BOOLEAN := TRUE
);

--Update/insert with columns (with rows_out)
PROCEDURE upd_ins
(
ID_PROF_TEAM_HIST_in IN prof_team_hist.ID_PROF_TEAM_HIST%TYPE,
ID_PROF_TEAM_in IN PROF_TEAM_HIST.ID_PROF_TEAM%TYPE DEFAULT NULL,
ID_PROF_TEAM_LEADER_in IN PROF_TEAM_HIST.ID_PROF_TEAM_LEADER%TYPE DEFAULT NULL,
PROF_TEAM_NAME_in IN PROF_TEAM_HIST.PROF_TEAM_NAME%TYPE DEFAULT NULL,
PROF_TEAM_DESC_in IN PROF_TEAM_HIST.PROF_TEAM_DESC%TYPE DEFAULT NULL,
FLG_AVAILABLE_in IN PROF_TEAM_HIST.FLG_AVAILABLE%TYPE DEFAULT NULL,
FLG_STATUS_in IN PROF_TEAM_HIST.FLG_STATUS%TYPE DEFAULT NULL,
ID_SOFTWARE_in IN PROF_TEAM_HIST.ID_SOFTWARE%TYPE DEFAULT NULL,
ID_INSTITUTION_in IN PROF_TEAM_HIST.ID_INSTITUTION%TYPE DEFAULT NULL,
FLG_TYPE_in IN PROF_TEAM_HIST.FLG_TYPE%TYPE DEFAULT NULL,
DT_BEGIN_TSTZ_in IN PROF_TEAM_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
DT_END_TSTZ_in IN PROF_TEAM_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
ID_DEPARTMENT_in IN PROF_TEAM_HIST.ID_DEPARTMENT%TYPE DEFAULT NULL,
NOTES_in IN PROF_TEAM_HIST.NOTES%TYPE DEFAULT NULL,
CREATE_TIME_in IN PROF_TEAM_HIST.CREATE_TIME%TYPE DEFAULT NULL,
FLG_TYPE_REGISTER_in IN PROF_TEAM_HIST.FLG_TYPE_REGISTER%TYPE DEFAULT NULL,
CREATE_INSTITUTION_in IN PROF_TEAM_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
UPDATE_USER_in IN PROF_TEAM_HIST.UPDATE_USER%TYPE DEFAULT NULL,
UPDATE_TIME_in IN PROF_TEAM_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
UPDATE_INSTITUTION_in IN PROF_TEAM_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
ID_PROF_REGISTER_in IN PROF_TEAM_HIST.ID_PROF_REGISTER%TYPE DEFAULT NULL,
DT_REGISTER_in IN PROF_TEAM_HIST.DT_REGISTER%TYPE DEFAULT NULL,
ID_TEAM_TYPE_in IN PROF_TEAM_HIST.ID_TEAM_TYPE%TYPE DEFAULT NULL,
CREATE_USER_in IN PROF_TEAM_HIST.CREATE_USER%TYPE DEFAULT NULL,
ID_EPISODE_in IN PROF_TEAM_HIST.ID_EPISODE%TYPE DEFAULT NULL,
handle_error_in        IN BOOLEAN := TRUE,
rows_out               IN OUT table_varchar
);

--Update/insert with columns (without rows_out)
PROCEDURE upd_ins
(
ID_PROF_TEAM_HIST_in IN prof_team_hist.ID_PROF_TEAM_HIST%TYPE,
ID_PROF_TEAM_in IN PROF_TEAM_HIST.ID_PROF_TEAM%TYPE DEFAULT NULL,
ID_PROF_TEAM_LEADER_in IN PROF_TEAM_HIST.ID_PROF_TEAM_LEADER%TYPE DEFAULT NULL,
PROF_TEAM_NAME_in IN PROF_TEAM_HIST.PROF_TEAM_NAME%TYPE DEFAULT NULL,
PROF_TEAM_DESC_in IN PROF_TEAM_HIST.PROF_TEAM_DESC%TYPE DEFAULT NULL,
FLG_AVAILABLE_in IN PROF_TEAM_HIST.FLG_AVAILABLE%TYPE DEFAULT NULL,
FLG_STATUS_in IN PROF_TEAM_HIST.FLG_STATUS%TYPE DEFAULT NULL,
ID_SOFTWARE_in IN PROF_TEAM_HIST.ID_SOFTWARE%TYPE DEFAULT NULL,
ID_INSTITUTION_in IN PROF_TEAM_HIST.ID_INSTITUTION%TYPE DEFAULT NULL,
FLG_TYPE_in IN PROF_TEAM_HIST.FLG_TYPE%TYPE DEFAULT NULL,
DT_BEGIN_TSTZ_in IN PROF_TEAM_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
DT_END_TSTZ_in IN PROF_TEAM_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
ID_DEPARTMENT_in IN PROF_TEAM_HIST.ID_DEPARTMENT%TYPE DEFAULT NULL,
NOTES_in IN PROF_TEAM_HIST.NOTES%TYPE DEFAULT NULL,
CREATE_TIME_in IN PROF_TEAM_HIST.CREATE_TIME%TYPE DEFAULT NULL,
FLG_TYPE_REGISTER_in IN PROF_TEAM_HIST.FLG_TYPE_REGISTER%TYPE DEFAULT NULL,
CREATE_INSTITUTION_in IN PROF_TEAM_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
UPDATE_USER_in IN PROF_TEAM_HIST.UPDATE_USER%TYPE DEFAULT NULL,
UPDATE_TIME_in IN PROF_TEAM_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
UPDATE_INSTITUTION_in IN PROF_TEAM_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
ID_PROF_REGISTER_in IN PROF_TEAM_HIST.ID_PROF_REGISTER%TYPE DEFAULT NULL,
DT_REGISTER_in IN PROF_TEAM_HIST.DT_REGISTER%TYPE DEFAULT NULL,
ID_TEAM_TYPE_in IN PROF_TEAM_HIST.ID_TEAM_TYPE%TYPE DEFAULT NULL,
CREATE_USER_in IN PROF_TEAM_HIST.CREATE_USER%TYPE DEFAULT NULL,
ID_EPISODE_in IN PROF_TEAM_HIST.ID_EPISODE%TYPE DEFAULT NULL,
handle_error_in        IN BOOLEAN := TRUE
);

--Update record (with rows_out)
PROCEDURE upd
(
rec_in          IN prof_team_hist%ROWTYPE,
handle_error_in IN BOOLEAN := TRUE,
rows_out        IN OUT table_varchar
);

--Update record (without rows_out)
PROCEDURE upd
(
rec_in          IN prof_team_hist%ROWTYPE,
handle_error_in IN BOOLEAN := TRUE
);

--Update collection (with rows_out)
PROCEDURE upd
(
col_in            IN prof_team_hist_tc,
ignore_if_null_in IN BOOLEAN := TRUE,
handle_error_in   IN BOOLEAN := TRUE,
rows_out          IN OUT table_varchar
);

--Update collection (without rows_out)
PROCEDURE upd
(
col_in            IN prof_team_hist_tc,
ignore_if_null_in IN BOOLEAN := TRUE,
handle_error_in   IN BOOLEAN := TRUE
);

-- Use Native Dynamic SQL increment a single NUMBER column
-- for all rows specified by the dynamic WHERE clause
PROCEDURE increment_onecol
(
colname_in         IN all_tab_columns.column_name%TYPE,
where_in           IN VARCHAR2,
increment_value_in IN NUMBER DEFAULT 1,
handle_error_in    IN BOOLEAN := TRUE,
rows_out           OUT table_varchar
);

--increment column value
PROCEDURE increment_onecol
(
colname_in         IN all_tab_columns.column_name%TYPE,
where_in           IN VARCHAR2,
increment_value_in IN NUMBER DEFAULT 1,
handle_error_in    IN BOOLEAN := TRUE
);

-- Delete one row by primary key
PROCEDURE del
(
ID_PROF_TEAM_HIST_in IN prof_team_hist.ID_PROF_TEAM_HIST%TYPE,
handle_error_in IN BOOLEAN := TRUE,
rows_out        OUT table_varchar
);

-- Delete one row by primary key
PROCEDURE del
(
ID_PROF_TEAM_HIST_in IN prof_team_hist.ID_PROF_TEAM_HIST%TYPE,
handle_error_in IN BOOLEAN := TRUE
);

-- Delete all rows specified by dynamic WHERE clause
PROCEDURE del_by
(
where_clause_in IN VARCHAR2,
handle_error_in IN BOOLEAN := TRUE,
rows_out        OUT table_varchar
);

-- Delete all rows specified by dynamic WHERE clause
PROCEDURE del_by
(
where_clause_in IN VARCHAR2,
handle_error_in IN BOOLEAN := TRUE
);

-- Delete all rows for this PROF_TEAMH_DEP_FK foreign key value
PROCEDURE del_PROF_TEAMH_DEP_FK
(
ID_DEPARTMENT_in IN PROF_TEAM_HIST.ID_DEPARTMENT%TYPE,
handle_error_in IN BOOLEAN := TRUE,
rows_out        OUT table_varchar
);

-- Delete all rows for this PROF_TEAMH_INST_FK foreign key value
PROCEDURE del_PROF_TEAMH_INST_FK
(
ID_INSTITUTION_in IN PROF_TEAM_HIST.ID_INSTITUTION%TYPE,
handle_error_in IN BOOLEAN := TRUE,
rows_out        OUT table_varchar
);

-- Delete all rows for this PROF_TEAMH_PROFRG_FK foreign key value
PROCEDURE del_PROF_TEAMH_PROFRG_FK
(
ID_PROF_REGISTER_in IN PROF_TEAM_HIST.ID_PROF_REGISTER%TYPE,
handle_error_in IN BOOLEAN := TRUE,
rows_out        OUT table_varchar
);

-- Delete all rows for this PROF_TEAMH_PROF_FK foreign key value
PROCEDURE del_PROF_TEAMH_PROF_FK
(
ID_PROF_TEAM_LEADER_in IN PROF_TEAM_HIST.ID_PROF_TEAM_LEADER%TYPE,
handle_error_in IN BOOLEAN := TRUE,
rows_out        OUT table_varchar
);

-- Delete all rows for this PROF_TEAMH_PTEAM_FK foreign key value
PROCEDURE del_PROF_TEAMH_PTEAM_FK
(
ID_PROF_TEAM_in IN PROF_TEAM_HIST.ID_PROF_TEAM%TYPE,
handle_error_in IN BOOLEAN := TRUE,
rows_out        OUT table_varchar
);

-- Delete all rows for this PROF_TEAMH_SOFT_FK foreign key value
PROCEDURE del_PROF_TEAMH_SOFT_FK
(
ID_SOFTWARE_in IN PROF_TEAM_HIST.ID_SOFTWARE%TYPE,
handle_error_in IN BOOLEAN := TRUE,
rows_out        OUT table_varchar
);

-- Delete all rows for this PROF_TEAMH_TTYPE_FK foreign key value
PROCEDURE del_PROF_TEAMH_TTYPE_FK
(
ID_TEAM_TYPE_in IN PROF_TEAM_HIST.ID_TEAM_TYPE%TYPE,
handle_error_in IN BOOLEAN := TRUE,
rows_out        OUT table_varchar
);

-- Delete all rows for this PROF_TEAMH_DEP_FK foreign key value
PROCEDURE del_PROF_TEAMH_DEP_FK
(
ID_DEPARTMENT_in IN PROF_TEAM_HIST.ID_DEPARTMENT%TYPE,
handle_error_in IN BOOLEAN := TRUE
);

-- Delete all rows for this PROF_TEAMH_INST_FK foreign key value
PROCEDURE del_PROF_TEAMH_INST_FK
(
ID_INSTITUTION_in IN PROF_TEAM_HIST.ID_INSTITUTION%TYPE,
handle_error_in IN BOOLEAN := TRUE
);

-- Delete all rows for this PROF_TEAMH_PROFRG_FK foreign key value
PROCEDURE del_PROF_TEAMH_PROFRG_FK
(
ID_PROF_REGISTER_in IN PROF_TEAM_HIST.ID_PROF_REGISTER%TYPE,
handle_error_in IN BOOLEAN := TRUE
);

-- Delete all rows for this PROF_TEAMH_PROF_FK foreign key value
PROCEDURE del_PROF_TEAMH_PROF_FK
(
ID_PROF_TEAM_LEADER_in IN PROF_TEAM_HIST.ID_PROF_TEAM_LEADER%TYPE,
handle_error_in IN BOOLEAN := TRUE
);

-- Delete all rows for this PROF_TEAMH_PTEAM_FK foreign key value
PROCEDURE del_PROF_TEAMH_PTEAM_FK
(
ID_PROF_TEAM_in IN PROF_TEAM_HIST.ID_PROF_TEAM%TYPE,
handle_error_in IN BOOLEAN := TRUE
);

-- Delete all rows for this PROF_TEAMH_SOFT_FK foreign key value
PROCEDURE del_PROF_TEAMH_SOFT_FK
(
ID_SOFTWARE_in IN PROF_TEAM_HIST.ID_SOFTWARE%TYPE,
handle_error_in IN BOOLEAN := TRUE
);

-- Delete all rows for this PROF_TEAMH_TTYPE_FK foreign key value
PROCEDURE del_PROF_TEAMH_TTYPE_FK
(
ID_TEAM_TYPE_in IN PROF_TEAM_HIST.ID_TEAM_TYPE%TYPE,
handle_error_in IN BOOLEAN := TRUE
);

-- Initialize a record with default values for columns in the table (prc)
PROCEDURE initrec(prof_team_hist_inout IN OUT prof_team_hist%ROWTYPE);

-- Initialize a record with default values for columns in the table (fnc)
FUNCTION initrec RETURN prof_team_hist%ROWTYPE;

-- Get data rowid
FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN prof_team_hist_tc;

-- Get data rowid pragma autonomous transaccion
FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN prof_team_hist_tc;

end ts_prof_team_hist;
/