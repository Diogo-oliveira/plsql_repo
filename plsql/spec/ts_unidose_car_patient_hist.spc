/*-- Last Change Revision: $Rev: 2029403 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:51:28 +0100 (ter, 02 ago 2022) $*/


CREATE OR REPLACE PACKAGE ts_unidose_car_patient_hist
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Novembro 20, 2008 17:34:8
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on "UNIDOSE_CAR_PATIENT_HIST"
    TYPE unidose_car_patient_hist_tc IS TABLE OF unidose_car_patient_hist%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE unidose_car_patient_hist_ntt IS TABLE OF unidose_car_patient_hist%ROWTYPE;
    TYPE unidose_car_patient_hist_vat IS VARRAY(100) OF unidose_car_patient_hist%ROWTYPE;

    -- Same type structure, with a static name.
    TYPE aat IS TABLE OF unidose_car_patient_hist%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE ntt IS TABLE OF unidose_car_patient_hist%ROWTYPE;
    TYPE vat IS VARRAY(100) OF unidose_car_patient_hist%ROWTYPE;

    -- Column Collection based on column "ID_UNIDOSE_CAR_PATIENT_HIST"
    TYPE id_unidose_car_patient_hist_cc IS TABLE OF unidose_car_patient_hist.id_unidose_car_patient_hist%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_UNIDOSE_CAR"
    TYPE id_unidose_car_cc IS TABLE OF unidose_car_patient_hist.id_unidose_car%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_INSTITUTION"
    TYPE id_institution_cc IS TABLE OF unidose_car_patient_hist.id_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PATIENT"
    TYPE id_patient_cc IS TABLE OF unidose_car_patient_hist.id_patient%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_CONTAINER"
    TYPE id_container_cc IS TABLE OF unidose_car_patient_hist.id_container%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_UNIDOSE_CAR_ROUTE"
    TYPE id_unidose_car_route_cc IS TABLE OF unidose_car_patient_hist.id_unidose_car_route%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_AVAILABLE"
    TYPE flg_available_cc IS TABLE OF unidose_car_patient_hist.flg_available%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ADW_DATE"
    TYPE adw_date_cc IS TABLE OF unidose_car_patient_hist.adw_date%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "BAR_CODE"
    TYPE bar_code_cc IS TABLE OF unidose_car_patient_hist.bar_code%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_EPISODE"
    TYPE id_episode_cc IS TABLE OF unidose_car_patient_hist.id_episode%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present
    PROCEDURE ins
    (
        id_unidose_car_patient_hist_in IN unidose_car_patient_hist.id_unidose_car_patient_hist%TYPE DEFAULT NULL,
        id_unidose_car_in              IN unidose_car_patient_hist.id_unidose_car%TYPE DEFAULT NULL,
        id_institution_in              IN unidose_car_patient_hist.id_institution%TYPE DEFAULT NULL,
        id_patient_in                  IN unidose_car_patient_hist.id_patient%TYPE DEFAULT NULL,
        id_container_in                IN unidose_car_patient_hist.id_container%TYPE DEFAULT NULL,
        id_unidose_car_route_in        IN unidose_car_patient_hist.id_unidose_car_route%TYPE DEFAULT NULL,
        flg_available_in               IN unidose_car_patient_hist.flg_available%TYPE DEFAULT NULL,
        adw_date_in                    IN unidose_car_patient_hist.adw_date%TYPE DEFAULT NULL,
        bar_code_in                    IN unidose_car_patient_hist.bar_code%TYPE DEFAULT NULL,
        id_episode_in                  IN unidose_car_patient_hist.id_episode%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_unidose_car_patient_hist_in IN unidose_car_patient_hist.id_unidose_car_patient_hist%TYPE DEFAULT NULL,
        id_unidose_car_in              IN unidose_car_patient_hist.id_unidose_car%TYPE DEFAULT NULL,
        id_institution_in              IN unidose_car_patient_hist.id_institution%TYPE DEFAULT NULL,
        id_patient_in                  IN unidose_car_patient_hist.id_patient%TYPE DEFAULT NULL,
        id_container_in                IN unidose_car_patient_hist.id_container%TYPE DEFAULT NULL,
        id_unidose_car_route_in        IN unidose_car_patient_hist.id_unidose_car_route%TYPE DEFAULT NULL,
        flg_available_in               IN unidose_car_patient_hist.flg_available%TYPE DEFAULT NULL,
        adw_date_in                    IN unidose_car_patient_hist.adw_date%TYPE DEFAULT NULL,
        bar_code_in                    IN unidose_car_patient_hist.bar_code%TYPE DEFAULT NULL,
        id_episode_in                  IN unidose_car_patient_hist.id_episode%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record.
    PROCEDURE ins
    (
        rec_in          IN unidose_car_patient_hist%ROWTYPE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rec_in          IN unidose_car_patient_hist%ROWTYPE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers.
    PROCEDURE ins
    (
        rows_in         IN unidose_car_patient_hist_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rows_in         IN unidose_car_patient_hist_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete all rows for this UCTH_EPIS_FK foreign key value
    PROCEDURE del_ucth_epis_fk
    (
        id_episode_in   IN unidose_car_patient_hist.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this UCTH_EPIS_FK foreign key value
    PROCEDURE del_ucth_epis_fk
    (
        id_episode_in   IN unidose_car_patient_hist.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(unidose_car_patient_hist_inout IN OUT unidose_car_patient_hist%ROWTYPE);

    FUNCTION initrec RETURN unidose_car_patient_hist%ROWTYPE;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN unidose_car_patient_hist_tc;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN unidose_car_patient_hist_tc;

END ts_unidose_car_patient_hist;
/
