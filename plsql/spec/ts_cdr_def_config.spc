/*-- Last Change Revision: $Rev: 1242645 $*/
/*-- Last Change by: $Author: pedro.carneiro $*/
/*-- Date of last change: $Date: 2012-02-29 10:47:31 +0000 (qua, 29 fev 2012) $*/


CREATE OR REPLACE PACKAGE TS_CDR_DEF_CONFIG
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Fevereiro 28, 2012 17:44:30
| Created By: ALERT
*/
IS

  -- Collection of %ROWTYPE records based on "CDR_DEF_CONFIG"
     TYPE CDR_DEF_CONFIG_tc IS TABLE OF CDR_DEF_CONFIG%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE cdr_def_config_ntt IS TABLE OF CDR_DEF_CONFIG%ROWTYPE;
     TYPE cdr_def_config_vat IS VARRAY(100) OF CDR_DEF_CONFIG%ROWTYPE;

  -- Same type structure, with a static name.
     TYPE aat IS TABLE OF CDR_DEF_CONFIG%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE ntt IS TABLE OF CDR_DEF_CONFIG%ROWTYPE;
     TYPE vat IS VARRAY(100) OF CDR_DEF_CONFIG%ROWTYPE;

   -- Column Collection based on column "ID_CDR_DEF_CONFIG"
   TYPE ID_CDR_DEF_CONFIG_cc IS TABLE OF CDR_DEF_CONFIG.ID_CDR_DEF_CONFIG%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_CDR_DEF_SEVERITY"
   TYPE ID_CDR_DEF_SEVERITY_cc IS TABLE OF CDR_DEF_CONFIG.ID_CDR_DEF_SEVERITY%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_CDR_PARAM_ACTION"
   TYPE ID_CDR_PARAM_ACTION_cc IS TABLE OF CDR_DEF_CONFIG.ID_CDR_PARAM_ACTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_INSTITUTION"
   TYPE ID_INSTITUTION_cc IS TABLE OF CDR_DEF_CONFIG.ID_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_SOFTWARE"
   TYPE ID_SOFTWARE_cc IS TABLE OF CDR_DEF_CONFIG.ID_SOFTWARE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PROFILE_TEMPLATE"
   TYPE ID_PROFILE_TEMPLATE_cc IS TABLE OF CDR_DEF_CONFIG.ID_PROFILE_TEMPLATE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_DEP_CLIN_SERV"
   TYPE ID_DEP_CLIN_SERV_cc IS TABLE OF CDR_DEF_CONFIG.ID_DEP_CLIN_SERV%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PROFESSIONAL"
   TYPE ID_PROFESSIONAL_cc IS TABLE OF CDR_DEF_CONFIG.ID_PROFESSIONAL%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_USER"
   TYPE CREATE_USER_cc IS TABLE OF CDR_DEF_CONFIG.CREATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_TIME"
   TYPE CREATE_TIME_cc IS TABLE OF CDR_DEF_CONFIG.CREATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_INSTITUTION"
   TYPE CREATE_INSTITUTION_cc IS TABLE OF CDR_DEF_CONFIG.CREATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_USER"
   TYPE UPDATE_USER_cc IS TABLE OF CDR_DEF_CONFIG.UPDATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_TIME"
   TYPE UPDATE_TIME_cc IS TABLE OF CDR_DEF_CONFIG.UPDATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_INSTITUTION"
   TYPE UPDATE_INSTITUTION_cc IS TABLE OF CDR_DEF_CONFIG.UPDATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;

   -- Insert one row, providing primary key if present
   PROCEDURE ins (
      id_cdr_def_severity_in IN CDR_DEF_CONFIG.ID_CDR_DEF_SEVERITY%TYPE,
      id_cdr_param_action_in IN CDR_DEF_CONFIG.ID_CDR_PARAM_ACTION%TYPE,
      id_institution_in IN CDR_DEF_CONFIG.ID_INSTITUTION%TYPE,
      id_software_in IN CDR_DEF_CONFIG.ID_SOFTWARE%TYPE,
      id_profile_template_in IN CDR_DEF_CONFIG.ID_PROFILE_TEMPLATE%TYPE,
      id_dep_clin_serv_in IN CDR_DEF_CONFIG.ID_DEP_CLIN_SERV%TYPE,
      id_professional_in IN CDR_DEF_CONFIG.ID_PROFESSIONAL%TYPE
      ,
      id_cdr_def_config_in IN CDR_DEF_CONFIG.ID_CDR_DEF_CONFIG%TYPE DEFAULT NULL,
      create_user_in IN CDR_DEF_CONFIG.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN CDR_DEF_CONFIG.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN CDR_DEF_CONFIG.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN CDR_DEF_CONFIG.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN CDR_DEF_CONFIG.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN CDR_DEF_CONFIG.UPDATE_INSTITUTION%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_cdr_def_severity_in IN CDR_DEF_CONFIG.ID_CDR_DEF_SEVERITY%TYPE,
      id_cdr_param_action_in IN CDR_DEF_CONFIG.ID_CDR_PARAM_ACTION%TYPE,
      id_institution_in IN CDR_DEF_CONFIG.ID_INSTITUTION%TYPE,
      id_software_in IN CDR_DEF_CONFIG.ID_SOFTWARE%TYPE,
      id_profile_template_in IN CDR_DEF_CONFIG.ID_PROFILE_TEMPLATE%TYPE,
      id_dep_clin_serv_in IN CDR_DEF_CONFIG.ID_DEP_CLIN_SERV%TYPE,
      id_professional_in IN CDR_DEF_CONFIG.ID_PROFESSIONAL%TYPE
      ,
      id_cdr_def_config_in IN CDR_DEF_CONFIG.ID_CDR_DEF_CONFIG%TYPE DEFAULT NULL,
      create_user_in IN CDR_DEF_CONFIG.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN CDR_DEF_CONFIG.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN CDR_DEF_CONFIG.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN CDR_DEF_CONFIG.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN CDR_DEF_CONFIG.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN CDR_DEF_CONFIG.UPDATE_INSTITUTION%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );


   -- Insert a row based on a record.
   PROCEDURE ins (
      rec_in IN CDR_DEF_CONFIG%ROWTYPE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rec_in IN CDR_DEF_CONFIG%ROWTYPE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Insert a collection of rows using FORALL; all primary key values
   -- must have already been generated, or are handled in triggers.
   PROCEDURE ins (
      rows_in IN CDR_DEF_CONFIG_tc
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rows_in IN CDR_DEF_CONFIG_tc
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Update any/all columns by primary key. If you pass NULL, then
   -- the current column value is set to itself. If you need a more
   -- selected UPDATE then use one of the onecol procedures below.

  PROCEDURE upd (
      id_cdr_def_severity_in IN CDR_DEF_CONFIG.ID_CDR_DEF_SEVERITY%TYPE,
      id_cdr_param_action_in IN CDR_DEF_CONFIG.ID_CDR_PARAM_ACTION%TYPE,
      id_institution_in IN CDR_DEF_CONFIG.ID_INSTITUTION%TYPE,
      id_software_in IN CDR_DEF_CONFIG.ID_SOFTWARE%TYPE,
      id_profile_template_in IN CDR_DEF_CONFIG.ID_PROFILE_TEMPLATE%TYPE,
      id_dep_clin_serv_in IN CDR_DEF_CONFIG.ID_DEP_CLIN_SERV%TYPE,
      id_professional_in IN CDR_DEF_CONFIG.ID_PROFESSIONAL%TYPE,
      id_cdr_def_config_in IN CDR_DEF_CONFIG.ID_CDR_DEF_CONFIG%TYPE DEFAULT NULL,
      ID_CDR_DEF_CONFIG_nin IN BOOLEAN := TRUE,
      create_user_in IN CDR_DEF_CONFIG.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN CDR_DEF_CONFIG.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN CDR_DEF_CONFIG.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN CDR_DEF_CONFIG.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN CDR_DEF_CONFIG.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN CDR_DEF_CONFIG.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


       PROCEDURE upd (
      id_cdr_def_severity_in IN CDR_DEF_CONFIG.ID_CDR_DEF_SEVERITY%TYPE,
      id_cdr_param_action_in IN CDR_DEF_CONFIG.ID_CDR_PARAM_ACTION%TYPE,
      id_institution_in IN CDR_DEF_CONFIG.ID_INSTITUTION%TYPE,
      id_software_in IN CDR_DEF_CONFIG.ID_SOFTWARE%TYPE,
      id_profile_template_in IN CDR_DEF_CONFIG.ID_PROFILE_TEMPLATE%TYPE,
      id_dep_clin_serv_in IN CDR_DEF_CONFIG.ID_DEP_CLIN_SERV%TYPE,
      id_professional_in IN CDR_DEF_CONFIG.ID_PROFESSIONAL%TYPE,
      id_cdr_def_config_in IN CDR_DEF_CONFIG.ID_CDR_DEF_CONFIG%TYPE DEFAULT NULL,
      ID_CDR_DEF_CONFIG_nin IN BOOLEAN := TRUE,
      create_user_in IN CDR_DEF_CONFIG.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN CDR_DEF_CONFIG.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN CDR_DEF_CONFIG.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN CDR_DEF_CONFIG.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN CDR_DEF_CONFIG.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN CDR_DEF_CONFIG.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
      );



      PROCEDURE upd (
      id_cdr_def_config_in IN CDR_DEF_CONFIG.ID_CDR_DEF_CONFIG%TYPE DEFAULT NULL,
      ID_CDR_DEF_CONFIG_nin IN BOOLEAN := TRUE,
      create_user_in IN CDR_DEF_CONFIG.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN CDR_DEF_CONFIG.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN CDR_DEF_CONFIG.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN CDR_DEF_CONFIG.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN CDR_DEF_CONFIG.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN CDR_DEF_CONFIG.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
    where_in varchar2,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


      PROCEDURE upd (
      id_cdr_def_config_in IN CDR_DEF_CONFIG.ID_CDR_DEF_CONFIG%TYPE DEFAULT NULL,
      ID_CDR_DEF_CONFIG_nin IN BOOLEAN := TRUE,
      create_user_in IN CDR_DEF_CONFIG.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN CDR_DEF_CONFIG.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN CDR_DEF_CONFIG.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN CDR_DEF_CONFIG.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN CDR_DEF_CONFIG.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN CDR_DEF_CONFIG.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
    where_in varchar2,
     handle_error_in IN BOOLEAN := TRUE
      );



   PROCEDURE upd_ins (
      id_cdr_def_severity_in IN CDR_DEF_CONFIG.ID_CDR_DEF_SEVERITY%TYPE,
      id_cdr_param_action_in IN CDR_DEF_CONFIG.ID_CDR_PARAM_ACTION%TYPE,
      id_institution_in IN CDR_DEF_CONFIG.ID_INSTITUTION%TYPE,
      id_software_in IN CDR_DEF_CONFIG.ID_SOFTWARE%TYPE,
      id_profile_template_in IN CDR_DEF_CONFIG.ID_PROFILE_TEMPLATE%TYPE,
      id_dep_clin_serv_in IN CDR_DEF_CONFIG.ID_DEP_CLIN_SERV%TYPE,
      id_professional_in IN CDR_DEF_CONFIG.ID_PROFESSIONAL%TYPE,
      id_cdr_def_config_in IN CDR_DEF_CONFIG.ID_CDR_DEF_CONFIG%TYPE DEFAULT NULL,
      create_user_in IN CDR_DEF_CONFIG.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN CDR_DEF_CONFIG.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN CDR_DEF_CONFIG.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN CDR_DEF_CONFIG.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN CDR_DEF_CONFIG.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN CDR_DEF_CONFIG.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

      PROCEDURE upd_ins (
      id_cdr_def_severity_in IN CDR_DEF_CONFIG.ID_CDR_DEF_SEVERITY%TYPE,
      id_cdr_param_action_in IN CDR_DEF_CONFIG.ID_CDR_PARAM_ACTION%TYPE,
      id_institution_in IN CDR_DEF_CONFIG.ID_INSTITUTION%TYPE,
      id_software_in IN CDR_DEF_CONFIG.ID_SOFTWARE%TYPE,
      id_profile_template_in IN CDR_DEF_CONFIG.ID_PROFILE_TEMPLATE%TYPE,
      id_dep_clin_serv_in IN CDR_DEF_CONFIG.ID_DEP_CLIN_SERV%TYPE,
      id_professional_in IN CDR_DEF_CONFIG.ID_PROFESSIONAL%TYPE,
      id_cdr_def_config_in IN CDR_DEF_CONFIG.ID_CDR_DEF_CONFIG%TYPE DEFAULT NULL,
      create_user_in IN CDR_DEF_CONFIG.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN CDR_DEF_CONFIG.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN CDR_DEF_CONFIG.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN CDR_DEF_CONFIG.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN CDR_DEF_CONFIG.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN CDR_DEF_CONFIG.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
      );

   PROCEDURE upd (
      rec_in IN CDR_DEF_CONFIG%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      rec_in IN CDR_DEF_CONFIG%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
      );

      PROCEDURE upd (
      col_in IN CDR_DEF_CONFIG_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      col_in IN CDR_DEF_CONFIG_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
      );





   -- Use Native Dynamic SQL increment a single NUMBER column
   -- for all rows specified by the dynamic WHERE clause
   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
   );









    -- Delete one row by primary key
   PROCEDURE del (
      id_cdr_def_severity_in IN CDR_DEF_CONFIG.ID_CDR_DEF_SEVERITY%TYPE,
      id_cdr_param_action_in IN CDR_DEF_CONFIG.ID_CDR_PARAM_ACTION%TYPE,
      id_institution_in IN CDR_DEF_CONFIG.ID_INSTITUTION%TYPE,
      id_software_in IN CDR_DEF_CONFIG.ID_SOFTWARE%TYPE,
      id_profile_template_in IN CDR_DEF_CONFIG.ID_PROFILE_TEMPLATE%TYPE,
      id_dep_clin_serv_in IN CDR_DEF_CONFIG.ID_DEP_CLIN_SERV%TYPE,
      id_professional_in IN CDR_DEF_CONFIG.ID_PROFESSIONAL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

-- Delete one row by primary key
   PROCEDURE del (
      id_cdr_def_severity_in IN CDR_DEF_CONFIG.ID_CDR_DEF_SEVERITY%TYPE,
      id_cdr_param_action_in IN CDR_DEF_CONFIG.ID_CDR_PARAM_ACTION%TYPE,
      id_institution_in IN CDR_DEF_CONFIG.ID_INSTITUTION%TYPE,
      id_software_in IN CDR_DEF_CONFIG.ID_SOFTWARE%TYPE,
      id_profile_template_in IN CDR_DEF_CONFIG.ID_PROFILE_TEMPLATE%TYPE,
      id_dep_clin_serv_in IN CDR_DEF_CONFIG.ID_DEP_CLIN_SERV%TYPE,
      id_professional_in IN CDR_DEF_CONFIG.ID_PROFESSIONAL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


   -- Delete all rows for primary key column ID_CDR_DEF_SEVERITY
   PROCEDURE del_ID_CDR_DEF_SEVERITY (
      id_cdr_def_severity_in IN CDR_DEF_CONFIG.ID_CDR_DEF_SEVERITY%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_CDR_DEF_SEVERITY
   PROCEDURE del_ID_CDR_DEF_SEVERITY (
      id_cdr_def_severity_in IN CDR_DEF_CONFIG.ID_CDR_DEF_SEVERITY%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );


   -- Delete all rows for primary key column ID_CDR_PARAM_ACTION
   PROCEDURE del_ID_CDR_PARAM_ACTION (
      id_cdr_param_action_in IN CDR_DEF_CONFIG.ID_CDR_PARAM_ACTION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_CDR_PARAM_ACTION
   PROCEDURE del_ID_CDR_PARAM_ACTION (
      id_cdr_param_action_in IN CDR_DEF_CONFIG.ID_CDR_PARAM_ACTION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );


   -- Delete all rows for primary key column ID_INSTITUTION
   PROCEDURE del_ID_INSTITUTION (
      id_institution_in IN CDR_DEF_CONFIG.ID_INSTITUTION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_INSTITUTION
   PROCEDURE del_ID_INSTITUTION (
      id_institution_in IN CDR_DEF_CONFIG.ID_INSTITUTION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );


   -- Delete all rows for primary key column ID_SOFTWARE
   PROCEDURE del_ID_SOFTWARE (
      id_software_in IN CDR_DEF_CONFIG.ID_SOFTWARE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_SOFTWARE
   PROCEDURE del_ID_SOFTWARE (
      id_software_in IN CDR_DEF_CONFIG.ID_SOFTWARE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );


   -- Delete all rows for primary key column ID_PROFILE_TEMPLATE
   PROCEDURE del_ID_PROFILE_TEMPLATE (
      id_profile_template_in IN CDR_DEF_CONFIG.ID_PROFILE_TEMPLATE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_PROFILE_TEMPLATE
   PROCEDURE del_ID_PROFILE_TEMPLATE (
      id_profile_template_in IN CDR_DEF_CONFIG.ID_PROFILE_TEMPLATE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );


   -- Delete all rows for primary key column ID_DEP_CLIN_SERV
   PROCEDURE del_ID_DEP_CLIN_SERV (
      id_dep_clin_serv_in IN CDR_DEF_CONFIG.ID_DEP_CLIN_SERV%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_DEP_CLIN_SERV
   PROCEDURE del_ID_DEP_CLIN_SERV (
      id_dep_clin_serv_in IN CDR_DEF_CONFIG.ID_DEP_CLIN_SERV%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );


   -- Delete all rows for primary key column ID_PROFESSIONAL
   PROCEDURE del_ID_PROFESSIONAL (
      id_professional_in IN CDR_DEF_CONFIG.ID_PROFESSIONAL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_PROFESSIONAL
   PROCEDURE del_ID_PROFESSIONAL (
      id_professional_in IN CDR_DEF_CONFIG.ID_PROFESSIONAL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );

   -- Delete for unique value of CDRDCF_UK
   PROCEDURE del_CDRDCF_UK (
      id_cdr_def_config_in IN CDR_DEF_CONFIG.ID_CDR_DEF_CONFIG%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

   -- Delete for unique value of CDRDCF_UK
   PROCEDURE del_CDRDCF_UK (
      id_cdr_def_config_in IN CDR_DEF_CONFIG.ID_CDR_DEF_CONFIG%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this CDRDCF_CDRDS_FK foreign key value
   PROCEDURE del_CDRDCF_CDRDS_FK (
      id_cdr_def_severity_in IN CDR_DEF_CONFIG.ID_CDR_DEF_SEVERITY%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this CDRDCF_CDRDS_FK foreign key value
   PROCEDURE del_CDRDCF_CDRDS_FK (
      id_cdr_def_severity_in IN CDR_DEF_CONFIG.ID_CDR_DEF_SEVERITY%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this CDRDCF_CDRPA_FK foreign key value
   PROCEDURE del_CDRDCF_CDRPA_FK (
      id_cdr_param_action_in IN CDR_DEF_CONFIG.ID_CDR_PARAM_ACTION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this CDRDCF_CDRPA_FK foreign key value
   PROCEDURE del_CDRDCF_CDRPA_FK (
      id_cdr_param_action_in IN CDR_DEF_CONFIG.ID_CDR_PARAM_ACTION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this CDRDCF_DCS_FK foreign key value
   PROCEDURE del_CDRDCF_DCS_FK (
      id_dep_clin_serv_in IN CDR_DEF_CONFIG.ID_DEP_CLIN_SERV%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this CDRDCF_DCS_FK foreign key value
   PROCEDURE del_CDRDCF_DCS_FK (
      id_dep_clin_serv_in IN CDR_DEF_CONFIG.ID_DEP_CLIN_SERV%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this CDRDCF_INST_FK foreign key value
   PROCEDURE del_CDRDCF_INST_FK (
      id_institution_in IN CDR_DEF_CONFIG.ID_INSTITUTION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this CDRDCF_INST_FK foreign key value
   PROCEDURE del_CDRDCF_INST_FK (
      id_institution_in IN CDR_DEF_CONFIG.ID_INSTITUTION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this CDRDCF_PROF_FK foreign key value
   PROCEDURE del_CDRDCF_PROF_FK (
      id_professional_in IN CDR_DEF_CONFIG.ID_PROFESSIONAL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this CDRDCF_PROF_FK foreign key value
   PROCEDURE del_CDRDCF_PROF_FK (
      id_professional_in IN CDR_DEF_CONFIG.ID_PROFESSIONAL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this CDRDCF_S_FK foreign key value
   PROCEDURE del_CDRDCF_S_FK (
      id_software_in IN CDR_DEF_CONFIG.ID_SOFTWARE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this CDRDCF_S_FK foreign key value
   PROCEDURE del_CDRDCF_S_FK (
      id_software_in IN CDR_DEF_CONFIG.ID_SOFTWARE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this CDRDCF_SPT_FK foreign key value
   PROCEDURE del_CDRDCF_SPT_FK (
      id_profile_template_in IN CDR_DEF_CONFIG.ID_PROFILE_TEMPLATE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this CDRDCF_SPT_FK foreign key value
   PROCEDURE del_CDRDCF_SPT_FK (
      id_profile_template_in IN CDR_DEF_CONFIG.ID_PROFILE_TEMPLATE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );


      -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Initialize a record with default values for columns in the table.
   PROCEDURE initrec (
      cdr_def_config_inout IN OUT CDR_DEF_CONFIG%ROWTYPE
   );

   FUNCTION initrec RETURN CDR_DEF_CONFIG%ROWTYPE;



   FUNCTION get_data_rowid(
        rows_in IN TABLE_VARCHAR
        ) RETURN CDR_DEF_CONFIG_tc;


   FUNCTION get_data_rowid_pat(
        rows_in IN TABLE_VARCHAR
        ) RETURN CDR_DEF_CONFIG_tc;

END TS_CDR_DEF_CONFIG;
/
