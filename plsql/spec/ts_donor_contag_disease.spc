/*-- Last Change Revision: $Rev: 2029116 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:49:52 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE ts_donor_contag_disease
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Junho 10, 2010 16:2:56
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on "DONOR_CONTAG_DISEASE"
    TYPE donor_contag_disease_tc IS TABLE OF donor_contag_disease%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE donor_contag_disease_ntt IS TABLE OF donor_contag_disease%ROWTYPE;
    TYPE donor_contag_disease_vat IS VARRAY(100) OF donor_contag_disease%ROWTYPE;

    -- Same type structure, with a static name.
    TYPE aat IS TABLE OF donor_contag_disease%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE ntt IS TABLE OF donor_contag_disease%ROWTYPE;
    TYPE vat IS VARRAY(100) OF donor_contag_disease%ROWTYPE;

    -- Column Collection based on column "ID_DONOR_CONTAG_DISEASE"
    TYPE id_donor_contag_disease_cc IS TABLE OF donor_contag_disease.id_donor_contag_disease%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_ORGAN_DONOR"
    TYPE id_organ_donor_cc IS TABLE OF donor_contag_disease.id_organ_donor%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PAT_HISTORY_DIAGNOSIS"
    TYPE id_pat_history_diagnosis_cc IS TABLE OF donor_contag_disease.id_pat_history_diagnosis%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_USER"
    TYPE create_user_cc IS TABLE OF donor_contag_disease.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_TIME"
    TYPE create_time_cc IS TABLE OF donor_contag_disease.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_INSTITUTION"
    TYPE create_institution_cc IS TABLE OF donor_contag_disease.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_USER"
    TYPE update_user_cc IS TABLE OF donor_contag_disease.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_TIME"
    TYPE update_time_cc IS TABLE OF donor_contag_disease.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_INSTITUTION"
    TYPE update_institution_cc IS TABLE OF donor_contag_disease.update_institution%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present
    PROCEDURE ins
    (
        id_organ_donor_in           IN donor_contag_disease.id_organ_donor%TYPE,
        id_pat_history_diagnosis_in IN donor_contag_disease.id_pat_history_diagnosis%TYPE,
        id_donor_contag_disease_in  IN donor_contag_disease.id_donor_contag_disease%TYPE DEFAULT NULL,
        create_user_in              IN donor_contag_disease.create_user%TYPE DEFAULT NULL,
        create_time_in              IN donor_contag_disease.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN donor_contag_disease.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN donor_contag_disease.update_user%TYPE DEFAULT NULL,
        update_time_in              IN donor_contag_disease.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN donor_contag_disease.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT TABLE_VARCHAR
    );

    PROCEDURE ins
    (
        id_organ_donor_in           IN donor_contag_disease.id_organ_donor%TYPE,
        id_pat_history_diagnosis_in IN donor_contag_disease.id_pat_history_diagnosis%TYPE,
        id_donor_contag_disease_in  IN donor_contag_disease.id_donor_contag_disease%TYPE DEFAULT NULL,
        create_user_in              IN donor_contag_disease.create_user%TYPE DEFAULT NULL,
        create_time_in              IN donor_contag_disease.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN donor_contag_disease.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN donor_contag_disease.update_user%TYPE DEFAULT NULL,
        update_time_in              IN donor_contag_disease.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN donor_contag_disease.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record.
    PROCEDURE ins
    (
        rec_in          IN donor_contag_disease%ROWTYPE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT TABLE_VARCHAR
    );

    PROCEDURE ins
    (
        rec_in          IN donor_contag_disease%ROWTYPE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers.
    PROCEDURE ins
    (
        rows_in         IN donor_contag_disease_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT TABLE_VARCHAR
    );

    PROCEDURE ins
    (
        rows_in         IN donor_contag_disease_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.

    PROCEDURE upd
    (
        id_organ_donor_in           IN donor_contag_disease.id_organ_donor%TYPE,
        id_pat_history_diagnosis_in IN donor_contag_disease.id_pat_history_diagnosis%TYPE,
        id_donor_contag_disease_in  IN donor_contag_disease.id_donor_contag_disease%TYPE DEFAULT NULL,
        id_donor_contag_disease_nin IN BOOLEAN := TRUE,
        create_user_in              IN donor_contag_disease.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN donor_contag_disease.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN donor_contag_disease.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN donor_contag_disease.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN donor_contag_disease.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN donor_contag_disease.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    IN OUT TABLE_VARCHAR
    );

    PROCEDURE upd
    (
        id_organ_donor_in           IN donor_contag_disease.id_organ_donor%TYPE,
        id_pat_history_diagnosis_in IN donor_contag_disease.id_pat_history_diagnosis%TYPE,
        id_donor_contag_disease_in  IN donor_contag_disease.id_donor_contag_disease%TYPE DEFAULT NULL,
        id_donor_contag_disease_nin IN BOOLEAN := TRUE,
        create_user_in              IN donor_contag_disease.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN donor_contag_disease.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN donor_contag_disease.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN donor_contag_disease.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN donor_contag_disease.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN donor_contag_disease.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        handle_error_in             IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        id_donor_contag_disease_in  IN donor_contag_disease.id_donor_contag_disease%TYPE DEFAULT NULL,
        id_donor_contag_disease_nin IN BOOLEAN := TRUE,
        create_user_in              IN donor_contag_disease.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN donor_contag_disease.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN donor_contag_disease.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN donor_contag_disease.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN donor_contag_disease.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN donor_contag_disease.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        where_in                    VARCHAR2 DEFAULT NULL,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    IN OUT TABLE_VARCHAR
    );

    PROCEDURE upd
    (
        id_donor_contag_disease_in  IN donor_contag_disease.id_donor_contag_disease%TYPE DEFAULT NULL,
        id_donor_contag_disease_nin IN BOOLEAN := TRUE,
        create_user_in              IN donor_contag_disease.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN donor_contag_disease.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN donor_contag_disease.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN donor_contag_disease.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN donor_contag_disease.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN donor_contag_disease.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        where_in                    VARCHAR2 DEFAULT NULL,
        handle_error_in             IN BOOLEAN := TRUE
    );

    PROCEDURE upd_ins
    (
        id_organ_donor_in           IN donor_contag_disease.id_organ_donor%TYPE,
        id_pat_history_diagnosis_in IN donor_contag_disease.id_pat_history_diagnosis%TYPE,
        id_donor_contag_disease_in  IN donor_contag_disease.id_donor_contag_disease%TYPE DEFAULT NULL,
        create_user_in              IN donor_contag_disease.create_user%TYPE DEFAULT NULL,
        create_time_in              IN donor_contag_disease.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN donor_contag_disease.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN donor_contag_disease.update_user%TYPE DEFAULT NULL,
        update_time_in              IN donor_contag_disease.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN donor_contag_disease.update_institution%TYPE DEFAULT NULL,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    OUT TABLE_VARCHAR
    );

    PROCEDURE upd_ins
    (
        id_organ_donor_in           IN donor_contag_disease.id_organ_donor%TYPE,
        id_pat_history_diagnosis_in IN donor_contag_disease.id_pat_history_diagnosis%TYPE,
        id_donor_contag_disease_in  IN donor_contag_disease.id_donor_contag_disease%TYPE DEFAULT NULL,
        create_user_in              IN donor_contag_disease.create_user%TYPE DEFAULT NULL,
        create_time_in              IN donor_contag_disease.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN donor_contag_disease.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN donor_contag_disease.update_user%TYPE DEFAULT NULL,
        update_time_in              IN donor_contag_disease.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN donor_contag_disease.update_institution%TYPE DEFAULT NULL,
        handle_error_in             IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        rec_in          IN donor_contag_disease%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT TABLE_VARCHAR
    );

    PROCEDURE upd
    (
        rec_in          IN donor_contag_disease%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        col_in            IN donor_contag_disease_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT TABLE_VARCHAR
    );

    PROCEDURE upd
    (
        col_in            IN donor_contag_disease_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT TABLE_VARCHAR
    );

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_organ_donor_in           IN donor_contag_disease.id_organ_donor%TYPE,
        id_pat_history_diagnosis_in IN donor_contag_disease.id_pat_history_diagnosis%TYPE,
        handle_error_in             IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_organ_donor_in           IN donor_contag_disease.id_organ_donor%TYPE,
        id_pat_history_diagnosis_in IN donor_contag_disease.id_pat_history_diagnosis%TYPE,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    OUT TABLE_VARCHAR
    );

    -- Delete all rows for primary key column ID_ORGAN_DONOR
    PROCEDURE del_id_organ_donor
    (
        id_organ_donor_in IN donor_contag_disease.id_organ_donor%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_ORGAN_DONOR
    PROCEDURE del_id_organ_donor
    (
        id_organ_donor_in IN donor_contag_disease.id_organ_donor%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT TABLE_VARCHAR
    );

    -- Delete all rows for primary key column ID_PAT_HISTORY_DIAGNOSIS
    PROCEDURE del_id_pat_history_diagnosis
    (
        id_pat_history_diagnosis_in IN donor_contag_disease.id_pat_history_diagnosis%TYPE,
        handle_error_in             IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_PAT_HISTORY_DIAGNOSIS
    PROCEDURE del_id_pat_history_diagnosis
    (
        id_pat_history_diagnosis_in IN donor_contag_disease.id_pat_history_diagnosis%TYPE,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    OUT TABLE_VARCHAR
    );

    -- Delete for unique value of DCD_DCD_UK
    PROCEDURE del_dcd_dcd_uk
    (
        id_donor_contag_disease_in IN donor_contag_disease.id_donor_contag_disease%TYPE,
        handle_error_in            IN BOOLEAN := TRUE
    );

    -- Delete for unique value of DCD_DCD_UK
    PROCEDURE del_dcd_dcd_uk
    (
        id_donor_contag_disease_in IN donor_contag_disease.id_donor_contag_disease%TYPE,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT TABLE_VARCHAR
    );

    -- Delete all rows for this DCD_OD_FK foreign key value
    PROCEDURE del_dcd_od_fk
    (
        id_organ_donor_in IN donor_contag_disease.id_organ_donor%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Delete all rows for this DCD_OD_FK foreign key value
    PROCEDURE del_dcd_od_fk
    (
        id_organ_donor_in IN donor_contag_disease.id_organ_donor%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT TABLE_VARCHAR
    );

    -- Delete all rows for this DCD_PHD_FK foreign key value
    PROCEDURE del_dcd_phd_fk
    (
        id_pat_history_diagnosis_in IN donor_contag_disease.id_pat_history_diagnosis%TYPE,
        handle_error_in             IN BOOLEAN := TRUE
    );

    -- Delete all rows for this DCD_PHD_FK foreign key value
    PROCEDURE del_dcd_phd_fk
    (
        id_pat_history_diagnosis_in IN donor_contag_disease.id_pat_history_diagnosis%TYPE,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    OUT TABLE_VARCHAR
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT TABLE_VARCHAR
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT TABLE_VARCHAR
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT TABLE_VARCHAR
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT TABLE_VARCHAR
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT TABLE_VARCHAR
    );

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(donor_contag_disease_inout IN OUT donor_contag_disease%ROWTYPE);

    FUNCTION initrec RETURN donor_contag_disease%ROWTYPE;

    FUNCTION get_data_rowid(rows_in IN TABLE_VARCHAR) RETURN donor_contag_disease_tc;

    FUNCTION get_data_rowid_pat(rows_in IN TABLE_VARCHAR) RETURN donor_contag_disease_tc;

END ts_donor_contag_disease;
/
