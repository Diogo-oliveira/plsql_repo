/*-- Last Change Revision: $Rev: 1666928 $*/
/*-- Last Change by: $Author: nuno.alves $*/
/*-- Date of last change: $Date: 2014-12-01 14:42:22 +0000 (seg, 01 dez 2014) $*/
CREATE OR REPLACE PACKAGE TS_TL_TASK
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Novembro 20, 2014 10:56:42
| Created By: ALERT
*/
IS

  -- Collection of %ROWTYPE records based on "TL_TASK"
     TYPE TL_TASK_tc IS TABLE OF TL_TASK%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE tl_task_ntt IS TABLE OF TL_TASK%ROWTYPE;
     TYPE tl_task_vat IS VARRAY(100) OF TL_TASK%ROWTYPE;

  -- Same type structure, with a static name.
     TYPE aat IS TABLE OF TL_TASK%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE ntt IS TABLE OF TL_TASK%ROWTYPE;
     TYPE vat IS VARRAY(100) OF TL_TASK%ROWTYPE;

   -- Column Collection based on column "ID_TL_TASK"
   TYPE ID_TL_TASK_cc IS TABLE OF TL_TASK.ID_TL_TASK%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DEFAULT_BACK_COLOR"
   TYPE DEFAULT_BACK_COLOR_cc IS TABLE OF TL_TASK.DEFAULT_BACK_COLOR%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "LAYER"
   TYPE LAYER_cc IS TABLE OF TL_TASK.LAYER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CODE_TL_TASK"
   TYPE CODE_TL_TASK_cc IS TABLE OF TL_TASK.CODE_TL_TASK%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ICON"
   TYPE ICON_cc IS TABLE OF TL_TASK.ICON%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "RANK"
   TYPE RANK_cc IS TABLE OF TL_TASK.RANK%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_USER"
   TYPE CREATE_USER_cc IS TABLE OF TL_TASK.CREATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_TIME"
   TYPE CREATE_TIME_cc IS TABLE OF TL_TASK.CREATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_INSTITUTION"
   TYPE CREATE_INSTITUTION_cc IS TABLE OF TL_TASK.CREATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_USER"
   TYPE UPDATE_USER_cc IS TABLE OF TL_TASK.UPDATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_TIME"
   TYPE UPDATE_TIME_cc IS TABLE OF TL_TASK.UPDATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_INSTITUTION"
   TYPE UPDATE_INSTITUTION_cc IS TABLE OF TL_TASK.UPDATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_SWF_FILE_CREATE"
   TYPE ID_SWF_FILE_CREATE_cc IS TABLE OF TL_TASK.ID_SWF_FILE_CREATE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_SWF_FILE_DETAIL"
   TYPE ID_SWF_FILE_DETAIL_cc IS TABLE OF TL_TASK.ID_SWF_FILE_DETAIL%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "INTERNAL_NAME"
   TYPE INTERNAL_NAME_cc IS TABLE OF TL_TASK.INTERNAL_NAME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_FUNCTIONALITY"
   TYPE FLG_FUNCTIONALITY_cc IS TABLE OF TL_TASK.FLG_FUNCTIONALITY%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "REVIEW_CONTEXT"
   TYPE REVIEW_CONTEXT_cc IS TABLE OF TL_TASK.REVIEW_CONTEXT%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PARENT"
   TYPE ID_PARENT_cc IS TABLE OF TL_TASK.ID_PARENT%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "EHR_ACCESS_AREA"
   TYPE EHR_ACCESS_AREA_cc IS TABLE OF TL_TASK.EHR_ACCESS_AREA%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_SYNCH_AREA"
   TYPE FLG_SYNCH_AREA_cc IS TABLE OF TL_TASK.FLG_SYNCH_AREA%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_EA"
   TYPE FLG_EA_cc IS TABLE OF TL_TASK.FLG_EA%TYPE INDEX BY BINARY_INTEGER;

   -- Insert one row, providing primary key if present
   PROCEDURE ins (
      id_tl_task_in IN TL_TASK.ID_TL_TASK%TYPE
      ,
      default_back_color_in IN TL_TASK.DEFAULT_BACK_COLOR%TYPE DEFAULT NULL,
      layer_in IN TL_TASK.LAYER%TYPE DEFAULT NULL,
      code_tl_task_in IN TL_TASK.CODE_TL_TASK%TYPE DEFAULT NULL,
      icon_in IN TL_TASK.ICON%TYPE DEFAULT NULL,
      rank_in IN TL_TASK.RANK%TYPE DEFAULT NULL,
      create_user_in IN TL_TASK.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN TL_TASK.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN TL_TASK.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN TL_TASK.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN TL_TASK.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN TL_TASK.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_swf_file_create_in IN TL_TASK.ID_SWF_FILE_CREATE%TYPE DEFAULT NULL,
      id_swf_file_detail_in IN TL_TASK.ID_SWF_FILE_DETAIL%TYPE DEFAULT NULL,
      internal_name_in IN TL_TASK.INTERNAL_NAME%TYPE DEFAULT NULL,
      flg_functionality_in IN TL_TASK.FLG_FUNCTIONALITY%TYPE DEFAULT 'TP',
      review_context_in IN TL_TASK.REVIEW_CONTEXT%TYPE DEFAULT NULL,
      id_parent_in IN TL_TASK.ID_PARENT%TYPE DEFAULT NULL,
      ehr_access_area_in IN TL_TASK.EHR_ACCESS_AREA%TYPE DEFAULT NULL,
      flg_synch_area_in IN TL_TASK.FLG_SYNCH_AREA%TYPE DEFAULT 'N',
      flg_ea_in IN TL_TASK.FLG_EA%TYPE DEFAULT 'Y'
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_tl_task_in IN TL_TASK.ID_TL_TASK%TYPE
      ,
      default_back_color_in IN TL_TASK.DEFAULT_BACK_COLOR%TYPE DEFAULT NULL,
      layer_in IN TL_TASK.LAYER%TYPE DEFAULT NULL,
      code_tl_task_in IN TL_TASK.CODE_TL_TASK%TYPE DEFAULT NULL,
      icon_in IN TL_TASK.ICON%TYPE DEFAULT NULL,
      rank_in IN TL_TASK.RANK%TYPE DEFAULT NULL,
      create_user_in IN TL_TASK.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN TL_TASK.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN TL_TASK.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN TL_TASK.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN TL_TASK.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN TL_TASK.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_swf_file_create_in IN TL_TASK.ID_SWF_FILE_CREATE%TYPE DEFAULT NULL,
      id_swf_file_detail_in IN TL_TASK.ID_SWF_FILE_DETAIL%TYPE DEFAULT NULL,
      internal_name_in IN TL_TASK.INTERNAL_NAME%TYPE DEFAULT NULL,
      flg_functionality_in IN TL_TASK.FLG_FUNCTIONALITY%TYPE DEFAULT 'TP',
      review_context_in IN TL_TASK.REVIEW_CONTEXT%TYPE DEFAULT NULL,
      id_parent_in IN TL_TASK.ID_PARENT%TYPE DEFAULT NULL,
      ehr_access_area_in IN TL_TASK.EHR_ACCESS_AREA%TYPE DEFAULT NULL,
      flg_synch_area_in IN TL_TASK.FLG_SYNCH_AREA%TYPE DEFAULT 'N',
      flg_ea_in IN TL_TASK.FLG_EA%TYPE DEFAULT 'Y'
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );


   -- Insert a row based on a record.
   PROCEDURE ins (
      rec_in IN TL_TASK%ROWTYPE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rec_in IN TL_TASK%ROWTYPE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Insert a collection of rows using FORALL; all primary key values
   -- must have already been generated, or are handled in triggers.
   PROCEDURE ins (
      rows_in IN TL_TASK_tc
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rows_in IN TL_TASK_tc
     ,handle_error_in IN BOOLEAN := TRUE
   );


   -- Update any/all columns by primary key. If you pass NULL, then
   -- the current column value is set to itself. If you need a more
   -- selected UPDATE then use one of the onecol procedures below.

  PROCEDURE upd (
      id_tl_task_in IN TL_TASK.ID_TL_TASK%TYPE,
      default_back_color_in IN TL_TASK.DEFAULT_BACK_COLOR%TYPE DEFAULT NULL,
      DEFAULT_BACK_COLOR_nin IN BOOLEAN := TRUE,
      layer_in IN TL_TASK.LAYER%TYPE DEFAULT NULL,
      LAYER_nin IN BOOLEAN := TRUE,
      code_tl_task_in IN TL_TASK.CODE_TL_TASK%TYPE DEFAULT NULL,
      CODE_TL_TASK_nin IN BOOLEAN := TRUE,
      icon_in IN TL_TASK.ICON%TYPE DEFAULT NULL,
      ICON_nin IN BOOLEAN := TRUE,
      rank_in IN TL_TASK.RANK%TYPE DEFAULT NULL,
      RANK_nin IN BOOLEAN := TRUE,
      create_user_in IN TL_TASK.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN TL_TASK.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN TL_TASK.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN TL_TASK.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN TL_TASK.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN TL_TASK.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      id_swf_file_create_in IN TL_TASK.ID_SWF_FILE_CREATE%TYPE DEFAULT NULL,
      ID_SWF_FILE_CREATE_nin IN BOOLEAN := TRUE,
      id_swf_file_detail_in IN TL_TASK.ID_SWF_FILE_DETAIL%TYPE DEFAULT NULL,
      ID_SWF_FILE_DETAIL_nin IN BOOLEAN := TRUE,
      internal_name_in IN TL_TASK.INTERNAL_NAME%TYPE DEFAULT NULL,
      INTERNAL_NAME_nin IN BOOLEAN := TRUE,
      flg_functionality_in IN TL_TASK.FLG_FUNCTIONALITY%TYPE DEFAULT NULL,
      FLG_FUNCTIONALITY_nin IN BOOLEAN := TRUE,
      review_context_in IN TL_TASK.REVIEW_CONTEXT%TYPE DEFAULT NULL,
      REVIEW_CONTEXT_nin IN BOOLEAN := TRUE,
      id_parent_in IN TL_TASK.ID_PARENT%TYPE DEFAULT NULL,
      ID_PARENT_nin IN BOOLEAN := TRUE,
      ehr_access_area_in IN TL_TASK.EHR_ACCESS_AREA%TYPE DEFAULT NULL,
      EHR_ACCESS_AREA_nin IN BOOLEAN := TRUE,
      flg_synch_area_in IN TL_TASK.FLG_SYNCH_AREA%TYPE DEFAULT NULL,
      FLG_SYNCH_AREA_nin IN BOOLEAN := TRUE,
      flg_ea_in IN TL_TASK.FLG_EA%TYPE DEFAULT NULL,
      FLG_EA_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


       PROCEDURE upd (
      id_tl_task_in IN TL_TASK.ID_TL_TASK%TYPE,
      default_back_color_in IN TL_TASK.DEFAULT_BACK_COLOR%TYPE DEFAULT NULL,
      DEFAULT_BACK_COLOR_nin IN BOOLEAN := TRUE,
      layer_in IN TL_TASK.LAYER%TYPE DEFAULT NULL,
      LAYER_nin IN BOOLEAN := TRUE,
      code_tl_task_in IN TL_TASK.CODE_TL_TASK%TYPE DEFAULT NULL,
      CODE_TL_TASK_nin IN BOOLEAN := TRUE,
      icon_in IN TL_TASK.ICON%TYPE DEFAULT NULL,
      ICON_nin IN BOOLEAN := TRUE,
      rank_in IN TL_TASK.RANK%TYPE DEFAULT NULL,
      RANK_nin IN BOOLEAN := TRUE,
      create_user_in IN TL_TASK.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN TL_TASK.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN TL_TASK.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN TL_TASK.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN TL_TASK.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN TL_TASK.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      id_swf_file_create_in IN TL_TASK.ID_SWF_FILE_CREATE%TYPE DEFAULT NULL,
      ID_SWF_FILE_CREATE_nin IN BOOLEAN := TRUE,
      id_swf_file_detail_in IN TL_TASK.ID_SWF_FILE_DETAIL%TYPE DEFAULT NULL,
      ID_SWF_FILE_DETAIL_nin IN BOOLEAN := TRUE,
      internal_name_in IN TL_TASK.INTERNAL_NAME%TYPE DEFAULT NULL,
      INTERNAL_NAME_nin IN BOOLEAN := TRUE,
      flg_functionality_in IN TL_TASK.FLG_FUNCTIONALITY%TYPE DEFAULT NULL,
      FLG_FUNCTIONALITY_nin IN BOOLEAN := TRUE,
      review_context_in IN TL_TASK.REVIEW_CONTEXT%TYPE DEFAULT NULL,
      REVIEW_CONTEXT_nin IN BOOLEAN := TRUE,
      id_parent_in IN TL_TASK.ID_PARENT%TYPE DEFAULT NULL,
      ID_PARENT_nin IN BOOLEAN := TRUE,
      ehr_access_area_in IN TL_TASK.EHR_ACCESS_AREA%TYPE DEFAULT NULL,
      EHR_ACCESS_AREA_nin IN BOOLEAN := TRUE,
      flg_synch_area_in IN TL_TASK.FLG_SYNCH_AREA%TYPE DEFAULT NULL,
      FLG_SYNCH_AREA_nin IN BOOLEAN := TRUE,
      flg_ea_in IN TL_TASK.FLG_EA%TYPE DEFAULT NULL,
      FLG_EA_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
      );



      PROCEDURE upd (
      default_back_color_in IN TL_TASK.DEFAULT_BACK_COLOR%TYPE DEFAULT NULL,
      DEFAULT_BACK_COLOR_nin IN BOOLEAN := TRUE,
      layer_in IN TL_TASK.LAYER%TYPE DEFAULT NULL,
      LAYER_nin IN BOOLEAN := TRUE,
      code_tl_task_in IN TL_TASK.CODE_TL_TASK%TYPE DEFAULT NULL,
      CODE_TL_TASK_nin IN BOOLEAN := TRUE,
      icon_in IN TL_TASK.ICON%TYPE DEFAULT NULL,
      ICON_nin IN BOOLEAN := TRUE,
      rank_in IN TL_TASK.RANK%TYPE DEFAULT NULL,
      RANK_nin IN BOOLEAN := TRUE,
      create_user_in IN TL_TASK.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN TL_TASK.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN TL_TASK.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN TL_TASK.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN TL_TASK.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN TL_TASK.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      id_swf_file_create_in IN TL_TASK.ID_SWF_FILE_CREATE%TYPE DEFAULT NULL,
      ID_SWF_FILE_CREATE_nin IN BOOLEAN := TRUE,
      id_swf_file_detail_in IN TL_TASK.ID_SWF_FILE_DETAIL%TYPE DEFAULT NULL,
      ID_SWF_FILE_DETAIL_nin IN BOOLEAN := TRUE,
      internal_name_in IN TL_TASK.INTERNAL_NAME%TYPE DEFAULT NULL,
      INTERNAL_NAME_nin IN BOOLEAN := TRUE,
      flg_functionality_in IN TL_TASK.FLG_FUNCTIONALITY%TYPE DEFAULT NULL,
      FLG_FUNCTIONALITY_nin IN BOOLEAN := TRUE,
      review_context_in IN TL_TASK.REVIEW_CONTEXT%TYPE DEFAULT NULL,
      REVIEW_CONTEXT_nin IN BOOLEAN := TRUE,
      id_parent_in IN TL_TASK.ID_PARENT%TYPE DEFAULT NULL,
      ID_PARENT_nin IN BOOLEAN := TRUE,
      ehr_access_area_in IN TL_TASK.EHR_ACCESS_AREA%TYPE DEFAULT NULL,
      EHR_ACCESS_AREA_nin IN BOOLEAN := TRUE,
      flg_synch_area_in IN TL_TASK.FLG_SYNCH_AREA%TYPE DEFAULT NULL,
      FLG_SYNCH_AREA_nin IN BOOLEAN := TRUE,
      flg_ea_in IN TL_TASK.FLG_EA%TYPE DEFAULT NULL,
      FLG_EA_nin IN BOOLEAN := TRUE,
    where_in varchar2,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


      PROCEDURE upd (
      default_back_color_in IN TL_TASK.DEFAULT_BACK_COLOR%TYPE DEFAULT NULL,
      DEFAULT_BACK_COLOR_nin IN BOOLEAN := TRUE,
      layer_in IN TL_TASK.LAYER%TYPE DEFAULT NULL,
      LAYER_nin IN BOOLEAN := TRUE,
      code_tl_task_in IN TL_TASK.CODE_TL_TASK%TYPE DEFAULT NULL,
      CODE_TL_TASK_nin IN BOOLEAN := TRUE,
      icon_in IN TL_TASK.ICON%TYPE DEFAULT NULL,
      ICON_nin IN BOOLEAN := TRUE,
      rank_in IN TL_TASK.RANK%TYPE DEFAULT NULL,
      RANK_nin IN BOOLEAN := TRUE,
      create_user_in IN TL_TASK.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN TL_TASK.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN TL_TASK.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN TL_TASK.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN TL_TASK.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN TL_TASK.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      id_swf_file_create_in IN TL_TASK.ID_SWF_FILE_CREATE%TYPE DEFAULT NULL,
      ID_SWF_FILE_CREATE_nin IN BOOLEAN := TRUE,
      id_swf_file_detail_in IN TL_TASK.ID_SWF_FILE_DETAIL%TYPE DEFAULT NULL,
      ID_SWF_FILE_DETAIL_nin IN BOOLEAN := TRUE,
      internal_name_in IN TL_TASK.INTERNAL_NAME%TYPE DEFAULT NULL,
      INTERNAL_NAME_nin IN BOOLEAN := TRUE,
      flg_functionality_in IN TL_TASK.FLG_FUNCTIONALITY%TYPE DEFAULT NULL,
      FLG_FUNCTIONALITY_nin IN BOOLEAN := TRUE,
      review_context_in IN TL_TASK.REVIEW_CONTEXT%TYPE DEFAULT NULL,
      REVIEW_CONTEXT_nin IN BOOLEAN := TRUE,
      id_parent_in IN TL_TASK.ID_PARENT%TYPE DEFAULT NULL,
      ID_PARENT_nin IN BOOLEAN := TRUE,
      ehr_access_area_in IN TL_TASK.EHR_ACCESS_AREA%TYPE DEFAULT NULL,
      EHR_ACCESS_AREA_nin IN BOOLEAN := TRUE,
      flg_synch_area_in IN TL_TASK.FLG_SYNCH_AREA%TYPE DEFAULT NULL,
      FLG_SYNCH_AREA_nin IN BOOLEAN := TRUE,
      flg_ea_in IN TL_TASK.FLG_EA%TYPE DEFAULT NULL,
      FLG_EA_nin IN BOOLEAN := TRUE,
    where_in varchar2,
     handle_error_in IN BOOLEAN := TRUE
      );



   PROCEDURE upd_ins (
      id_tl_task_in IN TL_TASK.ID_TL_TASK%TYPE,
      default_back_color_in IN TL_TASK.DEFAULT_BACK_COLOR%TYPE DEFAULT NULL,
      layer_in IN TL_TASK.LAYER%TYPE DEFAULT NULL,
      code_tl_task_in IN TL_TASK.CODE_TL_TASK%TYPE DEFAULT NULL,
      icon_in IN TL_TASK.ICON%TYPE DEFAULT NULL,
      rank_in IN TL_TASK.RANK%TYPE DEFAULT NULL,
      create_user_in IN TL_TASK.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN TL_TASK.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN TL_TASK.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN TL_TASK.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN TL_TASK.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN TL_TASK.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_swf_file_create_in IN TL_TASK.ID_SWF_FILE_CREATE%TYPE DEFAULT NULL,
      id_swf_file_detail_in IN TL_TASK.ID_SWF_FILE_DETAIL%TYPE DEFAULT NULL,
      internal_name_in IN TL_TASK.INTERNAL_NAME%TYPE DEFAULT NULL,
      flg_functionality_in IN TL_TASK.FLG_FUNCTIONALITY%TYPE DEFAULT NULL,
      review_context_in IN TL_TASK.REVIEW_CONTEXT%TYPE DEFAULT NULL,
      id_parent_in IN TL_TASK.ID_PARENT%TYPE DEFAULT NULL,
      ehr_access_area_in IN TL_TASK.EHR_ACCESS_AREA%TYPE DEFAULT NULL,
      flg_synch_area_in IN TL_TASK.FLG_SYNCH_AREA%TYPE DEFAULT NULL,
      flg_ea_in IN TL_TASK.FLG_EA%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

      PROCEDURE upd_ins (
      id_tl_task_in IN TL_TASK.ID_TL_TASK%TYPE,
      default_back_color_in IN TL_TASK.DEFAULT_BACK_COLOR%TYPE DEFAULT NULL,
      layer_in IN TL_TASK.LAYER%TYPE DEFAULT NULL,
      code_tl_task_in IN TL_TASK.CODE_TL_TASK%TYPE DEFAULT NULL,
      icon_in IN TL_TASK.ICON%TYPE DEFAULT NULL,
      rank_in IN TL_TASK.RANK%TYPE DEFAULT NULL,
      create_user_in IN TL_TASK.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN TL_TASK.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN TL_TASK.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN TL_TASK.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN TL_TASK.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN TL_TASK.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_swf_file_create_in IN TL_TASK.ID_SWF_FILE_CREATE%TYPE DEFAULT NULL,
      id_swf_file_detail_in IN TL_TASK.ID_SWF_FILE_DETAIL%TYPE DEFAULT NULL,
      internal_name_in IN TL_TASK.INTERNAL_NAME%TYPE DEFAULT NULL,
      flg_functionality_in IN TL_TASK.FLG_FUNCTIONALITY%TYPE DEFAULT NULL,
      review_context_in IN TL_TASK.REVIEW_CONTEXT%TYPE DEFAULT NULL,
      id_parent_in IN TL_TASK.ID_PARENT%TYPE DEFAULT NULL,
      ehr_access_area_in IN TL_TASK.EHR_ACCESS_AREA%TYPE DEFAULT NULL,
      flg_synch_area_in IN TL_TASK.FLG_SYNCH_AREA%TYPE DEFAULT NULL,
      flg_ea_in IN TL_TASK.FLG_EA%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
      );

   PROCEDURE upd (
      rec_in IN TL_TASK%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      rec_in IN TL_TASK%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
      );

      PROCEDURE upd (
      col_in IN TL_TASK_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      col_in IN TL_TASK_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
      );





   -- Use Native Dynamic SQL increment a single NUMBER column
   -- for all rows specified by the dynamic WHERE clause
   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
   );









    -- Delete one row by primary key
   PROCEDURE del (
      id_tl_task_in IN TL_TASK.ID_TL_TASK%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

-- Delete one row by primary key
   PROCEDURE del (
      id_tl_task_in IN TL_TASK.ID_TL_TASK%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


   -- Delete all rows for primary key column ID_TL_TASK
   PROCEDURE del_ID_TL_TASK (
      id_tl_task_in IN TL_TASK.ID_TL_TASK%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_TL_TASK
   PROCEDURE del_ID_TL_TASK (
      id_tl_task_in IN TL_TASK.ID_TL_TASK%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );

   -- Delete all rows for this TLT_EHRAA_FK foreign key value
   PROCEDURE del_TLT_EHRAA_FK (
      ehr_access_area_in IN TL_TASK.EHR_ACCESS_AREA%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this TLT_EHRAA_FK foreign key value
   PROCEDURE del_TLT_EHRAA_FK (
      ehr_access_area_in IN TL_TASK.EHR_ACCESS_AREA%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this TLT_PRT_FK foreign key value
   PROCEDURE del_TLT_PRT_FK (
      id_parent_in IN TL_TASK.ID_PARENT%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this TLT_PRT_FK foreign key value
   PROCEDURE del_TLT_PRT_FK (
      id_parent_in IN TL_TASK.ID_PARENT%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this TLTT_APPF_FK foreign key value
   PROCEDURE del_TLTT_APPF_FK (
      id_swf_file_create_in IN TL_TASK.ID_SWF_FILE_CREATE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this TLTT_APPF_FK foreign key value
   PROCEDURE del_TLTT_APPF_FK (
      id_swf_file_create_in IN TL_TASK.ID_SWF_FILE_CREATE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this TLTT_APPFL_FK foreign key value
   PROCEDURE del_TLTT_APPFL_FK (
      id_swf_file_detail_in IN TL_TASK.ID_SWF_FILE_DETAIL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this TLTT_APPFL_FK foreign key value
   PROCEDURE del_TLTT_APPFL_FK (
      id_swf_file_detail_in IN TL_TASK.ID_SWF_FILE_DETAIL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );


      -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Initialize a record with default values for columns in the table.
   PROCEDURE initrec (
      tl_task_inout IN OUT TL_TASK%ROWTYPE
   );

   FUNCTION initrec RETURN TL_TASK%ROWTYPE;



   FUNCTION get_data_rowid(
        rows_in IN TABLE_VARCHAR
        ) RETURN TL_TASK_tc;


   FUNCTION get_data_rowid_pat(
        rows_in IN TABLE_VARCHAR
        ) RETURN TL_TASK_tc;

END TS_TL_TASK;
/
