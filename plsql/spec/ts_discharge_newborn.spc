/*-- Last Change Revision: $Rev: 1769546 $*/
/*-- Last Change by: $Author: carlos.ferreira $*/
/*-- Date of last change: $Date: 2017-01-31 17:12:14 +0000 (ter, 31 jan 2017) $*/
CREATE OR REPLACE PACKAGE ts_discharge_newborn
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2017-01-31 16:12:36
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on discharge_newborn
    TYPE discharge_newborn_tc IS TABLE OF discharge_newborn%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE discharge_newborn_ntt IS TABLE OF discharge_newborn%ROWTYPE;
    TYPE discharge_newborn_vat IS VARRAY(100) OF discharge_newborn%ROWTYPE;

    -- Column Collection based on column ID_EPISODE
    TYPE id_episode_cc IS TABLE OF discharge_newborn.id_episode%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_DISCHARGE
    TYPE id_discharge_cc IS TABLE OF discharge_newborn.id_discharge%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_PAT_PREGNANCY
    TYPE id_pat_pregnancy_cc IS TABLE OF discharge_newborn.id_pat_pregnancy%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column FLG_CONDITION
    TYPE flg_condition_cc IS TABLE OF discharge_newborn.flg_condition%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column FLG_STATUS
    TYPE flg_status_cc IS TABLE OF discharge_newborn.flg_status%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_PROF_CREATE
    TYPE id_prof_create_cc IS TABLE OF discharge_newborn.id_prof_create%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column DT_CREATE
    TYPE dt_create_cc IS TABLE OF discharge_newborn.dt_create%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_PROF_LAST_UPDATE
    TYPE id_prof_last_update_cc IS TABLE OF discharge_newborn.id_prof_last_update%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column DT_LAST_UPDATE
    TYPE dt_last_update_cc IS TABLE OF discharge_newborn.dt_last_update%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_PROF_CANCEL
    TYPE id_prof_cancel_cc IS TABLE OF discharge_newborn.id_prof_cancel%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column DT_CANCEL
    TYPE dt_cancel_cc IS TABLE OF discharge_newborn.dt_cancel%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_USER
    TYPE create_user_cc IS TABLE OF discharge_newborn.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_TIME
    TYPE create_time_cc IS TABLE OF discharge_newborn.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_INSTITUTION
    TYPE create_institution_cc IS TABLE OF discharge_newborn.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_USER
    TYPE update_user_cc IS TABLE OF discharge_newborn.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_TIME
    TYPE update_time_cc IS TABLE OF discharge_newborn.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_INSTITUTION
    TYPE update_institution_cc IS TABLE OF discharge_newborn.update_institution%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present (with rows_out)
    PROCEDURE ins
    (
        id_episode_in          IN discharge_newborn.id_episode%TYPE,
        id_discharge_in        IN discharge_newborn.id_discharge%TYPE,
        id_pat_pregnancy_in    IN discharge_newborn.id_pat_pregnancy%TYPE,
        flg_condition_in       IN discharge_newborn.flg_condition%TYPE DEFAULT NULL,
        flg_status_in          IN discharge_newborn.flg_status%TYPE DEFAULT NULL,
        id_prof_create_in      IN discharge_newborn.id_prof_create%TYPE DEFAULT NULL,
        dt_create_in           IN discharge_newborn.dt_create%TYPE DEFAULT NULL,
        id_prof_last_update_in IN discharge_newborn.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_in      IN discharge_newborn.dt_last_update%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN discharge_newborn.id_prof_cancel%TYPE DEFAULT NULL,
        dt_cancel_in           IN discharge_newborn.dt_cancel%TYPE DEFAULT NULL,
        create_user_in         IN discharge_newborn.create_user%TYPE DEFAULT NULL,
        create_time_in         IN discharge_newborn.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN discharge_newborn.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN discharge_newborn.update_user%TYPE DEFAULT NULL,
        update_time_in         IN discharge_newborn.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN discharge_newborn.update_institution%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    );

    -- Insert one row, providing primary key if present (without rows_out)
    PROCEDURE ins
    (
        id_episode_in          IN discharge_newborn.id_episode%TYPE,
        id_discharge_in        IN discharge_newborn.id_discharge%TYPE,
        id_pat_pregnancy_in    IN discharge_newborn.id_pat_pregnancy%TYPE,
        flg_condition_in       IN discharge_newborn.flg_condition%TYPE DEFAULT NULL,
        flg_status_in          IN discharge_newborn.flg_status%TYPE DEFAULT NULL,
        id_prof_create_in      IN discharge_newborn.id_prof_create%TYPE DEFAULT NULL,
        dt_create_in           IN discharge_newborn.dt_create%TYPE DEFAULT NULL,
        id_prof_last_update_in IN discharge_newborn.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_in      IN discharge_newborn.dt_last_update%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN discharge_newborn.id_prof_cancel%TYPE DEFAULT NULL,
        dt_cancel_in           IN discharge_newborn.dt_cancel%TYPE DEFAULT NULL,
        create_user_in         IN discharge_newborn.create_user%TYPE DEFAULT NULL,
        create_time_in         IN discharge_newborn.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN discharge_newborn.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN discharge_newborn.update_user%TYPE DEFAULT NULL,
        update_time_in         IN discharge_newborn.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN discharge_newborn.update_institution%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN discharge_newborn%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN discharge_newborn%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN discharge_newborn_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN discharge_newborn_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_episode_in           IN discharge_newborn.id_episode%TYPE,
        id_discharge_in         IN discharge_newborn.id_discharge%TYPE,
        id_pat_pregnancy_in     IN discharge_newborn.id_pat_pregnancy%TYPE,
        flg_condition_in        IN discharge_newborn.flg_condition%TYPE DEFAULT NULL,
        flg_condition_nin       IN BOOLEAN := TRUE,
        flg_status_in           IN discharge_newborn.flg_status%TYPE DEFAULT NULL,
        flg_status_nin          IN BOOLEAN := TRUE,
        id_prof_create_in       IN discharge_newborn.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin      IN BOOLEAN := TRUE,
        dt_create_in            IN discharge_newborn.dt_create%TYPE DEFAULT NULL,
        dt_create_nin           IN BOOLEAN := TRUE,
        id_prof_last_update_in  IN discharge_newborn.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin IN BOOLEAN := TRUE,
        dt_last_update_in       IN discharge_newborn.dt_last_update%TYPE DEFAULT NULL,
        dt_last_update_nin      IN BOOLEAN := TRUE,
        id_prof_cancel_in       IN discharge_newborn.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin      IN BOOLEAN := TRUE,
        dt_cancel_in            IN discharge_newborn.dt_cancel%TYPE DEFAULT NULL,
        dt_cancel_nin           IN BOOLEAN := TRUE,
        create_user_in          IN discharge_newborn.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN discharge_newborn.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN discharge_newborn.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN discharge_newborn.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN discharge_newborn.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN discharge_newborn.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                IN OUT table_varchar
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_episode_in           IN discharge_newborn.id_episode%TYPE,
        id_discharge_in         IN discharge_newborn.id_discharge%TYPE,
        id_pat_pregnancy_in     IN discharge_newborn.id_pat_pregnancy%TYPE,
        flg_condition_in        IN discharge_newborn.flg_condition%TYPE DEFAULT NULL,
        flg_condition_nin       IN BOOLEAN := TRUE,
        flg_status_in           IN discharge_newborn.flg_status%TYPE DEFAULT NULL,
        flg_status_nin          IN BOOLEAN := TRUE,
        id_prof_create_in       IN discharge_newborn.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin      IN BOOLEAN := TRUE,
        dt_create_in            IN discharge_newborn.dt_create%TYPE DEFAULT NULL,
        dt_create_nin           IN BOOLEAN := TRUE,
        id_prof_last_update_in  IN discharge_newborn.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin IN BOOLEAN := TRUE,
        dt_last_update_in       IN discharge_newborn.dt_last_update%TYPE DEFAULT NULL,
        dt_last_update_nin      IN BOOLEAN := TRUE,
        id_prof_cancel_in       IN discharge_newborn.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin      IN BOOLEAN := TRUE,
        dt_cancel_in            IN discharge_newborn.dt_cancel%TYPE DEFAULT NULL,
        dt_cancel_nin           IN BOOLEAN := TRUE,
        create_user_in          IN discharge_newborn.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN discharge_newborn.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN discharge_newborn.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN discharge_newborn.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN discharge_newborn.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN discharge_newborn.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        handle_error_in         IN BOOLEAN := TRUE
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        flg_condition_in        IN discharge_newborn.flg_condition%TYPE DEFAULT NULL,
        flg_condition_nin       IN BOOLEAN := TRUE,
        flg_status_in           IN discharge_newborn.flg_status%TYPE DEFAULT NULL,
        flg_status_nin          IN BOOLEAN := TRUE,
        id_prof_create_in       IN discharge_newborn.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin      IN BOOLEAN := TRUE,
        dt_create_in            IN discharge_newborn.dt_create%TYPE DEFAULT NULL,
        dt_create_nin           IN BOOLEAN := TRUE,
        id_prof_last_update_in  IN discharge_newborn.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin IN BOOLEAN := TRUE,
        dt_last_update_in       IN discharge_newborn.dt_last_update%TYPE DEFAULT NULL,
        dt_last_update_nin      IN BOOLEAN := TRUE,
        id_prof_cancel_in       IN discharge_newborn.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin      IN BOOLEAN := TRUE,
        dt_cancel_in            IN discharge_newborn.dt_cancel%TYPE DEFAULT NULL,
        dt_cancel_nin           IN BOOLEAN := TRUE,
        create_user_in          IN discharge_newborn.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN discharge_newborn.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN discharge_newborn.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN discharge_newborn.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN discharge_newborn.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN discharge_newborn.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        where_in                IN VARCHAR2,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                IN OUT table_varchar
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        flg_condition_in        IN discharge_newborn.flg_condition%TYPE DEFAULT NULL,
        flg_condition_nin       IN BOOLEAN := TRUE,
        flg_status_in           IN discharge_newborn.flg_status%TYPE DEFAULT NULL,
        flg_status_nin          IN BOOLEAN := TRUE,
        id_prof_create_in       IN discharge_newborn.id_prof_create%TYPE DEFAULT NULL,
        id_prof_create_nin      IN BOOLEAN := TRUE,
        dt_create_in            IN discharge_newborn.dt_create%TYPE DEFAULT NULL,
        dt_create_nin           IN BOOLEAN := TRUE,
        id_prof_last_update_in  IN discharge_newborn.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin IN BOOLEAN := TRUE,
        dt_last_update_in       IN discharge_newborn.dt_last_update%TYPE DEFAULT NULL,
        dt_last_update_nin      IN BOOLEAN := TRUE,
        id_prof_cancel_in       IN discharge_newborn.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin      IN BOOLEAN := TRUE,
        dt_cancel_in            IN discharge_newborn.dt_cancel%TYPE DEFAULT NULL,
        dt_cancel_nin           IN BOOLEAN := TRUE,
        create_user_in          IN discharge_newborn.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN discharge_newborn.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN discharge_newborn.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN discharge_newborn.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN discharge_newborn.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN discharge_newborn.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        where_in                IN VARCHAR2,
        handle_error_in         IN BOOLEAN := TRUE
    );

    --Update/insert with columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_episode_in          IN discharge_newborn.id_episode%TYPE,
        id_discharge_in        IN discharge_newborn.id_discharge%TYPE,
        id_pat_pregnancy_in    IN discharge_newborn.id_pat_pregnancy%TYPE,
        flg_condition_in       IN discharge_newborn.flg_condition%TYPE DEFAULT NULL,
        flg_status_in          IN discharge_newborn.flg_status%TYPE DEFAULT NULL,
        id_prof_create_in      IN discharge_newborn.id_prof_create%TYPE DEFAULT NULL,
        dt_create_in           IN discharge_newborn.dt_create%TYPE DEFAULT NULL,
        id_prof_last_update_in IN discharge_newborn.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_in      IN discharge_newborn.dt_last_update%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN discharge_newborn.id_prof_cancel%TYPE DEFAULT NULL,
        dt_cancel_in           IN discharge_newborn.dt_cancel%TYPE DEFAULT NULL,
        create_user_in         IN discharge_newborn.create_user%TYPE DEFAULT NULL,
        create_time_in         IN discharge_newborn.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN discharge_newborn.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN discharge_newborn.update_user%TYPE DEFAULT NULL,
        update_time_in         IN discharge_newborn.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN discharge_newborn.update_institution%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               IN OUT table_varchar
    );

    --Update/insert with columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_episode_in          IN discharge_newborn.id_episode%TYPE,
        id_discharge_in        IN discharge_newborn.id_discharge%TYPE,
        id_pat_pregnancy_in    IN discharge_newborn.id_pat_pregnancy%TYPE,
        flg_condition_in       IN discharge_newborn.flg_condition%TYPE DEFAULT NULL,
        flg_status_in          IN discharge_newborn.flg_status%TYPE DEFAULT NULL,
        id_prof_create_in      IN discharge_newborn.id_prof_create%TYPE DEFAULT NULL,
        dt_create_in           IN discharge_newborn.dt_create%TYPE DEFAULT NULL,
        id_prof_last_update_in IN discharge_newborn.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_in      IN discharge_newborn.dt_last_update%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN discharge_newborn.id_prof_cancel%TYPE DEFAULT NULL,
        dt_cancel_in           IN discharge_newborn.dt_cancel%TYPE DEFAULT NULL,
        create_user_in         IN discharge_newborn.create_user%TYPE DEFAULT NULL,
        create_time_in         IN discharge_newborn.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN discharge_newborn.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN discharge_newborn.update_user%TYPE DEFAULT NULL,
        update_time_in         IN discharge_newborn.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN discharge_newborn.update_institution%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE
    );

    --Update record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN discharge_newborn%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    --Update record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN discharge_newborn%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    --Update collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN discharge_newborn_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    --Update collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN discharge_newborn_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    --increment column value
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_episode_in       IN discharge_newborn.id_episode%TYPE,
        id_discharge_in     IN discharge_newborn.id_discharge%TYPE,
        id_pat_pregnancy_in IN discharge_newborn.id_pat_pregnancy%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_episode_in       IN discharge_newborn.id_episode%TYPE,
        id_discharge_in     IN discharge_newborn.id_discharge%TYPE,
        id_pat_pregnancy_in IN discharge_newborn.id_pat_pregnancy%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this DNB_DISCH_FK foreign key value
    PROCEDURE del_dnb_disch_fk
    (
        id_discharge_in IN discharge_newborn.id_discharge%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this DNB_EPIS_FK foreign key value
    PROCEDURE del_dnb_epis_fk
    (
        id_episode_in   IN discharge_newborn.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this DNB_PPRENG_FK foreign key value
    PROCEDURE del_dnb_ppreng_fk
    (
        id_pat_pregnancy_in IN discharge_newborn.id_pat_pregnancy%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    );

    -- Delete all rows for this DNB_DISCH_FK foreign key value
    PROCEDURE del_dnb_disch_fk
    (
        id_discharge_in IN discharge_newborn.id_discharge%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this DNB_EPIS_FK foreign key value
    PROCEDURE del_dnb_epis_fk
    (
        id_episode_in   IN discharge_newborn.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this DNB_PPRENG_FK foreign key value
    PROCEDURE del_dnb_ppreng_fk
    (
        id_pat_pregnancy_in IN discharge_newborn.id_pat_pregnancy%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    );

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(discharge_newborn_inout IN OUT discharge_newborn%ROWTYPE);

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN discharge_newborn%ROWTYPE;

    -- Get data rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN discharge_newborn_tc;

    -- Get data rowid pragma autonomous transaccion
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN discharge_newborn_tc;

END ts_discharge_newborn;
/
