/*-- Last Change Revision: $Rev: 2029068 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:49:36 +0100 (ter, 02 ago 2022) $*/
CREATE OR REPLACE PACKAGE ts_adm_req_diagnosis
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Dezembro 20, 2011 14:35:31
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on "ADM_REQ_DIAGNOSIS"
    TYPE adm_req_diagnosis_tc IS TABLE OF adm_req_diagnosis%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE adm_req_diagnosis_ntt IS TABLE OF adm_req_diagnosis%ROWTYPE;
    TYPE adm_req_diagnosis_vat IS VARRAY(100) OF adm_req_diagnosis%ROWTYPE;

    -- Same type structure, with a static name.
    TYPE aat IS TABLE OF adm_req_diagnosis%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE ntt IS TABLE OF adm_req_diagnosis%ROWTYPE;
    TYPE vat IS VARRAY(100) OF adm_req_diagnosis%ROWTYPE;

    -- Column Collection based on column "ID_ADM_REQ_DIAGNOSIS"
    TYPE id_adm_req_diagnosis_cc IS TABLE OF adm_req_diagnosis.id_adm_req_diagnosis%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_ADM_REQUEST"
    TYPE id_adm_request_cc IS TABLE OF adm_req_diagnosis.id_adm_request%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROFESSIONAL_DIAG"
    TYPE id_professional_diag_cc IS TABLE OF adm_req_diagnosis.id_professional_diag%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_STATUS"
    TYPE flg_status_cc IS TABLE OF adm_req_diagnosis.flg_status%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_DIAG_STATUS"
    TYPE flg_diag_status_cc IS TABLE OF adm_req_diagnosis.flg_diag_status%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_EPIS_DIAGNOSIS"
    TYPE dt_epis_diagnosis_cc IS TABLE OF adm_req_diagnosis.dt_epis_diagnosis%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "NOTES"
    TYPE notes_cc IS TABLE OF adm_req_diagnosis.notes%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROFESSIONAL_UPDATE"
    TYPE id_professional_update_cc IS TABLE OF adm_req_diagnosis.id_professional_update%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_UPDATE"
    TYPE dt_update_cc IS TABLE OF adm_req_diagnosis.dt_update%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_USER"
    TYPE create_user_cc IS TABLE OF adm_req_diagnosis.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_TIME"
    TYPE create_time_cc IS TABLE OF adm_req_diagnosis.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_INSTITUTION"
    TYPE create_institution_cc IS TABLE OF adm_req_diagnosis.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_USER"
    TYPE update_user_cc IS TABLE OF adm_req_diagnosis.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_TIME"
    TYPE update_time_cc IS TABLE OF adm_req_diagnosis.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_INSTITUTION"
    TYPE update_institution_cc IS TABLE OF adm_req_diagnosis.update_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_EPIS_DIAGNOSIS"
    TYPE id_epis_diagnosis_cc IS TABLE OF adm_req_diagnosis.id_epis_diagnosis%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present
    PROCEDURE ins
    (
        id_adm_req_diagnosis_in   IN adm_req_diagnosis.id_adm_req_diagnosis%TYPE,
        id_adm_request_in         IN adm_req_diagnosis.id_adm_request%TYPE DEFAULT NULL,
        id_professional_diag_in   IN adm_req_diagnosis.id_professional_diag%TYPE DEFAULT NULL,
        flg_status_in             IN adm_req_diagnosis.flg_status%TYPE DEFAULT NULL,
        flg_diag_status_in        IN adm_req_diagnosis.flg_diag_status%TYPE DEFAULT NULL,
        dt_epis_diagnosis_in      IN adm_req_diagnosis.dt_epis_diagnosis%TYPE DEFAULT NULL,
        notes_in                  IN adm_req_diagnosis.notes%TYPE DEFAULT NULL,
        id_professional_update_in IN adm_req_diagnosis.id_professional_update%TYPE DEFAULT NULL,
        dt_update_in              IN adm_req_diagnosis.dt_update%TYPE DEFAULT NULL,
        create_user_in            IN adm_req_diagnosis.create_user%TYPE DEFAULT NULL,
        create_time_in            IN adm_req_diagnosis.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN adm_req_diagnosis.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN adm_req_diagnosis.update_user%TYPE DEFAULT NULL,
        update_time_in            IN adm_req_diagnosis.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN adm_req_diagnosis.update_institution%TYPE DEFAULT NULL,
        id_epis_diagnosis_in      IN adm_req_diagnosis.id_epis_diagnosis%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_adm_req_diagnosis_in   IN adm_req_diagnosis.id_adm_req_diagnosis%TYPE,
        id_adm_request_in         IN adm_req_diagnosis.id_adm_request%TYPE DEFAULT NULL,
        id_professional_diag_in   IN adm_req_diagnosis.id_professional_diag%TYPE DEFAULT NULL,
        flg_status_in             IN adm_req_diagnosis.flg_status%TYPE DEFAULT NULL,
        flg_diag_status_in        IN adm_req_diagnosis.flg_diag_status%TYPE DEFAULT NULL,
        dt_epis_diagnosis_in      IN adm_req_diagnosis.dt_epis_diagnosis%TYPE DEFAULT NULL,
        notes_in                  IN adm_req_diagnosis.notes%TYPE DEFAULT NULL,
        id_professional_update_in IN adm_req_diagnosis.id_professional_update%TYPE DEFAULT NULL,
        dt_update_in              IN adm_req_diagnosis.dt_update%TYPE DEFAULT NULL,
        create_user_in            IN adm_req_diagnosis.create_user%TYPE DEFAULT NULL,
        create_time_in            IN adm_req_diagnosis.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN adm_req_diagnosis.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN adm_req_diagnosis.update_user%TYPE DEFAULT NULL,
        update_time_in            IN adm_req_diagnosis.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN adm_req_diagnosis.update_institution%TYPE DEFAULT NULL,
        id_epis_diagnosis_in      IN adm_req_diagnosis.id_epis_diagnosis%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record.
    -- Specify whether or not a primary key value should be generated.
    PROCEDURE ins
    (
        rec_in          IN adm_req_diagnosis%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rec_in          IN adm_req_diagnosis%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers.
    PROCEDURE ins
    (
        rows_in         IN adm_req_diagnosis_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rows_in         IN adm_req_diagnosis_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Return next primary key value using the named sequence.
    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN adm_req_diagnosis.id_adm_req_diagnosis%TYPE;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_adm_request_in         IN adm_req_diagnosis.id_adm_request%TYPE DEFAULT NULL,
        id_professional_diag_in   IN adm_req_diagnosis.id_professional_diag%TYPE DEFAULT NULL,
        flg_status_in             IN adm_req_diagnosis.flg_status%TYPE DEFAULT NULL,
        flg_diag_status_in        IN adm_req_diagnosis.flg_diag_status%TYPE DEFAULT NULL,
        dt_epis_diagnosis_in      IN adm_req_diagnosis.dt_epis_diagnosis%TYPE DEFAULT NULL,
        notes_in                  IN adm_req_diagnosis.notes%TYPE DEFAULT NULL,
        id_professional_update_in IN adm_req_diagnosis.id_professional_update%TYPE DEFAULT NULL,
        dt_update_in              IN adm_req_diagnosis.dt_update%TYPE DEFAULT NULL,
        create_user_in            IN adm_req_diagnosis.create_user%TYPE DEFAULT NULL,
        create_time_in            IN adm_req_diagnosis.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN adm_req_diagnosis.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN adm_req_diagnosis.update_user%TYPE DEFAULT NULL,
        update_time_in            IN adm_req_diagnosis.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN adm_req_diagnosis.update_institution%TYPE DEFAULT NULL,
        id_epis_diagnosis_in      IN adm_req_diagnosis.id_epis_diagnosis%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_adm_request_in         IN adm_req_diagnosis.id_adm_request%TYPE DEFAULT NULL,
        id_professional_diag_in   IN adm_req_diagnosis.id_professional_diag%TYPE DEFAULT NULL,
        flg_status_in             IN adm_req_diagnosis.flg_status%TYPE DEFAULT NULL,
        flg_diag_status_in        IN adm_req_diagnosis.flg_diag_status%TYPE DEFAULT NULL,
        dt_epis_diagnosis_in      IN adm_req_diagnosis.dt_epis_diagnosis%TYPE DEFAULT NULL,
        notes_in                  IN adm_req_diagnosis.notes%TYPE DEFAULT NULL,
        id_professional_update_in IN adm_req_diagnosis.id_professional_update%TYPE DEFAULT NULL,
        dt_update_in              IN adm_req_diagnosis.dt_update%TYPE DEFAULT NULL,
        create_user_in            IN adm_req_diagnosis.create_user%TYPE DEFAULT NULL,
        create_time_in            IN adm_req_diagnosis.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN adm_req_diagnosis.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN adm_req_diagnosis.update_user%TYPE DEFAULT NULL,
        update_time_in            IN adm_req_diagnosis.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN adm_req_diagnosis.update_institution%TYPE DEFAULT NULL,
        id_epis_diagnosis_in      IN adm_req_diagnosis.id_epis_diagnosis%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_adm_request_in         IN adm_req_diagnosis.id_adm_request%TYPE DEFAULT NULL,
        id_professional_diag_in   IN adm_req_diagnosis.id_professional_diag%TYPE DEFAULT NULL,
        flg_status_in             IN adm_req_diagnosis.flg_status%TYPE DEFAULT NULL,
        flg_diag_status_in        IN adm_req_diagnosis.flg_diag_status%TYPE DEFAULT NULL,
        dt_epis_diagnosis_in      IN adm_req_diagnosis.dt_epis_diagnosis%TYPE DEFAULT NULL,
        notes_in                  IN adm_req_diagnosis.notes%TYPE DEFAULT NULL,
        id_professional_update_in IN adm_req_diagnosis.id_professional_update%TYPE DEFAULT NULL,
        dt_update_in              IN adm_req_diagnosis.dt_update%TYPE DEFAULT NULL,
        create_user_in            IN adm_req_diagnosis.create_user%TYPE DEFAULT NULL,
        create_time_in            IN adm_req_diagnosis.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN adm_req_diagnosis.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN adm_req_diagnosis.update_user%TYPE DEFAULT NULL,
        update_time_in            IN adm_req_diagnosis.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN adm_req_diagnosis.update_institution%TYPE DEFAULT NULL,
        id_epis_diagnosis_in      IN adm_req_diagnosis.id_epis_diagnosis%TYPE DEFAULT NULL,
        id_adm_req_diagnosis_out  IN OUT adm_req_diagnosis.id_adm_req_diagnosis%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_adm_request_in         IN adm_req_diagnosis.id_adm_request%TYPE DEFAULT NULL,
        id_professional_diag_in   IN adm_req_diagnosis.id_professional_diag%TYPE DEFAULT NULL,
        flg_status_in             IN adm_req_diagnosis.flg_status%TYPE DEFAULT NULL,
        flg_diag_status_in        IN adm_req_diagnosis.flg_diag_status%TYPE DEFAULT NULL,
        dt_epis_diagnosis_in      IN adm_req_diagnosis.dt_epis_diagnosis%TYPE DEFAULT NULL,
        notes_in                  IN adm_req_diagnosis.notes%TYPE DEFAULT NULL,
        id_professional_update_in IN adm_req_diagnosis.id_professional_update%TYPE DEFAULT NULL,
        dt_update_in              IN adm_req_diagnosis.dt_update%TYPE DEFAULT NULL,
        create_user_in            IN adm_req_diagnosis.create_user%TYPE DEFAULT NULL,
        create_time_in            IN adm_req_diagnosis.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN adm_req_diagnosis.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN adm_req_diagnosis.update_user%TYPE DEFAULT NULL,
        update_time_in            IN adm_req_diagnosis.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN adm_req_diagnosis.update_institution%TYPE DEFAULT NULL,
        id_epis_diagnosis_in      IN adm_req_diagnosis.id_epis_diagnosis%TYPE DEFAULT NULL,
        id_adm_req_diagnosis_out  IN OUT adm_req_diagnosis.id_adm_req_diagnosis%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_adm_request_in         IN adm_req_diagnosis.id_adm_request%TYPE DEFAULT NULL,
        id_professional_diag_in   IN adm_req_diagnosis.id_professional_diag%TYPE DEFAULT NULL,
        flg_status_in             IN adm_req_diagnosis.flg_status%TYPE DEFAULT NULL,
        flg_diag_status_in        IN adm_req_diagnosis.flg_diag_status%TYPE DEFAULT NULL,
        dt_epis_diagnosis_in      IN adm_req_diagnosis.dt_epis_diagnosis%TYPE DEFAULT NULL,
        notes_in                  IN adm_req_diagnosis.notes%TYPE DEFAULT NULL,
        id_professional_update_in IN adm_req_diagnosis.id_professional_update%TYPE DEFAULT NULL,
        dt_update_in              IN adm_req_diagnosis.dt_update%TYPE DEFAULT NULL,
        create_user_in            IN adm_req_diagnosis.create_user%TYPE DEFAULT NULL,
        create_time_in            IN adm_req_diagnosis.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN adm_req_diagnosis.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN adm_req_diagnosis.update_user%TYPE DEFAULT NULL,
        update_time_in            IN adm_req_diagnosis.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN adm_req_diagnosis.update_institution%TYPE DEFAULT NULL,
        id_epis_diagnosis_in      IN adm_req_diagnosis.id_epis_diagnosis%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN adm_req_diagnosis.id_adm_req_diagnosis%TYPE;

    FUNCTION ins
    (
        id_adm_request_in         IN adm_req_diagnosis.id_adm_request%TYPE DEFAULT NULL,
        id_professional_diag_in   IN adm_req_diagnosis.id_professional_diag%TYPE DEFAULT NULL,
        flg_status_in             IN adm_req_diagnosis.flg_status%TYPE DEFAULT NULL,
        flg_diag_status_in        IN adm_req_diagnosis.flg_diag_status%TYPE DEFAULT NULL,
        dt_epis_diagnosis_in      IN adm_req_diagnosis.dt_epis_diagnosis%TYPE DEFAULT NULL,
        notes_in                  IN adm_req_diagnosis.notes%TYPE DEFAULT NULL,
        id_professional_update_in IN adm_req_diagnosis.id_professional_update%TYPE DEFAULT NULL,
        dt_update_in              IN adm_req_diagnosis.dt_update%TYPE DEFAULT NULL,
        create_user_in            IN adm_req_diagnosis.create_user%TYPE DEFAULT NULL,
        create_time_in            IN adm_req_diagnosis.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN adm_req_diagnosis.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN adm_req_diagnosis.update_user%TYPE DEFAULT NULL,
        update_time_in            IN adm_req_diagnosis.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN adm_req_diagnosis.update_institution%TYPE DEFAULT NULL,
        id_epis_diagnosis_in      IN adm_req_diagnosis.id_epis_diagnosis%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN adm_req_diagnosis.id_adm_req_diagnosis%TYPE;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.

    PROCEDURE upd
    (
        id_adm_req_diagnosis_in    IN adm_req_diagnosis.id_adm_req_diagnosis%TYPE,
        id_adm_request_in          IN adm_req_diagnosis.id_adm_request%TYPE DEFAULT NULL,
        id_adm_request_nin         IN BOOLEAN := TRUE,
        id_professional_diag_in    IN adm_req_diagnosis.id_professional_diag%TYPE DEFAULT NULL,
        id_professional_diag_nin   IN BOOLEAN := TRUE,
        flg_status_in              IN adm_req_diagnosis.flg_status%TYPE DEFAULT NULL,
        flg_status_nin             IN BOOLEAN := TRUE,
        flg_diag_status_in         IN adm_req_diagnosis.flg_diag_status%TYPE DEFAULT NULL,
        flg_diag_status_nin        IN BOOLEAN := TRUE,
        dt_epis_diagnosis_in       IN adm_req_diagnosis.dt_epis_diagnosis%TYPE DEFAULT NULL,
        dt_epis_diagnosis_nin      IN BOOLEAN := TRUE,
        notes_in                   IN adm_req_diagnosis.notes%TYPE DEFAULT NULL,
        notes_nin                  IN BOOLEAN := TRUE,
        id_professional_update_in  IN adm_req_diagnosis.id_professional_update%TYPE DEFAULT NULL,
        id_professional_update_nin IN BOOLEAN := TRUE,
        dt_update_in               IN adm_req_diagnosis.dt_update%TYPE DEFAULT NULL,
        dt_update_nin              IN BOOLEAN := TRUE,
        create_user_in             IN adm_req_diagnosis.create_user%TYPE DEFAULT NULL,
        create_user_nin            IN BOOLEAN := TRUE,
        create_time_in             IN adm_req_diagnosis.create_time%TYPE DEFAULT NULL,
        create_time_nin            IN BOOLEAN := TRUE,
        create_institution_in      IN adm_req_diagnosis.create_institution%TYPE DEFAULT NULL,
        create_institution_nin     IN BOOLEAN := TRUE,
        update_user_in             IN adm_req_diagnosis.update_user%TYPE DEFAULT NULL,
        update_user_nin            IN BOOLEAN := TRUE,
        update_time_in             IN adm_req_diagnosis.update_time%TYPE DEFAULT NULL,
        update_time_nin            IN BOOLEAN := TRUE,
        update_institution_in      IN adm_req_diagnosis.update_institution%TYPE DEFAULT NULL,
        update_institution_nin     IN BOOLEAN := TRUE,
        id_epis_diagnosis_in       IN adm_req_diagnosis.id_epis_diagnosis%TYPE DEFAULT NULL,
        id_epis_diagnosis_nin      IN BOOLEAN := TRUE,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_adm_req_diagnosis_in    IN adm_req_diagnosis.id_adm_req_diagnosis%TYPE,
        id_adm_request_in          IN adm_req_diagnosis.id_adm_request%TYPE DEFAULT NULL,
        id_adm_request_nin         IN BOOLEAN := TRUE,
        id_professional_diag_in    IN adm_req_diagnosis.id_professional_diag%TYPE DEFAULT NULL,
        id_professional_diag_nin   IN BOOLEAN := TRUE,
        flg_status_in              IN adm_req_diagnosis.flg_status%TYPE DEFAULT NULL,
        flg_status_nin             IN BOOLEAN := TRUE,
        flg_diag_status_in         IN adm_req_diagnosis.flg_diag_status%TYPE DEFAULT NULL,
        flg_diag_status_nin        IN BOOLEAN := TRUE,
        dt_epis_diagnosis_in       IN adm_req_diagnosis.dt_epis_diagnosis%TYPE DEFAULT NULL,
        dt_epis_diagnosis_nin      IN BOOLEAN := TRUE,
        notes_in                   IN adm_req_diagnosis.notes%TYPE DEFAULT NULL,
        notes_nin                  IN BOOLEAN := TRUE,
        id_professional_update_in  IN adm_req_diagnosis.id_professional_update%TYPE DEFAULT NULL,
        id_professional_update_nin IN BOOLEAN := TRUE,
        dt_update_in               IN adm_req_diagnosis.dt_update%TYPE DEFAULT NULL,
        dt_update_nin              IN BOOLEAN := TRUE,
        create_user_in             IN adm_req_diagnosis.create_user%TYPE DEFAULT NULL,
        create_user_nin            IN BOOLEAN := TRUE,
        create_time_in             IN adm_req_diagnosis.create_time%TYPE DEFAULT NULL,
        create_time_nin            IN BOOLEAN := TRUE,
        create_institution_in      IN adm_req_diagnosis.create_institution%TYPE DEFAULT NULL,
        create_institution_nin     IN BOOLEAN := TRUE,
        update_user_in             IN adm_req_diagnosis.update_user%TYPE DEFAULT NULL,
        update_user_nin            IN BOOLEAN := TRUE,
        update_time_in             IN adm_req_diagnosis.update_time%TYPE DEFAULT NULL,
        update_time_nin            IN BOOLEAN := TRUE,
        update_institution_in      IN adm_req_diagnosis.update_institution%TYPE DEFAULT NULL,
        update_institution_nin     IN BOOLEAN := TRUE,
        id_epis_diagnosis_in       IN adm_req_diagnosis.id_epis_diagnosis%TYPE DEFAULT NULL,
        id_epis_diagnosis_nin      IN BOOLEAN := TRUE,
        handle_error_in            IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        id_adm_request_in          IN adm_req_diagnosis.id_adm_request%TYPE DEFAULT NULL,
        id_adm_request_nin         IN BOOLEAN := TRUE,
        id_professional_diag_in    IN adm_req_diagnosis.id_professional_diag%TYPE DEFAULT NULL,
        id_professional_diag_nin   IN BOOLEAN := TRUE,
        flg_status_in              IN adm_req_diagnosis.flg_status%TYPE DEFAULT NULL,
        flg_status_nin             IN BOOLEAN := TRUE,
        flg_diag_status_in         IN adm_req_diagnosis.flg_diag_status%TYPE DEFAULT NULL,
        flg_diag_status_nin        IN BOOLEAN := TRUE,
        dt_epis_diagnosis_in       IN adm_req_diagnosis.dt_epis_diagnosis%TYPE DEFAULT NULL,
        dt_epis_diagnosis_nin      IN BOOLEAN := TRUE,
        notes_in                   IN adm_req_diagnosis.notes%TYPE DEFAULT NULL,
        notes_nin                  IN BOOLEAN := TRUE,
        id_professional_update_in  IN adm_req_diagnosis.id_professional_update%TYPE DEFAULT NULL,
        id_professional_update_nin IN BOOLEAN := TRUE,
        dt_update_in               IN adm_req_diagnosis.dt_update%TYPE DEFAULT NULL,
        dt_update_nin              IN BOOLEAN := TRUE,
        create_user_in             IN adm_req_diagnosis.create_user%TYPE DEFAULT NULL,
        create_user_nin            IN BOOLEAN := TRUE,
        create_time_in             IN adm_req_diagnosis.create_time%TYPE DEFAULT NULL,
        create_time_nin            IN BOOLEAN := TRUE,
        create_institution_in      IN adm_req_diagnosis.create_institution%TYPE DEFAULT NULL,
        create_institution_nin     IN BOOLEAN := TRUE,
        update_user_in             IN adm_req_diagnosis.update_user%TYPE DEFAULT NULL,
        update_user_nin            IN BOOLEAN := TRUE,
        update_time_in             IN adm_req_diagnosis.update_time%TYPE DEFAULT NULL,
        update_time_nin            IN BOOLEAN := TRUE,
        update_institution_in      IN adm_req_diagnosis.update_institution%TYPE DEFAULT NULL,
        update_institution_nin     IN BOOLEAN := TRUE,
        id_epis_diagnosis_in       IN adm_req_diagnosis.id_epis_diagnosis%TYPE DEFAULT NULL,
        id_epis_diagnosis_nin      IN BOOLEAN := TRUE,
        where_in                   VARCHAR2,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_adm_request_in          IN adm_req_diagnosis.id_adm_request%TYPE DEFAULT NULL,
        id_adm_request_nin         IN BOOLEAN := TRUE,
        id_professional_diag_in    IN adm_req_diagnosis.id_professional_diag%TYPE DEFAULT NULL,
        id_professional_diag_nin   IN BOOLEAN := TRUE,
        flg_status_in              IN adm_req_diagnosis.flg_status%TYPE DEFAULT NULL,
        flg_status_nin             IN BOOLEAN := TRUE,
        flg_diag_status_in         IN adm_req_diagnosis.flg_diag_status%TYPE DEFAULT NULL,
        flg_diag_status_nin        IN BOOLEAN := TRUE,
        dt_epis_diagnosis_in       IN adm_req_diagnosis.dt_epis_diagnosis%TYPE DEFAULT NULL,
        dt_epis_diagnosis_nin      IN BOOLEAN := TRUE,
        notes_in                   IN adm_req_diagnosis.notes%TYPE DEFAULT NULL,
        notes_nin                  IN BOOLEAN := TRUE,
        id_professional_update_in  IN adm_req_diagnosis.id_professional_update%TYPE DEFAULT NULL,
        id_professional_update_nin IN BOOLEAN := TRUE,
        dt_update_in               IN adm_req_diagnosis.dt_update%TYPE DEFAULT NULL,
        dt_update_nin              IN BOOLEAN := TRUE,
        create_user_in             IN adm_req_diagnosis.create_user%TYPE DEFAULT NULL,
        create_user_nin            IN BOOLEAN := TRUE,
        create_time_in             IN adm_req_diagnosis.create_time%TYPE DEFAULT NULL,
        create_time_nin            IN BOOLEAN := TRUE,
        create_institution_in      IN adm_req_diagnosis.create_institution%TYPE DEFAULT NULL,
        create_institution_nin     IN BOOLEAN := TRUE,
        update_user_in             IN adm_req_diagnosis.update_user%TYPE DEFAULT NULL,
        update_user_nin            IN BOOLEAN := TRUE,
        update_time_in             IN adm_req_diagnosis.update_time%TYPE DEFAULT NULL,
        update_time_nin            IN BOOLEAN := TRUE,
        update_institution_in      IN adm_req_diagnosis.update_institution%TYPE DEFAULT NULL,
        update_institution_nin     IN BOOLEAN := TRUE,
        id_epis_diagnosis_in       IN adm_req_diagnosis.id_epis_diagnosis%TYPE DEFAULT NULL,
        id_epis_diagnosis_nin      IN BOOLEAN := TRUE,
        where_in                   VARCHAR2,
        handle_error_in            IN BOOLEAN := TRUE
    );

    PROCEDURE upd_ins
    (
        id_adm_req_diagnosis_in   IN adm_req_diagnosis.id_adm_req_diagnosis%TYPE,
        id_adm_request_in         IN adm_req_diagnosis.id_adm_request%TYPE DEFAULT NULL,
        id_professional_diag_in   IN adm_req_diagnosis.id_professional_diag%TYPE DEFAULT NULL,
        flg_status_in             IN adm_req_diagnosis.flg_status%TYPE DEFAULT NULL,
        flg_diag_status_in        IN adm_req_diagnosis.flg_diag_status%TYPE DEFAULT NULL,
        dt_epis_diagnosis_in      IN adm_req_diagnosis.dt_epis_diagnosis%TYPE DEFAULT NULL,
        notes_in                  IN adm_req_diagnosis.notes%TYPE DEFAULT NULL,
        id_professional_update_in IN adm_req_diagnosis.id_professional_update%TYPE DEFAULT NULL,
        dt_update_in              IN adm_req_diagnosis.dt_update%TYPE DEFAULT NULL,
        create_user_in            IN adm_req_diagnosis.create_user%TYPE DEFAULT NULL,
        create_time_in            IN adm_req_diagnosis.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN adm_req_diagnosis.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN adm_req_diagnosis.update_user%TYPE DEFAULT NULL,
        update_time_in            IN adm_req_diagnosis.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN adm_req_diagnosis.update_institution%TYPE DEFAULT NULL,
        id_epis_diagnosis_in      IN adm_req_diagnosis.id_epis_diagnosis%TYPE DEFAULT NULL,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  OUT table_varchar
    );

    PROCEDURE upd_ins
    (
        id_adm_req_diagnosis_in   IN adm_req_diagnosis.id_adm_req_diagnosis%TYPE,
        id_adm_request_in         IN adm_req_diagnosis.id_adm_request%TYPE DEFAULT NULL,
        id_professional_diag_in   IN adm_req_diagnosis.id_professional_diag%TYPE DEFAULT NULL,
        flg_status_in             IN adm_req_diagnosis.flg_status%TYPE DEFAULT NULL,
        flg_diag_status_in        IN adm_req_diagnosis.flg_diag_status%TYPE DEFAULT NULL,
        dt_epis_diagnosis_in      IN adm_req_diagnosis.dt_epis_diagnosis%TYPE DEFAULT NULL,
        notes_in                  IN adm_req_diagnosis.notes%TYPE DEFAULT NULL,
        id_professional_update_in IN adm_req_diagnosis.id_professional_update%TYPE DEFAULT NULL,
        dt_update_in              IN adm_req_diagnosis.dt_update%TYPE DEFAULT NULL,
        create_user_in            IN adm_req_diagnosis.create_user%TYPE DEFAULT NULL,
        create_time_in            IN adm_req_diagnosis.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN adm_req_diagnosis.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN adm_req_diagnosis.update_user%TYPE DEFAULT NULL,
        update_time_in            IN adm_req_diagnosis.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN adm_req_diagnosis.update_institution%TYPE DEFAULT NULL,
        id_epis_diagnosis_in      IN adm_req_diagnosis.id_epis_diagnosis%TYPE DEFAULT NULL,
        handle_error_in           IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        rec_in          IN adm_req_diagnosis%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    PROCEDURE upd
    (
        rec_in          IN adm_req_diagnosis%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        col_in            IN adm_req_diagnosis_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    PROCEDURE upd
    (
        col_in            IN adm_req_diagnosis_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_adm_req_diagnosis_in IN adm_req_diagnosis.id_adm_req_diagnosis%TYPE,
        handle_error_in         IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_adm_req_diagnosis_in IN adm_req_diagnosis.id_adm_req_diagnosis%TYPE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    );

    -- Delete all rows for primary key column ID_ADM_REQ_DIAGNOSIS
    PROCEDURE del_id_adm_req_diagnosis
    (
        id_adm_req_diagnosis_in IN adm_req_diagnosis.id_adm_req_diagnosis%TYPE,
        handle_error_in         IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_ADM_REQ_DIAGNOSIS
    PROCEDURE del_id_adm_req_diagnosis
    (
        id_adm_req_diagnosis_in IN adm_req_diagnosis.id_adm_req_diagnosis%TYPE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    );

    -- Delete all rows for this ADRD_AREQ_FK foreign key value
    PROCEDURE del_adrd_areq_fk
    (
        id_adm_request_in IN adm_req_diagnosis.id_adm_request%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Delete all rows for this ADRD_AREQ_FK foreign key value
    PROCEDURE del_adrd_areq_fk
    (
        id_adm_request_in IN adm_req_diagnosis.id_adm_request%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows for this ADRD_CPRF_FK foreign key value
    PROCEDURE del_adrd_cprf_fk
    (
        id_professional_diag_in IN adm_req_diagnosis.id_professional_diag%TYPE,
        handle_error_in         IN BOOLEAN := TRUE
    );

    -- Delete all rows for this ADRD_CPRF_FK foreign key value
    PROCEDURE del_adrd_cprf_fk
    (
        id_professional_diag_in IN adm_req_diagnosis.id_professional_diag%TYPE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    );

    -- Delete all rows for this ADRD_UPRF_FK foreign key value
    PROCEDURE del_adrd_uprf_fk
    (
        id_professional_update_in IN adm_req_diagnosis.id_professional_update%TYPE,
        handle_error_in           IN BOOLEAN := TRUE
    );

    -- Delete all rows for this ADRD_UPRF_FK foreign key value
    PROCEDURE del_adrd_uprf_fk
    (
        id_professional_update_in IN adm_req_diagnosis.id_professional_update%TYPE,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  OUT table_varchar
    );

    -- Delete all rows for this ARD_EPIS_DIAG foreign key value
    PROCEDURE del_ard_epis_diag
    (
        id_epis_diagnosis_in IN adm_req_diagnosis.id_epis_diagnosis%TYPE,
        handle_error_in      IN BOOLEAN := TRUE
    );

    -- Delete all rows for this ARD_EPIS_DIAG foreign key value
    PROCEDURE del_ard_epis_diag
    (
        id_epis_diagnosis_in IN adm_req_diagnosis.id_epis_diagnosis%TYPE,
        handle_error_in      IN BOOLEAN := TRUE,
        rows_out             OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(adm_req_diagnosis_inout IN OUT adm_req_diagnosis%ROWTYPE);

    FUNCTION initrec RETURN adm_req_diagnosis%ROWTYPE;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN adm_req_diagnosis_tc;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN adm_req_diagnosis_tc;

END ts_adm_req_diagnosis;
/
