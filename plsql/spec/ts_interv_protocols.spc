/*-- Last Change Revision: $Rev: 1085666 $*/
/*-- Last Change by: $Author: nuno.neves $*/
/*-- Date of last change: $Date: 2011-09-08 11:57:31 +0100 (qui, 08 set 2011) $*/
CREATE OR REPLACE PACKAGE TS_INTERV_PROTOCOLS
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Setembro 8, 2011 11:32:24
| Created By: ALERT
*/
IS

  -- Collection of %ROWTYPE records based on "INTERV_PROTOCOLS"
     TYPE INTERV_PROTOCOLS_tc IS TABLE OF INTERV_PROTOCOLS%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE interv_protocols_ntt IS TABLE OF INTERV_PROTOCOLS%ROWTYPE;
     TYPE interv_protocols_vat IS VARRAY(100) OF INTERV_PROTOCOLS%ROWTYPE;

  -- Same type structure, with a static name.
     TYPE aat IS TABLE OF INTERV_PROTOCOLS%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE ntt IS TABLE OF INTERV_PROTOCOLS%ROWTYPE;
     TYPE vat IS VARRAY(100) OF INTERV_PROTOCOLS%ROWTYPE;

   -- Column Collection based on column "ID_INTERV_PROTOCOLS"
   TYPE ID_INTERV_PROTOCOLS_cc IS TABLE OF INTERV_PROTOCOLS.ID_INTERV_PROTOCOLS%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_INTERVENTION"
   TYPE ID_INTERVENTION_cc IS TABLE OF INTERV_PROTOCOLS.ID_INTERVENTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_AVAILABLE"
   TYPE FLG_AVAILABLE_cc IS TABLE OF INTERV_PROTOCOLS.FLG_AVAILABLE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "RANK"
   TYPE RANK_cc IS TABLE OF INTERV_PROTOCOLS.RANK%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ADW_LAST_UPDATE"
   TYPE ADW_LAST_UPDATE_cc IS TABLE OF INTERV_PROTOCOLS.ADW_LAST_UPDATE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_INTERV_TYPE"
   TYPE FLG_INTERV_TYPE_cc IS TABLE OF INTERV_PROTOCOLS.FLG_INTERV_TYPE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "NUM_TAKE"
   TYPE NUM_TAKE_cc IS TABLE OF INTERV_PROTOCOLS.NUM_TAKE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "INTERVAL"
   TYPE INTERVAL_cc IS TABLE OF INTERV_PROTOCOLS.INTERVAL%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DOSAGE"
   TYPE DOSAGE_cc IS TABLE OF INTERV_PROTOCOLS.DOSAGE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_USER"
   TYPE CREATE_USER_cc IS TABLE OF INTERV_PROTOCOLS.CREATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_TIME"
   TYPE CREATE_TIME_cc IS TABLE OF INTERV_PROTOCOLS.CREATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_INSTITUTION"
   TYPE CREATE_INSTITUTION_cc IS TABLE OF INTERV_PROTOCOLS.CREATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_USER"
   TYPE UPDATE_USER_cc IS TABLE OF INTERV_PROTOCOLS.UPDATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_TIME"
   TYPE UPDATE_TIME_cc IS TABLE OF INTERV_PROTOCOLS.UPDATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_INSTITUTION"
   TYPE UPDATE_INSTITUTION_cc IS TABLE OF INTERV_PROTOCOLS.UPDATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;

   -- Insert one row, providing primary key if present
   PROCEDURE ins (
      id_interv_protocols_in IN INTERV_PROTOCOLS.ID_INTERV_PROTOCOLS%TYPE
      ,
      id_intervention_in IN INTERV_PROTOCOLS.ID_INTERVENTION%TYPE DEFAULT NULL,
      flg_available_in IN INTERV_PROTOCOLS.FLG_AVAILABLE%TYPE DEFAULT NULL,
      rank_in IN INTERV_PROTOCOLS.RANK%TYPE DEFAULT NULL,
      adw_last_update_in IN INTERV_PROTOCOLS.ADW_LAST_UPDATE%TYPE DEFAULT sysdate,
      flg_interv_type_in IN INTERV_PROTOCOLS.FLG_INTERV_TYPE%TYPE DEFAULT NULL,
      num_take_in IN INTERV_PROTOCOLS.NUM_TAKE%TYPE DEFAULT NULL,
      interval_in IN INTERV_PROTOCOLS.INTERVAL%TYPE DEFAULT NULL,
      dosage_in IN INTERV_PROTOCOLS.DOSAGE%TYPE DEFAULT NULL,
      create_user_in IN INTERV_PROTOCOLS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN INTERV_PROTOCOLS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN INTERV_PROTOCOLS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN INTERV_PROTOCOLS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN INTERV_PROTOCOLS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN INTERV_PROTOCOLS.UPDATE_INSTITUTION%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_interv_protocols_in IN INTERV_PROTOCOLS.ID_INTERV_PROTOCOLS%TYPE
      ,
      id_intervention_in IN INTERV_PROTOCOLS.ID_INTERVENTION%TYPE DEFAULT NULL,
      flg_available_in IN INTERV_PROTOCOLS.FLG_AVAILABLE%TYPE DEFAULT NULL,
      rank_in IN INTERV_PROTOCOLS.RANK%TYPE DEFAULT NULL,
      adw_last_update_in IN INTERV_PROTOCOLS.ADW_LAST_UPDATE%TYPE DEFAULT sysdate,
      flg_interv_type_in IN INTERV_PROTOCOLS.FLG_INTERV_TYPE%TYPE DEFAULT NULL,
      num_take_in IN INTERV_PROTOCOLS.NUM_TAKE%TYPE DEFAULT NULL,
      interval_in IN INTERV_PROTOCOLS.INTERVAL%TYPE DEFAULT NULL,
      dosage_in IN INTERV_PROTOCOLS.DOSAGE%TYPE DEFAULT NULL,
      create_user_in IN INTERV_PROTOCOLS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN INTERV_PROTOCOLS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN INTERV_PROTOCOLS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN INTERV_PROTOCOLS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN INTERV_PROTOCOLS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN INTERV_PROTOCOLS.UPDATE_INSTITUTION%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );


   -- Insert a row based on a record.
   -- Specify whether or not a primary key value should be generated.
   PROCEDURE ins (
      rec_in IN INTERV_PROTOCOLS%ROWTYPE
     ,gen_pky_in IN BOOLEAN DEFAULT FALSE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rec_in IN INTERV_PROTOCOLS%ROWTYPE
     ,gen_pky_in IN BOOLEAN DEFAULT FALSE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Insert a collection of rows using FORALL; all primary key values
   -- must have already been generated, or are handled in triggers.
   PROCEDURE ins (
      rows_in IN INTERV_PROTOCOLS_tc
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rows_in IN INTERV_PROTOCOLS_tc
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Return next primary key value using the named sequence.
     FUNCTION next_key (sequence_in IN VARCHAR2 := NULL) RETURN INTERV_PROTOCOLS.ID_INTERV_PROTOCOLS%TYPE;

   -- Insert one row, generating hidden primary key using a sequence
   PROCEDURE ins (
      id_intervention_in IN INTERV_PROTOCOLS.ID_INTERVENTION%TYPE DEFAULT NULL,
      flg_available_in IN INTERV_PROTOCOLS.FLG_AVAILABLE%TYPE DEFAULT NULL,
      rank_in IN INTERV_PROTOCOLS.RANK%TYPE DEFAULT NULL,
      adw_last_update_in IN INTERV_PROTOCOLS.ADW_LAST_UPDATE%TYPE DEFAULT sysdate,
      flg_interv_type_in IN INTERV_PROTOCOLS.FLG_INTERV_TYPE%TYPE DEFAULT NULL,
      num_take_in IN INTERV_PROTOCOLS.NUM_TAKE%TYPE DEFAULT NULL,
      interval_in IN INTERV_PROTOCOLS.INTERVAL%TYPE DEFAULT NULL,
      dosage_in IN INTERV_PROTOCOLS.DOSAGE%TYPE DEFAULT NULL,
      create_user_in IN INTERV_PROTOCOLS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN INTERV_PROTOCOLS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN INTERV_PROTOCOLS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN INTERV_PROTOCOLS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN INTERV_PROTOCOLS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN INTERV_PROTOCOLS.UPDATE_INSTITUTION%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_intervention_in IN INTERV_PROTOCOLS.ID_INTERVENTION%TYPE DEFAULT NULL,
      flg_available_in IN INTERV_PROTOCOLS.FLG_AVAILABLE%TYPE DEFAULT NULL,
      rank_in IN INTERV_PROTOCOLS.RANK%TYPE DEFAULT NULL,
      adw_last_update_in IN INTERV_PROTOCOLS.ADW_LAST_UPDATE%TYPE DEFAULT sysdate,
      flg_interv_type_in IN INTERV_PROTOCOLS.FLG_INTERV_TYPE%TYPE DEFAULT NULL,
      num_take_in IN INTERV_PROTOCOLS.NUM_TAKE%TYPE DEFAULT NULL,
      interval_in IN INTERV_PROTOCOLS.INTERVAL%TYPE DEFAULT NULL,
      dosage_in IN INTERV_PROTOCOLS.DOSAGE%TYPE DEFAULT NULL,
      create_user_in IN INTERV_PROTOCOLS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN INTERV_PROTOCOLS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN INTERV_PROTOCOLS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN INTERV_PROTOCOLS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN INTERV_PROTOCOLS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN INTERV_PROTOCOLS.UPDATE_INSTITUTION%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );

   -- Insert one row, returning primary key generated by sequence
   PROCEDURE ins (
      id_intervention_in IN INTERV_PROTOCOLS.ID_INTERVENTION%TYPE DEFAULT NULL,
      flg_available_in IN INTERV_PROTOCOLS.FLG_AVAILABLE%TYPE DEFAULT NULL,
      rank_in IN INTERV_PROTOCOLS.RANK%TYPE DEFAULT NULL,
      adw_last_update_in IN INTERV_PROTOCOLS.ADW_LAST_UPDATE%TYPE DEFAULT sysdate,
      flg_interv_type_in IN INTERV_PROTOCOLS.FLG_INTERV_TYPE%TYPE DEFAULT NULL,
      num_take_in IN INTERV_PROTOCOLS.NUM_TAKE%TYPE DEFAULT NULL,
      interval_in IN INTERV_PROTOCOLS.INTERVAL%TYPE DEFAULT NULL,
      dosage_in IN INTERV_PROTOCOLS.DOSAGE%TYPE DEFAULT NULL,
      create_user_in IN INTERV_PROTOCOLS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN INTERV_PROTOCOLS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN INTERV_PROTOCOLS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN INTERV_PROTOCOLS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN INTERV_PROTOCOLS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN INTERV_PROTOCOLS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_interv_protocols_out IN OUT INTERV_PROTOCOLS.ID_INTERV_PROTOCOLS%TYPE
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_intervention_in IN INTERV_PROTOCOLS.ID_INTERVENTION%TYPE DEFAULT NULL,
      flg_available_in IN INTERV_PROTOCOLS.FLG_AVAILABLE%TYPE DEFAULT NULL,
      rank_in IN INTERV_PROTOCOLS.RANK%TYPE DEFAULT NULL,
      adw_last_update_in IN INTERV_PROTOCOLS.ADW_LAST_UPDATE%TYPE DEFAULT sysdate,
      flg_interv_type_in IN INTERV_PROTOCOLS.FLG_INTERV_TYPE%TYPE DEFAULT NULL,
      num_take_in IN INTERV_PROTOCOLS.NUM_TAKE%TYPE DEFAULT NULL,
      interval_in IN INTERV_PROTOCOLS.INTERVAL%TYPE DEFAULT NULL,
      dosage_in IN INTERV_PROTOCOLS.DOSAGE%TYPE DEFAULT NULL,
      create_user_in IN INTERV_PROTOCOLS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN INTERV_PROTOCOLS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN INTERV_PROTOCOLS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN INTERV_PROTOCOLS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN INTERV_PROTOCOLS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN INTERV_PROTOCOLS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_interv_protocols_out IN OUT INTERV_PROTOCOLS.ID_INTERV_PROTOCOLS%TYPE
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );

   -- Insert one row with function, return generated primary key
   FUNCTION ins (
      id_intervention_in IN INTERV_PROTOCOLS.ID_INTERVENTION%TYPE DEFAULT NULL,
      flg_available_in IN INTERV_PROTOCOLS.FLG_AVAILABLE%TYPE DEFAULT NULL,
      rank_in IN INTERV_PROTOCOLS.RANK%TYPE DEFAULT NULL,
      adw_last_update_in IN INTERV_PROTOCOLS.ADW_LAST_UPDATE%TYPE DEFAULT sysdate,
      flg_interv_type_in IN INTERV_PROTOCOLS.FLG_INTERV_TYPE%TYPE DEFAULT NULL,
      num_take_in IN INTERV_PROTOCOLS.NUM_TAKE%TYPE DEFAULT NULL,
      interval_in IN INTERV_PROTOCOLS.INTERVAL%TYPE DEFAULT NULL,
      dosage_in IN INTERV_PROTOCOLS.DOSAGE%TYPE DEFAULT NULL,
      create_user_in IN INTERV_PROTOCOLS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN INTERV_PROTOCOLS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN INTERV_PROTOCOLS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN INTERV_PROTOCOLS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN INTERV_PROTOCOLS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN INTERV_PROTOCOLS.UPDATE_INSTITUTION%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
      RETURN
         INTERV_PROTOCOLS.ID_INTERV_PROTOCOLS%TYPE
      ;

   FUNCTION ins (
      id_intervention_in IN INTERV_PROTOCOLS.ID_INTERVENTION%TYPE DEFAULT NULL,
      flg_available_in IN INTERV_PROTOCOLS.FLG_AVAILABLE%TYPE DEFAULT NULL,
      rank_in IN INTERV_PROTOCOLS.RANK%TYPE DEFAULT NULL,
      adw_last_update_in IN INTERV_PROTOCOLS.ADW_LAST_UPDATE%TYPE DEFAULT sysdate,
      flg_interv_type_in IN INTERV_PROTOCOLS.FLG_INTERV_TYPE%TYPE DEFAULT NULL,
      num_take_in IN INTERV_PROTOCOLS.NUM_TAKE%TYPE DEFAULT NULL,
      interval_in IN INTERV_PROTOCOLS.INTERVAL%TYPE DEFAULT NULL,
      dosage_in IN INTERV_PROTOCOLS.DOSAGE%TYPE DEFAULT NULL,
      create_user_in IN INTERV_PROTOCOLS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN INTERV_PROTOCOLS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN INTERV_PROTOCOLS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN INTERV_PROTOCOLS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN INTERV_PROTOCOLS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN INTERV_PROTOCOLS.UPDATE_INSTITUTION%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      )
      RETURN
         INTERV_PROTOCOLS.ID_INTERV_PROTOCOLS%TYPE
      ;

   -- Update any/all columns by primary key. If you pass NULL, then
   -- the current column value is set to itself. If you need a more
   -- selected UPDATE then use one of the onecol procedures below.

  PROCEDURE upd (
      id_interv_protocols_in IN INTERV_PROTOCOLS.ID_INTERV_PROTOCOLS%TYPE,
      id_intervention_in IN INTERV_PROTOCOLS.ID_INTERVENTION%TYPE DEFAULT NULL,
      ID_INTERVENTION_nin IN BOOLEAN := TRUE,
      flg_available_in IN INTERV_PROTOCOLS.FLG_AVAILABLE%TYPE DEFAULT NULL,
      FLG_AVAILABLE_nin IN BOOLEAN := TRUE,
      rank_in IN INTERV_PROTOCOLS.RANK%TYPE DEFAULT NULL,
      RANK_nin IN BOOLEAN := TRUE,
      adw_last_update_in IN INTERV_PROTOCOLS.ADW_LAST_UPDATE%TYPE DEFAULT NULL,
      ADW_LAST_UPDATE_nin IN BOOLEAN := TRUE,
      flg_interv_type_in IN INTERV_PROTOCOLS.FLG_INTERV_TYPE%TYPE DEFAULT NULL,
      FLG_INTERV_TYPE_nin IN BOOLEAN := TRUE,
      num_take_in IN INTERV_PROTOCOLS.NUM_TAKE%TYPE DEFAULT NULL,
      NUM_TAKE_nin IN BOOLEAN := TRUE,
      interval_in IN INTERV_PROTOCOLS.INTERVAL%TYPE DEFAULT NULL,
      INTERVAL_nin IN BOOLEAN := TRUE,
      dosage_in IN INTERV_PROTOCOLS.DOSAGE%TYPE DEFAULT NULL,
      DOSAGE_nin IN BOOLEAN := TRUE,
      create_user_in IN INTERV_PROTOCOLS.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN INTERV_PROTOCOLS.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN INTERV_PROTOCOLS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN INTERV_PROTOCOLS.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN INTERV_PROTOCOLS.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN INTERV_PROTOCOLS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


       PROCEDURE upd (
      id_interv_protocols_in IN INTERV_PROTOCOLS.ID_INTERV_PROTOCOLS%TYPE,
      id_intervention_in IN INTERV_PROTOCOLS.ID_INTERVENTION%TYPE DEFAULT NULL,
      ID_INTERVENTION_nin IN BOOLEAN := TRUE,
      flg_available_in IN INTERV_PROTOCOLS.FLG_AVAILABLE%TYPE DEFAULT NULL,
      FLG_AVAILABLE_nin IN BOOLEAN := TRUE,
      rank_in IN INTERV_PROTOCOLS.RANK%TYPE DEFAULT NULL,
      RANK_nin IN BOOLEAN := TRUE,
      adw_last_update_in IN INTERV_PROTOCOLS.ADW_LAST_UPDATE%TYPE DEFAULT NULL,
      ADW_LAST_UPDATE_nin IN BOOLEAN := TRUE,
      flg_interv_type_in IN INTERV_PROTOCOLS.FLG_INTERV_TYPE%TYPE DEFAULT NULL,
      FLG_INTERV_TYPE_nin IN BOOLEAN := TRUE,
      num_take_in IN INTERV_PROTOCOLS.NUM_TAKE%TYPE DEFAULT NULL,
      NUM_TAKE_nin IN BOOLEAN := TRUE,
      interval_in IN INTERV_PROTOCOLS.INTERVAL%TYPE DEFAULT NULL,
      INTERVAL_nin IN BOOLEAN := TRUE,
      dosage_in IN INTERV_PROTOCOLS.DOSAGE%TYPE DEFAULT NULL,
      DOSAGE_nin IN BOOLEAN := TRUE,
      create_user_in IN INTERV_PROTOCOLS.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN INTERV_PROTOCOLS.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN INTERV_PROTOCOLS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN INTERV_PROTOCOLS.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN INTERV_PROTOCOLS.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN INTERV_PROTOCOLS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
      );



      PROCEDURE upd (
      id_intervention_in IN INTERV_PROTOCOLS.ID_INTERVENTION%TYPE DEFAULT NULL,
      ID_INTERVENTION_nin IN BOOLEAN := TRUE,
      flg_available_in IN INTERV_PROTOCOLS.FLG_AVAILABLE%TYPE DEFAULT NULL,
      FLG_AVAILABLE_nin IN BOOLEAN := TRUE,
      rank_in IN INTERV_PROTOCOLS.RANK%TYPE DEFAULT NULL,
      RANK_nin IN BOOLEAN := TRUE,
      adw_last_update_in IN INTERV_PROTOCOLS.ADW_LAST_UPDATE%TYPE DEFAULT NULL,
      ADW_LAST_UPDATE_nin IN BOOLEAN := TRUE,
      flg_interv_type_in IN INTERV_PROTOCOLS.FLG_INTERV_TYPE%TYPE DEFAULT NULL,
      FLG_INTERV_TYPE_nin IN BOOLEAN := TRUE,
      num_take_in IN INTERV_PROTOCOLS.NUM_TAKE%TYPE DEFAULT NULL,
      NUM_TAKE_nin IN BOOLEAN := TRUE,
      interval_in IN INTERV_PROTOCOLS.INTERVAL%TYPE DEFAULT NULL,
      INTERVAL_nin IN BOOLEAN := TRUE,
      dosage_in IN INTERV_PROTOCOLS.DOSAGE%TYPE DEFAULT NULL,
      DOSAGE_nin IN BOOLEAN := TRUE,
      create_user_in IN INTERV_PROTOCOLS.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN INTERV_PROTOCOLS.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN INTERV_PROTOCOLS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN INTERV_PROTOCOLS.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN INTERV_PROTOCOLS.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN INTERV_PROTOCOLS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
    where_in varchar2 DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


      PROCEDURE upd (
      id_intervention_in IN INTERV_PROTOCOLS.ID_INTERVENTION%TYPE DEFAULT NULL,
      ID_INTERVENTION_nin IN BOOLEAN := TRUE,
      flg_available_in IN INTERV_PROTOCOLS.FLG_AVAILABLE%TYPE DEFAULT NULL,
      FLG_AVAILABLE_nin IN BOOLEAN := TRUE,
      rank_in IN INTERV_PROTOCOLS.RANK%TYPE DEFAULT NULL,
      RANK_nin IN BOOLEAN := TRUE,
      adw_last_update_in IN INTERV_PROTOCOLS.ADW_LAST_UPDATE%TYPE DEFAULT NULL,
      ADW_LAST_UPDATE_nin IN BOOLEAN := TRUE,
      flg_interv_type_in IN INTERV_PROTOCOLS.FLG_INTERV_TYPE%TYPE DEFAULT NULL,
      FLG_INTERV_TYPE_nin IN BOOLEAN := TRUE,
      num_take_in IN INTERV_PROTOCOLS.NUM_TAKE%TYPE DEFAULT NULL,
      NUM_TAKE_nin IN BOOLEAN := TRUE,
      interval_in IN INTERV_PROTOCOLS.INTERVAL%TYPE DEFAULT NULL,
      INTERVAL_nin IN BOOLEAN := TRUE,
      dosage_in IN INTERV_PROTOCOLS.DOSAGE%TYPE DEFAULT NULL,
      DOSAGE_nin IN BOOLEAN := TRUE,
      create_user_in IN INTERV_PROTOCOLS.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN INTERV_PROTOCOLS.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN INTERV_PROTOCOLS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN INTERV_PROTOCOLS.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN INTERV_PROTOCOLS.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN INTERV_PROTOCOLS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
    where_in varchar2 DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
      );



   PROCEDURE upd_ins (
      id_interv_protocols_in IN INTERV_PROTOCOLS.ID_INTERV_PROTOCOLS%TYPE,
      id_intervention_in IN INTERV_PROTOCOLS.ID_INTERVENTION%TYPE DEFAULT NULL,
      flg_available_in IN INTERV_PROTOCOLS.FLG_AVAILABLE%TYPE DEFAULT NULL,
      rank_in IN INTERV_PROTOCOLS.RANK%TYPE DEFAULT NULL,
      adw_last_update_in IN INTERV_PROTOCOLS.ADW_LAST_UPDATE%TYPE DEFAULT NULL,
      flg_interv_type_in IN INTERV_PROTOCOLS.FLG_INTERV_TYPE%TYPE DEFAULT NULL,
      num_take_in IN INTERV_PROTOCOLS.NUM_TAKE%TYPE DEFAULT NULL,
      interval_in IN INTERV_PROTOCOLS.INTERVAL%TYPE DEFAULT NULL,
      dosage_in IN INTERV_PROTOCOLS.DOSAGE%TYPE DEFAULT NULL,
      create_user_in IN INTERV_PROTOCOLS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN INTERV_PROTOCOLS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN INTERV_PROTOCOLS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN INTERV_PROTOCOLS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN INTERV_PROTOCOLS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN INTERV_PROTOCOLS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

      PROCEDURE upd_ins (
      id_interv_protocols_in IN INTERV_PROTOCOLS.ID_INTERV_PROTOCOLS%TYPE,
      id_intervention_in IN INTERV_PROTOCOLS.ID_INTERVENTION%TYPE DEFAULT NULL,
      flg_available_in IN INTERV_PROTOCOLS.FLG_AVAILABLE%TYPE DEFAULT NULL,
      rank_in IN INTERV_PROTOCOLS.RANK%TYPE DEFAULT NULL,
      adw_last_update_in IN INTERV_PROTOCOLS.ADW_LAST_UPDATE%TYPE DEFAULT NULL,
      flg_interv_type_in IN INTERV_PROTOCOLS.FLG_INTERV_TYPE%TYPE DEFAULT NULL,
      num_take_in IN INTERV_PROTOCOLS.NUM_TAKE%TYPE DEFAULT NULL,
      interval_in IN INTERV_PROTOCOLS.INTERVAL%TYPE DEFAULT NULL,
      dosage_in IN INTERV_PROTOCOLS.DOSAGE%TYPE DEFAULT NULL,
      create_user_in IN INTERV_PROTOCOLS.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN INTERV_PROTOCOLS.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN INTERV_PROTOCOLS.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN INTERV_PROTOCOLS.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN INTERV_PROTOCOLS.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN INTERV_PROTOCOLS.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
      );

   PROCEDURE upd (
      rec_in IN INTERV_PROTOCOLS%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      rec_in IN INTERV_PROTOCOLS%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
      );

      PROCEDURE upd (
      col_in IN INTERV_PROTOCOLS_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      col_in IN INTERV_PROTOCOLS_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
      );





   -- Use Native Dynamic SQL increment a single NUMBER column
   -- for all rows specified by the dynamic WHERE clause
   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
   );









    -- Delete one row by primary key
   PROCEDURE del (
      id_interv_protocols_in IN INTERV_PROTOCOLS.ID_INTERV_PROTOCOLS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

-- Delete one row by primary key
   PROCEDURE del (
      id_interv_protocols_in IN INTERV_PROTOCOLS.ID_INTERV_PROTOCOLS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


   -- Delete all rows for primary key column ID_INTERV_PROTOCOLS
   PROCEDURE del_ID_INTERV_PROTOCOLS (
      id_interv_protocols_in IN INTERV_PROTOCOLS.ID_INTERV_PROTOCOLS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_INTERV_PROTOCOLS
   PROCEDURE del_ID_INTERV_PROTOCOLS (
      id_interv_protocols_in IN INTERV_PROTOCOLS.ID_INTERV_PROTOCOLS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );

   -- Delete all rows for this IPS_INT_FK foreign key value
   PROCEDURE del_IPS_INT_FK (
      id_intervention_in IN INTERV_PROTOCOLS.ID_INTERVENTION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this IPS_INT_FK foreign key value
   PROCEDURE del_IPS_INT_FK (
      id_intervention_in IN INTERV_PROTOCOLS.ID_INTERVENTION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );


      -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Initialize a record with default values for columns in the table.
   PROCEDURE initrec (
      interv_protocols_inout IN OUT INTERV_PROTOCOLS%ROWTYPE
   );

   FUNCTION initrec RETURN INTERV_PROTOCOLS%ROWTYPE;



   FUNCTION get_data_rowid(
        rows_in IN TABLE_VARCHAR
        ) RETURN INTERV_PROTOCOLS_tc;


   FUNCTION get_data_rowid_pat(
        rows_in IN TABLE_VARCHAR
        ) RETURN INTERV_PROTOCOLS_tc;

END TS_INTERV_PROTOCOLS;
/
