/*-- Last Change Revision: $Rev: 413863 $*/
/*-- Last Change by: $Author: alexandre.santos $*/
/*-- Date of last change: $Date: 2010-02-22 11:23:14 +0000 (seg, 22 fev 2010) $*/

CREATE OR REPLACE PACKAGE ts_sys_list_group_rel
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Fevereiro 18, 2010 15:3:5
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on "SYS_LIST_GROUP_REL"
    TYPE sys_list_group_rel_tc IS TABLE OF sys_list_group_rel%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE sys_list_group_rel_ntt IS TABLE OF sys_list_group_rel%ROWTYPE;
    TYPE sys_list_group_rel_vat IS VARRAY(100) OF sys_list_group_rel%ROWTYPE;

    -- Same type structure, with a static name.
    TYPE aat IS TABLE OF sys_list_group_rel%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE ntt IS TABLE OF sys_list_group_rel%ROWTYPE;
    TYPE vat IS VARRAY(100) OF sys_list_group_rel%ROWTYPE;

    -- Column Collection based on column "ID_SYS_LIST_GROUP_REL"
    TYPE id_sys_list_group_rel_cc IS TABLE OF sys_list_group_rel.id_sys_list_group_rel%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_SYS_LIST_GROUP"
    TYPE id_sys_list_group_cc IS TABLE OF sys_list_group_rel.id_sys_list_group%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_SYS_LIST"
    TYPE id_sys_list_cc IS TABLE OF sys_list_group_rel.id_sys_list%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_MARKET"
    TYPE id_market_cc IS TABLE OF sys_list_group_rel.id_market%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_AVAILABLE"
    TYPE flg_available_cc IS TABLE OF sys_list_group_rel.flg_available%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "RANK"
    TYPE rank_cc IS TABLE OF sys_list_group_rel.rank%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_USER"
    TYPE create_user_cc IS TABLE OF sys_list_group_rel.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_TIME"
    TYPE create_time_cc IS TABLE OF sys_list_group_rel.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_INSTITUTION"
    TYPE create_institution_cc IS TABLE OF sys_list_group_rel.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_USER"
    TYPE update_user_cc IS TABLE OF sys_list_group_rel.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_TIME"
    TYPE update_time_cc IS TABLE OF sys_list_group_rel.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_INSTITUTION"
    TYPE update_institution_cc IS TABLE OF sys_list_group_rel.update_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_CONTEXT"
    TYPE flg_context_cc IS TABLE OF sys_list_group_rel.flg_context%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present
    PROCEDURE ins
    (
        id_sys_list_group_in     IN sys_list_group_rel.id_sys_list_group%TYPE,
        id_sys_list_in           IN sys_list_group_rel.id_sys_list%TYPE,
        id_market_in             IN sys_list_group_rel.id_market%TYPE,
        id_sys_list_group_rel_in IN sys_list_group_rel.id_sys_list_group_rel%TYPE DEFAULT NULL,
        flg_available_in         IN sys_list_group_rel.flg_available%TYPE DEFAULT 'Y',
        rank_in                  IN sys_list_group_rel.rank%TYPE DEFAULT NULL,
        create_user_in           IN sys_list_group_rel.create_user%TYPE DEFAULT NULL,
        create_time_in           IN sys_list_group_rel.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN sys_list_group_rel.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN sys_list_group_rel.update_user%TYPE DEFAULT NULL,
        update_time_in           IN sys_list_group_rel.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN sys_list_group_rel.update_institution%TYPE DEFAULT NULL,
        flg_context_in           IN sys_list_group_rel.flg_context%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_sys_list_group_in     IN sys_list_group_rel.id_sys_list_group%TYPE,
        id_sys_list_in           IN sys_list_group_rel.id_sys_list%TYPE,
        id_market_in             IN sys_list_group_rel.id_market%TYPE,
        id_sys_list_group_rel_in IN sys_list_group_rel.id_sys_list_group_rel%TYPE DEFAULT NULL,
        flg_available_in         IN sys_list_group_rel.flg_available%TYPE DEFAULT 'Y',
        rank_in                  IN sys_list_group_rel.rank%TYPE DEFAULT NULL,
        create_user_in           IN sys_list_group_rel.create_user%TYPE DEFAULT NULL,
        create_time_in           IN sys_list_group_rel.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN sys_list_group_rel.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN sys_list_group_rel.update_user%TYPE DEFAULT NULL,
        update_time_in           IN sys_list_group_rel.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN sys_list_group_rel.update_institution%TYPE DEFAULT NULL,
        flg_context_in           IN sys_list_group_rel.flg_context%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record.
    PROCEDURE ins
    (
        rec_in          IN sys_list_group_rel%ROWTYPE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rec_in          IN sys_list_group_rel%ROWTYPE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers.
    PROCEDURE ins
    (
        rows_in         IN sys_list_group_rel_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rows_in         IN sys_list_group_rel_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.

    PROCEDURE upd
    (
        id_sys_list_group_in      IN sys_list_group_rel.id_sys_list_group%TYPE,
        id_sys_list_in            IN sys_list_group_rel.id_sys_list%TYPE,
        id_market_in              IN sys_list_group_rel.id_market%TYPE,
        id_sys_list_group_rel_in  IN sys_list_group_rel.id_sys_list_group_rel%TYPE DEFAULT NULL,
        id_sys_list_group_rel_nin IN BOOLEAN := TRUE,
        flg_available_in          IN sys_list_group_rel.flg_available%TYPE DEFAULT NULL,
        flg_available_nin         IN BOOLEAN := TRUE,
        rank_in                   IN sys_list_group_rel.rank%TYPE DEFAULT NULL,
        rank_nin                  IN BOOLEAN := TRUE,
        create_user_in            IN sys_list_group_rel.create_user%TYPE DEFAULT NULL,
        create_user_nin           IN BOOLEAN := TRUE,
        create_time_in            IN sys_list_group_rel.create_time%TYPE DEFAULT NULL,
        create_time_nin           IN BOOLEAN := TRUE,
        create_institution_in     IN sys_list_group_rel.create_institution%TYPE DEFAULT NULL,
        create_institution_nin    IN BOOLEAN := TRUE,
        update_user_in            IN sys_list_group_rel.update_user%TYPE DEFAULT NULL,
        update_user_nin           IN BOOLEAN := TRUE,
        update_time_in            IN sys_list_group_rel.update_time%TYPE DEFAULT NULL,
        update_time_nin           IN BOOLEAN := TRUE,
        update_institution_in     IN sys_list_group_rel.update_institution%TYPE DEFAULT NULL,
        update_institution_nin    IN BOOLEAN := TRUE,
        flg_context_in            IN sys_list_group_rel.flg_context%TYPE DEFAULT NULL,
        flg_context_nin           IN BOOLEAN := TRUE,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_sys_list_group_in      IN sys_list_group_rel.id_sys_list_group%TYPE,
        id_sys_list_in            IN sys_list_group_rel.id_sys_list%TYPE,
        id_market_in              IN sys_list_group_rel.id_market%TYPE,
        id_sys_list_group_rel_in  IN sys_list_group_rel.id_sys_list_group_rel%TYPE DEFAULT NULL,
        id_sys_list_group_rel_nin IN BOOLEAN := TRUE,
        flg_available_in          IN sys_list_group_rel.flg_available%TYPE DEFAULT NULL,
        flg_available_nin         IN BOOLEAN := TRUE,
        rank_in                   IN sys_list_group_rel.rank%TYPE DEFAULT NULL,
        rank_nin                  IN BOOLEAN := TRUE,
        create_user_in            IN sys_list_group_rel.create_user%TYPE DEFAULT NULL,
        create_user_nin           IN BOOLEAN := TRUE,
        create_time_in            IN sys_list_group_rel.create_time%TYPE DEFAULT NULL,
        create_time_nin           IN BOOLEAN := TRUE,
        create_institution_in     IN sys_list_group_rel.create_institution%TYPE DEFAULT NULL,
        create_institution_nin    IN BOOLEAN := TRUE,
        update_user_in            IN sys_list_group_rel.update_user%TYPE DEFAULT NULL,
        update_user_nin           IN BOOLEAN := TRUE,
        update_time_in            IN sys_list_group_rel.update_time%TYPE DEFAULT NULL,
        update_time_nin           IN BOOLEAN := TRUE,
        update_institution_in     IN sys_list_group_rel.update_institution%TYPE DEFAULT NULL,
        update_institution_nin    IN BOOLEAN := TRUE,
        flg_context_in            IN sys_list_group_rel.flg_context%TYPE DEFAULT NULL,
        flg_context_nin           IN BOOLEAN := TRUE,
        handle_error_in           IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        id_sys_list_group_rel_in  IN sys_list_group_rel.id_sys_list_group_rel%TYPE DEFAULT NULL,
        id_sys_list_group_rel_nin IN BOOLEAN := TRUE,
        flg_available_in          IN sys_list_group_rel.flg_available%TYPE DEFAULT NULL,
        flg_available_nin         IN BOOLEAN := TRUE,
        rank_in                   IN sys_list_group_rel.rank%TYPE DEFAULT NULL,
        rank_nin                  IN BOOLEAN := TRUE,
        create_user_in            IN sys_list_group_rel.create_user%TYPE DEFAULT NULL,
        create_user_nin           IN BOOLEAN := TRUE,
        create_time_in            IN sys_list_group_rel.create_time%TYPE DEFAULT NULL,
        create_time_nin           IN BOOLEAN := TRUE,
        create_institution_in     IN sys_list_group_rel.create_institution%TYPE DEFAULT NULL,
        create_institution_nin    IN BOOLEAN := TRUE,
        update_user_in            IN sys_list_group_rel.update_user%TYPE DEFAULT NULL,
        update_user_nin           IN BOOLEAN := TRUE,
        update_time_in            IN sys_list_group_rel.update_time%TYPE DEFAULT NULL,
        update_time_nin           IN BOOLEAN := TRUE,
        update_institution_in     IN sys_list_group_rel.update_institution%TYPE DEFAULT NULL,
        update_institution_nin    IN BOOLEAN := TRUE,
        flg_context_in            IN sys_list_group_rel.flg_context%TYPE DEFAULT NULL,
        flg_context_nin           IN BOOLEAN := TRUE,
        where_in                  VARCHAR2 DEFAULT NULL,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_sys_list_group_rel_in  IN sys_list_group_rel.id_sys_list_group_rel%TYPE DEFAULT NULL,
        id_sys_list_group_rel_nin IN BOOLEAN := TRUE,
        flg_available_in          IN sys_list_group_rel.flg_available%TYPE DEFAULT NULL,
        flg_available_nin         IN BOOLEAN := TRUE,
        rank_in                   IN sys_list_group_rel.rank%TYPE DEFAULT NULL,
        rank_nin                  IN BOOLEAN := TRUE,
        create_user_in            IN sys_list_group_rel.create_user%TYPE DEFAULT NULL,
        create_user_nin           IN BOOLEAN := TRUE,
        create_time_in            IN sys_list_group_rel.create_time%TYPE DEFAULT NULL,
        create_time_nin           IN BOOLEAN := TRUE,
        create_institution_in     IN sys_list_group_rel.create_institution%TYPE DEFAULT NULL,
        create_institution_nin    IN BOOLEAN := TRUE,
        update_user_in            IN sys_list_group_rel.update_user%TYPE DEFAULT NULL,
        update_user_nin           IN BOOLEAN := TRUE,
        update_time_in            IN sys_list_group_rel.update_time%TYPE DEFAULT NULL,
        update_time_nin           IN BOOLEAN := TRUE,
        update_institution_in     IN sys_list_group_rel.update_institution%TYPE DEFAULT NULL,
        update_institution_nin    IN BOOLEAN := TRUE,
        flg_context_in            IN sys_list_group_rel.flg_context%TYPE DEFAULT NULL,
        flg_context_nin           IN BOOLEAN := TRUE,
        where_in                  VARCHAR2 DEFAULT NULL,
        handle_error_in           IN BOOLEAN := TRUE
    );

    PROCEDURE upd_ins
    (
        id_sys_list_group_in     IN sys_list_group_rel.id_sys_list_group%TYPE,
        id_sys_list_in           IN sys_list_group_rel.id_sys_list%TYPE,
        id_market_in             IN sys_list_group_rel.id_market%TYPE,
        id_sys_list_group_rel_in IN sys_list_group_rel.id_sys_list_group_rel%TYPE DEFAULT NULL,
        flg_available_in         IN sys_list_group_rel.flg_available%TYPE DEFAULT NULL,
        rank_in                  IN sys_list_group_rel.rank%TYPE DEFAULT NULL,
        create_user_in           IN sys_list_group_rel.create_user%TYPE DEFAULT NULL,
        create_time_in           IN sys_list_group_rel.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN sys_list_group_rel.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN sys_list_group_rel.update_user%TYPE DEFAULT NULL,
        update_time_in           IN sys_list_group_rel.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN sys_list_group_rel.update_institution%TYPE DEFAULT NULL,
        flg_context_in           IN sys_list_group_rel.flg_context%TYPE DEFAULT NULL,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 OUT table_varchar
    );

    PROCEDURE upd_ins
    (
        id_sys_list_group_in     IN sys_list_group_rel.id_sys_list_group%TYPE,
        id_sys_list_in           IN sys_list_group_rel.id_sys_list%TYPE,
        id_market_in             IN sys_list_group_rel.id_market%TYPE,
        id_sys_list_group_rel_in IN sys_list_group_rel.id_sys_list_group_rel%TYPE DEFAULT NULL,
        flg_available_in         IN sys_list_group_rel.flg_available%TYPE DEFAULT NULL,
        rank_in                  IN sys_list_group_rel.rank%TYPE DEFAULT NULL,
        create_user_in           IN sys_list_group_rel.create_user%TYPE DEFAULT NULL,
        create_time_in           IN sys_list_group_rel.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN sys_list_group_rel.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN sys_list_group_rel.update_user%TYPE DEFAULT NULL,
        update_time_in           IN sys_list_group_rel.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN sys_list_group_rel.update_institution%TYPE DEFAULT NULL,
        flg_context_in           IN sys_list_group_rel.flg_context%TYPE DEFAULT NULL,
        handle_error_in          IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        rec_in          IN sys_list_group_rel%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    PROCEDURE upd
    (
        rec_in          IN sys_list_group_rel%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        col_in            IN sys_list_group_rel_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    PROCEDURE upd
    (
        col_in            IN sys_list_group_rel_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_sys_list_group_in IN sys_list_group_rel.id_sys_list_group%TYPE,
        id_sys_list_in       IN sys_list_group_rel.id_sys_list%TYPE,
        id_market_in         IN sys_list_group_rel.id_market%TYPE,
        handle_error_in      IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_sys_list_group_in IN sys_list_group_rel.id_sys_list_group%TYPE,
        id_sys_list_in       IN sys_list_group_rel.id_sys_list%TYPE,
        id_market_in         IN sys_list_group_rel.id_market%TYPE,
        handle_error_in      IN BOOLEAN := TRUE,
        rows_out             OUT table_varchar
    );

    -- Delete all rows for primary key column ID_SYS_LIST_GROUP
    PROCEDURE del_id_sys_list_group
    (
        id_sys_list_group_in IN sys_list_group_rel.id_sys_list_group%TYPE,
        handle_error_in      IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_SYS_LIST_GROUP
    PROCEDURE del_id_sys_list_group
    (
        id_sys_list_group_in IN sys_list_group_rel.id_sys_list_group%TYPE,
        handle_error_in      IN BOOLEAN := TRUE,
        rows_out             OUT table_varchar
    );

    -- Delete all rows for primary key column ID_SYS_LIST
    PROCEDURE del_id_sys_list
    (
        id_sys_list_in  IN sys_list_group_rel.id_sys_list%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_SYS_LIST
    PROCEDURE del_id_sys_list
    (
        id_sys_list_in  IN sys_list_group_rel.id_sys_list%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for primary key column ID_MARKET
    PROCEDURE del_id_market
    (
        id_market_in    IN sys_list_group_rel.id_market%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_MARKET
    PROCEDURE del_id_market
    (
        id_market_in    IN sys_list_group_rel.id_market%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this SLGR_MKT_ID_FK foreign key value
    PROCEDURE del_slgr_mkt_id_fk
    (
        id_market_in    IN sys_list_group_rel.id_market%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this SLGR_MKT_ID_FK foreign key value
    PROCEDURE del_slgr_mkt_id_fk
    (
        id_market_in    IN sys_list_group_rel.id_market%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this SLGR_SLG_ID_FK foreign key value
    PROCEDURE del_slgr_slg_id_fk
    (
        id_sys_list_group_in IN sys_list_group_rel.id_sys_list_group%TYPE,
        handle_error_in      IN BOOLEAN := TRUE
    );

    -- Delete all rows for this SLGR_SLG_ID_FK foreign key value
    PROCEDURE del_slgr_slg_id_fk
    (
        id_sys_list_group_in IN sys_list_group_rel.id_sys_list_group%TYPE,
        handle_error_in      IN BOOLEAN := TRUE,
        rows_out             OUT table_varchar
    );

    -- Delete all rows for this SLGR_SL_ID_FK foreign key value
    PROCEDURE del_slgr_sl_id_fk
    (
        id_sys_list_in  IN sys_list_group_rel.id_sys_list%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this SLGR_SL_ID_FK foreign key value
    PROCEDURE del_slgr_sl_id_fk
    (
        id_sys_list_in  IN sys_list_group_rel.id_sys_list%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(sys_list_group_rel_inout IN OUT sys_list_group_rel%ROWTYPE);

    FUNCTION initrec RETURN sys_list_group_rel%ROWTYPE;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN sys_list_group_rel_tc;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN sys_list_group_rel_tc;

END ts_sys_list_group_rel;
/
