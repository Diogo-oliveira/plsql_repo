/*-- Last Change Revision: $Rev: 2029297 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:50:53 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE ts_pat_hist_diag_precaution
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: February 5, 2010 9:6:9
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on "PAT_HIST_DIAG_PRECAUTION"
    TYPE pat_hist_diag_precaution_tc IS TABLE OF pat_hist_diag_precaution%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE pat_hist_diag_precaution_ntt IS TABLE OF pat_hist_diag_precaution%ROWTYPE;
    TYPE pat_hist_diag_precaution_vat IS VARRAY(100) OF pat_hist_diag_precaution%ROWTYPE;

    -- Same type structure, with a static name.
    TYPE aat IS TABLE OF pat_hist_diag_precaution%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE ntt IS TABLE OF pat_hist_diag_precaution%ROWTYPE;
    TYPE vat IS VARRAY(100) OF pat_hist_diag_precaution%ROWTYPE;

    -- Column Collection based on column "ID_PAT_HISTORY_DIAGNOSIS"
    TYPE id_pat_history_diagnosis_cc IS TABLE OF pat_hist_diag_precaution.id_pat_history_diagnosis%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PRECAUTION"
    TYPE id_precaution_cc IS TABLE OF pat_hist_diag_precaution.id_precaution%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present
    PROCEDURE ins
    (
        id_pat_history_diagnosis_in IN pat_hist_diag_precaution.id_pat_history_diagnosis%TYPE,
        id_precaution_in            IN pat_hist_diag_precaution.id_precaution%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_pat_history_diagnosis_in IN pat_hist_diag_precaution.id_pat_history_diagnosis%TYPE,
        id_precaution_in            IN pat_hist_diag_precaution.id_precaution%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record.
    PROCEDURE ins
    (
        rec_in          IN pat_hist_diag_precaution%ROWTYPE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rec_in          IN pat_hist_diag_precaution%ROWTYPE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers.
    PROCEDURE ins
    (
        rows_in         IN pat_hist_diag_precaution_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rows_in         IN pat_hist_diag_precaution_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PHN_PCN_FK foreign key value
    PROCEDURE del_phn_pcn_fk
    (
        id_precaution_in IN pat_hist_diag_precaution.id_precaution%TYPE,
        handle_error_in  IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PHN_PCN_FK foreign key value
    PROCEDURE del_phn_pcn_fk
    (
        id_precaution_in IN pat_hist_diag_precaution.id_precaution%TYPE,
        handle_error_in  IN BOOLEAN := TRUE,
        rows_out         OUT table_varchar
    );

    -- Delete all rows for this PHN_PHI_FK foreign key value
    PROCEDURE del_phn_phi_fk
    (
        id_pat_history_diagnosis_in IN pat_hist_diag_precaution.id_pat_history_diagnosis%TYPE,
        handle_error_in             IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PHN_PHI_FK foreign key value
    PROCEDURE del_phn_phi_fk
    (
        id_pat_history_diagnosis_in IN pat_hist_diag_precaution.id_pat_history_diagnosis%TYPE,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(pat_hist_diag_precaution_inout IN OUT pat_hist_diag_precaution%ROWTYPE);

    FUNCTION initrec RETURN pat_hist_diag_precaution%ROWTYPE;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN pat_hist_diag_precaution_tc;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN pat_hist_diag_precaution_tc;

END ts_pat_hist_diag_precaution;
/
