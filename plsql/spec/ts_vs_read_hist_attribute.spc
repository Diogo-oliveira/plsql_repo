/*-- Last Change Revision: $Rev: 2029412 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:51:31 +0100 (ter, 02 ago 2022) $*/
CREATE OR REPLACE PACKAGE ts_vs_read_hist_attribute
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: November 22, 2013 9:9:0
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on "VS_READ_HIST_ATTRIBUTE"
    TYPE vs_read_hist_attribute_tc IS TABLE OF vs_read_hist_attribute%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE vs_read_hist_attribute_ntt IS TABLE OF vs_read_hist_attribute%ROWTYPE;
    TYPE vs_read_hist_attribute_vat IS VARRAY(100) OF vs_read_hist_attribute%ROWTYPE;

    -- Same type structure, with a static name.
    TYPE aat IS TABLE OF vs_read_hist_attribute%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE ntt IS TABLE OF vs_read_hist_attribute%ROWTYPE;
    TYPE vat IS VARRAY(100) OF vs_read_hist_attribute%ROWTYPE;

    -- Column Collection based on column "ID_VITAL_SIGN_READ_HIST"
    TYPE id_vital_sign_read_hist_cc IS TABLE OF vs_read_hist_attribute.id_vital_sign_read_hist%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_VS_ATTRIBUTE"
    TYPE id_vs_attribute_cc IS TABLE OF vs_read_hist_attribute.id_vs_attribute%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FREE_TEXT"
    TYPE free_text_cc IS TABLE OF vs_read_hist_attribute.free_text%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_USER"
    TYPE create_user_cc IS TABLE OF vs_read_hist_attribute.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_TIME"
    TYPE create_time_cc IS TABLE OF vs_read_hist_attribute.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_INSTITUTION"
    TYPE create_institution_cc IS TABLE OF vs_read_hist_attribute.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_USER"
    TYPE update_user_cc IS TABLE OF vs_read_hist_attribute.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_TIME"
    TYPE update_time_cc IS TABLE OF vs_read_hist_attribute.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_INSTITUTION"
    TYPE update_institution_cc IS TABLE OF vs_read_hist_attribute.update_institution%TYPE INDEX BY BINARY_INTEGER;

    TYPE varchar2_t IS TABLE OF VARCHAR2(32767) INDEX BY PLS_INTEGER;
    /*
    START Special logic for handling LOB columns....
    */
    PROCEDURE n_ins_clobs_in_chunks
    (
        id_vital_sign_read_hist_in IN vs_read_hist_attribute.id_vital_sign_read_hist%TYPE,
        id_vs_attribute_in         IN vs_read_hist_attribute.id_vs_attribute%TYPE,
        create_user_in             IN vs_read_hist_attribute.create_user%TYPE DEFAULT NULL,
        create_time_in             IN vs_read_hist_attribute.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN vs_read_hist_attribute.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN vs_read_hist_attribute.update_user%TYPE DEFAULT NULL,
        update_time_in             IN vs_read_hist_attribute.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN vs_read_hist_attribute.update_institution%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE,
        clob_columns_in            IN varchar2_t,
        clob_pieces_in             IN varchar2_t
    );

    PROCEDURE n_upd_clobs_in_chunks
    (
        id_vital_sign_read_hist_in IN vs_read_hist_attribute.id_vital_sign_read_hist%TYPE,
        id_vs_attribute_in         IN vs_read_hist_attribute.id_vs_attribute%TYPE,
        create_user_in             IN vs_read_hist_attribute.create_user%TYPE DEFAULT NULL,
        create_time_in             IN vs_read_hist_attribute.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN vs_read_hist_attribute.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN vs_read_hist_attribute.update_user%TYPE DEFAULT NULL,
        update_time_in             IN vs_read_hist_attribute.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN vs_read_hist_attribute.update_institution%TYPE DEFAULT NULL,
        ignore_if_null_in          IN BOOLEAN := TRUE,
        handle_error_in            IN BOOLEAN := TRUE,
        clob_columns_in            IN varchar2_t,
        clob_pieces_in             IN varchar2_t
    );

    PROCEDURE n_upd_ins_clobs_in_chunks
    (
        id_vital_sign_read_hist_in IN vs_read_hist_attribute.id_vital_sign_read_hist%TYPE,
        id_vs_attribute_in         IN vs_read_hist_attribute.id_vs_attribute%TYPE,
        create_user_in             IN vs_read_hist_attribute.create_user%TYPE DEFAULT NULL,
        create_time_in             IN vs_read_hist_attribute.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN vs_read_hist_attribute.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN vs_read_hist_attribute.update_user%TYPE DEFAULT NULL,
        update_time_in             IN vs_read_hist_attribute.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN vs_read_hist_attribute.update_institution%TYPE DEFAULT NULL,
        ignore_if_null_in          IN BOOLEAN DEFAULT TRUE,
        handle_error_in            IN BOOLEAN DEFAULT TRUE,
        clob_columns_in            IN varchar2_t,
        clob_pieces_in             IN varchar2_t
    );

    /*
    END Special logic for handling LOB columns.
    */
    -- Insert one row, providing primary key if present
    PROCEDURE ins
    (
        id_vital_sign_read_hist_in IN vs_read_hist_attribute.id_vital_sign_read_hist%TYPE,
        id_vs_attribute_in         IN vs_read_hist_attribute.id_vs_attribute%TYPE,
        free_text_in               IN vs_read_hist_attribute.free_text%TYPE DEFAULT NULL,
        create_user_in             IN vs_read_hist_attribute.create_user%TYPE DEFAULT NULL,
        create_time_in             IN vs_read_hist_attribute.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN vs_read_hist_attribute.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN vs_read_hist_attribute.update_user%TYPE DEFAULT NULL,
        update_time_in             IN vs_read_hist_attribute.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN vs_read_hist_attribute.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_vital_sign_read_hist_in IN vs_read_hist_attribute.id_vital_sign_read_hist%TYPE,
        id_vs_attribute_in         IN vs_read_hist_attribute.id_vs_attribute%TYPE,
        free_text_in               IN vs_read_hist_attribute.free_text%TYPE DEFAULT NULL,
        create_user_in             IN vs_read_hist_attribute.create_user%TYPE DEFAULT NULL,
        create_time_in             IN vs_read_hist_attribute.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN vs_read_hist_attribute.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN vs_read_hist_attribute.update_user%TYPE DEFAULT NULL,
        update_time_in             IN vs_read_hist_attribute.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN vs_read_hist_attribute.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record.
    PROCEDURE ins
    (
        rec_in          IN vs_read_hist_attribute%ROWTYPE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rec_in          IN vs_read_hist_attribute%ROWTYPE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers.
    PROCEDURE ins
    (
        rows_in         IN vs_read_hist_attribute_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rows_in         IN vs_read_hist_attribute_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.

    PROCEDURE upd
    (
        id_vital_sign_read_hist_in IN vs_read_hist_attribute.id_vital_sign_read_hist%TYPE,
        id_vs_attribute_in         IN vs_read_hist_attribute.id_vs_attribute%TYPE,
        free_text_in               IN vs_read_hist_attribute.free_text%TYPE DEFAULT NULL,
        free_text_nin              IN BOOLEAN := TRUE,
        create_user_in             IN vs_read_hist_attribute.create_user%TYPE DEFAULT NULL,
        create_user_nin            IN BOOLEAN := TRUE,
        create_time_in             IN vs_read_hist_attribute.create_time%TYPE DEFAULT NULL,
        create_time_nin            IN BOOLEAN := TRUE,
        create_institution_in      IN vs_read_hist_attribute.create_institution%TYPE DEFAULT NULL,
        create_institution_nin     IN BOOLEAN := TRUE,
        update_user_in             IN vs_read_hist_attribute.update_user%TYPE DEFAULT NULL,
        update_user_nin            IN BOOLEAN := TRUE,
        update_time_in             IN vs_read_hist_attribute.update_time%TYPE DEFAULT NULL,
        update_time_nin            IN BOOLEAN := TRUE,
        update_institution_in      IN vs_read_hist_attribute.update_institution%TYPE DEFAULT NULL,
        update_institution_nin     IN BOOLEAN := TRUE,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_vital_sign_read_hist_in IN vs_read_hist_attribute.id_vital_sign_read_hist%TYPE,
        id_vs_attribute_in         IN vs_read_hist_attribute.id_vs_attribute%TYPE,
        free_text_in               IN vs_read_hist_attribute.free_text%TYPE DEFAULT NULL,
        free_text_nin              IN BOOLEAN := TRUE,
        create_user_in             IN vs_read_hist_attribute.create_user%TYPE DEFAULT NULL,
        create_user_nin            IN BOOLEAN := TRUE,
        create_time_in             IN vs_read_hist_attribute.create_time%TYPE DEFAULT NULL,
        create_time_nin            IN BOOLEAN := TRUE,
        create_institution_in      IN vs_read_hist_attribute.create_institution%TYPE DEFAULT NULL,
        create_institution_nin     IN BOOLEAN := TRUE,
        update_user_in             IN vs_read_hist_attribute.update_user%TYPE DEFAULT NULL,
        update_user_nin            IN BOOLEAN := TRUE,
        update_time_in             IN vs_read_hist_attribute.update_time%TYPE DEFAULT NULL,
        update_time_nin            IN BOOLEAN := TRUE,
        update_institution_in      IN vs_read_hist_attribute.update_institution%TYPE DEFAULT NULL,
        update_institution_nin     IN BOOLEAN := TRUE,
        handle_error_in            IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        free_text_in           IN vs_read_hist_attribute.free_text%TYPE DEFAULT NULL,
        free_text_nin          IN BOOLEAN := TRUE,
        create_user_in         IN vs_read_hist_attribute.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN vs_read_hist_attribute.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN vs_read_hist_attribute.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN vs_read_hist_attribute.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN vs_read_hist_attribute.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN vs_read_hist_attribute.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        where_in               VARCHAR2,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               IN OUT table_varchar
    );

    PROCEDURE upd
    (
        free_text_in           IN vs_read_hist_attribute.free_text%TYPE DEFAULT NULL,
        free_text_nin          IN BOOLEAN := TRUE,
        create_user_in         IN vs_read_hist_attribute.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN vs_read_hist_attribute.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN vs_read_hist_attribute.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN vs_read_hist_attribute.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN vs_read_hist_attribute.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN vs_read_hist_attribute.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        where_in               VARCHAR2,
        handle_error_in        IN BOOLEAN := TRUE
    );

    PROCEDURE upd_ins
    (
        id_vital_sign_read_hist_in IN vs_read_hist_attribute.id_vital_sign_read_hist%TYPE,
        id_vs_attribute_in         IN vs_read_hist_attribute.id_vs_attribute%TYPE,
        free_text_in               IN vs_read_hist_attribute.free_text%TYPE DEFAULT NULL,
        create_user_in             IN vs_read_hist_attribute.create_user%TYPE DEFAULT NULL,
        create_time_in             IN vs_read_hist_attribute.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN vs_read_hist_attribute.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN vs_read_hist_attribute.update_user%TYPE DEFAULT NULL,
        update_time_in             IN vs_read_hist_attribute.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN vs_read_hist_attribute.update_institution%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT table_varchar
    );

    PROCEDURE upd_ins
    (
        id_vital_sign_read_hist_in IN vs_read_hist_attribute.id_vital_sign_read_hist%TYPE,
        id_vs_attribute_in         IN vs_read_hist_attribute.id_vs_attribute%TYPE,
        free_text_in               IN vs_read_hist_attribute.free_text%TYPE DEFAULT NULL,
        create_user_in             IN vs_read_hist_attribute.create_user%TYPE DEFAULT NULL,
        create_time_in             IN vs_read_hist_attribute.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN vs_read_hist_attribute.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN vs_read_hist_attribute.update_user%TYPE DEFAULT NULL,
        update_time_in             IN vs_read_hist_attribute.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN vs_read_hist_attribute.update_institution%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        rec_in          IN vs_read_hist_attribute%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    PROCEDURE upd
    (
        rec_in          IN vs_read_hist_attribute%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        col_in            IN vs_read_hist_attribute_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    PROCEDURE upd
    (
        col_in            IN vs_read_hist_attribute_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_vital_sign_read_hist_in IN vs_read_hist_attribute.id_vital_sign_read_hist%TYPE,
        id_vs_attribute_in         IN vs_read_hist_attribute.id_vs_attribute%TYPE,
        handle_error_in            IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_vital_sign_read_hist_in IN vs_read_hist_attribute.id_vital_sign_read_hist%TYPE,
        id_vs_attribute_in         IN vs_read_hist_attribute.id_vs_attribute%TYPE,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT table_varchar
    );

    -- Delete all rows for primary key column ID_VITAL_SIGN_READ_HIST
    PROCEDURE del_id_vital_sign_read_hist
    (
        id_vital_sign_read_hist_in IN vs_read_hist_attribute.id_vital_sign_read_hist%TYPE,
        handle_error_in            IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_VITAL_SIGN_READ_HIST
    PROCEDURE del_id_vital_sign_read_hist
    (
        id_vital_sign_read_hist_in IN vs_read_hist_attribute.id_vital_sign_read_hist%TYPE,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT table_varchar
    );

    -- Delete all rows for primary key column ID_VS_ATTRIBUTE
    PROCEDURE del_id_vs_attribute
    (
        id_vs_attribute_in IN vs_read_hist_attribute.id_vs_attribute%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_VS_ATTRIBUTE
    PROCEDURE del_id_vs_attribute
    (
        id_vs_attribute_in IN vs_read_hist_attribute.id_vs_attribute%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    -- Delete all rows for this VSRHA_VSA_FK foreign key value
    PROCEDURE del_vsrha_vsa_fk
    (
        id_vs_attribute_in IN vs_read_hist_attribute.id_vs_attribute%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete all rows for this VSRHA_VSA_FK foreign key value
    PROCEDURE del_vsrha_vsa_fk
    (
        id_vs_attribute_in IN vs_read_hist_attribute.id_vs_attribute%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    -- Delete all rows for this VSRHA_VSR_FK foreign key value
    PROCEDURE del_vsrha_vsr_fk
    (
        id_vital_sign_read_hist_in IN vs_read_hist_attribute.id_vital_sign_read_hist%TYPE,
        handle_error_in            IN BOOLEAN := TRUE
    );

    -- Delete all rows for this VSRHA_VSR_FK foreign key value
    PROCEDURE del_vsrha_vsr_fk
    (
        id_vital_sign_read_hist_in IN vs_read_hist_attribute.id_vital_sign_read_hist%TYPE,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(vs_read_hist_attribute_inout IN OUT vs_read_hist_attribute%ROWTYPE);

    FUNCTION initrec RETURN vs_read_hist_attribute%ROWTYPE;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN vs_read_hist_attribute_tc;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN vs_read_hist_attribute_tc;

END ts_vs_read_hist_attribute;
/
