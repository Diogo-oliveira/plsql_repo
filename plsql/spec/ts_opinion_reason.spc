/*-- Last Change Revision: $Rev: 2029264 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:50:42 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE ts_opinion_reason
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2022-04-12 12:10:52
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on opinion_reason
    TYPE opinion_reason_tc IS TABLE OF opinion_reason%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE opinion_reason_ntt IS TABLE OF opinion_reason%ROWTYPE;
    TYPE opinion_reason_vat IS VARRAY(100) OF opinion_reason%ROWTYPE;

    -- Column Collection based on column ID_DIAGNOSIS
    TYPE id_diagnosis_cc IS TABLE OF opinion_reason.id_diagnosis%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_OPINION
    TYPE id_opinion_cc IS TABLE OF opinion_reason.id_opinion%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_USER
    TYPE create_user_cc IS TABLE OF opinion_reason.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_TIME
    TYPE create_time_cc IS TABLE OF opinion_reason.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_INSTITUTION
    TYPE create_institution_cc IS TABLE OF opinion_reason.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_USER
    TYPE update_user_cc IS TABLE OF opinion_reason.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_TIME
    TYPE update_time_cc IS TABLE OF opinion_reason.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_INSTITUTION
    TYPE update_institution_cc IS TABLE OF opinion_reason.update_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_DIAG_INST_OWNER
    TYPE id_diag_inst_owner_cc IS TABLE OF opinion_reason.id_diag_inst_owner%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column DIAGNOSIS_DESC
    TYPE diagnosis_desc_cc IS TABLE OF opinion_reason.diagnosis_desc%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_ALERT_DIAGNOSIS
    TYPE id_alert_diagnosis_cc IS TABLE OF opinion_reason.id_alert_diagnosis%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present (with rows_out)
    PROCEDURE ins
    (
        id_diagnosis_in       IN opinion_reason.id_diagnosis%TYPE,
        id_opinion_in         IN opinion_reason.id_opinion%TYPE,
        create_user_in        IN opinion_reason.create_user%TYPE DEFAULT NULL,
        create_time_in        IN opinion_reason.create_time%TYPE DEFAULT NULL,
        create_institution_in IN opinion_reason.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN opinion_reason.update_user%TYPE DEFAULT NULL,
        update_time_in        IN opinion_reason.update_time%TYPE DEFAULT NULL,
        update_institution_in IN opinion_reason.update_institution%TYPE DEFAULT NULL,
        id_diag_inst_owner_in IN opinion_reason.id_diag_inst_owner%TYPE DEFAULT 0,
        diagnosis_desc_in     IN opinion_reason.diagnosis_desc%TYPE DEFAULT NULL,
        id_alert_diagnosis_in IN opinion_reason.id_alert_diagnosis%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := FALSE,
        rows_out              OUT table_varchar
    );

    -- Insert one row, providing primary key if present (without rows_out)
    PROCEDURE ins
    (
        id_diagnosis_in       IN opinion_reason.id_diagnosis%TYPE,
        id_opinion_in         IN opinion_reason.id_opinion%TYPE,
        create_user_in        IN opinion_reason.create_user%TYPE DEFAULT NULL,
        create_time_in        IN opinion_reason.create_time%TYPE DEFAULT NULL,
        create_institution_in IN opinion_reason.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN opinion_reason.update_user%TYPE DEFAULT NULL,
        update_time_in        IN opinion_reason.update_time%TYPE DEFAULT NULL,
        update_institution_in IN opinion_reason.update_institution%TYPE DEFAULT NULL,
        id_diag_inst_owner_in IN opinion_reason.id_diag_inst_owner%TYPE DEFAULT 0,
        diagnosis_desc_in     IN opinion_reason.diagnosis_desc%TYPE DEFAULT NULL,
        id_alert_diagnosis_in IN opinion_reason.id_alert_diagnosis%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := FALSE
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN opinion_reason%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN opinion_reason%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := FALSE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN opinion_reason_tc,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN opinion_reason_tc,
        handle_error_in IN BOOLEAN := FALSE
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_diagnosis_in        IN opinion_reason.id_diagnosis%TYPE,
        id_opinion_in          IN opinion_reason.id_opinion%TYPE,
        create_user_in         IN opinion_reason.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN opinion_reason.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN opinion_reason.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN opinion_reason.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN opinion_reason.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN opinion_reason.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        id_diag_inst_owner_in  IN opinion_reason.id_diag_inst_owner%TYPE DEFAULT NULL,
        id_diag_inst_owner_nin IN BOOLEAN := TRUE,
        diagnosis_desc_in      IN opinion_reason.diagnosis_desc%TYPE DEFAULT NULL,
        diagnosis_desc_nin     IN BOOLEAN := TRUE,
        id_alert_diagnosis_in  IN opinion_reason.id_alert_diagnosis%TYPE DEFAULT NULL,
        id_alert_diagnosis_nin IN BOOLEAN := TRUE,
        handle_error_in        IN BOOLEAN := FALSE,
        rows_out               IN OUT table_varchar
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_diagnosis_in        IN opinion_reason.id_diagnosis%TYPE,
        id_opinion_in          IN opinion_reason.id_opinion%TYPE,
        create_user_in         IN opinion_reason.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN opinion_reason.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN opinion_reason.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN opinion_reason.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN opinion_reason.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN opinion_reason.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        id_diag_inst_owner_in  IN opinion_reason.id_diag_inst_owner%TYPE DEFAULT NULL,
        id_diag_inst_owner_nin IN BOOLEAN := TRUE,
        diagnosis_desc_in      IN opinion_reason.diagnosis_desc%TYPE DEFAULT NULL,
        diagnosis_desc_nin     IN BOOLEAN := TRUE,
        id_alert_diagnosis_in  IN opinion_reason.id_alert_diagnosis%TYPE DEFAULT NULL,
        id_alert_diagnosis_nin IN BOOLEAN := TRUE,
        handle_error_in        IN BOOLEAN := FALSE
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        create_user_in         IN opinion_reason.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN opinion_reason.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN opinion_reason.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN opinion_reason.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN opinion_reason.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN opinion_reason.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        id_diag_inst_owner_in  IN opinion_reason.id_diag_inst_owner%TYPE DEFAULT NULL,
        id_diag_inst_owner_nin IN BOOLEAN := TRUE,
        diagnosis_desc_in      IN opinion_reason.diagnosis_desc%TYPE DEFAULT NULL,
        diagnosis_desc_nin     IN BOOLEAN := TRUE,
        id_alert_diagnosis_in  IN opinion_reason.id_alert_diagnosis%TYPE DEFAULT NULL,
        id_alert_diagnosis_nin IN BOOLEAN := TRUE,
        where_in               IN VARCHAR2,
        handle_error_in        IN BOOLEAN := FALSE,
        rows_out               IN OUT table_varchar
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        create_user_in         IN opinion_reason.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN opinion_reason.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN opinion_reason.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN opinion_reason.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN opinion_reason.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN opinion_reason.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        id_diag_inst_owner_in  IN opinion_reason.id_diag_inst_owner%TYPE DEFAULT NULL,
        id_diag_inst_owner_nin IN BOOLEAN := TRUE,
        diagnosis_desc_in      IN opinion_reason.diagnosis_desc%TYPE DEFAULT NULL,
        diagnosis_desc_nin     IN BOOLEAN := TRUE,
        id_alert_diagnosis_in  IN opinion_reason.id_alert_diagnosis%TYPE DEFAULT NULL,
        id_alert_diagnosis_nin IN BOOLEAN := TRUE,
        where_in               IN VARCHAR2,
        handle_error_in        IN BOOLEAN := FALSE
    );

    --Update/insert with columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_diagnosis_in       IN opinion_reason.id_diagnosis%TYPE,
        id_opinion_in         IN opinion_reason.id_opinion%TYPE,
        create_user_in        IN opinion_reason.create_user%TYPE DEFAULT NULL,
        create_time_in        IN opinion_reason.create_time%TYPE DEFAULT NULL,
        create_institution_in IN opinion_reason.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN opinion_reason.update_user%TYPE DEFAULT NULL,
        update_time_in        IN opinion_reason.update_time%TYPE DEFAULT NULL,
        update_institution_in IN opinion_reason.update_institution%TYPE DEFAULT NULL,
        id_diag_inst_owner_in IN opinion_reason.id_diag_inst_owner%TYPE DEFAULT NULL,
        diagnosis_desc_in     IN opinion_reason.diagnosis_desc%TYPE DEFAULT NULL,
        id_alert_diagnosis_in IN opinion_reason.id_alert_diagnosis%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := FALSE,
        rows_out              IN OUT table_varchar
    );

    --Update/insert with columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_diagnosis_in       IN opinion_reason.id_diagnosis%TYPE,
        id_opinion_in         IN opinion_reason.id_opinion%TYPE,
        create_user_in        IN opinion_reason.create_user%TYPE DEFAULT NULL,
        create_time_in        IN opinion_reason.create_time%TYPE DEFAULT NULL,
        create_institution_in IN opinion_reason.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN opinion_reason.update_user%TYPE DEFAULT NULL,
        update_time_in        IN opinion_reason.update_time%TYPE DEFAULT NULL,
        update_institution_in IN opinion_reason.update_institution%TYPE DEFAULT NULL,
        id_diag_inst_owner_in IN opinion_reason.id_diag_inst_owner%TYPE DEFAULT NULL,
        diagnosis_desc_in     IN opinion_reason.diagnosis_desc%TYPE DEFAULT NULL,
        id_alert_diagnosis_in IN opinion_reason.id_alert_diagnosis%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := FALSE
    );

    --Update record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN opinion_reason%ROWTYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        IN OUT table_varchar
    );

    --Update record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN opinion_reason%ROWTYPE,
        handle_error_in IN BOOLEAN := FALSE
    );

    --Update collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN opinion_reason_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := FALSE,
        rows_out          IN OUT table_varchar
    );

    --Update collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN opinion_reason_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := FALSE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := FALSE,
        rows_out           OUT table_varchar
    );

    --increment column value
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := FALSE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_diagnosis_in IN opinion_reason.id_diagnosis%TYPE,
        id_opinion_in   IN opinion_reason.id_opinion%TYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_diagnosis_in IN opinion_reason.id_diagnosis%TYPE,
        id_opinion_in   IN opinion_reason.id_opinion%TYPE,
        handle_error_in IN BOOLEAN := FALSE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := FALSE
    );

    -- Delete all rows for this OPR_DIAGNOSIS_FK foreign key value
    PROCEDURE del_opr_diagnosis_fk
    (
        id_diagnosis_in       IN opinion_reason.id_diagnosis%TYPE,
        id_diag_inst_owner_in IN opinion_reason.id_diag_inst_owner%TYPE,
        handle_error_in       IN BOOLEAN := FALSE,
        rows_out              OUT table_varchar
    );

    -- Delete all rows for this OPR_OPINION_FK foreign key value
    PROCEDURE del_opr_opinion_fk
    (
        id_opinion_in   IN opinion_reason.id_opinion%TYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this OPR_DIAGNOSIS_FK foreign key value
    PROCEDURE del_opr_diagnosis_fk
    (
        id_diagnosis_in       IN opinion_reason.id_diagnosis%TYPE,
        id_diag_inst_owner_in IN opinion_reason.id_diag_inst_owner%TYPE,
        handle_error_in       IN BOOLEAN := FALSE
    );

    -- Delete all rows for this OPR_OPINION_FK foreign key value
    PROCEDURE del_opr_opinion_fk
    (
        id_opinion_in   IN opinion_reason.id_opinion%TYPE,
        handle_error_in IN BOOLEAN := FALSE
    );

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(opinion_reason_inout IN OUT opinion_reason%ROWTYPE);

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN opinion_reason%ROWTYPE;

    -- Get data rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN opinion_reason_tc;

    -- Get data rowid pragma autonomous transaccion
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN opinion_reason_tc;

END ts_opinion_reason;
/
