/*-- Last Change Revision: $Rev: 1976342 $*/
/*-- Last Change by: $Author: pedro.henriques $*/
/*-- Date of last change: $Date: 2021-01-15 11:52:03 +0000 (sex, 15 jan 2021) $*/
CREATE OR REPLACE PACKAGE ts_prof_specialities
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2021-01-13 17:21:15
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on prof_specialities
    TYPE prof_specialities_tc IS TABLE OF prof_specialities%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE prof_specialities_ntt IS TABLE OF prof_specialities%ROWTYPE;
    TYPE prof_specialities_vat IS VARRAY(100) OF prof_specialities%ROWTYPE;

    -- Column Collection based on column ID_PROF_SPECIALITIES
    TYPE id_prof_specialities_cc IS TABLE OF prof_specialities.id_prof_specialities%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_PROFESSIONAL
    TYPE id_professional_cc IS TABLE OF prof_specialities.id_professional%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_SPECIALITY
    TYPE id_speciality_cc IS TABLE OF prof_specialities.id_speciality%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column SPEC_BALLOT
    TYPE spec_ballot_cc IS TABLE OF prof_specialities.spec_ballot%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_INSTITUTION_EXT
    TYPE id_institution_ext_cc IS TABLE OF prof_specialities.id_institution_ext%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column SPECIALITY_MAIN
    TYPE speciality_main_cc IS TABLE OF prof_specialities.speciality_main%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column RANK
    TYPE rank_cc IS TABLE OF prof_specialities.rank%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_USER
    TYPE create_user_cc IS TABLE OF prof_specialities.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_TIME
    TYPE create_time_cc IS TABLE OF prof_specialities.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_INSTITUTION
    TYPE create_institution_cc IS TABLE OF prof_specialities.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_USER
    TYPE update_user_cc IS TABLE OF prof_specialities.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_TIME
    TYPE update_time_cc IS TABLE OF prof_specialities.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_INSTITUTION
    TYPE update_institution_cc IS TABLE OF prof_specialities.update_institution%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present (with rows_out)
    PROCEDURE ins
    (
        id_prof_specialities_in IN prof_specialities.id_prof_specialities%TYPE DEFAULT NULL,
        id_professional_in      IN prof_specialities.id_professional%TYPE DEFAULT NULL,
        id_speciality_in        IN prof_specialities.id_speciality%TYPE DEFAULT NULL,
        spec_ballot_in          IN prof_specialities.spec_ballot%TYPE DEFAULT NULL,
        id_institution_ext_in   IN prof_specialities.id_institution_ext%TYPE DEFAULT NULL,
        speciality_main_in      IN prof_specialities.speciality_main%TYPE DEFAULT NULL,
        rank_in                 IN prof_specialities.rank%TYPE DEFAULT NULL,
        create_user_in          IN prof_specialities.create_user%TYPE DEFAULT NULL,
        create_time_in          IN prof_specialities.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN prof_specialities.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN prof_specialities.update_user%TYPE DEFAULT NULL,
        update_time_in          IN prof_specialities.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN prof_specialities.update_institution%TYPE DEFAULT NULL,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    );

    -- Insert one row, providing primary key if present (without rows_out)
    PROCEDURE ins
    (
        id_prof_specialities_in IN prof_specialities.id_prof_specialities%TYPE DEFAULT NULL,
        id_professional_in      IN prof_specialities.id_professional%TYPE DEFAULT NULL,
        id_speciality_in        IN prof_specialities.id_speciality%TYPE DEFAULT NULL,
        spec_ballot_in          IN prof_specialities.spec_ballot%TYPE DEFAULT NULL,
        id_institution_ext_in   IN prof_specialities.id_institution_ext%TYPE DEFAULT NULL,
        speciality_main_in      IN prof_specialities.speciality_main%TYPE DEFAULT NULL,
        rank_in                 IN prof_specialities.rank%TYPE DEFAULT NULL,
        create_user_in          IN prof_specialities.create_user%TYPE DEFAULT NULL,
        create_time_in          IN prof_specialities.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN prof_specialities.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN prof_specialities.update_user%TYPE DEFAULT NULL,
        update_time_in          IN prof_specialities.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN prof_specialities.update_institution%TYPE DEFAULT NULL,
        handle_error_in         IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN prof_specialities%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN prof_specialities%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN prof_specialities_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN prof_specialities_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_prof_specialities_in  IN prof_specialities.id_prof_specialities%TYPE DEFAULT NULL,
        id_prof_specialities_nin IN BOOLEAN := TRUE,
        id_professional_in       IN prof_specialities.id_professional%TYPE DEFAULT NULL,
        id_professional_nin      IN BOOLEAN := TRUE,
        id_speciality_in         IN prof_specialities.id_speciality%TYPE DEFAULT NULL,
        id_speciality_nin        IN BOOLEAN := TRUE,
        spec_ballot_in           IN prof_specialities.spec_ballot%TYPE DEFAULT NULL,
        spec_ballot_nin          IN BOOLEAN := TRUE,
        id_institution_ext_in    IN prof_specialities.id_institution_ext%TYPE DEFAULT NULL,
        id_institution_ext_nin   IN BOOLEAN := TRUE,
        speciality_main_in       IN prof_specialities.speciality_main%TYPE DEFAULT NULL,
        speciality_main_nin      IN BOOLEAN := TRUE,
        rank_in                  IN prof_specialities.rank%TYPE DEFAULT NULL,
        rank_nin                 IN BOOLEAN := TRUE,
        create_user_in           IN prof_specialities.create_user%TYPE DEFAULT NULL,
        create_user_nin          IN BOOLEAN := TRUE,
        create_time_in           IN prof_specialities.create_time%TYPE DEFAULT NULL,
        create_time_nin          IN BOOLEAN := TRUE,
        create_institution_in    IN prof_specialities.create_institution%TYPE DEFAULT NULL,
        create_institution_nin   IN BOOLEAN := TRUE,
        update_user_in           IN prof_specialities.update_user%TYPE DEFAULT NULL,
        update_user_nin          IN BOOLEAN := TRUE,
        update_time_in           IN prof_specialities.update_time%TYPE DEFAULT NULL,
        update_time_nin          IN BOOLEAN := TRUE,
        update_institution_in    IN prof_specialities.update_institution%TYPE DEFAULT NULL,
        update_institution_nin   IN BOOLEAN := TRUE,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 IN OUT table_varchar
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_prof_specialities_in  IN prof_specialities.id_prof_specialities%TYPE DEFAULT NULL,
        id_prof_specialities_nin IN BOOLEAN := TRUE,
        id_professional_in       IN prof_specialities.id_professional%TYPE DEFAULT NULL,
        id_professional_nin      IN BOOLEAN := TRUE,
        id_speciality_in         IN prof_specialities.id_speciality%TYPE DEFAULT NULL,
        id_speciality_nin        IN BOOLEAN := TRUE,
        spec_ballot_in           IN prof_specialities.spec_ballot%TYPE DEFAULT NULL,
        spec_ballot_nin          IN BOOLEAN := TRUE,
        id_institution_ext_in    IN prof_specialities.id_institution_ext%TYPE DEFAULT NULL,
        id_institution_ext_nin   IN BOOLEAN := TRUE,
        speciality_main_in       IN prof_specialities.speciality_main%TYPE DEFAULT NULL,
        speciality_main_nin      IN BOOLEAN := TRUE,
        rank_in                  IN prof_specialities.rank%TYPE DEFAULT NULL,
        rank_nin                 IN BOOLEAN := TRUE,
        create_user_in           IN prof_specialities.create_user%TYPE DEFAULT NULL,
        create_user_nin          IN BOOLEAN := TRUE,
        create_time_in           IN prof_specialities.create_time%TYPE DEFAULT NULL,
        create_time_nin          IN BOOLEAN := TRUE,
        create_institution_in    IN prof_specialities.create_institution%TYPE DEFAULT NULL,
        create_institution_nin   IN BOOLEAN := TRUE,
        update_user_in           IN prof_specialities.update_user%TYPE DEFAULT NULL,
        update_user_nin          IN BOOLEAN := TRUE,
        update_time_in           IN prof_specialities.update_time%TYPE DEFAULT NULL,
        update_time_nin          IN BOOLEAN := TRUE,
        update_institution_in    IN prof_specialities.update_institution%TYPE DEFAULT NULL,
        update_institution_nin   IN BOOLEAN := TRUE,
        handle_error_in          IN BOOLEAN := TRUE
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_prof_specialities_in  IN prof_specialities.id_prof_specialities%TYPE DEFAULT NULL,
        id_prof_specialities_nin IN BOOLEAN := TRUE,
        id_professional_in       IN prof_specialities.id_professional%TYPE DEFAULT NULL,
        id_professional_nin      IN BOOLEAN := TRUE,
        id_speciality_in         IN prof_specialities.id_speciality%TYPE DEFAULT NULL,
        id_speciality_nin        IN BOOLEAN := TRUE,
        spec_ballot_in           IN prof_specialities.spec_ballot%TYPE DEFAULT NULL,
        spec_ballot_nin          IN BOOLEAN := TRUE,
        id_institution_ext_in    IN prof_specialities.id_institution_ext%TYPE DEFAULT NULL,
        id_institution_ext_nin   IN BOOLEAN := TRUE,
        speciality_main_in       IN prof_specialities.speciality_main%TYPE DEFAULT NULL,
        speciality_main_nin      IN BOOLEAN := TRUE,
        rank_in                  IN prof_specialities.rank%TYPE DEFAULT NULL,
        rank_nin                 IN BOOLEAN := TRUE,
        create_user_in           IN prof_specialities.create_user%TYPE DEFAULT NULL,
        create_user_nin          IN BOOLEAN := TRUE,
        create_time_in           IN prof_specialities.create_time%TYPE DEFAULT NULL,
        create_time_nin          IN BOOLEAN := TRUE,
        create_institution_in    IN prof_specialities.create_institution%TYPE DEFAULT NULL,
        create_institution_nin   IN BOOLEAN := TRUE,
        update_user_in           IN prof_specialities.update_user%TYPE DEFAULT NULL,
        update_user_nin          IN BOOLEAN := TRUE,
        update_time_in           IN prof_specialities.update_time%TYPE DEFAULT NULL,
        update_time_nin          IN BOOLEAN := TRUE,
        update_institution_in    IN prof_specialities.update_institution%TYPE DEFAULT NULL,
        update_institution_nin   IN BOOLEAN := TRUE,
        where_in                 IN VARCHAR2,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 IN OUT table_varchar
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_prof_specialities_in  IN prof_specialities.id_prof_specialities%TYPE DEFAULT NULL,
        id_prof_specialities_nin IN BOOLEAN := TRUE,
        id_professional_in       IN prof_specialities.id_professional%TYPE DEFAULT NULL,
        id_professional_nin      IN BOOLEAN := TRUE,
        id_speciality_in         IN prof_specialities.id_speciality%TYPE DEFAULT NULL,
        id_speciality_nin        IN BOOLEAN := TRUE,
        spec_ballot_in           IN prof_specialities.spec_ballot%TYPE DEFAULT NULL,
        spec_ballot_nin          IN BOOLEAN := TRUE,
        id_institution_ext_in    IN prof_specialities.id_institution_ext%TYPE DEFAULT NULL,
        id_institution_ext_nin   IN BOOLEAN := TRUE,
        speciality_main_in       IN prof_specialities.speciality_main%TYPE DEFAULT NULL,
        speciality_main_nin      IN BOOLEAN := TRUE,
        rank_in                  IN prof_specialities.rank%TYPE DEFAULT NULL,
        rank_nin                 IN BOOLEAN := TRUE,
        create_user_in           IN prof_specialities.create_user%TYPE DEFAULT NULL,
        create_user_nin          IN BOOLEAN := TRUE,
        create_time_in           IN prof_specialities.create_time%TYPE DEFAULT NULL,
        create_time_nin          IN BOOLEAN := TRUE,
        create_institution_in    IN prof_specialities.create_institution%TYPE DEFAULT NULL,
        create_institution_nin   IN BOOLEAN := TRUE,
        update_user_in           IN prof_specialities.update_user%TYPE DEFAULT NULL,
        update_user_nin          IN BOOLEAN := TRUE,
        update_time_in           IN prof_specialities.update_time%TYPE DEFAULT NULL,
        update_time_nin          IN BOOLEAN := TRUE,
        update_institution_in    IN prof_specialities.update_institution%TYPE DEFAULT NULL,
        update_institution_nin   IN BOOLEAN := TRUE,
        where_in                 IN VARCHAR2,
        handle_error_in          IN BOOLEAN := TRUE
    );

    --Update/insert with columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_prof_specialities_in IN prof_specialities.id_prof_specialities%TYPE DEFAULT NULL,
        id_professional_in      IN prof_specialities.id_professional%TYPE DEFAULT NULL,
        id_speciality_in        IN prof_specialities.id_speciality%TYPE DEFAULT NULL,
        spec_ballot_in          IN prof_specialities.spec_ballot%TYPE DEFAULT NULL,
        id_institution_ext_in   IN prof_specialities.id_institution_ext%TYPE DEFAULT NULL,
        speciality_main_in      IN prof_specialities.speciality_main%TYPE DEFAULT NULL,
        rank_in                 IN prof_specialities.rank%TYPE DEFAULT NULL,
        create_user_in          IN prof_specialities.create_user%TYPE DEFAULT NULL,
        create_time_in          IN prof_specialities.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN prof_specialities.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN prof_specialities.update_user%TYPE DEFAULT NULL,
        update_time_in          IN prof_specialities.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN prof_specialities.update_institution%TYPE DEFAULT NULL,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                IN OUT table_varchar
    );

    --Update/insert with columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_prof_specialities_in IN prof_specialities.id_prof_specialities%TYPE DEFAULT NULL,
        id_professional_in      IN prof_specialities.id_professional%TYPE DEFAULT NULL,
        id_speciality_in        IN prof_specialities.id_speciality%TYPE DEFAULT NULL,
        spec_ballot_in          IN prof_specialities.spec_ballot%TYPE DEFAULT NULL,
        id_institution_ext_in   IN prof_specialities.id_institution_ext%TYPE DEFAULT NULL,
        speciality_main_in      IN prof_specialities.speciality_main%TYPE DEFAULT NULL,
        rank_in                 IN prof_specialities.rank%TYPE DEFAULT NULL,
        create_user_in          IN prof_specialities.create_user%TYPE DEFAULT NULL,
        create_time_in          IN prof_specialities.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN prof_specialities.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN prof_specialities.update_user%TYPE DEFAULT NULL,
        update_time_in          IN prof_specialities.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN prof_specialities.update_institution%TYPE DEFAULT NULL,
        handle_error_in         IN BOOLEAN := TRUE
    );

    --Update record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN prof_specialities%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    --Update record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN prof_specialities%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    --Update collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN prof_specialities_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    --Update collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN prof_specialities_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    --increment column value
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete one row by primary key
    PROCEDURE del(handle_error_in IN BOOLEAN := TRUE);

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(prof_specialities_inout IN OUT prof_specialities%ROWTYPE);

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN prof_specialities%ROWTYPE;

    -- Get data rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN prof_specialities_tc;

    -- Get data rowid pragma autonomous transaccion
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN prof_specialities_tc;

END ts_prof_specialities;
/
