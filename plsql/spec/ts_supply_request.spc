/*-- Last Change Revision: $Rev: 2029391 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:51:24 +0100 (ter, 02 ago 2022) $*/


CREATE OR REPLACE PACKAGE TS_SUPPLY_REQUEST
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Novembro 11, 2009 14:20:14
| Created By: ALERT
*/
IS

  -- Collection of %ROWTYPE records based on "SUPPLY_REQUEST"
     TYPE SUPPLY_REQUEST_tc IS TABLE OF SUPPLY_REQUEST%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE supply_request_ntt IS TABLE OF SUPPLY_REQUEST%ROWTYPE;
     TYPE supply_request_vat IS VARRAY(100) OF SUPPLY_REQUEST%ROWTYPE;

  -- Same type structure, with a static name.
     TYPE aat IS TABLE OF SUPPLY_REQUEST%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE ntt IS TABLE OF SUPPLY_REQUEST%ROWTYPE;
     TYPE vat IS VARRAY(100) OF SUPPLY_REQUEST%ROWTYPE;

   -- Column Collection based on column "ID_SUPPLY_REQUEST"
   TYPE ID_SUPPLY_REQUEST_cc IS TABLE OF SUPPLY_REQUEST.ID_SUPPLY_REQUEST%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PROFESSIONAL"
   TYPE ID_PROFESSIONAL_cc IS TABLE OF SUPPLY_REQUEST.ID_PROFESSIONAL%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_EPISODE"
   TYPE ID_EPISODE_cc IS TABLE OF SUPPLY_REQUEST.ID_EPISODE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_ROOM_REQ"
   TYPE ID_ROOM_REQ_cc IS TABLE OF SUPPLY_REQUEST.ID_ROOM_REQ%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_CONTEXT"
   TYPE ID_CONTEXT_cc IS TABLE OF SUPPLY_REQUEST.ID_CONTEXT%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_CONTEXT"
   TYPE FLG_CONTEXT_cc IS TABLE OF SUPPLY_REQUEST.FLG_CONTEXT%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_REQUEST"
   TYPE DT_REQUEST_cc IS TABLE OF SUPPLY_REQUEST.DT_REQUEST%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_STATUS"
   TYPE FLG_STATUS_cc IS TABLE OF SUPPLY_REQUEST.FLG_STATUS%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_REASON"
   TYPE FLG_REASON_cc IS TABLE OF SUPPLY_REQUEST.FLG_REASON%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_PROF_PREP"
   TYPE FLG_PROF_PREP_cc IS TABLE OF SUPPLY_REQUEST.FLG_PROF_PREP%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PROF_CANCEL"
   TYPE ID_PROF_CANCEL_cc IS TABLE OF SUPPLY_REQUEST.ID_PROF_CANCEL%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_CANCEL"
   TYPE DT_CANCEL_cc IS TABLE OF SUPPLY_REQUEST.DT_CANCEL%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "NOTES_CANCEL"
   TYPE NOTES_CANCEL_cc IS TABLE OF SUPPLY_REQUEST.NOTES_CANCEL%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_CANCEL_REASON"
   TYPE ID_CANCEL_REASON_cc IS TABLE OF SUPPLY_REQUEST.ID_CANCEL_REASON%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "NOTES"
   TYPE NOTES_cc IS TABLE OF SUPPLY_REQUEST.NOTES%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_USER"
   TYPE CREATE_USER_cc IS TABLE OF SUPPLY_REQUEST.CREATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_TIME"
   TYPE CREATE_TIME_cc IS TABLE OF SUPPLY_REQUEST.CREATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATE_INSTITUTION"
   TYPE CREATE_INSTITUTION_cc IS TABLE OF SUPPLY_REQUEST.CREATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_USER"
   TYPE UPDATE_USER_cc IS TABLE OF SUPPLY_REQUEST.UPDATE_USER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_TIME"
   TYPE UPDATE_TIME_cc IS TABLE OF SUPPLY_REQUEST.UPDATE_TIME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "UPDATE_INSTITUTION"
   TYPE UPDATE_INSTITUTION_cc IS TABLE OF SUPPLY_REQUEST.UPDATE_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;

   TYPE varchar2_t IS TABLE OF VARCHAR2(32767) INDEX BY PLS_INTEGER;
   /*
   START Special logic for handling LOB columns....
   */
   PROCEDURE n_ins_clobs_in_chunks (
      id_supply_request_in IN SUPPLY_REQUEST.ID_SUPPLY_REQUEST%TYPE,
      id_professional_in IN SUPPLY_REQUEST.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      id_episode_in IN SUPPLY_REQUEST.ID_EPISODE%TYPE DEFAULT NULL,
      id_room_req_in IN SUPPLY_REQUEST.ID_ROOM_REQ%TYPE DEFAULT NULL,
      id_context_in IN SUPPLY_REQUEST.ID_CONTEXT%TYPE DEFAULT NULL,
      flg_context_in IN SUPPLY_REQUEST.FLG_CONTEXT%TYPE DEFAULT NULL,
      dt_request_in IN SUPPLY_REQUEST.DT_REQUEST%TYPE DEFAULT NULL,
      flg_status_in IN SUPPLY_REQUEST.FLG_STATUS%TYPE DEFAULT NULL,
      flg_reason_in IN SUPPLY_REQUEST.FLG_REASON%TYPE DEFAULT NULL,
      flg_prof_prep_in IN SUPPLY_REQUEST.FLG_PROF_PREP%TYPE DEFAULT NULL,
      id_prof_cancel_in IN SUPPLY_REQUEST.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      dt_cancel_in IN SUPPLY_REQUEST.DT_CANCEL%TYPE DEFAULT NULL,
      id_cancel_reason_in IN SUPPLY_REQUEST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      create_user_in IN SUPPLY_REQUEST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN SUPPLY_REQUEST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN SUPPLY_REQUEST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN SUPPLY_REQUEST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN SUPPLY_REQUEST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN SUPPLY_REQUEST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      handle_error_in IN BOOLEAN := TRUE,
      clob_columns_in IN varchar2_t,
      clob_pieces_in IN  varchar2_t
   );

   PROCEDURE n_upd_clobs_in_chunks (
      id_supply_request_in IN SUPPLY_REQUEST.ID_SUPPLY_REQUEST%TYPE,
      id_professional_in IN SUPPLY_REQUEST.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      id_episode_in IN SUPPLY_REQUEST.ID_EPISODE%TYPE DEFAULT NULL,
      id_room_req_in IN SUPPLY_REQUEST.ID_ROOM_REQ%TYPE DEFAULT NULL,
      id_context_in IN SUPPLY_REQUEST.ID_CONTEXT%TYPE DEFAULT NULL,
      flg_context_in IN SUPPLY_REQUEST.FLG_CONTEXT%TYPE DEFAULT NULL,
      dt_request_in IN SUPPLY_REQUEST.DT_REQUEST%TYPE DEFAULT NULL,
      flg_status_in IN SUPPLY_REQUEST.FLG_STATUS%TYPE DEFAULT NULL,
      flg_reason_in IN SUPPLY_REQUEST.FLG_REASON%TYPE DEFAULT NULL,
      flg_prof_prep_in IN SUPPLY_REQUEST.FLG_PROF_PREP%TYPE DEFAULT NULL,
      id_prof_cancel_in IN SUPPLY_REQUEST.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      dt_cancel_in IN SUPPLY_REQUEST.DT_CANCEL%TYPE DEFAULT NULL,
      id_cancel_reason_in IN SUPPLY_REQUEST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      create_user_in IN SUPPLY_REQUEST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN SUPPLY_REQUEST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN SUPPLY_REQUEST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN SUPPLY_REQUEST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN SUPPLY_REQUEST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN SUPPLY_REQUEST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      ignore_if_null_in IN BOOLEAN := TRUE,
      handle_error_in IN BOOLEAN := TRUE,
      clob_columns_in IN varchar2_t,
      clob_pieces_in IN  varchar2_t
      );

   PROCEDURE n_upd_ins_clobs_in_chunks (
      id_supply_request_in IN SUPPLY_REQUEST.ID_SUPPLY_REQUEST%TYPE,
      id_professional_in IN SUPPLY_REQUEST.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      id_episode_in IN SUPPLY_REQUEST.ID_EPISODE%TYPE DEFAULT NULL,
      id_room_req_in IN SUPPLY_REQUEST.ID_ROOM_REQ%TYPE DEFAULT NULL,
      id_context_in IN SUPPLY_REQUEST.ID_CONTEXT%TYPE DEFAULT NULL,
      flg_context_in IN SUPPLY_REQUEST.FLG_CONTEXT%TYPE DEFAULT NULL,
      dt_request_in IN SUPPLY_REQUEST.DT_REQUEST%TYPE DEFAULT NULL,
      flg_status_in IN SUPPLY_REQUEST.FLG_STATUS%TYPE DEFAULT NULL,
      flg_reason_in IN SUPPLY_REQUEST.FLG_REASON%TYPE DEFAULT NULL,
      flg_prof_prep_in IN SUPPLY_REQUEST.FLG_PROF_PREP%TYPE DEFAULT NULL,
      id_prof_cancel_in IN SUPPLY_REQUEST.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      dt_cancel_in IN SUPPLY_REQUEST.DT_CANCEL%TYPE DEFAULT NULL,
      id_cancel_reason_in IN SUPPLY_REQUEST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      create_user_in IN SUPPLY_REQUEST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN SUPPLY_REQUEST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN SUPPLY_REQUEST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN SUPPLY_REQUEST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN SUPPLY_REQUEST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN SUPPLY_REQUEST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      ignore_if_null_in IN BOOLEAN DEFAULT TRUE,
      handle_error_in IN BOOLEAN DEFAULT TRUE,
      clob_columns_in IN varchar2_t,
      clob_pieces_in IN  varchar2_t
      );

   /*
   END Special logic for handling LOB columns.
   */
   -- Insert one row, providing primary key if present
   PROCEDURE ins (
      id_supply_request_in IN SUPPLY_REQUEST.ID_SUPPLY_REQUEST%TYPE
      ,
      id_professional_in IN SUPPLY_REQUEST.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      id_episode_in IN SUPPLY_REQUEST.ID_EPISODE%TYPE DEFAULT NULL,
      id_room_req_in IN SUPPLY_REQUEST.ID_ROOM_REQ%TYPE DEFAULT NULL,
      id_context_in IN SUPPLY_REQUEST.ID_CONTEXT%TYPE DEFAULT NULL,
      flg_context_in IN SUPPLY_REQUEST.FLG_CONTEXT%TYPE DEFAULT NULL,
      dt_request_in IN SUPPLY_REQUEST.DT_REQUEST%TYPE DEFAULT NULL,
      flg_status_in IN SUPPLY_REQUEST.FLG_STATUS%TYPE DEFAULT NULL,
      flg_reason_in IN SUPPLY_REQUEST.FLG_REASON%TYPE DEFAULT NULL,
      flg_prof_prep_in IN SUPPLY_REQUEST.FLG_PROF_PREP%TYPE DEFAULT NULL,
      id_prof_cancel_in IN SUPPLY_REQUEST.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      dt_cancel_in IN SUPPLY_REQUEST.DT_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN SUPPLY_REQUEST.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_cancel_reason_in IN SUPPLY_REQUEST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      notes_in IN SUPPLY_REQUEST.NOTES%TYPE DEFAULT NULL,
      create_user_in IN SUPPLY_REQUEST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN SUPPLY_REQUEST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN SUPPLY_REQUEST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN SUPPLY_REQUEST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN SUPPLY_REQUEST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN SUPPLY_REQUEST.UPDATE_INSTITUTION%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_supply_request_in IN SUPPLY_REQUEST.ID_SUPPLY_REQUEST%TYPE
      ,
      id_professional_in IN SUPPLY_REQUEST.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      id_episode_in IN SUPPLY_REQUEST.ID_EPISODE%TYPE DEFAULT NULL,
      id_room_req_in IN SUPPLY_REQUEST.ID_ROOM_REQ%TYPE DEFAULT NULL,
      id_context_in IN SUPPLY_REQUEST.ID_CONTEXT%TYPE DEFAULT NULL,
      flg_context_in IN SUPPLY_REQUEST.FLG_CONTEXT%TYPE DEFAULT NULL,
      dt_request_in IN SUPPLY_REQUEST.DT_REQUEST%TYPE DEFAULT NULL,
      flg_status_in IN SUPPLY_REQUEST.FLG_STATUS%TYPE DEFAULT NULL,
      flg_reason_in IN SUPPLY_REQUEST.FLG_REASON%TYPE DEFAULT NULL,
      flg_prof_prep_in IN SUPPLY_REQUEST.FLG_PROF_PREP%TYPE DEFAULT NULL,
      id_prof_cancel_in IN SUPPLY_REQUEST.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      dt_cancel_in IN SUPPLY_REQUEST.DT_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN SUPPLY_REQUEST.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_cancel_reason_in IN SUPPLY_REQUEST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      notes_in IN SUPPLY_REQUEST.NOTES%TYPE DEFAULT NULL,
      create_user_in IN SUPPLY_REQUEST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN SUPPLY_REQUEST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN SUPPLY_REQUEST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN SUPPLY_REQUEST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN SUPPLY_REQUEST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN SUPPLY_REQUEST.UPDATE_INSTITUTION%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );


   -- Insert a row based on a record.
   -- Specify whether or not a primary key value should be generated.
   PROCEDURE ins (
      rec_in IN SUPPLY_REQUEST%ROWTYPE
     ,gen_pky_in IN BOOLEAN DEFAULT FALSE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rec_in IN SUPPLY_REQUEST%ROWTYPE
     ,gen_pky_in IN BOOLEAN DEFAULT FALSE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Insert a collection of rows using FORALL; all primary key values
   -- must have already been generated, or are handled in triggers.
   PROCEDURE ins (
      rows_in IN SUPPLY_REQUEST_tc
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rows_in IN SUPPLY_REQUEST_tc
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Return next primary key value using the named sequence.
     FUNCTION next_key (sequence_in IN VARCHAR2 := NULL) RETURN SUPPLY_REQUEST.ID_SUPPLY_REQUEST%TYPE;

   -- Insert one row, generating hidden primary key using a sequence
   PROCEDURE ins (
      id_professional_in IN SUPPLY_REQUEST.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      id_episode_in IN SUPPLY_REQUEST.ID_EPISODE%TYPE DEFAULT NULL,
      id_room_req_in IN SUPPLY_REQUEST.ID_ROOM_REQ%TYPE DEFAULT NULL,
      id_context_in IN SUPPLY_REQUEST.ID_CONTEXT%TYPE DEFAULT NULL,
      flg_context_in IN SUPPLY_REQUEST.FLG_CONTEXT%TYPE DEFAULT NULL,
      dt_request_in IN SUPPLY_REQUEST.DT_REQUEST%TYPE DEFAULT NULL,
      flg_status_in IN SUPPLY_REQUEST.FLG_STATUS%TYPE DEFAULT NULL,
      flg_reason_in IN SUPPLY_REQUEST.FLG_REASON%TYPE DEFAULT NULL,
      flg_prof_prep_in IN SUPPLY_REQUEST.FLG_PROF_PREP%TYPE DEFAULT NULL,
      id_prof_cancel_in IN SUPPLY_REQUEST.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      dt_cancel_in IN SUPPLY_REQUEST.DT_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN SUPPLY_REQUEST.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_cancel_reason_in IN SUPPLY_REQUEST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      notes_in IN SUPPLY_REQUEST.NOTES%TYPE DEFAULT NULL,
      create_user_in IN SUPPLY_REQUEST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN SUPPLY_REQUEST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN SUPPLY_REQUEST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN SUPPLY_REQUEST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN SUPPLY_REQUEST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN SUPPLY_REQUEST.UPDATE_INSTITUTION%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_professional_in IN SUPPLY_REQUEST.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      id_episode_in IN SUPPLY_REQUEST.ID_EPISODE%TYPE DEFAULT NULL,
      id_room_req_in IN SUPPLY_REQUEST.ID_ROOM_REQ%TYPE DEFAULT NULL,
      id_context_in IN SUPPLY_REQUEST.ID_CONTEXT%TYPE DEFAULT NULL,
      flg_context_in IN SUPPLY_REQUEST.FLG_CONTEXT%TYPE DEFAULT NULL,
      dt_request_in IN SUPPLY_REQUEST.DT_REQUEST%TYPE DEFAULT NULL,
      flg_status_in IN SUPPLY_REQUEST.FLG_STATUS%TYPE DEFAULT NULL,
      flg_reason_in IN SUPPLY_REQUEST.FLG_REASON%TYPE DEFAULT NULL,
      flg_prof_prep_in IN SUPPLY_REQUEST.FLG_PROF_PREP%TYPE DEFAULT NULL,
      id_prof_cancel_in IN SUPPLY_REQUEST.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      dt_cancel_in IN SUPPLY_REQUEST.DT_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN SUPPLY_REQUEST.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_cancel_reason_in IN SUPPLY_REQUEST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      notes_in IN SUPPLY_REQUEST.NOTES%TYPE DEFAULT NULL,
      create_user_in IN SUPPLY_REQUEST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN SUPPLY_REQUEST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN SUPPLY_REQUEST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN SUPPLY_REQUEST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN SUPPLY_REQUEST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN SUPPLY_REQUEST.UPDATE_INSTITUTION%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );

   -- Insert one row, returning primary key generated by sequence
   PROCEDURE ins (
      id_professional_in IN SUPPLY_REQUEST.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      id_episode_in IN SUPPLY_REQUEST.ID_EPISODE%TYPE DEFAULT NULL,
      id_room_req_in IN SUPPLY_REQUEST.ID_ROOM_REQ%TYPE DEFAULT NULL,
      id_context_in IN SUPPLY_REQUEST.ID_CONTEXT%TYPE DEFAULT NULL,
      flg_context_in IN SUPPLY_REQUEST.FLG_CONTEXT%TYPE DEFAULT NULL,
      dt_request_in IN SUPPLY_REQUEST.DT_REQUEST%TYPE DEFAULT NULL,
      flg_status_in IN SUPPLY_REQUEST.FLG_STATUS%TYPE DEFAULT NULL,
      flg_reason_in IN SUPPLY_REQUEST.FLG_REASON%TYPE DEFAULT NULL,
      flg_prof_prep_in IN SUPPLY_REQUEST.FLG_PROF_PREP%TYPE DEFAULT NULL,
      id_prof_cancel_in IN SUPPLY_REQUEST.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      dt_cancel_in IN SUPPLY_REQUEST.DT_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN SUPPLY_REQUEST.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_cancel_reason_in IN SUPPLY_REQUEST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      notes_in IN SUPPLY_REQUEST.NOTES%TYPE DEFAULT NULL,
      create_user_in IN SUPPLY_REQUEST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN SUPPLY_REQUEST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN SUPPLY_REQUEST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN SUPPLY_REQUEST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN SUPPLY_REQUEST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN SUPPLY_REQUEST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_supply_request_out IN OUT SUPPLY_REQUEST.ID_SUPPLY_REQUEST%TYPE
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_professional_in IN SUPPLY_REQUEST.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      id_episode_in IN SUPPLY_REQUEST.ID_EPISODE%TYPE DEFAULT NULL,
      id_room_req_in IN SUPPLY_REQUEST.ID_ROOM_REQ%TYPE DEFAULT NULL,
      id_context_in IN SUPPLY_REQUEST.ID_CONTEXT%TYPE DEFAULT NULL,
      flg_context_in IN SUPPLY_REQUEST.FLG_CONTEXT%TYPE DEFAULT NULL,
      dt_request_in IN SUPPLY_REQUEST.DT_REQUEST%TYPE DEFAULT NULL,
      flg_status_in IN SUPPLY_REQUEST.FLG_STATUS%TYPE DEFAULT NULL,
      flg_reason_in IN SUPPLY_REQUEST.FLG_REASON%TYPE DEFAULT NULL,
      flg_prof_prep_in IN SUPPLY_REQUEST.FLG_PROF_PREP%TYPE DEFAULT NULL,
      id_prof_cancel_in IN SUPPLY_REQUEST.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      dt_cancel_in IN SUPPLY_REQUEST.DT_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN SUPPLY_REQUEST.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_cancel_reason_in IN SUPPLY_REQUEST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      notes_in IN SUPPLY_REQUEST.NOTES%TYPE DEFAULT NULL,
      create_user_in IN SUPPLY_REQUEST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN SUPPLY_REQUEST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN SUPPLY_REQUEST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN SUPPLY_REQUEST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN SUPPLY_REQUEST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN SUPPLY_REQUEST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_supply_request_out IN OUT SUPPLY_REQUEST.ID_SUPPLY_REQUEST%TYPE
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );

   -- Insert one row with function, return generated primary key
   FUNCTION ins (
      id_professional_in IN SUPPLY_REQUEST.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      id_episode_in IN SUPPLY_REQUEST.ID_EPISODE%TYPE DEFAULT NULL,
      id_room_req_in IN SUPPLY_REQUEST.ID_ROOM_REQ%TYPE DEFAULT NULL,
      id_context_in IN SUPPLY_REQUEST.ID_CONTEXT%TYPE DEFAULT NULL,
      flg_context_in IN SUPPLY_REQUEST.FLG_CONTEXT%TYPE DEFAULT NULL,
      dt_request_in IN SUPPLY_REQUEST.DT_REQUEST%TYPE DEFAULT NULL,
      flg_status_in IN SUPPLY_REQUEST.FLG_STATUS%TYPE DEFAULT NULL,
      flg_reason_in IN SUPPLY_REQUEST.FLG_REASON%TYPE DEFAULT NULL,
      flg_prof_prep_in IN SUPPLY_REQUEST.FLG_PROF_PREP%TYPE DEFAULT NULL,
      id_prof_cancel_in IN SUPPLY_REQUEST.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      dt_cancel_in IN SUPPLY_REQUEST.DT_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN SUPPLY_REQUEST.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_cancel_reason_in IN SUPPLY_REQUEST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      notes_in IN SUPPLY_REQUEST.NOTES%TYPE DEFAULT NULL,
      create_user_in IN SUPPLY_REQUEST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN SUPPLY_REQUEST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN SUPPLY_REQUEST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN SUPPLY_REQUEST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN SUPPLY_REQUEST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN SUPPLY_REQUEST.UPDATE_INSTITUTION%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
      RETURN
         SUPPLY_REQUEST.ID_SUPPLY_REQUEST%TYPE
      ;

   FUNCTION ins (
      id_professional_in IN SUPPLY_REQUEST.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      id_episode_in IN SUPPLY_REQUEST.ID_EPISODE%TYPE DEFAULT NULL,
      id_room_req_in IN SUPPLY_REQUEST.ID_ROOM_REQ%TYPE DEFAULT NULL,
      id_context_in IN SUPPLY_REQUEST.ID_CONTEXT%TYPE DEFAULT NULL,
      flg_context_in IN SUPPLY_REQUEST.FLG_CONTEXT%TYPE DEFAULT NULL,
      dt_request_in IN SUPPLY_REQUEST.DT_REQUEST%TYPE DEFAULT NULL,
      flg_status_in IN SUPPLY_REQUEST.FLG_STATUS%TYPE DEFAULT NULL,
      flg_reason_in IN SUPPLY_REQUEST.FLG_REASON%TYPE DEFAULT NULL,
      flg_prof_prep_in IN SUPPLY_REQUEST.FLG_PROF_PREP%TYPE DEFAULT NULL,
      id_prof_cancel_in IN SUPPLY_REQUEST.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      dt_cancel_in IN SUPPLY_REQUEST.DT_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN SUPPLY_REQUEST.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_cancel_reason_in IN SUPPLY_REQUEST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      notes_in IN SUPPLY_REQUEST.NOTES%TYPE DEFAULT NULL,
      create_user_in IN SUPPLY_REQUEST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN SUPPLY_REQUEST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN SUPPLY_REQUEST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN SUPPLY_REQUEST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN SUPPLY_REQUEST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN SUPPLY_REQUEST.UPDATE_INSTITUTION%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      )
      RETURN
         SUPPLY_REQUEST.ID_SUPPLY_REQUEST%TYPE
      ;

   -- Update any/all columns by primary key. If you pass NULL, then
   -- the current column value is set to itself. If you need a more
   -- selected UPDATE then use one of the onecol procedures below.

  PROCEDURE upd (
      id_supply_request_in IN SUPPLY_REQUEST.ID_SUPPLY_REQUEST%TYPE,
      id_professional_in IN SUPPLY_REQUEST.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      ID_PROFESSIONAL_nin IN BOOLEAN := TRUE,
      id_episode_in IN SUPPLY_REQUEST.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      id_room_req_in IN SUPPLY_REQUEST.ID_ROOM_REQ%TYPE DEFAULT NULL,
      ID_ROOM_REQ_nin IN BOOLEAN := TRUE,
      id_context_in IN SUPPLY_REQUEST.ID_CONTEXT%TYPE DEFAULT NULL,
      ID_CONTEXT_nin IN BOOLEAN := TRUE,
      flg_context_in IN SUPPLY_REQUEST.FLG_CONTEXT%TYPE DEFAULT NULL,
      FLG_CONTEXT_nin IN BOOLEAN := TRUE,
      dt_request_in IN SUPPLY_REQUEST.DT_REQUEST%TYPE DEFAULT NULL,
      DT_REQUEST_nin IN BOOLEAN := TRUE,
      flg_status_in IN SUPPLY_REQUEST.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      flg_reason_in IN SUPPLY_REQUEST.FLG_REASON%TYPE DEFAULT NULL,
      FLG_REASON_nin IN BOOLEAN := TRUE,
      flg_prof_prep_in IN SUPPLY_REQUEST.FLG_PROF_PREP%TYPE DEFAULT NULL,
      FLG_PROF_PREP_nin IN BOOLEAN := TRUE,
      id_prof_cancel_in IN SUPPLY_REQUEST.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      ID_PROF_CANCEL_nin IN BOOLEAN := TRUE,
      dt_cancel_in IN SUPPLY_REQUEST.DT_CANCEL%TYPE DEFAULT NULL,
      DT_CANCEL_nin IN BOOLEAN := TRUE,
      notes_cancel_in IN SUPPLY_REQUEST.NOTES_CANCEL%TYPE DEFAULT NULL,
      NOTES_CANCEL_nin IN BOOLEAN := TRUE,
      id_cancel_reason_in IN SUPPLY_REQUEST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      ID_CANCEL_REASON_nin IN BOOLEAN := TRUE,
      notes_in IN SUPPLY_REQUEST.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      create_user_in IN SUPPLY_REQUEST.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN SUPPLY_REQUEST.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN SUPPLY_REQUEST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN SUPPLY_REQUEST.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN SUPPLY_REQUEST.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN SUPPLY_REQUEST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


       PROCEDURE upd (
      id_supply_request_in IN SUPPLY_REQUEST.ID_SUPPLY_REQUEST%TYPE,
      id_professional_in IN SUPPLY_REQUEST.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      ID_PROFESSIONAL_nin IN BOOLEAN := TRUE,
      id_episode_in IN SUPPLY_REQUEST.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      id_room_req_in IN SUPPLY_REQUEST.ID_ROOM_REQ%TYPE DEFAULT NULL,
      ID_ROOM_REQ_nin IN BOOLEAN := TRUE,
      id_context_in IN SUPPLY_REQUEST.ID_CONTEXT%TYPE DEFAULT NULL,
      ID_CONTEXT_nin IN BOOLEAN := TRUE,
      flg_context_in IN SUPPLY_REQUEST.FLG_CONTEXT%TYPE DEFAULT NULL,
      FLG_CONTEXT_nin IN BOOLEAN := TRUE,
      dt_request_in IN SUPPLY_REQUEST.DT_REQUEST%TYPE DEFAULT NULL,
      DT_REQUEST_nin IN BOOLEAN := TRUE,
      flg_status_in IN SUPPLY_REQUEST.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      flg_reason_in IN SUPPLY_REQUEST.FLG_REASON%TYPE DEFAULT NULL,
      FLG_REASON_nin IN BOOLEAN := TRUE,
      flg_prof_prep_in IN SUPPLY_REQUEST.FLG_PROF_PREP%TYPE DEFAULT NULL,
      FLG_PROF_PREP_nin IN BOOLEAN := TRUE,
      id_prof_cancel_in IN SUPPLY_REQUEST.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      ID_PROF_CANCEL_nin IN BOOLEAN := TRUE,
      dt_cancel_in IN SUPPLY_REQUEST.DT_CANCEL%TYPE DEFAULT NULL,
      DT_CANCEL_nin IN BOOLEAN := TRUE,
      notes_cancel_in IN SUPPLY_REQUEST.NOTES_CANCEL%TYPE DEFAULT NULL,
      NOTES_CANCEL_nin IN BOOLEAN := TRUE,
      id_cancel_reason_in IN SUPPLY_REQUEST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      ID_CANCEL_REASON_nin IN BOOLEAN := TRUE,
      notes_in IN SUPPLY_REQUEST.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      create_user_in IN SUPPLY_REQUEST.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN SUPPLY_REQUEST.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN SUPPLY_REQUEST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN SUPPLY_REQUEST.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN SUPPLY_REQUEST.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN SUPPLY_REQUEST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
      );



      PROCEDURE upd (
      id_professional_in IN SUPPLY_REQUEST.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      ID_PROFESSIONAL_nin IN BOOLEAN := TRUE,
      id_episode_in IN SUPPLY_REQUEST.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      id_room_req_in IN SUPPLY_REQUEST.ID_ROOM_REQ%TYPE DEFAULT NULL,
      ID_ROOM_REQ_nin IN BOOLEAN := TRUE,
      id_context_in IN SUPPLY_REQUEST.ID_CONTEXT%TYPE DEFAULT NULL,
      ID_CONTEXT_nin IN BOOLEAN := TRUE,
      flg_context_in IN SUPPLY_REQUEST.FLG_CONTEXT%TYPE DEFAULT NULL,
      FLG_CONTEXT_nin IN BOOLEAN := TRUE,
      dt_request_in IN SUPPLY_REQUEST.DT_REQUEST%TYPE DEFAULT NULL,
      DT_REQUEST_nin IN BOOLEAN := TRUE,
      flg_status_in IN SUPPLY_REQUEST.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      flg_reason_in IN SUPPLY_REQUEST.FLG_REASON%TYPE DEFAULT NULL,
      FLG_REASON_nin IN BOOLEAN := TRUE,
      flg_prof_prep_in IN SUPPLY_REQUEST.FLG_PROF_PREP%TYPE DEFAULT NULL,
      FLG_PROF_PREP_nin IN BOOLEAN := TRUE,
      id_prof_cancel_in IN SUPPLY_REQUEST.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      ID_PROF_CANCEL_nin IN BOOLEAN := TRUE,
      dt_cancel_in IN SUPPLY_REQUEST.DT_CANCEL%TYPE DEFAULT NULL,
      DT_CANCEL_nin IN BOOLEAN := TRUE,
      notes_cancel_in IN SUPPLY_REQUEST.NOTES_CANCEL%TYPE DEFAULT NULL,
      NOTES_CANCEL_nin IN BOOLEAN := TRUE,
      id_cancel_reason_in IN SUPPLY_REQUEST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      ID_CANCEL_REASON_nin IN BOOLEAN := TRUE,
      notes_in IN SUPPLY_REQUEST.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      create_user_in IN SUPPLY_REQUEST.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN SUPPLY_REQUEST.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN SUPPLY_REQUEST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN SUPPLY_REQUEST.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN SUPPLY_REQUEST.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN SUPPLY_REQUEST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
    where_in varchar2 DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


      PROCEDURE upd (
      id_professional_in IN SUPPLY_REQUEST.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      ID_PROFESSIONAL_nin IN BOOLEAN := TRUE,
      id_episode_in IN SUPPLY_REQUEST.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      id_room_req_in IN SUPPLY_REQUEST.ID_ROOM_REQ%TYPE DEFAULT NULL,
      ID_ROOM_REQ_nin IN BOOLEAN := TRUE,
      id_context_in IN SUPPLY_REQUEST.ID_CONTEXT%TYPE DEFAULT NULL,
      ID_CONTEXT_nin IN BOOLEAN := TRUE,
      flg_context_in IN SUPPLY_REQUEST.FLG_CONTEXT%TYPE DEFAULT NULL,
      FLG_CONTEXT_nin IN BOOLEAN := TRUE,
      dt_request_in IN SUPPLY_REQUEST.DT_REQUEST%TYPE DEFAULT NULL,
      DT_REQUEST_nin IN BOOLEAN := TRUE,
      flg_status_in IN SUPPLY_REQUEST.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      flg_reason_in IN SUPPLY_REQUEST.FLG_REASON%TYPE DEFAULT NULL,
      FLG_REASON_nin IN BOOLEAN := TRUE,
      flg_prof_prep_in IN SUPPLY_REQUEST.FLG_PROF_PREP%TYPE DEFAULT NULL,
      FLG_PROF_PREP_nin IN BOOLEAN := TRUE,
      id_prof_cancel_in IN SUPPLY_REQUEST.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      ID_PROF_CANCEL_nin IN BOOLEAN := TRUE,
      dt_cancel_in IN SUPPLY_REQUEST.DT_CANCEL%TYPE DEFAULT NULL,
      DT_CANCEL_nin IN BOOLEAN := TRUE,
      notes_cancel_in IN SUPPLY_REQUEST.NOTES_CANCEL%TYPE DEFAULT NULL,
      NOTES_CANCEL_nin IN BOOLEAN := TRUE,
      id_cancel_reason_in IN SUPPLY_REQUEST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      ID_CANCEL_REASON_nin IN BOOLEAN := TRUE,
      notes_in IN SUPPLY_REQUEST.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      create_user_in IN SUPPLY_REQUEST.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN SUPPLY_REQUEST.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN SUPPLY_REQUEST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN SUPPLY_REQUEST.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN SUPPLY_REQUEST.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN SUPPLY_REQUEST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
    where_in varchar2 DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
      );



   PROCEDURE upd_ins (
      id_supply_request_in IN SUPPLY_REQUEST.ID_SUPPLY_REQUEST%TYPE,
      id_professional_in IN SUPPLY_REQUEST.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      id_episode_in IN SUPPLY_REQUEST.ID_EPISODE%TYPE DEFAULT NULL,
      id_room_req_in IN SUPPLY_REQUEST.ID_ROOM_REQ%TYPE DEFAULT NULL,
      id_context_in IN SUPPLY_REQUEST.ID_CONTEXT%TYPE DEFAULT NULL,
      flg_context_in IN SUPPLY_REQUEST.FLG_CONTEXT%TYPE DEFAULT NULL,
      dt_request_in IN SUPPLY_REQUEST.DT_REQUEST%TYPE DEFAULT NULL,
      flg_status_in IN SUPPLY_REQUEST.FLG_STATUS%TYPE DEFAULT NULL,
      flg_reason_in IN SUPPLY_REQUEST.FLG_REASON%TYPE DEFAULT NULL,
      flg_prof_prep_in IN SUPPLY_REQUEST.FLG_PROF_PREP%TYPE DEFAULT NULL,
      id_prof_cancel_in IN SUPPLY_REQUEST.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      dt_cancel_in IN SUPPLY_REQUEST.DT_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN SUPPLY_REQUEST.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_cancel_reason_in IN SUPPLY_REQUEST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      notes_in IN SUPPLY_REQUEST.NOTES%TYPE DEFAULT NULL,
      create_user_in IN SUPPLY_REQUEST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN SUPPLY_REQUEST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN SUPPLY_REQUEST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN SUPPLY_REQUEST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN SUPPLY_REQUEST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN SUPPLY_REQUEST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

      PROCEDURE upd_ins (
      id_supply_request_in IN SUPPLY_REQUEST.ID_SUPPLY_REQUEST%TYPE,
      id_professional_in IN SUPPLY_REQUEST.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      id_episode_in IN SUPPLY_REQUEST.ID_EPISODE%TYPE DEFAULT NULL,
      id_room_req_in IN SUPPLY_REQUEST.ID_ROOM_REQ%TYPE DEFAULT NULL,
      id_context_in IN SUPPLY_REQUEST.ID_CONTEXT%TYPE DEFAULT NULL,
      flg_context_in IN SUPPLY_REQUEST.FLG_CONTEXT%TYPE DEFAULT NULL,
      dt_request_in IN SUPPLY_REQUEST.DT_REQUEST%TYPE DEFAULT NULL,
      flg_status_in IN SUPPLY_REQUEST.FLG_STATUS%TYPE DEFAULT NULL,
      flg_reason_in IN SUPPLY_REQUEST.FLG_REASON%TYPE DEFAULT NULL,
      flg_prof_prep_in IN SUPPLY_REQUEST.FLG_PROF_PREP%TYPE DEFAULT NULL,
      id_prof_cancel_in IN SUPPLY_REQUEST.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      dt_cancel_in IN SUPPLY_REQUEST.DT_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN SUPPLY_REQUEST.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_cancel_reason_in IN SUPPLY_REQUEST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      notes_in IN SUPPLY_REQUEST.NOTES%TYPE DEFAULT NULL,
      create_user_in IN SUPPLY_REQUEST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN SUPPLY_REQUEST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN SUPPLY_REQUEST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN SUPPLY_REQUEST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN SUPPLY_REQUEST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN SUPPLY_REQUEST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
      );

   PROCEDURE upd (
      rec_in IN SUPPLY_REQUEST%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      rec_in IN SUPPLY_REQUEST%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
      );

      PROCEDURE upd (
      col_in IN SUPPLY_REQUEST_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      col_in IN SUPPLY_REQUEST_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
      );





   -- Use Native Dynamic SQL increment a single NUMBER column
   -- for all rows specified by the dynamic WHERE clause
   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
   );









    -- Delete one row by primary key
   PROCEDURE del (
      id_supply_request_in IN SUPPLY_REQUEST.ID_SUPPLY_REQUEST%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

-- Delete one row by primary key
   PROCEDURE del (
      id_supply_request_in IN SUPPLY_REQUEST.ID_SUPPLY_REQUEST%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


   -- Delete all rows for primary key column ID_SUPPLY_REQUEST
   PROCEDURE del_ID_SUPPLY_REQUEST (
      id_supply_request_in IN SUPPLY_REQUEST.ID_SUPPLY_REQUEST%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_SUPPLY_REQUEST
   PROCEDURE del_ID_SUPPLY_REQUEST (
      id_supply_request_in IN SUPPLY_REQUEST.ID_SUPPLY_REQUEST%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );

   -- Delete all rows for this SRQ_CRS_FK foreign key value
   PROCEDURE del_SRQ_CRS_FK (
      id_cancel_reason_in IN SUPPLY_REQUEST.ID_CANCEL_REASON%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this SRQ_CRS_FK foreign key value
   PROCEDURE del_SRQ_CRS_FK (
      id_cancel_reason_in IN SUPPLY_REQUEST.ID_CANCEL_REASON%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this SRQ_EPI_FK foreign key value
   PROCEDURE del_SRQ_EPI_FK (
      id_episode_in IN SUPPLY_REQUEST.ID_EPISODE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this SRQ_EPI_FK foreign key value
   PROCEDURE del_SRQ_EPI_FK (
      id_episode_in IN SUPPLY_REQUEST.ID_EPISODE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this SRQ_PCA_FK foreign key value
   PROCEDURE del_SRQ_PCA_FK (
      id_prof_cancel_in IN SUPPLY_REQUEST.ID_PROF_CANCEL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this SRQ_PCA_FK foreign key value
   PROCEDURE del_SRQ_PCA_FK (
      id_prof_cancel_in IN SUPPLY_REQUEST.ID_PROF_CANCEL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this SRQ_PRF_FK foreign key value
   PROCEDURE del_SRQ_PRF_FK (
      id_professional_in IN SUPPLY_REQUEST.ID_PROFESSIONAL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this SRQ_PRF_FK foreign key value
   PROCEDURE del_SRQ_PRF_FK (
      id_professional_in IN SUPPLY_REQUEST.ID_PROFESSIONAL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this SRQ_RRQ_FK foreign key value
   PROCEDURE del_SRQ_RRQ_FK (
      id_room_req_in IN SUPPLY_REQUEST.ID_ROOM_REQ%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this SRQ_RRQ_FK foreign key value
   PROCEDURE del_SRQ_RRQ_FK (
      id_room_req_in IN SUPPLY_REQUEST.ID_ROOM_REQ%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );


      -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Initialize a record with default values for columns in the table.
   PROCEDURE initrec (
      supply_request_inout IN OUT SUPPLY_REQUEST%ROWTYPE
   );

   FUNCTION initrec RETURN SUPPLY_REQUEST%ROWTYPE;



   FUNCTION get_data_rowid(
        rows_in IN TABLE_VARCHAR
        ) RETURN SUPPLY_REQUEST_tc;


   FUNCTION get_data_rowid_pat(
        rows_in IN TABLE_VARCHAR
        ) RETURN SUPPLY_REQUEST_tc;

END TS_SUPPLY_REQUEST;
/

