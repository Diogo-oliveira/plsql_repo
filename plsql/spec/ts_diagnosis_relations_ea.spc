/*-- Last Change Revision: $Rev: 1290973 $*/
/*-- Last Change by: $Author: alexandre.santos $*/
/*-- Date of last change: $Date: 2012-05-07 11:31:32 +0100 (seg, 07 mai 2012) $*/
CREATE OR REPLACE PACKAGE TS_DIAGNOSIS_RELATIONS_EA
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Mar√ßo 19, 2012 10:48:21
| Created By: ALERT
*/
IS

  -- Collection of %ROWTYPE records based on "DIAGNOSIS_RELATIONS_EA"
     TYPE DIAGNOSIS_RELATIONS_EA_tc IS TABLE OF DIAGNOSIS_RELATIONS_EA%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE diagnosis_relations_ea_ntt IS TABLE OF DIAGNOSIS_RELATIONS_EA%ROWTYPE;
     TYPE diagnosis_relations_ea_vat IS VARRAY(100) OF DIAGNOSIS_RELATIONS_EA%ROWTYPE;

  -- Same type structure, with a static name.
     TYPE aat IS TABLE OF DIAGNOSIS_RELATIONS_EA%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE ntt IS TABLE OF DIAGNOSIS_RELATIONS_EA%ROWTYPE;
     TYPE vat IS VARRAY(100) OF DIAGNOSIS_RELATIONS_EA%ROWTYPE;

   -- Column Collection based on column "ID_CONCEPT_VERSION_1"
   TYPE ID_CONCEPT_VERSION_1_cc IS TABLE OF DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_1%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_CNCPT_VRS_INST_OWN1"
   TYPE ID_CNCPT_VRS_INST_OWN1_cc IS TABLE OF DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN1%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CONCEPT_TYPE_INT_NAME1"
   TYPE CONCEPT_TYPE_INT_NAME1_cc IS TABLE OF DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME1%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_CONCEPT_VERSION_2"
   TYPE ID_CONCEPT_VERSION_2_cc IS TABLE OF DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_2%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_CNCPT_VRS_INST_OWN2"
   TYPE ID_CNCPT_VRS_INST_OWN2_cc IS TABLE OF DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN2%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CONCEPT_TYPE_INT_NAME2"
   TYPE CONCEPT_TYPE_INT_NAME2_cc IS TABLE OF DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME2%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CNCPT_REL_TYPE_INT_NAME"
   TYPE CNCPT_REL_TYPE_INT_NAME_cc IS TABLE OF DIAGNOSIS_RELATIONS_EA.CNCPT_REL_TYPE_INT_NAME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "RANK"
   TYPE RANK_cc IS TABLE OF DIAGNOSIS_RELATIONS_EA.RANK%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_DEFAULT"
   TYPE FLG_DEFAULT_cc IS TABLE OF DIAGNOSIS_RELATIONS_EA.FLG_DEFAULT%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_INSTITUTION"
   TYPE ID_INSTITUTION_cc IS TABLE OF DIAGNOSIS_RELATIONS_EA.ID_INSTITUTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_SOFTWARE"
   TYPE ID_SOFTWARE_cc IS TABLE OF DIAGNOSIS_RELATIONS_EA.ID_SOFTWARE%TYPE INDEX BY BINARY_INTEGER;

   -- Insert one row, providing primary key if present
   PROCEDURE ins (
      id_concept_version_1_in IN DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_1%TYPE,
      id_cncpt_vrs_inst_own1_in IN DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN1%TYPE,
      concept_type_int_name1_in IN DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME1%TYPE,
      id_concept_version_2_in IN DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_2%TYPE,
      id_cncpt_vrs_inst_own2_in IN DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN2%TYPE,
      concept_type_int_name2_in IN DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME2%TYPE,
      cncpt_rel_type_int_name_in IN DIAGNOSIS_RELATIONS_EA.CNCPT_REL_TYPE_INT_NAME%TYPE,
      id_institution_in IN DIAGNOSIS_RELATIONS_EA.ID_INSTITUTION%TYPE,
      id_software_in IN DIAGNOSIS_RELATIONS_EA.ID_SOFTWARE%TYPE
      ,
      rank_in IN DIAGNOSIS_RELATIONS_EA.RANK%TYPE DEFAULT NULL,
      flg_default_in IN DIAGNOSIS_RELATIONS_EA.FLG_DEFAULT%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_concept_version_1_in IN DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_1%TYPE,
      id_cncpt_vrs_inst_own1_in IN DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN1%TYPE,
      concept_type_int_name1_in IN DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME1%TYPE,
      id_concept_version_2_in IN DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_2%TYPE,
      id_cncpt_vrs_inst_own2_in IN DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN2%TYPE,
      concept_type_int_name2_in IN DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME2%TYPE,
      cncpt_rel_type_int_name_in IN DIAGNOSIS_RELATIONS_EA.CNCPT_REL_TYPE_INT_NAME%TYPE,
      id_institution_in IN DIAGNOSIS_RELATIONS_EA.ID_INSTITUTION%TYPE,
      id_software_in IN DIAGNOSIS_RELATIONS_EA.ID_SOFTWARE%TYPE
      ,
      rank_in IN DIAGNOSIS_RELATIONS_EA.RANK%TYPE DEFAULT NULL,
      flg_default_in IN DIAGNOSIS_RELATIONS_EA.FLG_DEFAULT%TYPE DEFAULT NULL
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );


   -- Insert a row based on a record.
   PROCEDURE ins (
      rec_in IN DIAGNOSIS_RELATIONS_EA%ROWTYPE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rec_in IN DIAGNOSIS_RELATIONS_EA%ROWTYPE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Insert a collection of rows using FORALL; all primary key values
   -- must have already been generated, or are handled in triggers.
   PROCEDURE ins (
      rows_in IN DIAGNOSIS_RELATIONS_EA_tc
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rows_in IN DIAGNOSIS_RELATIONS_EA_tc
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Update any/all columns by primary key. If you pass NULL, then
   -- the current column value is set to itself. If you need a more
   -- selected UPDATE then use one of the onecol procedures below.

  PROCEDURE upd (
      id_concept_version_1_in IN DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_1%TYPE,
      id_cncpt_vrs_inst_own1_in IN DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN1%TYPE,
      concept_type_int_name1_in IN DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME1%TYPE,
      id_concept_version_2_in IN DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_2%TYPE,
      id_cncpt_vrs_inst_own2_in IN DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN2%TYPE,
      concept_type_int_name2_in IN DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME2%TYPE,
      cncpt_rel_type_int_name_in IN DIAGNOSIS_RELATIONS_EA.CNCPT_REL_TYPE_INT_NAME%TYPE,
      id_institution_in IN DIAGNOSIS_RELATIONS_EA.ID_INSTITUTION%TYPE,
      id_software_in IN DIAGNOSIS_RELATIONS_EA.ID_SOFTWARE%TYPE,
      rank_in IN DIAGNOSIS_RELATIONS_EA.RANK%TYPE DEFAULT NULL,
      RANK_nin IN BOOLEAN := TRUE,
      flg_default_in IN DIAGNOSIS_RELATIONS_EA.FLG_DEFAULT%TYPE DEFAULT NULL,
      FLG_DEFAULT_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


       PROCEDURE upd (
      id_concept_version_1_in IN DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_1%TYPE,
      id_cncpt_vrs_inst_own1_in IN DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN1%TYPE,
      concept_type_int_name1_in IN DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME1%TYPE,
      id_concept_version_2_in IN DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_2%TYPE,
      id_cncpt_vrs_inst_own2_in IN DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN2%TYPE,
      concept_type_int_name2_in IN DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME2%TYPE,
      cncpt_rel_type_int_name_in IN DIAGNOSIS_RELATIONS_EA.CNCPT_REL_TYPE_INT_NAME%TYPE,
      id_institution_in IN DIAGNOSIS_RELATIONS_EA.ID_INSTITUTION%TYPE,
      id_software_in IN DIAGNOSIS_RELATIONS_EA.ID_SOFTWARE%TYPE,
      rank_in IN DIAGNOSIS_RELATIONS_EA.RANK%TYPE DEFAULT NULL,
      RANK_nin IN BOOLEAN := TRUE,
      flg_default_in IN DIAGNOSIS_RELATIONS_EA.FLG_DEFAULT%TYPE DEFAULT NULL,
      FLG_DEFAULT_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
      );



      PROCEDURE upd (
      rank_in IN DIAGNOSIS_RELATIONS_EA.RANK%TYPE DEFAULT NULL,
      RANK_nin IN BOOLEAN := TRUE,
      flg_default_in IN DIAGNOSIS_RELATIONS_EA.FLG_DEFAULT%TYPE DEFAULT NULL,
      FLG_DEFAULT_nin IN BOOLEAN := TRUE,
    where_in varchar2,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


      PROCEDURE upd (
      rank_in IN DIAGNOSIS_RELATIONS_EA.RANK%TYPE DEFAULT NULL,
      RANK_nin IN BOOLEAN := TRUE,
      flg_default_in IN DIAGNOSIS_RELATIONS_EA.FLG_DEFAULT%TYPE DEFAULT NULL,
      FLG_DEFAULT_nin IN BOOLEAN := TRUE,
    where_in varchar2,
     handle_error_in IN BOOLEAN := TRUE
      );



   PROCEDURE upd_ins (
      id_concept_version_1_in IN DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_1%TYPE,
      id_cncpt_vrs_inst_own1_in IN DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN1%TYPE,
      concept_type_int_name1_in IN DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME1%TYPE,
      id_concept_version_2_in IN DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_2%TYPE,
      id_cncpt_vrs_inst_own2_in IN DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN2%TYPE,
      concept_type_int_name2_in IN DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME2%TYPE,
      cncpt_rel_type_int_name_in IN DIAGNOSIS_RELATIONS_EA.CNCPT_REL_TYPE_INT_NAME%TYPE,
      id_institution_in IN DIAGNOSIS_RELATIONS_EA.ID_INSTITUTION%TYPE,
      id_software_in IN DIAGNOSIS_RELATIONS_EA.ID_SOFTWARE%TYPE,
      rank_in IN DIAGNOSIS_RELATIONS_EA.RANK%TYPE DEFAULT NULL,
      flg_default_in IN DIAGNOSIS_RELATIONS_EA.FLG_DEFAULT%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

      PROCEDURE upd_ins (
      id_concept_version_1_in IN DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_1%TYPE,
      id_cncpt_vrs_inst_own1_in IN DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN1%TYPE,
      concept_type_int_name1_in IN DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME1%TYPE,
      id_concept_version_2_in IN DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_2%TYPE,
      id_cncpt_vrs_inst_own2_in IN DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN2%TYPE,
      concept_type_int_name2_in IN DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME2%TYPE,
      cncpt_rel_type_int_name_in IN DIAGNOSIS_RELATIONS_EA.CNCPT_REL_TYPE_INT_NAME%TYPE,
      id_institution_in IN DIAGNOSIS_RELATIONS_EA.ID_INSTITUTION%TYPE,
      id_software_in IN DIAGNOSIS_RELATIONS_EA.ID_SOFTWARE%TYPE,
      rank_in IN DIAGNOSIS_RELATIONS_EA.RANK%TYPE DEFAULT NULL,
      flg_default_in IN DIAGNOSIS_RELATIONS_EA.FLG_DEFAULT%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
      );

   PROCEDURE upd (
      rec_in IN DIAGNOSIS_RELATIONS_EA%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      rec_in IN DIAGNOSIS_RELATIONS_EA%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
      );

      PROCEDURE upd (
      col_in IN DIAGNOSIS_RELATIONS_EA_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      col_in IN DIAGNOSIS_RELATIONS_EA_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
      );





   -- Use Native Dynamic SQL increment a single NUMBER column
   -- for all rows specified by the dynamic WHERE clause
   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
   );









    -- Delete one row by primary key
   PROCEDURE del (
      id_concept_version_1_in IN DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_1%TYPE,
      id_cncpt_vrs_inst_own1_in IN DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN1%TYPE,
      concept_type_int_name1_in IN DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME1%TYPE,
      id_concept_version_2_in IN DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_2%TYPE,
      id_cncpt_vrs_inst_own2_in IN DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN2%TYPE,
      concept_type_int_name2_in IN DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME2%TYPE,
      cncpt_rel_type_int_name_in IN DIAGNOSIS_RELATIONS_EA.CNCPT_REL_TYPE_INT_NAME%TYPE,
      id_institution_in IN DIAGNOSIS_RELATIONS_EA.ID_INSTITUTION%TYPE,
      id_software_in IN DIAGNOSIS_RELATIONS_EA.ID_SOFTWARE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

-- Delete one row by primary key
   PROCEDURE del (
      id_concept_version_1_in IN DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_1%TYPE,
      id_cncpt_vrs_inst_own1_in IN DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN1%TYPE,
      concept_type_int_name1_in IN DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME1%TYPE,
      id_concept_version_2_in IN DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_2%TYPE,
      id_cncpt_vrs_inst_own2_in IN DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN2%TYPE,
      concept_type_int_name2_in IN DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME2%TYPE,
      cncpt_rel_type_int_name_in IN DIAGNOSIS_RELATIONS_EA.CNCPT_REL_TYPE_INT_NAME%TYPE,
      id_institution_in IN DIAGNOSIS_RELATIONS_EA.ID_INSTITUTION%TYPE,
      id_software_in IN DIAGNOSIS_RELATIONS_EA.ID_SOFTWARE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


   -- Delete all rows for primary key column ID_CONCEPT_VERSION_1
   PROCEDURE del_ID_CONCEPT_VERSION_1 (
      id_concept_version_1_in IN DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_1%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_CONCEPT_VERSION_1
   PROCEDURE del_ID_CONCEPT_VERSION_1 (
      id_concept_version_1_in IN DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_1%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );


   -- Delete all rows for primary key column ID_CNCPT_VRS_INST_OWN1
   PROCEDURE del_ID_CNCPT_VRS_INST_OWN1 (
      id_cncpt_vrs_inst_own1_in IN DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN1%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_CNCPT_VRS_INST_OWN1
   PROCEDURE del_ID_CNCPT_VRS_INST_OWN1 (
      id_cncpt_vrs_inst_own1_in IN DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN1%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );


   -- Delete all rows for primary key column CONCEPT_TYPE_INT_NAME1
   PROCEDURE del_CONCEPT_TYPE_INT_NAME1 (
      concept_type_int_name1_in IN DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME1%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column CONCEPT_TYPE_INT_NAME1
   PROCEDURE del_CONCEPT_TYPE_INT_NAME1 (
      concept_type_int_name1_in IN DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME1%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );


   -- Delete all rows for primary key column ID_CONCEPT_VERSION_2
   PROCEDURE del_ID_CONCEPT_VERSION_2 (
      id_concept_version_2_in IN DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_2%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_CONCEPT_VERSION_2
   PROCEDURE del_ID_CONCEPT_VERSION_2 (
      id_concept_version_2_in IN DIAGNOSIS_RELATIONS_EA.ID_CONCEPT_VERSION_2%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );


   -- Delete all rows for primary key column ID_CNCPT_VRS_INST_OWN2
   PROCEDURE del_ID_CNCPT_VRS_INST_OWN2 (
      id_cncpt_vrs_inst_own2_in IN DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN2%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_CNCPT_VRS_INST_OWN2
   PROCEDURE del_ID_CNCPT_VRS_INST_OWN2 (
      id_cncpt_vrs_inst_own2_in IN DIAGNOSIS_RELATIONS_EA.ID_CNCPT_VRS_INST_OWN2%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );


   -- Delete all rows for primary key column CONCEPT_TYPE_INT_NAME2
   PROCEDURE del_CONCEPT_TYPE_INT_NAME2 (
      concept_type_int_name2_in IN DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME2%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column CONCEPT_TYPE_INT_NAME2
   PROCEDURE del_CONCEPT_TYPE_INT_NAME2 (
      concept_type_int_name2_in IN DIAGNOSIS_RELATIONS_EA.CONCEPT_TYPE_INT_NAME2%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );


   -- Delete all rows for primary key column CNCPT_REL_TYPE_INT_NAME
   PROCEDURE del_CNCPT_REL_TYPE_INT_NAME (
      cncpt_rel_type_int_name_in IN DIAGNOSIS_RELATIONS_EA.CNCPT_REL_TYPE_INT_NAME%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column CNCPT_REL_TYPE_INT_NAME
   PROCEDURE del_CNCPT_REL_TYPE_INT_NAME (
      cncpt_rel_type_int_name_in IN DIAGNOSIS_RELATIONS_EA.CNCPT_REL_TYPE_INT_NAME%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );


   -- Delete all rows for primary key column ID_INSTITUTION
   PROCEDURE del_ID_INSTITUTION (
      id_institution_in IN DIAGNOSIS_RELATIONS_EA.ID_INSTITUTION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_INSTITUTION
   PROCEDURE del_ID_INSTITUTION (
      id_institution_in IN DIAGNOSIS_RELATIONS_EA.ID_INSTITUTION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );


   -- Delete all rows for primary key column ID_SOFTWARE
   PROCEDURE del_ID_SOFTWARE (
      id_software_in IN DIAGNOSIS_RELATIONS_EA.ID_SOFTWARE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_SOFTWARE
   PROCEDURE del_ID_SOFTWARE (
      id_software_in IN DIAGNOSIS_RELATIONS_EA.ID_SOFTWARE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );

    -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );


      -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Initialize a record with default values for columns in the table.
   PROCEDURE initrec (
      diagnosis_relations_ea_inout IN OUT DIAGNOSIS_RELATIONS_EA%ROWTYPE
   );

   FUNCTION initrec RETURN DIAGNOSIS_RELATIONS_EA%ROWTYPE;



   FUNCTION get_data_rowid(
        rows_in IN TABLE_VARCHAR
        ) RETURN DIAGNOSIS_RELATIONS_EA_tc;


   FUNCTION get_data_rowid_pat(
        rows_in IN TABLE_VARCHAR
        ) RETURN DIAGNOSIS_RELATIONS_EA_tc;

END TS_DIAGNOSIS_RELATIONS_EA;
/
