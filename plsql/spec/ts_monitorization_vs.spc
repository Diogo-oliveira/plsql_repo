/*-- Last Change Revision: $Rev: 2029247 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:50:36 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE ts_monitorization_vs
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Mar√ßo 3, 2011 15:14:34
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on "MONITORIZATION_VS"
    TYPE monitorization_vs_tc IS TABLE OF monitorization_vs%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE monitorization_vs_ntt IS TABLE OF monitorization_vs%ROWTYPE;
    TYPE monitorization_vs_vat IS VARRAY(100) OF monitorization_vs%ROWTYPE;

    -- Same type structure, with a static name.
    TYPE aat IS TABLE OF monitorization_vs%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE ntt IS TABLE OF monitorization_vs%ROWTYPE;
    TYPE vat IS VARRAY(100) OF monitorization_vs%ROWTYPE;

    -- Column Collection based on column "ID_MONITORIZATION_VS"
    TYPE id_monitorization_vs_cc IS TABLE OF monitorization_vs.id_monitorization_vs%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_MONITORIZATION"
    TYPE id_monitorization_cc IS TABLE OF monitorization_vs.id_monitorization%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_VITAL_SIGN"
    TYPE id_vital_sign_cc IS TABLE OF monitorization_vs.id_vital_sign%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "NOTES"
    TYPE notes_cc IS TABLE OF monitorization_vs.notes%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROF_CANCEL"
    TYPE id_prof_cancel_cc IS TABLE OF monitorization_vs.id_prof_cancel%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "NOTES_CANCEL"
    TYPE notes_cancel_cc IS TABLE OF monitorization_vs.notes_cancel%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_STATUS"
    TYPE flg_status_cc IS TABLE OF monitorization_vs.flg_status%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_MONITORIZATION_VS_TSTZ"
    TYPE dt_monitorization_vs_tstz_cc IS TABLE OF monitorization_vs.dt_monitorization_vs_tstz%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_CANCEL_TSTZ"
    TYPE dt_cancel_tstz_cc IS TABLE OF monitorization_vs.dt_cancel_tstz%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_ORDER"
    TYPE dt_order_cc IS TABLE OF monitorization_vs.dt_order%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROF_ORDER"
    TYPE id_prof_order_cc IS TABLE OF monitorization_vs.id_prof_order%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_ORDER_TYPE"
    TYPE id_order_type_cc IS TABLE OF monitorization_vs.id_order_type%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_CO_SIGN"
    TYPE flg_co_sign_cc IS TABLE OF monitorization_vs.flg_co_sign%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_CO_SIGN"
    TYPE dt_co_sign_cc IS TABLE OF monitorization_vs.dt_co_sign%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "NOTES_CO_SIGN"
    TYPE notes_co_sign_cc IS TABLE OF monitorization_vs.notes_co_sign%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROF_CO_SIGN"
    TYPE id_prof_co_sign_cc IS TABLE OF monitorization_vs.id_prof_co_sign%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_USER"
    TYPE create_user_cc IS TABLE OF monitorization_vs.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_TIME"
    TYPE create_time_cc IS TABLE OF monitorization_vs.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_INSTITUTION"
    TYPE create_institution_cc IS TABLE OF monitorization_vs.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_USER"
    TYPE update_user_cc IS TABLE OF monitorization_vs.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_TIME"
    TYPE update_time_cc IS TABLE OF monitorization_vs.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_INSTITUTION"
    TYPE update_institution_cc IS TABLE OF monitorization_vs.update_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_STATUS_PREV"
    TYPE flg_status_prev_cc IS TABLE OF monitorization_vs.flg_status_prev%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_CANCEL_REASON"
    TYPE id_cancel_reason_cc IS TABLE OF monitorization_vs.id_cancel_reason%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present
    PROCEDURE ins
    (
        id_monitorization_vs_in      IN monitorization_vs.id_monitorization_vs%TYPE,
        id_monitorization_in         IN monitorization_vs.id_monitorization%TYPE DEFAULT NULL,
        id_vital_sign_in             IN monitorization_vs.id_vital_sign%TYPE DEFAULT NULL,
        notes_in                     IN monitorization_vs.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN monitorization_vs.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN monitorization_vs.notes_cancel%TYPE DEFAULT NULL,
        flg_status_in                IN monitorization_vs.flg_status%TYPE DEFAULT NULL,
        dt_monitorization_vs_tstz_in IN monitorization_vs.dt_monitorization_vs_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN monitorization_vs.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_order_in                  IN monitorization_vs.dt_order%TYPE DEFAULT NULL,
        id_prof_order_in             IN monitorization_vs.id_prof_order%TYPE DEFAULT NULL,
        id_order_type_in             IN monitorization_vs.id_order_type%TYPE DEFAULT NULL,
        flg_co_sign_in               IN monitorization_vs.flg_co_sign%TYPE DEFAULT 'N',
        dt_co_sign_in                IN monitorization_vs.dt_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_in             IN monitorization_vs.notes_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_in           IN monitorization_vs.id_prof_co_sign%TYPE DEFAULT NULL,
        create_user_in               IN monitorization_vs.create_user%TYPE DEFAULT NULL,
        create_time_in               IN monitorization_vs.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN monitorization_vs.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN monitorization_vs.update_user%TYPE DEFAULT NULL,
        update_time_in               IN monitorization_vs.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN monitorization_vs.update_institution%TYPE DEFAULT NULL,
        flg_status_prev_in           IN monitorization_vs.flg_status_prev%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN monitorization_vs.id_cancel_reason%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_monitorization_vs_in      IN monitorization_vs.id_monitorization_vs%TYPE,
        id_monitorization_in         IN monitorization_vs.id_monitorization%TYPE DEFAULT NULL,
        id_vital_sign_in             IN monitorization_vs.id_vital_sign%TYPE DEFAULT NULL,
        notes_in                     IN monitorization_vs.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN monitorization_vs.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN monitorization_vs.notes_cancel%TYPE DEFAULT NULL,
        flg_status_in                IN monitorization_vs.flg_status%TYPE DEFAULT NULL,
        dt_monitorization_vs_tstz_in IN monitorization_vs.dt_monitorization_vs_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN monitorization_vs.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_order_in                  IN monitorization_vs.dt_order%TYPE DEFAULT NULL,
        id_prof_order_in             IN monitorization_vs.id_prof_order%TYPE DEFAULT NULL,
        id_order_type_in             IN monitorization_vs.id_order_type%TYPE DEFAULT NULL,
        flg_co_sign_in               IN monitorization_vs.flg_co_sign%TYPE DEFAULT 'N',
        dt_co_sign_in                IN monitorization_vs.dt_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_in             IN monitorization_vs.notes_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_in           IN monitorization_vs.id_prof_co_sign%TYPE DEFAULT NULL,
        create_user_in               IN monitorization_vs.create_user%TYPE DEFAULT NULL,
        create_time_in               IN monitorization_vs.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN monitorization_vs.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN monitorization_vs.update_user%TYPE DEFAULT NULL,
        update_time_in               IN monitorization_vs.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN monitorization_vs.update_institution%TYPE DEFAULT NULL,
        flg_status_prev_in           IN monitorization_vs.flg_status_prev%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN monitorization_vs.id_cancel_reason%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record.
    -- Specify whether or not a primary key value should be generated.
    PROCEDURE ins
    (
        rec_in          IN monitorization_vs%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rec_in          IN monitorization_vs%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers.
    PROCEDURE ins
    (
        rows_in         IN monitorization_vs_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rows_in         IN monitorization_vs_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Return next primary key value using the named sequence.
    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN monitorization_vs.id_monitorization_vs%TYPE;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_monitorization_in         IN monitorization_vs.id_monitorization%TYPE DEFAULT NULL,
        id_vital_sign_in             IN monitorization_vs.id_vital_sign%TYPE DEFAULT NULL,
        notes_in                     IN monitorization_vs.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN monitorization_vs.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN monitorization_vs.notes_cancel%TYPE DEFAULT NULL,
        flg_status_in                IN monitorization_vs.flg_status%TYPE DEFAULT NULL,
        dt_monitorization_vs_tstz_in IN monitorization_vs.dt_monitorization_vs_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN monitorization_vs.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_order_in                  IN monitorization_vs.dt_order%TYPE DEFAULT NULL,
        id_prof_order_in             IN monitorization_vs.id_prof_order%TYPE DEFAULT NULL,
        id_order_type_in             IN monitorization_vs.id_order_type%TYPE DEFAULT NULL,
        flg_co_sign_in               IN monitorization_vs.flg_co_sign%TYPE DEFAULT 'N',
        dt_co_sign_in                IN monitorization_vs.dt_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_in             IN monitorization_vs.notes_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_in           IN monitorization_vs.id_prof_co_sign%TYPE DEFAULT NULL,
        create_user_in               IN monitorization_vs.create_user%TYPE DEFAULT NULL,
        create_time_in               IN monitorization_vs.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN monitorization_vs.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN monitorization_vs.update_user%TYPE DEFAULT NULL,
        update_time_in               IN monitorization_vs.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN monitorization_vs.update_institution%TYPE DEFAULT NULL,
        flg_status_prev_in           IN monitorization_vs.flg_status_prev%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN monitorization_vs.id_cancel_reason%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_monitorization_in         IN monitorization_vs.id_monitorization%TYPE DEFAULT NULL,
        id_vital_sign_in             IN monitorization_vs.id_vital_sign%TYPE DEFAULT NULL,
        notes_in                     IN monitorization_vs.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN monitorization_vs.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN monitorization_vs.notes_cancel%TYPE DEFAULT NULL,
        flg_status_in                IN monitorization_vs.flg_status%TYPE DEFAULT NULL,
        dt_monitorization_vs_tstz_in IN monitorization_vs.dt_monitorization_vs_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN monitorization_vs.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_order_in                  IN monitorization_vs.dt_order%TYPE DEFAULT NULL,
        id_prof_order_in             IN monitorization_vs.id_prof_order%TYPE DEFAULT NULL,
        id_order_type_in             IN monitorization_vs.id_order_type%TYPE DEFAULT NULL,
        flg_co_sign_in               IN monitorization_vs.flg_co_sign%TYPE DEFAULT 'N',
        dt_co_sign_in                IN monitorization_vs.dt_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_in             IN monitorization_vs.notes_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_in           IN monitorization_vs.id_prof_co_sign%TYPE DEFAULT NULL,
        create_user_in               IN monitorization_vs.create_user%TYPE DEFAULT NULL,
        create_time_in               IN monitorization_vs.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN monitorization_vs.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN monitorization_vs.update_user%TYPE DEFAULT NULL,
        update_time_in               IN monitorization_vs.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN monitorization_vs.update_institution%TYPE DEFAULT NULL,
        flg_status_prev_in           IN monitorization_vs.flg_status_prev%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN monitorization_vs.id_cancel_reason%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_monitorization_in         IN monitorization_vs.id_monitorization%TYPE DEFAULT NULL,
        id_vital_sign_in             IN monitorization_vs.id_vital_sign%TYPE DEFAULT NULL,
        notes_in                     IN monitorization_vs.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN monitorization_vs.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN monitorization_vs.notes_cancel%TYPE DEFAULT NULL,
        flg_status_in                IN monitorization_vs.flg_status%TYPE DEFAULT NULL,
        dt_monitorization_vs_tstz_in IN monitorization_vs.dt_monitorization_vs_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN monitorization_vs.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_order_in                  IN monitorization_vs.dt_order%TYPE DEFAULT NULL,
        id_prof_order_in             IN monitorization_vs.id_prof_order%TYPE DEFAULT NULL,
        id_order_type_in             IN monitorization_vs.id_order_type%TYPE DEFAULT NULL,
        flg_co_sign_in               IN monitorization_vs.flg_co_sign%TYPE DEFAULT 'N',
        dt_co_sign_in                IN monitorization_vs.dt_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_in             IN monitorization_vs.notes_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_in           IN monitorization_vs.id_prof_co_sign%TYPE DEFAULT NULL,
        create_user_in               IN monitorization_vs.create_user%TYPE DEFAULT NULL,
        create_time_in               IN monitorization_vs.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN monitorization_vs.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN monitorization_vs.update_user%TYPE DEFAULT NULL,
        update_time_in               IN monitorization_vs.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN monitorization_vs.update_institution%TYPE DEFAULT NULL,
        flg_status_prev_in           IN monitorization_vs.flg_status_prev%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN monitorization_vs.id_cancel_reason%TYPE DEFAULT NULL,
        id_monitorization_vs_out     IN OUT monitorization_vs.id_monitorization_vs%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_monitorization_in         IN monitorization_vs.id_monitorization%TYPE DEFAULT NULL,
        id_vital_sign_in             IN monitorization_vs.id_vital_sign%TYPE DEFAULT NULL,
        notes_in                     IN monitorization_vs.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN monitorization_vs.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN monitorization_vs.notes_cancel%TYPE DEFAULT NULL,
        flg_status_in                IN monitorization_vs.flg_status%TYPE DEFAULT NULL,
        dt_monitorization_vs_tstz_in IN monitorization_vs.dt_monitorization_vs_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN monitorization_vs.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_order_in                  IN monitorization_vs.dt_order%TYPE DEFAULT NULL,
        id_prof_order_in             IN monitorization_vs.id_prof_order%TYPE DEFAULT NULL,
        id_order_type_in             IN monitorization_vs.id_order_type%TYPE DEFAULT NULL,
        flg_co_sign_in               IN monitorization_vs.flg_co_sign%TYPE DEFAULT 'N',
        dt_co_sign_in                IN monitorization_vs.dt_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_in             IN monitorization_vs.notes_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_in           IN monitorization_vs.id_prof_co_sign%TYPE DEFAULT NULL,
        create_user_in               IN monitorization_vs.create_user%TYPE DEFAULT NULL,
        create_time_in               IN monitorization_vs.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN monitorization_vs.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN monitorization_vs.update_user%TYPE DEFAULT NULL,
        update_time_in               IN monitorization_vs.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN monitorization_vs.update_institution%TYPE DEFAULT NULL,
        flg_status_prev_in           IN monitorization_vs.flg_status_prev%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN monitorization_vs.id_cancel_reason%TYPE DEFAULT NULL,
        id_monitorization_vs_out     IN OUT monitorization_vs.id_monitorization_vs%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_monitorization_in         IN monitorization_vs.id_monitorization%TYPE DEFAULT NULL,
        id_vital_sign_in             IN monitorization_vs.id_vital_sign%TYPE DEFAULT NULL,
        notes_in                     IN monitorization_vs.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN monitorization_vs.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN monitorization_vs.notes_cancel%TYPE DEFAULT NULL,
        flg_status_in                IN monitorization_vs.flg_status%TYPE DEFAULT NULL,
        dt_monitorization_vs_tstz_in IN monitorization_vs.dt_monitorization_vs_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN monitorization_vs.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_order_in                  IN monitorization_vs.dt_order%TYPE DEFAULT NULL,
        id_prof_order_in             IN monitorization_vs.id_prof_order%TYPE DEFAULT NULL,
        id_order_type_in             IN monitorization_vs.id_order_type%TYPE DEFAULT NULL,
        flg_co_sign_in               IN monitorization_vs.flg_co_sign%TYPE DEFAULT 'N',
        dt_co_sign_in                IN monitorization_vs.dt_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_in             IN monitorization_vs.notes_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_in           IN monitorization_vs.id_prof_co_sign%TYPE DEFAULT NULL,
        create_user_in               IN monitorization_vs.create_user%TYPE DEFAULT NULL,
        create_time_in               IN monitorization_vs.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN monitorization_vs.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN monitorization_vs.update_user%TYPE DEFAULT NULL,
        update_time_in               IN monitorization_vs.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN monitorization_vs.update_institution%TYPE DEFAULT NULL,
        flg_status_prev_in           IN monitorization_vs.flg_status_prev%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN monitorization_vs.id_cancel_reason%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN monitorization_vs.id_monitorization_vs%TYPE;

    FUNCTION ins
    (
        id_monitorization_in         IN monitorization_vs.id_monitorization%TYPE DEFAULT NULL,
        id_vital_sign_in             IN monitorization_vs.id_vital_sign%TYPE DEFAULT NULL,
        notes_in                     IN monitorization_vs.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN monitorization_vs.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN monitorization_vs.notes_cancel%TYPE DEFAULT NULL,
        flg_status_in                IN monitorization_vs.flg_status%TYPE DEFAULT NULL,
        dt_monitorization_vs_tstz_in IN monitorization_vs.dt_monitorization_vs_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN monitorization_vs.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_order_in                  IN monitorization_vs.dt_order%TYPE DEFAULT NULL,
        id_prof_order_in             IN monitorization_vs.id_prof_order%TYPE DEFAULT NULL,
        id_order_type_in             IN monitorization_vs.id_order_type%TYPE DEFAULT NULL,
        flg_co_sign_in               IN monitorization_vs.flg_co_sign%TYPE DEFAULT 'N',
        dt_co_sign_in                IN monitorization_vs.dt_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_in             IN monitorization_vs.notes_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_in           IN monitorization_vs.id_prof_co_sign%TYPE DEFAULT NULL,
        create_user_in               IN monitorization_vs.create_user%TYPE DEFAULT NULL,
        create_time_in               IN monitorization_vs.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN monitorization_vs.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN monitorization_vs.update_user%TYPE DEFAULT NULL,
        update_time_in               IN monitorization_vs.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN monitorization_vs.update_institution%TYPE DEFAULT NULL,
        flg_status_prev_in           IN monitorization_vs.flg_status_prev%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN monitorization_vs.id_cancel_reason%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN monitorization_vs.id_monitorization_vs%TYPE;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.

    PROCEDURE upd
    (
        id_monitorization_vs_in       IN monitorization_vs.id_monitorization_vs%TYPE,
        id_monitorization_in          IN monitorization_vs.id_monitorization%TYPE DEFAULT NULL,
        id_monitorization_nin         IN BOOLEAN := TRUE,
        id_vital_sign_in              IN monitorization_vs.id_vital_sign%TYPE DEFAULT NULL,
        id_vital_sign_nin             IN BOOLEAN := TRUE,
        notes_in                      IN monitorization_vs.notes%TYPE DEFAULT NULL,
        notes_nin                     IN BOOLEAN := TRUE,
        id_prof_cancel_in             IN monitorization_vs.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin            IN BOOLEAN := TRUE,
        notes_cancel_in               IN monitorization_vs.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin              IN BOOLEAN := TRUE,
        flg_status_in                 IN monitorization_vs.flg_status%TYPE DEFAULT NULL,
        flg_status_nin                IN BOOLEAN := TRUE,
        dt_monitorization_vs_tstz_in  IN monitorization_vs.dt_monitorization_vs_tstz%TYPE DEFAULT NULL,
        dt_monitorization_vs_tstz_nin IN BOOLEAN := TRUE,
        dt_cancel_tstz_in             IN monitorization_vs.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin            IN BOOLEAN := TRUE,
        dt_order_in                   IN monitorization_vs.dt_order%TYPE DEFAULT NULL,
        dt_order_nin                  IN BOOLEAN := TRUE,
        id_prof_order_in              IN monitorization_vs.id_prof_order%TYPE DEFAULT NULL,
        id_prof_order_nin             IN BOOLEAN := TRUE,
        id_order_type_in              IN monitorization_vs.id_order_type%TYPE DEFAULT NULL,
        id_order_type_nin             IN BOOLEAN := TRUE,
        flg_co_sign_in                IN monitorization_vs.flg_co_sign%TYPE DEFAULT NULL,
        flg_co_sign_nin               IN BOOLEAN := TRUE,
        dt_co_sign_in                 IN monitorization_vs.dt_co_sign%TYPE DEFAULT NULL,
        dt_co_sign_nin                IN BOOLEAN := TRUE,
        notes_co_sign_in              IN monitorization_vs.notes_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_nin             IN BOOLEAN := TRUE,
        id_prof_co_sign_in            IN monitorization_vs.id_prof_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_nin           IN BOOLEAN := TRUE,
        create_user_in                IN monitorization_vs.create_user%TYPE DEFAULT NULL,
        create_user_nin               IN BOOLEAN := TRUE,
        create_time_in                IN monitorization_vs.create_time%TYPE DEFAULT NULL,
        create_time_nin               IN BOOLEAN := TRUE,
        create_institution_in         IN monitorization_vs.create_institution%TYPE DEFAULT NULL,
        create_institution_nin        IN BOOLEAN := TRUE,
        update_user_in                IN monitorization_vs.update_user%TYPE DEFAULT NULL,
        update_user_nin               IN BOOLEAN := TRUE,
        update_time_in                IN monitorization_vs.update_time%TYPE DEFAULT NULL,
        update_time_nin               IN BOOLEAN := TRUE,
        update_institution_in         IN monitorization_vs.update_institution%TYPE DEFAULT NULL,
        update_institution_nin        IN BOOLEAN := TRUE,
        flg_status_prev_in            IN monitorization_vs.flg_status_prev%TYPE DEFAULT NULL,
        flg_status_prev_nin           IN BOOLEAN := TRUE,
        id_cancel_reason_in           IN monitorization_vs.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin          IN BOOLEAN := TRUE,
        handle_error_in               IN BOOLEAN := TRUE,
        rows_out                      IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_monitorization_vs_in       IN monitorization_vs.id_monitorization_vs%TYPE,
        id_monitorization_in          IN monitorization_vs.id_monitorization%TYPE DEFAULT NULL,
        id_monitorization_nin         IN BOOLEAN := TRUE,
        id_vital_sign_in              IN monitorization_vs.id_vital_sign%TYPE DEFAULT NULL,
        id_vital_sign_nin             IN BOOLEAN := TRUE,
        notes_in                      IN monitorization_vs.notes%TYPE DEFAULT NULL,
        notes_nin                     IN BOOLEAN := TRUE,
        id_prof_cancel_in             IN monitorization_vs.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin            IN BOOLEAN := TRUE,
        notes_cancel_in               IN monitorization_vs.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin              IN BOOLEAN := TRUE,
        flg_status_in                 IN monitorization_vs.flg_status%TYPE DEFAULT NULL,
        flg_status_nin                IN BOOLEAN := TRUE,
        dt_monitorization_vs_tstz_in  IN monitorization_vs.dt_monitorization_vs_tstz%TYPE DEFAULT NULL,
        dt_monitorization_vs_tstz_nin IN BOOLEAN := TRUE,
        dt_cancel_tstz_in             IN monitorization_vs.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin            IN BOOLEAN := TRUE,
        dt_order_in                   IN monitorization_vs.dt_order%TYPE DEFAULT NULL,
        dt_order_nin                  IN BOOLEAN := TRUE,
        id_prof_order_in              IN monitorization_vs.id_prof_order%TYPE DEFAULT NULL,
        id_prof_order_nin             IN BOOLEAN := TRUE,
        id_order_type_in              IN monitorization_vs.id_order_type%TYPE DEFAULT NULL,
        id_order_type_nin             IN BOOLEAN := TRUE,
        flg_co_sign_in                IN monitorization_vs.flg_co_sign%TYPE DEFAULT NULL,
        flg_co_sign_nin               IN BOOLEAN := TRUE,
        dt_co_sign_in                 IN monitorization_vs.dt_co_sign%TYPE DEFAULT NULL,
        dt_co_sign_nin                IN BOOLEAN := TRUE,
        notes_co_sign_in              IN monitorization_vs.notes_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_nin             IN BOOLEAN := TRUE,
        id_prof_co_sign_in            IN monitorization_vs.id_prof_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_nin           IN BOOLEAN := TRUE,
        create_user_in                IN monitorization_vs.create_user%TYPE DEFAULT NULL,
        create_user_nin               IN BOOLEAN := TRUE,
        create_time_in                IN monitorization_vs.create_time%TYPE DEFAULT NULL,
        create_time_nin               IN BOOLEAN := TRUE,
        create_institution_in         IN monitorization_vs.create_institution%TYPE DEFAULT NULL,
        create_institution_nin        IN BOOLEAN := TRUE,
        update_user_in                IN monitorization_vs.update_user%TYPE DEFAULT NULL,
        update_user_nin               IN BOOLEAN := TRUE,
        update_time_in                IN monitorization_vs.update_time%TYPE DEFAULT NULL,
        update_time_nin               IN BOOLEAN := TRUE,
        update_institution_in         IN monitorization_vs.update_institution%TYPE DEFAULT NULL,
        update_institution_nin        IN BOOLEAN := TRUE,
        flg_status_prev_in            IN monitorization_vs.flg_status_prev%TYPE DEFAULT NULL,
        flg_status_prev_nin           IN BOOLEAN := TRUE,
        id_cancel_reason_in           IN monitorization_vs.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin          IN BOOLEAN := TRUE,
        handle_error_in               IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        id_monitorization_in          IN monitorization_vs.id_monitorization%TYPE DEFAULT NULL,
        id_monitorization_nin         IN BOOLEAN := TRUE,
        id_vital_sign_in              IN monitorization_vs.id_vital_sign%TYPE DEFAULT NULL,
        id_vital_sign_nin             IN BOOLEAN := TRUE,
        notes_in                      IN monitorization_vs.notes%TYPE DEFAULT NULL,
        notes_nin                     IN BOOLEAN := TRUE,
        id_prof_cancel_in             IN monitorization_vs.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin            IN BOOLEAN := TRUE,
        notes_cancel_in               IN monitorization_vs.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin              IN BOOLEAN := TRUE,
        flg_status_in                 IN monitorization_vs.flg_status%TYPE DEFAULT NULL,
        flg_status_nin                IN BOOLEAN := TRUE,
        dt_monitorization_vs_tstz_in  IN monitorization_vs.dt_monitorization_vs_tstz%TYPE DEFAULT NULL,
        dt_monitorization_vs_tstz_nin IN BOOLEAN := TRUE,
        dt_cancel_tstz_in             IN monitorization_vs.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin            IN BOOLEAN := TRUE,
        dt_order_in                   IN monitorization_vs.dt_order%TYPE DEFAULT NULL,
        dt_order_nin                  IN BOOLEAN := TRUE,
        id_prof_order_in              IN monitorization_vs.id_prof_order%TYPE DEFAULT NULL,
        id_prof_order_nin             IN BOOLEAN := TRUE,
        id_order_type_in              IN monitorization_vs.id_order_type%TYPE DEFAULT NULL,
        id_order_type_nin             IN BOOLEAN := TRUE,
        flg_co_sign_in                IN monitorization_vs.flg_co_sign%TYPE DEFAULT NULL,
        flg_co_sign_nin               IN BOOLEAN := TRUE,
        dt_co_sign_in                 IN monitorization_vs.dt_co_sign%TYPE DEFAULT NULL,
        dt_co_sign_nin                IN BOOLEAN := TRUE,
        notes_co_sign_in              IN monitorization_vs.notes_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_nin             IN BOOLEAN := TRUE,
        id_prof_co_sign_in            IN monitorization_vs.id_prof_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_nin           IN BOOLEAN := TRUE,
        create_user_in                IN monitorization_vs.create_user%TYPE DEFAULT NULL,
        create_user_nin               IN BOOLEAN := TRUE,
        create_time_in                IN monitorization_vs.create_time%TYPE DEFAULT NULL,
        create_time_nin               IN BOOLEAN := TRUE,
        create_institution_in         IN monitorization_vs.create_institution%TYPE DEFAULT NULL,
        create_institution_nin        IN BOOLEAN := TRUE,
        update_user_in                IN monitorization_vs.update_user%TYPE DEFAULT NULL,
        update_user_nin               IN BOOLEAN := TRUE,
        update_time_in                IN monitorization_vs.update_time%TYPE DEFAULT NULL,
        update_time_nin               IN BOOLEAN := TRUE,
        update_institution_in         IN monitorization_vs.update_institution%TYPE DEFAULT NULL,
        update_institution_nin        IN BOOLEAN := TRUE,
        flg_status_prev_in            IN monitorization_vs.flg_status_prev%TYPE DEFAULT NULL,
        flg_status_prev_nin           IN BOOLEAN := TRUE,
        id_cancel_reason_in           IN monitorization_vs.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin          IN BOOLEAN := TRUE,
        where_in                      VARCHAR2 DEFAULT NULL,
        handle_error_in               IN BOOLEAN := TRUE,
        rows_out                      IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_monitorization_in          IN monitorization_vs.id_monitorization%TYPE DEFAULT NULL,
        id_monitorization_nin         IN BOOLEAN := TRUE,
        id_vital_sign_in              IN monitorization_vs.id_vital_sign%TYPE DEFAULT NULL,
        id_vital_sign_nin             IN BOOLEAN := TRUE,
        notes_in                      IN monitorization_vs.notes%TYPE DEFAULT NULL,
        notes_nin                     IN BOOLEAN := TRUE,
        id_prof_cancel_in             IN monitorization_vs.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin            IN BOOLEAN := TRUE,
        notes_cancel_in               IN monitorization_vs.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin              IN BOOLEAN := TRUE,
        flg_status_in                 IN monitorization_vs.flg_status%TYPE DEFAULT NULL,
        flg_status_nin                IN BOOLEAN := TRUE,
        dt_monitorization_vs_tstz_in  IN monitorization_vs.dt_monitorization_vs_tstz%TYPE DEFAULT NULL,
        dt_monitorization_vs_tstz_nin IN BOOLEAN := TRUE,
        dt_cancel_tstz_in             IN monitorization_vs.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin            IN BOOLEAN := TRUE,
        dt_order_in                   IN monitorization_vs.dt_order%TYPE DEFAULT NULL,
        dt_order_nin                  IN BOOLEAN := TRUE,
        id_prof_order_in              IN monitorization_vs.id_prof_order%TYPE DEFAULT NULL,
        id_prof_order_nin             IN BOOLEAN := TRUE,
        id_order_type_in              IN monitorization_vs.id_order_type%TYPE DEFAULT NULL,
        id_order_type_nin             IN BOOLEAN := TRUE,
        flg_co_sign_in                IN monitorization_vs.flg_co_sign%TYPE DEFAULT NULL,
        flg_co_sign_nin               IN BOOLEAN := TRUE,
        dt_co_sign_in                 IN monitorization_vs.dt_co_sign%TYPE DEFAULT NULL,
        dt_co_sign_nin                IN BOOLEAN := TRUE,
        notes_co_sign_in              IN monitorization_vs.notes_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_nin             IN BOOLEAN := TRUE,
        id_prof_co_sign_in            IN monitorization_vs.id_prof_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_nin           IN BOOLEAN := TRUE,
        create_user_in                IN monitorization_vs.create_user%TYPE DEFAULT NULL,
        create_user_nin               IN BOOLEAN := TRUE,
        create_time_in                IN monitorization_vs.create_time%TYPE DEFAULT NULL,
        create_time_nin               IN BOOLEAN := TRUE,
        create_institution_in         IN monitorization_vs.create_institution%TYPE DEFAULT NULL,
        create_institution_nin        IN BOOLEAN := TRUE,
        update_user_in                IN monitorization_vs.update_user%TYPE DEFAULT NULL,
        update_user_nin               IN BOOLEAN := TRUE,
        update_time_in                IN monitorization_vs.update_time%TYPE DEFAULT NULL,
        update_time_nin               IN BOOLEAN := TRUE,
        update_institution_in         IN monitorization_vs.update_institution%TYPE DEFAULT NULL,
        update_institution_nin        IN BOOLEAN := TRUE,
        flg_status_prev_in            IN monitorization_vs.flg_status_prev%TYPE DEFAULT NULL,
        flg_status_prev_nin           IN BOOLEAN := TRUE,
        id_cancel_reason_in           IN monitorization_vs.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin          IN BOOLEAN := TRUE,
        where_in                      VARCHAR2 DEFAULT NULL,
        handle_error_in               IN BOOLEAN := TRUE
    );

    PROCEDURE upd_ins
    (
        id_monitorization_vs_in      IN monitorization_vs.id_monitorization_vs%TYPE,
        id_monitorization_in         IN monitorization_vs.id_monitorization%TYPE DEFAULT NULL,
        id_vital_sign_in             IN monitorization_vs.id_vital_sign%TYPE DEFAULT NULL,
        notes_in                     IN monitorization_vs.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN monitorization_vs.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN monitorization_vs.notes_cancel%TYPE DEFAULT NULL,
        flg_status_in                IN monitorization_vs.flg_status%TYPE DEFAULT NULL,
        dt_monitorization_vs_tstz_in IN monitorization_vs.dt_monitorization_vs_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN monitorization_vs.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_order_in                  IN monitorization_vs.dt_order%TYPE DEFAULT NULL,
        id_prof_order_in             IN monitorization_vs.id_prof_order%TYPE DEFAULT NULL,
        id_order_type_in             IN monitorization_vs.id_order_type%TYPE DEFAULT NULL,
        flg_co_sign_in               IN monitorization_vs.flg_co_sign%TYPE DEFAULT NULL,
        dt_co_sign_in                IN monitorization_vs.dt_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_in             IN monitorization_vs.notes_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_in           IN monitorization_vs.id_prof_co_sign%TYPE DEFAULT NULL,
        create_user_in               IN monitorization_vs.create_user%TYPE DEFAULT NULL,
        create_time_in               IN monitorization_vs.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN monitorization_vs.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN monitorization_vs.update_user%TYPE DEFAULT NULL,
        update_time_in               IN monitorization_vs.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN monitorization_vs.update_institution%TYPE DEFAULT NULL,
        flg_status_prev_in           IN monitorization_vs.flg_status_prev%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN monitorization_vs.id_cancel_reason%TYPE DEFAULT NULL,
        handle_error_in              IN BOOLEAN := TRUE,
        rows_out                     OUT table_varchar
    );

    PROCEDURE upd_ins
    (
        id_monitorization_vs_in      IN monitorization_vs.id_monitorization_vs%TYPE,
        id_monitorization_in         IN monitorization_vs.id_monitorization%TYPE DEFAULT NULL,
        id_vital_sign_in             IN monitorization_vs.id_vital_sign%TYPE DEFAULT NULL,
        notes_in                     IN monitorization_vs.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN monitorization_vs.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN monitorization_vs.notes_cancel%TYPE DEFAULT NULL,
        flg_status_in                IN monitorization_vs.flg_status%TYPE DEFAULT NULL,
        dt_monitorization_vs_tstz_in IN monitorization_vs.dt_monitorization_vs_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN monitorization_vs.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_order_in                  IN monitorization_vs.dt_order%TYPE DEFAULT NULL,
        id_prof_order_in             IN monitorization_vs.id_prof_order%TYPE DEFAULT NULL,
        id_order_type_in             IN monitorization_vs.id_order_type%TYPE DEFAULT NULL,
        flg_co_sign_in               IN monitorization_vs.flg_co_sign%TYPE DEFAULT NULL,
        dt_co_sign_in                IN monitorization_vs.dt_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_in             IN monitorization_vs.notes_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_in           IN monitorization_vs.id_prof_co_sign%TYPE DEFAULT NULL,
        create_user_in               IN monitorization_vs.create_user%TYPE DEFAULT NULL,
        create_time_in               IN monitorization_vs.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN monitorization_vs.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN monitorization_vs.update_user%TYPE DEFAULT NULL,
        update_time_in               IN monitorization_vs.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN monitorization_vs.update_institution%TYPE DEFAULT NULL,
        flg_status_prev_in           IN monitorization_vs.flg_status_prev%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN monitorization_vs.id_cancel_reason%TYPE DEFAULT NULL,
        handle_error_in              IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        rec_in          IN monitorization_vs%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    PROCEDURE upd
    (
        rec_in          IN monitorization_vs%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        col_in            IN monitorization_vs_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    PROCEDURE upd
    (
        col_in            IN monitorization_vs_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_monitorization_vs_in IN monitorization_vs.id_monitorization_vs%TYPE,
        handle_error_in         IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_monitorization_vs_in IN monitorization_vs.id_monitorization_vs%TYPE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    );

    -- Delete all rows for primary key column ID_MONITORIZATION_VS
    PROCEDURE del_id_monitorization_vs
    (
        id_monitorization_vs_in IN monitorization_vs.id_monitorization_vs%TYPE,
        handle_error_in         IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_MONITORIZATION_VS
    PROCEDURE del_id_monitorization_vs
    (
        id_monitorization_vs_in IN monitorization_vs.id_monitorization_vs%TYPE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    );

    -- Delete all rows for this MONVS_CR_FK foreign key value
    PROCEDURE del_monvs_cr_fk
    (
        id_cancel_reason_in IN monitorization_vs.id_cancel_reason%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    );

    -- Delete all rows for this MONVS_CR_FK foreign key value
    PROCEDURE del_monvs_cr_fk
    (
        id_cancel_reason_in IN monitorization_vs.id_cancel_reason%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    );

    -- Delete all rows for this MVS_MONT_FK foreign key value
    PROCEDURE del_mvs_mont_fk
    (
        id_monitorization_in IN monitorization_vs.id_monitorization%TYPE,
        handle_error_in      IN BOOLEAN := TRUE
    );

    -- Delete all rows for this MVS_MONT_FK foreign key value
    PROCEDURE del_mvs_mont_fk
    (
        id_monitorization_in IN monitorization_vs.id_monitorization%TYPE,
        handle_error_in      IN BOOLEAN := TRUE,
        rows_out             OUT table_varchar
    );

    -- Delete all rows for this MVS_ORDER_TYPE_FK foreign key value
    PROCEDURE del_mvs_order_type_fk
    (
        id_order_type_in IN monitorization_vs.id_order_type%TYPE,
        handle_error_in  IN BOOLEAN := TRUE
    );

    -- Delete all rows for this MVS_ORDER_TYPE_FK foreign key value
    PROCEDURE del_mvs_order_type_fk
    (
        id_order_type_in IN monitorization_vs.id_order_type%TYPE,
        handle_error_in  IN BOOLEAN := TRUE,
        rows_out         OUT table_varchar
    );

    -- Delete all rows for this MVS_PROF_CANCEL_FK foreign key value
    PROCEDURE del_mvs_prof_cancel_fk
    (
        id_prof_cancel_in IN monitorization_vs.id_prof_cancel%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Delete all rows for this MVS_PROF_CANCEL_FK foreign key value
    PROCEDURE del_mvs_prof_cancel_fk
    (
        id_prof_cancel_in IN monitorization_vs.id_prof_cancel%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows for this MVS_PROF_COSIGN_FK foreign key value
    PROCEDURE del_mvs_prof_cosign_fk
    (
        id_prof_co_sign_in IN monitorization_vs.id_prof_co_sign%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete all rows for this MVS_PROF_COSIGN_FK foreign key value
    PROCEDURE del_mvs_prof_cosign_fk
    (
        id_prof_co_sign_in IN monitorization_vs.id_prof_co_sign%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    -- Delete all rows for this MVS_PROF_ORDER_FK foreign key value
    PROCEDURE del_mvs_prof_order_fk
    (
        id_prof_order_in IN monitorization_vs.id_prof_order%TYPE,
        handle_error_in  IN BOOLEAN := TRUE
    );

    -- Delete all rows for this MVS_PROF_ORDER_FK foreign key value
    PROCEDURE del_mvs_prof_order_fk
    (
        id_prof_order_in IN monitorization_vs.id_prof_order%TYPE,
        handle_error_in  IN BOOLEAN := TRUE,
        rows_out         OUT table_varchar
    );

    -- Delete all rows for this MVS_VSN_FK foreign key value
    PROCEDURE del_mvs_vsn_fk
    (
        id_vital_sign_in IN monitorization_vs.id_vital_sign%TYPE,
        handle_error_in  IN BOOLEAN := TRUE
    );

    -- Delete all rows for this MVS_VSN_FK foreign key value
    PROCEDURE del_mvs_vsn_fk
    (
        id_vital_sign_in IN monitorization_vs.id_vital_sign%TYPE,
        handle_error_in  IN BOOLEAN := TRUE,
        rows_out         OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(monitorization_vs_inout IN OUT monitorization_vs%ROWTYPE);

    FUNCTION initrec RETURN monitorization_vs%ROWTYPE;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN monitorization_vs_tc;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN monitorization_vs_tc;

END ts_monitorization_vs;
/
