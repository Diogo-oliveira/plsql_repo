/*-- Last Change Revision: $Rev: 2053893 $*/
/*-- Last Change by: $Author: ana.matos $*/
/*-- Date of last change: $Date: 2022-12-30 14:20:45 +0000 (sex, 30 dez 2022) $*/

CREATE OR REPLACE PACKAGE ts_exam
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2022-12-30 13:39:16
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on exam
    TYPE exam_tc IS TABLE OF exam%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE exam_ntt IS TABLE OF exam%ROWTYPE;
    TYPE exam_vat IS VARRAY(100) OF exam%ROWTYPE;

    -- Column Collection based on column ID_EXAM
    TYPE id_exam_cc IS TABLE OF exam.id_exam%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CODE_EXAM
    TYPE code_exam_cc IS TABLE OF exam.code_exam%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CODE_HELP_EXAM
    TYPE code_help_exam_cc IS TABLE OF exam.code_help_exam%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column FLG_AVAILABLE
    TYPE flg_available_cc IS TABLE OF exam.flg_available%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column RANK
    TYPE rank_cc IS TABLE OF exam.rank%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ADW_LAST_UPDATE
    TYPE adw_last_update_cc IS TABLE OF exam.adw_last_update%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column FLG_TYPE
    TYPE flg_type_cc IS TABLE OF exam.flg_type%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column GENDER
    TYPE gender_cc IS TABLE OF exam.gender%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column AGE_MIN
    TYPE age_min_cc IS TABLE OF exam.age_min%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column AGE_MAX
    TYPE age_max_cc IS TABLE OF exam.age_max%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_EXAM_CAT
    TYPE id_exam_cat_cc IS TABLE OF exam.id_exam_cat%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_CONTENT
    TYPE id_content_cc IS TABLE OF exam.id_content%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_USER
    TYPE create_user_cc IS TABLE OF exam.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_TIME
    TYPE create_time_cc IS TABLE OF exam.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_INSTITUTION
    TYPE create_institution_cc IS TABLE OF exam.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_USER
    TYPE update_user_cc IS TABLE OF exam.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_TIME
    TYPE update_time_cc IS TABLE OF exam.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_INSTITUTION
    TYPE update_institution_cc IS TABLE OF exam.update_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column FLG_TECHNICAL
    TYPE flg_technical_cc IS TABLE OF exam.flg_technical%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present (with rows_out)
    PROCEDURE ins
    (
        id_exam_in            IN exam.id_exam%TYPE,
        code_exam_in          IN exam.code_exam%TYPE DEFAULT NULL,
        code_help_exam_in     IN exam.code_help_exam%TYPE DEFAULT NULL,
        flg_available_in      IN exam.flg_available%TYPE DEFAULT NULL,
        rank_in               IN exam.rank%TYPE DEFAULT NULL,
        adw_last_update_in    IN exam.adw_last_update%TYPE DEFAULT SYSDATE,
        flg_type_in           IN exam.flg_type%TYPE DEFAULT NULL,
        gender_in             IN exam.gender%TYPE DEFAULT NULL,
        age_min_in            IN exam.age_min%TYPE DEFAULT NULL,
        age_max_in            IN exam.age_max%TYPE DEFAULT NULL,
        id_exam_cat_in        IN exam.id_exam_cat%TYPE DEFAULT NULL,
        id_content_in         IN exam.id_content%TYPE DEFAULT NULL,
        create_user_in        IN exam.create_user%TYPE DEFAULT NULL,
        create_time_in        IN exam.create_time%TYPE DEFAULT NULL,
        create_institution_in IN exam.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN exam.update_user%TYPE DEFAULT NULL,
        update_time_in        IN exam.update_time%TYPE DEFAULT NULL,
        update_institution_in IN exam.update_institution%TYPE DEFAULT NULL,
        flg_technical_in      IN exam.flg_technical%TYPE DEFAULT 'N',
        handle_error_in       IN BOOLEAN := FALSE,
        rows_out              OUT table_varchar
    );

    -- Insert one row, providing primary key if present (without rows_out)
    PROCEDURE ins
    (
        id_exam_in            IN exam.id_exam%TYPE,
        code_exam_in          IN exam.code_exam%TYPE DEFAULT NULL,
        code_help_exam_in     IN exam.code_help_exam%TYPE DEFAULT NULL,
        flg_available_in      IN exam.flg_available%TYPE DEFAULT NULL,
        rank_in               IN exam.rank%TYPE DEFAULT NULL,
        adw_last_update_in    IN exam.adw_last_update%TYPE DEFAULT SYSDATE,
        flg_type_in           IN exam.flg_type%TYPE DEFAULT NULL,
        gender_in             IN exam.gender%TYPE DEFAULT NULL,
        age_min_in            IN exam.age_min%TYPE DEFAULT NULL,
        age_max_in            IN exam.age_max%TYPE DEFAULT NULL,
        id_exam_cat_in        IN exam.id_exam_cat%TYPE DEFAULT NULL,
        id_content_in         IN exam.id_content%TYPE DEFAULT NULL,
        create_user_in        IN exam.create_user%TYPE DEFAULT NULL,
        create_time_in        IN exam.create_time%TYPE DEFAULT NULL,
        create_institution_in IN exam.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN exam.update_user%TYPE DEFAULT NULL,
        update_time_in        IN exam.update_time%TYPE DEFAULT NULL,
        update_institution_in IN exam.update_institution%TYPE DEFAULT NULL,
        flg_technical_in      IN exam.flg_technical%TYPE DEFAULT 'N',
        handle_error_in       IN BOOLEAN := FALSE
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN exam%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN exam%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := FALSE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN exam_tc,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN exam_tc,
        handle_error_in IN BOOLEAN := FALSE
    );

    -- Return next primary key value using the named sequence
    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN exam.id_exam%TYPE;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        code_exam_in          IN exam.code_exam%TYPE DEFAULT NULL,
        code_help_exam_in     IN exam.code_help_exam%TYPE DEFAULT NULL,
        flg_available_in      IN exam.flg_available%TYPE DEFAULT NULL,
        rank_in               IN exam.rank%TYPE DEFAULT NULL,
        adw_last_update_in    IN exam.adw_last_update%TYPE DEFAULT SYSDATE,
        flg_type_in           IN exam.flg_type%TYPE DEFAULT NULL,
        gender_in             IN exam.gender%TYPE DEFAULT NULL,
        age_min_in            IN exam.age_min%TYPE DEFAULT NULL,
        age_max_in            IN exam.age_max%TYPE DEFAULT NULL,
        id_exam_cat_in        IN exam.id_exam_cat%TYPE DEFAULT NULL,
        id_content_in         IN exam.id_content%TYPE DEFAULT NULL,
        create_user_in        IN exam.create_user%TYPE DEFAULT NULL,
        create_time_in        IN exam.create_time%TYPE DEFAULT NULL,
        create_institution_in IN exam.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN exam.update_user%TYPE DEFAULT NULL,
        update_time_in        IN exam.update_time%TYPE DEFAULT NULL,
        update_institution_in IN exam.update_institution%TYPE DEFAULT NULL,
        flg_technical_in      IN exam.flg_technical%TYPE DEFAULT 'N',
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    );

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        code_exam_in          IN exam.code_exam%TYPE DEFAULT NULL,
        code_help_exam_in     IN exam.code_help_exam%TYPE DEFAULT NULL,
        flg_available_in      IN exam.flg_available%TYPE DEFAULT NULL,
        rank_in               IN exam.rank%TYPE DEFAULT NULL,
        adw_last_update_in    IN exam.adw_last_update%TYPE DEFAULT SYSDATE,
        flg_type_in           IN exam.flg_type%TYPE DEFAULT NULL,
        gender_in             IN exam.gender%TYPE DEFAULT NULL,
        age_min_in            IN exam.age_min%TYPE DEFAULT NULL,
        age_max_in            IN exam.age_max%TYPE DEFAULT NULL,
        id_exam_cat_in        IN exam.id_exam_cat%TYPE DEFAULT NULL,
        id_content_in         IN exam.id_content%TYPE DEFAULT NULL,
        create_user_in        IN exam.create_user%TYPE DEFAULT NULL,
        create_time_in        IN exam.create_time%TYPE DEFAULT NULL,
        create_institution_in IN exam.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN exam.update_user%TYPE DEFAULT NULL,
        update_time_in        IN exam.update_time%TYPE DEFAULT NULL,
        update_institution_in IN exam.update_institution%TYPE DEFAULT NULL,
        flg_technical_in      IN exam.flg_technical%TYPE DEFAULT 'N',
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        code_exam_in          IN exam.code_exam%TYPE DEFAULT NULL,
        code_help_exam_in     IN exam.code_help_exam%TYPE DEFAULT NULL,
        flg_available_in      IN exam.flg_available%TYPE DEFAULT NULL,
        rank_in               IN exam.rank%TYPE DEFAULT NULL,
        adw_last_update_in    IN exam.adw_last_update%TYPE DEFAULT SYSDATE,
        flg_type_in           IN exam.flg_type%TYPE DEFAULT NULL,
        gender_in             IN exam.gender%TYPE DEFAULT NULL,
        age_min_in            IN exam.age_min%TYPE DEFAULT NULL,
        age_max_in            IN exam.age_max%TYPE DEFAULT NULL,
        id_exam_cat_in        IN exam.id_exam_cat%TYPE DEFAULT NULL,
        id_content_in         IN exam.id_content%TYPE DEFAULT NULL,
        create_user_in        IN exam.create_user%TYPE DEFAULT NULL,
        create_time_in        IN exam.create_time%TYPE DEFAULT NULL,
        create_institution_in IN exam.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN exam.update_user%TYPE DEFAULT NULL,
        update_time_in        IN exam.update_time%TYPE DEFAULT NULL,
        update_institution_in IN exam.update_institution%TYPE DEFAULT NULL,
        flg_technical_in      IN exam.flg_technical%TYPE DEFAULT 'N',
        id_exam_out           IN OUT exam.id_exam%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        code_exam_in          IN exam.code_exam%TYPE DEFAULT NULL,
        code_help_exam_in     IN exam.code_help_exam%TYPE DEFAULT NULL,
        flg_available_in      IN exam.flg_available%TYPE DEFAULT NULL,
        rank_in               IN exam.rank%TYPE DEFAULT NULL,
        adw_last_update_in    IN exam.adw_last_update%TYPE DEFAULT SYSDATE,
        flg_type_in           IN exam.flg_type%TYPE DEFAULT NULL,
        gender_in             IN exam.gender%TYPE DEFAULT NULL,
        age_min_in            IN exam.age_min%TYPE DEFAULT NULL,
        age_max_in            IN exam.age_max%TYPE DEFAULT NULL,
        id_exam_cat_in        IN exam.id_exam_cat%TYPE DEFAULT NULL,
        id_content_in         IN exam.id_content%TYPE DEFAULT NULL,
        create_user_in        IN exam.create_user%TYPE DEFAULT NULL,
        create_time_in        IN exam.create_time%TYPE DEFAULT NULL,
        create_institution_in IN exam.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN exam.update_user%TYPE DEFAULT NULL,
        update_time_in        IN exam.update_time%TYPE DEFAULT NULL,
        update_institution_in IN exam.update_institution%TYPE DEFAULT NULL,
        flg_technical_in      IN exam.flg_technical%TYPE DEFAULT 'N',
        id_exam_out           IN OUT exam.id_exam%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE
    );

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        code_exam_in          IN exam.code_exam%TYPE DEFAULT NULL,
        code_help_exam_in     IN exam.code_help_exam%TYPE DEFAULT NULL,
        flg_available_in      IN exam.flg_available%TYPE DEFAULT NULL,
        rank_in               IN exam.rank%TYPE DEFAULT NULL,
        adw_last_update_in    IN exam.adw_last_update%TYPE DEFAULT SYSDATE,
        flg_type_in           IN exam.flg_type%TYPE DEFAULT NULL,
        gender_in             IN exam.gender%TYPE DEFAULT NULL,
        age_min_in            IN exam.age_min%TYPE DEFAULT NULL,
        age_max_in            IN exam.age_max%TYPE DEFAULT NULL,
        id_exam_cat_in        IN exam.id_exam_cat%TYPE DEFAULT NULL,
        id_content_in         IN exam.id_content%TYPE DEFAULT NULL,
        create_user_in        IN exam.create_user%TYPE DEFAULT NULL,
        create_time_in        IN exam.create_time%TYPE DEFAULT NULL,
        create_institution_in IN exam.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN exam.update_user%TYPE DEFAULT NULL,
        update_time_in        IN exam.update_time%TYPE DEFAULT NULL,
        update_institution_in IN exam.update_institution%TYPE DEFAULT NULL,
        flg_technical_in      IN exam.flg_technical%TYPE DEFAULT 'N',
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) RETURN exam.id_exam%TYPE;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        code_exam_in          IN exam.code_exam%TYPE DEFAULT NULL,
        code_help_exam_in     IN exam.code_help_exam%TYPE DEFAULT NULL,
        flg_available_in      IN exam.flg_available%TYPE DEFAULT NULL,
        rank_in               IN exam.rank%TYPE DEFAULT NULL,
        adw_last_update_in    IN exam.adw_last_update%TYPE DEFAULT SYSDATE,
        flg_type_in           IN exam.flg_type%TYPE DEFAULT NULL,
        gender_in             IN exam.gender%TYPE DEFAULT NULL,
        age_min_in            IN exam.age_min%TYPE DEFAULT NULL,
        age_max_in            IN exam.age_max%TYPE DEFAULT NULL,
        id_exam_cat_in        IN exam.id_exam_cat%TYPE DEFAULT NULL,
        id_content_in         IN exam.id_content%TYPE DEFAULT NULL,
        create_user_in        IN exam.create_user%TYPE DEFAULT NULL,
        create_time_in        IN exam.create_time%TYPE DEFAULT NULL,
        create_institution_in IN exam.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN exam.update_user%TYPE DEFAULT NULL,
        update_time_in        IN exam.update_time%TYPE DEFAULT NULL,
        update_institution_in IN exam.update_institution%TYPE DEFAULT NULL,
        flg_technical_in      IN exam.flg_technical%TYPE DEFAULT 'N',
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE
    ) RETURN exam.id_exam%TYPE;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_exam_in             IN exam.id_exam%TYPE,
        code_exam_in           IN exam.code_exam%TYPE DEFAULT NULL,
        code_exam_nin          IN BOOLEAN := TRUE,
        code_help_exam_in      IN exam.code_help_exam%TYPE DEFAULT NULL,
        code_help_exam_nin     IN BOOLEAN := TRUE,
        flg_available_in       IN exam.flg_available%TYPE DEFAULT NULL,
        flg_available_nin      IN BOOLEAN := TRUE,
        rank_in                IN exam.rank%TYPE DEFAULT NULL,
        rank_nin               IN BOOLEAN := TRUE,
        adw_last_update_in     IN exam.adw_last_update%TYPE DEFAULT NULL,
        adw_last_update_nin    IN BOOLEAN := TRUE,
        flg_type_in            IN exam.flg_type%TYPE DEFAULT NULL,
        flg_type_nin           IN BOOLEAN := TRUE,
        gender_in              IN exam.gender%TYPE DEFAULT NULL,
        gender_nin             IN BOOLEAN := TRUE,
        age_min_in             IN exam.age_min%TYPE DEFAULT NULL,
        age_min_nin            IN BOOLEAN := TRUE,
        age_max_in             IN exam.age_max%TYPE DEFAULT NULL,
        age_max_nin            IN BOOLEAN := TRUE,
        id_exam_cat_in         IN exam.id_exam_cat%TYPE DEFAULT NULL,
        id_exam_cat_nin        IN BOOLEAN := TRUE,
        id_content_in          IN exam.id_content%TYPE DEFAULT NULL,
        id_content_nin         IN BOOLEAN := TRUE,
        create_user_in         IN exam.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN exam.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN exam.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN exam.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN exam.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN exam.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        flg_technical_in       IN exam.flg_technical%TYPE DEFAULT NULL,
        flg_technical_nin      IN BOOLEAN := TRUE,
        handle_error_in        IN BOOLEAN := FALSE,
        rows_out               IN OUT table_varchar
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_exam_in             IN exam.id_exam%TYPE,
        code_exam_in           IN exam.code_exam%TYPE DEFAULT NULL,
        code_exam_nin          IN BOOLEAN := TRUE,
        code_help_exam_in      IN exam.code_help_exam%TYPE DEFAULT NULL,
        code_help_exam_nin     IN BOOLEAN := TRUE,
        flg_available_in       IN exam.flg_available%TYPE DEFAULT NULL,
        flg_available_nin      IN BOOLEAN := TRUE,
        rank_in                IN exam.rank%TYPE DEFAULT NULL,
        rank_nin               IN BOOLEAN := TRUE,
        adw_last_update_in     IN exam.adw_last_update%TYPE DEFAULT NULL,
        adw_last_update_nin    IN BOOLEAN := TRUE,
        flg_type_in            IN exam.flg_type%TYPE DEFAULT NULL,
        flg_type_nin           IN BOOLEAN := TRUE,
        gender_in              IN exam.gender%TYPE DEFAULT NULL,
        gender_nin             IN BOOLEAN := TRUE,
        age_min_in             IN exam.age_min%TYPE DEFAULT NULL,
        age_min_nin            IN BOOLEAN := TRUE,
        age_max_in             IN exam.age_max%TYPE DEFAULT NULL,
        age_max_nin            IN BOOLEAN := TRUE,
        id_exam_cat_in         IN exam.id_exam_cat%TYPE DEFAULT NULL,
        id_exam_cat_nin        IN BOOLEAN := TRUE,
        id_content_in          IN exam.id_content%TYPE DEFAULT NULL,
        id_content_nin         IN BOOLEAN := TRUE,
        create_user_in         IN exam.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN exam.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN exam.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN exam.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN exam.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN exam.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        flg_technical_in       IN exam.flg_technical%TYPE DEFAULT NULL,
        flg_technical_nin      IN BOOLEAN := TRUE,
        handle_error_in        IN BOOLEAN := FALSE
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        code_exam_in           IN exam.code_exam%TYPE DEFAULT NULL,
        code_exam_nin          IN BOOLEAN := TRUE,
        code_help_exam_in      IN exam.code_help_exam%TYPE DEFAULT NULL,
        code_help_exam_nin     IN BOOLEAN := TRUE,
        flg_available_in       IN exam.flg_available%TYPE DEFAULT NULL,
        flg_available_nin      IN BOOLEAN := TRUE,
        rank_in                IN exam.rank%TYPE DEFAULT NULL,
        rank_nin               IN BOOLEAN := TRUE,
        adw_last_update_in     IN exam.adw_last_update%TYPE DEFAULT NULL,
        adw_last_update_nin    IN BOOLEAN := TRUE,
        flg_type_in            IN exam.flg_type%TYPE DEFAULT NULL,
        flg_type_nin           IN BOOLEAN := TRUE,
        gender_in              IN exam.gender%TYPE DEFAULT NULL,
        gender_nin             IN BOOLEAN := TRUE,
        age_min_in             IN exam.age_min%TYPE DEFAULT NULL,
        age_min_nin            IN BOOLEAN := TRUE,
        age_max_in             IN exam.age_max%TYPE DEFAULT NULL,
        age_max_nin            IN BOOLEAN := TRUE,
        id_exam_cat_in         IN exam.id_exam_cat%TYPE DEFAULT NULL,
        id_exam_cat_nin        IN BOOLEAN := TRUE,
        id_content_in          IN exam.id_content%TYPE DEFAULT NULL,
        id_content_nin         IN BOOLEAN := TRUE,
        create_user_in         IN exam.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN exam.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN exam.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN exam.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN exam.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN exam.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        flg_technical_in       IN exam.flg_technical%TYPE DEFAULT NULL,
        flg_technical_nin      IN BOOLEAN := TRUE,
        where_in               IN VARCHAR2,
        handle_error_in        IN BOOLEAN := FALSE,
        rows_out               IN OUT table_varchar
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        code_exam_in           IN exam.code_exam%TYPE DEFAULT NULL,
        code_exam_nin          IN BOOLEAN := TRUE,
        code_help_exam_in      IN exam.code_help_exam%TYPE DEFAULT NULL,
        code_help_exam_nin     IN BOOLEAN := TRUE,
        flg_available_in       IN exam.flg_available%TYPE DEFAULT NULL,
        flg_available_nin      IN BOOLEAN := TRUE,
        rank_in                IN exam.rank%TYPE DEFAULT NULL,
        rank_nin               IN BOOLEAN := TRUE,
        adw_last_update_in     IN exam.adw_last_update%TYPE DEFAULT NULL,
        adw_last_update_nin    IN BOOLEAN := TRUE,
        flg_type_in            IN exam.flg_type%TYPE DEFAULT NULL,
        flg_type_nin           IN BOOLEAN := TRUE,
        gender_in              IN exam.gender%TYPE DEFAULT NULL,
        gender_nin             IN BOOLEAN := TRUE,
        age_min_in             IN exam.age_min%TYPE DEFAULT NULL,
        age_min_nin            IN BOOLEAN := TRUE,
        age_max_in             IN exam.age_max%TYPE DEFAULT NULL,
        age_max_nin            IN BOOLEAN := TRUE,
        id_exam_cat_in         IN exam.id_exam_cat%TYPE DEFAULT NULL,
        id_exam_cat_nin        IN BOOLEAN := TRUE,
        id_content_in          IN exam.id_content%TYPE DEFAULT NULL,
        id_content_nin         IN BOOLEAN := TRUE,
        create_user_in         IN exam.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN exam.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN exam.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN exam.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN exam.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN exam.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        flg_technical_in       IN exam.flg_technical%TYPE DEFAULT NULL,
        flg_technical_nin      IN BOOLEAN := TRUE,
        where_in               IN VARCHAR2,
        handle_error_in        IN BOOLEAN := FALSE
    );

    --Update/insert with columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_exam_in            IN exam.id_exam%TYPE,
        code_exam_in          IN exam.code_exam%TYPE DEFAULT NULL,
        code_help_exam_in     IN exam.code_help_exam%TYPE DEFAULT NULL,
        flg_available_in      IN exam.flg_available%TYPE DEFAULT NULL,
        rank_in               IN exam.rank%TYPE DEFAULT NULL,
        adw_last_update_in    IN exam.adw_last_update%TYPE DEFAULT NULL,
        flg_type_in           IN exam.flg_type%TYPE DEFAULT NULL,
        gender_in             IN exam.gender%TYPE DEFAULT NULL,
        age_min_in            IN exam.age_min%TYPE DEFAULT NULL,
        age_max_in            IN exam.age_max%TYPE DEFAULT NULL,
        id_exam_cat_in        IN exam.id_exam_cat%TYPE DEFAULT NULL,
        id_content_in         IN exam.id_content%TYPE DEFAULT NULL,
        create_user_in        IN exam.create_user%TYPE DEFAULT NULL,
        create_time_in        IN exam.create_time%TYPE DEFAULT NULL,
        create_institution_in IN exam.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN exam.update_user%TYPE DEFAULT NULL,
        update_time_in        IN exam.update_time%TYPE DEFAULT NULL,
        update_institution_in IN exam.update_institution%TYPE DEFAULT NULL,
        flg_technical_in      IN exam.flg_technical%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := FALSE,
        rows_out              IN OUT table_varchar
    );

    --Update/insert with columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_exam_in            IN exam.id_exam%TYPE,
        code_exam_in          IN exam.code_exam%TYPE DEFAULT NULL,
        code_help_exam_in     IN exam.code_help_exam%TYPE DEFAULT NULL,
        flg_available_in      IN exam.flg_available%TYPE DEFAULT NULL,
        rank_in               IN exam.rank%TYPE DEFAULT NULL,
        adw_last_update_in    IN exam.adw_last_update%TYPE DEFAULT NULL,
        flg_type_in           IN exam.flg_type%TYPE DEFAULT NULL,
        gender_in             IN exam.gender%TYPE DEFAULT NULL,
        age_min_in            IN exam.age_min%TYPE DEFAULT NULL,
        age_max_in            IN exam.age_max%TYPE DEFAULT NULL,
        id_exam_cat_in        IN exam.id_exam_cat%TYPE DEFAULT NULL,
        id_content_in         IN exam.id_content%TYPE DEFAULT NULL,
        create_user_in        IN exam.create_user%TYPE DEFAULT NULL,
        create_time_in        IN exam.create_time%TYPE DEFAULT NULL,
        create_institution_in IN exam.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN exam.update_user%TYPE DEFAULT NULL,
        update_time_in        IN exam.update_time%TYPE DEFAULT NULL,
        update_institution_in IN exam.update_institution%TYPE DEFAULT NULL,
        flg_technical_in      IN exam.flg_technical%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := FALSE
    );

    --Update record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN exam%ROWTYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        IN OUT table_varchar
    );

    --Update record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN exam%ROWTYPE,
        handle_error_in IN BOOLEAN := FALSE
    );

    --Update collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN exam_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := FALSE,
        rows_out          IN OUT table_varchar
    );

    --Update collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN exam_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := FALSE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := FALSE,
        rows_out           OUT table_varchar
    );

    --increment column value
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := FALSE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_exam_in      IN exam.id_exam%TYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_exam_in      IN exam.id_exam%TYPE,
        handle_error_in IN BOOLEAN := FALSE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := FALSE
    );

    -- Delete all rows for this EXAM_ECT_FK foreign key value
    PROCEDURE del_exam_ect_fk
    (
        id_exam_cat_in  IN exam.id_exam_cat%TYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this EXAM_ECT_FK foreign key value
    PROCEDURE del_exam_ect_fk
    (
        id_exam_cat_in  IN exam.id_exam_cat%TYPE,
        handle_error_in IN BOOLEAN := FALSE
    );

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(exam_inout IN OUT exam%ROWTYPE);

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN exam%ROWTYPE;

    -- Get data rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN exam_tc;

    -- Get data rowid pragma autonomous transaccion
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN exam_tc;

END ts_exam;
/
