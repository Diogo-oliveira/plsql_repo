/*-- Last Change Revision: $Rev: 2028964 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:49:00 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE pk_screen_template_internal IS
    -- LG 2007-Jan-23
    -- This package was create because java has problems with INDEX BY VARCHAR2 data types and pk_screen_template uses it
    -- in function GET_SCREEN_TEMPLATE_METADATA.
    -- This function must be in package spec because is called from pk_patient 
    -- The founded solution  was to create an internal package which is not generated by java.

    -- types to keep metada about tables and columns
    /**
    * Type to represent a column metadata.
    * The stm used to populate elements of this type must me synchronized with it. See funtion PK_PATIENT.BUILD_TABLE_METADATA
    * @author  Luis Gaspar
    * @version 1.0
    * @since   25-10-2006
    */
    TYPE column_metadata_type IS RECORD(
        table_name            VARCHAR2(50),
        column_name           VARCHAR2(50),
        column_type           VARCHAR2(50),
        ref_table             VARCHAR2(50),
        ref_table_desc_column VARCHAR2(50),
        mandatory             BOOLEAN,
        readonly              BOOLEAN,
        domain                VARCHAR2(60),
        health_plan_flg_type  health_plan.flg_type%TYPE,
        field_name            VARCHAR2(50),
        visible               BOOLEAN);
    /**
    * Type to represent a screen metadata.
    * Table metadata is a collection of column metadata.
    * The key associated with a column metadata has the format <table_name>.<column_name>
    *
    * @author  Luis Gaspar
    * @version 1.0
    * @since   25-10-2006
    */
    TYPE screen_metadata_type IS TABLE OF column_metadata_type INDEX BY VARCHAR2(200);

    /**
    * Gets xml screen template metadada to patient id screen
    *
    * @param   I_LANG language associated to the professional executing the request
    * @param   I_PROF  professional, institution and software ids
    * @param   I_CONTEXT the screen context
    * @param   O_SCREEN_METADATA the metadata obtained from the xml.
    * @param   O_ERROR an error message, set when return=false
    *
    * @RETURN  TRUE if sucess, FALSE otherwise
    * @author  Luis Gaspar
    * @version 1.0
    * @since   30-10-2006
    */
    FUNCTION get_screen_template_metadata
    (
        i_lang            IN language.id_language%TYPE,
        i_prof            IN profissional,
        i_context         IN VARCHAR2,
        o_screen_metadata OUT screen_metadata_type,
        o_error           OUT t_error_out
    ) RETURN BOOLEAN;

    /**
    * Gets xml screen template to patient id screen
    *
    * @param   I_LANG language associated to the professional executing the request
    * @param   I_PROF  professional, institution and software ids
    * @param   I_CONTEXT the screen context
    * @param   O_XML_TEMPLATE the xml code representing the template
    * @param   O_ERROR an error message, set when return=false
    *
    * @RETURN  TRUE if sucess, FALSE otherwise
    * @author  Luis Gaspar
    * @version 1.0
    * @since   30-08-2006
    */
    FUNCTION get_screen_template
    (
        i_lang         IN language.id_language%TYPE,
        i_prof         IN profissional,
        i_context      IN VARCHAR2,
        o_xml_template OUT sys_screen_template.xml_template%TYPE,
        o_error        OUT t_error_out
    ) RETURN BOOLEAN;

    /**
    * Prints metadata extracted from xml screen template to patient id screen.
    * Metadata is printed with DBMS_OUTPUT.PUT_LINE
    *
    * @param   I_LANG language associated to the professional executing the request
    * @param   I_PROF  professional, institution and software ids
    * @param   I_CONTEXT the screen context
    * @param   O_ERROR an error message, set when return=false
    *
    * @RETURN  TRUE if sucess, FALSE otherwise
    * @author  Luis Gaspar
    * @version 1.0
    * @since   31-10-2006
    */

    FUNCTION print_screen_template_metadata
    (
        i_lang    IN language.id_language%TYPE,
        i_prof    IN profissional,
        i_context IN VARCHAR2,
        o_error   OUT t_error_out
    ) RETURN BOOLEAN;

    /**
    * Creates a convertion expression to convert a value represented in varchar2 to the corresponding table data type.
    * The convertion expression migth be used in SQL and PL/SQL dynamic statements.
    *
    * @param   I_VALUE  The varchar2 value to convert
    * @param   I_TABLE_METADATA Metadata about tables
    * @param   I_METADATA_KEY The key expression used to fectch the column metadata from the I_TABLE_METADATA
    * @param   I_LANG language associated to the professional executing the request
    * @param   O_CONVERTION_EXP The created convertion expression
    * @param   O_ERROR an error message, set when return=false
    *
    * @RETURN  TRUE if sucess, FALSE otherwise
    * @author  Luis Gaspar
    * @version 1.0
    * @since   25-10-2006
    */
    FUNCTION varchar_to_data_type
    (
        i_value           IN VARCHAR2,
        i_screen_metadata IN screen_metadata_type,
        i_metadata_key    IN VARCHAR2,
        i_lang            language.id_language%TYPE,
        o_convertion_exp  OUT VARCHAR2,
        o_error           OUT t_error_out
    ) RETURN BOOLEAN;

    /**
    * Validate mandatory fields
    *
    * @param   I_LANG language associated to the professional executing the request
    * @param   I_PROF  professional, institution and software ids
    * @param I_SCREEN_METADATA The screen metadata
    * @param   I_KEYS array with keys about which info is available to the patient
    * @param   I_VALUES array with which info is available to the patient
    * @param   O_FLG_SHOW  =Y to show a message, otherwise = N
    * @param   O_MSG_TITLE  the message title, when O_FLG_SHOW = Y
    * @param   O_MSG_TEXT  the message text , when O_FLG_SHOW = Y
    * @param   O_BUTTON the buttons to show with the message N - No, L - read, C - confirmed. any combination is allowed
    * @param   O_ERROR an error message, set when return=false
    *
    * @RETURN  TRUE if sucess, FALSE otherwise
    * @author  Luis Gaspar
    * @version 1.0
    * @since   02-11-2006
    */
    FUNCTION validate_screen_fields
    (
        i_lang            language.id_language%TYPE,
        i_prof            IN profissional,
        i_screen_metadata IN screen_metadata_type,
        i_keys            IN table_varchar,
        i_values          IN table_varchar,
        o_flg_show        OUT VARCHAR2,
        o_msg_title       OUT VARCHAR2,
        o_msg_text        OUT VARCHAR2,
        o_button          OUT VARCHAR2,
        o_error           OUT t_error_out
    ) RETURN BOOLEAN;

    g_date_convert_pattern VARCHAR2(50);

END pk_screen_template_internal;
/
