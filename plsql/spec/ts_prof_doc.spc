/*-- Last Change Revision: $Rev: 1921094 $*/
/*-- Last Change by: $Author: pedro.henriques $*/
/*-- Date of last change: $Date: 2019-10-18 11:58:15 +0100 (sex, 18 out 2019) $*/
CREATE OR REPLACE PACKAGE ts_prof_doc
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2019-10-14 17:12:19
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on prof_doc
    TYPE prof_doc_tc IS TABLE OF prof_doc%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE prof_doc_ntt IS TABLE OF prof_doc%ROWTYPE;
    TYPE prof_doc_vat IS VARRAY(100) OF prof_doc%ROWTYPE;

    -- Column Collection based on column ID_PROF_DOC
    TYPE id_prof_doc_cc IS TABLE OF prof_doc.id_prof_doc%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_DOC_TYPE
    TYPE id_doc_type_cc IS TABLE OF prof_doc.id_doc_type%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_PROFESSIONAL
    TYPE id_professional_cc IS TABLE OF prof_doc.id_professional%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column VALUE
    TYPE value_cc IS TABLE OF prof_doc.value%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_INSTITUTION
    TYPE id_institution_cc IS TABLE OF prof_doc.id_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column LOCAL_EMITED
    TYPE local_emited_cc IS TABLE OF prof_doc.local_emited%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column DT_EMITED_TSTZ
    TYPE dt_emited_tstz_cc IS TABLE OF prof_doc.dt_emited_tstz%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column DT_EXPIRE_TSTZ
    TYPE dt_expire_tstz_cc IS TABLE OF prof_doc.dt_expire_tstz%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_USER
    TYPE create_user_cc IS TABLE OF prof_doc.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_TIME
    TYPE create_time_cc IS TABLE OF prof_doc.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_INSTITUTION
    TYPE create_institution_cc IS TABLE OF prof_doc.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_USER
    TYPE update_user_cc IS TABLE OF prof_doc.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_TIME
    TYPE update_time_cc IS TABLE OF prof_doc.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_INSTITUTION
    TYPE update_institution_cc IS TABLE OF prof_doc.update_institution%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present (with rows_out)
    PROCEDURE ins
    (
        id_prof_doc_in        IN prof_doc.id_prof_doc%TYPE,
        id_doc_type_in        IN prof_doc.id_doc_type%TYPE DEFAULT NULL,
        id_professional_in    IN prof_doc.id_professional%TYPE DEFAULT NULL,
        value_in              IN prof_doc.value%TYPE DEFAULT NULL,
        id_institution_in     IN prof_doc.id_institution%TYPE DEFAULT NULL,
        local_emited_in       IN prof_doc.local_emited%TYPE DEFAULT NULL,
        dt_emited_tstz_in     IN prof_doc.dt_emited_tstz%TYPE DEFAULT NULL,
        dt_expire_tstz_in     IN prof_doc.dt_expire_tstz%TYPE DEFAULT NULL,
        create_user_in        IN prof_doc.create_user%TYPE DEFAULT NULL,
        create_time_in        IN prof_doc.create_time%TYPE DEFAULT NULL,
        create_institution_in IN prof_doc.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN prof_doc.update_user%TYPE DEFAULT NULL,
        update_time_in        IN prof_doc.update_time%TYPE DEFAULT NULL,
        update_institution_in IN prof_doc.update_institution%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    );

    -- Insert one row, providing primary key if present (without rows_out)
    PROCEDURE ins
    (
        id_prof_doc_in        IN prof_doc.id_prof_doc%TYPE,
        id_doc_type_in        IN prof_doc.id_doc_type%TYPE DEFAULT NULL,
        id_professional_in    IN prof_doc.id_professional%TYPE DEFAULT NULL,
        value_in              IN prof_doc.value%TYPE DEFAULT NULL,
        id_institution_in     IN prof_doc.id_institution%TYPE DEFAULT NULL,
        local_emited_in       IN prof_doc.local_emited%TYPE DEFAULT NULL,
        dt_emited_tstz_in     IN prof_doc.dt_emited_tstz%TYPE DEFAULT NULL,
        dt_expire_tstz_in     IN prof_doc.dt_expire_tstz%TYPE DEFAULT NULL,
        create_user_in        IN prof_doc.create_user%TYPE DEFAULT NULL,
        create_time_in        IN prof_doc.create_time%TYPE DEFAULT NULL,
        create_institution_in IN prof_doc.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN prof_doc.update_user%TYPE DEFAULT NULL,
        update_time_in        IN prof_doc.update_time%TYPE DEFAULT NULL,
        update_institution_in IN prof_doc.update_institution%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN prof_doc%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN prof_doc%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN prof_doc_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN prof_doc_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Return next primary key value using the named sequence
    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN prof_doc.id_prof_doc%TYPE;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_doc_type_in        IN prof_doc.id_doc_type%TYPE DEFAULT NULL,
        id_professional_in    IN prof_doc.id_professional%TYPE DEFAULT NULL,
        value_in              IN prof_doc.value%TYPE DEFAULT NULL,
        id_institution_in     IN prof_doc.id_institution%TYPE DEFAULT NULL,
        local_emited_in       IN prof_doc.local_emited%TYPE DEFAULT NULL,
        dt_emited_tstz_in     IN prof_doc.dt_emited_tstz%TYPE DEFAULT NULL,
        dt_expire_tstz_in     IN prof_doc.dt_expire_tstz%TYPE DEFAULT NULL,
        create_user_in        IN prof_doc.create_user%TYPE DEFAULT NULL,
        create_time_in        IN prof_doc.create_time%TYPE DEFAULT NULL,
        create_institution_in IN prof_doc.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN prof_doc.update_user%TYPE DEFAULT NULL,
        update_time_in        IN prof_doc.update_time%TYPE DEFAULT NULL,
        update_institution_in IN prof_doc.update_institution%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_doc_type_in        IN prof_doc.id_doc_type%TYPE DEFAULT NULL,
        id_professional_in    IN prof_doc.id_professional%TYPE DEFAULT NULL,
        value_in              IN prof_doc.value%TYPE DEFAULT NULL,
        id_institution_in     IN prof_doc.id_institution%TYPE DEFAULT NULL,
        local_emited_in       IN prof_doc.local_emited%TYPE DEFAULT NULL,
        dt_emited_tstz_in     IN prof_doc.dt_emited_tstz%TYPE DEFAULT NULL,
        dt_expire_tstz_in     IN prof_doc.dt_expire_tstz%TYPE DEFAULT NULL,
        create_user_in        IN prof_doc.create_user%TYPE DEFAULT NULL,
        create_time_in        IN prof_doc.create_time%TYPE DEFAULT NULL,
        create_institution_in IN prof_doc.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN prof_doc.update_user%TYPE DEFAULT NULL,
        update_time_in        IN prof_doc.update_time%TYPE DEFAULT NULL,
        update_institution_in IN prof_doc.update_institution%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_doc_type_in        IN prof_doc.id_doc_type%TYPE DEFAULT NULL,
        id_professional_in    IN prof_doc.id_professional%TYPE DEFAULT NULL,
        value_in              IN prof_doc.value%TYPE DEFAULT NULL,
        id_institution_in     IN prof_doc.id_institution%TYPE DEFAULT NULL,
        local_emited_in       IN prof_doc.local_emited%TYPE DEFAULT NULL,
        dt_emited_tstz_in     IN prof_doc.dt_emited_tstz%TYPE DEFAULT NULL,
        dt_expire_tstz_in     IN prof_doc.dt_expire_tstz%TYPE DEFAULT NULL,
        create_user_in        IN prof_doc.create_user%TYPE DEFAULT NULL,
        create_time_in        IN prof_doc.create_time%TYPE DEFAULT NULL,
        create_institution_in IN prof_doc.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN prof_doc.update_user%TYPE DEFAULT NULL,
        update_time_in        IN prof_doc.update_time%TYPE DEFAULT NULL,
        update_institution_in IN prof_doc.update_institution%TYPE DEFAULT NULL,
        id_prof_doc_out       IN OUT prof_doc.id_prof_doc%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_doc_type_in        IN prof_doc.id_doc_type%TYPE DEFAULT NULL,
        id_professional_in    IN prof_doc.id_professional%TYPE DEFAULT NULL,
        value_in              IN prof_doc.value%TYPE DEFAULT NULL,
        id_institution_in     IN prof_doc.id_institution%TYPE DEFAULT NULL,
        local_emited_in       IN prof_doc.local_emited%TYPE DEFAULT NULL,
        dt_emited_tstz_in     IN prof_doc.dt_emited_tstz%TYPE DEFAULT NULL,
        dt_expire_tstz_in     IN prof_doc.dt_expire_tstz%TYPE DEFAULT NULL,
        create_user_in        IN prof_doc.create_user%TYPE DEFAULT NULL,
        create_time_in        IN prof_doc.create_time%TYPE DEFAULT NULL,
        create_institution_in IN prof_doc.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN prof_doc.update_user%TYPE DEFAULT NULL,
        update_time_in        IN prof_doc.update_time%TYPE DEFAULT NULL,
        update_institution_in IN prof_doc.update_institution%TYPE DEFAULT NULL,
        id_prof_doc_out       IN OUT prof_doc.id_prof_doc%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_doc_type_in        IN prof_doc.id_doc_type%TYPE DEFAULT NULL,
        id_professional_in    IN prof_doc.id_professional%TYPE DEFAULT NULL,
        value_in              IN prof_doc.value%TYPE DEFAULT NULL,
        id_institution_in     IN prof_doc.id_institution%TYPE DEFAULT NULL,
        local_emited_in       IN prof_doc.local_emited%TYPE DEFAULT NULL,
        dt_emited_tstz_in     IN prof_doc.dt_emited_tstz%TYPE DEFAULT NULL,
        dt_expire_tstz_in     IN prof_doc.dt_expire_tstz%TYPE DEFAULT NULL,
        create_user_in        IN prof_doc.create_user%TYPE DEFAULT NULL,
        create_time_in        IN prof_doc.create_time%TYPE DEFAULT NULL,
        create_institution_in IN prof_doc.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN prof_doc.update_user%TYPE DEFAULT NULL,
        update_time_in        IN prof_doc.update_time%TYPE DEFAULT NULL,
        update_institution_in IN prof_doc.update_institution%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN prof_doc.id_prof_doc%TYPE;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_doc_type_in        IN prof_doc.id_doc_type%TYPE DEFAULT NULL,
        id_professional_in    IN prof_doc.id_professional%TYPE DEFAULT NULL,
        value_in              IN prof_doc.value%TYPE DEFAULT NULL,
        id_institution_in     IN prof_doc.id_institution%TYPE DEFAULT NULL,
        local_emited_in       IN prof_doc.local_emited%TYPE DEFAULT NULL,
        dt_emited_tstz_in     IN prof_doc.dt_emited_tstz%TYPE DEFAULT NULL,
        dt_expire_tstz_in     IN prof_doc.dt_expire_tstz%TYPE DEFAULT NULL,
        create_user_in        IN prof_doc.create_user%TYPE DEFAULT NULL,
        create_time_in        IN prof_doc.create_time%TYPE DEFAULT NULL,
        create_institution_in IN prof_doc.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN prof_doc.update_user%TYPE DEFAULT NULL,
        update_time_in        IN prof_doc.update_time%TYPE DEFAULT NULL,
        update_institution_in IN prof_doc.update_institution%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN prof_doc.id_prof_doc%TYPE;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_prof_doc_in         IN prof_doc.id_prof_doc%TYPE,
        id_doc_type_in         IN prof_doc.id_doc_type%TYPE DEFAULT NULL,
        id_doc_type_nin        IN BOOLEAN := TRUE,
        id_professional_in     IN prof_doc.id_professional%TYPE DEFAULT NULL,
        id_professional_nin    IN BOOLEAN := TRUE,
        value_in               IN prof_doc.value%TYPE DEFAULT NULL,
        value_nin              IN BOOLEAN := TRUE,
        id_institution_in      IN prof_doc.id_institution%TYPE DEFAULT NULL,
        id_institution_nin     IN BOOLEAN := TRUE,
        local_emited_in        IN prof_doc.local_emited%TYPE DEFAULT NULL,
        local_emited_nin       IN BOOLEAN := TRUE,
        dt_emited_tstz_in      IN prof_doc.dt_emited_tstz%TYPE DEFAULT NULL,
        dt_emited_tstz_nin     IN BOOLEAN := TRUE,
        dt_expire_tstz_in      IN prof_doc.dt_expire_tstz%TYPE DEFAULT NULL,
        dt_expire_tstz_nin     IN BOOLEAN := TRUE,
        create_user_in         IN prof_doc.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN prof_doc.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN prof_doc.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN prof_doc.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN prof_doc.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN prof_doc.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               IN OUT table_varchar
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_prof_doc_in         IN prof_doc.id_prof_doc%TYPE,
        id_doc_type_in         IN prof_doc.id_doc_type%TYPE DEFAULT NULL,
        id_doc_type_nin        IN BOOLEAN := TRUE,
        id_professional_in     IN prof_doc.id_professional%TYPE DEFAULT NULL,
        id_professional_nin    IN BOOLEAN := TRUE,
        value_in               IN prof_doc.value%TYPE DEFAULT NULL,
        value_nin              IN BOOLEAN := TRUE,
        id_institution_in      IN prof_doc.id_institution%TYPE DEFAULT NULL,
        id_institution_nin     IN BOOLEAN := TRUE,
        local_emited_in        IN prof_doc.local_emited%TYPE DEFAULT NULL,
        local_emited_nin       IN BOOLEAN := TRUE,
        dt_emited_tstz_in      IN prof_doc.dt_emited_tstz%TYPE DEFAULT NULL,
        dt_emited_tstz_nin     IN BOOLEAN := TRUE,
        dt_expire_tstz_in      IN prof_doc.dt_expire_tstz%TYPE DEFAULT NULL,
        dt_expire_tstz_nin     IN BOOLEAN := TRUE,
        create_user_in         IN prof_doc.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN prof_doc.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN prof_doc.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN prof_doc.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN prof_doc.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN prof_doc.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        handle_error_in        IN BOOLEAN := TRUE
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_doc_type_in         IN prof_doc.id_doc_type%TYPE DEFAULT NULL,
        id_doc_type_nin        IN BOOLEAN := TRUE,
        id_professional_in     IN prof_doc.id_professional%TYPE DEFAULT NULL,
        id_professional_nin    IN BOOLEAN := TRUE,
        value_in               IN prof_doc.value%TYPE DEFAULT NULL,
        value_nin              IN BOOLEAN := TRUE,
        id_institution_in      IN prof_doc.id_institution%TYPE DEFAULT NULL,
        id_institution_nin     IN BOOLEAN := TRUE,
        local_emited_in        IN prof_doc.local_emited%TYPE DEFAULT NULL,
        local_emited_nin       IN BOOLEAN := TRUE,
        dt_emited_tstz_in      IN prof_doc.dt_emited_tstz%TYPE DEFAULT NULL,
        dt_emited_tstz_nin     IN BOOLEAN := TRUE,
        dt_expire_tstz_in      IN prof_doc.dt_expire_tstz%TYPE DEFAULT NULL,
        dt_expire_tstz_nin     IN BOOLEAN := TRUE,
        create_user_in         IN prof_doc.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN prof_doc.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN prof_doc.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN prof_doc.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN prof_doc.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN prof_doc.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        where_in               IN VARCHAR2,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               IN OUT table_varchar
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_doc_type_in         IN prof_doc.id_doc_type%TYPE DEFAULT NULL,
        id_doc_type_nin        IN BOOLEAN := TRUE,
        id_professional_in     IN prof_doc.id_professional%TYPE DEFAULT NULL,
        id_professional_nin    IN BOOLEAN := TRUE,
        value_in               IN prof_doc.value%TYPE DEFAULT NULL,
        value_nin              IN BOOLEAN := TRUE,
        id_institution_in      IN prof_doc.id_institution%TYPE DEFAULT NULL,
        id_institution_nin     IN BOOLEAN := TRUE,
        local_emited_in        IN prof_doc.local_emited%TYPE DEFAULT NULL,
        local_emited_nin       IN BOOLEAN := TRUE,
        dt_emited_tstz_in      IN prof_doc.dt_emited_tstz%TYPE DEFAULT NULL,
        dt_emited_tstz_nin     IN BOOLEAN := TRUE,
        dt_expire_tstz_in      IN prof_doc.dt_expire_tstz%TYPE DEFAULT NULL,
        dt_expire_tstz_nin     IN BOOLEAN := TRUE,
        create_user_in         IN prof_doc.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN prof_doc.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN prof_doc.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN prof_doc.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN prof_doc.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN prof_doc.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        where_in               IN VARCHAR2,
        handle_error_in        IN BOOLEAN := TRUE
    );

    --Update/insert with columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_prof_doc_in        IN prof_doc.id_prof_doc%TYPE,
        id_doc_type_in        IN prof_doc.id_doc_type%TYPE DEFAULT NULL,
        id_professional_in    IN prof_doc.id_professional%TYPE DEFAULT NULL,
        value_in              IN prof_doc.value%TYPE DEFAULT NULL,
        id_institution_in     IN prof_doc.id_institution%TYPE DEFAULT NULL,
        local_emited_in       IN prof_doc.local_emited%TYPE DEFAULT NULL,
        dt_emited_tstz_in     IN prof_doc.dt_emited_tstz%TYPE DEFAULT NULL,
        dt_expire_tstz_in     IN prof_doc.dt_expire_tstz%TYPE DEFAULT NULL,
        create_user_in        IN prof_doc.create_user%TYPE DEFAULT NULL,
        create_time_in        IN prof_doc.create_time%TYPE DEFAULT NULL,
        create_institution_in IN prof_doc.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN prof_doc.update_user%TYPE DEFAULT NULL,
        update_time_in        IN prof_doc.update_time%TYPE DEFAULT NULL,
        update_institution_in IN prof_doc.update_institution%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              IN OUT table_varchar
    );

    --Update/insert with columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_prof_doc_in        IN prof_doc.id_prof_doc%TYPE,
        id_doc_type_in        IN prof_doc.id_doc_type%TYPE DEFAULT NULL,
        id_professional_in    IN prof_doc.id_professional%TYPE DEFAULT NULL,
        value_in              IN prof_doc.value%TYPE DEFAULT NULL,
        id_institution_in     IN prof_doc.id_institution%TYPE DEFAULT NULL,
        local_emited_in       IN prof_doc.local_emited%TYPE DEFAULT NULL,
        dt_emited_tstz_in     IN prof_doc.dt_emited_tstz%TYPE DEFAULT NULL,
        dt_expire_tstz_in     IN prof_doc.dt_expire_tstz%TYPE DEFAULT NULL,
        create_user_in        IN prof_doc.create_user%TYPE DEFAULT NULL,
        create_time_in        IN prof_doc.create_time%TYPE DEFAULT NULL,
        create_institution_in IN prof_doc.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN prof_doc.update_user%TYPE DEFAULT NULL,
        update_time_in        IN prof_doc.update_time%TYPE DEFAULT NULL,
        update_institution_in IN prof_doc.update_institution%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE
    );

    --Update record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN prof_doc%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    --Update record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN prof_doc%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    --Update collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN prof_doc_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    --Update collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN prof_doc_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    --increment column value
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_prof_doc_in  IN prof_doc.id_prof_doc%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_prof_doc_in  IN prof_doc.id_prof_doc%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PDC_INST_FK foreign key value
    PROCEDURE del_pdc_inst_fk
    (
        id_institution_in IN prof_doc.id_institution%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    );

    -- Delete all rows for this PDC_PROF_FK foreign key value
    PROCEDURE del_pdc_prof_fk
    (
        id_professional_in IN prof_doc.id_professional%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    -- Delete all rows for this PDC_INST_FK foreign key value
    PROCEDURE del_pdc_inst_fk
    (
        id_institution_in IN prof_doc.id_institution%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Delete all rows for this PDC_PROF_FK foreign key value
    PROCEDURE del_pdc_prof_fk
    (
        id_professional_in IN prof_doc.id_professional%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(prof_doc_inout IN OUT prof_doc%ROWTYPE);

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN prof_doc%ROWTYPE;

    -- Get data rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN prof_doc_tc;

    -- Get data rowid pragma autonomous transaccion
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN prof_doc_tc;

END ts_prof_doc;
/
