/*-- Last Change Revision: $Rev: 2029078 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:49:39 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE ts_analysis_result_send
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: Julho 7, 2014 15:14:46
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on "ANALYSIS_RESULT_SEND"
    TYPE analysis_result_send_tc IS TABLE OF analysis_result_send%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE analysis_result_send_ntt IS TABLE OF analysis_result_send%ROWTYPE;
    TYPE analysis_result_send_vat IS VARRAY(100) OF analysis_result_send%ROWTYPE;

    -- Same type structure, with a static name.
    TYPE aat IS TABLE OF analysis_result_send%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE ntt IS TABLE OF analysis_result_send%ROWTYPE;
    TYPE vat IS VARRAY(100) OF analysis_result_send%ROWTYPE;

    -- Column Collection based on column "ID_ANALYSIS_RESULT_SEND"
    TYPE id_analysis_result_send_cc IS TABLE OF analysis_result_send.id_analysis_result_send%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_ANALYSIS_REQ_DET"
    TYPE id_analysis_req_det_cc IS TABLE OF analysis_result_send.id_analysis_req_det%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROF_CC"
    TYPE id_prof_cc_cc IS TABLE OF analysis_result_send.id_prof_cc%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROF_BCC"
    TYPE id_prof_bcc_cc IS TABLE OF analysis_result_send.id_prof_bcc%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "EMAIL_CC"
    TYPE email_cc_cc IS TABLE OF analysis_result_send.email_cc%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "EMAIL_BCC"
    TYPE email_bcc_cc IS TABLE OF analysis_result_send.email_bcc%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_STATUS"
    TYPE flg_status_cc IS TABLE OF analysis_result_send.flg_status%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_USER"
    TYPE create_user_cc IS TABLE OF analysis_result_send.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_TIME"
    TYPE create_time_cc IS TABLE OF analysis_result_send.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_INSTITUTION"
    TYPE create_institution_cc IS TABLE OF analysis_result_send.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_USER"
    TYPE update_user_cc IS TABLE OF analysis_result_send.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_TIME"
    TYPE update_time_cc IS TABLE OF analysis_result_send.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_INSTITUTION"
    TYPE update_institution_cc IS TABLE OF analysis_result_send.update_institution%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present
    PROCEDURE ins
    (
        id_analysis_result_send_in IN analysis_result_send.id_analysis_result_send%TYPE,
        id_analysis_req_det_in     IN analysis_result_send.id_analysis_req_det%TYPE DEFAULT NULL,
        id_prof_cc_in              IN analysis_result_send.id_prof_cc%TYPE DEFAULT NULL,
        id_prof_bcc_in             IN analysis_result_send.id_prof_bcc%TYPE DEFAULT NULL,
        email_cc_in                IN analysis_result_send.email_cc%TYPE DEFAULT NULL,
        email_bcc_in               IN analysis_result_send.email_bcc%TYPE DEFAULT NULL,
        flg_status_in              IN analysis_result_send.flg_status%TYPE DEFAULT NULL,
        create_user_in             IN analysis_result_send.create_user%TYPE DEFAULT NULL,
        create_time_in             IN analysis_result_send.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN analysis_result_send.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN analysis_result_send.update_user%TYPE DEFAULT NULL,
        update_time_in             IN analysis_result_send.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN analysis_result_send.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_analysis_result_send_in IN analysis_result_send.id_analysis_result_send%TYPE,
        id_analysis_req_det_in     IN analysis_result_send.id_analysis_req_det%TYPE DEFAULT NULL,
        id_prof_cc_in              IN analysis_result_send.id_prof_cc%TYPE DEFAULT NULL,
        id_prof_bcc_in             IN analysis_result_send.id_prof_bcc%TYPE DEFAULT NULL,
        email_cc_in                IN analysis_result_send.email_cc%TYPE DEFAULT NULL,
        email_bcc_in               IN analysis_result_send.email_bcc%TYPE DEFAULT NULL,
        flg_status_in              IN analysis_result_send.flg_status%TYPE DEFAULT NULL,
        create_user_in             IN analysis_result_send.create_user%TYPE DEFAULT NULL,
        create_time_in             IN analysis_result_send.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN analysis_result_send.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN analysis_result_send.update_user%TYPE DEFAULT NULL,
        update_time_in             IN analysis_result_send.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN analysis_result_send.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record.
    -- Specify whether or not a primary key value should be generated.
    PROCEDURE ins
    (
        rec_in          IN analysis_result_send%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rec_in          IN analysis_result_send%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers.
    PROCEDURE ins
    (
        rows_in         IN analysis_result_send_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rows_in         IN analysis_result_send_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Return next primary key value using the named sequence.
    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN analysis_result_send.id_analysis_result_send%TYPE;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_analysis_req_det_in IN analysis_result_send.id_analysis_req_det%TYPE DEFAULT NULL,
        id_prof_cc_in          IN analysis_result_send.id_prof_cc%TYPE DEFAULT NULL,
        id_prof_bcc_in         IN analysis_result_send.id_prof_bcc%TYPE DEFAULT NULL,
        email_cc_in            IN analysis_result_send.email_cc%TYPE DEFAULT NULL,
        email_bcc_in           IN analysis_result_send.email_bcc%TYPE DEFAULT NULL,
        flg_status_in          IN analysis_result_send.flg_status%TYPE DEFAULT NULL,
        create_user_in         IN analysis_result_send.create_user%TYPE DEFAULT NULL,
        create_time_in         IN analysis_result_send.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN analysis_result_send.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN analysis_result_send.update_user%TYPE DEFAULT NULL,
        update_time_in         IN analysis_result_send.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN analysis_result_send.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_analysis_req_det_in IN analysis_result_send.id_analysis_req_det%TYPE DEFAULT NULL,
        id_prof_cc_in          IN analysis_result_send.id_prof_cc%TYPE DEFAULT NULL,
        id_prof_bcc_in         IN analysis_result_send.id_prof_bcc%TYPE DEFAULT NULL,
        email_cc_in            IN analysis_result_send.email_cc%TYPE DEFAULT NULL,
        email_bcc_in           IN analysis_result_send.email_bcc%TYPE DEFAULT NULL,
        flg_status_in          IN analysis_result_send.flg_status%TYPE DEFAULT NULL,
        create_user_in         IN analysis_result_send.create_user%TYPE DEFAULT NULL,
        create_time_in         IN analysis_result_send.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN analysis_result_send.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN analysis_result_send.update_user%TYPE DEFAULT NULL,
        update_time_in         IN analysis_result_send.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN analysis_result_send.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_analysis_req_det_in      IN analysis_result_send.id_analysis_req_det%TYPE DEFAULT NULL,
        id_prof_cc_in               IN analysis_result_send.id_prof_cc%TYPE DEFAULT NULL,
        id_prof_bcc_in              IN analysis_result_send.id_prof_bcc%TYPE DEFAULT NULL,
        email_cc_in                 IN analysis_result_send.email_cc%TYPE DEFAULT NULL,
        email_bcc_in                IN analysis_result_send.email_bcc%TYPE DEFAULT NULL,
        flg_status_in               IN analysis_result_send.flg_status%TYPE DEFAULT NULL,
        create_user_in              IN analysis_result_send.create_user%TYPE DEFAULT NULL,
        create_time_in              IN analysis_result_send.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN analysis_result_send.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN analysis_result_send.update_user%TYPE DEFAULT NULL,
        update_time_in              IN analysis_result_send.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN analysis_result_send.update_institution%TYPE DEFAULT NULL,
        id_analysis_result_send_out IN OUT analysis_result_send.id_analysis_result_send%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_analysis_req_det_in      IN analysis_result_send.id_analysis_req_det%TYPE DEFAULT NULL,
        id_prof_cc_in               IN analysis_result_send.id_prof_cc%TYPE DEFAULT NULL,
        id_prof_bcc_in              IN analysis_result_send.id_prof_bcc%TYPE DEFAULT NULL,
        email_cc_in                 IN analysis_result_send.email_cc%TYPE DEFAULT NULL,
        email_bcc_in                IN analysis_result_send.email_bcc%TYPE DEFAULT NULL,
        flg_status_in               IN analysis_result_send.flg_status%TYPE DEFAULT NULL,
        create_user_in              IN analysis_result_send.create_user%TYPE DEFAULT NULL,
        create_time_in              IN analysis_result_send.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN analysis_result_send.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN analysis_result_send.update_user%TYPE DEFAULT NULL,
        update_time_in              IN analysis_result_send.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN analysis_result_send.update_institution%TYPE DEFAULT NULL,
        id_analysis_result_send_out IN OUT analysis_result_send.id_analysis_result_send%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_analysis_req_det_in IN analysis_result_send.id_analysis_req_det%TYPE DEFAULT NULL,
        id_prof_cc_in          IN analysis_result_send.id_prof_cc%TYPE DEFAULT NULL,
        id_prof_bcc_in         IN analysis_result_send.id_prof_bcc%TYPE DEFAULT NULL,
        email_cc_in            IN analysis_result_send.email_cc%TYPE DEFAULT NULL,
        email_bcc_in           IN analysis_result_send.email_bcc%TYPE DEFAULT NULL,
        flg_status_in          IN analysis_result_send.flg_status%TYPE DEFAULT NULL,
        create_user_in         IN analysis_result_send.create_user%TYPE DEFAULT NULL,
        create_time_in         IN analysis_result_send.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN analysis_result_send.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN analysis_result_send.update_user%TYPE DEFAULT NULL,
        update_time_in         IN analysis_result_send.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN analysis_result_send.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN analysis_result_send.id_analysis_result_send%TYPE;

    FUNCTION ins
    (
        id_analysis_req_det_in IN analysis_result_send.id_analysis_req_det%TYPE DEFAULT NULL,
        id_prof_cc_in          IN analysis_result_send.id_prof_cc%TYPE DEFAULT NULL,
        id_prof_bcc_in         IN analysis_result_send.id_prof_bcc%TYPE DEFAULT NULL,
        email_cc_in            IN analysis_result_send.email_cc%TYPE DEFAULT NULL,
        email_bcc_in           IN analysis_result_send.email_bcc%TYPE DEFAULT NULL,
        flg_status_in          IN analysis_result_send.flg_status%TYPE DEFAULT NULL,
        create_user_in         IN analysis_result_send.create_user%TYPE DEFAULT NULL,
        create_time_in         IN analysis_result_send.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN analysis_result_send.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN analysis_result_send.update_user%TYPE DEFAULT NULL,
        update_time_in         IN analysis_result_send.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN analysis_result_send.update_institution%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN analysis_result_send.id_analysis_result_send%TYPE;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.

    PROCEDURE upd
    (
        id_analysis_result_send_in IN analysis_result_send.id_analysis_result_send%TYPE,
        id_analysis_req_det_in     IN analysis_result_send.id_analysis_req_det%TYPE DEFAULT NULL,
        id_analysis_req_det_nin    IN BOOLEAN := TRUE,
        id_prof_cc_in              IN analysis_result_send.id_prof_cc%TYPE DEFAULT NULL,
        id_prof_cc_nin             IN BOOLEAN := TRUE,
        id_prof_bcc_in             IN analysis_result_send.id_prof_bcc%TYPE DEFAULT NULL,
        id_prof_bcc_nin            IN BOOLEAN := TRUE,
        email_cc_in                IN analysis_result_send.email_cc%TYPE DEFAULT NULL,
        email_cc_nin               IN BOOLEAN := TRUE,
        email_bcc_in               IN analysis_result_send.email_bcc%TYPE DEFAULT NULL,
        email_bcc_nin              IN BOOLEAN := TRUE,
        flg_status_in              IN analysis_result_send.flg_status%TYPE DEFAULT NULL,
        flg_status_nin             IN BOOLEAN := TRUE,
        create_user_in             IN analysis_result_send.create_user%TYPE DEFAULT NULL,
        create_user_nin            IN BOOLEAN := TRUE,
        create_time_in             IN analysis_result_send.create_time%TYPE DEFAULT NULL,
        create_time_nin            IN BOOLEAN := TRUE,
        create_institution_in      IN analysis_result_send.create_institution%TYPE DEFAULT NULL,
        create_institution_nin     IN BOOLEAN := TRUE,
        update_user_in             IN analysis_result_send.update_user%TYPE DEFAULT NULL,
        update_user_nin            IN BOOLEAN := TRUE,
        update_time_in             IN analysis_result_send.update_time%TYPE DEFAULT NULL,
        update_time_nin            IN BOOLEAN := TRUE,
        update_institution_in      IN analysis_result_send.update_institution%TYPE DEFAULT NULL,
        update_institution_nin     IN BOOLEAN := TRUE,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_analysis_result_send_in IN analysis_result_send.id_analysis_result_send%TYPE,
        id_analysis_req_det_in     IN analysis_result_send.id_analysis_req_det%TYPE DEFAULT NULL,
        id_analysis_req_det_nin    IN BOOLEAN := TRUE,
        id_prof_cc_in              IN analysis_result_send.id_prof_cc%TYPE DEFAULT NULL,
        id_prof_cc_nin             IN BOOLEAN := TRUE,
        id_prof_bcc_in             IN analysis_result_send.id_prof_bcc%TYPE DEFAULT NULL,
        id_prof_bcc_nin            IN BOOLEAN := TRUE,
        email_cc_in                IN analysis_result_send.email_cc%TYPE DEFAULT NULL,
        email_cc_nin               IN BOOLEAN := TRUE,
        email_bcc_in               IN analysis_result_send.email_bcc%TYPE DEFAULT NULL,
        email_bcc_nin              IN BOOLEAN := TRUE,
        flg_status_in              IN analysis_result_send.flg_status%TYPE DEFAULT NULL,
        flg_status_nin             IN BOOLEAN := TRUE,
        create_user_in             IN analysis_result_send.create_user%TYPE DEFAULT NULL,
        create_user_nin            IN BOOLEAN := TRUE,
        create_time_in             IN analysis_result_send.create_time%TYPE DEFAULT NULL,
        create_time_nin            IN BOOLEAN := TRUE,
        create_institution_in      IN analysis_result_send.create_institution%TYPE DEFAULT NULL,
        create_institution_nin     IN BOOLEAN := TRUE,
        update_user_in             IN analysis_result_send.update_user%TYPE DEFAULT NULL,
        update_user_nin            IN BOOLEAN := TRUE,
        update_time_in             IN analysis_result_send.update_time%TYPE DEFAULT NULL,
        update_time_nin            IN BOOLEAN := TRUE,
        update_institution_in      IN analysis_result_send.update_institution%TYPE DEFAULT NULL,
        update_institution_nin     IN BOOLEAN := TRUE,
        handle_error_in            IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        id_analysis_req_det_in  IN analysis_result_send.id_analysis_req_det%TYPE DEFAULT NULL,
        id_analysis_req_det_nin IN BOOLEAN := TRUE,
        id_prof_cc_in           IN analysis_result_send.id_prof_cc%TYPE DEFAULT NULL,
        id_prof_cc_nin          IN BOOLEAN := TRUE,
        id_prof_bcc_in          IN analysis_result_send.id_prof_bcc%TYPE DEFAULT NULL,
        id_prof_bcc_nin         IN BOOLEAN := TRUE,
        email_cc_in             IN analysis_result_send.email_cc%TYPE DEFAULT NULL,
        email_cc_nin            IN BOOLEAN := TRUE,
        email_bcc_in            IN analysis_result_send.email_bcc%TYPE DEFAULT NULL,
        email_bcc_nin           IN BOOLEAN := TRUE,
        flg_status_in           IN analysis_result_send.flg_status%TYPE DEFAULT NULL,
        flg_status_nin          IN BOOLEAN := TRUE,
        create_user_in          IN analysis_result_send.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN analysis_result_send.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN analysis_result_send.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN analysis_result_send.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN analysis_result_send.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN analysis_result_send.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        where_in                VARCHAR2,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_analysis_req_det_in  IN analysis_result_send.id_analysis_req_det%TYPE DEFAULT NULL,
        id_analysis_req_det_nin IN BOOLEAN := TRUE,
        id_prof_cc_in           IN analysis_result_send.id_prof_cc%TYPE DEFAULT NULL,
        id_prof_cc_nin          IN BOOLEAN := TRUE,
        id_prof_bcc_in          IN analysis_result_send.id_prof_bcc%TYPE DEFAULT NULL,
        id_prof_bcc_nin         IN BOOLEAN := TRUE,
        email_cc_in             IN analysis_result_send.email_cc%TYPE DEFAULT NULL,
        email_cc_nin            IN BOOLEAN := TRUE,
        email_bcc_in            IN analysis_result_send.email_bcc%TYPE DEFAULT NULL,
        email_bcc_nin           IN BOOLEAN := TRUE,
        flg_status_in           IN analysis_result_send.flg_status%TYPE DEFAULT NULL,
        flg_status_nin          IN BOOLEAN := TRUE,
        create_user_in          IN analysis_result_send.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN analysis_result_send.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN analysis_result_send.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN analysis_result_send.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN analysis_result_send.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN analysis_result_send.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        where_in                VARCHAR2,
        handle_error_in         IN BOOLEAN := TRUE
    );

    PROCEDURE upd_ins
    (
        id_analysis_result_send_in IN analysis_result_send.id_analysis_result_send%TYPE,
        id_analysis_req_det_in     IN analysis_result_send.id_analysis_req_det%TYPE DEFAULT NULL,
        id_prof_cc_in              IN analysis_result_send.id_prof_cc%TYPE DEFAULT NULL,
        id_prof_bcc_in             IN analysis_result_send.id_prof_bcc%TYPE DEFAULT NULL,
        email_cc_in                IN analysis_result_send.email_cc%TYPE DEFAULT NULL,
        email_bcc_in               IN analysis_result_send.email_bcc%TYPE DEFAULT NULL,
        flg_status_in              IN analysis_result_send.flg_status%TYPE DEFAULT NULL,
        create_user_in             IN analysis_result_send.create_user%TYPE DEFAULT NULL,
        create_time_in             IN analysis_result_send.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN analysis_result_send.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN analysis_result_send.update_user%TYPE DEFAULT NULL,
        update_time_in             IN analysis_result_send.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN analysis_result_send.update_institution%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT table_varchar
    );

    PROCEDURE upd_ins
    (
        id_analysis_result_send_in IN analysis_result_send.id_analysis_result_send%TYPE,
        id_analysis_req_det_in     IN analysis_result_send.id_analysis_req_det%TYPE DEFAULT NULL,
        id_prof_cc_in              IN analysis_result_send.id_prof_cc%TYPE DEFAULT NULL,
        id_prof_bcc_in             IN analysis_result_send.id_prof_bcc%TYPE DEFAULT NULL,
        email_cc_in                IN analysis_result_send.email_cc%TYPE DEFAULT NULL,
        email_bcc_in               IN analysis_result_send.email_bcc%TYPE DEFAULT NULL,
        flg_status_in              IN analysis_result_send.flg_status%TYPE DEFAULT NULL,
        create_user_in             IN analysis_result_send.create_user%TYPE DEFAULT NULL,
        create_time_in             IN analysis_result_send.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN analysis_result_send.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN analysis_result_send.update_user%TYPE DEFAULT NULL,
        update_time_in             IN analysis_result_send.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN analysis_result_send.update_institution%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        rec_in          IN analysis_result_send%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    PROCEDURE upd
    (
        rec_in          IN analysis_result_send%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        col_in            IN analysis_result_send_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    PROCEDURE upd
    (
        col_in            IN analysis_result_send_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_analysis_result_send_in IN analysis_result_send.id_analysis_result_send%TYPE,
        handle_error_in            IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_analysis_result_send_in IN analysis_result_send.id_analysis_result_send%TYPE,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT table_varchar
    );

    -- Delete all rows for primary key column ID_ANALYSIS_RESULT_SEND
    PROCEDURE del_id_analysis_result_send
    (
        id_analysis_result_send_in IN analysis_result_send.id_analysis_result_send%TYPE,
        handle_error_in            IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_ANALYSIS_RESULT_SEND
    PROCEDURE del_id_analysis_result_send
    (
        id_analysis_result_send_in IN analysis_result_send.id_analysis_result_send%TYPE,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT table_varchar
    );

    -- Delete all rows for this ARS_ARD_FK foreign key value
    PROCEDURE del_ars_ard_fk
    (
        id_analysis_req_det_in IN analysis_result_send.id_analysis_req_det%TYPE,
        handle_error_in        IN BOOLEAN := TRUE
    );

    -- Delete all rows for this ARS_ARD_FK foreign key value
    PROCEDURE del_ars_ard_fk
    (
        id_analysis_req_det_in IN analysis_result_send.id_analysis_req_det%TYPE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    );

    -- Delete all rows for this ARS_PL_FK foreign key value
    PROCEDURE del_ars_pl_fk
    (
        id_prof_cc_in   IN analysis_result_send.id_prof_cc%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this ARS_PL_FK foreign key value
    PROCEDURE del_ars_pl_fk
    (
        id_prof_cc_in   IN analysis_result_send.id_prof_cc%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this ARS_PL_FK2 foreign key value
    PROCEDURE del_ars_pl_fk2
    (
        id_prof_bcc_in  IN analysis_result_send.id_prof_bcc%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this ARS_PL_FK2 foreign key value
    PROCEDURE del_ars_pl_fk2
    (
        id_prof_bcc_in  IN analysis_result_send.id_prof_bcc%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(analysis_result_send_inout IN OUT analysis_result_send%ROWTYPE);

    FUNCTION initrec RETURN analysis_result_send%ROWTYPE;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN analysis_result_send_tc;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN analysis_result_send_tc;

END ts_analysis_result_send;
/
