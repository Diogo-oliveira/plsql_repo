/*-- Last Change Revision: $Rev: 2029137 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:49:58 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE TS_EPIS_DIET
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: October 16, 2008 18:11:28
| Created By: ALERT
*/
IS

  -- Collection of %ROWTYPE records based on "EPIS_DIET"
     TYPE EPIS_DIET_tc IS TABLE OF EPIS_DIET%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE epis_diet_ntt IS TABLE OF EPIS_DIET%ROWTYPE;
     TYPE epis_diet_vat IS VARRAY(100) OF EPIS_DIET%ROWTYPE;

  -- Same type structure, with a static name.
     TYPE aat IS TABLE OF EPIS_DIET%ROWTYPE INDEX BY BINARY_INTEGER;
     TYPE ntt IS TABLE OF EPIS_DIET%ROWTYPE;
     TYPE vat IS VARRAY(100) OF EPIS_DIET%ROWTYPE;

   -- Column Collection based on column "ID_EPIS_DIET"
   TYPE ID_EPIS_DIET_cc IS TABLE OF EPIS_DIET.ID_EPIS_DIET%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_DIET"
   TYPE ID_DIET_cc IS TABLE OF EPIS_DIET.ID_DIET%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_EPISODE"
   TYPE ID_EPISODE_cc IS TABLE OF EPIS_DIET.ID_EPISODE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PROFESSIONAL"
   TYPE ID_PROFESSIONAL_cc IS TABLE OF EPIS_DIET.ID_PROFESSIONAL%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DESC_DIET"
   TYPE DESC_DIET_cc IS TABLE OF EPIS_DIET.DESC_DIET%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_STATUS"
   TYPE FLG_STATUS_cc IS TABLE OF EPIS_DIET.FLG_STATUS%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "NOTES"
   TYPE NOTES_cc IS TABLE OF EPIS_DIET.NOTES%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PROF_CANCEL"
   TYPE ID_PROF_CANCEL_cc IS TABLE OF EPIS_DIET.ID_PROF_CANCEL%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "NOTES_CANCEL"
   TYPE NOTES_CANCEL_cc IS TABLE OF EPIS_DIET.NOTES_CANCEL%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_PROF_INTER"
   TYPE ID_PROF_INTER_cc IS TABLE OF EPIS_DIET.ID_PROF_INTER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "NOTES_INTER"
   TYPE NOTES_INTER_cc IS TABLE OF EPIS_DIET.NOTES_INTER%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ID_DIET_SCHEDULE"
   TYPE ID_DIET_SCHEDULE_cc IS TABLE OF EPIS_DIET.ID_DIET_SCHEDULE%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "FLG_HELP"
   TYPE FLG_HELP_cc IS TABLE OF EPIS_DIET.FLG_HELP%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_CREATION_TSTZ"
   TYPE DT_CREATION_TSTZ_cc IS TABLE OF EPIS_DIET.DT_CREATION_TSTZ%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_CANCEL_TSTZ"
   TYPE DT_CANCEL_TSTZ_cc IS TABLE OF EPIS_DIET.DT_CANCEL_TSTZ%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_INTER_TSTZ"
   TYPE DT_INTER_TSTZ_cc IS TABLE OF EPIS_DIET.DT_INTER_TSTZ%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_INITIAL_TSTZ"
   TYPE DT_INITIAL_TSTZ_cc IS TABLE OF EPIS_DIET.DT_INITIAL_TSTZ%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DT_END_TSTZ"
   TYPE DT_END_TSTZ_cc IS TABLE OF EPIS_DIET.DT_END_TSTZ%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "ADW_LAST_UPDATE"
   TYPE ADW_LAST_UPDATE_cc IS TABLE OF EPIS_DIET.ADW_LAST_UPDATE%TYPE INDEX BY BINARY_INTEGER;

   -- Insert one row, providing primary key if present
   PROCEDURE ins (
      id_epis_diet_in IN EPIS_DIET.ID_EPIS_DIET%TYPE
      ,
      id_diet_in IN EPIS_DIET.ID_DIET%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_DIET.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_DIET.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      desc_diet_in IN EPIS_DIET.DESC_DIET%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_DIET.FLG_STATUS%TYPE DEFAULT NULL,
      notes_in IN EPIS_DIET.NOTES%TYPE DEFAULT NULL,
      id_prof_cancel_in IN EPIS_DIET.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN EPIS_DIET.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_prof_inter_in IN EPIS_DIET.ID_PROF_INTER%TYPE DEFAULT NULL,
      notes_inter_in IN EPIS_DIET.NOTES_INTER%TYPE DEFAULT NULL,
      id_diet_schedule_in IN EPIS_DIET.ID_DIET_SCHEDULE%TYPE DEFAULT NULL,
      flg_help_in IN EPIS_DIET.FLG_HELP%TYPE DEFAULT NULL,
      dt_creation_tstz_in IN EPIS_DIET.DT_CREATION_TSTZ%TYPE DEFAULT NULL,
      dt_cancel_tstz_in IN EPIS_DIET.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      dt_inter_tstz_in IN EPIS_DIET.DT_INTER_TSTZ%TYPE DEFAULT NULL,
      dt_initial_tstz_in IN EPIS_DIET.DT_INITIAL_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN EPIS_DIET.DT_END_TSTZ%TYPE DEFAULT NULL,
      adw_last_update_in IN EPIS_DIET.ADW_LAST_UPDATE%TYPE DEFAULT SYSDATE
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_epis_diet_in IN EPIS_DIET.ID_EPIS_DIET%TYPE
      ,
      id_diet_in IN EPIS_DIET.ID_DIET%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_DIET.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_DIET.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      desc_diet_in IN EPIS_DIET.DESC_DIET%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_DIET.FLG_STATUS%TYPE DEFAULT NULL,
      notes_in IN EPIS_DIET.NOTES%TYPE DEFAULT NULL,
      id_prof_cancel_in IN EPIS_DIET.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN EPIS_DIET.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_prof_inter_in IN EPIS_DIET.ID_PROF_INTER%TYPE DEFAULT NULL,
      notes_inter_in IN EPIS_DIET.NOTES_INTER%TYPE DEFAULT NULL,
      id_diet_schedule_in IN EPIS_DIET.ID_DIET_SCHEDULE%TYPE DEFAULT NULL,
      flg_help_in IN EPIS_DIET.FLG_HELP%TYPE DEFAULT NULL,
      dt_creation_tstz_in IN EPIS_DIET.DT_CREATION_TSTZ%TYPE DEFAULT NULL,
      dt_cancel_tstz_in IN EPIS_DIET.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      dt_inter_tstz_in IN EPIS_DIET.DT_INTER_TSTZ%TYPE DEFAULT NULL,
      dt_initial_tstz_in IN EPIS_DIET.DT_INITIAL_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN EPIS_DIET.DT_END_TSTZ%TYPE DEFAULT NULL,
      adw_last_update_in IN EPIS_DIET.ADW_LAST_UPDATE%TYPE DEFAULT SYSDATE
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );


   -- Insert a row based on a record.
   -- Specify whether or not a primary key value should be generated.
   PROCEDURE ins (
      rec_in IN EPIS_DIET%ROWTYPE
     ,gen_pky_in IN BOOLEAN DEFAULT FALSE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rec_in IN EPIS_DIET%ROWTYPE
     ,gen_pky_in IN BOOLEAN DEFAULT FALSE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Insert a collection of rows using FORALL; all primary key values
   -- must have already been generated, or are handled in triggers.
   PROCEDURE ins (
      rows_in IN EPIS_DIET_tc
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE ins (
      rows_in IN EPIS_DIET_tc
     ,handle_error_in IN BOOLEAN := TRUE
   );

   -- Return next primary key value using the named sequence.
     FUNCTION next_key (sequence_in IN VARCHAR2 := NULL) RETURN EPIS_DIET.ID_EPIS_DIET%TYPE;

   -- Insert one row, generating hidden primary key using a sequence
   PROCEDURE ins (
      id_diet_in IN EPIS_DIET.ID_DIET%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_DIET.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_DIET.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      desc_diet_in IN EPIS_DIET.DESC_DIET%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_DIET.FLG_STATUS%TYPE DEFAULT NULL,
      notes_in IN EPIS_DIET.NOTES%TYPE DEFAULT NULL,
      id_prof_cancel_in IN EPIS_DIET.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN EPIS_DIET.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_prof_inter_in IN EPIS_DIET.ID_PROF_INTER%TYPE DEFAULT NULL,
      notes_inter_in IN EPIS_DIET.NOTES_INTER%TYPE DEFAULT NULL,
      id_diet_schedule_in IN EPIS_DIET.ID_DIET_SCHEDULE%TYPE DEFAULT NULL,
      flg_help_in IN EPIS_DIET.FLG_HELP%TYPE DEFAULT NULL,
      dt_creation_tstz_in IN EPIS_DIET.DT_CREATION_TSTZ%TYPE DEFAULT NULL,
      dt_cancel_tstz_in IN EPIS_DIET.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      dt_inter_tstz_in IN EPIS_DIET.DT_INTER_TSTZ%TYPE DEFAULT NULL,
      dt_initial_tstz_in IN EPIS_DIET.DT_INITIAL_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN EPIS_DIET.DT_END_TSTZ%TYPE DEFAULT NULL,
      adw_last_update_in IN EPIS_DIET.ADW_LAST_UPDATE%TYPE DEFAULT SYSDATE
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_diet_in IN EPIS_DIET.ID_DIET%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_DIET.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_DIET.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      desc_diet_in IN EPIS_DIET.DESC_DIET%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_DIET.FLG_STATUS%TYPE DEFAULT NULL,
      notes_in IN EPIS_DIET.NOTES%TYPE DEFAULT NULL,
      id_prof_cancel_in IN EPIS_DIET.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN EPIS_DIET.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_prof_inter_in IN EPIS_DIET.ID_PROF_INTER%TYPE DEFAULT NULL,
      notes_inter_in IN EPIS_DIET.NOTES_INTER%TYPE DEFAULT NULL,
      id_diet_schedule_in IN EPIS_DIET.ID_DIET_SCHEDULE%TYPE DEFAULT NULL,
      flg_help_in IN EPIS_DIET.FLG_HELP%TYPE DEFAULT NULL,
      dt_creation_tstz_in IN EPIS_DIET.DT_CREATION_TSTZ%TYPE DEFAULT NULL,
      dt_cancel_tstz_in IN EPIS_DIET.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      dt_inter_tstz_in IN EPIS_DIET.DT_INTER_TSTZ%TYPE DEFAULT NULL,
      dt_initial_tstz_in IN EPIS_DIET.DT_INITIAL_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN EPIS_DIET.DT_END_TSTZ%TYPE DEFAULT NULL,
      adw_last_update_in IN EPIS_DIET.ADW_LAST_UPDATE%TYPE DEFAULT SYSDATE
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );

   -- Insert one row, returning primary key generated by sequence
   PROCEDURE ins (
      id_diet_in IN EPIS_DIET.ID_DIET%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_DIET.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_DIET.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      desc_diet_in IN EPIS_DIET.DESC_DIET%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_DIET.FLG_STATUS%TYPE DEFAULT NULL,
      notes_in IN EPIS_DIET.NOTES%TYPE DEFAULT NULL,
      id_prof_cancel_in IN EPIS_DIET.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN EPIS_DIET.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_prof_inter_in IN EPIS_DIET.ID_PROF_INTER%TYPE DEFAULT NULL,
      notes_inter_in IN EPIS_DIET.NOTES_INTER%TYPE DEFAULT NULL,
      id_diet_schedule_in IN EPIS_DIET.ID_DIET_SCHEDULE%TYPE DEFAULT NULL,
      flg_help_in IN EPIS_DIET.FLG_HELP%TYPE DEFAULT NULL,
      dt_creation_tstz_in IN EPIS_DIET.DT_CREATION_TSTZ%TYPE DEFAULT NULL,
      dt_cancel_tstz_in IN EPIS_DIET.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      dt_inter_tstz_in IN EPIS_DIET.DT_INTER_TSTZ%TYPE DEFAULT NULL,
      dt_initial_tstz_in IN EPIS_DIET.DT_INITIAL_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN EPIS_DIET.DT_END_TSTZ%TYPE DEFAULT NULL,
      adw_last_update_in IN EPIS_DIET.ADW_LAST_UPDATE%TYPE DEFAULT SYSDATE,
      id_epis_diet_out IN OUT EPIS_DIET.ID_EPIS_DIET%TYPE
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   PROCEDURE ins (
      id_diet_in IN EPIS_DIET.ID_DIET%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_DIET.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_DIET.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      desc_diet_in IN EPIS_DIET.DESC_DIET%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_DIET.FLG_STATUS%TYPE DEFAULT NULL,
      notes_in IN EPIS_DIET.NOTES%TYPE DEFAULT NULL,
      id_prof_cancel_in IN EPIS_DIET.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN EPIS_DIET.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_prof_inter_in IN EPIS_DIET.ID_PROF_INTER%TYPE DEFAULT NULL,
      notes_inter_in IN EPIS_DIET.NOTES_INTER%TYPE DEFAULT NULL,
      id_diet_schedule_in IN EPIS_DIET.ID_DIET_SCHEDULE%TYPE DEFAULT NULL,
      flg_help_in IN EPIS_DIET.FLG_HELP%TYPE DEFAULT NULL,
      dt_creation_tstz_in IN EPIS_DIET.DT_CREATION_TSTZ%TYPE DEFAULT NULL,
      dt_cancel_tstz_in IN EPIS_DIET.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      dt_inter_tstz_in IN EPIS_DIET.DT_INTER_TSTZ%TYPE DEFAULT NULL,
      dt_initial_tstz_in IN EPIS_DIET.DT_INITIAL_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN EPIS_DIET.DT_END_TSTZ%TYPE DEFAULT NULL,
      adw_last_update_in IN EPIS_DIET.ADW_LAST_UPDATE%TYPE DEFAULT SYSDATE,
      id_epis_diet_out IN OUT EPIS_DIET.ID_EPIS_DIET%TYPE
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      );

   -- Insert one row with function, return generated primary key
   FUNCTION ins (
      id_diet_in IN EPIS_DIET.ID_DIET%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_DIET.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_DIET.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      desc_diet_in IN EPIS_DIET.DESC_DIET%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_DIET.FLG_STATUS%TYPE DEFAULT NULL,
      notes_in IN EPIS_DIET.NOTES%TYPE DEFAULT NULL,
      id_prof_cancel_in IN EPIS_DIET.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN EPIS_DIET.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_prof_inter_in IN EPIS_DIET.ID_PROF_INTER%TYPE DEFAULT NULL,
      notes_inter_in IN EPIS_DIET.NOTES_INTER%TYPE DEFAULT NULL,
      id_diet_schedule_in IN EPIS_DIET.ID_DIET_SCHEDULE%TYPE DEFAULT NULL,
      flg_help_in IN EPIS_DIET.FLG_HELP%TYPE DEFAULT NULL,
      dt_creation_tstz_in IN EPIS_DIET.DT_CREATION_TSTZ%TYPE DEFAULT NULL,
      dt_cancel_tstz_in IN EPIS_DIET.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      dt_inter_tstz_in IN EPIS_DIET.DT_INTER_TSTZ%TYPE DEFAULT NULL,
      dt_initial_tstz_in IN EPIS_DIET.DT_INITIAL_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN EPIS_DIET.DT_END_TSTZ%TYPE DEFAULT NULL,
      adw_last_update_in IN EPIS_DIET.ADW_LAST_UPDATE%TYPE DEFAULT SYSDATE
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
      RETURN
         EPIS_DIET.ID_EPIS_DIET%TYPE
      ;

   FUNCTION ins (
      id_diet_in IN EPIS_DIET.ID_DIET%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_DIET.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_DIET.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      desc_diet_in IN EPIS_DIET.DESC_DIET%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_DIET.FLG_STATUS%TYPE DEFAULT NULL,
      notes_in IN EPIS_DIET.NOTES%TYPE DEFAULT NULL,
      id_prof_cancel_in IN EPIS_DIET.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN EPIS_DIET.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_prof_inter_in IN EPIS_DIET.ID_PROF_INTER%TYPE DEFAULT NULL,
      notes_inter_in IN EPIS_DIET.NOTES_INTER%TYPE DEFAULT NULL,
      id_diet_schedule_in IN EPIS_DIET.ID_DIET_SCHEDULE%TYPE DEFAULT NULL,
      flg_help_in IN EPIS_DIET.FLG_HELP%TYPE DEFAULT NULL,
      dt_creation_tstz_in IN EPIS_DIET.DT_CREATION_TSTZ%TYPE DEFAULT NULL,
      dt_cancel_tstz_in IN EPIS_DIET.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      dt_inter_tstz_in IN EPIS_DIET.DT_INTER_TSTZ%TYPE DEFAULT NULL,
      dt_initial_tstz_in IN EPIS_DIET.DT_INITIAL_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN EPIS_DIET.DT_END_TSTZ%TYPE DEFAULT NULL,
      adw_last_update_in IN EPIS_DIET.ADW_LAST_UPDATE%TYPE DEFAULT SYSDATE
      -- Pass false if you want errors to propagate out unhandled
     ,handle_error_in IN BOOLEAN := TRUE
      )
      RETURN
         EPIS_DIET.ID_EPIS_DIET%TYPE
      ;

   -- Update any/all columns by primary key. If you pass NULL, then
   -- the current column value is set to itself. If you need a more
   -- selected UPDATE then use one of the onecol procedures below.

  PROCEDURE upd (
      id_epis_diet_in IN EPIS_DIET.ID_EPIS_DIET%TYPE,
      id_diet_in IN EPIS_DIET.ID_DIET%TYPE DEFAULT NULL,
      ID_DIET_nin IN BOOLEAN := TRUE,
      id_episode_in IN EPIS_DIET.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      id_professional_in IN EPIS_DIET.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      ID_PROFESSIONAL_nin IN BOOLEAN := TRUE,
      desc_diet_in IN EPIS_DIET.DESC_DIET%TYPE DEFAULT NULL,
      DESC_DIET_nin IN BOOLEAN := TRUE,
      flg_status_in IN EPIS_DIET.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      notes_in IN EPIS_DIET.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      id_prof_cancel_in IN EPIS_DIET.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      ID_PROF_CANCEL_nin IN BOOLEAN := TRUE,
      notes_cancel_in IN EPIS_DIET.NOTES_CANCEL%TYPE DEFAULT NULL,
      NOTES_CANCEL_nin IN BOOLEAN := TRUE,
      id_prof_inter_in IN EPIS_DIET.ID_PROF_INTER%TYPE DEFAULT NULL,
      ID_PROF_INTER_nin IN BOOLEAN := TRUE,
      notes_inter_in IN EPIS_DIET.NOTES_INTER%TYPE DEFAULT NULL,
      NOTES_INTER_nin IN BOOLEAN := TRUE,
      id_diet_schedule_in IN EPIS_DIET.ID_DIET_SCHEDULE%TYPE DEFAULT NULL,
      ID_DIET_SCHEDULE_nin IN BOOLEAN := TRUE,
      flg_help_in IN EPIS_DIET.FLG_HELP%TYPE DEFAULT NULL,
      FLG_HELP_nin IN BOOLEAN := TRUE,
      dt_creation_tstz_in IN EPIS_DIET.DT_CREATION_TSTZ%TYPE DEFAULT NULL,
      DT_CREATION_TSTZ_nin IN BOOLEAN := TRUE,
      dt_cancel_tstz_in IN EPIS_DIET.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      DT_CANCEL_TSTZ_nin IN BOOLEAN := TRUE,
      dt_inter_tstz_in IN EPIS_DIET.DT_INTER_TSTZ%TYPE DEFAULT NULL,
      DT_INTER_TSTZ_nin IN BOOLEAN := TRUE,
      dt_initial_tstz_in IN EPIS_DIET.DT_INITIAL_TSTZ%TYPE DEFAULT NULL,
      DT_INITIAL_TSTZ_nin IN BOOLEAN := TRUE,
      dt_end_tstz_in IN EPIS_DIET.DT_END_TSTZ%TYPE DEFAULT NULL,
      DT_END_TSTZ_nin IN BOOLEAN := TRUE,
      adw_last_update_in IN EPIS_DIET.ADW_LAST_UPDATE%TYPE DEFAULT NULL,
      ADW_LAST_UPDATE_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


       PROCEDURE upd (
      id_epis_diet_in IN EPIS_DIET.ID_EPIS_DIET%TYPE,
      id_diet_in IN EPIS_DIET.ID_DIET%TYPE DEFAULT NULL,
      ID_DIET_nin IN BOOLEAN := TRUE,
      id_episode_in IN EPIS_DIET.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      id_professional_in IN EPIS_DIET.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      ID_PROFESSIONAL_nin IN BOOLEAN := TRUE,
      desc_diet_in IN EPIS_DIET.DESC_DIET%TYPE DEFAULT NULL,
      DESC_DIET_nin IN BOOLEAN := TRUE,
      flg_status_in IN EPIS_DIET.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      notes_in IN EPIS_DIET.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      id_prof_cancel_in IN EPIS_DIET.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      ID_PROF_CANCEL_nin IN BOOLEAN := TRUE,
      notes_cancel_in IN EPIS_DIET.NOTES_CANCEL%TYPE DEFAULT NULL,
      NOTES_CANCEL_nin IN BOOLEAN := TRUE,
      id_prof_inter_in IN EPIS_DIET.ID_PROF_INTER%TYPE DEFAULT NULL,
      ID_PROF_INTER_nin IN BOOLEAN := TRUE,
      notes_inter_in IN EPIS_DIET.NOTES_INTER%TYPE DEFAULT NULL,
      NOTES_INTER_nin IN BOOLEAN := TRUE,
      id_diet_schedule_in IN EPIS_DIET.ID_DIET_SCHEDULE%TYPE DEFAULT NULL,
      ID_DIET_SCHEDULE_nin IN BOOLEAN := TRUE,
      flg_help_in IN EPIS_DIET.FLG_HELP%TYPE DEFAULT NULL,
      FLG_HELP_nin IN BOOLEAN := TRUE,
      dt_creation_tstz_in IN EPIS_DIET.DT_CREATION_TSTZ%TYPE DEFAULT NULL,
      DT_CREATION_TSTZ_nin IN BOOLEAN := TRUE,
      dt_cancel_tstz_in IN EPIS_DIET.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      DT_CANCEL_TSTZ_nin IN BOOLEAN := TRUE,
      dt_inter_tstz_in IN EPIS_DIET.DT_INTER_TSTZ%TYPE DEFAULT NULL,
      DT_INTER_TSTZ_nin IN BOOLEAN := TRUE,
      dt_initial_tstz_in IN EPIS_DIET.DT_INITIAL_TSTZ%TYPE DEFAULT NULL,
      DT_INITIAL_TSTZ_nin IN BOOLEAN := TRUE,
      dt_end_tstz_in IN EPIS_DIET.DT_END_TSTZ%TYPE DEFAULT NULL,
      DT_END_TSTZ_nin IN BOOLEAN := TRUE,
      adw_last_update_in IN EPIS_DIET.ADW_LAST_UPDATE%TYPE DEFAULT NULL,
      ADW_LAST_UPDATE_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
      );



      PROCEDURE upd (
      id_diet_in IN EPIS_DIET.ID_DIET%TYPE DEFAULT NULL,
      ID_DIET_nin IN BOOLEAN := TRUE,
      id_episode_in IN EPIS_DIET.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      id_professional_in IN EPIS_DIET.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      ID_PROFESSIONAL_nin IN BOOLEAN := TRUE,
      desc_diet_in IN EPIS_DIET.DESC_DIET%TYPE DEFAULT NULL,
      DESC_DIET_nin IN BOOLEAN := TRUE,
      flg_status_in IN EPIS_DIET.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      notes_in IN EPIS_DIET.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      id_prof_cancel_in IN EPIS_DIET.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      ID_PROF_CANCEL_nin IN BOOLEAN := TRUE,
      notes_cancel_in IN EPIS_DIET.NOTES_CANCEL%TYPE DEFAULT NULL,
      NOTES_CANCEL_nin IN BOOLEAN := TRUE,
      id_prof_inter_in IN EPIS_DIET.ID_PROF_INTER%TYPE DEFAULT NULL,
      ID_PROF_INTER_nin IN BOOLEAN := TRUE,
      notes_inter_in IN EPIS_DIET.NOTES_INTER%TYPE DEFAULT NULL,
      NOTES_INTER_nin IN BOOLEAN := TRUE,
      id_diet_schedule_in IN EPIS_DIET.ID_DIET_SCHEDULE%TYPE DEFAULT NULL,
      ID_DIET_SCHEDULE_nin IN BOOLEAN := TRUE,
      flg_help_in IN EPIS_DIET.FLG_HELP%TYPE DEFAULT NULL,
      FLG_HELP_nin IN BOOLEAN := TRUE,
      dt_creation_tstz_in IN EPIS_DIET.DT_CREATION_TSTZ%TYPE DEFAULT NULL,
      DT_CREATION_TSTZ_nin IN BOOLEAN := TRUE,
      dt_cancel_tstz_in IN EPIS_DIET.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      DT_CANCEL_TSTZ_nin IN BOOLEAN := TRUE,
      dt_inter_tstz_in IN EPIS_DIET.DT_INTER_TSTZ%TYPE DEFAULT NULL,
      DT_INTER_TSTZ_nin IN BOOLEAN := TRUE,
      dt_initial_tstz_in IN EPIS_DIET.DT_INITIAL_TSTZ%TYPE DEFAULT NULL,
      DT_INITIAL_TSTZ_nin IN BOOLEAN := TRUE,
      dt_end_tstz_in IN EPIS_DIET.DT_END_TSTZ%TYPE DEFAULT NULL,
      DT_END_TSTZ_nin IN BOOLEAN := TRUE,
      adw_last_update_in IN EPIS_DIET.ADW_LAST_UPDATE%TYPE DEFAULT NULL,
      ADW_LAST_UPDATE_nin IN BOOLEAN := TRUE,
    where_in varchar2 DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );


      PROCEDURE upd (
      id_diet_in IN EPIS_DIET.ID_DIET%TYPE DEFAULT NULL,
      ID_DIET_nin IN BOOLEAN := TRUE,
      id_episode_in IN EPIS_DIET.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      id_professional_in IN EPIS_DIET.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      ID_PROFESSIONAL_nin IN BOOLEAN := TRUE,
      desc_diet_in IN EPIS_DIET.DESC_DIET%TYPE DEFAULT NULL,
      DESC_DIET_nin IN BOOLEAN := TRUE,
      flg_status_in IN EPIS_DIET.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      notes_in IN EPIS_DIET.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      id_prof_cancel_in IN EPIS_DIET.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      ID_PROF_CANCEL_nin IN BOOLEAN := TRUE,
      notes_cancel_in IN EPIS_DIET.NOTES_CANCEL%TYPE DEFAULT NULL,
      NOTES_CANCEL_nin IN BOOLEAN := TRUE,
      id_prof_inter_in IN EPIS_DIET.ID_PROF_INTER%TYPE DEFAULT NULL,
      ID_PROF_INTER_nin IN BOOLEAN := TRUE,
      notes_inter_in IN EPIS_DIET.NOTES_INTER%TYPE DEFAULT NULL,
      NOTES_INTER_nin IN BOOLEAN := TRUE,
      id_diet_schedule_in IN EPIS_DIET.ID_DIET_SCHEDULE%TYPE DEFAULT NULL,
      ID_DIET_SCHEDULE_nin IN BOOLEAN := TRUE,
      flg_help_in IN EPIS_DIET.FLG_HELP%TYPE DEFAULT NULL,
      FLG_HELP_nin IN BOOLEAN := TRUE,
      dt_creation_tstz_in IN EPIS_DIET.DT_CREATION_TSTZ%TYPE DEFAULT NULL,
      DT_CREATION_TSTZ_nin IN BOOLEAN := TRUE,
      dt_cancel_tstz_in IN EPIS_DIET.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      DT_CANCEL_TSTZ_nin IN BOOLEAN := TRUE,
      dt_inter_tstz_in IN EPIS_DIET.DT_INTER_TSTZ%TYPE DEFAULT NULL,
      DT_INTER_TSTZ_nin IN BOOLEAN := TRUE,
      dt_initial_tstz_in IN EPIS_DIET.DT_INITIAL_TSTZ%TYPE DEFAULT NULL,
      DT_INITIAL_TSTZ_nin IN BOOLEAN := TRUE,
      dt_end_tstz_in IN EPIS_DIET.DT_END_TSTZ%TYPE DEFAULT NULL,
      DT_END_TSTZ_nin IN BOOLEAN := TRUE,
      adw_last_update_in IN EPIS_DIET.ADW_LAST_UPDATE%TYPE DEFAULT NULL,
      ADW_LAST_UPDATE_nin IN BOOLEAN := TRUE,
    where_in varchar2 DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
      );



   PROCEDURE upd_ins (
      id_epis_diet_in IN EPIS_DIET.ID_EPIS_DIET%TYPE,
      id_diet_in IN EPIS_DIET.ID_DIET%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_DIET.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_DIET.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      desc_diet_in IN EPIS_DIET.DESC_DIET%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_DIET.FLG_STATUS%TYPE DEFAULT NULL,
      notes_in IN EPIS_DIET.NOTES%TYPE DEFAULT NULL,
      id_prof_cancel_in IN EPIS_DIET.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN EPIS_DIET.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_prof_inter_in IN EPIS_DIET.ID_PROF_INTER%TYPE DEFAULT NULL,
      notes_inter_in IN EPIS_DIET.NOTES_INTER%TYPE DEFAULT NULL,
      id_diet_schedule_in IN EPIS_DIET.ID_DIET_SCHEDULE%TYPE DEFAULT NULL,
      flg_help_in IN EPIS_DIET.FLG_HELP%TYPE DEFAULT NULL,
      dt_creation_tstz_in IN EPIS_DIET.DT_CREATION_TSTZ%TYPE DEFAULT NULL,
      dt_cancel_tstz_in IN EPIS_DIET.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      dt_inter_tstz_in IN EPIS_DIET.DT_INTER_TSTZ%TYPE DEFAULT NULL,
      dt_initial_tstz_in IN EPIS_DIET.DT_INITIAL_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN EPIS_DIET.DT_END_TSTZ%TYPE DEFAULT NULL,
      adw_last_update_in IN EPIS_DIET.ADW_LAST_UPDATE%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

      PROCEDURE upd_ins (
      id_epis_diet_in IN EPIS_DIET.ID_EPIS_DIET%TYPE,
      id_diet_in IN EPIS_DIET.ID_DIET%TYPE DEFAULT NULL,
      id_episode_in IN EPIS_DIET.ID_EPISODE%TYPE DEFAULT NULL,
      id_professional_in IN EPIS_DIET.ID_PROFESSIONAL%TYPE DEFAULT NULL,
      desc_diet_in IN EPIS_DIET.DESC_DIET%TYPE DEFAULT NULL,
      flg_status_in IN EPIS_DIET.FLG_STATUS%TYPE DEFAULT NULL,
      notes_in IN EPIS_DIET.NOTES%TYPE DEFAULT NULL,
      id_prof_cancel_in IN EPIS_DIET.ID_PROF_CANCEL%TYPE DEFAULT NULL,
      notes_cancel_in IN EPIS_DIET.NOTES_CANCEL%TYPE DEFAULT NULL,
      id_prof_inter_in IN EPIS_DIET.ID_PROF_INTER%TYPE DEFAULT NULL,
      notes_inter_in IN EPIS_DIET.NOTES_INTER%TYPE DEFAULT NULL,
      id_diet_schedule_in IN EPIS_DIET.ID_DIET_SCHEDULE%TYPE DEFAULT NULL,
      flg_help_in IN EPIS_DIET.FLG_HELP%TYPE DEFAULT NULL,
      dt_creation_tstz_in IN EPIS_DIET.DT_CREATION_TSTZ%TYPE DEFAULT NULL,
      dt_cancel_tstz_in IN EPIS_DIET.DT_CANCEL_TSTZ%TYPE DEFAULT NULL,
      dt_inter_tstz_in IN EPIS_DIET.DT_INTER_TSTZ%TYPE DEFAULT NULL,
      dt_initial_tstz_in IN EPIS_DIET.DT_INITIAL_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN EPIS_DIET.DT_END_TSTZ%TYPE DEFAULT NULL,
      adw_last_update_in IN EPIS_DIET.ADW_LAST_UPDATE%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
      );

   PROCEDURE upd (
      rec_in IN EPIS_DIET%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      rec_in IN EPIS_DIET%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
      );

      PROCEDURE upd (
      col_in IN EPIS_DIET_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      );

      PROCEDURE upd (
      col_in IN EPIS_DIET_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
      );





   -- Use Native Dynamic SQL increment a single NUMBER column
   -- for all rows specified by the dynamic WHERE clause
   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   );

   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
   );









    -- Delete one row by primary key
   PROCEDURE del (
      id_epis_diet_in IN EPIS_DIET.ID_EPIS_DIET%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

-- Delete one row by primary key
   PROCEDURE del (
      id_epis_diet_in IN EPIS_DIET.ID_EPIS_DIET%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


   -- Delete all rows for primary key column ID_EPIS_DIET
   PROCEDURE del_ID_EPIS_DIET (
      id_epis_diet_in IN EPIS_DIET.ID_EPIS_DIET%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     );

     -- Delete all rows for primary key column ID_EPIS_DIET
   PROCEDURE del_ID_EPIS_DIET (
      id_epis_diet_in IN EPIS_DIET.ID_EPIS_DIET%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     );

   -- Delete all rows for this EDT_DIT_FK foreign key value
   PROCEDURE del_EDT_DIT_FK (
      id_diet_in IN EPIS_DIET.ID_DIET%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this EDT_DIT_FK foreign key value
   PROCEDURE del_EDT_DIT_FK (
      id_diet_in IN EPIS_DIET.ID_DIET%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this EDT_DSE_FK foreign key value
   PROCEDURE del_EDT_DSE_FK (
      id_diet_schedule_in IN EPIS_DIET.ID_DIET_SCHEDULE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this EDT_DSE_FK foreign key value
   PROCEDURE del_EDT_DSE_FK (
      id_diet_schedule_in IN EPIS_DIET.ID_DIET_SCHEDULE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this EDT_EPIS_FK foreign key value
   PROCEDURE del_EDT_EPIS_FK (
      id_episode_in IN EPIS_DIET.ID_EPISODE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this EDT_EPIS_FK foreign key value
   PROCEDURE del_EDT_EPIS_FK (
      id_episode_in IN EPIS_DIET.ID_EPISODE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this EDT_PROF_FK foreign key value
   PROCEDURE del_EDT_PROF_FK (
      id_professional_in IN EPIS_DIET.ID_PROFESSIONAL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this EDT_PROF_FK foreign key value
   PROCEDURE del_EDT_PROF_FK (
      id_professional_in IN EPIS_DIET.ID_PROFESSIONAL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this EDT_PROF_FK2 foreign key value
   PROCEDURE del_EDT_PROF_FK2 (
      id_prof_cancel_in IN EPIS_DIET.ID_PROF_CANCEL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this EDT_PROF_FK2 foreign key value
   PROCEDURE del_EDT_PROF_FK2 (
      id_prof_cancel_in IN EPIS_DIET.ID_PROF_CANCEL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Delete all rows for this EDT_PROF_FK3 foreign key value
   PROCEDURE del_EDT_PROF_FK3 (
      id_prof_inter_in IN EPIS_DIET.ID_PROF_INTER%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows for this EDT_PROF_FK3 foreign key value
   PROCEDURE del_EDT_PROF_FK3 (
      id_prof_inter_in IN EPIS_DIET.ID_PROF_INTER%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows specified by dynamic WHERE clause
   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      );


      -- Delete all rows where the specified VARCHAR2 column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified DATE column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );


      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified TIMESTAMP column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

    -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
      );

      -- Delete all rows where the specified NUMBER column has
   -- a value that matches the specfified value.
   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      );

   -- Initialize a record with default values for columns in the table.
   PROCEDURE initrec (
      epis_diet_inout IN OUT EPIS_DIET%ROWTYPE
   );

   FUNCTION initrec RETURN EPIS_DIET%ROWTYPE;



   FUNCTION get_data_rowid(
        rows_in IN TABLE_VARCHAR
        ) RETURN EPIS_DIET_tc;


   FUNCTION get_data_rowid_pat(
        rows_in IN TABLE_VARCHAR
        ) RETURN EPIS_DIET_tc;

END TS_EPIS_DIET;
/
