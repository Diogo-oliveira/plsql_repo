/*-- Last Change Revision: $Rev: 1536878 $*/
/*-- Last Change by: $Author: teresa.coutinho $*/
/*-- Date of last change: $Date: 2013-12-13 15:45:25 +0000 (sex, 13 dez 2013) $*/
CREATE OR REPLACE PACKAGE ts_exam_question_response
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {1BD37A66-EA60-4927-9A64-F6DD89237236}
| Created On: December 11, 2013 9:40:37
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on "EXAM_QUESTION_RESPONSE"
    TYPE exam_question_response_tc IS TABLE OF exam_question_response%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE exam_question_response_ntt IS TABLE OF exam_question_response%ROWTYPE;
    TYPE exam_question_response_vat IS VARRAY(100) OF exam_question_response%ROWTYPE;

    -- Same type structure, with a static name.
    TYPE aat IS TABLE OF exam_question_response%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE ntt IS TABLE OF exam_question_response%ROWTYPE;
    TYPE vat IS VARRAY(100) OF exam_question_response%ROWTYPE;

    -- Column Collection based on column "ID_EXAM_QUESTION_RESPONSE"
    TYPE id_exam_question_response_cc IS TABLE OF exam_question_response.id_exam_question_response%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_EXAM_REQ_DET"
    TYPE id_exam_req_det_cc IS TABLE OF exam_question_response.id_exam_req_det%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_QUESTIONNAIRE"
    TYPE id_questionnaire_cc IS TABLE OF exam_question_response.id_questionnaire%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_RESPONSE"
    TYPE id_response_cc IS TABLE OF exam_question_response.id_response%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "NOTES"
    TYPE notes_cc IS TABLE OF exam_question_response.notes%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_USER"
    TYPE create_user_cc IS TABLE OF exam_question_response.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_TIME"
    TYPE create_time_cc IS TABLE OF exam_question_response.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "CREATE_INSTITUTION"
    TYPE create_institution_cc IS TABLE OF exam_question_response.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_USER"
    TYPE update_user_cc IS TABLE OF exam_question_response.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_TIME"
    TYPE update_time_cc IS TABLE OF exam_question_response.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "UPDATE_INSTITUTION"
    TYPE update_institution_cc IS TABLE OF exam_question_response.update_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "FLG_TIME"
    TYPE flg_time_cc IS TABLE OF exam_question_response.flg_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_EPISODE"
    TYPE id_episode_cc IS TABLE OF exam_question_response.id_episode%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "DT_LAST_UPDATE_TSTZ"
    TYPE dt_last_update_tstz_cc IS TABLE OF exam_question_response.dt_last_update_tstz%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column "ID_PROF_LAST_UPDATE"
    TYPE id_prof_last_update_cc IS TABLE OF exam_question_response.id_prof_last_update%TYPE INDEX BY BINARY_INTEGER;

    TYPE varchar2_t IS TABLE OF VARCHAR2(32767) INDEX BY PLS_INTEGER;
    /*
    START Special logic for handling LOB columns....
    */
    PROCEDURE n_ins_clobs_in_chunks
    (
        id_exam_question_response_in IN exam_question_response.id_exam_question_response%TYPE,
        id_exam_req_det_in           IN exam_question_response.id_exam_req_det%TYPE DEFAULT NULL,
        id_questionnaire_in          IN exam_question_response.id_questionnaire%TYPE DEFAULT NULL,
        id_response_in               IN exam_question_response.id_response%TYPE DEFAULT NULL,
        create_user_in               IN exam_question_response.create_user%TYPE DEFAULT NULL,
        create_time_in               IN exam_question_response.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN exam_question_response.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN exam_question_response.update_user%TYPE DEFAULT NULL,
        update_time_in               IN exam_question_response.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN exam_question_response.update_institution%TYPE DEFAULT NULL,
        flg_time_in                  IN exam_question_response.flg_time%TYPE DEFAULT NULL,
        id_episode_in                IN exam_question_response.id_episode%TYPE DEFAULT NULL,
        dt_last_update_tstz_in       IN exam_question_response.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_prof_last_update_in       IN exam_question_response.id_prof_last_update%TYPE DEFAULT NULL,
        handle_error_in              IN BOOLEAN := TRUE,
        clob_columns_in              IN varchar2_t,
        clob_pieces_in               IN varchar2_t
    );

    PROCEDURE n_upd_clobs_in_chunks
    (
        id_exam_question_response_in IN exam_question_response.id_exam_question_response%TYPE,
        id_exam_req_det_in           IN exam_question_response.id_exam_req_det%TYPE DEFAULT NULL,
        id_questionnaire_in          IN exam_question_response.id_questionnaire%TYPE DEFAULT NULL,
        id_response_in               IN exam_question_response.id_response%TYPE DEFAULT NULL,
        create_user_in               IN exam_question_response.create_user%TYPE DEFAULT NULL,
        create_time_in               IN exam_question_response.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN exam_question_response.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN exam_question_response.update_user%TYPE DEFAULT NULL,
        update_time_in               IN exam_question_response.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN exam_question_response.update_institution%TYPE DEFAULT NULL,
        flg_time_in                  IN exam_question_response.flg_time%TYPE DEFAULT NULL,
        id_episode_in                IN exam_question_response.id_episode%TYPE DEFAULT NULL,
        dt_last_update_tstz_in       IN exam_question_response.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_prof_last_update_in       IN exam_question_response.id_prof_last_update%TYPE DEFAULT NULL,
        ignore_if_null_in            IN BOOLEAN := TRUE,
        handle_error_in              IN BOOLEAN := TRUE,
        clob_columns_in              IN varchar2_t,
        clob_pieces_in               IN varchar2_t
    );

    PROCEDURE n_upd_ins_clobs_in_chunks
    (
        id_exam_question_response_in IN exam_question_response.id_exam_question_response%TYPE,
        id_exam_req_det_in           IN exam_question_response.id_exam_req_det%TYPE DEFAULT NULL,
        id_questionnaire_in          IN exam_question_response.id_questionnaire%TYPE DEFAULT NULL,
        id_response_in               IN exam_question_response.id_response%TYPE DEFAULT NULL,
        create_user_in               IN exam_question_response.create_user%TYPE DEFAULT NULL,
        create_time_in               IN exam_question_response.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN exam_question_response.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN exam_question_response.update_user%TYPE DEFAULT NULL,
        update_time_in               IN exam_question_response.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN exam_question_response.update_institution%TYPE DEFAULT NULL,
        flg_time_in                  IN exam_question_response.flg_time%TYPE DEFAULT NULL,
        id_episode_in                IN exam_question_response.id_episode%TYPE DEFAULT NULL,
        dt_last_update_tstz_in       IN exam_question_response.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_prof_last_update_in       IN exam_question_response.id_prof_last_update%TYPE DEFAULT NULL,
        ignore_if_null_in            IN BOOLEAN DEFAULT TRUE,
        handle_error_in              IN BOOLEAN DEFAULT TRUE,
        clob_columns_in              IN varchar2_t,
        clob_pieces_in               IN varchar2_t
    );

    /*
    END Special logic for handling LOB columns.
    */
    -- Insert one row, providing primary key if present
    PROCEDURE ins
    (
        id_exam_question_response_in IN exam_question_response.id_exam_question_response%TYPE,
        id_exam_req_det_in           IN exam_question_response.id_exam_req_det%TYPE DEFAULT NULL,
        id_questionnaire_in          IN exam_question_response.id_questionnaire%TYPE DEFAULT NULL,
        id_response_in               IN exam_question_response.id_response%TYPE DEFAULT NULL,
        notes_in                     IN exam_question_response.notes%TYPE DEFAULT NULL,
        create_user_in               IN exam_question_response.create_user%TYPE DEFAULT NULL,
        create_time_in               IN exam_question_response.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN exam_question_response.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN exam_question_response.update_user%TYPE DEFAULT NULL,
        update_time_in               IN exam_question_response.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN exam_question_response.update_institution%TYPE DEFAULT NULL,
        flg_time_in                  IN exam_question_response.flg_time%TYPE DEFAULT NULL,
        id_episode_in                IN exam_question_response.id_episode%TYPE DEFAULT NULL,
        dt_last_update_tstz_in       IN exam_question_response.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_prof_last_update_in       IN exam_question_response.id_prof_last_update%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_exam_question_response_in IN exam_question_response.id_exam_question_response%TYPE,
        id_exam_req_det_in           IN exam_question_response.id_exam_req_det%TYPE DEFAULT NULL,
        id_questionnaire_in          IN exam_question_response.id_questionnaire%TYPE DEFAULT NULL,
        id_response_in               IN exam_question_response.id_response%TYPE DEFAULT NULL,
        notes_in                     IN exam_question_response.notes%TYPE DEFAULT NULL,
        create_user_in               IN exam_question_response.create_user%TYPE DEFAULT NULL,
        create_time_in               IN exam_question_response.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN exam_question_response.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN exam_question_response.update_user%TYPE DEFAULT NULL,
        update_time_in               IN exam_question_response.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN exam_question_response.update_institution%TYPE DEFAULT NULL,
        flg_time_in                  IN exam_question_response.flg_time%TYPE DEFAULT NULL,
        id_episode_in                IN exam_question_response.id_episode%TYPE DEFAULT NULL,
        dt_last_update_tstz_in       IN exam_question_response.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_prof_last_update_in       IN exam_question_response.id_prof_last_update%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record.
    -- Specify whether or not a primary key value should be generated.
    PROCEDURE ins
    (
        rec_in          IN exam_question_response%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rec_in          IN exam_question_response%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers.
    PROCEDURE ins
    (
        rows_in         IN exam_question_response_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        rows_in         IN exam_question_response_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Return next primary key value using the named sequence.
    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN exam_question_response.id_exam_question_response%TYPE;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_exam_req_det_in     IN exam_question_response.id_exam_req_det%TYPE DEFAULT NULL,
        id_questionnaire_in    IN exam_question_response.id_questionnaire%TYPE DEFAULT NULL,
        id_response_in         IN exam_question_response.id_response%TYPE DEFAULT NULL,
        notes_in               IN exam_question_response.notes%TYPE DEFAULT NULL,
        create_user_in         IN exam_question_response.create_user%TYPE DEFAULT NULL,
        create_time_in         IN exam_question_response.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN exam_question_response.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN exam_question_response.update_user%TYPE DEFAULT NULL,
        update_time_in         IN exam_question_response.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN exam_question_response.update_institution%TYPE DEFAULT NULL,
        flg_time_in            IN exam_question_response.flg_time%TYPE DEFAULT NULL,
        id_episode_in          IN exam_question_response.id_episode%TYPE DEFAULT NULL,
        dt_last_update_tstz_in IN exam_question_response.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_prof_last_update_in IN exam_question_response.id_prof_last_update%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_exam_req_det_in     IN exam_question_response.id_exam_req_det%TYPE DEFAULT NULL,
        id_questionnaire_in    IN exam_question_response.id_questionnaire%TYPE DEFAULT NULL,
        id_response_in         IN exam_question_response.id_response%TYPE DEFAULT NULL,
        notes_in               IN exam_question_response.notes%TYPE DEFAULT NULL,
        create_user_in         IN exam_question_response.create_user%TYPE DEFAULT NULL,
        create_time_in         IN exam_question_response.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN exam_question_response.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN exam_question_response.update_user%TYPE DEFAULT NULL,
        update_time_in         IN exam_question_response.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN exam_question_response.update_institution%TYPE DEFAULT NULL,
        flg_time_in            IN exam_question_response.flg_time%TYPE DEFAULT NULL,
        id_episode_in          IN exam_question_response.id_episode%TYPE DEFAULT NULL,
        dt_last_update_tstz_in IN exam_question_response.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_prof_last_update_in IN exam_question_response.id_prof_last_update%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_exam_req_det_in            IN exam_question_response.id_exam_req_det%TYPE DEFAULT NULL,
        id_questionnaire_in           IN exam_question_response.id_questionnaire%TYPE DEFAULT NULL,
        id_response_in                IN exam_question_response.id_response%TYPE DEFAULT NULL,
        notes_in                      IN exam_question_response.notes%TYPE DEFAULT NULL,
        create_user_in                IN exam_question_response.create_user%TYPE DEFAULT NULL,
        create_time_in                IN exam_question_response.create_time%TYPE DEFAULT NULL,
        create_institution_in         IN exam_question_response.create_institution%TYPE DEFAULT NULL,
        update_user_in                IN exam_question_response.update_user%TYPE DEFAULT NULL,
        update_time_in                IN exam_question_response.update_time%TYPE DEFAULT NULL,
        update_institution_in         IN exam_question_response.update_institution%TYPE DEFAULT NULL,
        flg_time_in                   IN exam_question_response.flg_time%TYPE DEFAULT NULL,
        id_episode_in                 IN exam_question_response.id_episode%TYPE DEFAULT NULL,
        dt_last_update_tstz_in        IN exam_question_response.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_prof_last_update_in        IN exam_question_response.id_prof_last_update%TYPE DEFAULT NULL,
        id_exam_question_response_out IN OUT exam_question_response.id_exam_question_response%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    PROCEDURE ins
    (
        id_exam_req_det_in            IN exam_question_response.id_exam_req_det%TYPE DEFAULT NULL,
        id_questionnaire_in           IN exam_question_response.id_questionnaire%TYPE DEFAULT NULL,
        id_response_in                IN exam_question_response.id_response%TYPE DEFAULT NULL,
        notes_in                      IN exam_question_response.notes%TYPE DEFAULT NULL,
        create_user_in                IN exam_question_response.create_user%TYPE DEFAULT NULL,
        create_time_in                IN exam_question_response.create_time%TYPE DEFAULT NULL,
        create_institution_in         IN exam_question_response.create_institution%TYPE DEFAULT NULL,
        update_user_in                IN exam_question_response.update_user%TYPE DEFAULT NULL,
        update_time_in                IN exam_question_response.update_time%TYPE DEFAULT NULL,
        update_institution_in         IN exam_question_response.update_institution%TYPE DEFAULT NULL,
        flg_time_in                   IN exam_question_response.flg_time%TYPE DEFAULT NULL,
        id_episode_in                 IN exam_question_response.id_episode%TYPE DEFAULT NULL,
        dt_last_update_tstz_in        IN exam_question_response.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_prof_last_update_in        IN exam_question_response.id_prof_last_update%TYPE DEFAULT NULL,
        id_exam_question_response_out IN OUT exam_question_response.id_exam_question_response%TYPE
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_exam_req_det_in     IN exam_question_response.id_exam_req_det%TYPE DEFAULT NULL,
        id_questionnaire_in    IN exam_question_response.id_questionnaire%TYPE DEFAULT NULL,
        id_response_in         IN exam_question_response.id_response%TYPE DEFAULT NULL,
        notes_in               IN exam_question_response.notes%TYPE DEFAULT NULL,
        create_user_in         IN exam_question_response.create_user%TYPE DEFAULT NULL,
        create_time_in         IN exam_question_response.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN exam_question_response.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN exam_question_response.update_user%TYPE DEFAULT NULL,
        update_time_in         IN exam_question_response.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN exam_question_response.update_institution%TYPE DEFAULT NULL,
        flg_time_in            IN exam_question_response.flg_time%TYPE DEFAULT NULL,
        id_episode_in          IN exam_question_response.id_episode%TYPE DEFAULT NULL,
        dt_last_update_tstz_in IN exam_question_response.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_prof_last_update_in IN exam_question_response.id_prof_last_update%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN exam_question_response.id_exam_question_response%TYPE;

    FUNCTION ins
    (
        id_exam_req_det_in     IN exam_question_response.id_exam_req_det%TYPE DEFAULT NULL,
        id_questionnaire_in    IN exam_question_response.id_questionnaire%TYPE DEFAULT NULL,
        id_response_in         IN exam_question_response.id_response%TYPE DEFAULT NULL,
        notes_in               IN exam_question_response.notes%TYPE DEFAULT NULL,
        create_user_in         IN exam_question_response.create_user%TYPE DEFAULT NULL,
        create_time_in         IN exam_question_response.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN exam_question_response.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN exam_question_response.update_user%TYPE DEFAULT NULL,
        update_time_in         IN exam_question_response.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN exam_question_response.update_institution%TYPE DEFAULT NULL,
        flg_time_in            IN exam_question_response.flg_time%TYPE DEFAULT NULL,
        id_episode_in          IN exam_question_response.id_episode%TYPE DEFAULT NULL,
        dt_last_update_tstz_in IN exam_question_response.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_prof_last_update_in IN exam_question_response.id_prof_last_update%TYPE DEFAULT NULL
        -- Pass false if you want errors to propagate out unhandled
       ,
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN exam_question_response.id_exam_question_response%TYPE;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.

    PROCEDURE upd
    (
        id_exam_question_response_in IN exam_question_response.id_exam_question_response%TYPE,
        id_exam_req_det_in           IN exam_question_response.id_exam_req_det%TYPE DEFAULT NULL,
        id_exam_req_det_nin          IN BOOLEAN := TRUE,
        id_questionnaire_in          IN exam_question_response.id_questionnaire%TYPE DEFAULT NULL,
        id_questionnaire_nin         IN BOOLEAN := TRUE,
        id_response_in               IN exam_question_response.id_response%TYPE DEFAULT NULL,
        id_response_nin              IN BOOLEAN := TRUE,
        notes_in                     IN exam_question_response.notes%TYPE DEFAULT NULL,
        notes_nin                    IN BOOLEAN := TRUE,
        create_user_in               IN exam_question_response.create_user%TYPE DEFAULT NULL,
        create_user_nin              IN BOOLEAN := TRUE,
        create_time_in               IN exam_question_response.create_time%TYPE DEFAULT NULL,
        create_time_nin              IN BOOLEAN := TRUE,
        create_institution_in        IN exam_question_response.create_institution%TYPE DEFAULT NULL,
        create_institution_nin       IN BOOLEAN := TRUE,
        update_user_in               IN exam_question_response.update_user%TYPE DEFAULT NULL,
        update_user_nin              IN BOOLEAN := TRUE,
        update_time_in               IN exam_question_response.update_time%TYPE DEFAULT NULL,
        update_time_nin              IN BOOLEAN := TRUE,
        update_institution_in        IN exam_question_response.update_institution%TYPE DEFAULT NULL,
        update_institution_nin       IN BOOLEAN := TRUE,
        flg_time_in                  IN exam_question_response.flg_time%TYPE DEFAULT NULL,
        flg_time_nin                 IN BOOLEAN := TRUE,
        id_episode_in                IN exam_question_response.id_episode%TYPE DEFAULT NULL,
        id_episode_nin               IN BOOLEAN := TRUE,
        dt_last_update_tstz_in       IN exam_question_response.dt_last_update_tstz%TYPE DEFAULT NULL,
        dt_last_update_tstz_nin      IN BOOLEAN := TRUE,
        id_prof_last_update_in       IN exam_question_response.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin      IN BOOLEAN := TRUE,
        handle_error_in              IN BOOLEAN := TRUE,
        rows_out                     IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_exam_question_response_in IN exam_question_response.id_exam_question_response%TYPE,
        id_exam_req_det_in           IN exam_question_response.id_exam_req_det%TYPE DEFAULT NULL,
        id_exam_req_det_nin          IN BOOLEAN := TRUE,
        id_questionnaire_in          IN exam_question_response.id_questionnaire%TYPE DEFAULT NULL,
        id_questionnaire_nin         IN BOOLEAN := TRUE,
        id_response_in               IN exam_question_response.id_response%TYPE DEFAULT NULL,
        id_response_nin              IN BOOLEAN := TRUE,
        notes_in                     IN exam_question_response.notes%TYPE DEFAULT NULL,
        notes_nin                    IN BOOLEAN := TRUE,
        create_user_in               IN exam_question_response.create_user%TYPE DEFAULT NULL,
        create_user_nin              IN BOOLEAN := TRUE,
        create_time_in               IN exam_question_response.create_time%TYPE DEFAULT NULL,
        create_time_nin              IN BOOLEAN := TRUE,
        create_institution_in        IN exam_question_response.create_institution%TYPE DEFAULT NULL,
        create_institution_nin       IN BOOLEAN := TRUE,
        update_user_in               IN exam_question_response.update_user%TYPE DEFAULT NULL,
        update_user_nin              IN BOOLEAN := TRUE,
        update_time_in               IN exam_question_response.update_time%TYPE DEFAULT NULL,
        update_time_nin              IN BOOLEAN := TRUE,
        update_institution_in        IN exam_question_response.update_institution%TYPE DEFAULT NULL,
        update_institution_nin       IN BOOLEAN := TRUE,
        flg_time_in                  IN exam_question_response.flg_time%TYPE DEFAULT NULL,
        flg_time_nin                 IN BOOLEAN := TRUE,
        id_episode_in                IN exam_question_response.id_episode%TYPE DEFAULT NULL,
        id_episode_nin               IN BOOLEAN := TRUE,
        dt_last_update_tstz_in       IN exam_question_response.dt_last_update_tstz%TYPE DEFAULT NULL,
        dt_last_update_tstz_nin      IN BOOLEAN := TRUE,
        id_prof_last_update_in       IN exam_question_response.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin      IN BOOLEAN := TRUE,
        handle_error_in              IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        id_exam_req_det_in      IN exam_question_response.id_exam_req_det%TYPE DEFAULT NULL,
        id_exam_req_det_nin     IN BOOLEAN := TRUE,
        id_questionnaire_in     IN exam_question_response.id_questionnaire%TYPE DEFAULT NULL,
        id_questionnaire_nin    IN BOOLEAN := TRUE,
        id_response_in          IN exam_question_response.id_response%TYPE DEFAULT NULL,
        id_response_nin         IN BOOLEAN := TRUE,
        notes_in                IN exam_question_response.notes%TYPE DEFAULT NULL,
        notes_nin               IN BOOLEAN := TRUE,
        create_user_in          IN exam_question_response.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN exam_question_response.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN exam_question_response.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN exam_question_response.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN exam_question_response.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN exam_question_response.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        flg_time_in             IN exam_question_response.flg_time%TYPE DEFAULT NULL,
        flg_time_nin            IN BOOLEAN := TRUE,
        id_episode_in           IN exam_question_response.id_episode%TYPE DEFAULT NULL,
        id_episode_nin          IN BOOLEAN := TRUE,
        dt_last_update_tstz_in  IN exam_question_response.dt_last_update_tstz%TYPE DEFAULT NULL,
        dt_last_update_tstz_nin IN BOOLEAN := TRUE,
        id_prof_last_update_in  IN exam_question_response.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin IN BOOLEAN := TRUE,
        where_in                VARCHAR2,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                IN OUT table_varchar
    );

    PROCEDURE upd
    (
        id_exam_req_det_in      IN exam_question_response.id_exam_req_det%TYPE DEFAULT NULL,
        id_exam_req_det_nin     IN BOOLEAN := TRUE,
        id_questionnaire_in     IN exam_question_response.id_questionnaire%TYPE DEFAULT NULL,
        id_questionnaire_nin    IN BOOLEAN := TRUE,
        id_response_in          IN exam_question_response.id_response%TYPE DEFAULT NULL,
        id_response_nin         IN BOOLEAN := TRUE,
        notes_in                IN exam_question_response.notes%TYPE DEFAULT NULL,
        notes_nin               IN BOOLEAN := TRUE,
        create_user_in          IN exam_question_response.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN exam_question_response.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN exam_question_response.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN exam_question_response.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN exam_question_response.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN exam_question_response.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        flg_time_in             IN exam_question_response.flg_time%TYPE DEFAULT NULL,
        flg_time_nin            IN BOOLEAN := TRUE,
        id_episode_in           IN exam_question_response.id_episode%TYPE DEFAULT NULL,
        id_episode_nin          IN BOOLEAN := TRUE,
        dt_last_update_tstz_in  IN exam_question_response.dt_last_update_tstz%TYPE DEFAULT NULL,
        dt_last_update_tstz_nin IN BOOLEAN := TRUE,
        id_prof_last_update_in  IN exam_question_response.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin IN BOOLEAN := TRUE,
        where_in                VARCHAR2,
        handle_error_in         IN BOOLEAN := TRUE
    );

    PROCEDURE upd_ins
    (
        id_exam_question_response_in IN exam_question_response.id_exam_question_response%TYPE,
        id_exam_req_det_in           IN exam_question_response.id_exam_req_det%TYPE DEFAULT NULL,
        id_questionnaire_in          IN exam_question_response.id_questionnaire%TYPE DEFAULT NULL,
        id_response_in               IN exam_question_response.id_response%TYPE DEFAULT NULL,
        notes_in                     IN exam_question_response.notes%TYPE DEFAULT NULL,
        create_user_in               IN exam_question_response.create_user%TYPE DEFAULT NULL,
        create_time_in               IN exam_question_response.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN exam_question_response.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN exam_question_response.update_user%TYPE DEFAULT NULL,
        update_time_in               IN exam_question_response.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN exam_question_response.update_institution%TYPE DEFAULT NULL,
        flg_time_in                  IN exam_question_response.flg_time%TYPE DEFAULT NULL,
        id_episode_in                IN exam_question_response.id_episode%TYPE DEFAULT NULL,
        dt_last_update_tstz_in       IN exam_question_response.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_prof_last_update_in       IN exam_question_response.id_prof_last_update%TYPE DEFAULT NULL,
        handle_error_in              IN BOOLEAN := TRUE,
        rows_out                     OUT table_varchar
    );

    PROCEDURE upd_ins
    (
        id_exam_question_response_in IN exam_question_response.id_exam_question_response%TYPE,
        id_exam_req_det_in           IN exam_question_response.id_exam_req_det%TYPE DEFAULT NULL,
        id_questionnaire_in          IN exam_question_response.id_questionnaire%TYPE DEFAULT NULL,
        id_response_in               IN exam_question_response.id_response%TYPE DEFAULT NULL,
        notes_in                     IN exam_question_response.notes%TYPE DEFAULT NULL,
        create_user_in               IN exam_question_response.create_user%TYPE DEFAULT NULL,
        create_time_in               IN exam_question_response.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN exam_question_response.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN exam_question_response.update_user%TYPE DEFAULT NULL,
        update_time_in               IN exam_question_response.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN exam_question_response.update_institution%TYPE DEFAULT NULL,
        flg_time_in                  IN exam_question_response.flg_time%TYPE DEFAULT NULL,
        id_episode_in                IN exam_question_response.id_episode%TYPE DEFAULT NULL,
        dt_last_update_tstz_in       IN exam_question_response.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_prof_last_update_in       IN exam_question_response.id_prof_last_update%TYPE DEFAULT NULL,
        handle_error_in              IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        rec_in          IN exam_question_response%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    PROCEDURE upd
    (
        rec_in          IN exam_question_response%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    PROCEDURE upd
    (
        col_in            IN exam_question_response_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    PROCEDURE upd
    (
        col_in            IN exam_question_response_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_exam_question_response_in IN exam_question_response.id_exam_question_response%TYPE,
        handle_error_in              IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_exam_question_response_in IN exam_question_response.id_exam_question_response%TYPE,
        handle_error_in              IN BOOLEAN := TRUE,
        rows_out                     OUT table_varchar
    );

    -- Delete all rows for primary key column ID_EXAM_QUESTION_RESPONSE
    PROCEDURE del_id_exam_question_response
    (
        id_exam_question_response_in IN exam_question_response.id_exam_question_response%TYPE,
        handle_error_in              IN BOOLEAN := TRUE
    );

    -- Delete all rows for primary key column ID_EXAM_QUESTION_RESPONSE
    PROCEDURE del_id_exam_question_response
    (
        id_exam_question_response_in IN exam_question_response.id_exam_question_response%TYPE,
        handle_error_in              IN BOOLEAN := TRUE,
        rows_out                     OUT table_varchar
    );

    -- Delete all rows for this EQE_EPE_FK foreign key value
    PROCEDURE del_eqe_epe_fk
    (
        id_episode_in   IN exam_question_response.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EQE_EPE_FK foreign key value
    PROCEDURE del_eqe_epe_fk
    (
        id_episode_in   IN exam_question_response.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this EQE_ERT_FK foreign key value
    PROCEDURE del_eqe_ert_fk
    (
        id_exam_req_det_in IN exam_question_response.id_exam_req_det%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EQE_ERT_FK foreign key value
    PROCEDURE del_eqe_ert_fk
    (
        id_exam_req_det_in IN exam_question_response.id_exam_req_det%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    -- Delete all rows for this EQE_PL_FK foreign key value
    PROCEDURE del_eqe_pl_fk
    (
        id_prof_last_update_in IN exam_question_response.id_prof_last_update%TYPE,
        handle_error_in        IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EQE_PL_FK foreign key value
    PROCEDURE del_eqe_pl_fk
    (
        id_prof_last_update_in IN exam_question_response.id_prof_last_update%TYPE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    );

    -- Delete all rows for this EQE_QRE_FK foreign key value
    PROCEDURE del_eqe_qre_fk
    (
        id_questionnaire_in IN exam_question_response.id_questionnaire%TYPE,
        id_response_in      IN exam_question_response.id_response%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    );

    -- Delete all rows for this EQE_QRE_FK foreign key value
    PROCEDURE del_eqe_qre_fk
    (
        id_questionnaire_in IN exam_question_response.id_questionnaire%TYPE,
        id_response_in      IN exam_question_response.id_response%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified VARCHAR2 column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified DATE column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified TIMESTAMP column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows where the specified NUMBER column has
    -- a value that matches the specfified value.
    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(exam_question_response_inout IN OUT exam_question_response%ROWTYPE);

    FUNCTION initrec RETURN exam_question_response%ROWTYPE;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN exam_question_response_tc;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN exam_question_response_tc;

END ts_exam_question_response;
/
