/*-- Last Change Revision: $Rev: 2028221 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:44:31 +0100 (ter, 02 ago 2022) $*/
CREATE OR REPLACE PACKAGE BODY TS_ICNP_EPIS_INTERVENTION_HIST
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {657BD35E-2E48-4CD4-B14E-41420B8433B3}
| Created On: Novembro 11, 2011 11:57:28
| Created By: ALERT
*/
IS


   e_null_column_value EXCEPTION;
   PRAGMA EXCEPTION_INIT (e_null_column_value, -1400);
   --
   e_existing_fky_reference EXCEPTION;
   PRAGMA EXCEPTION_INIT (e_existing_fky_reference, -2266);
   --
   e_check_constraint_failure EXCEPTION;
   PRAGMA EXCEPTION_INIT (e_check_constraint_failure, -2290);
   --
   e_no_parent_key EXCEPTION;
   PRAGMA EXCEPTION_INIT (e_no_parent_key, -2291);
   --
   e_child_record_found EXCEPTION;
   PRAGMA EXCEPTION_INIT (e_child_record_found, -2292);
   --
   e_forall_error EXCEPTION;
   PRAGMA EXCEPTION_INIT (e_forall_error, -24381);
   --
   -- Defined for backward compatibilty.
   e_integ_constraint_failure EXCEPTION;
   PRAGMA EXCEPTION_INIT (e_integ_constraint_failure, -2291);

    -- Private utilities
   PROCEDURE get_constraint_info (
      owner_out OUT ALL_CONSTRAINTS.OWNER%TYPE
     ,name_out OUT ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE)
   IS
      l_errm VARCHAR2(2000) := DBMS_UTILITY.FORMAT_ERROR_STACK;
      dotloc PLS_INTEGER;
      leftloc PLS_INTEGER;
   BEGIN
      dotloc  := INSTR (l_errm,'.');
      leftloc := INSTR (l_errm,'(');
      owner_out := SUBSTR (l_errm, leftloc+1, dotloc-leftloc-1);
      name_out  := SUBSTR (l_errm, dotloc+1, INSTR (l_errm,')')-dotloc-1);
   END get_constraint_info;
   -- Public programs

   PROCEDURE ins (
      id_icnp_epis_interv_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE
      ,
      id_icnp_epis_interv_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV%TYPE DEFAULT NULL,
      id_patient_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      id_episode_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE%TYPE DEFAULT NULL,
      id_composition_in IN ICNP_EPIS_INTERVENTION_HIST.ID_COMPOSITION%TYPE DEFAULT NULL,
      flg_status_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_STATUS%TYPE DEFAULT NULL,
      freq_in IN ICNP_EPIS_INTERVENTION_HIST.FREQ%TYPE DEFAULT NULL,
      notes_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES%TYPE DEFAULT NULL,
      id_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF%TYPE DEFAULT NULL,
      notes_close_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE%TYPE DEFAULT NULL,
      id_prof_close_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CLOSE%TYPE DEFAULT NULL,
      forward_interv_in IN ICNP_EPIS_INTERVENTION_HIST.FORWARD_INTERV%TYPE DEFAULT NULL,
      notes_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_ITERACTION%TYPE DEFAULT NULL,
      notes_close_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE_ITERACTION%TYPE DEFAULT NULL,
      flg_time_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TIME%TYPE DEFAULT NULL,
      flg_type_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TYPE%TYPE DEFAULT NULL,
      interval_in IN ICNP_EPIS_INTERVENTION_HIST.INTERVAL%TYPE DEFAULT NULL,
      num_take_in IN ICNP_EPIS_INTERVENTION_HIST.NUM_TAKE%TYPE DEFAULT NULL,
      dt_icnp_epis_interv_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_ICNP_EPIS_INTERV_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_next_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_NEXT_TSTZ%TYPE DEFAULT NULL,
      dt_close_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CLOSE_TSTZ%TYPE DEFAULT NULL,
      flg_interval_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_INTERVAL_UNIT%TYPE DEFAULT NULL,
      id_episode_origin_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      duration_in IN ICNP_EPIS_INTERVENTION_HIST.DURATION%TYPE DEFAULT NULL,
      flg_duration_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_DURATION_UNIT%TYPE DEFAULT NULL,
      create_user_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_prof_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_LAST_UPDATE%TYPE DEFAULT NULL,
      dt_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.DT_LAST_UPDATE%TYPE DEFAULT NULL,
      id_suspend_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_REASON%TYPE DEFAULT NULL,
      id_suspend_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_PROF%TYPE DEFAULT NULL,
      suspend_notes_in IN ICNP_EPIS_INTERVENTION_HIST.SUSPEND_NOTES%TYPE DEFAULT NULL,
      dt_suspend_in IN ICNP_EPIS_INTERVENTION_HIST.DT_SUSPEND%TYPE DEFAULT NULL,
      id_cancel_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      id_cancel_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_PROF%TYPE DEFAULT NULL,
      cancel_notes_in IN ICNP_EPIS_INTERVENTION_HIST.CANCEL_NOTES%TYPE DEFAULT NULL,
      dt_cancel_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CANCEL%TYPE DEFAULT NULL,
      id_prof_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CREATED_HIST%TYPE DEFAULT NULL,
      dt_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CREATED_HIST%TYPE DEFAULT NULL,
      id_order_recurr_plan_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ORDER_RECURR_PLAN%TYPE DEFAULT NULL,
      flg_prn_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_PRN%TYPE DEFAULT NULL,
      prn_notes_in IN ICNP_EPIS_INTERVENTION_HIST.PRN_NOTES%TYPE DEFAULT NULL,
      id_icnp_epis_interv_parent_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_PARENT%TYPE DEFAULT NULL
     ,handle_error_in IN BOOLEAN := TRUE
      , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN

     INSERT INTO ICNP_EPIS_INTERVENTION_HIST (
         ID_ICNP_EPIS_INTERV_HIST,
         ID_ICNP_EPIS_INTERV,
         ID_PATIENT,
         ID_EPISODE,
         ID_COMPOSITION,
         FLG_STATUS,
         FREQ,
         NOTES,
         ID_PROF,
         NOTES_CLOSE,
         ID_PROF_CLOSE,
         FORWARD_INTERV,
         NOTES_ITERACTION,
         NOTES_CLOSE_ITERACTION,
         FLG_TIME,
         FLG_TYPE,
         INTERVAL,
         NUM_TAKE,
         DT_ICNP_EPIS_INTERV_TSTZ,
         DT_BEGIN_TSTZ,
         DT_END_TSTZ,
         DT_NEXT_TSTZ,
         DT_CLOSE_TSTZ,
         FLG_INTERVAL_UNIT,
         ID_EPISODE_ORIGIN,
         ID_EPISODE_DESTINATION,
         DURATION,
         FLG_DURATION_UNIT,
         CREATE_USER,
         CREATE_TIME,
         CREATE_INSTITUTION,
         UPDATE_USER,
         UPDATE_TIME,
         UPDATE_INSTITUTION,
         ID_PROF_LAST_UPDATE,
         DT_LAST_UPDATE,
         ID_SUSPEND_REASON,
         ID_SUSPEND_PROF,
         SUSPEND_NOTES,
         DT_SUSPEND,
         ID_CANCEL_REASON,
         ID_CANCEL_PROF,
         CANCEL_NOTES,
         DT_CANCEL,
         ID_PROF_CREATED_HIST,
         DT_CREATED_HIST,
         ID_ORDER_RECURR_PLAN,
         FLG_PRN,
         PRN_NOTES,
         ID_ICNP_EPIS_INTERV_PARENT
         )
      VALUES (
         id_icnp_epis_interv_hist_in,
         id_icnp_epis_interv_in,
         id_patient_in,
         id_episode_in,
         id_composition_in,
         flg_status_in,
         freq_in,
         notes_in,
         id_prof_in,
         notes_close_in,
         id_prof_close_in,
         forward_interv_in,
         notes_iteraction_in,
         notes_close_iteraction_in,
         flg_time_in,
         flg_type_in,
         interval_in,
         num_take_in,
         dt_icnp_epis_interv_tstz_in,
         dt_begin_tstz_in,
         dt_end_tstz_in,
         dt_next_tstz_in,
         dt_close_tstz_in,
         flg_interval_unit_in,
         id_episode_origin_in,
         id_episode_destination_in,
         duration_in,
         flg_duration_unit_in,
         create_user_in,
         create_time_in,
         create_institution_in,
         update_user_in,
         update_time_in,
         update_institution_in,
         id_prof_last_update_in,
         dt_last_update_in,
         id_suspend_reason_in,
         id_suspend_prof_in,
         suspend_notes_in,
         dt_suspend_in,
         id_cancel_reason_in,
         id_cancel_prof_in,
         cancel_notes_in,
         dt_cancel_in,
         id_prof_created_hist_in,
         dt_created_hist_in,
         id_order_recurr_plan_in,
         flg_prn_in,
         prn_notes_in,
         id_icnp_epis_interv_parent_in
         ) RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN DUP_VAL_ON_INDEX
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_err_instance_id PLS_INTEGER;
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF FALSE THEN NULL; -- Placeholder in case no unique indexes
           ELSE
              pk_alert_exceptions.raise_error (
                    error_name_in => 'DUPLICATE-VALUE'
                    ,name1_in => 'OWNER'
                    ,value1_in => l_owner
                    ,name2_in => 'CONSTRAINT_NAME'
                    ,value2_in => l_name
                    ,name3_in => 'TABLE_NAME'
                    ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           END IF;
        END;
        END IF;
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           IF l_name = 'IEIH_EIPI_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_ICNP_EPIS_INTERV'
               , value_in => id_icnp_epis_interv_in);
           END IF;
           IF l_name = 'IEIH_EIPI_FW_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'FORWARD_INTERV'
               , value_in => forward_interv_in);
           END IF;
           IF l_name = 'IEIH_EPIS_DEST_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_EPISODE_DESTINATION'
               , value_in => id_episode_destination_in);
           END IF;
           IF l_name = 'IEIH_EPIS_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_EPISODE'
               , value_in => id_episode_in);
           END IF;
           IF l_name = 'IEIH_EPIS_ORIGIN_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_EPISODE_ORIGIN'
               , value_in => id_episode_origin_in);
           END IF;
           IF l_name = 'IEIH_ORP_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_ORDER_RECURR_PLAN'
               , value_in => id_order_recurr_plan_in);
           END IF;
           IF l_name = 'IEIH_PAT_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PATIENT'
               , value_in => id_patient_in);
           END IF;
           IF l_name = 'IEIH_PROF_CANC_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PROF_CLOSE'
               , value_in => id_prof_close_in);
           END IF;
           IF l_name = 'IEIH_PROF_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PROF'
               , value_in => id_prof_in);
           END IF;
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
      WHEN e_null_column_value
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           v_errm VARCHAR2(2000) := DBMS_UTILITY.FORMAT_ERROR_STACK;
           dot1loc INTEGER;
           dot2loc INTEGER;
           parenloc INTEGER;
           c_owner ALL_CONSTRAINTS.OWNER%TYPE;
           c_tabname ALL_TABLES.TABLE_NAME%TYPE;
           c_colname ALL_TAB_COLUMNS.COLUMN_NAME%TYPE;
        BEGIN
           dot1loc := INSTR (v_errm, '.', 1, 1);
           dot2loc := INSTR (v_errm, '.', 1, 2);
           parenloc := INSTR (v_errm, '(');
           c_owner :=SUBSTR (v_errm, parenloc+1, dot1loc-parenloc-1);
           c_tabname := SUBSTR (v_errm, dot1loc+1, dot2loc-dot1loc-1);
           c_colname := SUBSTR (v_errm, dot2loc+1, INSTR (v_errm,')')-dot2loc-1);

           pk_alert_exceptions.raise_error (
                error_name_in => 'COLUMN-CANNOT-BE-NULL'
               ,name1_in => 'OWNER'
               ,value1_in => c_owner
               ,name2_in => 'TABLE_NAME'
               ,value2_in => c_tabname
               ,name3_in => 'COLUMN_NAME'
               ,value3_in => c_colname);
        END;
        END IF;
   END ins;

   PROCEDURE ins (
      id_icnp_epis_interv_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE
      ,
      id_icnp_epis_interv_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV%TYPE DEFAULT NULL,
      id_patient_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      id_episode_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE%TYPE DEFAULT NULL,
      id_composition_in IN ICNP_EPIS_INTERVENTION_HIST.ID_COMPOSITION%TYPE DEFAULT NULL,
      flg_status_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_STATUS%TYPE DEFAULT NULL,
      freq_in IN ICNP_EPIS_INTERVENTION_HIST.FREQ%TYPE DEFAULT NULL,
      notes_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES%TYPE DEFAULT NULL,
      id_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF%TYPE DEFAULT NULL,
      notes_close_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE%TYPE DEFAULT NULL,
      id_prof_close_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CLOSE%TYPE DEFAULT NULL,
      forward_interv_in IN ICNP_EPIS_INTERVENTION_HIST.FORWARD_INTERV%TYPE DEFAULT NULL,
      notes_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_ITERACTION%TYPE DEFAULT NULL,
      notes_close_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE_ITERACTION%TYPE DEFAULT NULL,
      flg_time_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TIME%TYPE DEFAULT NULL,
      flg_type_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TYPE%TYPE DEFAULT NULL,
      interval_in IN ICNP_EPIS_INTERVENTION_HIST.INTERVAL%TYPE DEFAULT NULL,
      num_take_in IN ICNP_EPIS_INTERVENTION_HIST.NUM_TAKE%TYPE DEFAULT NULL,
      dt_icnp_epis_interv_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_ICNP_EPIS_INTERV_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_next_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_NEXT_TSTZ%TYPE DEFAULT NULL,
      dt_close_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CLOSE_TSTZ%TYPE DEFAULT NULL,
      flg_interval_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_INTERVAL_UNIT%TYPE DEFAULT NULL,
      id_episode_origin_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      duration_in IN ICNP_EPIS_INTERVENTION_HIST.DURATION%TYPE DEFAULT NULL,
      flg_duration_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_DURATION_UNIT%TYPE DEFAULT NULL,
      create_user_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_prof_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_LAST_UPDATE%TYPE DEFAULT NULL,
      dt_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.DT_LAST_UPDATE%TYPE DEFAULT NULL,
      id_suspend_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_REASON%TYPE DEFAULT NULL,
      id_suspend_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_PROF%TYPE DEFAULT NULL,
      suspend_notes_in IN ICNP_EPIS_INTERVENTION_HIST.SUSPEND_NOTES%TYPE DEFAULT NULL,
      dt_suspend_in IN ICNP_EPIS_INTERVENTION_HIST.DT_SUSPEND%TYPE DEFAULT NULL,
      id_cancel_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      id_cancel_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_PROF%TYPE DEFAULT NULL,
      cancel_notes_in IN ICNP_EPIS_INTERVENTION_HIST.CANCEL_NOTES%TYPE DEFAULT NULL,
      dt_cancel_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CANCEL%TYPE DEFAULT NULL,
      id_prof_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CREATED_HIST%TYPE DEFAULT NULL,
      dt_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CREATED_HIST%TYPE DEFAULT NULL,
      id_order_recurr_plan_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ORDER_RECURR_PLAN%TYPE DEFAULT NULL,
      flg_prn_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_PRN%TYPE DEFAULT NULL,
      prn_notes_in IN ICNP_EPIS_INTERVENTION_HIST.PRN_NOTES%TYPE DEFAULT NULL,
      id_icnp_epis_interv_parent_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_PARENT%TYPE DEFAULT NULL
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN

     ins (
      id_icnp_epis_interv_hist_in => id_icnp_epis_interv_hist_in
      ,
      id_icnp_epis_interv_in => id_icnp_epis_interv_in,
      id_patient_in => id_patient_in,
      id_episode_in => id_episode_in,
      id_composition_in => id_composition_in,
      flg_status_in => flg_status_in,
      freq_in => freq_in,
      notes_in => notes_in,
      id_prof_in => id_prof_in,
      notes_close_in => notes_close_in,
      id_prof_close_in => id_prof_close_in,
      forward_interv_in => forward_interv_in,
      notes_iteraction_in => notes_iteraction_in,
      notes_close_iteraction_in => notes_close_iteraction_in,
      flg_time_in => flg_time_in,
      flg_type_in => flg_type_in,
      interval_in => interval_in,
      num_take_in => num_take_in,
      dt_icnp_epis_interv_tstz_in => dt_icnp_epis_interv_tstz_in,
      dt_begin_tstz_in => dt_begin_tstz_in,
      dt_end_tstz_in => dt_end_tstz_in,
      dt_next_tstz_in => dt_next_tstz_in,
      dt_close_tstz_in => dt_close_tstz_in,
      flg_interval_unit_in => flg_interval_unit_in,
      id_episode_origin_in => id_episode_origin_in,
      id_episode_destination_in => id_episode_destination_in,
      duration_in => duration_in,
      flg_duration_unit_in => flg_duration_unit_in,
      create_user_in => create_user_in,
      create_time_in => create_time_in,
      create_institution_in => create_institution_in,
      update_user_in => update_user_in,
      update_time_in => update_time_in,
      update_institution_in => update_institution_in,
      id_prof_last_update_in => id_prof_last_update_in,
      dt_last_update_in => dt_last_update_in,
      id_suspend_reason_in => id_suspend_reason_in,
      id_suspend_prof_in => id_suspend_prof_in,
      suspend_notes_in => suspend_notes_in,
      dt_suspend_in => dt_suspend_in,
      id_cancel_reason_in => id_cancel_reason_in,
      id_cancel_prof_in => id_cancel_prof_in,
      cancel_notes_in => cancel_notes_in,
      dt_cancel_in => dt_cancel_in,
      id_prof_created_hist_in => id_prof_created_hist_in,
      dt_created_hist_in => dt_created_hist_in,
      id_order_recurr_plan_in => id_order_recurr_plan_in,
      flg_prn_in => flg_prn_in,
      prn_notes_in => prn_notes_in,
      id_icnp_epis_interv_parent_in => id_icnp_epis_interv_parent_in
     ,handle_error_in => handle_error_in
      ,rows_out => rows_out
      );
   END ins;

   /*
   START Special logic for handling LOB columns....
   */

   PROCEDURE n_ins_clobs_in_chunks (
      id_icnp_epis_interv_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE,
      id_icnp_epis_interv_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV%TYPE DEFAULT NULL,
      id_patient_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      id_episode_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE%TYPE DEFAULT NULL,
      id_composition_in IN ICNP_EPIS_INTERVENTION_HIST.ID_COMPOSITION%TYPE DEFAULT NULL,
      flg_status_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_STATUS%TYPE DEFAULT NULL,
      freq_in IN ICNP_EPIS_INTERVENTION_HIST.FREQ%TYPE DEFAULT NULL,
      notes_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES%TYPE DEFAULT NULL,
      id_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF%TYPE DEFAULT NULL,
      notes_close_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE%TYPE DEFAULT NULL,
      id_prof_close_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CLOSE%TYPE DEFAULT NULL,
      forward_interv_in IN ICNP_EPIS_INTERVENTION_HIST.FORWARD_INTERV%TYPE DEFAULT NULL,
      notes_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_ITERACTION%TYPE DEFAULT NULL,
      notes_close_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE_ITERACTION%TYPE DEFAULT NULL,
      flg_time_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TIME%TYPE DEFAULT NULL,
      flg_type_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TYPE%TYPE DEFAULT NULL,
      interval_in IN ICNP_EPIS_INTERVENTION_HIST.INTERVAL%TYPE DEFAULT NULL,
      num_take_in IN ICNP_EPIS_INTERVENTION_HIST.NUM_TAKE%TYPE DEFAULT NULL,
      dt_icnp_epis_interv_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_ICNP_EPIS_INTERV_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_next_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_NEXT_TSTZ%TYPE DEFAULT NULL,
      dt_close_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CLOSE_TSTZ%TYPE DEFAULT NULL,
      flg_interval_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_INTERVAL_UNIT%TYPE DEFAULT NULL,
      id_episode_origin_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      duration_in IN ICNP_EPIS_INTERVENTION_HIST.DURATION%TYPE DEFAULT NULL,
      flg_duration_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_DURATION_UNIT%TYPE DEFAULT NULL,
      create_user_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_prof_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_LAST_UPDATE%TYPE DEFAULT NULL,
      dt_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.DT_LAST_UPDATE%TYPE DEFAULT NULL,
      id_suspend_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_REASON%TYPE DEFAULT NULL,
      id_suspend_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_PROF%TYPE DEFAULT NULL,
      suspend_notes_in IN ICNP_EPIS_INTERVENTION_HIST.SUSPEND_NOTES%TYPE DEFAULT NULL,
      dt_suspend_in IN ICNP_EPIS_INTERVENTION_HIST.DT_SUSPEND%TYPE DEFAULT NULL,
      id_cancel_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      id_cancel_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_PROF%TYPE DEFAULT NULL,
      cancel_notes_in IN ICNP_EPIS_INTERVENTION_HIST.CANCEL_NOTES%TYPE DEFAULT NULL,
      dt_cancel_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CANCEL%TYPE DEFAULT NULL,
      id_prof_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CREATED_HIST%TYPE DEFAULT NULL,
      dt_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CREATED_HIST%TYPE DEFAULT NULL,
      id_order_recurr_plan_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ORDER_RECURR_PLAN%TYPE DEFAULT NULL,
      flg_prn_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_PRN%TYPE DEFAULT NULL,
      id_icnp_epis_interv_parent_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_PARENT%TYPE DEFAULT NULL,
      handle_error_in IN BOOLEAN := TRUE,
      clob_columns_in IN varchar2_t,
      clob_pieces_in IN  varchar2_t
   ) IS
        l_PRN_NOTES clob;
      i                PLS_INTEGER;
      current_column varchar2(30) := '';
   BEGIN
      /* Be aware, PLSQL limitations on temporary clobs prevent multiple CLOB
         variables from pointing to the same temporary CLOB (it creates copies).
         Otherwise, the code could have been written a bit more compactly. */

      FOR i IN clob_columns_in.FIRST .. clob_columns_in.LAST
      LOOP
         /* Even when all clobs are null, DOA must send 1 row so skip it. */
         IF clob_columns_in (i) IS NOT NULL
         THEN
            IF current_column <> clob_columns_in (i) OR current_column IS NULL
            THEN
               current_column := LOWER (clob_columns_in (i));

               CASE current_column
                  WHEN 'prn_notes_in'
                  THEN
                     IF l_PRN_NOTES IS NULL
                     THEN
                       DBMS_LOB.createtemporary (
                         l_PRN_NOTES, TRUE, DBMS_LOB.CALL);
                     END IF;
               END CASE;
            END IF;

            CASE current_column
              WHEN 'prn_notes_in'
              THEN
                  DBMS_LOB.writeappend (l_PRN_NOTES
                                      , LENGTH (clob_pieces_in (i))
                                      , clob_pieces_in (i)
                                       );
            END CASE;
         END IF;
      END LOOP;

      ins (
         id_icnp_epis_interv_hist_in => id_icnp_epis_interv_hist_in,
         id_icnp_epis_interv_in => id_icnp_epis_interv_in,
         id_patient_in => id_patient_in,
         id_episode_in => id_episode_in,
         id_composition_in => id_composition_in,
         flg_status_in => flg_status_in,
         freq_in => freq_in,
         notes_in => notes_in,
         id_prof_in => id_prof_in,
         notes_close_in => notes_close_in,
         id_prof_close_in => id_prof_close_in,
         forward_interv_in => forward_interv_in,
         notes_iteraction_in => notes_iteraction_in,
         notes_close_iteraction_in => notes_close_iteraction_in,
         flg_time_in => flg_time_in,
         flg_type_in => flg_type_in,
         interval_in => interval_in,
         num_take_in => num_take_in,
         dt_icnp_epis_interv_tstz_in => dt_icnp_epis_interv_tstz_in,
         dt_begin_tstz_in => dt_begin_tstz_in,
         dt_end_tstz_in => dt_end_tstz_in,
         dt_next_tstz_in => dt_next_tstz_in,
         dt_close_tstz_in => dt_close_tstz_in,
         flg_interval_unit_in => flg_interval_unit_in,
         id_episode_origin_in => id_episode_origin_in,
         id_episode_destination_in => id_episode_destination_in,
         duration_in => duration_in,
         flg_duration_unit_in => flg_duration_unit_in,
         create_user_in => create_user_in,
         create_time_in => create_time_in,
         create_institution_in => create_institution_in,
         update_user_in => update_user_in,
         update_time_in => update_time_in,
         update_institution_in => update_institution_in,
         id_prof_last_update_in => id_prof_last_update_in,
         dt_last_update_in => dt_last_update_in,
         id_suspend_reason_in => id_suspend_reason_in,
         id_suspend_prof_in => id_suspend_prof_in,
         suspend_notes_in => suspend_notes_in,
         dt_suspend_in => dt_suspend_in,
         id_cancel_reason_in => id_cancel_reason_in,
         id_cancel_prof_in => id_cancel_prof_in,
         cancel_notes_in => cancel_notes_in,
         dt_cancel_in => dt_cancel_in,
         id_prof_created_hist_in => id_prof_created_hist_in,
         dt_created_hist_in => dt_created_hist_in,
         id_order_recurr_plan_in => id_order_recurr_plan_in,
         flg_prn_in => flg_prn_in,
         prn_notes_in => l_PRN_NOTES,
         id_icnp_epis_interv_parent_in => id_icnp_epis_interv_parent_in,
         handle_error_in => handle_error_in
         );

   END n_ins_clobs_in_chunks;

   PROCEDURE n_upd_clobs_in_chunks (
      id_icnp_epis_interv_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE,
      id_icnp_epis_interv_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV%TYPE DEFAULT NULL,
      id_patient_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      id_episode_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE%TYPE DEFAULT NULL,
      id_composition_in IN ICNP_EPIS_INTERVENTION_HIST.ID_COMPOSITION%TYPE DEFAULT NULL,
      flg_status_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_STATUS%TYPE DEFAULT NULL,
      freq_in IN ICNP_EPIS_INTERVENTION_HIST.FREQ%TYPE DEFAULT NULL,
      notes_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES%TYPE DEFAULT NULL,
      id_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF%TYPE DEFAULT NULL,
      notes_close_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE%TYPE DEFAULT NULL,
      id_prof_close_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CLOSE%TYPE DEFAULT NULL,
      forward_interv_in IN ICNP_EPIS_INTERVENTION_HIST.FORWARD_INTERV%TYPE DEFAULT NULL,
      notes_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_ITERACTION%TYPE DEFAULT NULL,
      notes_close_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE_ITERACTION%TYPE DEFAULT NULL,
      flg_time_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TIME%TYPE DEFAULT NULL,
      flg_type_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TYPE%TYPE DEFAULT NULL,
      interval_in IN ICNP_EPIS_INTERVENTION_HIST.INTERVAL%TYPE DEFAULT NULL,
      num_take_in IN ICNP_EPIS_INTERVENTION_HIST.NUM_TAKE%TYPE DEFAULT NULL,
      dt_icnp_epis_interv_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_ICNP_EPIS_INTERV_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_next_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_NEXT_TSTZ%TYPE DEFAULT NULL,
      dt_close_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CLOSE_TSTZ%TYPE DEFAULT NULL,
      flg_interval_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_INTERVAL_UNIT%TYPE DEFAULT NULL,
      id_episode_origin_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      duration_in IN ICNP_EPIS_INTERVENTION_HIST.DURATION%TYPE DEFAULT NULL,
      flg_duration_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_DURATION_UNIT%TYPE DEFAULT NULL,
      create_user_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_prof_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_LAST_UPDATE%TYPE DEFAULT NULL,
      dt_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.DT_LAST_UPDATE%TYPE DEFAULT NULL,
      id_suspend_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_REASON%TYPE DEFAULT NULL,
      id_suspend_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_PROF%TYPE DEFAULT NULL,
      suspend_notes_in IN ICNP_EPIS_INTERVENTION_HIST.SUSPEND_NOTES%TYPE DEFAULT NULL,
      dt_suspend_in IN ICNP_EPIS_INTERVENTION_HIST.DT_SUSPEND%TYPE DEFAULT NULL,
      id_cancel_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      id_cancel_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_PROF%TYPE DEFAULT NULL,
      cancel_notes_in IN ICNP_EPIS_INTERVENTION_HIST.CANCEL_NOTES%TYPE DEFAULT NULL,
      dt_cancel_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CANCEL%TYPE DEFAULT NULL,
      id_prof_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CREATED_HIST%TYPE DEFAULT NULL,
      dt_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CREATED_HIST%TYPE DEFAULT NULL,
      id_order_recurr_plan_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ORDER_RECURR_PLAN%TYPE DEFAULT NULL,
      flg_prn_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_PRN%TYPE DEFAULT NULL,
      id_icnp_epis_interv_parent_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_PARENT%TYPE DEFAULT NULL,
      ignore_if_null_in IN BOOLEAN := TRUE,
      handle_error_in IN BOOLEAN := TRUE,
      clob_columns_in IN varchar2_t,
      clob_pieces_in IN  varchar2_t
      )
   IS
       l_PRN_NOTES clob;
      i                PLS_INTEGER;
      current_column varchar2(30) := '';
      l_rows PLS_INTEGER;
   BEGIN

      /* Be aware, PLSQL limitations on temporary clobs prevent multiple CLOB
         variables from pointing to the same temporary CLOB (it creates copies).
         Otherwise, the code could have been written a bit more compactly. */

      FOR i IN clob_columns_in.FIRST .. clob_columns_in.LAST
      LOOP
         /* Even when all clobs are null, DOA must send 1 row so skip it. */
         IF clob_columns_in (i) IS NOT NULL
         THEN
            IF current_column <> clob_columns_in (i) OR current_column IS NULL
            THEN
               current_column := LOWER (clob_columns_in (i));

               CASE current_column
                  WHEN 'prn_notes_in'
                  THEN
                    IF l_PRN_NOTES IS NULL
                    THEN
                      DBMS_LOB.createtemporary (
                         l_PRN_NOTES, TRUE, DBMS_LOB.CALL);
                    END IF;
               END CASE;
            END IF;

            CASE current_column
              WHEN 'prn_notes_in'
              THEN
                  DBMS_LOB.writeappend (l_PRN_NOTES
                                      , LENGTH (clob_pieces_in (i))
                                      , clob_pieces_in (i)
                                       );
            END CASE;
         END IF;
      END LOOP;

      upd (
         id_icnp_epis_interv_hist_in => id_icnp_epis_interv_hist_in,
         id_icnp_epis_interv_in => id_icnp_epis_interv_in,
         id_patient_in => id_patient_in,
         id_episode_in => id_episode_in,
         id_composition_in => id_composition_in,
         flg_status_in => flg_status_in,
         freq_in => freq_in,
         notes_in => notes_in,
         id_prof_in => id_prof_in,
         notes_close_in => notes_close_in,
         id_prof_close_in => id_prof_close_in,
         forward_interv_in => forward_interv_in,
         notes_iteraction_in => notes_iteraction_in,
         notes_close_iteraction_in => notes_close_iteraction_in,
         flg_time_in => flg_time_in,
         flg_type_in => flg_type_in,
         interval_in => interval_in,
         num_take_in => num_take_in,
         dt_icnp_epis_interv_tstz_in => dt_icnp_epis_interv_tstz_in,
         dt_begin_tstz_in => dt_begin_tstz_in,
         dt_end_tstz_in => dt_end_tstz_in,
         dt_next_tstz_in => dt_next_tstz_in,
         dt_close_tstz_in => dt_close_tstz_in,
         flg_interval_unit_in => flg_interval_unit_in,
         id_episode_origin_in => id_episode_origin_in,
         id_episode_destination_in => id_episode_destination_in,
         duration_in => duration_in,
         flg_duration_unit_in => flg_duration_unit_in,
         create_user_in => create_user_in,
         create_time_in => create_time_in,
         create_institution_in => create_institution_in,
         update_user_in => update_user_in,
         update_time_in => update_time_in,
         update_institution_in => update_institution_in,
         id_prof_last_update_in => id_prof_last_update_in,
         dt_last_update_in => dt_last_update_in,
         id_suspend_reason_in => id_suspend_reason_in,
         id_suspend_prof_in => id_suspend_prof_in,
         suspend_notes_in => suspend_notes_in,
         dt_suspend_in => dt_suspend_in,
         id_cancel_reason_in => id_cancel_reason_in,
         id_cancel_prof_in => id_cancel_prof_in,
         cancel_notes_in => cancel_notes_in,
         dt_cancel_in => dt_cancel_in,
         id_prof_created_hist_in => id_prof_created_hist_in,
         dt_created_hist_in => dt_created_hist_in,
         id_order_recurr_plan_in => id_order_recurr_plan_in,
         flg_prn_in => flg_prn_in,
         prn_notes_in => l_PRN_NOTES,
         id_icnp_epis_interv_parent_in => id_icnp_epis_interv_parent_in,
         handle_error_in => handle_error_in
         );
   END n_upd_clobs_in_chunks;

   PROCEDURE n_upd_ins_clobs_in_chunks (
      id_icnp_epis_interv_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE,
      id_icnp_epis_interv_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV%TYPE DEFAULT NULL,
      id_patient_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      id_episode_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE%TYPE DEFAULT NULL,
      id_composition_in IN ICNP_EPIS_INTERVENTION_HIST.ID_COMPOSITION%TYPE DEFAULT NULL,
      flg_status_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_STATUS%TYPE DEFAULT NULL,
      freq_in IN ICNP_EPIS_INTERVENTION_HIST.FREQ%TYPE DEFAULT NULL,
      notes_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES%TYPE DEFAULT NULL,
      id_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF%TYPE DEFAULT NULL,
      notes_close_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE%TYPE DEFAULT NULL,
      id_prof_close_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CLOSE%TYPE DEFAULT NULL,
      forward_interv_in IN ICNP_EPIS_INTERVENTION_HIST.FORWARD_INTERV%TYPE DEFAULT NULL,
      notes_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_ITERACTION%TYPE DEFAULT NULL,
      notes_close_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE_ITERACTION%TYPE DEFAULT NULL,
      flg_time_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TIME%TYPE DEFAULT NULL,
      flg_type_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TYPE%TYPE DEFAULT NULL,
      interval_in IN ICNP_EPIS_INTERVENTION_HIST.INTERVAL%TYPE DEFAULT NULL,
      num_take_in IN ICNP_EPIS_INTERVENTION_HIST.NUM_TAKE%TYPE DEFAULT NULL,
      dt_icnp_epis_interv_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_ICNP_EPIS_INTERV_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_next_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_NEXT_TSTZ%TYPE DEFAULT NULL,
      dt_close_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CLOSE_TSTZ%TYPE DEFAULT NULL,
      flg_interval_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_INTERVAL_UNIT%TYPE DEFAULT NULL,
      id_episode_origin_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      duration_in IN ICNP_EPIS_INTERVENTION_HIST.DURATION%TYPE DEFAULT NULL,
      flg_duration_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_DURATION_UNIT%TYPE DEFAULT NULL,
      create_user_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_prof_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_LAST_UPDATE%TYPE DEFAULT NULL,
      dt_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.DT_LAST_UPDATE%TYPE DEFAULT NULL,
      id_suspend_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_REASON%TYPE DEFAULT NULL,
      id_suspend_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_PROF%TYPE DEFAULT NULL,
      suspend_notes_in IN ICNP_EPIS_INTERVENTION_HIST.SUSPEND_NOTES%TYPE DEFAULT NULL,
      dt_suspend_in IN ICNP_EPIS_INTERVENTION_HIST.DT_SUSPEND%TYPE DEFAULT NULL,
      id_cancel_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      id_cancel_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_PROF%TYPE DEFAULT NULL,
      cancel_notes_in IN ICNP_EPIS_INTERVENTION_HIST.CANCEL_NOTES%TYPE DEFAULT NULL,
      dt_cancel_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CANCEL%TYPE DEFAULT NULL,
      id_prof_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CREATED_HIST%TYPE DEFAULT NULL,
      dt_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CREATED_HIST%TYPE DEFAULT NULL,
      id_order_recurr_plan_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ORDER_RECURR_PLAN%TYPE DEFAULT NULL,
      flg_prn_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_PRN%TYPE DEFAULT NULL,
      id_icnp_epis_interv_parent_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_PARENT%TYPE DEFAULT NULL,
      ignore_if_null_in IN BOOLEAN DEFAULT TRUE,
      handle_error_in IN BOOLEAN DEFAULT TRUE,
      clob_columns_in IN varchar2_t,
      clob_pieces_in IN  varchar2_t
      )
   IS
   BEGIN
      n_upd_clobs_in_chunks (
         id_icnp_epis_interv_hist_in => id_icnp_epis_interv_hist_in,
         id_icnp_epis_interv_in => id_icnp_epis_interv_in,
         id_patient_in => id_patient_in,
         id_episode_in => id_episode_in,
         id_composition_in => id_composition_in,
         flg_status_in => flg_status_in,
         freq_in => freq_in,
         notes_in => notes_in,
         id_prof_in => id_prof_in,
         notes_close_in => notes_close_in,
         id_prof_close_in => id_prof_close_in,
         forward_interv_in => forward_interv_in,
         notes_iteraction_in => notes_iteraction_in,
         notes_close_iteraction_in => notes_close_iteraction_in,
         flg_time_in => flg_time_in,
         flg_type_in => flg_type_in,
         interval_in => interval_in,
         num_take_in => num_take_in,
         dt_icnp_epis_interv_tstz_in => dt_icnp_epis_interv_tstz_in,
         dt_begin_tstz_in => dt_begin_tstz_in,
         dt_end_tstz_in => dt_end_tstz_in,
         dt_next_tstz_in => dt_next_tstz_in,
         dt_close_tstz_in => dt_close_tstz_in,
         flg_interval_unit_in => flg_interval_unit_in,
         id_episode_origin_in => id_episode_origin_in,
         id_episode_destination_in => id_episode_destination_in,
         duration_in => duration_in,
         flg_duration_unit_in => flg_duration_unit_in,
         create_user_in => create_user_in,
         create_time_in => create_time_in,
         create_institution_in => create_institution_in,
         update_user_in => update_user_in,
         update_time_in => update_time_in,
         update_institution_in => update_institution_in,
         id_prof_last_update_in => id_prof_last_update_in,
         dt_last_update_in => dt_last_update_in,
         id_suspend_reason_in => id_suspend_reason_in,
         id_suspend_prof_in => id_suspend_prof_in,
         suspend_notes_in => suspend_notes_in,
         dt_suspend_in => dt_suspend_in,
         id_cancel_reason_in => id_cancel_reason_in,
         id_cancel_prof_in => id_cancel_prof_in,
         cancel_notes_in => cancel_notes_in,
         dt_cancel_in => dt_cancel_in,
         id_prof_created_hist_in => id_prof_created_hist_in,
         dt_created_hist_in => dt_created_hist_in,
         id_order_recurr_plan_in => id_order_recurr_plan_in,
         flg_prn_in => flg_prn_in,
         id_icnp_epis_interv_parent_in => id_icnp_epis_interv_parent_in,
         clob_columns_in => clob_columns_in ,
         clob_pieces_in => clob_pieces_in ,
         ignore_if_null_in => ignore_if_null_in,
         handle_error_in => handle_error_in
       );

      IF SQL%ROWCOUNT = 0
      THEN
         n_ins_clobs_in_chunks (
            id_icnp_epis_interv_hist_in => id_icnp_epis_interv_hist_in,
            id_icnp_epis_interv_in => id_icnp_epis_interv_in,
            id_patient_in => id_patient_in,
            id_episode_in => id_episode_in,
            id_composition_in => id_composition_in,
            flg_status_in => flg_status_in,
            freq_in => freq_in,
            notes_in => notes_in,
            id_prof_in => id_prof_in,
            notes_close_in => notes_close_in,
            id_prof_close_in => id_prof_close_in,
            forward_interv_in => forward_interv_in,
            notes_iteraction_in => notes_iteraction_in,
            notes_close_iteraction_in => notes_close_iteraction_in,
            flg_time_in => flg_time_in,
            flg_type_in => flg_type_in,
            interval_in => interval_in,
            num_take_in => num_take_in,
            dt_icnp_epis_interv_tstz_in => dt_icnp_epis_interv_tstz_in,
            dt_begin_tstz_in => dt_begin_tstz_in,
            dt_end_tstz_in => dt_end_tstz_in,
            dt_next_tstz_in => dt_next_tstz_in,
            dt_close_tstz_in => dt_close_tstz_in,
            flg_interval_unit_in => flg_interval_unit_in,
            id_episode_origin_in => id_episode_origin_in,
            id_episode_destination_in => id_episode_destination_in,
            duration_in => duration_in,
            flg_duration_unit_in => flg_duration_unit_in,
            create_user_in => create_user_in,
            create_time_in => create_time_in,
            create_institution_in => create_institution_in,
            update_user_in => update_user_in,
            update_time_in => update_time_in,
            update_institution_in => update_institution_in,
            id_prof_last_update_in => id_prof_last_update_in,
            dt_last_update_in => dt_last_update_in,
            id_suspend_reason_in => id_suspend_reason_in,
            id_suspend_prof_in => id_suspend_prof_in,
            suspend_notes_in => suspend_notes_in,
            dt_suspend_in => dt_suspend_in,
            id_cancel_reason_in => id_cancel_reason_in,
            id_cancel_prof_in => id_cancel_prof_in,
            cancel_notes_in => cancel_notes_in,
            dt_cancel_in => dt_cancel_in,
            id_prof_created_hist_in => id_prof_created_hist_in,
            dt_created_hist_in => dt_created_hist_in,
            id_order_recurr_plan_in => id_order_recurr_plan_in,
            flg_prn_in => flg_prn_in,
            id_icnp_epis_interv_parent_in => id_icnp_epis_interv_parent_in,
            clob_columns_in => clob_columns_in ,
            clob_pieces_in => clob_pieces_in ,
            handle_error_in => handle_error_in
         );
      END IF;
   END n_upd_ins_clobs_in_chunks;

   /*
   END Special logic for handling LOB columns.
   */

   PROCEDURE ins (
      rec_in IN ICNP_EPIS_INTERVENTION_HIST%ROWTYPE
     ,gen_pky_in IN BOOLEAN DEFAULT FALSE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   )
   IS
      l_rec ICNP_EPIS_INTERVENTION_HIST%ROWTYPE := rec_in;
   BEGIN
      IF gen_pky_in THEN
         l_rec.ID_ICNP_EPIS_INTERV_HIST := next_key (sequence_in);
      END IF;
      ins (
         id_icnp_epis_interv_hist_in => l_rec.ID_ICNP_EPIS_INTERV_HIST
         ,
         id_icnp_epis_interv_in => l_rec.ID_ICNP_EPIS_INTERV,
         id_patient_in => l_rec.ID_PATIENT,
         id_episode_in => l_rec.ID_EPISODE,
         id_composition_in => l_rec.ID_COMPOSITION,
         flg_status_in => l_rec.FLG_STATUS,
         freq_in => l_rec.FREQ,
         notes_in => l_rec.NOTES,
         id_prof_in => l_rec.ID_PROF,
         notes_close_in => l_rec.NOTES_CLOSE,
         id_prof_close_in => l_rec.ID_PROF_CLOSE,
         forward_interv_in => l_rec.FORWARD_INTERV,
         notes_iteraction_in => l_rec.NOTES_ITERACTION,
         notes_close_iteraction_in => l_rec.NOTES_CLOSE_ITERACTION,
         flg_time_in => l_rec.FLG_TIME,
         flg_type_in => l_rec.FLG_TYPE,
         interval_in => l_rec.INTERVAL,
         num_take_in => l_rec.NUM_TAKE,
         dt_icnp_epis_interv_tstz_in => l_rec.DT_ICNP_EPIS_INTERV_TSTZ,
         dt_begin_tstz_in => l_rec.DT_BEGIN_TSTZ,
         dt_end_tstz_in => l_rec.DT_END_TSTZ,
         dt_next_tstz_in => l_rec.DT_NEXT_TSTZ,
         dt_close_tstz_in => l_rec.DT_CLOSE_TSTZ,
         flg_interval_unit_in => l_rec.FLG_INTERVAL_UNIT,
         id_episode_origin_in => l_rec.ID_EPISODE_ORIGIN,
         id_episode_destination_in => l_rec.ID_EPISODE_DESTINATION,
         duration_in => l_rec.DURATION,
         flg_duration_unit_in => l_rec.FLG_DURATION_UNIT,
         create_user_in => l_rec.CREATE_USER,
         create_time_in => l_rec.CREATE_TIME,
         create_institution_in => l_rec.CREATE_INSTITUTION,
         update_user_in => l_rec.UPDATE_USER,
         update_time_in => l_rec.UPDATE_TIME,
         update_institution_in => l_rec.UPDATE_INSTITUTION,
         id_prof_last_update_in => l_rec.ID_PROF_LAST_UPDATE,
         dt_last_update_in => l_rec.DT_LAST_UPDATE,
         id_suspend_reason_in => l_rec.ID_SUSPEND_REASON,
         id_suspend_prof_in => l_rec.ID_SUSPEND_PROF,
         suspend_notes_in => l_rec.SUSPEND_NOTES,
         dt_suspend_in => l_rec.DT_SUSPEND,
         id_cancel_reason_in => l_rec.ID_CANCEL_REASON,
         id_cancel_prof_in => l_rec.ID_CANCEL_PROF,
         cancel_notes_in => l_rec.CANCEL_NOTES,
         dt_cancel_in => l_rec.DT_CANCEL,
         id_prof_created_hist_in => l_rec.ID_PROF_CREATED_HIST,
         dt_created_hist_in => l_rec.DT_CREATED_HIST,
         id_order_recurr_plan_in => l_rec.ID_ORDER_RECURR_PLAN,
         flg_prn_in => l_rec.FLG_PRN,
         prn_notes_in => l_rec.PRN_NOTES,
         id_icnp_epis_interv_parent_in => l_rec.ID_ICNP_EPIS_INTERV_PARENT
         ,handle_error_in => handle_error_in
         , rows_out => rows_out
         );
   END ins;

   PROCEDURE ins (
      rec_in IN ICNP_EPIS_INTERVENTION_HIST%ROWTYPE
     ,gen_pky_in IN BOOLEAN DEFAULT FALSE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
   )
   IS
      rows_out TABLE_VARCHAR;
   BEGIN

  ins (
      rec_in => rec_in
     ,gen_pky_in => gen_pky_in
     ,sequence_in => sequence_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
   );

   END ins;

   FUNCTION next_key (sequence_in IN VARCHAR2 := NULL) RETURN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE

   IS
     retval ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE;

   BEGIN
      IF sequence_in IS NULL
      THEN
         SELECT seq_ICNP_EPIS_INTERV_HIST.NEXTVAL INTO retval FROM dual;
      ELSE
         EXECUTE IMMEDIATE
            'SELECT ' || sequence_in || '.NEXTVAL FROM dual'
            INTO retval;
      END IF;
      RETURN retval;
   EXCEPTION
      WHEN OTHERS THEN
        pk_alert_exceptions.raise_error (
           error_name_in => 'SEQUENCE-GENERATION-FAILURE'
           ,name1_in => 'SEQUENCE'
           ,value1_in => NVL (sequence_in, 'seq_ICNP_EPIS_INTERVENTION_HIST')
           );
   END next_key;

   PROCEDURE ins (
      id_icnp_epis_interv_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV%TYPE DEFAULT NULL,
      id_patient_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      id_episode_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE%TYPE DEFAULT NULL,
      id_composition_in IN ICNP_EPIS_INTERVENTION_HIST.ID_COMPOSITION%TYPE DEFAULT NULL,
      flg_status_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_STATUS%TYPE DEFAULT NULL,
      freq_in IN ICNP_EPIS_INTERVENTION_HIST.FREQ%TYPE DEFAULT NULL,
      notes_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES%TYPE DEFAULT NULL,
      id_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF%TYPE DEFAULT NULL,
      notes_close_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE%TYPE DEFAULT NULL,
      id_prof_close_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CLOSE%TYPE DEFAULT NULL,
      forward_interv_in IN ICNP_EPIS_INTERVENTION_HIST.FORWARD_INTERV%TYPE DEFAULT NULL,
      notes_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_ITERACTION%TYPE DEFAULT NULL,
      notes_close_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE_ITERACTION%TYPE DEFAULT NULL,
      flg_time_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TIME%TYPE DEFAULT NULL,
      flg_type_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TYPE%TYPE DEFAULT NULL,
      interval_in IN ICNP_EPIS_INTERVENTION_HIST.INTERVAL%TYPE DEFAULT NULL,
      num_take_in IN ICNP_EPIS_INTERVENTION_HIST.NUM_TAKE%TYPE DEFAULT NULL,
      dt_icnp_epis_interv_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_ICNP_EPIS_INTERV_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_next_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_NEXT_TSTZ%TYPE DEFAULT NULL,
      dt_close_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CLOSE_TSTZ%TYPE DEFAULT NULL,
      flg_interval_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_INTERVAL_UNIT%TYPE DEFAULT NULL,
      id_episode_origin_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      duration_in IN ICNP_EPIS_INTERVENTION_HIST.DURATION%TYPE DEFAULT NULL,
      flg_duration_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_DURATION_UNIT%TYPE DEFAULT NULL,
      create_user_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_prof_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_LAST_UPDATE%TYPE DEFAULT NULL,
      dt_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.DT_LAST_UPDATE%TYPE DEFAULT NULL,
      id_suspend_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_REASON%TYPE DEFAULT NULL,
      id_suspend_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_PROF%TYPE DEFAULT NULL,
      suspend_notes_in IN ICNP_EPIS_INTERVENTION_HIST.SUSPEND_NOTES%TYPE DEFAULT NULL,
      dt_suspend_in IN ICNP_EPIS_INTERVENTION_HIST.DT_SUSPEND%TYPE DEFAULT NULL,
      id_cancel_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      id_cancel_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_PROF%TYPE DEFAULT NULL,
      cancel_notes_in IN ICNP_EPIS_INTERVENTION_HIST.CANCEL_NOTES%TYPE DEFAULT NULL,
      dt_cancel_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CANCEL%TYPE DEFAULT NULL,
      id_prof_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CREATED_HIST%TYPE DEFAULT NULL,
      dt_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CREATED_HIST%TYPE DEFAULT NULL,
      id_order_recurr_plan_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ORDER_RECURR_PLAN%TYPE DEFAULT NULL,
      flg_prn_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_PRN%TYPE DEFAULT NULL,
      prn_notes_in IN ICNP_EPIS_INTERVENTION_HIST.PRN_NOTES%TYPE DEFAULT NULL,
      id_icnp_epis_interv_parent_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_PARENT%TYPE DEFAULT NULL,
      id_icnp_epis_interv_hist_out IN OUT ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE
      ,handle_error_in IN BOOLEAN := TRUE
      , rows_out OUT TABLE_VARCHAR
   )
   IS
        l_pky ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE := next_key;
   BEGIN
      ins (
         id_icnp_epis_interv_hist_in => l_pky,
         id_icnp_epis_interv_in => id_icnp_epis_interv_in,
         id_patient_in => id_patient_in,
         id_episode_in => id_episode_in,
         id_composition_in => id_composition_in,
         flg_status_in => flg_status_in,
         freq_in => freq_in,
         notes_in => notes_in,
         id_prof_in => id_prof_in,
         notes_close_in => notes_close_in,
         id_prof_close_in => id_prof_close_in,
         forward_interv_in => forward_interv_in,
         notes_iteraction_in => notes_iteraction_in,
         notes_close_iteraction_in => notes_close_iteraction_in,
         flg_time_in => flg_time_in,
         flg_type_in => flg_type_in,
         interval_in => interval_in,
         num_take_in => num_take_in,
         dt_icnp_epis_interv_tstz_in => dt_icnp_epis_interv_tstz_in,
         dt_begin_tstz_in => dt_begin_tstz_in,
         dt_end_tstz_in => dt_end_tstz_in,
         dt_next_tstz_in => dt_next_tstz_in,
         dt_close_tstz_in => dt_close_tstz_in,
         flg_interval_unit_in => flg_interval_unit_in,
         id_episode_origin_in => id_episode_origin_in,
         id_episode_destination_in => id_episode_destination_in,
         duration_in => duration_in,
         flg_duration_unit_in => flg_duration_unit_in,
         create_user_in => create_user_in,
         create_time_in => create_time_in,
         create_institution_in => create_institution_in,
         update_user_in => update_user_in,
         update_time_in => update_time_in,
         update_institution_in => update_institution_in,
         id_prof_last_update_in => id_prof_last_update_in,
         dt_last_update_in => dt_last_update_in,
         id_suspend_reason_in => id_suspend_reason_in,
         id_suspend_prof_in => id_suspend_prof_in,
         suspend_notes_in => suspend_notes_in,
         dt_suspend_in => dt_suspend_in,
         id_cancel_reason_in => id_cancel_reason_in,
         id_cancel_prof_in => id_cancel_prof_in,
         cancel_notes_in => cancel_notes_in,
         dt_cancel_in => dt_cancel_in,
         id_prof_created_hist_in => id_prof_created_hist_in,
         dt_created_hist_in => dt_created_hist_in,
         id_order_recurr_plan_in => id_order_recurr_plan_in,
         flg_prn_in => flg_prn_in,
         prn_notes_in => prn_notes_in,
         id_icnp_epis_interv_parent_in => id_icnp_epis_interv_parent_in
         ,handle_error_in => handle_error_in
         , rows_out => rows_out
         );
      id_icnp_epis_interv_hist_out := l_pky;
   END ins;

   PROCEDURE ins (
      id_icnp_epis_interv_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV%TYPE DEFAULT NULL,
      id_patient_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      id_episode_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE%TYPE DEFAULT NULL,
      id_composition_in IN ICNP_EPIS_INTERVENTION_HIST.ID_COMPOSITION%TYPE DEFAULT NULL,
      flg_status_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_STATUS%TYPE DEFAULT NULL,
      freq_in IN ICNP_EPIS_INTERVENTION_HIST.FREQ%TYPE DEFAULT NULL,
      notes_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES%TYPE DEFAULT NULL,
      id_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF%TYPE DEFAULT NULL,
      notes_close_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE%TYPE DEFAULT NULL,
      id_prof_close_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CLOSE%TYPE DEFAULT NULL,
      forward_interv_in IN ICNP_EPIS_INTERVENTION_HIST.FORWARD_INTERV%TYPE DEFAULT NULL,
      notes_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_ITERACTION%TYPE DEFAULT NULL,
      notes_close_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE_ITERACTION%TYPE DEFAULT NULL,
      flg_time_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TIME%TYPE DEFAULT NULL,
      flg_type_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TYPE%TYPE DEFAULT NULL,
      interval_in IN ICNP_EPIS_INTERVENTION_HIST.INTERVAL%TYPE DEFAULT NULL,
      num_take_in IN ICNP_EPIS_INTERVENTION_HIST.NUM_TAKE%TYPE DEFAULT NULL,
      dt_icnp_epis_interv_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_ICNP_EPIS_INTERV_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_next_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_NEXT_TSTZ%TYPE DEFAULT NULL,
      dt_close_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CLOSE_TSTZ%TYPE DEFAULT NULL,
      flg_interval_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_INTERVAL_UNIT%TYPE DEFAULT NULL,
      id_episode_origin_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      duration_in IN ICNP_EPIS_INTERVENTION_HIST.DURATION%TYPE DEFAULT NULL,
      flg_duration_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_DURATION_UNIT%TYPE DEFAULT NULL,
      create_user_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_prof_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_LAST_UPDATE%TYPE DEFAULT NULL,
      dt_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.DT_LAST_UPDATE%TYPE DEFAULT NULL,
      id_suspend_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_REASON%TYPE DEFAULT NULL,
      id_suspend_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_PROF%TYPE DEFAULT NULL,
      suspend_notes_in IN ICNP_EPIS_INTERVENTION_HIST.SUSPEND_NOTES%TYPE DEFAULT NULL,
      dt_suspend_in IN ICNP_EPIS_INTERVENTION_HIST.DT_SUSPEND%TYPE DEFAULT NULL,
      id_cancel_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      id_cancel_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_PROF%TYPE DEFAULT NULL,
      cancel_notes_in IN ICNP_EPIS_INTERVENTION_HIST.CANCEL_NOTES%TYPE DEFAULT NULL,
      dt_cancel_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CANCEL%TYPE DEFAULT NULL,
      id_prof_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CREATED_HIST%TYPE DEFAULT NULL,
      dt_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CREATED_HIST%TYPE DEFAULT NULL,
      id_order_recurr_plan_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ORDER_RECURR_PLAN%TYPE DEFAULT NULL,
      flg_prn_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_PRN%TYPE DEFAULT NULL,
      prn_notes_in IN ICNP_EPIS_INTERVENTION_HIST.PRN_NOTES%TYPE DEFAULT NULL,
      id_icnp_epis_interv_parent_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_PARENT%TYPE DEFAULT NULL,
      id_icnp_epis_interv_hist_out IN OUT ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE
      ,handle_error_in IN BOOLEAN := TRUE
   )
   IS
        rows_out TABLE_VARCHAR;
   BEGIN
      ins (
      id_icnp_epis_interv_in => id_icnp_epis_interv_in,
      id_patient_in => id_patient_in,
      id_episode_in => id_episode_in,
      id_composition_in => id_composition_in,
      flg_status_in => flg_status_in,
      freq_in => freq_in,
      notes_in => notes_in,
      id_prof_in => id_prof_in,
      notes_close_in => notes_close_in,
      id_prof_close_in => id_prof_close_in,
      forward_interv_in => forward_interv_in,
      notes_iteraction_in => notes_iteraction_in,
      notes_close_iteraction_in => notes_close_iteraction_in,
      flg_time_in => flg_time_in,
      flg_type_in => flg_type_in,
      interval_in => interval_in,
      num_take_in => num_take_in,
      dt_icnp_epis_interv_tstz_in => dt_icnp_epis_interv_tstz_in,
      dt_begin_tstz_in => dt_begin_tstz_in,
      dt_end_tstz_in => dt_end_tstz_in,
      dt_next_tstz_in => dt_next_tstz_in,
      dt_close_tstz_in => dt_close_tstz_in,
      flg_interval_unit_in => flg_interval_unit_in,
      id_episode_origin_in => id_episode_origin_in,
      id_episode_destination_in => id_episode_destination_in,
      duration_in => duration_in,
      flg_duration_unit_in => flg_duration_unit_in,
      create_user_in => create_user_in,
      create_time_in => create_time_in,
      create_institution_in => create_institution_in,
      update_user_in => update_user_in,
      update_time_in => update_time_in,
      update_institution_in => update_institution_in,
      id_prof_last_update_in => id_prof_last_update_in,
      dt_last_update_in => dt_last_update_in,
      id_suspend_reason_in => id_suspend_reason_in,
      id_suspend_prof_in => id_suspend_prof_in,
      suspend_notes_in => suspend_notes_in,
      dt_suspend_in => dt_suspend_in,
      id_cancel_reason_in => id_cancel_reason_in,
      id_cancel_prof_in => id_cancel_prof_in,
      cancel_notes_in => cancel_notes_in,
      dt_cancel_in => dt_cancel_in,
      id_prof_created_hist_in => id_prof_created_hist_in,
      dt_created_hist_in => dt_created_hist_in,
      id_order_recurr_plan_in => id_order_recurr_plan_in,
      flg_prn_in => flg_prn_in,
      prn_notes_in => prn_notes_in,
      id_icnp_epis_interv_parent_in => id_icnp_epis_interv_parent_in,
      id_icnp_epis_interv_hist_out => id_icnp_epis_interv_hist_out
      ,handle_error_in => handle_error_in
      , rows_out => rows_out
   );
   END ins;

   FUNCTION ins (
      id_icnp_epis_interv_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV%TYPE DEFAULT NULL,
      id_patient_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      id_episode_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE%TYPE DEFAULT NULL,
      id_composition_in IN ICNP_EPIS_INTERVENTION_HIST.ID_COMPOSITION%TYPE DEFAULT NULL,
      flg_status_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_STATUS%TYPE DEFAULT NULL,
      freq_in IN ICNP_EPIS_INTERVENTION_HIST.FREQ%TYPE DEFAULT NULL,
      notes_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES%TYPE DEFAULT NULL,
      id_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF%TYPE DEFAULT NULL,
      notes_close_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE%TYPE DEFAULT NULL,
      id_prof_close_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CLOSE%TYPE DEFAULT NULL,
      forward_interv_in IN ICNP_EPIS_INTERVENTION_HIST.FORWARD_INTERV%TYPE DEFAULT NULL,
      notes_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_ITERACTION%TYPE DEFAULT NULL,
      notes_close_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE_ITERACTION%TYPE DEFAULT NULL,
      flg_time_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TIME%TYPE DEFAULT NULL,
      flg_type_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TYPE%TYPE DEFAULT NULL,
      interval_in IN ICNP_EPIS_INTERVENTION_HIST.INTERVAL%TYPE DEFAULT NULL,
      num_take_in IN ICNP_EPIS_INTERVENTION_HIST.NUM_TAKE%TYPE DEFAULT NULL,
      dt_icnp_epis_interv_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_ICNP_EPIS_INTERV_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_next_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_NEXT_TSTZ%TYPE DEFAULT NULL,
      dt_close_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CLOSE_TSTZ%TYPE DEFAULT NULL,
      flg_interval_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_INTERVAL_UNIT%TYPE DEFAULT NULL,
      id_episode_origin_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      duration_in IN ICNP_EPIS_INTERVENTION_HIST.DURATION%TYPE DEFAULT NULL,
      flg_duration_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_DURATION_UNIT%TYPE DEFAULT NULL,
      create_user_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_prof_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_LAST_UPDATE%TYPE DEFAULT NULL,
      dt_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.DT_LAST_UPDATE%TYPE DEFAULT NULL,
      id_suspend_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_REASON%TYPE DEFAULT NULL,
      id_suspend_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_PROF%TYPE DEFAULT NULL,
      suspend_notes_in IN ICNP_EPIS_INTERVENTION_HIST.SUSPEND_NOTES%TYPE DEFAULT NULL,
      dt_suspend_in IN ICNP_EPIS_INTERVENTION_HIST.DT_SUSPEND%TYPE DEFAULT NULL,
      id_cancel_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      id_cancel_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_PROF%TYPE DEFAULT NULL,
      cancel_notes_in IN ICNP_EPIS_INTERVENTION_HIST.CANCEL_NOTES%TYPE DEFAULT NULL,
      dt_cancel_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CANCEL%TYPE DEFAULT NULL,
      id_prof_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CREATED_HIST%TYPE DEFAULT NULL,
      dt_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CREATED_HIST%TYPE DEFAULT NULL,
      id_order_recurr_plan_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ORDER_RECURR_PLAN%TYPE DEFAULT NULL,
      flg_prn_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_PRN%TYPE DEFAULT NULL,
      prn_notes_in IN ICNP_EPIS_INTERVENTION_HIST.PRN_NOTES%TYPE DEFAULT NULL,
      id_icnp_epis_interv_parent_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_PARENT%TYPE DEFAULT NULL
      ,handle_error_in IN BOOLEAN := TRUE
      , rows_out OUT TABLE_VARCHAR
   )
      RETURN
         ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE
   IS
        l_pky ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE := next_key;
   BEGIN
      ins (
         id_icnp_epis_interv_hist_in => l_pky,
         id_icnp_epis_interv_in => id_icnp_epis_interv_in,
         id_patient_in => id_patient_in,
         id_episode_in => id_episode_in,
         id_composition_in => id_composition_in,
         flg_status_in => flg_status_in,
         freq_in => freq_in,
         notes_in => notes_in,
         id_prof_in => id_prof_in,
         notes_close_in => notes_close_in,
         id_prof_close_in => id_prof_close_in,
         forward_interv_in => forward_interv_in,
         notes_iteraction_in => notes_iteraction_in,
         notes_close_iteraction_in => notes_close_iteraction_in,
         flg_time_in => flg_time_in,
         flg_type_in => flg_type_in,
         interval_in => interval_in,
         num_take_in => num_take_in,
         dt_icnp_epis_interv_tstz_in => dt_icnp_epis_interv_tstz_in,
         dt_begin_tstz_in => dt_begin_tstz_in,
         dt_end_tstz_in => dt_end_tstz_in,
         dt_next_tstz_in => dt_next_tstz_in,
         dt_close_tstz_in => dt_close_tstz_in,
         flg_interval_unit_in => flg_interval_unit_in,
         id_episode_origin_in => id_episode_origin_in,
         id_episode_destination_in => id_episode_destination_in,
         duration_in => duration_in,
         flg_duration_unit_in => flg_duration_unit_in,
         create_user_in => create_user_in,
         create_time_in => create_time_in,
         create_institution_in => create_institution_in,
         update_user_in => update_user_in,
         update_time_in => update_time_in,
         update_institution_in => update_institution_in,
         id_prof_last_update_in => id_prof_last_update_in,
         dt_last_update_in => dt_last_update_in,
         id_suspend_reason_in => id_suspend_reason_in,
         id_suspend_prof_in => id_suspend_prof_in,
         suspend_notes_in => suspend_notes_in,
         dt_suspend_in => dt_suspend_in,
         id_cancel_reason_in => id_cancel_reason_in,
         id_cancel_prof_in => id_cancel_prof_in,
         cancel_notes_in => cancel_notes_in,
         dt_cancel_in => dt_cancel_in,
         id_prof_created_hist_in => id_prof_created_hist_in,
         dt_created_hist_in => dt_created_hist_in,
         id_order_recurr_plan_in => id_order_recurr_plan_in,
         flg_prn_in => flg_prn_in,
         prn_notes_in => prn_notes_in,
         id_icnp_epis_interv_parent_in => id_icnp_epis_interv_parent_in
         ,handle_error_in => handle_error_in
         , rows_out => rows_out
         );
      RETURN l_pky;
   END ins;

   FUNCTION ins (
      id_icnp_epis_interv_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV%TYPE DEFAULT NULL,
      id_patient_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      id_episode_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE%TYPE DEFAULT NULL,
      id_composition_in IN ICNP_EPIS_INTERVENTION_HIST.ID_COMPOSITION%TYPE DEFAULT NULL,
      flg_status_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_STATUS%TYPE DEFAULT NULL,
      freq_in IN ICNP_EPIS_INTERVENTION_HIST.FREQ%TYPE DEFAULT NULL,
      notes_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES%TYPE DEFAULT NULL,
      id_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF%TYPE DEFAULT NULL,
      notes_close_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE%TYPE DEFAULT NULL,
      id_prof_close_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CLOSE%TYPE DEFAULT NULL,
      forward_interv_in IN ICNP_EPIS_INTERVENTION_HIST.FORWARD_INTERV%TYPE DEFAULT NULL,
      notes_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_ITERACTION%TYPE DEFAULT NULL,
      notes_close_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE_ITERACTION%TYPE DEFAULT NULL,
      flg_time_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TIME%TYPE DEFAULT NULL,
      flg_type_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TYPE%TYPE DEFAULT NULL,
      interval_in IN ICNP_EPIS_INTERVENTION_HIST.INTERVAL%TYPE DEFAULT NULL,
      num_take_in IN ICNP_EPIS_INTERVENTION_HIST.NUM_TAKE%TYPE DEFAULT NULL,
      dt_icnp_epis_interv_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_ICNP_EPIS_INTERV_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_next_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_NEXT_TSTZ%TYPE DEFAULT NULL,
      dt_close_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CLOSE_TSTZ%TYPE DEFAULT NULL,
      flg_interval_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_INTERVAL_UNIT%TYPE DEFAULT NULL,
      id_episode_origin_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      duration_in IN ICNP_EPIS_INTERVENTION_HIST.DURATION%TYPE DEFAULT NULL,
      flg_duration_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_DURATION_UNIT%TYPE DEFAULT NULL,
      create_user_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_prof_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_LAST_UPDATE%TYPE DEFAULT NULL,
      dt_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.DT_LAST_UPDATE%TYPE DEFAULT NULL,
      id_suspend_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_REASON%TYPE DEFAULT NULL,
      id_suspend_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_PROF%TYPE DEFAULT NULL,
      suspend_notes_in IN ICNP_EPIS_INTERVENTION_HIST.SUSPEND_NOTES%TYPE DEFAULT NULL,
      dt_suspend_in IN ICNP_EPIS_INTERVENTION_HIST.DT_SUSPEND%TYPE DEFAULT NULL,
      id_cancel_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      id_cancel_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_PROF%TYPE DEFAULT NULL,
      cancel_notes_in IN ICNP_EPIS_INTERVENTION_HIST.CANCEL_NOTES%TYPE DEFAULT NULL,
      dt_cancel_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CANCEL%TYPE DEFAULT NULL,
      id_prof_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CREATED_HIST%TYPE DEFAULT NULL,
      dt_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CREATED_HIST%TYPE DEFAULT NULL,
      id_order_recurr_plan_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ORDER_RECURR_PLAN%TYPE DEFAULT NULL,
      flg_prn_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_PRN%TYPE DEFAULT NULL,
      prn_notes_in IN ICNP_EPIS_INTERVENTION_HIST.PRN_NOTES%TYPE DEFAULT NULL,
      id_icnp_epis_interv_parent_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_PARENT%TYPE DEFAULT NULL
      ,handle_error_in IN BOOLEAN := TRUE
   )
      RETURN
         ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE
   IS
        l_pky ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE := next_key;
    rows_out TABLE_VARCHAR;
   BEGIN
      ins (
         id_icnp_epis_interv_hist_in => l_pky,
         id_icnp_epis_interv_in => id_icnp_epis_interv_in,
         id_patient_in => id_patient_in,
         id_episode_in => id_episode_in,
         id_composition_in => id_composition_in,
         flg_status_in => flg_status_in,
         freq_in => freq_in,
         notes_in => notes_in,
         id_prof_in => id_prof_in,
         notes_close_in => notes_close_in,
         id_prof_close_in => id_prof_close_in,
         forward_interv_in => forward_interv_in,
         notes_iteraction_in => notes_iteraction_in,
         notes_close_iteraction_in => notes_close_iteraction_in,
         flg_time_in => flg_time_in,
         flg_type_in => flg_type_in,
         interval_in => interval_in,
         num_take_in => num_take_in,
         dt_icnp_epis_interv_tstz_in => dt_icnp_epis_interv_tstz_in,
         dt_begin_tstz_in => dt_begin_tstz_in,
         dt_end_tstz_in => dt_end_tstz_in,
         dt_next_tstz_in => dt_next_tstz_in,
         dt_close_tstz_in => dt_close_tstz_in,
         flg_interval_unit_in => flg_interval_unit_in,
         id_episode_origin_in => id_episode_origin_in,
         id_episode_destination_in => id_episode_destination_in,
         duration_in => duration_in,
         flg_duration_unit_in => flg_duration_unit_in,
         create_user_in => create_user_in,
         create_time_in => create_time_in,
         create_institution_in => create_institution_in,
         update_user_in => update_user_in,
         update_time_in => update_time_in,
         update_institution_in => update_institution_in,
         id_prof_last_update_in => id_prof_last_update_in,
         dt_last_update_in => dt_last_update_in,
         id_suspend_reason_in => id_suspend_reason_in,
         id_suspend_prof_in => id_suspend_prof_in,
         suspend_notes_in => suspend_notes_in,
         dt_suspend_in => dt_suspend_in,
         id_cancel_reason_in => id_cancel_reason_in,
         id_cancel_prof_in => id_cancel_prof_in,
         cancel_notes_in => cancel_notes_in,
         dt_cancel_in => dt_cancel_in,
         id_prof_created_hist_in => id_prof_created_hist_in,
         dt_created_hist_in => dt_created_hist_in,
         id_order_recurr_plan_in => id_order_recurr_plan_in,
         flg_prn_in => flg_prn_in,
         prn_notes_in => prn_notes_in,
         id_icnp_epis_interv_parent_in => id_icnp_epis_interv_parent_in
         ,handle_error_in => handle_error_in
         , rows_out => rows_out
         );
      RETURN l_pky;
   END ins;

      PROCEDURE ins (
      id_icnp_epis_interv_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV%TYPE DEFAULT NULL,
      id_patient_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      id_episode_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE%TYPE DEFAULT NULL,
      id_composition_in IN ICNP_EPIS_INTERVENTION_HIST.ID_COMPOSITION%TYPE DEFAULT NULL,
      flg_status_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_STATUS%TYPE DEFAULT NULL,
      freq_in IN ICNP_EPIS_INTERVENTION_HIST.FREQ%TYPE DEFAULT NULL,
      notes_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES%TYPE DEFAULT NULL,
      id_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF%TYPE DEFAULT NULL,
      notes_close_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE%TYPE DEFAULT NULL,
      id_prof_close_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CLOSE%TYPE DEFAULT NULL,
      forward_interv_in IN ICNP_EPIS_INTERVENTION_HIST.FORWARD_INTERV%TYPE DEFAULT NULL,
      notes_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_ITERACTION%TYPE DEFAULT NULL,
      notes_close_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE_ITERACTION%TYPE DEFAULT NULL,
      flg_time_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TIME%TYPE DEFAULT NULL,
      flg_type_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TYPE%TYPE DEFAULT NULL,
      interval_in IN ICNP_EPIS_INTERVENTION_HIST.INTERVAL%TYPE DEFAULT NULL,
      num_take_in IN ICNP_EPIS_INTERVENTION_HIST.NUM_TAKE%TYPE DEFAULT NULL,
      dt_icnp_epis_interv_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_ICNP_EPIS_INTERV_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_next_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_NEXT_TSTZ%TYPE DEFAULT NULL,
      dt_close_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CLOSE_TSTZ%TYPE DEFAULT NULL,
      flg_interval_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_INTERVAL_UNIT%TYPE DEFAULT NULL,
      id_episode_origin_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      duration_in IN ICNP_EPIS_INTERVENTION_HIST.DURATION%TYPE DEFAULT NULL,
      flg_duration_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_DURATION_UNIT%TYPE DEFAULT NULL,
      create_user_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_prof_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_LAST_UPDATE%TYPE DEFAULT NULL,
      dt_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.DT_LAST_UPDATE%TYPE DEFAULT NULL,
      id_suspend_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_REASON%TYPE DEFAULT NULL,
      id_suspend_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_PROF%TYPE DEFAULT NULL,
      suspend_notes_in IN ICNP_EPIS_INTERVENTION_HIST.SUSPEND_NOTES%TYPE DEFAULT NULL,
      dt_suspend_in IN ICNP_EPIS_INTERVENTION_HIST.DT_SUSPEND%TYPE DEFAULT NULL,
      id_cancel_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      id_cancel_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_PROF%TYPE DEFAULT NULL,
      cancel_notes_in IN ICNP_EPIS_INTERVENTION_HIST.CANCEL_NOTES%TYPE DEFAULT NULL,
      dt_cancel_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CANCEL%TYPE DEFAULT NULL,
      id_prof_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CREATED_HIST%TYPE DEFAULT NULL,
      dt_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CREATED_HIST%TYPE DEFAULT NULL,
      id_order_recurr_plan_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ORDER_RECURR_PLAN%TYPE DEFAULT NULL,
      flg_prn_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_PRN%TYPE DEFAULT NULL,
      prn_notes_in IN ICNP_EPIS_INTERVENTION_HIST.PRN_NOTES%TYPE DEFAULT NULL,
      id_icnp_epis_interv_parent_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_PARENT%TYPE DEFAULT NULL
      ,handle_error_in IN BOOLEAN := TRUE
      , rows_out OUT TABLE_VARCHAR
   )
   IS
        l_pky ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE := next_key;
   BEGIN
      ins (
         id_icnp_epis_interv_hist_in => l_pky,
         id_icnp_epis_interv_in => id_icnp_epis_interv_in,
         id_patient_in => id_patient_in,
         id_episode_in => id_episode_in,
         id_composition_in => id_composition_in,
         flg_status_in => flg_status_in,
         freq_in => freq_in,
         notes_in => notes_in,
         id_prof_in => id_prof_in,
         notes_close_in => notes_close_in,
         id_prof_close_in => id_prof_close_in,
         forward_interv_in => forward_interv_in,
         notes_iteraction_in => notes_iteraction_in,
         notes_close_iteraction_in => notes_close_iteraction_in,
         flg_time_in => flg_time_in,
         flg_type_in => flg_type_in,
         interval_in => interval_in,
         num_take_in => num_take_in,
         dt_icnp_epis_interv_tstz_in => dt_icnp_epis_interv_tstz_in,
         dt_begin_tstz_in => dt_begin_tstz_in,
         dt_end_tstz_in => dt_end_tstz_in,
         dt_next_tstz_in => dt_next_tstz_in,
         dt_close_tstz_in => dt_close_tstz_in,
         flg_interval_unit_in => flg_interval_unit_in,
         id_episode_origin_in => id_episode_origin_in,
         id_episode_destination_in => id_episode_destination_in,
         duration_in => duration_in,
         flg_duration_unit_in => flg_duration_unit_in,
         create_user_in => create_user_in,
         create_time_in => create_time_in,
         create_institution_in => create_institution_in,
         update_user_in => update_user_in,
         update_time_in => update_time_in,
         update_institution_in => update_institution_in,
         id_prof_last_update_in => id_prof_last_update_in,
         dt_last_update_in => dt_last_update_in,
         id_suspend_reason_in => id_suspend_reason_in,
         id_suspend_prof_in => id_suspend_prof_in,
         suspend_notes_in => suspend_notes_in,
         dt_suspend_in => dt_suspend_in,
         id_cancel_reason_in => id_cancel_reason_in,
         id_cancel_prof_in => id_cancel_prof_in,
         cancel_notes_in => cancel_notes_in,
         dt_cancel_in => dt_cancel_in,
         id_prof_created_hist_in => id_prof_created_hist_in,
         dt_created_hist_in => dt_created_hist_in,
         id_order_recurr_plan_in => id_order_recurr_plan_in,
         flg_prn_in => flg_prn_in,
         prn_notes_in => prn_notes_in,
         id_icnp_epis_interv_parent_in => id_icnp_epis_interv_parent_in
         ,handle_error_in => handle_error_in
         , rows_out => rows_out
         );
   END ins;


     PROCEDURE ins (
      id_icnp_epis_interv_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV%TYPE DEFAULT NULL,
      id_patient_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      id_episode_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE%TYPE DEFAULT NULL,
      id_composition_in IN ICNP_EPIS_INTERVENTION_HIST.ID_COMPOSITION%TYPE DEFAULT NULL,
      flg_status_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_STATUS%TYPE DEFAULT NULL,
      freq_in IN ICNP_EPIS_INTERVENTION_HIST.FREQ%TYPE DEFAULT NULL,
      notes_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES%TYPE DEFAULT NULL,
      id_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF%TYPE DEFAULT NULL,
      notes_close_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE%TYPE DEFAULT NULL,
      id_prof_close_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CLOSE%TYPE DEFAULT NULL,
      forward_interv_in IN ICNP_EPIS_INTERVENTION_HIST.FORWARD_INTERV%TYPE DEFAULT NULL,
      notes_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_ITERACTION%TYPE DEFAULT NULL,
      notes_close_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE_ITERACTION%TYPE DEFAULT NULL,
      flg_time_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TIME%TYPE DEFAULT NULL,
      flg_type_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TYPE%TYPE DEFAULT NULL,
      interval_in IN ICNP_EPIS_INTERVENTION_HIST.INTERVAL%TYPE DEFAULT NULL,
      num_take_in IN ICNP_EPIS_INTERVENTION_HIST.NUM_TAKE%TYPE DEFAULT NULL,
      dt_icnp_epis_interv_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_ICNP_EPIS_INTERV_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_next_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_NEXT_TSTZ%TYPE DEFAULT NULL,
      dt_close_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CLOSE_TSTZ%TYPE DEFAULT NULL,
      flg_interval_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_INTERVAL_UNIT%TYPE DEFAULT NULL,
      id_episode_origin_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      duration_in IN ICNP_EPIS_INTERVENTION_HIST.DURATION%TYPE DEFAULT NULL,
      flg_duration_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_DURATION_UNIT%TYPE DEFAULT NULL,
      create_user_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_prof_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_LAST_UPDATE%TYPE DEFAULT NULL,
      dt_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.DT_LAST_UPDATE%TYPE DEFAULT NULL,
      id_suspend_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_REASON%TYPE DEFAULT NULL,
      id_suspend_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_PROF%TYPE DEFAULT NULL,
      suspend_notes_in IN ICNP_EPIS_INTERVENTION_HIST.SUSPEND_NOTES%TYPE DEFAULT NULL,
      dt_suspend_in IN ICNP_EPIS_INTERVENTION_HIST.DT_SUSPEND%TYPE DEFAULT NULL,
      id_cancel_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      id_cancel_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_PROF%TYPE DEFAULT NULL,
      cancel_notes_in IN ICNP_EPIS_INTERVENTION_HIST.CANCEL_NOTES%TYPE DEFAULT NULL,
      dt_cancel_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CANCEL%TYPE DEFAULT NULL,
      id_prof_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CREATED_HIST%TYPE DEFAULT NULL,
      dt_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CREATED_HIST%TYPE DEFAULT NULL,
      id_order_recurr_plan_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ORDER_RECURR_PLAN%TYPE DEFAULT NULL,
      flg_prn_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_PRN%TYPE DEFAULT NULL,
      prn_notes_in IN ICNP_EPIS_INTERVENTION_HIST.PRN_NOTES%TYPE DEFAULT NULL,
      id_icnp_epis_interv_parent_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_PARENT%TYPE DEFAULT NULL
      ,handle_error_in IN BOOLEAN := TRUE
   )
   IS
        l_pky ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE := next_key;
      rows_out TABLE_VARCHAR;
   BEGIN
      ins (
         id_icnp_epis_interv_hist_in => l_pky,
         id_icnp_epis_interv_in => id_icnp_epis_interv_in,
         id_patient_in => id_patient_in,
         id_episode_in => id_episode_in,
         id_composition_in => id_composition_in,
         flg_status_in => flg_status_in,
         freq_in => freq_in,
         notes_in => notes_in,
         id_prof_in => id_prof_in,
         notes_close_in => notes_close_in,
         id_prof_close_in => id_prof_close_in,
         forward_interv_in => forward_interv_in,
         notes_iteraction_in => notes_iteraction_in,
         notes_close_iteraction_in => notes_close_iteraction_in,
         flg_time_in => flg_time_in,
         flg_type_in => flg_type_in,
         interval_in => interval_in,
         num_take_in => num_take_in,
         dt_icnp_epis_interv_tstz_in => dt_icnp_epis_interv_tstz_in,
         dt_begin_tstz_in => dt_begin_tstz_in,
         dt_end_tstz_in => dt_end_tstz_in,
         dt_next_tstz_in => dt_next_tstz_in,
         dt_close_tstz_in => dt_close_tstz_in,
         flg_interval_unit_in => flg_interval_unit_in,
         id_episode_origin_in => id_episode_origin_in,
         id_episode_destination_in => id_episode_destination_in,
         duration_in => duration_in,
         flg_duration_unit_in => flg_duration_unit_in,
         create_user_in => create_user_in,
         create_time_in => create_time_in,
         create_institution_in => create_institution_in,
         update_user_in => update_user_in,
         update_time_in => update_time_in,
         update_institution_in => update_institution_in,
         id_prof_last_update_in => id_prof_last_update_in,
         dt_last_update_in => dt_last_update_in,
         id_suspend_reason_in => id_suspend_reason_in,
         id_suspend_prof_in => id_suspend_prof_in,
         suspend_notes_in => suspend_notes_in,
         dt_suspend_in => dt_suspend_in,
         id_cancel_reason_in => id_cancel_reason_in,
         id_cancel_prof_in => id_cancel_prof_in,
         cancel_notes_in => cancel_notes_in,
         dt_cancel_in => dt_cancel_in,
         id_prof_created_hist_in => id_prof_created_hist_in,
         dt_created_hist_in => dt_created_hist_in,
         id_order_recurr_plan_in => id_order_recurr_plan_in,
         flg_prn_in => flg_prn_in,
         prn_notes_in => prn_notes_in,
         id_icnp_epis_interv_parent_in => id_icnp_epis_interv_parent_in
         ,handle_error_in => handle_error_in
         , rows_out => rows_out
         );
   END ins;

    PROCEDURE ins (
      rows_in IN ICNP_EPIS_INTERVENTION_HIST_tc
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   )
   IS
   BEGIN
      IF rows_in.COUNT = 0
      THEN
         NULL;
      ELSE
         FORALL indx IN rows_in.FIRST .. rows_in.LAST
            SAVE EXCEPTIONS
            INSERT INTO ICNP_EPIS_INTERVENTION_HIST VALUES rows_in (indx) RETURNING ROWID BULK COLLECT INTO rows_out;
      END IF;
   EXCEPTION
     WHEN e_forall_error
     THEN
        -- In Oracle9i and above, SAVE EXCEPTIONS will direct control
        -- here if any error occurs. We can then save all the error
        -- information out to the error instance.
       IF NOT handle_error_in THEN RAISE;
       ELSE
          <<bulk_handler>>
          DECLARE
             l_err_instance_id NUMBER;
          BEGIN
             -- For each error, write to the log.
             FOR indx IN 1 .. SQL%BULK_EXCEPTIONS.COUNT
             LOOP
                pk_alert_exceptions.register_error (
                    error_name_in => 'FORALL-INSERT-FAILURE'
                   ,err_instance_id_out => l_err_instance_id
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'BINDING_ROW_' || indx
                  ,value_in => SQL%BULK_EXCEPTIONS (indx).ERROR_INDEX
                  ,validate_in => FALSE
                );
                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ERROR_AT_ROW_' || indx
                  ,value_in => SQL%BULK_EXCEPTIONS (indx).ERROR_CODE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_ICNP_EPIS_INTERV_HIST _' || indx
                  ,value_in => rows_in(indx).ID_ICNP_EPIS_INTERV_HIST
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_ICNP_EPIS_INTERV _' || indx
                  ,value_in => rows_in(indx).ID_ICNP_EPIS_INTERV
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_PATIENT _' || indx
                  ,value_in => rows_in(indx).ID_PATIENT
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_EPISODE _' || indx
                  ,value_in => rows_in(indx).ID_EPISODE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_COMPOSITION _' || indx
                  ,value_in => rows_in(indx).ID_COMPOSITION
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FLG_STATUS _' || indx
                  ,value_in => rows_in(indx).FLG_STATUS
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FREQ _' || indx
                  ,value_in => rows_in(indx).FREQ
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'NOTES _' || indx
                  ,value_in => rows_in(indx).NOTES
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_PROF _' || indx
                  ,value_in => rows_in(indx).ID_PROF
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'NOTES_CLOSE _' || indx
                  ,value_in => rows_in(indx).NOTES_CLOSE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_PROF_CLOSE _' || indx
                  ,value_in => rows_in(indx).ID_PROF_CLOSE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FORWARD_INTERV _' || indx
                  ,value_in => rows_in(indx).FORWARD_INTERV
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'NOTES_ITERACTION _' || indx
                  ,value_in => rows_in(indx).NOTES_ITERACTION
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'NOTES_CLOSE_ITERACTION _' || indx
                  ,value_in => rows_in(indx).NOTES_CLOSE_ITERACTION
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FLG_TIME _' || indx
                  ,value_in => rows_in(indx).FLG_TIME
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FLG_TYPE _' || indx
                  ,value_in => rows_in(indx).FLG_TYPE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'INTERVAL _' || indx
                  ,value_in => rows_in(indx).INTERVAL
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'NUM_TAKE _' || indx
                  ,value_in => rows_in(indx).NUM_TAKE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DT_ICNP_EPIS_INTERV_TSTZ _' || indx
                  ,value_in => rows_in(indx).DT_ICNP_EPIS_INTERV_TSTZ
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DT_BEGIN_TSTZ _' || indx
                  ,value_in => rows_in(indx).DT_BEGIN_TSTZ
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DT_END_TSTZ _' || indx
                  ,value_in => rows_in(indx).DT_END_TSTZ
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DT_NEXT_TSTZ _' || indx
                  ,value_in => rows_in(indx).DT_NEXT_TSTZ
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DT_CLOSE_TSTZ _' || indx
                  ,value_in => rows_in(indx).DT_CLOSE_TSTZ
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FLG_INTERVAL_UNIT _' || indx
                  ,value_in => rows_in(indx).FLG_INTERVAL_UNIT
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_EPISODE_ORIGIN _' || indx
                  ,value_in => rows_in(indx).ID_EPISODE_ORIGIN
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_EPISODE_DESTINATION _' || indx
                  ,value_in => rows_in(indx).ID_EPISODE_DESTINATION
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DURATION _' || indx
                  ,value_in => rows_in(indx).DURATION
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FLG_DURATION_UNIT _' || indx
                  ,value_in => rows_in(indx).FLG_DURATION_UNIT
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'CREATE_USER _' || indx
                  ,value_in => rows_in(indx).CREATE_USER
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'CREATE_TIME _' || indx
                  ,value_in => rows_in(indx).CREATE_TIME
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'CREATE_INSTITUTION _' || indx
                  ,value_in => rows_in(indx).CREATE_INSTITUTION
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'UPDATE_USER _' || indx
                  ,value_in => rows_in(indx).UPDATE_USER
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'UPDATE_TIME _' || indx
                  ,value_in => rows_in(indx).UPDATE_TIME
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'UPDATE_INSTITUTION _' || indx
                  ,value_in => rows_in(indx).UPDATE_INSTITUTION
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_PROF_LAST_UPDATE _' || indx
                  ,value_in => rows_in(indx).ID_PROF_LAST_UPDATE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DT_LAST_UPDATE _' || indx
                  ,value_in => rows_in(indx).DT_LAST_UPDATE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_SUSPEND_REASON _' || indx
                  ,value_in => rows_in(indx).ID_SUSPEND_REASON
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_SUSPEND_PROF _' || indx
                  ,value_in => rows_in(indx).ID_SUSPEND_PROF
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'SUSPEND_NOTES _' || indx
                  ,value_in => rows_in(indx).SUSPEND_NOTES
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DT_SUSPEND _' || indx
                  ,value_in => rows_in(indx).DT_SUSPEND
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_CANCEL_REASON _' || indx
                  ,value_in => rows_in(indx).ID_CANCEL_REASON
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_CANCEL_PROF _' || indx
                  ,value_in => rows_in(indx).ID_CANCEL_PROF
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'CANCEL_NOTES _' || indx
                  ,value_in => rows_in(indx).CANCEL_NOTES
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DT_CANCEL _' || indx
                  ,value_in => rows_in(indx).DT_CANCEL
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_PROF_CREATED_HIST _' || indx
                  ,value_in => rows_in(indx).ID_PROF_CREATED_HIST
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DT_CREATED_HIST _' || indx
                  ,value_in => rows_in(indx).DT_CREATED_HIST
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_ORDER_RECURR_PLAN _' || indx
                  ,value_in => rows_in(indx).ID_ORDER_RECURR_PLAN
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FLG_PRN _' || indx
                  ,value_in => rows_in(indx).FLG_PRN
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_ICNP_EPIS_INTERV_PARENT _' || indx
                  ,value_in => rows_in(indx).ID_ICNP_EPIS_INTERV_PARENT
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.raise_error_instance( err_instance_id_in => l_err_instance_id );
             END LOOP;
          END bulk_handler;
        END IF;
     WHEN OTHERS
     THEN
       IF NOT handle_error_in THEN RAISE;
       ELSE
       pk_alert_exceptions.raise_error(
          error_name_in => 'FORALL-INSERT-FAILURE'
          ,name1_in => 'TABLE_NAME'
          ,value1_in => 'ICNP_EPIS_INTERVENTION_HIST'
          ,name2_in => 'ROW_COUNT'
          ,value2_in => rows_in.COUNT
           );
       END IF;
   END ins;

    PROCEDURE ins (
      rows_in IN ICNP_EPIS_INTERVENTION_HIST_tc
     ,handle_error_in IN BOOLEAN := TRUE
   )
   IS
      rows_out TABLE_VARCHAR;
   BEGIN
      ins (
      rows_in => rows_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
   );
   END ins;


PROCEDURE upd (
      id_icnp_epis_interv_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE,
      id_icnp_epis_interv_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV%TYPE DEFAULT NULL,
      ID_ICNP_EPIS_INTERV_nin IN BOOLEAN := TRUE,
      id_patient_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      ID_PATIENT_nin IN BOOLEAN := TRUE,
      id_episode_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      id_composition_in IN ICNP_EPIS_INTERVENTION_HIST.ID_COMPOSITION%TYPE DEFAULT NULL,
      ID_COMPOSITION_nin IN BOOLEAN := TRUE,
      flg_status_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      freq_in IN ICNP_EPIS_INTERVENTION_HIST.FREQ%TYPE DEFAULT NULL,
      FREQ_nin IN BOOLEAN := TRUE,
      notes_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      id_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF%TYPE DEFAULT NULL,
      ID_PROF_nin IN BOOLEAN := TRUE,
      notes_close_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE%TYPE DEFAULT NULL,
      NOTES_CLOSE_nin IN BOOLEAN := TRUE,
      id_prof_close_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CLOSE%TYPE DEFAULT NULL,
      ID_PROF_CLOSE_nin IN BOOLEAN := TRUE,
      forward_interv_in IN ICNP_EPIS_INTERVENTION_HIST.FORWARD_INTERV%TYPE DEFAULT NULL,
      FORWARD_INTERV_nin IN BOOLEAN := TRUE,
      notes_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_ITERACTION%TYPE DEFAULT NULL,
      NOTES_ITERACTION_nin IN BOOLEAN := TRUE,
      notes_close_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE_ITERACTION%TYPE DEFAULT NULL,
      NOTES_CLOSE_ITERACTION_nin IN BOOLEAN := TRUE,
      flg_time_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TIME%TYPE DEFAULT NULL,
      FLG_TIME_nin IN BOOLEAN := TRUE,
      flg_type_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TYPE%TYPE DEFAULT NULL,
      FLG_TYPE_nin IN BOOLEAN := TRUE,
      interval_in IN ICNP_EPIS_INTERVENTION_HIST.INTERVAL%TYPE DEFAULT NULL,
      INTERVAL_nin IN BOOLEAN := TRUE,
      num_take_in IN ICNP_EPIS_INTERVENTION_HIST.NUM_TAKE%TYPE DEFAULT NULL,
      NUM_TAKE_nin IN BOOLEAN := TRUE,
      dt_icnp_epis_interv_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_ICNP_EPIS_INTERV_TSTZ%TYPE DEFAULT NULL,
      DT_ICNP_EPIS_INTERV_TSTZ_nin IN BOOLEAN := TRUE,
      dt_begin_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      DT_BEGIN_TSTZ_nin IN BOOLEAN := TRUE,
      dt_end_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
      DT_END_TSTZ_nin IN BOOLEAN := TRUE,
      dt_next_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_NEXT_TSTZ%TYPE DEFAULT NULL,
      DT_NEXT_TSTZ_nin IN BOOLEAN := TRUE,
      dt_close_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CLOSE_TSTZ%TYPE DEFAULT NULL,
      DT_CLOSE_TSTZ_nin IN BOOLEAN := TRUE,
      flg_interval_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_INTERVAL_UNIT%TYPE DEFAULT NULL,
      FLG_INTERVAL_UNIT_nin IN BOOLEAN := TRUE,
      id_episode_origin_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      ID_EPISODE_ORIGIN_nin IN BOOLEAN := TRUE,
      id_episode_destination_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      ID_EPISODE_DESTINATION_nin IN BOOLEAN := TRUE,
      duration_in IN ICNP_EPIS_INTERVENTION_HIST.DURATION%TYPE DEFAULT NULL,
      DURATION_nin IN BOOLEAN := TRUE,
      flg_duration_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_DURATION_UNIT%TYPE DEFAULT NULL,
      FLG_DURATION_UNIT_nin IN BOOLEAN := TRUE,
      create_user_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      id_prof_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_LAST_UPDATE%TYPE DEFAULT NULL,
      ID_PROF_LAST_UPDATE_nin IN BOOLEAN := TRUE,
      dt_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.DT_LAST_UPDATE%TYPE DEFAULT NULL,
      DT_LAST_UPDATE_nin IN BOOLEAN := TRUE,
      id_suspend_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_REASON%TYPE DEFAULT NULL,
      ID_SUSPEND_REASON_nin IN BOOLEAN := TRUE,
      id_suspend_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_PROF%TYPE DEFAULT NULL,
      ID_SUSPEND_PROF_nin IN BOOLEAN := TRUE,
      suspend_notes_in IN ICNP_EPIS_INTERVENTION_HIST.SUSPEND_NOTES%TYPE DEFAULT NULL,
      SUSPEND_NOTES_nin IN BOOLEAN := TRUE,
      dt_suspend_in IN ICNP_EPIS_INTERVENTION_HIST.DT_SUSPEND%TYPE DEFAULT NULL,
      DT_SUSPEND_nin IN BOOLEAN := TRUE,
      id_cancel_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      ID_CANCEL_REASON_nin IN BOOLEAN := TRUE,
      id_cancel_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_PROF%TYPE DEFAULT NULL,
      ID_CANCEL_PROF_nin IN BOOLEAN := TRUE,
      cancel_notes_in IN ICNP_EPIS_INTERVENTION_HIST.CANCEL_NOTES%TYPE DEFAULT NULL,
      CANCEL_NOTES_nin IN BOOLEAN := TRUE,
      dt_cancel_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CANCEL%TYPE DEFAULT NULL,
      DT_CANCEL_nin IN BOOLEAN := TRUE,
      id_prof_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CREATED_HIST%TYPE DEFAULT NULL,
      ID_PROF_CREATED_HIST_nin IN BOOLEAN := TRUE,
      dt_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CREATED_HIST%TYPE DEFAULT NULL,
      DT_CREATED_HIST_nin IN BOOLEAN := TRUE,
      id_order_recurr_plan_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ORDER_RECURR_PLAN%TYPE DEFAULT NULL,
      ID_ORDER_RECURR_PLAN_nin IN BOOLEAN := TRUE,
      flg_prn_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_PRN%TYPE DEFAULT NULL,
      FLG_PRN_nin IN BOOLEAN := TRUE,
      prn_notes_in IN ICNP_EPIS_INTERVENTION_HIST.PRN_NOTES%TYPE DEFAULT NULL,
      PRN_NOTES_nin IN BOOLEAN := TRUE,
      id_icnp_epis_interv_parent_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_PARENT%TYPE DEFAULT NULL,
      ID_ICNP_EPIS_INTERV_PARENT_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      )
   IS
   l_rows_out TABLE_VARCHAR;
   l_ID_ICNP_EPIS_INTERV_n NUMBER(1);
   l_ID_PATIENT_n NUMBER(1);
   l_ID_EPISODE_n NUMBER(1);
   l_ID_COMPOSITION_n NUMBER(1);
   l_FLG_STATUS_n NUMBER(1);
   l_FREQ_n NUMBER(1);
   l_NOTES_n NUMBER(1);
   l_ID_PROF_n NUMBER(1);
   l_NOTES_CLOSE_n NUMBER(1);
   l_ID_PROF_CLOSE_n NUMBER(1);
   l_FORWARD_INTERV_n NUMBER(1);
   l_NOTES_ITERACTION_n NUMBER(1);
   l_NOTES_CLOSE_ITERACTION_n NUMBER(1);
   l_FLG_TIME_n NUMBER(1);
   l_FLG_TYPE_n NUMBER(1);
   l_INTERVAL_n NUMBER(1);
   l_NUM_TAKE_n NUMBER(1);
   l_DT_ICNP_EPIS_INTERV_TSTZ_n NUMBER(1);
   l_DT_BEGIN_TSTZ_n NUMBER(1);
   l_DT_END_TSTZ_n NUMBER(1);
   l_DT_NEXT_TSTZ_n NUMBER(1);
   l_DT_CLOSE_TSTZ_n NUMBER(1);
   l_FLG_INTERVAL_UNIT_n NUMBER(1);
   l_ID_EPISODE_ORIGIN_n NUMBER(1);
   l_ID_EPISODE_DESTINATION_n NUMBER(1);
   l_DURATION_n NUMBER(1);
   l_FLG_DURATION_UNIT_n NUMBER(1);
   l_CREATE_USER_n NUMBER(1);
   l_CREATE_TIME_n NUMBER(1);
   l_CREATE_INSTITUTION_n NUMBER(1);
   l_UPDATE_USER_n NUMBER(1);
   l_UPDATE_TIME_n NUMBER(1);
   l_UPDATE_INSTITUTION_n NUMBER(1);
   l_ID_PROF_LAST_UPDATE_n NUMBER(1);
   l_DT_LAST_UPDATE_n NUMBER(1);
   l_ID_SUSPEND_REASON_n NUMBER(1);
   l_ID_SUSPEND_PROF_n NUMBER(1);
   l_SUSPEND_NOTES_n NUMBER(1);
   l_DT_SUSPEND_n NUMBER(1);
   l_ID_CANCEL_REASON_n NUMBER(1);
   l_ID_CANCEL_PROF_n NUMBER(1);
   l_CANCEL_NOTES_n NUMBER(1);
   l_DT_CANCEL_n NUMBER(1);
   l_ID_PROF_CREATED_HIST_n NUMBER(1);
   l_DT_CREATED_HIST_n NUMBER(1);
   l_ID_ORDER_RECURR_PLAN_n NUMBER(1);
   l_FLG_PRN_n NUMBER(1);
   l_PRN_NOTES_n NUMBER(1);
   l_ID_ICNP_EPIS_INTERV_PARENT_n NUMBER(1);
   BEGIN

   l_ID_ICNP_EPIS_INTERV_n := sys.diutil.bool_to_int(ID_ICNP_EPIS_INTERV_nin);
   l_ID_PATIENT_n := sys.diutil.bool_to_int(ID_PATIENT_nin);
   l_ID_EPISODE_n := sys.diutil.bool_to_int(ID_EPISODE_nin);
   l_ID_COMPOSITION_n := sys.diutil.bool_to_int(ID_COMPOSITION_nin);
   l_FLG_STATUS_n := sys.diutil.bool_to_int(FLG_STATUS_nin);
   l_FREQ_n := sys.diutil.bool_to_int(FREQ_nin);
   l_NOTES_n := sys.diutil.bool_to_int(NOTES_nin);
   l_ID_PROF_n := sys.diutil.bool_to_int(ID_PROF_nin);
   l_NOTES_CLOSE_n := sys.diutil.bool_to_int(NOTES_CLOSE_nin);
   l_ID_PROF_CLOSE_n := sys.diutil.bool_to_int(ID_PROF_CLOSE_nin);
   l_FORWARD_INTERV_n := sys.diutil.bool_to_int(FORWARD_INTERV_nin);
   l_NOTES_ITERACTION_n := sys.diutil.bool_to_int(NOTES_ITERACTION_nin);
   l_NOTES_CLOSE_ITERACTION_n := sys.diutil.bool_to_int(NOTES_CLOSE_ITERACTION_nin);
   l_FLG_TIME_n := sys.diutil.bool_to_int(FLG_TIME_nin);
   l_FLG_TYPE_n := sys.diutil.bool_to_int(FLG_TYPE_nin);
   l_INTERVAL_n := sys.diutil.bool_to_int(INTERVAL_nin);
   l_NUM_TAKE_n := sys.diutil.bool_to_int(NUM_TAKE_nin);
   l_DT_ICNP_EPIS_INTERV_TSTZ_n := sys.diutil.bool_to_int(DT_ICNP_EPIS_INTERV_TSTZ_nin);
   l_DT_BEGIN_TSTZ_n := sys.diutil.bool_to_int(DT_BEGIN_TSTZ_nin);
   l_DT_END_TSTZ_n := sys.diutil.bool_to_int(DT_END_TSTZ_nin);
   l_DT_NEXT_TSTZ_n := sys.diutil.bool_to_int(DT_NEXT_TSTZ_nin);
   l_DT_CLOSE_TSTZ_n := sys.diutil.bool_to_int(DT_CLOSE_TSTZ_nin);
   l_FLG_INTERVAL_UNIT_n := sys.diutil.bool_to_int(FLG_INTERVAL_UNIT_nin);
   l_ID_EPISODE_ORIGIN_n := sys.diutil.bool_to_int(ID_EPISODE_ORIGIN_nin);
   l_ID_EPISODE_DESTINATION_n := sys.diutil.bool_to_int(ID_EPISODE_DESTINATION_nin);
   l_DURATION_n := sys.diutil.bool_to_int(DURATION_nin);
   l_FLG_DURATION_UNIT_n := sys.diutil.bool_to_int(FLG_DURATION_UNIT_nin);
   l_CREATE_USER_n := sys.diutil.bool_to_int(CREATE_USER_nin);
   l_CREATE_TIME_n := sys.diutil.bool_to_int(CREATE_TIME_nin);
   l_CREATE_INSTITUTION_n := sys.diutil.bool_to_int(CREATE_INSTITUTION_nin);
   l_UPDATE_USER_n := sys.diutil.bool_to_int(UPDATE_USER_nin);
   l_UPDATE_TIME_n := sys.diutil.bool_to_int(UPDATE_TIME_nin);
   l_UPDATE_INSTITUTION_n := sys.diutil.bool_to_int(UPDATE_INSTITUTION_nin);
   l_ID_PROF_LAST_UPDATE_n := sys.diutil.bool_to_int(ID_PROF_LAST_UPDATE_nin);
   l_DT_LAST_UPDATE_n := sys.diutil.bool_to_int(DT_LAST_UPDATE_nin);
   l_ID_SUSPEND_REASON_n := sys.diutil.bool_to_int(ID_SUSPEND_REASON_nin);
   l_ID_SUSPEND_PROF_n := sys.diutil.bool_to_int(ID_SUSPEND_PROF_nin);
   l_SUSPEND_NOTES_n := sys.diutil.bool_to_int(SUSPEND_NOTES_nin);
   l_DT_SUSPEND_n := sys.diutil.bool_to_int(DT_SUSPEND_nin);
   l_ID_CANCEL_REASON_n := sys.diutil.bool_to_int(ID_CANCEL_REASON_nin);
   l_ID_CANCEL_PROF_n := sys.diutil.bool_to_int(ID_CANCEL_PROF_nin);
   l_CANCEL_NOTES_n := sys.diutil.bool_to_int(CANCEL_NOTES_nin);
   l_DT_CANCEL_n := sys.diutil.bool_to_int(DT_CANCEL_nin);
   l_ID_PROF_CREATED_HIST_n := sys.diutil.bool_to_int(ID_PROF_CREATED_HIST_nin);
   l_DT_CREATED_HIST_n := sys.diutil.bool_to_int(DT_CREATED_HIST_nin);
   l_ID_ORDER_RECURR_PLAN_n := sys.diutil.bool_to_int(ID_ORDER_RECURR_PLAN_nin);
   l_FLG_PRN_n := sys.diutil.bool_to_int(FLG_PRN_nin);
   l_PRN_NOTES_n := sys.diutil.bool_to_int(PRN_NOTES_nin);
   l_ID_ICNP_EPIS_INTERV_PARENT_n := sys.diutil.bool_to_int(ID_ICNP_EPIS_INTERV_PARENT_nin);


         UPDATE ICNP_EPIS_INTERVENTION_HIST SET
     ID_ICNP_EPIS_INTERV = decode (l_ID_ICNP_EPIS_INTERV_n,0,id_icnp_epis_interv_in, NVL (id_icnp_epis_interv_in, ID_ICNP_EPIS_INTERV)),
     ID_PATIENT = decode (l_ID_PATIENT_n,0,id_patient_in, NVL (id_patient_in, ID_PATIENT)),
     ID_EPISODE = decode (l_ID_EPISODE_n,0,id_episode_in, NVL (id_episode_in, ID_EPISODE)),
     ID_COMPOSITION = decode (l_ID_COMPOSITION_n,0,id_composition_in, NVL (id_composition_in, ID_COMPOSITION)),
     FLG_STATUS = decode (l_FLG_STATUS_n,0,flg_status_in, NVL (flg_status_in, FLG_STATUS)),
     FREQ = decode (l_FREQ_n,0,freq_in, NVL (freq_in, FREQ)),
     NOTES = decode (l_NOTES_n,0,notes_in, NVL (notes_in, NOTES)),
     ID_PROF = decode (l_ID_PROF_n,0,id_prof_in, NVL (id_prof_in, ID_PROF)),
     NOTES_CLOSE = decode (l_NOTES_CLOSE_n,0,notes_close_in, NVL (notes_close_in, NOTES_CLOSE)),
     ID_PROF_CLOSE = decode (l_ID_PROF_CLOSE_n,0,id_prof_close_in, NVL (id_prof_close_in, ID_PROF_CLOSE)),
     FORWARD_INTERV = decode (l_FORWARD_INTERV_n,0,forward_interv_in, NVL (forward_interv_in, FORWARD_INTERV)),
     NOTES_ITERACTION = decode (l_NOTES_ITERACTION_n,0,notes_iteraction_in, NVL (notes_iteraction_in, NOTES_ITERACTION)),
     NOTES_CLOSE_ITERACTION = decode (l_NOTES_CLOSE_ITERACTION_n,0,notes_close_iteraction_in, NVL (notes_close_iteraction_in, NOTES_CLOSE_ITERACTION)),
     FLG_TIME = decode (l_FLG_TIME_n,0,flg_time_in, NVL (flg_time_in, FLG_TIME)),
     FLG_TYPE = decode (l_FLG_TYPE_n,0,flg_type_in, NVL (flg_type_in, FLG_TYPE)),
     INTERVAL = decode (l_INTERVAL_n,0,interval_in, NVL (interval_in, INTERVAL)),
     NUM_TAKE = decode (l_NUM_TAKE_n,0,num_take_in, NVL (num_take_in, NUM_TAKE)),
     DT_ICNP_EPIS_INTERV_TSTZ = decode (l_DT_ICNP_EPIS_INTERV_TSTZ_n,0,dt_icnp_epis_interv_tstz_in, NVL (dt_icnp_epis_interv_tstz_in, DT_ICNP_EPIS_INTERV_TSTZ)),
     DT_BEGIN_TSTZ = decode (l_DT_BEGIN_TSTZ_n,0,dt_begin_tstz_in, NVL (dt_begin_tstz_in, DT_BEGIN_TSTZ)),
     DT_END_TSTZ = decode (l_DT_END_TSTZ_n,0,dt_end_tstz_in, NVL (dt_end_tstz_in, DT_END_TSTZ)),
     DT_NEXT_TSTZ = decode (l_DT_NEXT_TSTZ_n,0,dt_next_tstz_in, NVL (dt_next_tstz_in, DT_NEXT_TSTZ)),
     DT_CLOSE_TSTZ = decode (l_DT_CLOSE_TSTZ_n,0,dt_close_tstz_in, NVL (dt_close_tstz_in, DT_CLOSE_TSTZ)),
     FLG_INTERVAL_UNIT = decode (l_FLG_INTERVAL_UNIT_n,0,flg_interval_unit_in, NVL (flg_interval_unit_in, FLG_INTERVAL_UNIT)),
     ID_EPISODE_ORIGIN = decode (l_ID_EPISODE_ORIGIN_n,0,id_episode_origin_in, NVL (id_episode_origin_in, ID_EPISODE_ORIGIN)),
     ID_EPISODE_DESTINATION = decode (l_ID_EPISODE_DESTINATION_n,0,id_episode_destination_in, NVL (id_episode_destination_in, ID_EPISODE_DESTINATION)),
     DURATION = decode (l_DURATION_n,0,duration_in, NVL (duration_in, DURATION)),
     FLG_DURATION_UNIT = decode (l_FLG_DURATION_UNIT_n,0,flg_duration_unit_in, NVL (flg_duration_unit_in, FLG_DURATION_UNIT)),
     CREATE_USER = decode (l_CREATE_USER_n,0,create_user_in, NVL (create_user_in, CREATE_USER)),
     CREATE_TIME = decode (l_CREATE_TIME_n,0,create_time_in, NVL (create_time_in, CREATE_TIME)),
     CREATE_INSTITUTION = decode (l_CREATE_INSTITUTION_n,0,create_institution_in, NVL (create_institution_in, CREATE_INSTITUTION)),
     UPDATE_USER = decode (l_UPDATE_USER_n,0,update_user_in, NVL (update_user_in, UPDATE_USER)),
     UPDATE_TIME = decode (l_UPDATE_TIME_n,0,update_time_in, NVL (update_time_in, UPDATE_TIME)),
     UPDATE_INSTITUTION = decode (l_UPDATE_INSTITUTION_n,0,update_institution_in, NVL (update_institution_in, UPDATE_INSTITUTION)),
     ID_PROF_LAST_UPDATE = decode (l_ID_PROF_LAST_UPDATE_n,0,id_prof_last_update_in, NVL (id_prof_last_update_in, ID_PROF_LAST_UPDATE)),
     DT_LAST_UPDATE = decode (l_DT_LAST_UPDATE_n,0,dt_last_update_in, NVL (dt_last_update_in, DT_LAST_UPDATE)),
     ID_SUSPEND_REASON = decode (l_ID_SUSPEND_REASON_n,0,id_suspend_reason_in, NVL (id_suspend_reason_in, ID_SUSPEND_REASON)),
     ID_SUSPEND_PROF = decode (l_ID_SUSPEND_PROF_n,0,id_suspend_prof_in, NVL (id_suspend_prof_in, ID_SUSPEND_PROF)),
     SUSPEND_NOTES = decode (l_SUSPEND_NOTES_n,0,suspend_notes_in, NVL (suspend_notes_in, SUSPEND_NOTES)),
     DT_SUSPEND = decode (l_DT_SUSPEND_n,0,dt_suspend_in, NVL (dt_suspend_in, DT_SUSPEND)),
     ID_CANCEL_REASON = decode (l_ID_CANCEL_REASON_n,0,id_cancel_reason_in, NVL (id_cancel_reason_in, ID_CANCEL_REASON)),
     ID_CANCEL_PROF = decode (l_ID_CANCEL_PROF_n,0,id_cancel_prof_in, NVL (id_cancel_prof_in, ID_CANCEL_PROF)),
     CANCEL_NOTES = decode (l_CANCEL_NOTES_n,0,cancel_notes_in, NVL (cancel_notes_in, CANCEL_NOTES)),
     DT_CANCEL = decode (l_DT_CANCEL_n,0,dt_cancel_in, NVL (dt_cancel_in, DT_CANCEL)),
     ID_PROF_CREATED_HIST = decode (l_ID_PROF_CREATED_HIST_n,0,id_prof_created_hist_in, NVL (id_prof_created_hist_in, ID_PROF_CREATED_HIST)),
     DT_CREATED_HIST = decode (l_DT_CREATED_HIST_n,0,dt_created_hist_in, NVL (dt_created_hist_in, DT_CREATED_HIST)),
     ID_ORDER_RECURR_PLAN = decode (l_ID_ORDER_RECURR_PLAN_n,0,id_order_recurr_plan_in, NVL (id_order_recurr_plan_in, ID_ORDER_RECURR_PLAN)),
     FLG_PRN = decode (l_FLG_PRN_n,0,flg_prn_in, NVL (flg_prn_in, FLG_PRN)),
     PRN_NOTES = decode (l_PRN_NOTES_n,0,prn_notes_in, NVL (prn_notes_in, PRN_NOTES)),
     ID_ICNP_EPIS_INTERV_PARENT = decode (l_ID_ICNP_EPIS_INTERV_PARENT_n,0,id_icnp_epis_interv_parent_in, NVL (id_icnp_epis_interv_parent_in, ID_ICNP_EPIS_INTERV_PARENT))
          WHERE
             ID_ICNP_EPIS_INTERV_HIST = id_icnp_epis_interv_hist_in
         RETURNING ROWID BULK COLLECT INTO l_rows_out;


if(rows_out is null)
then
rows_out := table_varchar();
end if;

rows_out :=  rows_out MULTISET UNION DISTINCT l_rows_out;

   EXCEPTION
      WHEN DUP_VAL_ON_INDEX
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_err_instance_id PLS_INTEGER;
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF FALSE THEN NULL; -- Placeholder in case no unique indexes
           ELSE
              pk_alert_exceptions.raise_error (
                    error_name_in => 'DUPLICATE-VALUE'
                    ,name1_in => 'OWNER'
                    ,value1_in => l_owner
                    ,name2_in => 'CONSTRAINT_NAME'
                    ,value2_in => l_name
                    ,name3_in => 'TABLE_NAME'
                    ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           END IF;
        END;
        END IF;
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           IF l_name = 'IEIH_EIPI_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_ICNP_EPIS_INTERV'
               , value_in => id_icnp_epis_interv_in);
           END IF;
           IF l_name = 'IEIH_EIPI_FW_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'FORWARD_INTERV'
               , value_in => forward_interv_in);
           END IF;
           IF l_name = 'IEIH_EPIS_DEST_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_EPISODE_DESTINATION'
               , value_in => id_episode_destination_in);
           END IF;
           IF l_name = 'IEIH_EPIS_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_EPISODE'
               , value_in => id_episode_in);
           END IF;
           IF l_name = 'IEIH_EPIS_ORIGIN_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_EPISODE_ORIGIN'
               , value_in => id_episode_origin_in);
           END IF;
           IF l_name = 'IEIH_ORP_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_ORDER_RECURR_PLAN'
               , value_in => id_order_recurr_plan_in);
           END IF;
           IF l_name = 'IEIH_PAT_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PATIENT'
               , value_in => id_patient_in);
           END IF;
           IF l_name = 'IEIH_PROF_CANC_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PROF_CLOSE'
               , value_in => id_prof_close_in);
           END IF;
           IF l_name = 'IEIH_PROF_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PROF'
               , value_in => id_prof_in);
           END IF;
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
      WHEN e_null_column_value
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           v_errm VARCHAR2(2000) := DBMS_UTILITY.FORMAT_ERROR_STACK;
           dot1loc INTEGER;
           dot2loc INTEGER;
           parenloc INTEGER;
           c_owner ALL_CONSTRAINTS.OWNER%TYPE;
           c_tabname ALL_TABLES.TABLE_NAME%TYPE;
           c_colname ALL_TAB_COLUMNS.COLUMN_NAME%TYPE;
        BEGIN
           dot1loc := INSTR (v_errm, '.', 1, 1);
           dot2loc := INSTR (v_errm, '.', 1, 2);
           parenloc := INSTR (v_errm, '(');
           c_owner :=SUBSTR (v_errm, parenloc+1, dot1loc-parenloc-1);
           c_tabname := SUBSTR (v_errm, dot1loc+1, dot2loc-dot1loc-1);
           c_colname := SUBSTR (v_errm, dot2loc+1, INSTR (v_errm,')')-dot2loc-1);

           pk_alert_exceptions.raise_error (
                error_name_in => 'COLUMN-CANNOT-BE-NULL'
               ,name1_in => 'OWNER'
               ,value1_in => c_owner
               ,name2_in => 'TABLE_NAME'
               ,value2_in => c_tabname
               ,name3_in => 'COLUMN_NAME'
               ,value3_in => c_colname);
        END;
        END IF;
   END upd;


   PROCEDURE upd (
      id_icnp_epis_interv_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE,
      id_icnp_epis_interv_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV%TYPE DEFAULT NULL,
      ID_ICNP_EPIS_INTERV_nin IN BOOLEAN := TRUE,
      id_patient_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      ID_PATIENT_nin IN BOOLEAN := TRUE,
      id_episode_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      id_composition_in IN ICNP_EPIS_INTERVENTION_HIST.ID_COMPOSITION%TYPE DEFAULT NULL,
      ID_COMPOSITION_nin IN BOOLEAN := TRUE,
      flg_status_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      freq_in IN ICNP_EPIS_INTERVENTION_HIST.FREQ%TYPE DEFAULT NULL,
      FREQ_nin IN BOOLEAN := TRUE,
      notes_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      id_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF%TYPE DEFAULT NULL,
      ID_PROF_nin IN BOOLEAN := TRUE,
      notes_close_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE%TYPE DEFAULT NULL,
      NOTES_CLOSE_nin IN BOOLEAN := TRUE,
      id_prof_close_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CLOSE%TYPE DEFAULT NULL,
      ID_PROF_CLOSE_nin IN BOOLEAN := TRUE,
      forward_interv_in IN ICNP_EPIS_INTERVENTION_HIST.FORWARD_INTERV%TYPE DEFAULT NULL,
      FORWARD_INTERV_nin IN BOOLEAN := TRUE,
      notes_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_ITERACTION%TYPE DEFAULT NULL,
      NOTES_ITERACTION_nin IN BOOLEAN := TRUE,
      notes_close_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE_ITERACTION%TYPE DEFAULT NULL,
      NOTES_CLOSE_ITERACTION_nin IN BOOLEAN := TRUE,
      flg_time_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TIME%TYPE DEFAULT NULL,
      FLG_TIME_nin IN BOOLEAN := TRUE,
      flg_type_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TYPE%TYPE DEFAULT NULL,
      FLG_TYPE_nin IN BOOLEAN := TRUE,
      interval_in IN ICNP_EPIS_INTERVENTION_HIST.INTERVAL%TYPE DEFAULT NULL,
      INTERVAL_nin IN BOOLEAN := TRUE,
      num_take_in IN ICNP_EPIS_INTERVENTION_HIST.NUM_TAKE%TYPE DEFAULT NULL,
      NUM_TAKE_nin IN BOOLEAN := TRUE,
      dt_icnp_epis_interv_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_ICNP_EPIS_INTERV_TSTZ%TYPE DEFAULT NULL,
      DT_ICNP_EPIS_INTERV_TSTZ_nin IN BOOLEAN := TRUE,
      dt_begin_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      DT_BEGIN_TSTZ_nin IN BOOLEAN := TRUE,
      dt_end_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
      DT_END_TSTZ_nin IN BOOLEAN := TRUE,
      dt_next_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_NEXT_TSTZ%TYPE DEFAULT NULL,
      DT_NEXT_TSTZ_nin IN BOOLEAN := TRUE,
      dt_close_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CLOSE_TSTZ%TYPE DEFAULT NULL,
      DT_CLOSE_TSTZ_nin IN BOOLEAN := TRUE,
      flg_interval_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_INTERVAL_UNIT%TYPE DEFAULT NULL,
      FLG_INTERVAL_UNIT_nin IN BOOLEAN := TRUE,
      id_episode_origin_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      ID_EPISODE_ORIGIN_nin IN BOOLEAN := TRUE,
      id_episode_destination_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      ID_EPISODE_DESTINATION_nin IN BOOLEAN := TRUE,
      duration_in IN ICNP_EPIS_INTERVENTION_HIST.DURATION%TYPE DEFAULT NULL,
      DURATION_nin IN BOOLEAN := TRUE,
      flg_duration_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_DURATION_UNIT%TYPE DEFAULT NULL,
      FLG_DURATION_UNIT_nin IN BOOLEAN := TRUE,
      create_user_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      id_prof_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_LAST_UPDATE%TYPE DEFAULT NULL,
      ID_PROF_LAST_UPDATE_nin IN BOOLEAN := TRUE,
      dt_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.DT_LAST_UPDATE%TYPE DEFAULT NULL,
      DT_LAST_UPDATE_nin IN BOOLEAN := TRUE,
      id_suspend_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_REASON%TYPE DEFAULT NULL,
      ID_SUSPEND_REASON_nin IN BOOLEAN := TRUE,
      id_suspend_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_PROF%TYPE DEFAULT NULL,
      ID_SUSPEND_PROF_nin IN BOOLEAN := TRUE,
      suspend_notes_in IN ICNP_EPIS_INTERVENTION_HIST.SUSPEND_NOTES%TYPE DEFAULT NULL,
      SUSPEND_NOTES_nin IN BOOLEAN := TRUE,
      dt_suspend_in IN ICNP_EPIS_INTERVENTION_HIST.DT_SUSPEND%TYPE DEFAULT NULL,
      DT_SUSPEND_nin IN BOOLEAN := TRUE,
      id_cancel_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      ID_CANCEL_REASON_nin IN BOOLEAN := TRUE,
      id_cancel_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_PROF%TYPE DEFAULT NULL,
      ID_CANCEL_PROF_nin IN BOOLEAN := TRUE,
      cancel_notes_in IN ICNP_EPIS_INTERVENTION_HIST.CANCEL_NOTES%TYPE DEFAULT NULL,
      CANCEL_NOTES_nin IN BOOLEAN := TRUE,
      dt_cancel_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CANCEL%TYPE DEFAULT NULL,
      DT_CANCEL_nin IN BOOLEAN := TRUE,
      id_prof_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CREATED_HIST%TYPE DEFAULT NULL,
      ID_PROF_CREATED_HIST_nin IN BOOLEAN := TRUE,
      dt_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CREATED_HIST%TYPE DEFAULT NULL,
      DT_CREATED_HIST_nin IN BOOLEAN := TRUE,
      id_order_recurr_plan_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ORDER_RECURR_PLAN%TYPE DEFAULT NULL,
      ID_ORDER_RECURR_PLAN_nin IN BOOLEAN := TRUE,
      flg_prn_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_PRN%TYPE DEFAULT NULL,
      FLG_PRN_nin IN BOOLEAN := TRUE,
      prn_notes_in IN ICNP_EPIS_INTERVENTION_HIST.PRN_NOTES%TYPE DEFAULT NULL,
      PRN_NOTES_nin IN BOOLEAN := TRUE,
      id_icnp_epis_interv_parent_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_PARENT%TYPE DEFAULT NULL,
      ID_ICNP_EPIS_INTERV_PARENT_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
     upd (
      id_icnp_epis_interv_hist_in => id_icnp_epis_interv_hist_in,
      id_icnp_epis_interv_in => id_icnp_epis_interv_in,
      ID_ICNP_EPIS_INTERV_nin => ID_ICNP_EPIS_INTERV_nin,
      id_patient_in => id_patient_in,
      ID_PATIENT_nin => ID_PATIENT_nin,
      id_episode_in => id_episode_in,
      ID_EPISODE_nin => ID_EPISODE_nin,
      id_composition_in => id_composition_in,
      ID_COMPOSITION_nin => ID_COMPOSITION_nin,
      flg_status_in => flg_status_in,
      FLG_STATUS_nin => FLG_STATUS_nin,
      freq_in => freq_in,
      FREQ_nin => FREQ_nin,
      notes_in => notes_in,
      NOTES_nin => NOTES_nin,
      id_prof_in => id_prof_in,
      ID_PROF_nin => ID_PROF_nin,
      notes_close_in => notes_close_in,
      NOTES_CLOSE_nin => NOTES_CLOSE_nin,
      id_prof_close_in => id_prof_close_in,
      ID_PROF_CLOSE_nin => ID_PROF_CLOSE_nin,
      forward_interv_in => forward_interv_in,
      FORWARD_INTERV_nin => FORWARD_INTERV_nin,
      notes_iteraction_in => notes_iteraction_in,
      NOTES_ITERACTION_nin => NOTES_ITERACTION_nin,
      notes_close_iteraction_in => notes_close_iteraction_in,
      NOTES_CLOSE_ITERACTION_nin => NOTES_CLOSE_ITERACTION_nin,
      flg_time_in => flg_time_in,
      FLG_TIME_nin => FLG_TIME_nin,
      flg_type_in => flg_type_in,
      FLG_TYPE_nin => FLG_TYPE_nin,
      interval_in => interval_in,
      INTERVAL_nin => INTERVAL_nin,
      num_take_in => num_take_in,
      NUM_TAKE_nin => NUM_TAKE_nin,
      dt_icnp_epis_interv_tstz_in => dt_icnp_epis_interv_tstz_in,
      DT_ICNP_EPIS_INTERV_TSTZ_nin => DT_ICNP_EPIS_INTERV_TSTZ_nin,
      dt_begin_tstz_in => dt_begin_tstz_in,
      DT_BEGIN_TSTZ_nin => DT_BEGIN_TSTZ_nin,
      dt_end_tstz_in => dt_end_tstz_in,
      DT_END_TSTZ_nin => DT_END_TSTZ_nin,
      dt_next_tstz_in => dt_next_tstz_in,
      DT_NEXT_TSTZ_nin => DT_NEXT_TSTZ_nin,
      dt_close_tstz_in => dt_close_tstz_in,
      DT_CLOSE_TSTZ_nin => DT_CLOSE_TSTZ_nin,
      flg_interval_unit_in => flg_interval_unit_in,
      FLG_INTERVAL_UNIT_nin => FLG_INTERVAL_UNIT_nin,
      id_episode_origin_in => id_episode_origin_in,
      ID_EPISODE_ORIGIN_nin => ID_EPISODE_ORIGIN_nin,
      id_episode_destination_in => id_episode_destination_in,
      ID_EPISODE_DESTINATION_nin => ID_EPISODE_DESTINATION_nin,
      duration_in => duration_in,
      DURATION_nin => DURATION_nin,
      flg_duration_unit_in => flg_duration_unit_in,
      FLG_DURATION_UNIT_nin => FLG_DURATION_UNIT_nin,
      create_user_in => create_user_in,
      CREATE_USER_nin => CREATE_USER_nin,
      create_time_in => create_time_in,
      CREATE_TIME_nin => CREATE_TIME_nin,
      create_institution_in => create_institution_in,
      CREATE_INSTITUTION_nin => CREATE_INSTITUTION_nin,
      update_user_in => update_user_in,
      UPDATE_USER_nin => UPDATE_USER_nin,
      update_time_in => update_time_in,
      UPDATE_TIME_nin => UPDATE_TIME_nin,
      update_institution_in => update_institution_in,
      UPDATE_INSTITUTION_nin => UPDATE_INSTITUTION_nin,
      id_prof_last_update_in => id_prof_last_update_in,
      ID_PROF_LAST_UPDATE_nin => ID_PROF_LAST_UPDATE_nin,
      dt_last_update_in => dt_last_update_in,
      DT_LAST_UPDATE_nin => DT_LAST_UPDATE_nin,
      id_suspend_reason_in => id_suspend_reason_in,
      ID_SUSPEND_REASON_nin => ID_SUSPEND_REASON_nin,
      id_suspend_prof_in => id_suspend_prof_in,
      ID_SUSPEND_PROF_nin => ID_SUSPEND_PROF_nin,
      suspend_notes_in => suspend_notes_in,
      SUSPEND_NOTES_nin => SUSPEND_NOTES_nin,
      dt_suspend_in => dt_suspend_in,
      DT_SUSPEND_nin => DT_SUSPEND_nin,
      id_cancel_reason_in => id_cancel_reason_in,
      ID_CANCEL_REASON_nin => ID_CANCEL_REASON_nin,
      id_cancel_prof_in => id_cancel_prof_in,
      ID_CANCEL_PROF_nin => ID_CANCEL_PROF_nin,
      cancel_notes_in => cancel_notes_in,
      CANCEL_NOTES_nin => CANCEL_NOTES_nin,
      dt_cancel_in => dt_cancel_in,
      DT_CANCEL_nin => DT_CANCEL_nin,
      id_prof_created_hist_in => id_prof_created_hist_in,
      ID_PROF_CREATED_HIST_nin => ID_PROF_CREATED_HIST_nin,
      dt_created_hist_in => dt_created_hist_in,
      DT_CREATED_HIST_nin => DT_CREATED_HIST_nin,
      id_order_recurr_plan_in => id_order_recurr_plan_in,
      ID_ORDER_RECURR_PLAN_nin => ID_ORDER_RECURR_PLAN_nin,
      flg_prn_in => flg_prn_in,
      FLG_PRN_nin => FLG_PRN_nin,
      prn_notes_in => prn_notes_in,
      PRN_NOTES_nin => PRN_NOTES_nin,
      id_icnp_epis_interv_parent_in => id_icnp_epis_interv_parent_in,
      ID_ICNP_EPIS_INTERV_PARENT_nin => ID_ICNP_EPIS_INTERV_PARENT_nin,
     handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END upd;

PROCEDURE upd (
      id_icnp_epis_interv_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV%TYPE DEFAULT NULL,
      ID_ICNP_EPIS_INTERV_nin IN BOOLEAN := TRUE,
      id_patient_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      ID_PATIENT_nin IN BOOLEAN := TRUE,
      id_episode_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      id_composition_in IN ICNP_EPIS_INTERVENTION_HIST.ID_COMPOSITION%TYPE DEFAULT NULL,
      ID_COMPOSITION_nin IN BOOLEAN := TRUE,
      flg_status_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      freq_in IN ICNP_EPIS_INTERVENTION_HIST.FREQ%TYPE DEFAULT NULL,
      FREQ_nin IN BOOLEAN := TRUE,
      notes_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      id_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF%TYPE DEFAULT NULL,
      ID_PROF_nin IN BOOLEAN := TRUE,
      notes_close_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE%TYPE DEFAULT NULL,
      NOTES_CLOSE_nin IN BOOLEAN := TRUE,
      id_prof_close_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CLOSE%TYPE DEFAULT NULL,
      ID_PROF_CLOSE_nin IN BOOLEAN := TRUE,
      forward_interv_in IN ICNP_EPIS_INTERVENTION_HIST.FORWARD_INTERV%TYPE DEFAULT NULL,
      FORWARD_INTERV_nin IN BOOLEAN := TRUE,
      notes_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_ITERACTION%TYPE DEFAULT NULL,
      NOTES_ITERACTION_nin IN BOOLEAN := TRUE,
      notes_close_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE_ITERACTION%TYPE DEFAULT NULL,
      NOTES_CLOSE_ITERACTION_nin IN BOOLEAN := TRUE,
      flg_time_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TIME%TYPE DEFAULT NULL,
      FLG_TIME_nin IN BOOLEAN := TRUE,
      flg_type_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TYPE%TYPE DEFAULT NULL,
      FLG_TYPE_nin IN BOOLEAN := TRUE,
      interval_in IN ICNP_EPIS_INTERVENTION_HIST.INTERVAL%TYPE DEFAULT NULL,
      INTERVAL_nin IN BOOLEAN := TRUE,
      num_take_in IN ICNP_EPIS_INTERVENTION_HIST.NUM_TAKE%TYPE DEFAULT NULL,
      NUM_TAKE_nin IN BOOLEAN := TRUE,
      dt_icnp_epis_interv_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_ICNP_EPIS_INTERV_TSTZ%TYPE DEFAULT NULL,
      DT_ICNP_EPIS_INTERV_TSTZ_nin IN BOOLEAN := TRUE,
      dt_begin_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      DT_BEGIN_TSTZ_nin IN BOOLEAN := TRUE,
      dt_end_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
      DT_END_TSTZ_nin IN BOOLEAN := TRUE,
      dt_next_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_NEXT_TSTZ%TYPE DEFAULT NULL,
      DT_NEXT_TSTZ_nin IN BOOLEAN := TRUE,
      dt_close_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CLOSE_TSTZ%TYPE DEFAULT NULL,
      DT_CLOSE_TSTZ_nin IN BOOLEAN := TRUE,
      flg_interval_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_INTERVAL_UNIT%TYPE DEFAULT NULL,
      FLG_INTERVAL_UNIT_nin IN BOOLEAN := TRUE,
      id_episode_origin_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      ID_EPISODE_ORIGIN_nin IN BOOLEAN := TRUE,
      id_episode_destination_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      ID_EPISODE_DESTINATION_nin IN BOOLEAN := TRUE,
      duration_in IN ICNP_EPIS_INTERVENTION_HIST.DURATION%TYPE DEFAULT NULL,
      DURATION_nin IN BOOLEAN := TRUE,
      flg_duration_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_DURATION_UNIT%TYPE DEFAULT NULL,
      FLG_DURATION_UNIT_nin IN BOOLEAN := TRUE,
      create_user_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      id_prof_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_LAST_UPDATE%TYPE DEFAULT NULL,
      ID_PROF_LAST_UPDATE_nin IN BOOLEAN := TRUE,
      dt_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.DT_LAST_UPDATE%TYPE DEFAULT NULL,
      DT_LAST_UPDATE_nin IN BOOLEAN := TRUE,
      id_suspend_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_REASON%TYPE DEFAULT NULL,
      ID_SUSPEND_REASON_nin IN BOOLEAN := TRUE,
      id_suspend_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_PROF%TYPE DEFAULT NULL,
      ID_SUSPEND_PROF_nin IN BOOLEAN := TRUE,
      suspend_notes_in IN ICNP_EPIS_INTERVENTION_HIST.SUSPEND_NOTES%TYPE DEFAULT NULL,
      SUSPEND_NOTES_nin IN BOOLEAN := TRUE,
      dt_suspend_in IN ICNP_EPIS_INTERVENTION_HIST.DT_SUSPEND%TYPE DEFAULT NULL,
      DT_SUSPEND_nin IN BOOLEAN := TRUE,
      id_cancel_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      ID_CANCEL_REASON_nin IN BOOLEAN := TRUE,
      id_cancel_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_PROF%TYPE DEFAULT NULL,
      ID_CANCEL_PROF_nin IN BOOLEAN := TRUE,
      cancel_notes_in IN ICNP_EPIS_INTERVENTION_HIST.CANCEL_NOTES%TYPE DEFAULT NULL,
      CANCEL_NOTES_nin IN BOOLEAN := TRUE,
      dt_cancel_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CANCEL%TYPE DEFAULT NULL,
      DT_CANCEL_nin IN BOOLEAN := TRUE,
      id_prof_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CREATED_HIST%TYPE DEFAULT NULL,
      ID_PROF_CREATED_HIST_nin IN BOOLEAN := TRUE,
      dt_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CREATED_HIST%TYPE DEFAULT NULL,
      DT_CREATED_HIST_nin IN BOOLEAN := TRUE,
      id_order_recurr_plan_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ORDER_RECURR_PLAN%TYPE DEFAULT NULL,
      ID_ORDER_RECURR_PLAN_nin IN BOOLEAN := TRUE,
      flg_prn_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_PRN%TYPE DEFAULT NULL,
      FLG_PRN_nin IN BOOLEAN := TRUE,
      prn_notes_in IN ICNP_EPIS_INTERVENTION_HIST.PRN_NOTES%TYPE DEFAULT NULL,
      PRN_NOTES_nin IN BOOLEAN := TRUE,
      id_icnp_epis_interv_parent_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_PARENT%TYPE DEFAULT NULL,
      ID_ICNP_EPIS_INTERV_PARENT_nin IN BOOLEAN := TRUE,
    where_in varchar2,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      )
   IS
   l_sql VARCHAR2(32767);
   l_rows_out TABLE_VARCHAR;
   l_ID_ICNP_EPIS_INTERV_n NUMBER(1);
   l_ID_PATIENT_n NUMBER(1);
   l_ID_EPISODE_n NUMBER(1);
   l_ID_COMPOSITION_n NUMBER(1);
   l_FLG_STATUS_n NUMBER(1);
   l_FREQ_n NUMBER(1);
   l_NOTES_n NUMBER(1);
   l_ID_PROF_n NUMBER(1);
   l_NOTES_CLOSE_n NUMBER(1);
   l_ID_PROF_CLOSE_n NUMBER(1);
   l_FORWARD_INTERV_n NUMBER(1);
   l_NOTES_ITERACTION_n NUMBER(1);
   l_NOTES_CLOSE_ITERACTION_n NUMBER(1);
   l_FLG_TIME_n NUMBER(1);
   l_FLG_TYPE_n NUMBER(1);
   l_INTERVAL_n NUMBER(1);
   l_NUM_TAKE_n NUMBER(1);
   l_DT_ICNP_EPIS_INTERV_TSTZ_n NUMBER(1);
   l_DT_BEGIN_TSTZ_n NUMBER(1);
   l_DT_END_TSTZ_n NUMBER(1);
   l_DT_NEXT_TSTZ_n NUMBER(1);
   l_DT_CLOSE_TSTZ_n NUMBER(1);
   l_FLG_INTERVAL_UNIT_n NUMBER(1);
   l_ID_EPISODE_ORIGIN_n NUMBER(1);
   l_ID_EPISODE_DESTINATION_n NUMBER(1);
   l_DURATION_n NUMBER(1);
   l_FLG_DURATION_UNIT_n NUMBER(1);
   l_CREATE_USER_n NUMBER(1);
   l_CREATE_TIME_n NUMBER(1);
   l_CREATE_INSTITUTION_n NUMBER(1);
   l_UPDATE_USER_n NUMBER(1);
   l_UPDATE_TIME_n NUMBER(1);
   l_UPDATE_INSTITUTION_n NUMBER(1);
   l_ID_PROF_LAST_UPDATE_n NUMBER(1);
   l_DT_LAST_UPDATE_n NUMBER(1);
   l_ID_SUSPEND_REASON_n NUMBER(1);
   l_ID_SUSPEND_PROF_n NUMBER(1);
   l_SUSPEND_NOTES_n NUMBER(1);
   l_DT_SUSPEND_n NUMBER(1);
   l_ID_CANCEL_REASON_n NUMBER(1);
   l_ID_CANCEL_PROF_n NUMBER(1);
   l_CANCEL_NOTES_n NUMBER(1);
   l_DT_CANCEL_n NUMBER(1);
   l_ID_PROF_CREATED_HIST_n NUMBER(1);
   l_DT_CREATED_HIST_n NUMBER(1);
   l_ID_ORDER_RECURR_PLAN_n NUMBER(1);
   l_FLG_PRN_n NUMBER(1);
   l_PRN_NOTES_n NUMBER(1);
   l_ID_ICNP_EPIS_INTERV_PARENT_n NUMBER(1);
      id_icnp_epis_interv_hist_in ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE;
   BEGIN



      l_ID_ICNP_EPIS_INTERV_n := sys.diutil.bool_to_int(ID_ICNP_EPIS_INTERV_nin);
      l_ID_PATIENT_n := sys.diutil.bool_to_int(ID_PATIENT_nin);
      l_ID_EPISODE_n := sys.diutil.bool_to_int(ID_EPISODE_nin);
      l_ID_COMPOSITION_n := sys.diutil.bool_to_int(ID_COMPOSITION_nin);
      l_FLG_STATUS_n := sys.diutil.bool_to_int(FLG_STATUS_nin);
      l_FREQ_n := sys.diutil.bool_to_int(FREQ_nin);
      l_NOTES_n := sys.diutil.bool_to_int(NOTES_nin);
      l_ID_PROF_n := sys.diutil.bool_to_int(ID_PROF_nin);
      l_NOTES_CLOSE_n := sys.diutil.bool_to_int(NOTES_CLOSE_nin);
      l_ID_PROF_CLOSE_n := sys.diutil.bool_to_int(ID_PROF_CLOSE_nin);
      l_FORWARD_INTERV_n := sys.diutil.bool_to_int(FORWARD_INTERV_nin);
      l_NOTES_ITERACTION_n := sys.diutil.bool_to_int(NOTES_ITERACTION_nin);
      l_NOTES_CLOSE_ITERACTION_n := sys.diutil.bool_to_int(NOTES_CLOSE_ITERACTION_nin);
      l_FLG_TIME_n := sys.diutil.bool_to_int(FLG_TIME_nin);
      l_FLG_TYPE_n := sys.diutil.bool_to_int(FLG_TYPE_nin);
      l_INTERVAL_n := sys.diutil.bool_to_int(INTERVAL_nin);
      l_NUM_TAKE_n := sys.diutil.bool_to_int(NUM_TAKE_nin);
      l_DT_ICNP_EPIS_INTERV_TSTZ_n := sys.diutil.bool_to_int(DT_ICNP_EPIS_INTERV_TSTZ_nin);
      l_DT_BEGIN_TSTZ_n := sys.diutil.bool_to_int(DT_BEGIN_TSTZ_nin);
      l_DT_END_TSTZ_n := sys.diutil.bool_to_int(DT_END_TSTZ_nin);
      l_DT_NEXT_TSTZ_n := sys.diutil.bool_to_int(DT_NEXT_TSTZ_nin);
      l_DT_CLOSE_TSTZ_n := sys.diutil.bool_to_int(DT_CLOSE_TSTZ_nin);
      l_FLG_INTERVAL_UNIT_n := sys.diutil.bool_to_int(FLG_INTERVAL_UNIT_nin);
      l_ID_EPISODE_ORIGIN_n := sys.diutil.bool_to_int(ID_EPISODE_ORIGIN_nin);
      l_ID_EPISODE_DESTINATION_n := sys.diutil.bool_to_int(ID_EPISODE_DESTINATION_nin);
      l_DURATION_n := sys.diutil.bool_to_int(DURATION_nin);
      l_FLG_DURATION_UNIT_n := sys.diutil.bool_to_int(FLG_DURATION_UNIT_nin);
      l_CREATE_USER_n := sys.diutil.bool_to_int(CREATE_USER_nin);
      l_CREATE_TIME_n := sys.diutil.bool_to_int(CREATE_TIME_nin);
      l_CREATE_INSTITUTION_n := sys.diutil.bool_to_int(CREATE_INSTITUTION_nin);
      l_UPDATE_USER_n := sys.diutil.bool_to_int(UPDATE_USER_nin);
      l_UPDATE_TIME_n := sys.diutil.bool_to_int(UPDATE_TIME_nin);
      l_UPDATE_INSTITUTION_n := sys.diutil.bool_to_int(UPDATE_INSTITUTION_nin);
      l_ID_PROF_LAST_UPDATE_n := sys.diutil.bool_to_int(ID_PROF_LAST_UPDATE_nin);
      l_DT_LAST_UPDATE_n := sys.diutil.bool_to_int(DT_LAST_UPDATE_nin);
      l_ID_SUSPEND_REASON_n := sys.diutil.bool_to_int(ID_SUSPEND_REASON_nin);
      l_ID_SUSPEND_PROF_n := sys.diutil.bool_to_int(ID_SUSPEND_PROF_nin);
      l_SUSPEND_NOTES_n := sys.diutil.bool_to_int(SUSPEND_NOTES_nin);
      l_DT_SUSPEND_n := sys.diutil.bool_to_int(DT_SUSPEND_nin);
      l_ID_CANCEL_REASON_n := sys.diutil.bool_to_int(ID_CANCEL_REASON_nin);
      l_ID_CANCEL_PROF_n := sys.diutil.bool_to_int(ID_CANCEL_PROF_nin);
      l_CANCEL_NOTES_n := sys.diutil.bool_to_int(CANCEL_NOTES_nin);
      l_DT_CANCEL_n := sys.diutil.bool_to_int(DT_CANCEL_nin);
      l_ID_PROF_CREATED_HIST_n := sys.diutil.bool_to_int(ID_PROF_CREATED_HIST_nin);
      l_DT_CREATED_HIST_n := sys.diutil.bool_to_int(DT_CREATED_HIST_nin);
      l_ID_ORDER_RECURR_PLAN_n := sys.diutil.bool_to_int(ID_ORDER_RECURR_PLAN_nin);
      l_FLG_PRN_n := sys.diutil.bool_to_int(FLG_PRN_nin);
      l_PRN_NOTES_n := sys.diutil.bool_to_int(PRN_NOTES_nin);
      l_ID_ICNP_EPIS_INTERV_PARENT_n := sys.diutil.bool_to_int(ID_ICNP_EPIS_INTERV_PARENT_nin);



l_sql := 'UPDATE ICNP_EPIS_INTERVENTION_HIST SET '
     || ' ID_ICNP_EPIS_INTERV = decode (' || l_ID_ICNP_EPIS_INTERV_n || ',0,:id_icnp_epis_interv_in, NVL (:id_icnp_epis_interv_in, ID_ICNP_EPIS_INTERV)) '|| ','
     || ' ID_PATIENT = decode (' || l_ID_PATIENT_n || ',0,:id_patient_in, NVL (:id_patient_in, ID_PATIENT)) '|| ','
     || ' ID_EPISODE = decode (' || l_ID_EPISODE_n || ',0,:id_episode_in, NVL (:id_episode_in, ID_EPISODE)) '|| ','
     || ' ID_COMPOSITION = decode (' || l_ID_COMPOSITION_n || ',0,:id_composition_in, NVL (:id_composition_in, ID_COMPOSITION)) '|| ','
     || ' FLG_STATUS = decode (' || l_FLG_STATUS_n || ',0,:flg_status_in, NVL (:flg_status_in, FLG_STATUS)) '|| ','
     || ' FREQ = decode (' || l_FREQ_n || ',0,:freq_in, NVL (:freq_in, FREQ)) '|| ','
     || ' NOTES = decode (' || l_NOTES_n || ',0,:notes_in, NVL (:notes_in, NOTES)) '|| ','
     || ' ID_PROF = decode (' || l_ID_PROF_n || ',0,:id_prof_in, NVL (:id_prof_in, ID_PROF)) '|| ','
     || ' NOTES_CLOSE = decode (' || l_NOTES_CLOSE_n || ',0,:notes_close_in, NVL (:notes_close_in, NOTES_CLOSE)) '|| ','
     || ' ID_PROF_CLOSE = decode (' || l_ID_PROF_CLOSE_n || ',0,:id_prof_close_in, NVL (:id_prof_close_in, ID_PROF_CLOSE)) '|| ','
     || ' FORWARD_INTERV = decode (' || l_FORWARD_INTERV_n || ',0,:forward_interv_in, NVL (:forward_interv_in, FORWARD_INTERV)) '|| ','
     || ' NOTES_ITERACTION = decode (' || l_NOTES_ITERACTION_n || ',0,:notes_iteraction_in, NVL (:notes_iteraction_in, NOTES_ITERACTION)) '|| ','
     || ' NOTES_CLOSE_ITERACTION = decode (' || l_NOTES_CLOSE_ITERACTION_n || ',0,:notes_close_iteraction_in, NVL (:notes_close_iteraction_in, NOTES_CLOSE_ITERACTION)) '|| ','
     || ' FLG_TIME = decode (' || l_FLG_TIME_n || ',0,:flg_time_in, NVL (:flg_time_in, FLG_TIME)) '|| ','
     || ' FLG_TYPE = decode (' || l_FLG_TYPE_n || ',0,:flg_type_in, NVL (:flg_type_in, FLG_TYPE)) '|| ','
     || ' INTERVAL = decode (' || l_INTERVAL_n || ',0,:interval_in, NVL (:interval_in, INTERVAL)) '|| ','
     || ' NUM_TAKE = decode (' || l_NUM_TAKE_n || ',0,:num_take_in, NVL (:num_take_in, NUM_TAKE)) '|| ','
     || ' DT_ICNP_EPIS_INTERV_TSTZ = decode (' || l_DT_ICNP_EPIS_INTERV_TSTZ_n || ',0,:dt_icnp_epis_interv_tstz_in, NVL (:dt_icnp_epis_interv_tstz_in, DT_ICNP_EPIS_INTERV_TSTZ)) '|| ','
     || ' DT_BEGIN_TSTZ = decode (' || l_DT_BEGIN_TSTZ_n || ',0,:dt_begin_tstz_in, NVL (:dt_begin_tstz_in, DT_BEGIN_TSTZ)) '|| ','
     || ' DT_END_TSTZ = decode (' || l_DT_END_TSTZ_n || ',0,:dt_end_tstz_in, NVL (:dt_end_tstz_in, DT_END_TSTZ)) '|| ','
     || ' DT_NEXT_TSTZ = decode (' || l_DT_NEXT_TSTZ_n || ',0,:dt_next_tstz_in, NVL (:dt_next_tstz_in, DT_NEXT_TSTZ)) '|| ','
     || ' DT_CLOSE_TSTZ = decode (' || l_DT_CLOSE_TSTZ_n || ',0,:dt_close_tstz_in, NVL (:dt_close_tstz_in, DT_CLOSE_TSTZ)) '|| ','
     || ' FLG_INTERVAL_UNIT = decode (' || l_FLG_INTERVAL_UNIT_n || ',0,:flg_interval_unit_in, NVL (:flg_interval_unit_in, FLG_INTERVAL_UNIT)) '|| ','
     || ' ID_EPISODE_ORIGIN = decode (' || l_ID_EPISODE_ORIGIN_n || ',0,:id_episode_origin_in, NVL (:id_episode_origin_in, ID_EPISODE_ORIGIN)) '|| ','
     || ' ID_EPISODE_DESTINATION = decode (' || l_ID_EPISODE_DESTINATION_n || ',0,:id_episode_destination_in, NVL (:id_episode_destination_in, ID_EPISODE_DESTINATION)) '|| ','
     || ' DURATION = decode (' || l_DURATION_n || ',0,:duration_in, NVL (:duration_in, DURATION)) '|| ','
     || ' FLG_DURATION_UNIT = decode (' || l_FLG_DURATION_UNIT_n || ',0,:flg_duration_unit_in, NVL (:flg_duration_unit_in, FLG_DURATION_UNIT)) '|| ','
     || ' CREATE_USER = decode (' || l_CREATE_USER_n || ',0,:create_user_in, NVL (:create_user_in, CREATE_USER)) '|| ','
     || ' CREATE_TIME = decode (' || l_CREATE_TIME_n || ',0,:create_time_in, NVL (:create_time_in, CREATE_TIME)) '|| ','
     || ' CREATE_INSTITUTION = decode (' || l_CREATE_INSTITUTION_n || ',0,:create_institution_in, NVL (:create_institution_in, CREATE_INSTITUTION)) '|| ','
     || ' UPDATE_USER = decode (' || l_UPDATE_USER_n || ',0,:update_user_in, NVL (:update_user_in, UPDATE_USER)) '|| ','
     || ' UPDATE_TIME = decode (' || l_UPDATE_TIME_n || ',0,:update_time_in, NVL (:update_time_in, UPDATE_TIME)) '|| ','
     || ' UPDATE_INSTITUTION = decode (' || l_UPDATE_INSTITUTION_n || ',0,:update_institution_in, NVL (:update_institution_in, UPDATE_INSTITUTION)) '|| ','
     || ' ID_PROF_LAST_UPDATE = decode (' || l_ID_PROF_LAST_UPDATE_n || ',0,:id_prof_last_update_in, NVL (:id_prof_last_update_in, ID_PROF_LAST_UPDATE)) '|| ','
     || ' DT_LAST_UPDATE = decode (' || l_DT_LAST_UPDATE_n || ',0,:dt_last_update_in, NVL (:dt_last_update_in, DT_LAST_UPDATE)) '|| ','
     || ' ID_SUSPEND_REASON = decode (' || l_ID_SUSPEND_REASON_n || ',0,:id_suspend_reason_in, NVL (:id_suspend_reason_in, ID_SUSPEND_REASON)) '|| ','
     || ' ID_SUSPEND_PROF = decode (' || l_ID_SUSPEND_PROF_n || ',0,:id_suspend_prof_in, NVL (:id_suspend_prof_in, ID_SUSPEND_PROF)) '|| ','
     || ' SUSPEND_NOTES = decode (' || l_SUSPEND_NOTES_n || ',0,:suspend_notes_in, NVL (:suspend_notes_in, SUSPEND_NOTES)) '|| ','
     || ' DT_SUSPEND = decode (' || l_DT_SUSPEND_n || ',0,:dt_suspend_in, NVL (:dt_suspend_in, DT_SUSPEND)) '|| ','
     || ' ID_CANCEL_REASON = decode (' || l_ID_CANCEL_REASON_n || ',0,:id_cancel_reason_in, NVL (:id_cancel_reason_in, ID_CANCEL_REASON)) '|| ','
     || ' ID_CANCEL_PROF = decode (' || l_ID_CANCEL_PROF_n || ',0,:id_cancel_prof_in, NVL (:id_cancel_prof_in, ID_CANCEL_PROF)) '|| ','
     || ' CANCEL_NOTES = decode (' || l_CANCEL_NOTES_n || ',0,:cancel_notes_in, NVL (:cancel_notes_in, CANCEL_NOTES)) '|| ','
     || ' DT_CANCEL = decode (' || l_DT_CANCEL_n || ',0,:dt_cancel_in, NVL (:dt_cancel_in, DT_CANCEL)) '|| ','
     || ' ID_PROF_CREATED_HIST = decode (' || l_ID_PROF_CREATED_HIST_n || ',0,:id_prof_created_hist_in, NVL (:id_prof_created_hist_in, ID_PROF_CREATED_HIST)) '|| ','
     || ' DT_CREATED_HIST = decode (' || l_DT_CREATED_HIST_n || ',0,:dt_created_hist_in, NVL (:dt_created_hist_in, DT_CREATED_HIST)) '|| ','
     || ' ID_ORDER_RECURR_PLAN = decode (' || l_ID_ORDER_RECURR_PLAN_n || ',0,:id_order_recurr_plan_in, NVL (:id_order_recurr_plan_in, ID_ORDER_RECURR_PLAN)) '|| ','
     || ' FLG_PRN = decode (' || l_FLG_PRN_n || ',0,:flg_prn_in, NVL (:flg_prn_in, FLG_PRN)) '|| ','
     || ' PRN_NOTES = decode (' || l_PRN_NOTES_n || ',0,:prn_notes_in, NVL (:prn_notes_in, PRN_NOTES)) '|| ','
     || ' ID_ICNP_EPIS_INTERV_PARENT = decode (' || l_ID_ICNP_EPIS_INTERV_PARENT_n || ',0,:id_icnp_epis_interv_parent_in, NVL (:id_icnp_epis_interv_parent_in, ID_ICNP_EPIS_INTERV_PARENT)) '
      || ' where ' || nvl(where_in,'(1=1)')
      || ' RETURNING ROWID BULK COLLECT INTO :l_rows_out';




execute immediate 'BEGIN ' || l_sql || '; END;' using in
     id_icnp_epis_interv_in,
     id_patient_in,
     id_episode_in,
     id_composition_in,
     flg_status_in,
     freq_in,
     notes_in,
     id_prof_in,
     notes_close_in,
     id_prof_close_in,
     forward_interv_in,
     notes_iteraction_in,
     notes_close_iteraction_in,
     flg_time_in,
     flg_type_in,
     interval_in,
     num_take_in,
     dt_icnp_epis_interv_tstz_in,
     dt_begin_tstz_in,
     dt_end_tstz_in,
     dt_next_tstz_in,
     dt_close_tstz_in,
     flg_interval_unit_in,
     id_episode_origin_in,
     id_episode_destination_in,
     duration_in,
     flg_duration_unit_in,
     create_user_in,
     create_time_in,
     create_institution_in,
     update_user_in,
     update_time_in,
     update_institution_in,
     id_prof_last_update_in,
     dt_last_update_in,
     id_suspend_reason_in,
     id_suspend_prof_in,
     suspend_notes_in,
     dt_suspend_in,
     id_cancel_reason_in,
     id_cancel_prof_in,
     cancel_notes_in,
     dt_cancel_in,
     id_prof_created_hist_in,
     dt_created_hist_in,
     id_order_recurr_plan_in,
     flg_prn_in,
     prn_notes_in,
     id_icnp_epis_interv_parent_in,
    OUT l_rows_out;

if(rows_out is null)
then
rows_out := table_varchar();
end if;

rows_out :=  rows_out MULTISET UNION DISTINCT l_rows_out;

   EXCEPTION
      WHEN DUP_VAL_ON_INDEX
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_err_instance_id PLS_INTEGER;
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF FALSE THEN NULL; -- Placeholder in case no unique indexes
           ELSE
              pk_alert_exceptions.raise_error (
                    error_name_in => 'DUPLICATE-VALUE'
                    ,name1_in => 'OWNER'
                    ,value1_in => l_owner
                    ,name2_in => 'CONSTRAINT_NAME'
                    ,value2_in => l_name
                    ,name3_in => 'TABLE_NAME'
                    ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           END IF;
        END;
        END IF;
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           IF l_name = 'IEIH_EIPI_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_ICNP_EPIS_INTERV'
               , value_in => id_icnp_epis_interv_in);
           END IF;
           IF l_name = 'IEIH_EIPI_FW_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'FORWARD_INTERV'
               , value_in => forward_interv_in);
           END IF;
           IF l_name = 'IEIH_EPIS_DEST_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_EPISODE_DESTINATION'
               , value_in => id_episode_destination_in);
           END IF;
           IF l_name = 'IEIH_EPIS_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_EPISODE'
               , value_in => id_episode_in);
           END IF;
           IF l_name = 'IEIH_EPIS_ORIGIN_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_EPISODE_ORIGIN'
               , value_in => id_episode_origin_in);
           END IF;
           IF l_name = 'IEIH_ORP_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_ORDER_RECURR_PLAN'
               , value_in => id_order_recurr_plan_in);
           END IF;
           IF l_name = 'IEIH_PAT_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PATIENT'
               , value_in => id_patient_in);
           END IF;
           IF l_name = 'IEIH_PROF_CANC_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PROF_CLOSE'
               , value_in => id_prof_close_in);
           END IF;
           IF l_name = 'IEIH_PROF_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PROF'
               , value_in => id_prof_in);
           END IF;
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
      WHEN e_null_column_value
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           v_errm VARCHAR2(2000) := DBMS_UTILITY.FORMAT_ERROR_STACK;
           dot1loc INTEGER;
           dot2loc INTEGER;
           parenloc INTEGER;
           c_owner ALL_CONSTRAINTS.OWNER%TYPE;
           c_tabname ALL_TABLES.TABLE_NAME%TYPE;
           c_colname ALL_TAB_COLUMNS.COLUMN_NAME%TYPE;
        BEGIN
           dot1loc := INSTR (v_errm, '.', 1, 1);
           dot2loc := INSTR (v_errm, '.', 1, 2);
           parenloc := INSTR (v_errm, '(');
           c_owner :=SUBSTR (v_errm, parenloc+1, dot1loc-parenloc-1);
           c_tabname := SUBSTR (v_errm, dot1loc+1, dot2loc-dot1loc-1);
           c_colname := SUBSTR (v_errm, dot2loc+1, INSTR (v_errm,')')-dot2loc-1);

           pk_alert_exceptions.raise_error (
                error_name_in => 'COLUMN-CANNOT-BE-NULL'
               ,name1_in => 'OWNER'
               ,value1_in => c_owner
               ,name2_in => 'TABLE_NAME'
               ,value2_in => c_tabname
               ,name3_in => 'COLUMN_NAME'
               ,value3_in => c_colname);
        END;
        END IF;
   END upd;





PROCEDURE upd (
      id_icnp_epis_interv_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV%TYPE DEFAULT NULL,
      ID_ICNP_EPIS_INTERV_nin IN BOOLEAN := TRUE,
      id_patient_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      ID_PATIENT_nin IN BOOLEAN := TRUE,
      id_episode_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE%TYPE DEFAULT NULL,
      ID_EPISODE_nin IN BOOLEAN := TRUE,
      id_composition_in IN ICNP_EPIS_INTERVENTION_HIST.ID_COMPOSITION%TYPE DEFAULT NULL,
      ID_COMPOSITION_nin IN BOOLEAN := TRUE,
      flg_status_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      freq_in IN ICNP_EPIS_INTERVENTION_HIST.FREQ%TYPE DEFAULT NULL,
      FREQ_nin IN BOOLEAN := TRUE,
      notes_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      id_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF%TYPE DEFAULT NULL,
      ID_PROF_nin IN BOOLEAN := TRUE,
      notes_close_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE%TYPE DEFAULT NULL,
      NOTES_CLOSE_nin IN BOOLEAN := TRUE,
      id_prof_close_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CLOSE%TYPE DEFAULT NULL,
      ID_PROF_CLOSE_nin IN BOOLEAN := TRUE,
      forward_interv_in IN ICNP_EPIS_INTERVENTION_HIST.FORWARD_INTERV%TYPE DEFAULT NULL,
      FORWARD_INTERV_nin IN BOOLEAN := TRUE,
      notes_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_ITERACTION%TYPE DEFAULT NULL,
      NOTES_ITERACTION_nin IN BOOLEAN := TRUE,
      notes_close_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE_ITERACTION%TYPE DEFAULT NULL,
      NOTES_CLOSE_ITERACTION_nin IN BOOLEAN := TRUE,
      flg_time_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TIME%TYPE DEFAULT NULL,
      FLG_TIME_nin IN BOOLEAN := TRUE,
      flg_type_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TYPE%TYPE DEFAULT NULL,
      FLG_TYPE_nin IN BOOLEAN := TRUE,
      interval_in IN ICNP_EPIS_INTERVENTION_HIST.INTERVAL%TYPE DEFAULT NULL,
      INTERVAL_nin IN BOOLEAN := TRUE,
      num_take_in IN ICNP_EPIS_INTERVENTION_HIST.NUM_TAKE%TYPE DEFAULT NULL,
      NUM_TAKE_nin IN BOOLEAN := TRUE,
      dt_icnp_epis_interv_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_ICNP_EPIS_INTERV_TSTZ%TYPE DEFAULT NULL,
      DT_ICNP_EPIS_INTERV_TSTZ_nin IN BOOLEAN := TRUE,
      dt_begin_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      DT_BEGIN_TSTZ_nin IN BOOLEAN := TRUE,
      dt_end_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
      DT_END_TSTZ_nin IN BOOLEAN := TRUE,
      dt_next_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_NEXT_TSTZ%TYPE DEFAULT NULL,
      DT_NEXT_TSTZ_nin IN BOOLEAN := TRUE,
      dt_close_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CLOSE_TSTZ%TYPE DEFAULT NULL,
      DT_CLOSE_TSTZ_nin IN BOOLEAN := TRUE,
      flg_interval_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_INTERVAL_UNIT%TYPE DEFAULT NULL,
      FLG_INTERVAL_UNIT_nin IN BOOLEAN := TRUE,
      id_episode_origin_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      ID_EPISODE_ORIGIN_nin IN BOOLEAN := TRUE,
      id_episode_destination_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      ID_EPISODE_DESTINATION_nin IN BOOLEAN := TRUE,
      duration_in IN ICNP_EPIS_INTERVENTION_HIST.DURATION%TYPE DEFAULT NULL,
      DURATION_nin IN BOOLEAN := TRUE,
      flg_duration_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_DURATION_UNIT%TYPE DEFAULT NULL,
      FLG_DURATION_UNIT_nin IN BOOLEAN := TRUE,
      create_user_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      id_prof_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_LAST_UPDATE%TYPE DEFAULT NULL,
      ID_PROF_LAST_UPDATE_nin IN BOOLEAN := TRUE,
      dt_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.DT_LAST_UPDATE%TYPE DEFAULT NULL,
      DT_LAST_UPDATE_nin IN BOOLEAN := TRUE,
      id_suspend_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_REASON%TYPE DEFAULT NULL,
      ID_SUSPEND_REASON_nin IN BOOLEAN := TRUE,
      id_suspend_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_PROF%TYPE DEFAULT NULL,
      ID_SUSPEND_PROF_nin IN BOOLEAN := TRUE,
      suspend_notes_in IN ICNP_EPIS_INTERVENTION_HIST.SUSPEND_NOTES%TYPE DEFAULT NULL,
      SUSPEND_NOTES_nin IN BOOLEAN := TRUE,
      dt_suspend_in IN ICNP_EPIS_INTERVENTION_HIST.DT_SUSPEND%TYPE DEFAULT NULL,
      DT_SUSPEND_nin IN BOOLEAN := TRUE,
      id_cancel_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      ID_CANCEL_REASON_nin IN BOOLEAN := TRUE,
      id_cancel_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_PROF%TYPE DEFAULT NULL,
      ID_CANCEL_PROF_nin IN BOOLEAN := TRUE,
      cancel_notes_in IN ICNP_EPIS_INTERVENTION_HIST.CANCEL_NOTES%TYPE DEFAULT NULL,
      CANCEL_NOTES_nin IN BOOLEAN := TRUE,
      dt_cancel_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CANCEL%TYPE DEFAULT NULL,
      DT_CANCEL_nin IN BOOLEAN := TRUE,
      id_prof_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CREATED_HIST%TYPE DEFAULT NULL,
      ID_PROF_CREATED_HIST_nin IN BOOLEAN := TRUE,
      dt_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CREATED_HIST%TYPE DEFAULT NULL,
      DT_CREATED_HIST_nin IN BOOLEAN := TRUE,
      id_order_recurr_plan_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ORDER_RECURR_PLAN%TYPE DEFAULT NULL,
      ID_ORDER_RECURR_PLAN_nin IN BOOLEAN := TRUE,
      flg_prn_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_PRN%TYPE DEFAULT NULL,
      FLG_PRN_nin IN BOOLEAN := TRUE,
      prn_notes_in IN ICNP_EPIS_INTERVENTION_HIST.PRN_NOTES%TYPE DEFAULT NULL,
      PRN_NOTES_nin IN BOOLEAN := TRUE,
      id_icnp_epis_interv_parent_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_PARENT%TYPE DEFAULT NULL,
      ID_ICNP_EPIS_INTERV_PARENT_nin IN BOOLEAN := TRUE,
    where_in varchar2,
     handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
      upd (
      id_icnp_epis_interv_in => id_icnp_epis_interv_in,
      ID_ICNP_EPIS_INTERV_nin => ID_ICNP_EPIS_INTERV_nin,
      id_patient_in => id_patient_in,
      ID_PATIENT_nin => ID_PATIENT_nin,
      id_episode_in => id_episode_in,
      ID_EPISODE_nin => ID_EPISODE_nin,
      id_composition_in => id_composition_in,
      ID_COMPOSITION_nin => ID_COMPOSITION_nin,
      flg_status_in => flg_status_in,
      FLG_STATUS_nin => FLG_STATUS_nin,
      freq_in => freq_in,
      FREQ_nin => FREQ_nin,
      notes_in => notes_in,
      NOTES_nin => NOTES_nin,
      id_prof_in => id_prof_in,
      ID_PROF_nin => ID_PROF_nin,
      notes_close_in => notes_close_in,
      NOTES_CLOSE_nin => NOTES_CLOSE_nin,
      id_prof_close_in => id_prof_close_in,
      ID_PROF_CLOSE_nin => ID_PROF_CLOSE_nin,
      forward_interv_in => forward_interv_in,
      FORWARD_INTERV_nin => FORWARD_INTERV_nin,
      notes_iteraction_in => notes_iteraction_in,
      NOTES_ITERACTION_nin => NOTES_ITERACTION_nin,
      notes_close_iteraction_in => notes_close_iteraction_in,
      NOTES_CLOSE_ITERACTION_nin => NOTES_CLOSE_ITERACTION_nin,
      flg_time_in => flg_time_in,
      FLG_TIME_nin => FLG_TIME_nin,
      flg_type_in => flg_type_in,
      FLG_TYPE_nin => FLG_TYPE_nin,
      interval_in => interval_in,
      INTERVAL_nin => INTERVAL_nin,
      num_take_in => num_take_in,
      NUM_TAKE_nin => NUM_TAKE_nin,
      dt_icnp_epis_interv_tstz_in => dt_icnp_epis_interv_tstz_in,
      DT_ICNP_EPIS_INTERV_TSTZ_nin => DT_ICNP_EPIS_INTERV_TSTZ_nin,
      dt_begin_tstz_in => dt_begin_tstz_in,
      DT_BEGIN_TSTZ_nin => DT_BEGIN_TSTZ_nin,
      dt_end_tstz_in => dt_end_tstz_in,
      DT_END_TSTZ_nin => DT_END_TSTZ_nin,
      dt_next_tstz_in => dt_next_tstz_in,
      DT_NEXT_TSTZ_nin => DT_NEXT_TSTZ_nin,
      dt_close_tstz_in => dt_close_tstz_in,
      DT_CLOSE_TSTZ_nin => DT_CLOSE_TSTZ_nin,
      flg_interval_unit_in => flg_interval_unit_in,
      FLG_INTERVAL_UNIT_nin => FLG_INTERVAL_UNIT_nin,
      id_episode_origin_in => id_episode_origin_in,
      ID_EPISODE_ORIGIN_nin => ID_EPISODE_ORIGIN_nin,
      id_episode_destination_in => id_episode_destination_in,
      ID_EPISODE_DESTINATION_nin => ID_EPISODE_DESTINATION_nin,
      duration_in => duration_in,
      DURATION_nin => DURATION_nin,
      flg_duration_unit_in => flg_duration_unit_in,
      FLG_DURATION_UNIT_nin => FLG_DURATION_UNIT_nin,
      create_user_in => create_user_in,
      CREATE_USER_nin => CREATE_USER_nin,
      create_time_in => create_time_in,
      CREATE_TIME_nin => CREATE_TIME_nin,
      create_institution_in => create_institution_in,
      CREATE_INSTITUTION_nin => CREATE_INSTITUTION_nin,
      update_user_in => update_user_in,
      UPDATE_USER_nin => UPDATE_USER_nin,
      update_time_in => update_time_in,
      UPDATE_TIME_nin => UPDATE_TIME_nin,
      update_institution_in => update_institution_in,
      UPDATE_INSTITUTION_nin => UPDATE_INSTITUTION_nin,
      id_prof_last_update_in => id_prof_last_update_in,
      ID_PROF_LAST_UPDATE_nin => ID_PROF_LAST_UPDATE_nin,
      dt_last_update_in => dt_last_update_in,
      DT_LAST_UPDATE_nin => DT_LAST_UPDATE_nin,
      id_suspend_reason_in => id_suspend_reason_in,
      ID_SUSPEND_REASON_nin => ID_SUSPEND_REASON_nin,
      id_suspend_prof_in => id_suspend_prof_in,
      ID_SUSPEND_PROF_nin => ID_SUSPEND_PROF_nin,
      suspend_notes_in => suspend_notes_in,
      SUSPEND_NOTES_nin => SUSPEND_NOTES_nin,
      dt_suspend_in => dt_suspend_in,
      DT_SUSPEND_nin => DT_SUSPEND_nin,
      id_cancel_reason_in => id_cancel_reason_in,
      ID_CANCEL_REASON_nin => ID_CANCEL_REASON_nin,
      id_cancel_prof_in => id_cancel_prof_in,
      ID_CANCEL_PROF_nin => ID_CANCEL_PROF_nin,
      cancel_notes_in => cancel_notes_in,
      CANCEL_NOTES_nin => CANCEL_NOTES_nin,
      dt_cancel_in => dt_cancel_in,
      DT_CANCEL_nin => DT_CANCEL_nin,
      id_prof_created_hist_in => id_prof_created_hist_in,
      ID_PROF_CREATED_HIST_nin => ID_PROF_CREATED_HIST_nin,
      dt_created_hist_in => dt_created_hist_in,
      DT_CREATED_HIST_nin => DT_CREATED_HIST_nin,
      id_order_recurr_plan_in => id_order_recurr_plan_in,
      ID_ORDER_RECURR_PLAN_nin => ID_ORDER_RECURR_PLAN_nin,
      flg_prn_in => flg_prn_in,
      FLG_PRN_nin => FLG_PRN_nin,
      prn_notes_in => prn_notes_in,
      PRN_NOTES_nin => PRN_NOTES_nin,
      id_icnp_epis_interv_parent_in => id_icnp_epis_interv_parent_in,
      ID_ICNP_EPIS_INTERV_PARENT_nin => ID_ICNP_EPIS_INTERV_PARENT_nin,
    where_in => where_in,
     handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END upd;

   PROCEDURE upd (
      rec_in IN ICNP_EPIS_INTERVENTION_HIST%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      upd (
         id_icnp_epis_interv_hist_in => rec_in.ID_ICNP_EPIS_INTERV_HIST,
         id_icnp_epis_interv_in => rec_in.ID_ICNP_EPIS_INTERV,
         id_patient_in => rec_in.ID_PATIENT,
         id_episode_in => rec_in.ID_EPISODE,
         id_composition_in => rec_in.ID_COMPOSITION,
         flg_status_in => rec_in.FLG_STATUS,
         freq_in => rec_in.FREQ,
         notes_in => rec_in.NOTES,
         id_prof_in => rec_in.ID_PROF,
         notes_close_in => rec_in.NOTES_CLOSE,
         id_prof_close_in => rec_in.ID_PROF_CLOSE,
         forward_interv_in => rec_in.FORWARD_INTERV,
         notes_iteraction_in => rec_in.NOTES_ITERACTION,
         notes_close_iteraction_in => rec_in.NOTES_CLOSE_ITERACTION,
         flg_time_in => rec_in.FLG_TIME,
         flg_type_in => rec_in.FLG_TYPE,
         interval_in => rec_in.INTERVAL,
         num_take_in => rec_in.NUM_TAKE,
         dt_icnp_epis_interv_tstz_in => rec_in.DT_ICNP_EPIS_INTERV_TSTZ,
         dt_begin_tstz_in => rec_in.DT_BEGIN_TSTZ,
         dt_end_tstz_in => rec_in.DT_END_TSTZ,
         dt_next_tstz_in => rec_in.DT_NEXT_TSTZ,
         dt_close_tstz_in => rec_in.DT_CLOSE_TSTZ,
         flg_interval_unit_in => rec_in.FLG_INTERVAL_UNIT,
         id_episode_origin_in => rec_in.ID_EPISODE_ORIGIN,
         id_episode_destination_in => rec_in.ID_EPISODE_DESTINATION,
         duration_in => rec_in.DURATION,
         flg_duration_unit_in => rec_in.FLG_DURATION_UNIT,
         create_user_in => rec_in.CREATE_USER,
         create_time_in => rec_in.CREATE_TIME,
         create_institution_in => rec_in.CREATE_INSTITUTION,
         update_user_in => rec_in.UPDATE_USER,
         update_time_in => rec_in.UPDATE_TIME,
         update_institution_in => rec_in.UPDATE_INSTITUTION,
         id_prof_last_update_in => rec_in.ID_PROF_LAST_UPDATE,
         dt_last_update_in => rec_in.DT_LAST_UPDATE,
         id_suspend_reason_in => rec_in.ID_SUSPEND_REASON,
         id_suspend_prof_in => rec_in.ID_SUSPEND_PROF,
         suspend_notes_in => rec_in.SUSPEND_NOTES,
         dt_suspend_in => rec_in.DT_SUSPEND,
         id_cancel_reason_in => rec_in.ID_CANCEL_REASON,
         id_cancel_prof_in => rec_in.ID_CANCEL_PROF,
         cancel_notes_in => rec_in.CANCEL_NOTES,
         dt_cancel_in => rec_in.DT_CANCEL,
         id_prof_created_hist_in => rec_in.ID_PROF_CREATED_HIST,
         dt_created_hist_in => rec_in.DT_CREATED_HIST,
         id_order_recurr_plan_in => rec_in.ID_ORDER_RECURR_PLAN,
         flg_prn_in => rec_in.FLG_PRN,
         prn_notes_in => rec_in.PRN_NOTES,
         id_icnp_epis_interv_parent_in => rec_in.ID_ICNP_EPIS_INTERV_PARENT

        ,handle_error_in => handle_error_in
        , rows_out => rows_out
       );
   END upd;

   PROCEDURE upd (
      rec_in IN ICNP_EPIS_INTERVENTION_HIST%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
      )
   IS
        rows_out TABLE_VARCHAR;
   BEGIN
      upd (
         id_icnp_epis_interv_hist_in => rec_in.ID_ICNP_EPIS_INTERV_HIST,
         id_icnp_epis_interv_in => rec_in.ID_ICNP_EPIS_INTERV,
         id_patient_in => rec_in.ID_PATIENT,
         id_episode_in => rec_in.ID_EPISODE,
         id_composition_in => rec_in.ID_COMPOSITION,
         flg_status_in => rec_in.FLG_STATUS,
         freq_in => rec_in.FREQ,
         notes_in => rec_in.NOTES,
         id_prof_in => rec_in.ID_PROF,
         notes_close_in => rec_in.NOTES_CLOSE,
         id_prof_close_in => rec_in.ID_PROF_CLOSE,
         forward_interv_in => rec_in.FORWARD_INTERV,
         notes_iteraction_in => rec_in.NOTES_ITERACTION,
         notes_close_iteraction_in => rec_in.NOTES_CLOSE_ITERACTION,
         flg_time_in => rec_in.FLG_TIME,
         flg_type_in => rec_in.FLG_TYPE,
         interval_in => rec_in.INTERVAL,
         num_take_in => rec_in.NUM_TAKE,
         dt_icnp_epis_interv_tstz_in => rec_in.DT_ICNP_EPIS_INTERV_TSTZ,
         dt_begin_tstz_in => rec_in.DT_BEGIN_TSTZ,
         dt_end_tstz_in => rec_in.DT_END_TSTZ,
         dt_next_tstz_in => rec_in.DT_NEXT_TSTZ,
         dt_close_tstz_in => rec_in.DT_CLOSE_TSTZ,
         flg_interval_unit_in => rec_in.FLG_INTERVAL_UNIT,
         id_episode_origin_in => rec_in.ID_EPISODE_ORIGIN,
         id_episode_destination_in => rec_in.ID_EPISODE_DESTINATION,
         duration_in => rec_in.DURATION,
         flg_duration_unit_in => rec_in.FLG_DURATION_UNIT,
         create_user_in => rec_in.CREATE_USER,
         create_time_in => rec_in.CREATE_TIME,
         create_institution_in => rec_in.CREATE_INSTITUTION,
         update_user_in => rec_in.UPDATE_USER,
         update_time_in => rec_in.UPDATE_TIME,
         update_institution_in => rec_in.UPDATE_INSTITUTION,
         id_prof_last_update_in => rec_in.ID_PROF_LAST_UPDATE,
         dt_last_update_in => rec_in.DT_LAST_UPDATE,
         id_suspend_reason_in => rec_in.ID_SUSPEND_REASON,
         id_suspend_prof_in => rec_in.ID_SUSPEND_PROF,
         suspend_notes_in => rec_in.SUSPEND_NOTES,
         dt_suspend_in => rec_in.DT_SUSPEND,
         id_cancel_reason_in => rec_in.ID_CANCEL_REASON,
         id_cancel_prof_in => rec_in.ID_CANCEL_PROF,
         cancel_notes_in => rec_in.CANCEL_NOTES,
         dt_cancel_in => rec_in.DT_CANCEL,
         id_prof_created_hist_in => rec_in.ID_PROF_CREATED_HIST,
         dt_created_hist_in => rec_in.DT_CREATED_HIST,
         id_order_recurr_plan_in => rec_in.ID_ORDER_RECURR_PLAN,
         flg_prn_in => rec_in.FLG_PRN,
         prn_notes_in => rec_in.PRN_NOTES,
         id_icnp_epis_interv_parent_in => rec_in.ID_ICNP_EPIS_INTERV_PARENT

        ,handle_error_in => handle_error_in
        , rows_out => rows_out
       );
   END upd;

   PROCEDURE upd_ins (
      id_icnp_epis_interv_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE,
      id_icnp_epis_interv_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV%TYPE DEFAULT NULL,
      id_patient_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      id_episode_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE%TYPE DEFAULT NULL,
      id_composition_in IN ICNP_EPIS_INTERVENTION_HIST.ID_COMPOSITION%TYPE DEFAULT NULL,
      flg_status_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_STATUS%TYPE DEFAULT NULL,
      freq_in IN ICNP_EPIS_INTERVENTION_HIST.FREQ%TYPE DEFAULT NULL,
      notes_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES%TYPE DEFAULT NULL,
      id_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF%TYPE DEFAULT NULL,
      notes_close_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE%TYPE DEFAULT NULL,
      id_prof_close_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CLOSE%TYPE DEFAULT NULL,
      forward_interv_in IN ICNP_EPIS_INTERVENTION_HIST.FORWARD_INTERV%TYPE DEFAULT NULL,
      notes_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_ITERACTION%TYPE DEFAULT NULL,
      notes_close_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE_ITERACTION%TYPE DEFAULT NULL,
      flg_time_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TIME%TYPE DEFAULT NULL,
      flg_type_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TYPE%TYPE DEFAULT NULL,
      interval_in IN ICNP_EPIS_INTERVENTION_HIST.INTERVAL%TYPE DEFAULT NULL,
      num_take_in IN ICNP_EPIS_INTERVENTION_HIST.NUM_TAKE%TYPE DEFAULT NULL,
      dt_icnp_epis_interv_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_ICNP_EPIS_INTERV_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_next_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_NEXT_TSTZ%TYPE DEFAULT NULL,
      dt_close_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CLOSE_TSTZ%TYPE DEFAULT NULL,
      flg_interval_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_INTERVAL_UNIT%TYPE DEFAULT NULL,
      id_episode_origin_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      duration_in IN ICNP_EPIS_INTERVENTION_HIST.DURATION%TYPE DEFAULT NULL,
      flg_duration_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_DURATION_UNIT%TYPE DEFAULT NULL,
      create_user_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_prof_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_LAST_UPDATE%TYPE DEFAULT NULL,
      dt_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.DT_LAST_UPDATE%TYPE DEFAULT NULL,
      id_suspend_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_REASON%TYPE DEFAULT NULL,
      id_suspend_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_PROF%TYPE DEFAULT NULL,
      suspend_notes_in IN ICNP_EPIS_INTERVENTION_HIST.SUSPEND_NOTES%TYPE DEFAULT NULL,
      dt_suspend_in IN ICNP_EPIS_INTERVENTION_HIST.DT_SUSPEND%TYPE DEFAULT NULL,
      id_cancel_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      id_cancel_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_PROF%TYPE DEFAULT NULL,
      cancel_notes_in IN ICNP_EPIS_INTERVENTION_HIST.CANCEL_NOTES%TYPE DEFAULT NULL,
      dt_cancel_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CANCEL%TYPE DEFAULT NULL,
      id_prof_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CREATED_HIST%TYPE DEFAULT NULL,
      dt_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CREATED_HIST%TYPE DEFAULT NULL,
      id_order_recurr_plan_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ORDER_RECURR_PLAN%TYPE DEFAULT NULL,
      flg_prn_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_PRN%TYPE DEFAULT NULL,
      prn_notes_in IN ICNP_EPIS_INTERVENTION_HIST.PRN_NOTES%TYPE DEFAULT NULL,
      id_icnp_epis_interv_parent_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_PARENT%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      upd (
         id_icnp_epis_interv_hist_in => id_icnp_epis_interv_hist_in,
         id_icnp_epis_interv_in => id_icnp_epis_interv_in,
         id_patient_in => id_patient_in,
         id_episode_in => id_episode_in,
         id_composition_in => id_composition_in,
         flg_status_in => flg_status_in,
         freq_in => freq_in,
         notes_in => notes_in,
         id_prof_in => id_prof_in,
         notes_close_in => notes_close_in,
         id_prof_close_in => id_prof_close_in,
         forward_interv_in => forward_interv_in,
         notes_iteraction_in => notes_iteraction_in,
         notes_close_iteraction_in => notes_close_iteraction_in,
         flg_time_in => flg_time_in,
         flg_type_in => flg_type_in,
         interval_in => interval_in,
         num_take_in => num_take_in,
         dt_icnp_epis_interv_tstz_in => dt_icnp_epis_interv_tstz_in,
         dt_begin_tstz_in => dt_begin_tstz_in,
         dt_end_tstz_in => dt_end_tstz_in,
         dt_next_tstz_in => dt_next_tstz_in,
         dt_close_tstz_in => dt_close_tstz_in,
         flg_interval_unit_in => flg_interval_unit_in,
         id_episode_origin_in => id_episode_origin_in,
         id_episode_destination_in => id_episode_destination_in,
         duration_in => duration_in,
         flg_duration_unit_in => flg_duration_unit_in,
         create_user_in => create_user_in,
         create_time_in => create_time_in,
         create_institution_in => create_institution_in,
         update_user_in => update_user_in,
         update_time_in => update_time_in,
         update_institution_in => update_institution_in,
         id_prof_last_update_in => id_prof_last_update_in,
         dt_last_update_in => dt_last_update_in,
         id_suspend_reason_in => id_suspend_reason_in,
         id_suspend_prof_in => id_suspend_prof_in,
         suspend_notes_in => suspend_notes_in,
         dt_suspend_in => dt_suspend_in,
         id_cancel_reason_in => id_cancel_reason_in,
         id_cancel_prof_in => id_cancel_prof_in,
         cancel_notes_in => cancel_notes_in,
         dt_cancel_in => dt_cancel_in,
         id_prof_created_hist_in => id_prof_created_hist_in,
         dt_created_hist_in => dt_created_hist_in,
         id_order_recurr_plan_in => id_order_recurr_plan_in,
         flg_prn_in => flg_prn_in,
         prn_notes_in => prn_notes_in,
         id_icnp_epis_interv_parent_in => id_icnp_epis_interv_parent_in
         ,handle_error_in => handle_error_in
         , rows_out => rows_out
       );
      IF SQL%ROWCOUNT = 0
      THEN
         ins (
            id_icnp_epis_interv_hist_in => id_icnp_epis_interv_hist_in,
            id_icnp_epis_interv_in => id_icnp_epis_interv_in,
            id_patient_in => id_patient_in,
            id_episode_in => id_episode_in,
            id_composition_in => id_composition_in,
            flg_status_in => flg_status_in,
            freq_in => freq_in,
            notes_in => notes_in,
            id_prof_in => id_prof_in,
            notes_close_in => notes_close_in,
            id_prof_close_in => id_prof_close_in,
            forward_interv_in => forward_interv_in,
            notes_iteraction_in => notes_iteraction_in,
            notes_close_iteraction_in => notes_close_iteraction_in,
            flg_time_in => flg_time_in,
            flg_type_in => flg_type_in,
            interval_in => interval_in,
            num_take_in => num_take_in,
            dt_icnp_epis_interv_tstz_in => dt_icnp_epis_interv_tstz_in,
            dt_begin_tstz_in => dt_begin_tstz_in,
            dt_end_tstz_in => dt_end_tstz_in,
            dt_next_tstz_in => dt_next_tstz_in,
            dt_close_tstz_in => dt_close_tstz_in,
            flg_interval_unit_in => flg_interval_unit_in,
            id_episode_origin_in => id_episode_origin_in,
            id_episode_destination_in => id_episode_destination_in,
            duration_in => duration_in,
            flg_duration_unit_in => flg_duration_unit_in,
            create_user_in => create_user_in,
            create_time_in => create_time_in,
            create_institution_in => create_institution_in,
            update_user_in => update_user_in,
            update_time_in => update_time_in,
            update_institution_in => update_institution_in,
            id_prof_last_update_in => id_prof_last_update_in,
            dt_last_update_in => dt_last_update_in,
            id_suspend_reason_in => id_suspend_reason_in,
            id_suspend_prof_in => id_suspend_prof_in,
            suspend_notes_in => suspend_notes_in,
            dt_suspend_in => dt_suspend_in,
            id_cancel_reason_in => id_cancel_reason_in,
            id_cancel_prof_in => id_cancel_prof_in,
            cancel_notes_in => cancel_notes_in,
            dt_cancel_in => dt_cancel_in,
            id_prof_created_hist_in => id_prof_created_hist_in,
            dt_created_hist_in => dt_created_hist_in,
            id_order_recurr_plan_in => id_order_recurr_plan_in,
            flg_prn_in => flg_prn_in,
            prn_notes_in => prn_notes_in,
            id_icnp_epis_interv_parent_in => id_icnp_epis_interv_parent_in
            ,handle_error_in => handle_error_in
            , rows_out => rows_out
         );
      END IF;
   END upd_ins;

   PROCEDURE upd_ins (
      id_icnp_epis_interv_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE,
      id_icnp_epis_interv_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV%TYPE DEFAULT NULL,
      id_patient_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PATIENT%TYPE DEFAULT NULL,
      id_episode_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE%TYPE DEFAULT NULL,
      id_composition_in IN ICNP_EPIS_INTERVENTION_HIST.ID_COMPOSITION%TYPE DEFAULT NULL,
      flg_status_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_STATUS%TYPE DEFAULT NULL,
      freq_in IN ICNP_EPIS_INTERVENTION_HIST.FREQ%TYPE DEFAULT NULL,
      notes_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES%TYPE DEFAULT NULL,
      id_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF%TYPE DEFAULT NULL,
      notes_close_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE%TYPE DEFAULT NULL,
      id_prof_close_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CLOSE%TYPE DEFAULT NULL,
      forward_interv_in IN ICNP_EPIS_INTERVENTION_HIST.FORWARD_INTERV%TYPE DEFAULT NULL,
      notes_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_ITERACTION%TYPE DEFAULT NULL,
      notes_close_iteraction_in IN ICNP_EPIS_INTERVENTION_HIST.NOTES_CLOSE_ITERACTION%TYPE DEFAULT NULL,
      flg_time_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TIME%TYPE DEFAULT NULL,
      flg_type_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_TYPE%TYPE DEFAULT NULL,
      interval_in IN ICNP_EPIS_INTERVENTION_HIST.INTERVAL%TYPE DEFAULT NULL,
      num_take_in IN ICNP_EPIS_INTERVENTION_HIST.NUM_TAKE%TYPE DEFAULT NULL,
      dt_icnp_epis_interv_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_ICNP_EPIS_INTERV_TSTZ%TYPE DEFAULT NULL,
      dt_begin_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_BEGIN_TSTZ%TYPE DEFAULT NULL,
      dt_end_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_END_TSTZ%TYPE DEFAULT NULL,
      dt_next_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_NEXT_TSTZ%TYPE DEFAULT NULL,
      dt_close_tstz_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CLOSE_TSTZ%TYPE DEFAULT NULL,
      flg_interval_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_INTERVAL_UNIT%TYPE DEFAULT NULL,
      id_episode_origin_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_ORIGIN%TYPE DEFAULT NULL,
      id_episode_destination_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_DESTINATION%TYPE DEFAULT NULL,
      duration_in IN ICNP_EPIS_INTERVENTION_HIST.DURATION%TYPE DEFAULT NULL,
      flg_duration_unit_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_DURATION_UNIT%TYPE DEFAULT NULL,
      create_user_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN ICNP_EPIS_INTERVENTION_HIST.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN ICNP_EPIS_INTERVENTION_HIST.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      id_prof_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_LAST_UPDATE%TYPE DEFAULT NULL,
      dt_last_update_in IN ICNP_EPIS_INTERVENTION_HIST.DT_LAST_UPDATE%TYPE DEFAULT NULL,
      id_suspend_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_REASON%TYPE DEFAULT NULL,
      id_suspend_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_SUSPEND_PROF%TYPE DEFAULT NULL,
      suspend_notes_in IN ICNP_EPIS_INTERVENTION_HIST.SUSPEND_NOTES%TYPE DEFAULT NULL,
      dt_suspend_in IN ICNP_EPIS_INTERVENTION_HIST.DT_SUSPEND%TYPE DEFAULT NULL,
      id_cancel_reason_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_REASON%TYPE DEFAULT NULL,
      id_cancel_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_CANCEL_PROF%TYPE DEFAULT NULL,
      cancel_notes_in IN ICNP_EPIS_INTERVENTION_HIST.CANCEL_NOTES%TYPE DEFAULT NULL,
      dt_cancel_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CANCEL%TYPE DEFAULT NULL,
      id_prof_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CREATED_HIST%TYPE DEFAULT NULL,
      dt_created_hist_in IN ICNP_EPIS_INTERVENTION_HIST.DT_CREATED_HIST%TYPE DEFAULT NULL,
      id_order_recurr_plan_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ORDER_RECURR_PLAN%TYPE DEFAULT NULL,
      flg_prn_in IN ICNP_EPIS_INTERVENTION_HIST.FLG_PRN%TYPE DEFAULT NULL,
      prn_notes_in IN ICNP_EPIS_INTERVENTION_HIST.PRN_NOTES%TYPE DEFAULT NULL,
      id_icnp_epis_interv_parent_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_PARENT%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
      )
   IS
        rows_out TABLE_VARCHAR;
   BEGIN
      upd_ins (
      id_icnp_epis_interv_hist_in,
      id_icnp_epis_interv_in,
      id_patient_in,
      id_episode_in,
      id_composition_in,
      flg_status_in,
      freq_in,
      notes_in,
      id_prof_in,
      notes_close_in,
      id_prof_close_in,
      forward_interv_in,
      notes_iteraction_in,
      notes_close_iteraction_in,
      flg_time_in,
      flg_type_in,
      interval_in,
      num_take_in,
      dt_icnp_epis_interv_tstz_in,
      dt_begin_tstz_in,
      dt_end_tstz_in,
      dt_next_tstz_in,
      dt_close_tstz_in,
      flg_interval_unit_in,
      id_episode_origin_in,
      id_episode_destination_in,
      duration_in,
      flg_duration_unit_in,
      create_user_in,
      create_time_in,
      create_institution_in,
      update_user_in,
      update_time_in,
      update_institution_in,
      id_prof_last_update_in,
      dt_last_update_in,
      id_suspend_reason_in,
      id_suspend_prof_in,
      suspend_notes_in,
      dt_suspend_in,
      id_cancel_reason_in,
      id_cancel_prof_in,
      cancel_notes_in,
      dt_cancel_in,
      id_prof_created_hist_in,
      dt_created_hist_in,
      id_order_recurr_plan_in,
      flg_prn_in,
      prn_notes_in,
      id_icnp_epis_interv_parent_in,
     handle_error_in
     ,rows_out
      );
   END upd_ins;


   PROCEDURE upd (
      col_in IN ICNP_EPIS_INTERVENTION_HIST_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      )
   IS
      l_ID_ICNP_EPIS_INTERV_HIST ID_ICNP_EPIS_INTERV_HIST_cc;
      l_ID_ICNP_EPIS_INTERV ID_ICNP_EPIS_INTERV_cc;
      l_ID_PATIENT ID_PATIENT_cc;
      l_ID_EPISODE ID_EPISODE_cc;
      l_ID_COMPOSITION ID_COMPOSITION_cc;
      l_FLG_STATUS FLG_STATUS_cc;
      l_FREQ FREQ_cc;
      l_NOTES NOTES_cc;
      l_ID_PROF ID_PROF_cc;
      l_NOTES_CLOSE NOTES_CLOSE_cc;
      l_ID_PROF_CLOSE ID_PROF_CLOSE_cc;
      l_FORWARD_INTERV FORWARD_INTERV_cc;
      l_NOTES_ITERACTION NOTES_ITERACTION_cc;
      l_NOTES_CLOSE_ITERACTION NOTES_CLOSE_ITERACTION_cc;
      l_FLG_TIME FLG_TIME_cc;
      l_FLG_TYPE FLG_TYPE_cc;
      l_INTERVAL INTERVAL_cc;
      l_NUM_TAKE NUM_TAKE_cc;
      l_DT_ICNP_EPIS_INTERV_TSTZ DT_ICNP_EPIS_INTERV_TSTZ_cc;
      l_DT_BEGIN_TSTZ DT_BEGIN_TSTZ_cc;
      l_DT_END_TSTZ DT_END_TSTZ_cc;
      l_DT_NEXT_TSTZ DT_NEXT_TSTZ_cc;
      l_DT_CLOSE_TSTZ DT_CLOSE_TSTZ_cc;
      l_FLG_INTERVAL_UNIT FLG_INTERVAL_UNIT_cc;
      l_ID_EPISODE_ORIGIN ID_EPISODE_ORIGIN_cc;
      l_ID_EPISODE_DESTINATION ID_EPISODE_DESTINATION_cc;
      l_DURATION DURATION_cc;
      l_FLG_DURATION_UNIT FLG_DURATION_UNIT_cc;
      l_CREATE_USER CREATE_USER_cc;
      l_CREATE_TIME CREATE_TIME_cc;
      l_CREATE_INSTITUTION CREATE_INSTITUTION_cc;
      l_UPDATE_USER UPDATE_USER_cc;
      l_UPDATE_TIME UPDATE_TIME_cc;
      l_UPDATE_INSTITUTION UPDATE_INSTITUTION_cc;
      l_ID_PROF_LAST_UPDATE ID_PROF_LAST_UPDATE_cc;
      l_DT_LAST_UPDATE DT_LAST_UPDATE_cc;
      l_ID_SUSPEND_REASON ID_SUSPEND_REASON_cc;
      l_ID_SUSPEND_PROF ID_SUSPEND_PROF_cc;
      l_SUSPEND_NOTES SUSPEND_NOTES_cc;
      l_DT_SUSPEND DT_SUSPEND_cc;
      l_ID_CANCEL_REASON ID_CANCEL_REASON_cc;
      l_ID_CANCEL_PROF ID_CANCEL_PROF_cc;
      l_CANCEL_NOTES CANCEL_NOTES_cc;
      l_DT_CANCEL DT_CANCEL_cc;
      l_ID_PROF_CREATED_HIST ID_PROF_CREATED_HIST_cc;
      l_DT_CREATED_HIST DT_CREATED_HIST_cc;
      l_ID_ORDER_RECURR_PLAN ID_ORDER_RECURR_PLAN_cc;
      l_FLG_PRN FLG_PRN_cc;
      l_PRN_NOTES PRN_NOTES_cc;
      l_ID_ICNP_EPIS_INTERV_PARENT ID_ICNP_EPIS_INTERV_PARENT_cc;
   BEGIN
      FOR i IN col_in.FIRST .. col_in.LAST loop
         l_ID_ICNP_EPIS_INTERV_HIST(i) := col_in(i).ID_ICNP_EPIS_INTERV_HIST;
         l_ID_ICNP_EPIS_INTERV(i) := col_in(i).ID_ICNP_EPIS_INTERV;
         l_ID_PATIENT(i) := col_in(i).ID_PATIENT;
         l_ID_EPISODE(i) := col_in(i).ID_EPISODE;
         l_ID_COMPOSITION(i) := col_in(i).ID_COMPOSITION;
         l_FLG_STATUS(i) := col_in(i).FLG_STATUS;
         l_FREQ(i) := col_in(i).FREQ;
         l_NOTES(i) := col_in(i).NOTES;
         l_ID_PROF(i) := col_in(i).ID_PROF;
         l_NOTES_CLOSE(i) := col_in(i).NOTES_CLOSE;
         l_ID_PROF_CLOSE(i) := col_in(i).ID_PROF_CLOSE;
         l_FORWARD_INTERV(i) := col_in(i).FORWARD_INTERV;
         l_NOTES_ITERACTION(i) := col_in(i).NOTES_ITERACTION;
         l_NOTES_CLOSE_ITERACTION(i) := col_in(i).NOTES_CLOSE_ITERACTION;
         l_FLG_TIME(i) := col_in(i).FLG_TIME;
         l_FLG_TYPE(i) := col_in(i).FLG_TYPE;
         l_INTERVAL(i) := col_in(i).INTERVAL;
         l_NUM_TAKE(i) := col_in(i).NUM_TAKE;
         l_DT_ICNP_EPIS_INTERV_TSTZ(i) := col_in(i).DT_ICNP_EPIS_INTERV_TSTZ;
         l_DT_BEGIN_TSTZ(i) := col_in(i).DT_BEGIN_TSTZ;
         l_DT_END_TSTZ(i) := col_in(i).DT_END_TSTZ;
         l_DT_NEXT_TSTZ(i) := col_in(i).DT_NEXT_TSTZ;
         l_DT_CLOSE_TSTZ(i) := col_in(i).DT_CLOSE_TSTZ;
         l_FLG_INTERVAL_UNIT(i) := col_in(i).FLG_INTERVAL_UNIT;
         l_ID_EPISODE_ORIGIN(i) := col_in(i).ID_EPISODE_ORIGIN;
         l_ID_EPISODE_DESTINATION(i) := col_in(i).ID_EPISODE_DESTINATION;
         l_DURATION(i) := col_in(i).DURATION;
         l_FLG_DURATION_UNIT(i) := col_in(i).FLG_DURATION_UNIT;
         l_CREATE_USER(i) := col_in(i).CREATE_USER;
         l_CREATE_TIME(i) := col_in(i).CREATE_TIME;
         l_CREATE_INSTITUTION(i) := col_in(i).CREATE_INSTITUTION;
         l_UPDATE_USER(i) := col_in(i).UPDATE_USER;
         l_UPDATE_TIME(i) := col_in(i).UPDATE_TIME;
         l_UPDATE_INSTITUTION(i) := col_in(i).UPDATE_INSTITUTION;
         l_ID_PROF_LAST_UPDATE(i) := col_in(i).ID_PROF_LAST_UPDATE;
         l_DT_LAST_UPDATE(i) := col_in(i).DT_LAST_UPDATE;
         l_ID_SUSPEND_REASON(i) := col_in(i).ID_SUSPEND_REASON;
         l_ID_SUSPEND_PROF(i) := col_in(i).ID_SUSPEND_PROF;
         l_SUSPEND_NOTES(i) := col_in(i).SUSPEND_NOTES;
         l_DT_SUSPEND(i) := col_in(i).DT_SUSPEND;
         l_ID_CANCEL_REASON(i) := col_in(i).ID_CANCEL_REASON;
         l_ID_CANCEL_PROF(i) := col_in(i).ID_CANCEL_PROF;
         l_CANCEL_NOTES(i) := col_in(i).CANCEL_NOTES;
         l_DT_CANCEL(i) := col_in(i).DT_CANCEL;
         l_ID_PROF_CREATED_HIST(i) := col_in(i).ID_PROF_CREATED_HIST;
         l_DT_CREATED_HIST(i) := col_in(i).DT_CREATED_HIST;
         l_ID_ORDER_RECURR_PLAN(i) := col_in(i).ID_ORDER_RECURR_PLAN;
         l_FLG_PRN(i) := col_in(i).FLG_PRN;
         l_PRN_NOTES(i) := col_in(i).PRN_NOTES;
         l_ID_ICNP_EPIS_INTERV_PARENT(i) := col_in(i).ID_ICNP_EPIS_INTERV_PARENT;
      END LOOP;
      IF NVL (ignore_if_null_in, FALSE)
      THEN
         -- Set any columns to their current values
         -- if incoming value is NULL.
         -- Put WHEN clause on column-level triggers!
         FORALL i IN col_in.FIRST .. col_in.LAST
            UPDATE ICNP_EPIS_INTERVENTION_HIST SET
               ID_ICNP_EPIS_INTERV = NVL (l_ID_ICNP_EPIS_INTERV(i), ID_ICNP_EPIS_INTERV),
               ID_PATIENT = NVL (l_ID_PATIENT(i), ID_PATIENT),
               ID_EPISODE = NVL (l_ID_EPISODE(i), ID_EPISODE),
               ID_COMPOSITION = NVL (l_ID_COMPOSITION(i), ID_COMPOSITION),
               FLG_STATUS = NVL (l_FLG_STATUS(i), FLG_STATUS),
               FREQ = NVL (l_FREQ(i), FREQ),
               NOTES = NVL (l_NOTES(i), NOTES),
               ID_PROF = NVL (l_ID_PROF(i), ID_PROF),
               NOTES_CLOSE = NVL (l_NOTES_CLOSE(i), NOTES_CLOSE),
               ID_PROF_CLOSE = NVL (l_ID_PROF_CLOSE(i), ID_PROF_CLOSE),
               FORWARD_INTERV = NVL (l_FORWARD_INTERV(i), FORWARD_INTERV),
               NOTES_ITERACTION = NVL (l_NOTES_ITERACTION(i), NOTES_ITERACTION),
               NOTES_CLOSE_ITERACTION = NVL (l_NOTES_CLOSE_ITERACTION(i), NOTES_CLOSE_ITERACTION),
               FLG_TIME = NVL (l_FLG_TIME(i), FLG_TIME),
               FLG_TYPE = NVL (l_FLG_TYPE(i), FLG_TYPE),
               INTERVAL = NVL (l_INTERVAL(i), INTERVAL),
               NUM_TAKE = NVL (l_NUM_TAKE(i), NUM_TAKE),
               DT_ICNP_EPIS_INTERV_TSTZ = NVL (l_DT_ICNP_EPIS_INTERV_TSTZ(i), DT_ICNP_EPIS_INTERV_TSTZ),
               DT_BEGIN_TSTZ = NVL (l_DT_BEGIN_TSTZ(i), DT_BEGIN_TSTZ),
               DT_END_TSTZ = NVL (l_DT_END_TSTZ(i), DT_END_TSTZ),
               DT_NEXT_TSTZ = NVL (l_DT_NEXT_TSTZ(i), DT_NEXT_TSTZ),
               DT_CLOSE_TSTZ = NVL (l_DT_CLOSE_TSTZ(i), DT_CLOSE_TSTZ),
               FLG_INTERVAL_UNIT = NVL (l_FLG_INTERVAL_UNIT(i), FLG_INTERVAL_UNIT),
               ID_EPISODE_ORIGIN = NVL (l_ID_EPISODE_ORIGIN(i), ID_EPISODE_ORIGIN),
               ID_EPISODE_DESTINATION = NVL (l_ID_EPISODE_DESTINATION(i), ID_EPISODE_DESTINATION),
               DURATION = NVL (l_DURATION(i), DURATION),
               FLG_DURATION_UNIT = NVL (l_FLG_DURATION_UNIT(i), FLG_DURATION_UNIT),
               CREATE_USER = NVL (l_CREATE_USER(i), CREATE_USER),
               CREATE_TIME = NVL (l_CREATE_TIME(i), CREATE_TIME),
               CREATE_INSTITUTION = NVL (l_CREATE_INSTITUTION(i), CREATE_INSTITUTION),
               UPDATE_USER = NVL (l_UPDATE_USER(i), UPDATE_USER),
               UPDATE_TIME = NVL (l_UPDATE_TIME(i), UPDATE_TIME),
               UPDATE_INSTITUTION = NVL (l_UPDATE_INSTITUTION(i), UPDATE_INSTITUTION),
               ID_PROF_LAST_UPDATE = NVL (l_ID_PROF_LAST_UPDATE(i), ID_PROF_LAST_UPDATE),
               DT_LAST_UPDATE = NVL (l_DT_LAST_UPDATE(i), DT_LAST_UPDATE),
               ID_SUSPEND_REASON = NVL (l_ID_SUSPEND_REASON(i), ID_SUSPEND_REASON),
               ID_SUSPEND_PROF = NVL (l_ID_SUSPEND_PROF(i), ID_SUSPEND_PROF),
               SUSPEND_NOTES = NVL (l_SUSPEND_NOTES(i), SUSPEND_NOTES),
               DT_SUSPEND = NVL (l_DT_SUSPEND(i), DT_SUSPEND),
               ID_CANCEL_REASON = NVL (l_ID_CANCEL_REASON(i), ID_CANCEL_REASON),
               ID_CANCEL_PROF = NVL (l_ID_CANCEL_PROF(i), ID_CANCEL_PROF),
               CANCEL_NOTES = NVL (l_CANCEL_NOTES(i), CANCEL_NOTES),
               DT_CANCEL = NVL (l_DT_CANCEL(i), DT_CANCEL),
               ID_PROF_CREATED_HIST = NVL (l_ID_PROF_CREATED_HIST(i), ID_PROF_CREATED_HIST),
               DT_CREATED_HIST = NVL (l_DT_CREATED_HIST(i), DT_CREATED_HIST),
               ID_ORDER_RECURR_PLAN = NVL (l_ID_ORDER_RECURR_PLAN(i), ID_ORDER_RECURR_PLAN),
               FLG_PRN = NVL (l_FLG_PRN(i), FLG_PRN),
               PRN_NOTES = NVL (l_PRN_NOTES(i), PRN_NOTES),
               ID_ICNP_EPIS_INTERV_PARENT = NVL (l_ID_ICNP_EPIS_INTERV_PARENT(i), ID_ICNP_EPIS_INTERV_PARENT)
             WHERE
                ID_ICNP_EPIS_INTERV_HIST = l_ID_ICNP_EPIS_INTERV_HIST(i)
          returning rowid bulk collect into rows_out;
      ELSE
         FORALL i IN col_in.FIRST .. col_in.LAST
            UPDATE ICNP_EPIS_INTERVENTION_HIST SET
               ID_ICNP_EPIS_INTERV = l_ID_ICNP_EPIS_INTERV(i),
               ID_PATIENT = l_ID_PATIENT(i),
               ID_EPISODE = l_ID_EPISODE(i),
               ID_COMPOSITION = l_ID_COMPOSITION(i),
               FLG_STATUS = l_FLG_STATUS(i),
               FREQ = l_FREQ(i),
               NOTES = l_NOTES(i),
               ID_PROF = l_ID_PROF(i),
               NOTES_CLOSE = l_NOTES_CLOSE(i),
               ID_PROF_CLOSE = l_ID_PROF_CLOSE(i),
               FORWARD_INTERV = l_FORWARD_INTERV(i),
               NOTES_ITERACTION = l_NOTES_ITERACTION(i),
               NOTES_CLOSE_ITERACTION = l_NOTES_CLOSE_ITERACTION(i),
               FLG_TIME = l_FLG_TIME(i),
               FLG_TYPE = l_FLG_TYPE(i),
               INTERVAL = l_INTERVAL(i),
               NUM_TAKE = l_NUM_TAKE(i),
               DT_ICNP_EPIS_INTERV_TSTZ = l_DT_ICNP_EPIS_INTERV_TSTZ(i),
               DT_BEGIN_TSTZ = l_DT_BEGIN_TSTZ(i),
               DT_END_TSTZ = l_DT_END_TSTZ(i),
               DT_NEXT_TSTZ = l_DT_NEXT_TSTZ(i),
               DT_CLOSE_TSTZ = l_DT_CLOSE_TSTZ(i),
               FLG_INTERVAL_UNIT = l_FLG_INTERVAL_UNIT(i),
               ID_EPISODE_ORIGIN = l_ID_EPISODE_ORIGIN(i),
               ID_EPISODE_DESTINATION = l_ID_EPISODE_DESTINATION(i),
               DURATION = l_DURATION(i),
               FLG_DURATION_UNIT = l_FLG_DURATION_UNIT(i),
               CREATE_USER = l_CREATE_USER(i),
               CREATE_TIME = l_CREATE_TIME(i),
               CREATE_INSTITUTION = l_CREATE_INSTITUTION(i),
               UPDATE_USER = l_UPDATE_USER(i),
               UPDATE_TIME = l_UPDATE_TIME(i),
               UPDATE_INSTITUTION = l_UPDATE_INSTITUTION(i),
               ID_PROF_LAST_UPDATE = l_ID_PROF_LAST_UPDATE(i),
               DT_LAST_UPDATE = l_DT_LAST_UPDATE(i),
               ID_SUSPEND_REASON = l_ID_SUSPEND_REASON(i),
               ID_SUSPEND_PROF = l_ID_SUSPEND_PROF(i),
               SUSPEND_NOTES = l_SUSPEND_NOTES(i),
               DT_SUSPEND = l_DT_SUSPEND(i),
               ID_CANCEL_REASON = l_ID_CANCEL_REASON(i),
               ID_CANCEL_PROF = l_ID_CANCEL_PROF(i),
               CANCEL_NOTES = l_CANCEL_NOTES(i),
               DT_CANCEL = l_DT_CANCEL(i),
               ID_PROF_CREATED_HIST = l_ID_PROF_CREATED_HIST(i),
               DT_CREATED_HIST = l_DT_CREATED_HIST(i),
               ID_ORDER_RECURR_PLAN = l_ID_ORDER_RECURR_PLAN(i),
               FLG_PRN = l_FLG_PRN(i),
               PRN_NOTES = l_PRN_NOTES(i),
               ID_ICNP_EPIS_INTERV_PARENT = l_ID_ICNP_EPIS_INTERV_PARENT(i)
             WHERE
                ID_ICNP_EPIS_INTERV_HIST = l_ID_ICNP_EPIS_INTERV_HIST(i)
        returning rowid bulk collect into rows_out  ;
      END IF;
   END upd;


   PROCEDURE upd (
      col_in IN ICNP_EPIS_INTERVENTION_HIST_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
     rows_out TABLE_VARCHAR;
   BEGIN
      upd (
      col_in ,
      ignore_if_null_in
     ,handle_error_in
     , rows_out
      );
   END upd;

   FUNCTION dynupdstr (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL)

   RETURN VARCHAR2
   IS
   BEGIN
      RETURN
         'BEGIN UPDATE ICNP_EPIS_INTERVENTION_HIST
             SET ' || colname_in || ' = :value
           WHERE ' || NVL (where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;' ;
   END dynupdstr;

   FUNCTION dynupdstr_no_rows_out (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL)

   RETURN VARCHAR2
   IS
   BEGIN
      RETURN
         'UPDATE ICNP_EPIS_INTERVENTION_HIST
             SET ' || colname_in || ' = :value
           WHERE ' || NVL (where_in, '1=1');
   END dynupdstr_no_rows_out;























  PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   )
   IS
   BEGIN
      EXECUTE IMMEDIATE 'BEGIN UPDATE ICNP_EPIS_INTERVENTION_HIST set ' || colname_in || '=' || colname_in || ' + ' || nvl(increment_value_in,1) || ' WHERE ' || NVL (where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
      USING OUT rows_out;
   EXCEPTION
      WHEN DUP_VAL_ON_INDEX
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_err_instance_id PLS_INTEGER;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'DUPLICATE-VALUE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
      WHEN e_null_column_value
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           v_errm VARCHAR2(2000) := DBMS_UTILITY.FORMAT_ERROR_STACK;
           dot1loc INTEGER;
           dot2loc INTEGER;
           parenloc INTEGER;
           c_owner ALL_CONSTRAINTS.OWNER%TYPE;
           c_tabname ALL_TABLES.TABLE_NAME%TYPE;
           c_colname ALL_TAB_COLUMNS.COLUMN_NAME%TYPE;
        BEGIN
           dot1loc := INSTR (v_errm, '.', 1, 1);
           dot2loc := INSTR (v_errm, '.', 1, 2);
           parenloc := INSTR (v_errm, '(');
           c_owner :=SUBSTR (v_errm, parenloc+1, dot1loc-parenloc-1);
           c_tabname := SUBSTR (v_errm, dot1loc+1, dot2loc-dot1loc-1);
           c_colname := SUBSTR (v_errm, dot2loc+1, INSTR (v_errm,')')-dot2loc-1);

           pk_alert_exceptions.raise_error (
                error_name_in => 'COLUMN-CANNOT-BE-NULL'
               ,name1_in => 'OWNER'
               ,value1_in => c_owner
               ,name2_in => 'TABLE_NAME'
               ,value2_in => c_tabname
               ,name3_in => 'COLUMN_NAME'
               ,value3_in => c_colname);
        END;
        END IF;
   END increment_onecol;

   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
     , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
   )
   IS
   rows_out table_varchar;
   BEGIN
      EXECUTE IMMEDIATE 'UPDATE ICNP_EPIS_INTERVENTION_HIST set ' || colname_in || '=' || colname_in || ' + ' || nvl(increment_value_in,1) || ' WHERE ' || NVL (where_in, '1=1');
   EXCEPTION
      WHEN DUP_VAL_ON_INDEX
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_err_instance_id PLS_INTEGER;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'DUPLICATE-VALUE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
      WHEN e_null_column_value
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           v_errm VARCHAR2(2000) := DBMS_UTILITY.FORMAT_ERROR_STACK;
           dot1loc INTEGER;
           dot2loc INTEGER;
           parenloc INTEGER;
           c_owner ALL_CONSTRAINTS.OWNER%TYPE;
           c_tabname ALL_TABLES.TABLE_NAME%TYPE;
           c_colname ALL_TAB_COLUMNS.COLUMN_NAME%TYPE;
        BEGIN
           dot1loc := INSTR (v_errm, '.', 1, 1);
           dot2loc := INSTR (v_errm, '.', 1, 2);
           parenloc := INSTR (v_errm, '(');
           c_owner :=SUBSTR (v_errm, parenloc+1, dot1loc-parenloc-1);
           c_tabname := SUBSTR (v_errm, dot1loc+1, dot2loc-dot1loc-1);
           c_colname := SUBSTR (v_errm, dot2loc+1, INSTR (v_errm,')')-dot2loc-1);

           pk_alert_exceptions.raise_error (
                error_name_in => 'COLUMN-CANNOT-BE-NULL'
               ,name1_in => 'OWNER'
               ,value1_in => c_owner
               ,name2_in => 'TABLE_NAME'
               ,value2_in => c_tabname
               ,name3_in => 'COLUMN_NAME'
               ,value3_in => c_colname);
        END;
        END IF;
   END increment_onecol;


   -- Delete functionality


   PROCEDURE del (
      id_icnp_epis_interv_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM ICNP_EPIS_INTERVENTION_HIST
       WHERE
          ID_ICNP_EPIS_INTERV_HIST = id_icnp_epis_interv_hist_in
       RETURNING ROWID BULK COLLECT INTO rows_out
         ;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del;




   PROCEDURE del (
      id_icnp_epis_interv_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
rows_out TABLE_VARCHAR;
   BEGIN

del (
      id_icnp_epis_interv_hist_in => id_icnp_epis_interv_hist_in
     ,handle_error_in => handle_error_in
, rows_out => rows_out
      );

   END del;








   -- Delete all rows for primary key column ID_ICNP_EPIS_INTERV_HIST
   PROCEDURE del_ID_ICNP_EPIS_INTERV_HIST (
      id_icnp_epis_interv_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     )
   IS
   BEGIN
      DELETE FROM ICNP_EPIS_INTERVENTION_HIST
       WHERE ID_ICNP_EPIS_INTERV_HIST = id_icnp_epis_interv_hist_in
      RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_ID_ICNP_EPIS_INTERV_HIST;






   -- Delete all rows for primary key column ID_ICNP_EPIS_INTERV_HIST
   PROCEDURE del_ID_ICNP_EPIS_INTERV_HIST (
      id_icnp_epis_interv_hist_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV_HIST%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_ID_ICNP_EPIS_INTERV_HIST (
      id_icnp_epis_interv_hist_in => id_icnp_epis_interv_hist_in
     ,handle_error_in => handle_error_in
, rows_out => rows_out
     );
   END del_ID_ICNP_EPIS_INTERV_HIST;















   PROCEDURE del_IEIH_EIPI_FK (
      id_icnp_epis_interv_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM ICNP_EPIS_INTERVENTION_HIST
       WHERE
          ID_ICNP_EPIS_INTERV = del_IEIH_EIPI_FK.id_icnp_epis_interv_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_IEIH_EIPI_FK;



PROCEDURE del_IEIH_EIPI_FK (
      id_icnp_epis_interv_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ICNP_EPIS_INTERV%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_IEIH_EIPI_FK (
      id_icnp_epis_interv_in => id_icnp_epis_interv_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_IEIH_EIPI_FK;





   PROCEDURE del_IEIH_EIPI_FW_FK (
      forward_interv_in IN ICNP_EPIS_INTERVENTION_HIST.FORWARD_INTERV%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM ICNP_EPIS_INTERVENTION_HIST
       WHERE
          FORWARD_INTERV = del_IEIH_EIPI_FW_FK.forward_interv_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_IEIH_EIPI_FW_FK;



PROCEDURE del_IEIH_EIPI_FW_FK (
      forward_interv_in IN ICNP_EPIS_INTERVENTION_HIST.FORWARD_INTERV%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_IEIH_EIPI_FW_FK (
      forward_interv_in => forward_interv_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_IEIH_EIPI_FW_FK;





   PROCEDURE del_IEIH_EPIS_DEST_FK (
      id_episode_destination_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_DESTINATION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM ICNP_EPIS_INTERVENTION_HIST
       WHERE
          ID_EPISODE_DESTINATION = del_IEIH_EPIS_DEST_FK.id_episode_destination_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_IEIH_EPIS_DEST_FK;



PROCEDURE del_IEIH_EPIS_DEST_FK (
      id_episode_destination_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_DESTINATION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_IEIH_EPIS_DEST_FK (
      id_episode_destination_in => id_episode_destination_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_IEIH_EPIS_DEST_FK;





   PROCEDURE del_IEIH_EPIS_FK (
      id_episode_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM ICNP_EPIS_INTERVENTION_HIST
       WHERE
          ID_EPISODE = del_IEIH_EPIS_FK.id_episode_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_IEIH_EPIS_FK;



PROCEDURE del_IEIH_EPIS_FK (
      id_episode_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_IEIH_EPIS_FK (
      id_episode_in => id_episode_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_IEIH_EPIS_FK;





   PROCEDURE del_IEIH_EPIS_ORIGIN_FK (
      id_episode_origin_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_ORIGIN%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM ICNP_EPIS_INTERVENTION_HIST
       WHERE
          ID_EPISODE_ORIGIN = del_IEIH_EPIS_ORIGIN_FK.id_episode_origin_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_IEIH_EPIS_ORIGIN_FK;



PROCEDURE del_IEIH_EPIS_ORIGIN_FK (
      id_episode_origin_in IN ICNP_EPIS_INTERVENTION_HIST.ID_EPISODE_ORIGIN%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_IEIH_EPIS_ORIGIN_FK (
      id_episode_origin_in => id_episode_origin_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_IEIH_EPIS_ORIGIN_FK;





   PROCEDURE del_IEIH_ORP_FK (
      id_order_recurr_plan_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ORDER_RECURR_PLAN%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM ICNP_EPIS_INTERVENTION_HIST
       WHERE
          ID_ORDER_RECURR_PLAN = del_IEIH_ORP_FK.id_order_recurr_plan_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_IEIH_ORP_FK;



PROCEDURE del_IEIH_ORP_FK (
      id_order_recurr_plan_in IN ICNP_EPIS_INTERVENTION_HIST.ID_ORDER_RECURR_PLAN%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_IEIH_ORP_FK (
      id_order_recurr_plan_in => id_order_recurr_plan_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_IEIH_ORP_FK;





   PROCEDURE del_IEIH_PAT_FK (
      id_patient_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PATIENT%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM ICNP_EPIS_INTERVENTION_HIST
       WHERE
          ID_PATIENT = del_IEIH_PAT_FK.id_patient_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_IEIH_PAT_FK;



PROCEDURE del_IEIH_PAT_FK (
      id_patient_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PATIENT%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_IEIH_PAT_FK (
      id_patient_in => id_patient_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_IEIH_PAT_FK;





   PROCEDURE del_IEIH_PROF_CANC_FK (
      id_prof_close_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CLOSE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM ICNP_EPIS_INTERVENTION_HIST
       WHERE
          ID_PROF_CLOSE = del_IEIH_PROF_CANC_FK.id_prof_close_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_IEIH_PROF_CANC_FK;



PROCEDURE del_IEIH_PROF_CANC_FK (
      id_prof_close_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF_CLOSE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_IEIH_PROF_CANC_FK (
      id_prof_close_in => id_prof_close_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_IEIH_PROF_CANC_FK;





   PROCEDURE del_IEIH_PROF_FK (
      id_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM ICNP_EPIS_INTERVENTION_HIST
       WHERE
          ID_PROF = del_IEIH_PROF_FK.id_prof_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_IEIH_PROF_FK;



PROCEDURE del_IEIH_PROF_FK (
      id_prof_in IN ICNP_EPIS_INTERVENTION_HIST.ID_PROF%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_IEIH_PROF_FK (
      id_prof_in => id_prof_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_IEIH_PROF_FK;












   -- Deletions using dynamic SQL
   FUNCTION dyndelstr (where_in IN VARCHAR2) RETURN VARCHAR2
   IS
   BEGIN
      IF where_in IS NULL
      THEN
         RETURN 'DELETE FROM ICNP_EPIS_INTERVENTION_HIST';
      ELSE
         RETURN
            'DELETE FROM ICNP_EPIS_INTERVENTION_HIST WHERE ' || where_in;
      END IF;
   END dyndelstr;

   FUNCTION dyncoldelstr (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE)
      RETURN VARCHAR2
   IS
   BEGIN
      RETURN dyndelstr ( colname_in || ' = :value' );
   END;

   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   BEGIN
      EXECUTE IMMEDIATE dyndelstr (where_clause_in);
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_by;





   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      EXECUTE IMMEDIATE 'BEGIN ' || dyndelstr (where_clause_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;' using OUT rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_by;





   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
   )
   IS
   BEGIN
      EXECUTE IMMEDIATE dyncoldelstr (colname_in)
         USING colvalue_in;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_by_col;






   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   )
   IS
   BEGIN
      EXECUTE IMMEDIATE 'BEGIN ' || dyncoldelstr (colname_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
         USING IN colvalue_in, OUT rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_by_col;







   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   BEGIN
      EXECUTE IMMEDIATE dyncoldelstr (colname_in)
         USING colvalue_in;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_by_col;







   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      EXECUTE IMMEDIATE 'BEGIN ' || dyncoldelstr (colname_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
         USING IN colvalue_in, OUT rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_by_col;







   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   BEGIN
      EXECUTE IMMEDIATE dyncoldelstr (colname_in)
         USING colvalue_in;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_by_col;







   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      EXECUTE IMMEDIATE 'BEGIN ' || dyncoldelstr (colname_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
         USING IN colvalue_in, OUT rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_by_col;







   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
   )
   IS
   BEGIN
      EXECUTE IMMEDIATE dyncoldelstr (colname_in)
         USING colvalue_in;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_by_col;






   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   )
   IS
   BEGIN
     EXECUTE IMMEDIATE 'BEGIN ' || dyncoldelstr (colname_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
         USING IN colvalue_in, OUT rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'ICNP_EPIS_INTERVENTION_HIST');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_by_col;







   -- Initialize a record with default values for columns in the table.
   PROCEDURE initrec (
      icnp_epis_interv_hist_inout IN OUT ICNP_EPIS_INTERVENTION_HIST%ROWTYPE
   )
   IS
   BEGIN
      icnp_epis_interv_hist_inout.ID_ICNP_EPIS_INTERV_HIST := NULL;
      icnp_epis_interv_hist_inout.ID_ICNP_EPIS_INTERV := NULL;
      icnp_epis_interv_hist_inout.ID_PATIENT := NULL;
      icnp_epis_interv_hist_inout.ID_EPISODE := NULL;
      icnp_epis_interv_hist_inout.ID_COMPOSITION := NULL;
      icnp_epis_interv_hist_inout.FLG_STATUS := NULL;
      icnp_epis_interv_hist_inout.FREQ := NULL;
      icnp_epis_interv_hist_inout.NOTES := NULL;
      icnp_epis_interv_hist_inout.ID_PROF := NULL;
      icnp_epis_interv_hist_inout.NOTES_CLOSE := NULL;
      icnp_epis_interv_hist_inout.ID_PROF_CLOSE := NULL;
      icnp_epis_interv_hist_inout.FORWARD_INTERV := NULL;
      icnp_epis_interv_hist_inout.NOTES_ITERACTION := NULL;
      icnp_epis_interv_hist_inout.NOTES_CLOSE_ITERACTION := NULL;
      icnp_epis_interv_hist_inout.FLG_TIME := NULL;
      icnp_epis_interv_hist_inout.FLG_TYPE := NULL;
      icnp_epis_interv_hist_inout.INTERVAL := NULL;
      icnp_epis_interv_hist_inout.NUM_TAKE := NULL;
      icnp_epis_interv_hist_inout.DT_ICNP_EPIS_INTERV_TSTZ := NULL;
      icnp_epis_interv_hist_inout.DT_BEGIN_TSTZ := NULL;
      icnp_epis_interv_hist_inout.DT_END_TSTZ := NULL;
      icnp_epis_interv_hist_inout.DT_NEXT_TSTZ := NULL;
      icnp_epis_interv_hist_inout.DT_CLOSE_TSTZ := NULL;
      icnp_epis_interv_hist_inout.FLG_INTERVAL_UNIT := NULL;
      icnp_epis_interv_hist_inout.ID_EPISODE_ORIGIN := NULL;
      icnp_epis_interv_hist_inout.ID_EPISODE_DESTINATION := NULL;
      icnp_epis_interv_hist_inout.DURATION := NULL;
      icnp_epis_interv_hist_inout.FLG_DURATION_UNIT := NULL;
      icnp_epis_interv_hist_inout.CREATE_USER := NULL;
      icnp_epis_interv_hist_inout.CREATE_TIME := NULL;
      icnp_epis_interv_hist_inout.CREATE_INSTITUTION := NULL;
      icnp_epis_interv_hist_inout.UPDATE_USER := NULL;
      icnp_epis_interv_hist_inout.UPDATE_TIME := NULL;
      icnp_epis_interv_hist_inout.UPDATE_INSTITUTION := NULL;
      icnp_epis_interv_hist_inout.ID_PROF_LAST_UPDATE := NULL;
      icnp_epis_interv_hist_inout.DT_LAST_UPDATE := NULL;
      icnp_epis_interv_hist_inout.ID_SUSPEND_REASON := NULL;
      icnp_epis_interv_hist_inout.ID_SUSPEND_PROF := NULL;
      icnp_epis_interv_hist_inout.SUSPEND_NOTES := NULL;
      icnp_epis_interv_hist_inout.DT_SUSPEND := NULL;
      icnp_epis_interv_hist_inout.ID_CANCEL_REASON := NULL;
      icnp_epis_interv_hist_inout.ID_CANCEL_PROF := NULL;
      icnp_epis_interv_hist_inout.CANCEL_NOTES := NULL;
      icnp_epis_interv_hist_inout.DT_CANCEL := NULL;
      icnp_epis_interv_hist_inout.ID_PROF_CREATED_HIST := NULL;
      icnp_epis_interv_hist_inout.DT_CREATED_HIST := NULL;
      icnp_epis_interv_hist_inout.ID_ORDER_RECURR_PLAN := NULL;
      icnp_epis_interv_hist_inout.FLG_PRN := NULL;
      icnp_epis_interv_hist_inout.PRN_NOTES := NULL;
      icnp_epis_interv_hist_inout.ID_ICNP_EPIS_INTERV_PARENT := NULL;
   END initrec;

   FUNCTION initrec RETURN ICNP_EPIS_INTERVENTION_HIST%ROWTYPE
   IS
      l_icnp_epis_intervention_hist ICNP_EPIS_INTERVENTION_HIST%ROWTYPE;
   BEGIN
      RETURN l_icnp_epis_intervention_hist;
   END initrec;


   FUNCTION get_data_rowid(
        rows_in IN TABLE_VARCHAR
        ) RETURN ICNP_EPIS_INTERVENTION_HIST_tc
   IS
        data ICNP_EPIS_INTERVENTION_HIST_tc;
   BEGIN
        select * bulk collect into data from ICNP_EPIS_INTERVENTION_HIST where rowid in (select /*+opt_estimate(table,t,scale_rows=0.0000001))*/ * from table(rows_in) t);
        return data;
        EXCEPTION
      WHEN OTHERS THEN
        pk_alert_exceptions.raise_error (
           error_name_in => 'get_data_rowid'
           );
   END get_data_rowid;


   FUNCTION get_data_rowid_pat(
        rows_in IN TABLE_VARCHAR
        ) RETURN ICNP_EPIS_INTERVENTION_HIST_tc
   is
        PRAGMA AUTONOMOUS_TRANSACTION;
        data ICNP_EPIS_INTERVENTION_HIST_tc;
   BEGIN
        data := get_data_rowid(rows_in);
        commit;
        return data;
        EXCEPTION
      WHEN OTHERS THEN
        pk_alert_exceptions.raise_error (
           error_name_in => 'get_data_rowid'
           );
        rollback;
    END get_data_rowid_pat;

BEGIN
   NULL;
END TS_ICNP_EPIS_INTERVENTION_HIST;
/
