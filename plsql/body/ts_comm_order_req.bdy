/*-- Last Change Revision: $Rev: 1995452 $*/
/*-- Last Change by: $Author: pedro.henriques $*/
/*-- Date of last change: $Date: 2021-07-27 10:43:35 +0100 (ter, 27 jul 2021) $*/
CREATE OR REPLACE PACKAGE BODY ts_comm_order_req
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2021-07-27 10:27:33
| Created By: ALERT
*/
 IS

    e_null_column_value EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_null_column_value, -1400);

    e_existing_fky_reference EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_existing_fky_reference, -2266);

    e_check_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_check_constraint_failure, -2290);

    e_no_parent_key EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_no_parent_key, -2291);

    e_child_record_found EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_child_record_found, -2292);

    e_forall_error EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_forall_error, -24381);

    -- Defined for backward compatibilty.
    e_integ_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_integ_constraint_failure, -2291);

    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN comm_order_req.id_comm_order_req%TYPE IS
        retval comm_order_req.id_comm_order_req%TYPE;
    BEGIN
        IF sequence_in IS NULL
        THEN
            retval := seq_comm_order_req.nextval;
        ELSE
            EXECUTE IMMEDIATE 'SELECT ' || sequence_in || '.NEXTVAL FROM dual'
                INTO retval;
        END IF;
        RETURN retval;
    END next_key;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_workflow_in             IN comm_order_req.id_workflow%TYPE DEFAULT NULL,
        id_status_in               IN comm_order_req.id_status%TYPE DEFAULT NULL,
        id_patient_in              IN comm_order_req.id_patient%TYPE DEFAULT NULL,
        id_episode_in              IN comm_order_req.id_episode%TYPE DEFAULT NULL,
        id_concept_type_in         IN comm_order_req.id_concept_type%TYPE DEFAULT NULL,
        id_concept_version_in      IN comm_order_req.id_concept_version%TYPE DEFAULT NULL,
        id_cncpt_vrs_inst_owner_in IN comm_order_req.id_cncpt_vrs_inst_owner%TYPE DEFAULT NULL,
        id_concept_term_in         IN comm_order_req.id_concept_term%TYPE DEFAULT NULL,
        id_cncpt_trm_inst_owner_in IN comm_order_req.id_cncpt_trm_inst_owner%TYPE DEFAULT NULL,
        flg_free_text_in           IN comm_order_req.flg_free_text%TYPE DEFAULT NULL,
        id_prof_req_in             IN comm_order_req.id_prof_req%TYPE DEFAULT NULL,
        id_inst_req_in             IN comm_order_req.id_inst_req%TYPE DEFAULT NULL,
        dt_req_in                  IN comm_order_req.dt_req%TYPE DEFAULT NULL,
        flg_clinical_purpose_in    IN comm_order_req.flg_clinical_purpose%TYPE DEFAULT 'N',
        clinical_purpose_desc_in   IN comm_order_req.clinical_purpose_desc%TYPE DEFAULT NULL,
        flg_priority_in            IN comm_order_req.flg_priority%TYPE DEFAULT NULL,
        flg_prn_in                 IN comm_order_req.flg_prn%TYPE DEFAULT NULL,
        dt_begin_in                IN comm_order_req.dt_begin%TYPE DEFAULT NULL,
        id_professional_in         IN comm_order_req.id_professional%TYPE DEFAULT NULL,
        id_institution_in          IN comm_order_req.id_institution%TYPE DEFAULT NULL,
        dt_status_in               IN comm_order_req.dt_status%TYPE DEFAULT NULL,
        id_cancel_reason_in        IN comm_order_req.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in             IN comm_order_req.create_user%TYPE DEFAULT NULL,
        create_time_in             IN comm_order_req.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN comm_order_req.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN comm_order_req.update_user%TYPE DEFAULT NULL,
        update_time_in             IN comm_order_req.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN comm_order_req.update_institution%TYPE DEFAULT NULL,
        flg_need_ack_in            IN comm_order_req.flg_need_ack%TYPE DEFAULT 'N',
        flg_action_in              IN comm_order_req.flg_action%TYPE DEFAULT NULL,
        id_previous_status_in      IN comm_order_req.id_previous_status%TYPE DEFAULT NULL,
        id_order_recurr_in         IN comm_order_req.id_order_recurr%TYPE DEFAULT NULL,
        task_duration_in           IN comm_order_req.task_duration%TYPE DEFAULT NULL,
        id_task_type_in            IN comm_order_req.id_task_type%TYPE DEFAULT NULL,
        dt_last_update_tstz_in     IN comm_order_req.dt_last_update_tstz%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
        l_pky comm_order_req.id_comm_order_req%TYPE := next_key;
    BEGIN
        ins(id_comm_order_req_in       => l_pky,
            id_workflow_in             => id_workflow_in,
            id_status_in               => id_status_in,
            id_patient_in              => id_patient_in,
            id_episode_in              => id_episode_in,
            id_concept_type_in         => id_concept_type_in,
            id_concept_version_in      => id_concept_version_in,
            id_cncpt_vrs_inst_owner_in => id_cncpt_vrs_inst_owner_in,
            id_concept_term_in         => id_concept_term_in,
            id_cncpt_trm_inst_owner_in => id_cncpt_trm_inst_owner_in,
            flg_free_text_in           => flg_free_text_in,
            id_prof_req_in             => id_prof_req_in,
            id_inst_req_in             => id_inst_req_in,
            dt_req_in                  => dt_req_in,
            flg_clinical_purpose_in    => flg_clinical_purpose_in,
            clinical_purpose_desc_in   => clinical_purpose_desc_in,
            flg_priority_in            => flg_priority_in,
            flg_prn_in                 => flg_prn_in,
            dt_begin_in                => dt_begin_in,
            id_professional_in         => id_professional_in,
            id_institution_in          => id_institution_in,
            dt_status_in               => dt_status_in,
            id_cancel_reason_in        => id_cancel_reason_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            flg_need_ack_in            => flg_need_ack_in,
            flg_action_in              => flg_action_in,
            id_previous_status_in      => id_previous_status_in,
            id_order_recurr_in         => id_order_recurr_in,
            task_duration_in           => task_duration_in,
            id_task_type_in            => id_task_type_in,
            dt_last_update_tstz_in     => dt_last_update_tstz_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END ins;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_workflow_in             IN comm_order_req.id_workflow%TYPE DEFAULT NULL,
        id_status_in               IN comm_order_req.id_status%TYPE DEFAULT NULL,
        id_patient_in              IN comm_order_req.id_patient%TYPE DEFAULT NULL,
        id_episode_in              IN comm_order_req.id_episode%TYPE DEFAULT NULL,
        id_concept_type_in         IN comm_order_req.id_concept_type%TYPE DEFAULT NULL,
        id_concept_version_in      IN comm_order_req.id_concept_version%TYPE DEFAULT NULL,
        id_cncpt_vrs_inst_owner_in IN comm_order_req.id_cncpt_vrs_inst_owner%TYPE DEFAULT NULL,
        id_concept_term_in         IN comm_order_req.id_concept_term%TYPE DEFAULT NULL,
        id_cncpt_trm_inst_owner_in IN comm_order_req.id_cncpt_trm_inst_owner%TYPE DEFAULT NULL,
        flg_free_text_in           IN comm_order_req.flg_free_text%TYPE DEFAULT NULL,
        id_prof_req_in             IN comm_order_req.id_prof_req%TYPE DEFAULT NULL,
        id_inst_req_in             IN comm_order_req.id_inst_req%TYPE DEFAULT NULL,
        dt_req_in                  IN comm_order_req.dt_req%TYPE DEFAULT NULL,
        flg_clinical_purpose_in    IN comm_order_req.flg_clinical_purpose%TYPE DEFAULT 'N',
        clinical_purpose_desc_in   IN comm_order_req.clinical_purpose_desc%TYPE DEFAULT NULL,
        flg_priority_in            IN comm_order_req.flg_priority%TYPE DEFAULT NULL,
        flg_prn_in                 IN comm_order_req.flg_prn%TYPE DEFAULT NULL,
        dt_begin_in                IN comm_order_req.dt_begin%TYPE DEFAULT NULL,
        id_professional_in         IN comm_order_req.id_professional%TYPE DEFAULT NULL,
        id_institution_in          IN comm_order_req.id_institution%TYPE DEFAULT NULL,
        dt_status_in               IN comm_order_req.dt_status%TYPE DEFAULT NULL,
        id_cancel_reason_in        IN comm_order_req.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in             IN comm_order_req.create_user%TYPE DEFAULT NULL,
        create_time_in             IN comm_order_req.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN comm_order_req.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN comm_order_req.update_user%TYPE DEFAULT NULL,
        update_time_in             IN comm_order_req.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN comm_order_req.update_institution%TYPE DEFAULT NULL,
        flg_need_ack_in            IN comm_order_req.flg_need_ack%TYPE DEFAULT 'N',
        flg_action_in              IN comm_order_req.flg_action%TYPE DEFAULT NULL,
        id_previous_status_in      IN comm_order_req.id_previous_status%TYPE DEFAULT NULL,
        id_order_recurr_in         IN comm_order_req.id_order_recurr%TYPE DEFAULT NULL,
        task_duration_in           IN comm_order_req.task_duration%TYPE DEFAULT NULL,
        id_task_type_in            IN comm_order_req.id_task_type%TYPE DEFAULT NULL,
        dt_last_update_tstz_in     IN comm_order_req.dt_last_update_tstz%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_workflow_in             => id_workflow_in,
            id_status_in               => id_status_in,
            id_patient_in              => id_patient_in,
            id_episode_in              => id_episode_in,
            id_concept_type_in         => id_concept_type_in,
            id_concept_version_in      => id_concept_version_in,
            id_cncpt_vrs_inst_owner_in => id_cncpt_vrs_inst_owner_in,
            id_concept_term_in         => id_concept_term_in,
            id_cncpt_trm_inst_owner_in => id_cncpt_trm_inst_owner_in,
            flg_free_text_in           => flg_free_text_in,
            id_prof_req_in             => id_prof_req_in,
            id_inst_req_in             => id_inst_req_in,
            dt_req_in                  => dt_req_in,
            flg_clinical_purpose_in    => flg_clinical_purpose_in,
            clinical_purpose_desc_in   => clinical_purpose_desc_in,
            flg_priority_in            => flg_priority_in,
            flg_prn_in                 => flg_prn_in,
            dt_begin_in                => dt_begin_in,
            id_professional_in         => id_professional_in,
            id_institution_in          => id_institution_in,
            dt_status_in               => dt_status_in,
            id_cancel_reason_in        => id_cancel_reason_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            flg_need_ack_in            => flg_need_ack_in,
            flg_action_in              => flg_action_in,
            id_previous_status_in      => id_previous_status_in,
            id_order_recurr_in         => id_order_recurr_in,
            task_duration_in           => task_duration_in,
            id_task_type_in            => id_task_type_in,
            dt_last_update_tstz_in     => dt_last_update_tstz_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END ins;

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_workflow_in             IN comm_order_req.id_workflow%TYPE DEFAULT NULL,
        id_status_in               IN comm_order_req.id_status%TYPE DEFAULT NULL,
        id_patient_in              IN comm_order_req.id_patient%TYPE DEFAULT NULL,
        id_episode_in              IN comm_order_req.id_episode%TYPE DEFAULT NULL,
        id_concept_type_in         IN comm_order_req.id_concept_type%TYPE DEFAULT NULL,
        id_concept_version_in      IN comm_order_req.id_concept_version%TYPE DEFAULT NULL,
        id_cncpt_vrs_inst_owner_in IN comm_order_req.id_cncpt_vrs_inst_owner%TYPE DEFAULT NULL,
        id_concept_term_in         IN comm_order_req.id_concept_term%TYPE DEFAULT NULL,
        id_cncpt_trm_inst_owner_in IN comm_order_req.id_cncpt_trm_inst_owner%TYPE DEFAULT NULL,
        flg_free_text_in           IN comm_order_req.flg_free_text%TYPE DEFAULT NULL,
        id_prof_req_in             IN comm_order_req.id_prof_req%TYPE DEFAULT NULL,
        id_inst_req_in             IN comm_order_req.id_inst_req%TYPE DEFAULT NULL,
        dt_req_in                  IN comm_order_req.dt_req%TYPE DEFAULT NULL,
        flg_clinical_purpose_in    IN comm_order_req.flg_clinical_purpose%TYPE DEFAULT 'N',
        clinical_purpose_desc_in   IN comm_order_req.clinical_purpose_desc%TYPE DEFAULT NULL,
        flg_priority_in            IN comm_order_req.flg_priority%TYPE DEFAULT NULL,
        flg_prn_in                 IN comm_order_req.flg_prn%TYPE DEFAULT NULL,
        dt_begin_in                IN comm_order_req.dt_begin%TYPE DEFAULT NULL,
        id_professional_in         IN comm_order_req.id_professional%TYPE DEFAULT NULL,
        id_institution_in          IN comm_order_req.id_institution%TYPE DEFAULT NULL,
        dt_status_in               IN comm_order_req.dt_status%TYPE DEFAULT NULL,
        id_cancel_reason_in        IN comm_order_req.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in             IN comm_order_req.create_user%TYPE DEFAULT NULL,
        create_time_in             IN comm_order_req.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN comm_order_req.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN comm_order_req.update_user%TYPE DEFAULT NULL,
        update_time_in             IN comm_order_req.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN comm_order_req.update_institution%TYPE DEFAULT NULL,
        flg_need_ack_in            IN comm_order_req.flg_need_ack%TYPE DEFAULT 'N',
        flg_action_in              IN comm_order_req.flg_action%TYPE DEFAULT NULL,
        id_previous_status_in      IN comm_order_req.id_previous_status%TYPE DEFAULT NULL,
        id_order_recurr_in         IN comm_order_req.id_order_recurr%TYPE DEFAULT NULL,
        task_duration_in           IN comm_order_req.task_duration%TYPE DEFAULT NULL,
        id_task_type_in            IN comm_order_req.id_task_type%TYPE DEFAULT NULL,
        dt_last_update_tstz_in     IN comm_order_req.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_comm_order_req_out      IN OUT comm_order_req.id_comm_order_req%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
        l_pky comm_order_req.id_comm_order_req%TYPE := next_key;
    BEGIN
        ins(id_comm_order_req_in       => l_pky,
            id_workflow_in             => id_workflow_in,
            id_status_in               => id_status_in,
            id_patient_in              => id_patient_in,
            id_episode_in              => id_episode_in,
            id_concept_type_in         => id_concept_type_in,
            id_concept_version_in      => id_concept_version_in,
            id_cncpt_vrs_inst_owner_in => id_cncpt_vrs_inst_owner_in,
            id_concept_term_in         => id_concept_term_in,
            id_cncpt_trm_inst_owner_in => id_cncpt_trm_inst_owner_in,
            flg_free_text_in           => flg_free_text_in,
            id_prof_req_in             => id_prof_req_in,
            id_inst_req_in             => id_inst_req_in,
            dt_req_in                  => dt_req_in,
            flg_clinical_purpose_in    => flg_clinical_purpose_in,
            clinical_purpose_desc_in   => clinical_purpose_desc_in,
            flg_priority_in            => flg_priority_in,
            flg_prn_in                 => flg_prn_in,
            dt_begin_in                => dt_begin_in,
            id_professional_in         => id_professional_in,
            id_institution_in          => id_institution_in,
            dt_status_in               => dt_status_in,
            id_cancel_reason_in        => id_cancel_reason_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            flg_need_ack_in            => flg_need_ack_in,
            flg_action_in              => flg_action_in,
            id_previous_status_in      => id_previous_status_in,
            id_order_recurr_in         => id_order_recurr_in,
            task_duration_in           => task_duration_in,
            id_task_type_in            => id_task_type_in,
            dt_last_update_tstz_in     => dt_last_update_tstz_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
        id_comm_order_req_out := l_pky;
    END ins;

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_workflow_in             IN comm_order_req.id_workflow%TYPE DEFAULT NULL,
        id_status_in               IN comm_order_req.id_status%TYPE DEFAULT NULL,
        id_patient_in              IN comm_order_req.id_patient%TYPE DEFAULT NULL,
        id_episode_in              IN comm_order_req.id_episode%TYPE DEFAULT NULL,
        id_concept_type_in         IN comm_order_req.id_concept_type%TYPE DEFAULT NULL,
        id_concept_version_in      IN comm_order_req.id_concept_version%TYPE DEFAULT NULL,
        id_cncpt_vrs_inst_owner_in IN comm_order_req.id_cncpt_vrs_inst_owner%TYPE DEFAULT NULL,
        id_concept_term_in         IN comm_order_req.id_concept_term%TYPE DEFAULT NULL,
        id_cncpt_trm_inst_owner_in IN comm_order_req.id_cncpt_trm_inst_owner%TYPE DEFAULT NULL,
        flg_free_text_in           IN comm_order_req.flg_free_text%TYPE DEFAULT NULL,
        id_prof_req_in             IN comm_order_req.id_prof_req%TYPE DEFAULT NULL,
        id_inst_req_in             IN comm_order_req.id_inst_req%TYPE DEFAULT NULL,
        dt_req_in                  IN comm_order_req.dt_req%TYPE DEFAULT NULL,
        flg_clinical_purpose_in    IN comm_order_req.flg_clinical_purpose%TYPE DEFAULT 'N',
        clinical_purpose_desc_in   IN comm_order_req.clinical_purpose_desc%TYPE DEFAULT NULL,
        flg_priority_in            IN comm_order_req.flg_priority%TYPE DEFAULT NULL,
        flg_prn_in                 IN comm_order_req.flg_prn%TYPE DEFAULT NULL,
        dt_begin_in                IN comm_order_req.dt_begin%TYPE DEFAULT NULL,
        id_professional_in         IN comm_order_req.id_professional%TYPE DEFAULT NULL,
        id_institution_in          IN comm_order_req.id_institution%TYPE DEFAULT NULL,
        dt_status_in               IN comm_order_req.dt_status%TYPE DEFAULT NULL,
        id_cancel_reason_in        IN comm_order_req.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in             IN comm_order_req.create_user%TYPE DEFAULT NULL,
        create_time_in             IN comm_order_req.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN comm_order_req.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN comm_order_req.update_user%TYPE DEFAULT NULL,
        update_time_in             IN comm_order_req.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN comm_order_req.update_institution%TYPE DEFAULT NULL,
        flg_need_ack_in            IN comm_order_req.flg_need_ack%TYPE DEFAULT 'N',
        flg_action_in              IN comm_order_req.flg_action%TYPE DEFAULT NULL,
        id_previous_status_in      IN comm_order_req.id_previous_status%TYPE DEFAULT NULL,
        id_order_recurr_in         IN comm_order_req.id_order_recurr%TYPE DEFAULT NULL,
        task_duration_in           IN comm_order_req.task_duration%TYPE DEFAULT NULL,
        id_task_type_in            IN comm_order_req.id_task_type%TYPE DEFAULT NULL,
        dt_last_update_tstz_in     IN comm_order_req.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_comm_order_req_out      IN OUT comm_order_req.id_comm_order_req%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_workflow_in             => id_workflow_in,
            id_status_in               => id_status_in,
            id_patient_in              => id_patient_in,
            id_episode_in              => id_episode_in,
            id_concept_type_in         => id_concept_type_in,
            id_concept_version_in      => id_concept_version_in,
            id_cncpt_vrs_inst_owner_in => id_cncpt_vrs_inst_owner_in,
            id_concept_term_in         => id_concept_term_in,
            id_cncpt_trm_inst_owner_in => id_cncpt_trm_inst_owner_in,
            flg_free_text_in           => flg_free_text_in,
            id_prof_req_in             => id_prof_req_in,
            id_inst_req_in             => id_inst_req_in,
            dt_req_in                  => dt_req_in,
            flg_clinical_purpose_in    => flg_clinical_purpose_in,
            clinical_purpose_desc_in   => clinical_purpose_desc_in,
            flg_priority_in            => flg_priority_in,
            flg_prn_in                 => flg_prn_in,
            dt_begin_in                => dt_begin_in,
            id_professional_in         => id_professional_in,
            id_institution_in          => id_institution_in,
            dt_status_in               => dt_status_in,
            id_cancel_reason_in        => id_cancel_reason_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            flg_need_ack_in            => flg_need_ack_in,
            flg_action_in              => flg_action_in,
            id_previous_status_in      => id_previous_status_in,
            id_order_recurr_in         => id_order_recurr_in,
            task_duration_in           => task_duration_in,
            id_task_type_in            => id_task_type_in,
            dt_last_update_tstz_in     => dt_last_update_tstz_in,
            id_comm_order_req_out      => id_comm_order_req_out,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END ins;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_workflow_in             IN comm_order_req.id_workflow%TYPE DEFAULT NULL,
        id_status_in               IN comm_order_req.id_status%TYPE DEFAULT NULL,
        id_patient_in              IN comm_order_req.id_patient%TYPE DEFAULT NULL,
        id_episode_in              IN comm_order_req.id_episode%TYPE DEFAULT NULL,
        id_concept_type_in         IN comm_order_req.id_concept_type%TYPE DEFAULT NULL,
        id_concept_version_in      IN comm_order_req.id_concept_version%TYPE DEFAULT NULL,
        id_cncpt_vrs_inst_owner_in IN comm_order_req.id_cncpt_vrs_inst_owner%TYPE DEFAULT NULL,
        id_concept_term_in         IN comm_order_req.id_concept_term%TYPE DEFAULT NULL,
        id_cncpt_trm_inst_owner_in IN comm_order_req.id_cncpt_trm_inst_owner%TYPE DEFAULT NULL,
        flg_free_text_in           IN comm_order_req.flg_free_text%TYPE DEFAULT NULL,
        id_prof_req_in             IN comm_order_req.id_prof_req%TYPE DEFAULT NULL,
        id_inst_req_in             IN comm_order_req.id_inst_req%TYPE DEFAULT NULL,
        dt_req_in                  IN comm_order_req.dt_req%TYPE DEFAULT NULL,
        flg_clinical_purpose_in    IN comm_order_req.flg_clinical_purpose%TYPE DEFAULT 'N',
        clinical_purpose_desc_in   IN comm_order_req.clinical_purpose_desc%TYPE DEFAULT NULL,
        flg_priority_in            IN comm_order_req.flg_priority%TYPE DEFAULT NULL,
        flg_prn_in                 IN comm_order_req.flg_prn%TYPE DEFAULT NULL,
        dt_begin_in                IN comm_order_req.dt_begin%TYPE DEFAULT NULL,
        id_professional_in         IN comm_order_req.id_professional%TYPE DEFAULT NULL,
        id_institution_in          IN comm_order_req.id_institution%TYPE DEFAULT NULL,
        dt_status_in               IN comm_order_req.dt_status%TYPE DEFAULT NULL,
        id_cancel_reason_in        IN comm_order_req.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in             IN comm_order_req.create_user%TYPE DEFAULT NULL,
        create_time_in             IN comm_order_req.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN comm_order_req.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN comm_order_req.update_user%TYPE DEFAULT NULL,
        update_time_in             IN comm_order_req.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN comm_order_req.update_institution%TYPE DEFAULT NULL,
        flg_need_ack_in            IN comm_order_req.flg_need_ack%TYPE DEFAULT 'N',
        flg_action_in              IN comm_order_req.flg_action%TYPE DEFAULT NULL,
        id_previous_status_in      IN comm_order_req.id_previous_status%TYPE DEFAULT NULL,
        id_order_recurr_in         IN comm_order_req.id_order_recurr%TYPE DEFAULT NULL,
        task_duration_in           IN comm_order_req.task_duration%TYPE DEFAULT NULL,
        id_task_type_in            IN comm_order_req.id_task_type%TYPE DEFAULT NULL,
        dt_last_update_tstz_in     IN comm_order_req.dt_last_update_tstz%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) RETURN comm_order_req.id_comm_order_req%TYPE IS
        l_pky comm_order_req.id_comm_order_req%TYPE := next_key;
    BEGIN
        ins(id_comm_order_req_in       => l_pky,
            id_workflow_in             => id_workflow_in,
            id_status_in               => id_status_in,
            id_patient_in              => id_patient_in,
            id_episode_in              => id_episode_in,
            id_concept_type_in         => id_concept_type_in,
            id_concept_version_in      => id_concept_version_in,
            id_cncpt_vrs_inst_owner_in => id_cncpt_vrs_inst_owner_in,
            id_concept_term_in         => id_concept_term_in,
            id_cncpt_trm_inst_owner_in => id_cncpt_trm_inst_owner_in,
            flg_free_text_in           => flg_free_text_in,
            id_prof_req_in             => id_prof_req_in,
            id_inst_req_in             => id_inst_req_in,
            dt_req_in                  => dt_req_in,
            flg_clinical_purpose_in    => flg_clinical_purpose_in,
            clinical_purpose_desc_in   => clinical_purpose_desc_in,
            flg_priority_in            => flg_priority_in,
            flg_prn_in                 => flg_prn_in,
            dt_begin_in                => dt_begin_in,
            id_professional_in         => id_professional_in,
            id_institution_in          => id_institution_in,
            dt_status_in               => dt_status_in,
            id_cancel_reason_in        => id_cancel_reason_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            flg_need_ack_in            => flg_need_ack_in,
            flg_action_in              => flg_action_in,
            id_previous_status_in      => id_previous_status_in,
            id_order_recurr_in         => id_order_recurr_in,
            task_duration_in           => task_duration_in,
            id_task_type_in            => id_task_type_in,
            dt_last_update_tstz_in     => dt_last_update_tstz_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
        RETURN l_pky;
    END ins;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_workflow_in             IN comm_order_req.id_workflow%TYPE DEFAULT NULL,
        id_status_in               IN comm_order_req.id_status%TYPE DEFAULT NULL,
        id_patient_in              IN comm_order_req.id_patient%TYPE DEFAULT NULL,
        id_episode_in              IN comm_order_req.id_episode%TYPE DEFAULT NULL,
        id_concept_type_in         IN comm_order_req.id_concept_type%TYPE DEFAULT NULL,
        id_concept_version_in      IN comm_order_req.id_concept_version%TYPE DEFAULT NULL,
        id_cncpt_vrs_inst_owner_in IN comm_order_req.id_cncpt_vrs_inst_owner%TYPE DEFAULT NULL,
        id_concept_term_in         IN comm_order_req.id_concept_term%TYPE DEFAULT NULL,
        id_cncpt_trm_inst_owner_in IN comm_order_req.id_cncpt_trm_inst_owner%TYPE DEFAULT NULL,
        flg_free_text_in           IN comm_order_req.flg_free_text%TYPE DEFAULT NULL,
        id_prof_req_in             IN comm_order_req.id_prof_req%TYPE DEFAULT NULL,
        id_inst_req_in             IN comm_order_req.id_inst_req%TYPE DEFAULT NULL,
        dt_req_in                  IN comm_order_req.dt_req%TYPE DEFAULT NULL,
        flg_clinical_purpose_in    IN comm_order_req.flg_clinical_purpose%TYPE DEFAULT 'N',
        clinical_purpose_desc_in   IN comm_order_req.clinical_purpose_desc%TYPE DEFAULT NULL,
        flg_priority_in            IN comm_order_req.flg_priority%TYPE DEFAULT NULL,
        flg_prn_in                 IN comm_order_req.flg_prn%TYPE DEFAULT NULL,
        dt_begin_in                IN comm_order_req.dt_begin%TYPE DEFAULT NULL,
        id_professional_in         IN comm_order_req.id_professional%TYPE DEFAULT NULL,
        id_institution_in          IN comm_order_req.id_institution%TYPE DEFAULT NULL,
        dt_status_in               IN comm_order_req.dt_status%TYPE DEFAULT NULL,
        id_cancel_reason_in        IN comm_order_req.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in             IN comm_order_req.create_user%TYPE DEFAULT NULL,
        create_time_in             IN comm_order_req.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN comm_order_req.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN comm_order_req.update_user%TYPE DEFAULT NULL,
        update_time_in             IN comm_order_req.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN comm_order_req.update_institution%TYPE DEFAULT NULL,
        flg_need_ack_in            IN comm_order_req.flg_need_ack%TYPE DEFAULT 'N',
        flg_action_in              IN comm_order_req.flg_action%TYPE DEFAULT NULL,
        id_previous_status_in      IN comm_order_req.id_previous_status%TYPE DEFAULT NULL,
        id_order_recurr_in         IN comm_order_req.id_order_recurr%TYPE DEFAULT NULL,
        task_duration_in           IN comm_order_req.task_duration%TYPE DEFAULT NULL,
        id_task_type_in            IN comm_order_req.id_task_type%TYPE DEFAULT NULL,
        dt_last_update_tstz_in     IN comm_order_req.dt_last_update_tstz%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE
    ) RETURN comm_order_req.id_comm_order_req%TYPE IS
        l_pky    comm_order_req.id_comm_order_req%TYPE := next_key;
        rows_out table_varchar;
    BEGIN
        ins(id_comm_order_req_in       => l_pky,
            id_workflow_in             => id_workflow_in,
            id_status_in               => id_status_in,
            id_patient_in              => id_patient_in,
            id_episode_in              => id_episode_in,
            id_concept_type_in         => id_concept_type_in,
            id_concept_version_in      => id_concept_version_in,
            id_cncpt_vrs_inst_owner_in => id_cncpt_vrs_inst_owner_in,
            id_concept_term_in         => id_concept_term_in,
            id_cncpt_trm_inst_owner_in => id_cncpt_trm_inst_owner_in,
            flg_free_text_in           => flg_free_text_in,
            id_prof_req_in             => id_prof_req_in,
            id_inst_req_in             => id_inst_req_in,
            dt_req_in                  => dt_req_in,
            flg_clinical_purpose_in    => flg_clinical_purpose_in,
            clinical_purpose_desc_in   => clinical_purpose_desc_in,
            flg_priority_in            => flg_priority_in,
            flg_prn_in                 => flg_prn_in,
            dt_begin_in                => dt_begin_in,
            id_professional_in         => id_professional_in,
            id_institution_in          => id_institution_in,
            dt_status_in               => dt_status_in,
            id_cancel_reason_in        => id_cancel_reason_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            flg_need_ack_in            => flg_need_ack_in,
            flg_action_in              => flg_action_in,
            id_previous_status_in      => id_previous_status_in,
            id_order_recurr_in         => id_order_recurr_in,
            task_duration_in           => task_duration_in,
            id_task_type_in            => id_task_type_in,
            dt_last_update_tstz_in     => dt_last_update_tstz_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
        RETURN l_pky;
    END ins;

    PROCEDURE ins
    (
        id_comm_order_req_in       IN comm_order_req.id_comm_order_req%TYPE,
        id_workflow_in             IN comm_order_req.id_workflow%TYPE DEFAULT NULL,
        id_status_in               IN comm_order_req.id_status%TYPE DEFAULT NULL,
        id_patient_in              IN comm_order_req.id_patient%TYPE DEFAULT NULL,
        id_episode_in              IN comm_order_req.id_episode%TYPE DEFAULT NULL,
        id_concept_type_in         IN comm_order_req.id_concept_type%TYPE DEFAULT NULL,
        id_concept_version_in      IN comm_order_req.id_concept_version%TYPE DEFAULT NULL,
        id_cncpt_vrs_inst_owner_in IN comm_order_req.id_cncpt_vrs_inst_owner%TYPE DEFAULT NULL,
        id_concept_term_in         IN comm_order_req.id_concept_term%TYPE DEFAULT NULL,
        id_cncpt_trm_inst_owner_in IN comm_order_req.id_cncpt_trm_inst_owner%TYPE DEFAULT NULL,
        flg_free_text_in           IN comm_order_req.flg_free_text%TYPE DEFAULT NULL,
        id_prof_req_in             IN comm_order_req.id_prof_req%TYPE DEFAULT NULL,
        id_inst_req_in             IN comm_order_req.id_inst_req%TYPE DEFAULT NULL,
        dt_req_in                  IN comm_order_req.dt_req%TYPE DEFAULT NULL,
        flg_clinical_purpose_in    IN comm_order_req.flg_clinical_purpose%TYPE DEFAULT 'N',
        clinical_purpose_desc_in   IN comm_order_req.clinical_purpose_desc%TYPE DEFAULT NULL,
        flg_priority_in            IN comm_order_req.flg_priority%TYPE DEFAULT NULL,
        flg_prn_in                 IN comm_order_req.flg_prn%TYPE DEFAULT NULL,
        dt_begin_in                IN comm_order_req.dt_begin%TYPE DEFAULT NULL,
        id_professional_in         IN comm_order_req.id_professional%TYPE DEFAULT NULL,
        id_institution_in          IN comm_order_req.id_institution%TYPE DEFAULT NULL,
        dt_status_in               IN comm_order_req.dt_status%TYPE DEFAULT NULL,
        id_cancel_reason_in        IN comm_order_req.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in             IN comm_order_req.create_user%TYPE DEFAULT NULL,
        create_time_in             IN comm_order_req.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN comm_order_req.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN comm_order_req.update_user%TYPE DEFAULT NULL,
        update_time_in             IN comm_order_req.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN comm_order_req.update_institution%TYPE DEFAULT NULL,
        flg_need_ack_in            IN comm_order_req.flg_need_ack%TYPE DEFAULT 'N',
        flg_action_in              IN comm_order_req.flg_action%TYPE DEFAULT NULL,
        id_previous_status_in      IN comm_order_req.id_previous_status%TYPE DEFAULT NULL,
        id_order_recurr_in         IN comm_order_req.id_order_recurr%TYPE DEFAULT NULL,
        task_duration_in           IN comm_order_req.task_duration%TYPE DEFAULT NULL,
        id_task_type_in            IN comm_order_req.id_task_type%TYPE DEFAULT NULL,
        dt_last_update_tstz_in     IN comm_order_req.dt_last_update_tstz%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := FALSE,
        rows_out                   OUT table_varchar
    ) IS
    BEGIN
        INSERT INTO comm_order_req
            (id_comm_order_req,
             id_workflow,
             id_status,
             id_patient,
             id_episode,
             id_concept_type,
             id_concept_version,
             id_cncpt_vrs_inst_owner,
             id_concept_term,
             id_cncpt_trm_inst_owner,
             flg_free_text,
             id_prof_req,
             id_inst_req,
             dt_req,
             flg_clinical_purpose,
             clinical_purpose_desc,
             flg_priority,
             flg_prn,
             dt_begin,
             id_professional,
             id_institution,
             dt_status,
             id_cancel_reason,
             create_user,
             create_time,
             create_institution,
             update_user,
             update_time,
             update_institution,
             flg_need_ack,
             flg_action,
             id_previous_status,
             id_order_recurr,
             task_duration,
             id_task_type,
             dt_last_update_tstz)
        VALUES
            (id_comm_order_req_in,
             id_workflow_in,
             id_status_in,
             id_patient_in,
             id_episode_in,
             id_concept_type_in,
             id_concept_version_in,
             id_cncpt_vrs_inst_owner_in,
             id_concept_term_in,
             id_cncpt_trm_inst_owner_in,
             flg_free_text_in,
             id_prof_req_in,
             id_inst_req_in,
             dt_req_in,
             flg_clinical_purpose_in,
             clinical_purpose_desc_in,
             flg_priority_in,
             flg_prn_in,
             dt_begin_in,
             id_professional_in,
             id_institution_in,
             dt_status_in,
             id_cancel_reason_in,
             create_user_in,
             create_time_in,
             create_institution_in,
             update_user_in,
             update_time_in,
             update_institution_in,
             flg_need_ack_in,
             flg_action_in,
             id_previous_status_in,
             id_order_recurr_in,
             task_duration_in,
             id_task_type_in,
             dt_last_update_tstz_in)
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    PROCEDURE ins
    (
        id_comm_order_req_in       IN comm_order_req.id_comm_order_req%TYPE,
        id_workflow_in             IN comm_order_req.id_workflow%TYPE DEFAULT NULL,
        id_status_in               IN comm_order_req.id_status%TYPE DEFAULT NULL,
        id_patient_in              IN comm_order_req.id_patient%TYPE DEFAULT NULL,
        id_episode_in              IN comm_order_req.id_episode%TYPE DEFAULT NULL,
        id_concept_type_in         IN comm_order_req.id_concept_type%TYPE DEFAULT NULL,
        id_concept_version_in      IN comm_order_req.id_concept_version%TYPE DEFAULT NULL,
        id_cncpt_vrs_inst_owner_in IN comm_order_req.id_cncpt_vrs_inst_owner%TYPE DEFAULT NULL,
        id_concept_term_in         IN comm_order_req.id_concept_term%TYPE DEFAULT NULL,
        id_cncpt_trm_inst_owner_in IN comm_order_req.id_cncpt_trm_inst_owner%TYPE DEFAULT NULL,
        flg_free_text_in           IN comm_order_req.flg_free_text%TYPE DEFAULT NULL,
        id_prof_req_in             IN comm_order_req.id_prof_req%TYPE DEFAULT NULL,
        id_inst_req_in             IN comm_order_req.id_inst_req%TYPE DEFAULT NULL,
        dt_req_in                  IN comm_order_req.dt_req%TYPE DEFAULT NULL,
        flg_clinical_purpose_in    IN comm_order_req.flg_clinical_purpose%TYPE DEFAULT 'N',
        clinical_purpose_desc_in   IN comm_order_req.clinical_purpose_desc%TYPE DEFAULT NULL,
        flg_priority_in            IN comm_order_req.flg_priority%TYPE DEFAULT NULL,
        flg_prn_in                 IN comm_order_req.flg_prn%TYPE DEFAULT NULL,
        dt_begin_in                IN comm_order_req.dt_begin%TYPE DEFAULT NULL,
        id_professional_in         IN comm_order_req.id_professional%TYPE DEFAULT NULL,
        id_institution_in          IN comm_order_req.id_institution%TYPE DEFAULT NULL,
        dt_status_in               IN comm_order_req.dt_status%TYPE DEFAULT NULL,
        id_cancel_reason_in        IN comm_order_req.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in             IN comm_order_req.create_user%TYPE DEFAULT NULL,
        create_time_in             IN comm_order_req.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN comm_order_req.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN comm_order_req.update_user%TYPE DEFAULT NULL,
        update_time_in             IN comm_order_req.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN comm_order_req.update_institution%TYPE DEFAULT NULL,
        flg_need_ack_in            IN comm_order_req.flg_need_ack%TYPE DEFAULT 'N',
        flg_action_in              IN comm_order_req.flg_action%TYPE DEFAULT NULL,
        id_previous_status_in      IN comm_order_req.id_previous_status%TYPE DEFAULT NULL,
        id_order_recurr_in         IN comm_order_req.id_order_recurr%TYPE DEFAULT NULL,
        task_duration_in           IN comm_order_req.task_duration%TYPE DEFAULT NULL,
        id_task_type_in            IN comm_order_req.id_task_type%TYPE DEFAULT NULL,
        dt_last_update_tstz_in     IN comm_order_req.dt_last_update_tstz%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_comm_order_req_in       => id_comm_order_req_in,
            id_workflow_in             => id_workflow_in,
            id_status_in               => id_status_in,
            id_patient_in              => id_patient_in,
            id_episode_in              => id_episode_in,
            id_concept_type_in         => id_concept_type_in,
            id_concept_version_in      => id_concept_version_in,
            id_cncpt_vrs_inst_owner_in => id_cncpt_vrs_inst_owner_in,
            id_concept_term_in         => id_concept_term_in,
            id_cncpt_trm_inst_owner_in => id_cncpt_trm_inst_owner_in,
            flg_free_text_in           => flg_free_text_in,
            id_prof_req_in             => id_prof_req_in,
            id_inst_req_in             => id_inst_req_in,
            dt_req_in                  => dt_req_in,
            flg_clinical_purpose_in    => flg_clinical_purpose_in,
            clinical_purpose_desc_in   => clinical_purpose_desc_in,
            flg_priority_in            => flg_priority_in,
            flg_prn_in                 => flg_prn_in,
            dt_begin_in                => dt_begin_in,
            id_professional_in         => id_professional_in,
            id_institution_in          => id_institution_in,
            dt_status_in               => dt_status_in,
            id_cancel_reason_in        => id_cancel_reason_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            flg_need_ack_in            => flg_need_ack_in,
            flg_action_in              => flg_action_in,
            id_previous_status_in      => id_previous_status_in,
            id_order_recurr_in         => id_order_recurr_in,
            task_duration_in           => task_duration_in,
            id_task_type_in            => id_task_type_in,
            dt_last_update_tstz_in     => dt_last_update_tstz_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN comm_order_req%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
        l_rec comm_order_req%ROWTYPE := rec_in;
    BEGIN
        IF gen_pky_in
        THEN
            l_rec.id_comm_order_req := next_key(sequence_in);
        END IF;
    
        ins(id_comm_order_req_in       => l_rec.id_comm_order_req,
            id_workflow_in             => l_rec.id_workflow,
            id_status_in               => l_rec.id_status,
            id_patient_in              => l_rec.id_patient,
            id_episode_in              => l_rec.id_episode,
            id_concept_type_in         => l_rec.id_concept_type,
            id_concept_version_in      => l_rec.id_concept_version,
            id_cncpt_vrs_inst_owner_in => l_rec.id_cncpt_vrs_inst_owner,
            id_concept_term_in         => l_rec.id_concept_term,
            id_cncpt_trm_inst_owner_in => l_rec.id_cncpt_trm_inst_owner,
            flg_free_text_in           => l_rec.flg_free_text,
            id_prof_req_in             => l_rec.id_prof_req,
            id_inst_req_in             => l_rec.id_inst_req,
            dt_req_in                  => l_rec.dt_req,
            flg_clinical_purpose_in    => l_rec.flg_clinical_purpose,
            clinical_purpose_desc_in   => l_rec.clinical_purpose_desc,
            flg_priority_in            => l_rec.flg_priority,
            flg_prn_in                 => l_rec.flg_prn,
            dt_begin_in                => l_rec.dt_begin,
            id_professional_in         => l_rec.id_professional,
            id_institution_in          => l_rec.id_institution,
            dt_status_in               => l_rec.dt_status,
            id_cancel_reason_in        => l_rec.id_cancel_reason,
            create_user_in             => l_rec.create_user,
            create_time_in             => l_rec.create_time,
            create_institution_in      => l_rec.create_institution,
            update_user_in             => l_rec.update_user,
            update_time_in             => l_rec.update_time,
            update_institution_in      => l_rec.update_institution,
            flg_need_ack_in            => l_rec.flg_need_ack,
            flg_action_in              => l_rec.flg_action,
            id_previous_status_in      => l_rec.id_previous_status,
            id_order_recurr_in         => l_rec.id_order_recurr,
            task_duration_in           => l_rec.task_duration,
            id_task_type_in            => l_rec.id_task_type,
            dt_last_update_tstz_in     => l_rec.dt_last_update_tstz,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN comm_order_req%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rec_in          => rec_in,
            gen_pky_in      => gen_pky_in,
            sequence_in     => sequence_in,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN comm_order_req_tc,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        IF rows_in.count = 0
        THEN
            NULL;
        ELSE
            FORALL indx IN rows_in.first .. rows_in.last SAVE EXCEPTIONS
                INSERT INTO comm_order_req
                    (id_comm_order_req,
                     id_workflow,
                     id_status,
                     id_patient,
                     id_episode,
                     id_concept_type,
                     id_concept_version,
                     id_cncpt_vrs_inst_owner,
                     id_concept_term,
                     id_cncpt_trm_inst_owner,
                     flg_free_text,
                     id_prof_req,
                     id_inst_req,
                     dt_req,
                     flg_clinical_purpose,
                     clinical_purpose_desc,
                     flg_priority,
                     flg_prn,
                     dt_begin,
                     id_professional,
                     id_institution,
                     dt_status,
                     id_cancel_reason,
                     flg_need_ack,
                     flg_action,
                     id_previous_status,
                     id_order_recurr,
                     task_duration,
                     id_task_type,
                     dt_last_update_tstz)
                VALUES
                    (rows_in(indx).id_comm_order_req,
                     rows_in(indx).id_workflow,
                     rows_in(indx).id_status,
                     rows_in(indx).id_patient,
                     rows_in(indx).id_episode,
                     rows_in(indx).id_concept_type,
                     rows_in(indx).id_concept_version,
                     rows_in(indx).id_cncpt_vrs_inst_owner,
                     rows_in(indx).id_concept_term,
                     rows_in(indx).id_cncpt_trm_inst_owner,
                     rows_in(indx).flg_free_text,
                     rows_in(indx).id_prof_req,
                     rows_in(indx).id_inst_req,
                     rows_in(indx).dt_req,
                     rows_in(indx).flg_clinical_purpose,
                     rows_in(indx).clinical_purpose_desc,
                     rows_in(indx).flg_priority,
                     rows_in(indx).flg_prn,
                     rows_in(indx).dt_begin,
                     rows_in(indx).id_professional,
                     rows_in(indx).id_institution,
                     rows_in(indx).dt_status,
                     rows_in(indx).id_cancel_reason,
                     rows_in(indx).flg_need_ack,
                     rows_in(indx).flg_action,
                     rows_in(indx).id_previous_status,
                     rows_in(indx).id_order_recurr,
                     rows_in(indx).task_duration,
                     rows_in(indx).id_task_type,
                     rows_in(indx).dt_last_update_tstz)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN comm_order_req_tc,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rows_in => rows_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END ins;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_comm_order_req_in        IN comm_order_req.id_comm_order_req%TYPE,
        id_workflow_in              IN comm_order_req.id_workflow%TYPE DEFAULT NULL,
        id_workflow_nin             IN BOOLEAN := TRUE,
        id_status_in                IN comm_order_req.id_status%TYPE DEFAULT NULL,
        id_status_nin               IN BOOLEAN := TRUE,
        id_patient_in               IN comm_order_req.id_patient%TYPE DEFAULT NULL,
        id_patient_nin              IN BOOLEAN := TRUE,
        id_episode_in               IN comm_order_req.id_episode%TYPE DEFAULT NULL,
        id_episode_nin              IN BOOLEAN := TRUE,
        id_concept_type_in          IN comm_order_req.id_concept_type%TYPE DEFAULT NULL,
        id_concept_type_nin         IN BOOLEAN := TRUE,
        id_concept_version_in       IN comm_order_req.id_concept_version%TYPE DEFAULT NULL,
        id_concept_version_nin      IN BOOLEAN := TRUE,
        id_cncpt_vrs_inst_owner_in  IN comm_order_req.id_cncpt_vrs_inst_owner%TYPE DEFAULT NULL,
        id_cncpt_vrs_inst_owner_nin IN BOOLEAN := TRUE,
        id_concept_term_in          IN comm_order_req.id_concept_term%TYPE DEFAULT NULL,
        id_concept_term_nin         IN BOOLEAN := TRUE,
        id_cncpt_trm_inst_owner_in  IN comm_order_req.id_cncpt_trm_inst_owner%TYPE DEFAULT NULL,
        id_cncpt_trm_inst_owner_nin IN BOOLEAN := TRUE,
        flg_free_text_in            IN comm_order_req.flg_free_text%TYPE DEFAULT NULL,
        flg_free_text_nin           IN BOOLEAN := TRUE,
        id_prof_req_in              IN comm_order_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_req_nin             IN BOOLEAN := TRUE,
        id_inst_req_in              IN comm_order_req.id_inst_req%TYPE DEFAULT NULL,
        id_inst_req_nin             IN BOOLEAN := TRUE,
        dt_req_in                   IN comm_order_req.dt_req%TYPE DEFAULT NULL,
        dt_req_nin                  IN BOOLEAN := TRUE,
        flg_clinical_purpose_in     IN comm_order_req.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_clinical_purpose_nin    IN BOOLEAN := TRUE,
        clinical_purpose_desc_in    IN comm_order_req.clinical_purpose_desc%TYPE DEFAULT NULL,
        clinical_purpose_desc_nin   IN BOOLEAN := TRUE,
        flg_priority_in             IN comm_order_req.flg_priority%TYPE DEFAULT NULL,
        flg_priority_nin            IN BOOLEAN := TRUE,
        flg_prn_in                  IN comm_order_req.flg_prn%TYPE DEFAULT NULL,
        flg_prn_nin                 IN BOOLEAN := TRUE,
        dt_begin_in                 IN comm_order_req.dt_begin%TYPE DEFAULT NULL,
        dt_begin_nin                IN BOOLEAN := TRUE,
        id_professional_in          IN comm_order_req.id_professional%TYPE DEFAULT NULL,
        id_professional_nin         IN BOOLEAN := TRUE,
        id_institution_in           IN comm_order_req.id_institution%TYPE DEFAULT NULL,
        id_institution_nin          IN BOOLEAN := TRUE,
        dt_status_in                IN comm_order_req.dt_status%TYPE DEFAULT NULL,
        dt_status_nin               IN BOOLEAN := TRUE,
        id_cancel_reason_in         IN comm_order_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin        IN BOOLEAN := TRUE,
        create_user_in              IN comm_order_req.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN comm_order_req.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN comm_order_req.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN comm_order_req.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN comm_order_req.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN comm_order_req.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        flg_need_ack_in             IN comm_order_req.flg_need_ack%TYPE DEFAULT NULL,
        flg_need_ack_nin            IN BOOLEAN := TRUE,
        flg_action_in               IN comm_order_req.flg_action%TYPE DEFAULT NULL,
        flg_action_nin              IN BOOLEAN := TRUE,
        id_previous_status_in       IN comm_order_req.id_previous_status%TYPE DEFAULT NULL,
        id_previous_status_nin      IN BOOLEAN := TRUE,
        id_order_recurr_in          IN comm_order_req.id_order_recurr%TYPE DEFAULT NULL,
        id_order_recurr_nin         IN BOOLEAN := TRUE,
        task_duration_in            IN comm_order_req.task_duration%TYPE DEFAULT NULL,
        task_duration_nin           IN BOOLEAN := TRUE,
        id_task_type_in             IN comm_order_req.id_task_type%TYPE DEFAULT NULL,
        id_task_type_nin            IN BOOLEAN := TRUE,
        dt_last_update_tstz_in      IN comm_order_req.dt_last_update_tstz%TYPE DEFAULT NULL,
        dt_last_update_tstz_nin     IN BOOLEAN := TRUE,
        handle_error_in             IN BOOLEAN := FALSE,
        rows_out                    IN OUT table_varchar
    ) IS
        l_rows_out                  table_varchar;
        l_id_workflow_n             NUMBER(1) := sys.diutil.bool_to_int(id_workflow_nin);
        l_id_status_n               NUMBER(1) := sys.diutil.bool_to_int(id_status_nin);
        l_id_patient_n              NUMBER(1) := sys.diutil.bool_to_int(id_patient_nin);
        l_id_episode_n              NUMBER(1) := sys.diutil.bool_to_int(id_episode_nin);
        l_id_concept_type_n         NUMBER(1) := sys.diutil.bool_to_int(id_concept_type_nin);
        l_id_concept_version_n      NUMBER(1) := sys.diutil.bool_to_int(id_concept_version_nin);
        l_id_cncpt_vrs_inst_owner_n NUMBER(1) := sys.diutil.bool_to_int(id_cncpt_vrs_inst_owner_nin);
        l_id_concept_term_n         NUMBER(1) := sys.diutil.bool_to_int(id_concept_term_nin);
        l_id_cncpt_trm_inst_owner_n NUMBER(1) := sys.diutil.bool_to_int(id_cncpt_trm_inst_owner_nin);
        l_flg_free_text_n           NUMBER(1) := sys.diutil.bool_to_int(flg_free_text_nin);
        l_id_prof_req_n             NUMBER(1) := sys.diutil.bool_to_int(id_prof_req_nin);
        l_id_inst_req_n             NUMBER(1) := sys.diutil.bool_to_int(id_inst_req_nin);
        l_dt_req_n                  NUMBER(1) := sys.diutil.bool_to_int(dt_req_nin);
        l_flg_clinical_purpose_n    NUMBER(1) := sys.diutil.bool_to_int(flg_clinical_purpose_nin);
        l_clinical_purpose_desc_n   NUMBER(1) := sys.diutil.bool_to_int(clinical_purpose_desc_nin);
        l_flg_priority_n            NUMBER(1) := sys.diutil.bool_to_int(flg_priority_nin);
        l_flg_prn_n                 NUMBER(1) := sys.diutil.bool_to_int(flg_prn_nin);
        l_dt_begin_n                NUMBER(1) := sys.diutil.bool_to_int(dt_begin_nin);
        l_id_professional_n         NUMBER(1) := sys.diutil.bool_to_int(id_professional_nin);
        l_id_institution_n          NUMBER(1) := sys.diutil.bool_to_int(id_institution_nin);
        l_dt_status_n               NUMBER(1) := sys.diutil.bool_to_int(dt_status_nin);
        l_id_cancel_reason_n        NUMBER(1) := sys.diutil.bool_to_int(id_cancel_reason_nin);
        l_create_user_n             NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n             NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n      NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n             NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n             NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n      NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_flg_need_ack_n            NUMBER(1) := sys.diutil.bool_to_int(flg_need_ack_nin);
        l_flg_action_n              NUMBER(1) := sys.diutil.bool_to_int(flg_action_nin);
        l_id_previous_status_n      NUMBER(1) := sys.diutil.bool_to_int(id_previous_status_nin);
        l_id_order_recurr_n         NUMBER(1) := sys.diutil.bool_to_int(id_order_recurr_nin);
        l_task_duration_n           NUMBER(1) := sys.diutil.bool_to_int(task_duration_nin);
        l_id_task_type_n            NUMBER(1) := sys.diutil.bool_to_int(id_task_type_nin);
        l_dt_last_update_tstz_n     NUMBER(1) := sys.diutil.bool_to_int(dt_last_update_tstz_nin);
    BEGIN
    
        UPDATE comm_order_req
           SET id_workflow             = decode(l_id_workflow_n, 0, id_workflow_in, nvl(id_workflow_in, id_workflow)),
               id_status               = decode(l_id_status_n, 0, id_status_in, nvl(id_status_in, id_status)),
               id_patient              = decode(l_id_patient_n, 0, id_patient_in, nvl(id_patient_in, id_patient)),
               id_episode              = decode(l_id_episode_n, 0, id_episode_in, nvl(id_episode_in, id_episode)),
               id_concept_type         = decode(l_id_concept_type_n,
                                                0,
                                                id_concept_type_in,
                                                nvl(id_concept_type_in, id_concept_type)),
               id_concept_version      = decode(l_id_concept_version_n,
                                                0,
                                                id_concept_version_in,
                                                nvl(id_concept_version_in, id_concept_version)),
               id_cncpt_vrs_inst_owner = decode(l_id_cncpt_vrs_inst_owner_n,
                                                0,
                                                id_cncpt_vrs_inst_owner_in,
                                                nvl(id_cncpt_vrs_inst_owner_in, id_cncpt_vrs_inst_owner)),
               id_concept_term         = decode(l_id_concept_term_n,
                                                0,
                                                id_concept_term_in,
                                                nvl(id_concept_term_in, id_concept_term)),
               id_cncpt_trm_inst_owner = decode(l_id_cncpt_trm_inst_owner_n,
                                                0,
                                                id_cncpt_trm_inst_owner_in,
                                                nvl(id_cncpt_trm_inst_owner_in, id_cncpt_trm_inst_owner)),
               flg_free_text           = decode(l_flg_free_text_n,
                                                0,
                                                flg_free_text_in,
                                                nvl(flg_free_text_in, flg_free_text)),
               id_prof_req             = decode(l_id_prof_req_n, 0, id_prof_req_in, nvl(id_prof_req_in, id_prof_req)),
               id_inst_req             = decode(l_id_inst_req_n, 0, id_inst_req_in, nvl(id_inst_req_in, id_inst_req)),
               dt_req                  = decode(l_dt_req_n, 0, dt_req_in, nvl(dt_req_in, dt_req)),
               flg_clinical_purpose    = decode(l_flg_clinical_purpose_n,
                                                0,
                                                flg_clinical_purpose_in,
                                                nvl(flg_clinical_purpose_in, flg_clinical_purpose)),
               clinical_purpose_desc   = decode(l_clinical_purpose_desc_n,
                                                0,
                                                clinical_purpose_desc_in,
                                                nvl(clinical_purpose_desc_in, clinical_purpose_desc)),
               flg_priority            = decode(l_flg_priority_n, 0, flg_priority_in, nvl(flg_priority_in, flg_priority)),
               flg_prn                 = decode(l_flg_prn_n, 0, flg_prn_in, nvl(flg_prn_in, flg_prn)),
               dt_begin                = decode(l_dt_begin_n, 0, dt_begin_in, nvl(dt_begin_in, dt_begin)),
               id_professional         = decode(l_id_professional_n,
                                                0,
                                                id_professional_in,
                                                nvl(id_professional_in, id_professional)),
               id_institution          = decode(l_id_institution_n,
                                                0,
                                                id_institution_in,
                                                nvl(id_institution_in, id_institution)),
               dt_status               = decode(l_dt_status_n, 0, dt_status_in, nvl(dt_status_in, dt_status)),
               id_cancel_reason        = decode(l_id_cancel_reason_n,
                                                0,
                                                id_cancel_reason_in,
                                                nvl(id_cancel_reason_in, id_cancel_reason)),
               create_user             = decode(l_create_user_n, 0, create_user_in, nvl(create_user_in, create_user)),
               create_time             = decode(l_create_time_n, 0, create_time_in, nvl(create_time_in, create_time)),
               create_institution      = decode(l_create_institution_n,
                                                0,
                                                create_institution_in,
                                                nvl(create_institution_in, create_institution)),
               update_user             = decode(l_update_user_n, 0, update_user_in, nvl(update_user_in, update_user)),
               update_time             = decode(l_update_time_n, 0, update_time_in, nvl(update_time_in, update_time)),
               update_institution      = decode(l_update_institution_n,
                                                0,
                                                update_institution_in,
                                                nvl(update_institution_in, update_institution)),
               flg_need_ack            = decode(l_flg_need_ack_n, 0, flg_need_ack_in, nvl(flg_need_ack_in, flg_need_ack)),
               flg_action              = decode(l_flg_action_n, 0, flg_action_in, nvl(flg_action_in, flg_action)),
               id_previous_status      = decode(l_id_previous_status_n,
                                                0,
                                                id_previous_status_in,
                                                nvl(id_previous_status_in, id_previous_status)),
               id_order_recurr         = decode(l_id_order_recurr_n,
                                                0,
                                                id_order_recurr_in,
                                                nvl(id_order_recurr_in, id_order_recurr)),
               task_duration           = decode(l_task_duration_n,
                                                0,
                                                task_duration_in,
                                                nvl(task_duration_in, task_duration)),
               id_task_type            = decode(l_id_task_type_n, 0, id_task_type_in, nvl(id_task_type_in, id_task_type)),
               dt_last_update_tstz     = decode(l_dt_last_update_tstz_n,
                                                0,
                                                dt_last_update_tstz_in,
                                                nvl(dt_last_update_tstz_in, dt_last_update_tstz))
         WHERE id_comm_order_req = id_comm_order_req_in
        RETURNING ROWID BULK COLLECT INTO l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_comm_order_req_in        IN comm_order_req.id_comm_order_req%TYPE,
        id_workflow_in              IN comm_order_req.id_workflow%TYPE DEFAULT NULL,
        id_workflow_nin             IN BOOLEAN := TRUE,
        id_status_in                IN comm_order_req.id_status%TYPE DEFAULT NULL,
        id_status_nin               IN BOOLEAN := TRUE,
        id_patient_in               IN comm_order_req.id_patient%TYPE DEFAULT NULL,
        id_patient_nin              IN BOOLEAN := TRUE,
        id_episode_in               IN comm_order_req.id_episode%TYPE DEFAULT NULL,
        id_episode_nin              IN BOOLEAN := TRUE,
        id_concept_type_in          IN comm_order_req.id_concept_type%TYPE DEFAULT NULL,
        id_concept_type_nin         IN BOOLEAN := TRUE,
        id_concept_version_in       IN comm_order_req.id_concept_version%TYPE DEFAULT NULL,
        id_concept_version_nin      IN BOOLEAN := TRUE,
        id_cncpt_vrs_inst_owner_in  IN comm_order_req.id_cncpt_vrs_inst_owner%TYPE DEFAULT NULL,
        id_cncpt_vrs_inst_owner_nin IN BOOLEAN := TRUE,
        id_concept_term_in          IN comm_order_req.id_concept_term%TYPE DEFAULT NULL,
        id_concept_term_nin         IN BOOLEAN := TRUE,
        id_cncpt_trm_inst_owner_in  IN comm_order_req.id_cncpt_trm_inst_owner%TYPE DEFAULT NULL,
        id_cncpt_trm_inst_owner_nin IN BOOLEAN := TRUE,
        flg_free_text_in            IN comm_order_req.flg_free_text%TYPE DEFAULT NULL,
        flg_free_text_nin           IN BOOLEAN := TRUE,
        id_prof_req_in              IN comm_order_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_req_nin             IN BOOLEAN := TRUE,
        id_inst_req_in              IN comm_order_req.id_inst_req%TYPE DEFAULT NULL,
        id_inst_req_nin             IN BOOLEAN := TRUE,
        dt_req_in                   IN comm_order_req.dt_req%TYPE DEFAULT NULL,
        dt_req_nin                  IN BOOLEAN := TRUE,
        flg_clinical_purpose_in     IN comm_order_req.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_clinical_purpose_nin    IN BOOLEAN := TRUE,
        clinical_purpose_desc_in    IN comm_order_req.clinical_purpose_desc%TYPE DEFAULT NULL,
        clinical_purpose_desc_nin   IN BOOLEAN := TRUE,
        flg_priority_in             IN comm_order_req.flg_priority%TYPE DEFAULT NULL,
        flg_priority_nin            IN BOOLEAN := TRUE,
        flg_prn_in                  IN comm_order_req.flg_prn%TYPE DEFAULT NULL,
        flg_prn_nin                 IN BOOLEAN := TRUE,
        dt_begin_in                 IN comm_order_req.dt_begin%TYPE DEFAULT NULL,
        dt_begin_nin                IN BOOLEAN := TRUE,
        id_professional_in          IN comm_order_req.id_professional%TYPE DEFAULT NULL,
        id_professional_nin         IN BOOLEAN := TRUE,
        id_institution_in           IN comm_order_req.id_institution%TYPE DEFAULT NULL,
        id_institution_nin          IN BOOLEAN := TRUE,
        dt_status_in                IN comm_order_req.dt_status%TYPE DEFAULT NULL,
        dt_status_nin               IN BOOLEAN := TRUE,
        id_cancel_reason_in         IN comm_order_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin        IN BOOLEAN := TRUE,
        create_user_in              IN comm_order_req.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN comm_order_req.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN comm_order_req.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN comm_order_req.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN comm_order_req.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN comm_order_req.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        flg_need_ack_in             IN comm_order_req.flg_need_ack%TYPE DEFAULT NULL,
        flg_need_ack_nin            IN BOOLEAN := TRUE,
        flg_action_in               IN comm_order_req.flg_action%TYPE DEFAULT NULL,
        flg_action_nin              IN BOOLEAN := TRUE,
        id_previous_status_in       IN comm_order_req.id_previous_status%TYPE DEFAULT NULL,
        id_previous_status_nin      IN BOOLEAN := TRUE,
        id_order_recurr_in          IN comm_order_req.id_order_recurr%TYPE DEFAULT NULL,
        id_order_recurr_nin         IN BOOLEAN := TRUE,
        task_duration_in            IN comm_order_req.task_duration%TYPE DEFAULT NULL,
        task_duration_nin           IN BOOLEAN := TRUE,
        id_task_type_in             IN comm_order_req.id_task_type%TYPE DEFAULT NULL,
        id_task_type_nin            IN BOOLEAN := TRUE,
        dt_last_update_tstz_in      IN comm_order_req.dt_last_update_tstz%TYPE DEFAULT NULL,
        dt_last_update_tstz_nin     IN BOOLEAN := TRUE,
        handle_error_in             IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_comm_order_req_in        => id_comm_order_req_in,
            id_workflow_in              => id_workflow_in,
            id_workflow_nin             => id_workflow_nin,
            id_status_in                => id_status_in,
            id_status_nin               => id_status_nin,
            id_patient_in               => id_patient_in,
            id_patient_nin              => id_patient_nin,
            id_episode_in               => id_episode_in,
            id_episode_nin              => id_episode_nin,
            id_concept_type_in          => id_concept_type_in,
            id_concept_type_nin         => id_concept_type_nin,
            id_concept_version_in       => id_concept_version_in,
            id_concept_version_nin      => id_concept_version_nin,
            id_cncpt_vrs_inst_owner_in  => id_cncpt_vrs_inst_owner_in,
            id_cncpt_vrs_inst_owner_nin => id_cncpt_vrs_inst_owner_nin,
            id_concept_term_in          => id_concept_term_in,
            id_concept_term_nin         => id_concept_term_nin,
            id_cncpt_trm_inst_owner_in  => id_cncpt_trm_inst_owner_in,
            id_cncpt_trm_inst_owner_nin => id_cncpt_trm_inst_owner_nin,
            flg_free_text_in            => flg_free_text_in,
            flg_free_text_nin           => flg_free_text_nin,
            id_prof_req_in              => id_prof_req_in,
            id_prof_req_nin             => id_prof_req_nin,
            id_inst_req_in              => id_inst_req_in,
            id_inst_req_nin             => id_inst_req_nin,
            dt_req_in                   => dt_req_in,
            dt_req_nin                  => dt_req_nin,
            flg_clinical_purpose_in     => flg_clinical_purpose_in,
            flg_clinical_purpose_nin    => flg_clinical_purpose_nin,
            clinical_purpose_desc_in    => clinical_purpose_desc_in,
            clinical_purpose_desc_nin   => clinical_purpose_desc_nin,
            flg_priority_in             => flg_priority_in,
            flg_priority_nin            => flg_priority_nin,
            flg_prn_in                  => flg_prn_in,
            flg_prn_nin                 => flg_prn_nin,
            dt_begin_in                 => dt_begin_in,
            dt_begin_nin                => dt_begin_nin,
            id_professional_in          => id_professional_in,
            id_professional_nin         => id_professional_nin,
            id_institution_in           => id_institution_in,
            id_institution_nin          => id_institution_nin,
            dt_status_in                => dt_status_in,
            dt_status_nin               => dt_status_nin,
            id_cancel_reason_in         => id_cancel_reason_in,
            id_cancel_reason_nin        => id_cancel_reason_nin,
            create_user_in              => create_user_in,
            create_user_nin             => create_user_nin,
            create_time_in              => create_time_in,
            create_time_nin             => create_time_nin,
            create_institution_in       => create_institution_in,
            create_institution_nin      => create_institution_nin,
            update_user_in              => update_user_in,
            update_user_nin             => update_user_nin,
            update_time_in              => update_time_in,
            update_time_nin             => update_time_nin,
            update_institution_in       => update_institution_in,
            update_institution_nin      => update_institution_nin,
            flg_need_ack_in             => flg_need_ack_in,
            flg_need_ack_nin            => flg_need_ack_nin,
            flg_action_in               => flg_action_in,
            flg_action_nin              => flg_action_nin,
            id_previous_status_in       => id_previous_status_in,
            id_previous_status_nin      => id_previous_status_nin,
            id_order_recurr_in          => id_order_recurr_in,
            id_order_recurr_nin         => id_order_recurr_nin,
            task_duration_in            => task_duration_in,
            task_duration_nin           => task_duration_nin,
            id_task_type_in             => id_task_type_in,
            id_task_type_nin            => id_task_type_nin,
            dt_last_update_tstz_in      => dt_last_update_tstz_in,
            dt_last_update_tstz_nin     => dt_last_update_tstz_nin,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_workflow_in              IN comm_order_req.id_workflow%TYPE DEFAULT NULL,
        id_workflow_nin             IN BOOLEAN := TRUE,
        id_status_in                IN comm_order_req.id_status%TYPE DEFAULT NULL,
        id_status_nin               IN BOOLEAN := TRUE,
        id_patient_in               IN comm_order_req.id_patient%TYPE DEFAULT NULL,
        id_patient_nin              IN BOOLEAN := TRUE,
        id_episode_in               IN comm_order_req.id_episode%TYPE DEFAULT NULL,
        id_episode_nin              IN BOOLEAN := TRUE,
        id_concept_type_in          IN comm_order_req.id_concept_type%TYPE DEFAULT NULL,
        id_concept_type_nin         IN BOOLEAN := TRUE,
        id_concept_version_in       IN comm_order_req.id_concept_version%TYPE DEFAULT NULL,
        id_concept_version_nin      IN BOOLEAN := TRUE,
        id_cncpt_vrs_inst_owner_in  IN comm_order_req.id_cncpt_vrs_inst_owner%TYPE DEFAULT NULL,
        id_cncpt_vrs_inst_owner_nin IN BOOLEAN := TRUE,
        id_concept_term_in          IN comm_order_req.id_concept_term%TYPE DEFAULT NULL,
        id_concept_term_nin         IN BOOLEAN := TRUE,
        id_cncpt_trm_inst_owner_in  IN comm_order_req.id_cncpt_trm_inst_owner%TYPE DEFAULT NULL,
        id_cncpt_trm_inst_owner_nin IN BOOLEAN := TRUE,
        flg_free_text_in            IN comm_order_req.flg_free_text%TYPE DEFAULT NULL,
        flg_free_text_nin           IN BOOLEAN := TRUE,
        id_prof_req_in              IN comm_order_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_req_nin             IN BOOLEAN := TRUE,
        id_inst_req_in              IN comm_order_req.id_inst_req%TYPE DEFAULT NULL,
        id_inst_req_nin             IN BOOLEAN := TRUE,
        dt_req_in                   IN comm_order_req.dt_req%TYPE DEFAULT NULL,
        dt_req_nin                  IN BOOLEAN := TRUE,
        flg_clinical_purpose_in     IN comm_order_req.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_clinical_purpose_nin    IN BOOLEAN := TRUE,
        clinical_purpose_desc_in    IN comm_order_req.clinical_purpose_desc%TYPE DEFAULT NULL,
        clinical_purpose_desc_nin   IN BOOLEAN := TRUE,
        flg_priority_in             IN comm_order_req.flg_priority%TYPE DEFAULT NULL,
        flg_priority_nin            IN BOOLEAN := TRUE,
        flg_prn_in                  IN comm_order_req.flg_prn%TYPE DEFAULT NULL,
        flg_prn_nin                 IN BOOLEAN := TRUE,
        dt_begin_in                 IN comm_order_req.dt_begin%TYPE DEFAULT NULL,
        dt_begin_nin                IN BOOLEAN := TRUE,
        id_professional_in          IN comm_order_req.id_professional%TYPE DEFAULT NULL,
        id_professional_nin         IN BOOLEAN := TRUE,
        id_institution_in           IN comm_order_req.id_institution%TYPE DEFAULT NULL,
        id_institution_nin          IN BOOLEAN := TRUE,
        dt_status_in                IN comm_order_req.dt_status%TYPE DEFAULT NULL,
        dt_status_nin               IN BOOLEAN := TRUE,
        id_cancel_reason_in         IN comm_order_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin        IN BOOLEAN := TRUE,
        create_user_in              IN comm_order_req.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN comm_order_req.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN comm_order_req.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN comm_order_req.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN comm_order_req.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN comm_order_req.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        flg_need_ack_in             IN comm_order_req.flg_need_ack%TYPE DEFAULT NULL,
        flg_need_ack_nin            IN BOOLEAN := TRUE,
        flg_action_in               IN comm_order_req.flg_action%TYPE DEFAULT NULL,
        flg_action_nin              IN BOOLEAN := TRUE,
        id_previous_status_in       IN comm_order_req.id_previous_status%TYPE DEFAULT NULL,
        id_previous_status_nin      IN BOOLEAN := TRUE,
        id_order_recurr_in          IN comm_order_req.id_order_recurr%TYPE DEFAULT NULL,
        id_order_recurr_nin         IN BOOLEAN := TRUE,
        task_duration_in            IN comm_order_req.task_duration%TYPE DEFAULT NULL,
        task_duration_nin           IN BOOLEAN := TRUE,
        id_task_type_in             IN comm_order_req.id_task_type%TYPE DEFAULT NULL,
        id_task_type_nin            IN BOOLEAN := TRUE,
        dt_last_update_tstz_in      IN comm_order_req.dt_last_update_tstz%TYPE DEFAULT NULL,
        dt_last_update_tstz_nin     IN BOOLEAN := TRUE,
        where_in                    IN VARCHAR2,
        handle_error_in             IN BOOLEAN := FALSE,
        rows_out                    IN OUT table_varchar
    ) IS
        l_sql                       VARCHAR2(32767);
        l_rows_out                  table_varchar;
        l_id_workflow_n             NUMBER(1) := sys.diutil.bool_to_int(id_workflow_nin);
        l_id_status_n               NUMBER(1) := sys.diutil.bool_to_int(id_status_nin);
        l_id_patient_n              NUMBER(1) := sys.diutil.bool_to_int(id_patient_nin);
        l_id_episode_n              NUMBER(1) := sys.diutil.bool_to_int(id_episode_nin);
        l_id_concept_type_n         NUMBER(1) := sys.diutil.bool_to_int(id_concept_type_nin);
        l_id_concept_version_n      NUMBER(1) := sys.diutil.bool_to_int(id_concept_version_nin);
        l_id_cncpt_vrs_inst_owner_n NUMBER(1) := sys.diutil.bool_to_int(id_cncpt_vrs_inst_owner_nin);
        l_id_concept_term_n         NUMBER(1) := sys.diutil.bool_to_int(id_concept_term_nin);
        l_id_cncpt_trm_inst_owner_n NUMBER(1) := sys.diutil.bool_to_int(id_cncpt_trm_inst_owner_nin);
        l_flg_free_text_n           NUMBER(1) := sys.diutil.bool_to_int(flg_free_text_nin);
        l_id_prof_req_n             NUMBER(1) := sys.diutil.bool_to_int(id_prof_req_nin);
        l_id_inst_req_n             NUMBER(1) := sys.diutil.bool_to_int(id_inst_req_nin);
        l_dt_req_n                  NUMBER(1) := sys.diutil.bool_to_int(dt_req_nin);
        l_flg_clinical_purpose_n    NUMBER(1) := sys.diutil.bool_to_int(flg_clinical_purpose_nin);
        l_clinical_purpose_desc_n   NUMBER(1) := sys.diutil.bool_to_int(clinical_purpose_desc_nin);
        l_flg_priority_n            NUMBER(1) := sys.diutil.bool_to_int(flg_priority_nin);
        l_flg_prn_n                 NUMBER(1) := sys.diutil.bool_to_int(flg_prn_nin);
        l_dt_begin_n                NUMBER(1) := sys.diutil.bool_to_int(dt_begin_nin);
        l_id_professional_n         NUMBER(1) := sys.diutil.bool_to_int(id_professional_nin);
        l_id_institution_n          NUMBER(1) := sys.diutil.bool_to_int(id_institution_nin);
        l_dt_status_n               NUMBER(1) := sys.diutil.bool_to_int(dt_status_nin);
        l_id_cancel_reason_n        NUMBER(1) := sys.diutil.bool_to_int(id_cancel_reason_nin);
        l_create_user_n             NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n             NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n      NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n             NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n             NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n      NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_flg_need_ack_n            NUMBER(1) := sys.diutil.bool_to_int(flg_need_ack_nin);
        l_flg_action_n              NUMBER(1) := sys.diutil.bool_to_int(flg_action_nin);
        l_id_previous_status_n      NUMBER(1) := sys.diutil.bool_to_int(id_previous_status_nin);
        l_id_order_recurr_n         NUMBER(1) := sys.diutil.bool_to_int(id_order_recurr_nin);
        l_task_duration_n           NUMBER(1) := sys.diutil.bool_to_int(task_duration_nin);
        l_id_task_type_n            NUMBER(1) := sys.diutil.bool_to_int(id_task_type_nin);
        l_dt_last_update_tstz_n     NUMBER(1) := sys.diutil.bool_to_int(dt_last_update_tstz_nin);
    BEGIN
        l_id_workflow_n             := sys.diutil.bool_to_int(id_workflow_nin);
        l_id_status_n               := sys.diutil.bool_to_int(id_status_nin);
        l_id_patient_n              := sys.diutil.bool_to_int(id_patient_nin);
        l_id_episode_n              := sys.diutil.bool_to_int(id_episode_nin);
        l_id_concept_type_n         := sys.diutil.bool_to_int(id_concept_type_nin);
        l_id_concept_version_n      := sys.diutil.bool_to_int(id_concept_version_nin);
        l_id_cncpt_vrs_inst_owner_n := sys.diutil.bool_to_int(id_cncpt_vrs_inst_owner_nin);
        l_id_concept_term_n         := sys.diutil.bool_to_int(id_concept_term_nin);
        l_id_cncpt_trm_inst_owner_n := sys.diutil.bool_to_int(id_cncpt_trm_inst_owner_nin);
        l_flg_free_text_n           := sys.diutil.bool_to_int(flg_free_text_nin);
        l_id_prof_req_n             := sys.diutil.bool_to_int(id_prof_req_nin);
        l_id_inst_req_n             := sys.diutil.bool_to_int(id_inst_req_nin);
        l_dt_req_n                  := sys.diutil.bool_to_int(dt_req_nin);
        l_flg_clinical_purpose_n    := sys.diutil.bool_to_int(flg_clinical_purpose_nin);
        l_clinical_purpose_desc_n   := sys.diutil.bool_to_int(clinical_purpose_desc_nin);
        l_flg_priority_n            := sys.diutil.bool_to_int(flg_priority_nin);
        l_flg_prn_n                 := sys.diutil.bool_to_int(flg_prn_nin);
        l_dt_begin_n                := sys.diutil.bool_to_int(dt_begin_nin);
        l_id_professional_n         := sys.diutil.bool_to_int(id_professional_nin);
        l_id_institution_n          := sys.diutil.bool_to_int(id_institution_nin);
        l_dt_status_n               := sys.diutil.bool_to_int(dt_status_nin);
        l_id_cancel_reason_n        := sys.diutil.bool_to_int(id_cancel_reason_nin);
        l_create_user_n             := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n             := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n      := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n             := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n             := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n      := sys.diutil.bool_to_int(update_institution_nin);
        l_flg_need_ack_n            := sys.diutil.bool_to_int(flg_need_ack_nin);
        l_flg_action_n              := sys.diutil.bool_to_int(flg_action_nin);
        l_id_previous_status_n      := sys.diutil.bool_to_int(id_previous_status_nin);
        l_id_order_recurr_n         := sys.diutil.bool_to_int(id_order_recurr_nin);
        l_task_duration_n           := sys.diutil.bool_to_int(task_duration_nin);
        l_id_task_type_n            := sys.diutil.bool_to_int(id_task_type_nin);
        l_dt_last_update_tstz_n     := sys.diutil.bool_to_int(dt_last_update_tstz_nin);
        l_sql                       := 'UPDATE comm_order_req SET' || ' ID_WORKFLOW = decode (' || l_id_workflow_n ||
                                       ',0,:ID_WORKFLOW_in, NVL (:ID_WORKFLOW_in, ID_WORKFLOW)) ' || ',' ||
                                       ' ID_STATUS = decode (' || l_id_status_n ||
                                       ',0,:ID_STATUS_in, NVL (:ID_STATUS_in, ID_STATUS)) ' || ',' ||
                                       ' ID_PATIENT = decode (' || l_id_patient_n ||
                                       ',0,:ID_PATIENT_in, NVL (:ID_PATIENT_in, ID_PATIENT)) ' || ',' ||
                                       ' ID_EPISODE = decode (' || l_id_episode_n ||
                                       ',0,:ID_EPISODE_in, NVL (:ID_EPISODE_in, ID_EPISODE)) ' || ',' ||
                                       ' ID_CONCEPT_TYPE = decode (' || l_id_concept_type_n ||
                                       ',0,:ID_CONCEPT_TYPE_in, NVL (:ID_CONCEPT_TYPE_in, ID_CONCEPT_TYPE)) ' || ',' ||
                                       ' ID_CONCEPT_VERSION = decode (' || l_id_concept_version_n ||
                                       ',0,:ID_CONCEPT_VERSION_in, NVL (:ID_CONCEPT_VERSION_in, ID_CONCEPT_VERSION)) ' || ',' ||
                                       ' ID_CNCPT_VRS_INST_OWNER = decode (' || l_id_cncpt_vrs_inst_owner_n ||
                                       ',0,:ID_CNCPT_VRS_INST_OWNER_in, NVL (:ID_CNCPT_VRS_INST_OWNER_in, ID_CNCPT_VRS_INST_OWNER)) ' || ',' ||
                                       ' ID_CONCEPT_TERM = decode (' || l_id_concept_term_n ||
                                       ',0,:ID_CONCEPT_TERM_in, NVL (:ID_CONCEPT_TERM_in, ID_CONCEPT_TERM)) ' || ',' ||
                                       ' ID_CNCPT_TRM_INST_OWNER = decode (' || l_id_cncpt_trm_inst_owner_n ||
                                       ',0,:ID_CNCPT_TRM_INST_OWNER_in, NVL (:ID_CNCPT_TRM_INST_OWNER_in, ID_CNCPT_TRM_INST_OWNER)) ' || ',' ||
                                       ' FLG_FREE_TEXT = decode (' || l_flg_free_text_n ||
                                       ',0,:FLG_FREE_TEXT_in, NVL (:FLG_FREE_TEXT_in, FLG_FREE_TEXT)) ' || ',' ||
                                       ' ID_PROF_REQ = decode (' || l_id_prof_req_n ||
                                       ',0,:ID_PROF_REQ_in, NVL (:ID_PROF_REQ_in, ID_PROF_REQ)) ' || ',' ||
                                       ' ID_INST_REQ = decode (' || l_id_inst_req_n ||
                                       ',0,:ID_INST_REQ_in, NVL (:ID_INST_REQ_in, ID_INST_REQ)) ' || ',' ||
                                       ' DT_REQ = decode (' || l_dt_req_n ||
                                       ',0,:DT_REQ_in, NVL (:DT_REQ_in, DT_REQ)) ' || ',' ||
                                       ' FLG_CLINICAL_PURPOSE = decode (' || l_flg_clinical_purpose_n ||
                                       ',0,:FLG_CLINICAL_PURPOSE_in, NVL (:FLG_CLINICAL_PURPOSE_in, FLG_CLINICAL_PURPOSE)) ' || ',' ||
                                       ' CLINICAL_PURPOSE_DESC = decode (' || l_clinical_purpose_desc_n ||
                                       ',0,:CLINICAL_PURPOSE_DESC_in, NVL (:CLINICAL_PURPOSE_DESC_in, CLINICAL_PURPOSE_DESC)) ' || ',' ||
                                       ' FLG_PRIORITY = decode (' || l_flg_priority_n ||
                                       ',0,:FLG_PRIORITY_in, NVL (:FLG_PRIORITY_in, FLG_PRIORITY)) ' || ',' ||
                                       ' FLG_PRN = decode (' || l_flg_prn_n ||
                                       ',0,:FLG_PRN_in, NVL (:FLG_PRN_in, FLG_PRN)) ' || ',' || ' DT_BEGIN = decode (' ||
                                       l_dt_begin_n || ',0,:DT_BEGIN_in, NVL (:DT_BEGIN_in, DT_BEGIN)) ' || ',' ||
                                       ' ID_PROFESSIONAL = decode (' || l_id_professional_n ||
                                       ',0,:ID_PROFESSIONAL_in, NVL (:ID_PROFESSIONAL_in, ID_PROFESSIONAL)) ' || ',' ||
                                       ' ID_INSTITUTION = decode (' || l_id_institution_n ||
                                       ',0,:ID_INSTITUTION_in, NVL (:ID_INSTITUTION_in, ID_INSTITUTION)) ' || ',' ||
                                       ' DT_STATUS = decode (' || l_dt_status_n ||
                                       ',0,:DT_STATUS_in, NVL (:DT_STATUS_in, DT_STATUS)) ' || ',' ||
                                       ' ID_CANCEL_REASON = decode (' || l_id_cancel_reason_n ||
                                       ',0,:ID_CANCEL_REASON_in, NVL (:ID_CANCEL_REASON_in, ID_CANCEL_REASON)) ' || ',' ||
                                       ' CREATE_USER = decode (' || l_create_user_n ||
                                       ',0,:CREATE_USER_in, NVL (:CREATE_USER_in, CREATE_USER)) ' || ',' ||
                                       ' CREATE_TIME = decode (' || l_create_time_n ||
                                       ',0,:CREATE_TIME_in, NVL (:CREATE_TIME_in, CREATE_TIME)) ' || ',' ||
                                       ' CREATE_INSTITUTION = decode (' || l_create_institution_n ||
                                       ',0,:CREATE_INSTITUTION_in, NVL (:CREATE_INSTITUTION_in, CREATE_INSTITUTION)) ' || ',' ||
                                       ' UPDATE_USER = decode (' || l_update_user_n ||
                                       ',0,:UPDATE_USER_in, NVL (:UPDATE_USER_in, UPDATE_USER)) ' || ',' ||
                                       ' UPDATE_TIME = decode (' || l_update_time_n ||
                                       ',0,:UPDATE_TIME_in, NVL (:UPDATE_TIME_in, UPDATE_TIME)) ' || ',' ||
                                       ' UPDATE_INSTITUTION = decode (' || l_update_institution_n ||
                                       ',0,:UPDATE_INSTITUTION_in, NVL (:UPDATE_INSTITUTION_in, UPDATE_INSTITUTION)) ' || ',' ||
                                       ' FLG_NEED_ACK = decode (' || l_flg_need_ack_n ||
                                       ',0,:FLG_NEED_ACK_in, NVL (:FLG_NEED_ACK_in, FLG_NEED_ACK)) ' || ',' ||
                                       ' FLG_ACTION = decode (' || l_flg_action_n ||
                                       ',0,:FLG_ACTION_in, NVL (:FLG_ACTION_in, FLG_ACTION)) ' || ',' ||
                                       ' ID_PREVIOUS_STATUS = decode (' || l_id_previous_status_n ||
                                       ',0,:ID_PREVIOUS_STATUS_in, NVL (:ID_PREVIOUS_STATUS_in, ID_PREVIOUS_STATUS)) ' || ',' ||
                                       ' ID_ORDER_RECURR = decode (' || l_id_order_recurr_n ||
                                       ',0,:ID_ORDER_RECURR_in, NVL (:ID_ORDER_RECURR_in, ID_ORDER_RECURR)) ' || ',' ||
                                       ' TASK_DURATION = decode (' || l_task_duration_n ||
                                       ',0,:TASK_DURATION_in, NVL (:TASK_DURATION_in, TASK_DURATION)) ' || ',' ||
                                       ' ID_TASK_TYPE = decode (' || l_id_task_type_n ||
                                       ',0,:ID_TASK_TYPE_in, NVL (:ID_TASK_TYPE_in, ID_TASK_TYPE)) ' || ',' ||
                                       ' DT_LAST_UPDATE_TSTZ = decode (' || l_dt_last_update_tstz_n ||
                                       ',0,:DT_LAST_UPDATE_TSTZ_in, NVL (:DT_LAST_UPDATE_TSTZ_in, DT_LAST_UPDATE_TSTZ)) ' ||
                                       ' where ' || nvl(where_in, '(1=1)') ||
                                       ' RETURNING ROWID BULK COLLECT INTO :l_rows_out';
        EXECUTE IMMEDIATE 'BEGIN ' || l_sql || '; END;'
            USING IN id_workflow_in, id_status_in, id_patient_in, id_episode_in, id_concept_type_in, id_concept_version_in, id_cncpt_vrs_inst_owner_in, id_concept_term_in, id_cncpt_trm_inst_owner_in, flg_free_text_in, id_prof_req_in, id_inst_req_in, dt_req_in, flg_clinical_purpose_in, clinical_purpose_desc_in, flg_priority_in, flg_prn_in, dt_begin_in, id_professional_in, id_institution_in, dt_status_in, id_cancel_reason_in, create_user_in, create_time_in, create_institution_in, update_user_in, update_time_in, update_institution_in, flg_need_ack_in, flg_action_in, id_previous_status_in, id_order_recurr_in, task_duration_in, id_task_type_in, dt_last_update_tstz_in, OUT l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_workflow_in              IN comm_order_req.id_workflow%TYPE DEFAULT NULL,
        id_workflow_nin             IN BOOLEAN := TRUE,
        id_status_in                IN comm_order_req.id_status%TYPE DEFAULT NULL,
        id_status_nin               IN BOOLEAN := TRUE,
        id_patient_in               IN comm_order_req.id_patient%TYPE DEFAULT NULL,
        id_patient_nin              IN BOOLEAN := TRUE,
        id_episode_in               IN comm_order_req.id_episode%TYPE DEFAULT NULL,
        id_episode_nin              IN BOOLEAN := TRUE,
        id_concept_type_in          IN comm_order_req.id_concept_type%TYPE DEFAULT NULL,
        id_concept_type_nin         IN BOOLEAN := TRUE,
        id_concept_version_in       IN comm_order_req.id_concept_version%TYPE DEFAULT NULL,
        id_concept_version_nin      IN BOOLEAN := TRUE,
        id_cncpt_vrs_inst_owner_in  IN comm_order_req.id_cncpt_vrs_inst_owner%TYPE DEFAULT NULL,
        id_cncpt_vrs_inst_owner_nin IN BOOLEAN := TRUE,
        id_concept_term_in          IN comm_order_req.id_concept_term%TYPE DEFAULT NULL,
        id_concept_term_nin         IN BOOLEAN := TRUE,
        id_cncpt_trm_inst_owner_in  IN comm_order_req.id_cncpt_trm_inst_owner%TYPE DEFAULT NULL,
        id_cncpt_trm_inst_owner_nin IN BOOLEAN := TRUE,
        flg_free_text_in            IN comm_order_req.flg_free_text%TYPE DEFAULT NULL,
        flg_free_text_nin           IN BOOLEAN := TRUE,
        id_prof_req_in              IN comm_order_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_req_nin             IN BOOLEAN := TRUE,
        id_inst_req_in              IN comm_order_req.id_inst_req%TYPE DEFAULT NULL,
        id_inst_req_nin             IN BOOLEAN := TRUE,
        dt_req_in                   IN comm_order_req.dt_req%TYPE DEFAULT NULL,
        dt_req_nin                  IN BOOLEAN := TRUE,
        flg_clinical_purpose_in     IN comm_order_req.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_clinical_purpose_nin    IN BOOLEAN := TRUE,
        clinical_purpose_desc_in    IN comm_order_req.clinical_purpose_desc%TYPE DEFAULT NULL,
        clinical_purpose_desc_nin   IN BOOLEAN := TRUE,
        flg_priority_in             IN comm_order_req.flg_priority%TYPE DEFAULT NULL,
        flg_priority_nin            IN BOOLEAN := TRUE,
        flg_prn_in                  IN comm_order_req.flg_prn%TYPE DEFAULT NULL,
        flg_prn_nin                 IN BOOLEAN := TRUE,
        dt_begin_in                 IN comm_order_req.dt_begin%TYPE DEFAULT NULL,
        dt_begin_nin                IN BOOLEAN := TRUE,
        id_professional_in          IN comm_order_req.id_professional%TYPE DEFAULT NULL,
        id_professional_nin         IN BOOLEAN := TRUE,
        id_institution_in           IN comm_order_req.id_institution%TYPE DEFAULT NULL,
        id_institution_nin          IN BOOLEAN := TRUE,
        dt_status_in                IN comm_order_req.dt_status%TYPE DEFAULT NULL,
        dt_status_nin               IN BOOLEAN := TRUE,
        id_cancel_reason_in         IN comm_order_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin        IN BOOLEAN := TRUE,
        create_user_in              IN comm_order_req.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN comm_order_req.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN comm_order_req.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN comm_order_req.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN comm_order_req.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN comm_order_req.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        flg_need_ack_in             IN comm_order_req.flg_need_ack%TYPE DEFAULT NULL,
        flg_need_ack_nin            IN BOOLEAN := TRUE,
        flg_action_in               IN comm_order_req.flg_action%TYPE DEFAULT NULL,
        flg_action_nin              IN BOOLEAN := TRUE,
        id_previous_status_in       IN comm_order_req.id_previous_status%TYPE DEFAULT NULL,
        id_previous_status_nin      IN BOOLEAN := TRUE,
        id_order_recurr_in          IN comm_order_req.id_order_recurr%TYPE DEFAULT NULL,
        id_order_recurr_nin         IN BOOLEAN := TRUE,
        task_duration_in            IN comm_order_req.task_duration%TYPE DEFAULT NULL,
        task_duration_nin           IN BOOLEAN := TRUE,
        id_task_type_in             IN comm_order_req.id_task_type%TYPE DEFAULT NULL,
        id_task_type_nin            IN BOOLEAN := TRUE,
        dt_last_update_tstz_in      IN comm_order_req.dt_last_update_tstz%TYPE DEFAULT NULL,
        dt_last_update_tstz_nin     IN BOOLEAN := TRUE,
        where_in                    IN VARCHAR2,
        handle_error_in             IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_workflow_in              => id_workflow_in,
            id_workflow_nin             => id_workflow_nin,
            id_status_in                => id_status_in,
            id_status_nin               => id_status_nin,
            id_patient_in               => id_patient_in,
            id_patient_nin              => id_patient_nin,
            id_episode_in               => id_episode_in,
            id_episode_nin              => id_episode_nin,
            id_concept_type_in          => id_concept_type_in,
            id_concept_type_nin         => id_concept_type_nin,
            id_concept_version_in       => id_concept_version_in,
            id_concept_version_nin      => id_concept_version_nin,
            id_cncpt_vrs_inst_owner_in  => id_cncpt_vrs_inst_owner_in,
            id_cncpt_vrs_inst_owner_nin => id_cncpt_vrs_inst_owner_nin,
            id_concept_term_in          => id_concept_term_in,
            id_concept_term_nin         => id_concept_term_nin,
            id_cncpt_trm_inst_owner_in  => id_cncpt_trm_inst_owner_in,
            id_cncpt_trm_inst_owner_nin => id_cncpt_trm_inst_owner_nin,
            flg_free_text_in            => flg_free_text_in,
            flg_free_text_nin           => flg_free_text_nin,
            id_prof_req_in              => id_prof_req_in,
            id_prof_req_nin             => id_prof_req_nin,
            id_inst_req_in              => id_inst_req_in,
            id_inst_req_nin             => id_inst_req_nin,
            dt_req_in                   => dt_req_in,
            dt_req_nin                  => dt_req_nin,
            flg_clinical_purpose_in     => flg_clinical_purpose_in,
            flg_clinical_purpose_nin    => flg_clinical_purpose_nin,
            clinical_purpose_desc_in    => clinical_purpose_desc_in,
            clinical_purpose_desc_nin   => clinical_purpose_desc_nin,
            flg_priority_in             => flg_priority_in,
            flg_priority_nin            => flg_priority_nin,
            flg_prn_in                  => flg_prn_in,
            flg_prn_nin                 => flg_prn_nin,
            dt_begin_in                 => dt_begin_in,
            dt_begin_nin                => dt_begin_nin,
            id_professional_in          => id_professional_in,
            id_professional_nin         => id_professional_nin,
            id_institution_in           => id_institution_in,
            id_institution_nin          => id_institution_nin,
            dt_status_in                => dt_status_in,
            dt_status_nin               => dt_status_nin,
            id_cancel_reason_in         => id_cancel_reason_in,
            id_cancel_reason_nin        => id_cancel_reason_nin,
            create_user_in              => create_user_in,
            create_user_nin             => create_user_nin,
            create_time_in              => create_time_in,
            create_time_nin             => create_time_nin,
            create_institution_in       => create_institution_in,
            create_institution_nin      => create_institution_nin,
            update_user_in              => update_user_in,
            update_user_nin             => update_user_nin,
            update_time_in              => update_time_in,
            update_time_nin             => update_time_nin,
            update_institution_in       => update_institution_in,
            update_institution_nin      => update_institution_nin,
            flg_need_ack_in             => flg_need_ack_in,
            flg_need_ack_nin            => flg_need_ack_nin,
            flg_action_in               => flg_action_in,
            flg_action_nin              => flg_action_nin,
            id_previous_status_in       => id_previous_status_in,
            id_previous_status_nin      => id_previous_status_nin,
            id_order_recurr_in          => id_order_recurr_in,
            id_order_recurr_nin         => id_order_recurr_nin,
            task_duration_in            => task_duration_in,
            task_duration_nin           => task_duration_nin,
            id_task_type_in             => id_task_type_in,
            id_task_type_nin            => id_task_type_nin,
            dt_last_update_tstz_in      => dt_last_update_tstz_in,
            dt_last_update_tstz_nin     => dt_last_update_tstz_nin,
            where_in                    => where_in,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END upd;

    --Update/insert columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_comm_order_req_in       IN comm_order_req.id_comm_order_req%TYPE,
        id_workflow_in             IN comm_order_req.id_workflow%TYPE DEFAULT NULL,
        id_status_in               IN comm_order_req.id_status%TYPE DEFAULT NULL,
        id_patient_in              IN comm_order_req.id_patient%TYPE DEFAULT NULL,
        id_episode_in              IN comm_order_req.id_episode%TYPE DEFAULT NULL,
        id_concept_type_in         IN comm_order_req.id_concept_type%TYPE DEFAULT NULL,
        id_concept_version_in      IN comm_order_req.id_concept_version%TYPE DEFAULT NULL,
        id_cncpt_vrs_inst_owner_in IN comm_order_req.id_cncpt_vrs_inst_owner%TYPE DEFAULT NULL,
        id_concept_term_in         IN comm_order_req.id_concept_term%TYPE DEFAULT NULL,
        id_cncpt_trm_inst_owner_in IN comm_order_req.id_cncpt_trm_inst_owner%TYPE DEFAULT NULL,
        flg_free_text_in           IN comm_order_req.flg_free_text%TYPE DEFAULT NULL,
        id_prof_req_in             IN comm_order_req.id_prof_req%TYPE DEFAULT NULL,
        id_inst_req_in             IN comm_order_req.id_inst_req%TYPE DEFAULT NULL,
        dt_req_in                  IN comm_order_req.dt_req%TYPE DEFAULT NULL,
        flg_clinical_purpose_in    IN comm_order_req.flg_clinical_purpose%TYPE DEFAULT NULL,
        clinical_purpose_desc_in   IN comm_order_req.clinical_purpose_desc%TYPE DEFAULT NULL,
        flg_priority_in            IN comm_order_req.flg_priority%TYPE DEFAULT NULL,
        flg_prn_in                 IN comm_order_req.flg_prn%TYPE DEFAULT NULL,
        dt_begin_in                IN comm_order_req.dt_begin%TYPE DEFAULT NULL,
        id_professional_in         IN comm_order_req.id_professional%TYPE DEFAULT NULL,
        id_institution_in          IN comm_order_req.id_institution%TYPE DEFAULT NULL,
        dt_status_in               IN comm_order_req.dt_status%TYPE DEFAULT NULL,
        id_cancel_reason_in        IN comm_order_req.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in             IN comm_order_req.create_user%TYPE DEFAULT NULL,
        create_time_in             IN comm_order_req.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN comm_order_req.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN comm_order_req.update_user%TYPE DEFAULT NULL,
        update_time_in             IN comm_order_req.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN comm_order_req.update_institution%TYPE DEFAULT NULL,
        flg_need_ack_in            IN comm_order_req.flg_need_ack%TYPE DEFAULT NULL,
        flg_action_in              IN comm_order_req.flg_action%TYPE DEFAULT NULL,
        id_previous_status_in      IN comm_order_req.id_previous_status%TYPE DEFAULT NULL,
        id_order_recurr_in         IN comm_order_req.id_order_recurr%TYPE DEFAULT NULL,
        task_duration_in           IN comm_order_req.task_duration%TYPE DEFAULT NULL,
        id_task_type_in            IN comm_order_req.id_task_type%TYPE DEFAULT NULL,
        dt_last_update_tstz_in     IN comm_order_req.dt_last_update_tstz%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := FALSE,
        rows_out                   IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_comm_order_req_in       => id_comm_order_req_in,
            id_workflow_in             => id_workflow_in,
            id_status_in               => id_status_in,
            id_patient_in              => id_patient_in,
            id_episode_in              => id_episode_in,
            id_concept_type_in         => id_concept_type_in,
            id_concept_version_in      => id_concept_version_in,
            id_cncpt_vrs_inst_owner_in => id_cncpt_vrs_inst_owner_in,
            id_concept_term_in         => id_concept_term_in,
            id_cncpt_trm_inst_owner_in => id_cncpt_trm_inst_owner_in,
            flg_free_text_in           => flg_free_text_in,
            id_prof_req_in             => id_prof_req_in,
            id_inst_req_in             => id_inst_req_in,
            dt_req_in                  => dt_req_in,
            flg_clinical_purpose_in    => flg_clinical_purpose_in,
            clinical_purpose_desc_in   => clinical_purpose_desc_in,
            flg_priority_in            => flg_priority_in,
            flg_prn_in                 => flg_prn_in,
            dt_begin_in                => dt_begin_in,
            id_professional_in         => id_professional_in,
            id_institution_in          => id_institution_in,
            dt_status_in               => dt_status_in,
            id_cancel_reason_in        => id_cancel_reason_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            flg_need_ack_in            => flg_need_ack_in,
            flg_action_in              => flg_action_in,
            id_previous_status_in      => id_previous_status_in,
            id_order_recurr_in         => id_order_recurr_in,
            task_duration_in           => task_duration_in,
            id_task_type_in            => id_task_type_in,
            dt_last_update_tstz_in     => dt_last_update_tstz_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
        IF SQL%ROWCOUNT = 0
        THEN
            ins(id_comm_order_req_in       => id_comm_order_req_in,
                id_workflow_in             => id_workflow_in,
                id_status_in               => id_status_in,
                id_patient_in              => id_patient_in,
                id_episode_in              => id_episode_in,
                id_concept_type_in         => id_concept_type_in,
                id_concept_version_in      => id_concept_version_in,
                id_cncpt_vrs_inst_owner_in => id_cncpt_vrs_inst_owner_in,
                id_concept_term_in         => id_concept_term_in,
                id_cncpt_trm_inst_owner_in => id_cncpt_trm_inst_owner_in,
                flg_free_text_in           => flg_free_text_in,
                id_prof_req_in             => id_prof_req_in,
                id_inst_req_in             => id_inst_req_in,
                dt_req_in                  => dt_req_in,
                flg_clinical_purpose_in    => flg_clinical_purpose_in,
                clinical_purpose_desc_in   => clinical_purpose_desc_in,
                flg_priority_in            => flg_priority_in,
                flg_prn_in                 => flg_prn_in,
                dt_begin_in                => dt_begin_in,
                id_professional_in         => id_professional_in,
                id_institution_in          => id_institution_in,
                dt_status_in               => dt_status_in,
                id_cancel_reason_in        => id_cancel_reason_in,
                create_user_in             => create_user_in,
                create_time_in             => create_time_in,
                create_institution_in      => create_institution_in,
                update_user_in             => update_user_in,
                update_time_in             => update_time_in,
                update_institution_in      => update_institution_in,
                flg_need_ack_in            => flg_need_ack_in,
                flg_action_in              => flg_action_in,
                id_previous_status_in      => id_previous_status_in,
                id_order_recurr_in         => id_order_recurr_in,
                task_duration_in           => task_duration_in,
                id_task_type_in            => id_task_type_in,
                dt_last_update_tstz_in     => dt_last_update_tstz_in,
                handle_error_in            => handle_error_in,
                rows_out                   => rows_out);
        END IF;
    END upd_ins;

    --Update/insert columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_comm_order_req_in       IN comm_order_req.id_comm_order_req%TYPE,
        id_workflow_in             IN comm_order_req.id_workflow%TYPE DEFAULT NULL,
        id_status_in               IN comm_order_req.id_status%TYPE DEFAULT NULL,
        id_patient_in              IN comm_order_req.id_patient%TYPE DEFAULT NULL,
        id_episode_in              IN comm_order_req.id_episode%TYPE DEFAULT NULL,
        id_concept_type_in         IN comm_order_req.id_concept_type%TYPE DEFAULT NULL,
        id_concept_version_in      IN comm_order_req.id_concept_version%TYPE DEFAULT NULL,
        id_cncpt_vrs_inst_owner_in IN comm_order_req.id_cncpt_vrs_inst_owner%TYPE DEFAULT NULL,
        id_concept_term_in         IN comm_order_req.id_concept_term%TYPE DEFAULT NULL,
        id_cncpt_trm_inst_owner_in IN comm_order_req.id_cncpt_trm_inst_owner%TYPE DEFAULT NULL,
        flg_free_text_in           IN comm_order_req.flg_free_text%TYPE DEFAULT NULL,
        id_prof_req_in             IN comm_order_req.id_prof_req%TYPE DEFAULT NULL,
        id_inst_req_in             IN comm_order_req.id_inst_req%TYPE DEFAULT NULL,
        dt_req_in                  IN comm_order_req.dt_req%TYPE DEFAULT NULL,
        flg_clinical_purpose_in    IN comm_order_req.flg_clinical_purpose%TYPE DEFAULT NULL,
        clinical_purpose_desc_in   IN comm_order_req.clinical_purpose_desc%TYPE DEFAULT NULL,
        flg_priority_in            IN comm_order_req.flg_priority%TYPE DEFAULT NULL,
        flg_prn_in                 IN comm_order_req.flg_prn%TYPE DEFAULT NULL,
        dt_begin_in                IN comm_order_req.dt_begin%TYPE DEFAULT NULL,
        id_professional_in         IN comm_order_req.id_professional%TYPE DEFAULT NULL,
        id_institution_in          IN comm_order_req.id_institution%TYPE DEFAULT NULL,
        dt_status_in               IN comm_order_req.dt_status%TYPE DEFAULT NULL,
        id_cancel_reason_in        IN comm_order_req.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in             IN comm_order_req.create_user%TYPE DEFAULT NULL,
        create_time_in             IN comm_order_req.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN comm_order_req.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN comm_order_req.update_user%TYPE DEFAULT NULL,
        update_time_in             IN comm_order_req.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN comm_order_req.update_institution%TYPE DEFAULT NULL,
        flg_need_ack_in            IN comm_order_req.flg_need_ack%TYPE DEFAULT NULL,
        flg_action_in              IN comm_order_req.flg_action%TYPE DEFAULT NULL,
        id_previous_status_in      IN comm_order_req.id_previous_status%TYPE DEFAULT NULL,
        id_order_recurr_in         IN comm_order_req.id_order_recurr%TYPE DEFAULT NULL,
        task_duration_in           IN comm_order_req.task_duration%TYPE DEFAULT NULL,
        id_task_type_in            IN comm_order_req.id_task_type%TYPE DEFAULT NULL,
        dt_last_update_tstz_in     IN comm_order_req.dt_last_update_tstz%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd_ins(id_comm_order_req_in,
                id_workflow_in,
                id_status_in,
                id_patient_in,
                id_episode_in,
                id_concept_type_in,
                id_concept_version_in,
                id_cncpt_vrs_inst_owner_in,
                id_concept_term_in,
                id_cncpt_trm_inst_owner_in,
                flg_free_text_in,
                id_prof_req_in,
                id_inst_req_in,
                dt_req_in,
                flg_clinical_purpose_in,
                clinical_purpose_desc_in,
                flg_priority_in,
                flg_prn_in,
                dt_begin_in,
                id_professional_in,
                id_institution_in,
                dt_status_in,
                id_cancel_reason_in,
                create_user_in,
                create_time_in,
                create_institution_in,
                update_user_in,
                update_time_in,
                update_institution_in,
                flg_need_ack_in,
                flg_action_in,
                id_previous_status_in,
                id_order_recurr_in,
                task_duration_in,
                id_task_type_in,
                dt_last_update_tstz_in,
                handle_error_in,
                rows_out);
    END upd_ins;

    --Update by record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN comm_order_req%ROWTYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_comm_order_req_in       => rec_in.id_comm_order_req,
            id_workflow_in             => rec_in.id_workflow,
            id_status_in               => rec_in.id_status,
            id_patient_in              => rec_in.id_patient,
            id_episode_in              => rec_in.id_episode,
            id_concept_type_in         => rec_in.id_concept_type,
            id_concept_version_in      => rec_in.id_concept_version,
            id_cncpt_vrs_inst_owner_in => rec_in.id_cncpt_vrs_inst_owner,
            id_concept_term_in         => rec_in.id_concept_term,
            id_cncpt_trm_inst_owner_in => rec_in.id_cncpt_trm_inst_owner,
            flg_free_text_in           => rec_in.flg_free_text,
            id_prof_req_in             => rec_in.id_prof_req,
            id_inst_req_in             => rec_in.id_inst_req,
            dt_req_in                  => rec_in.dt_req,
            flg_clinical_purpose_in    => rec_in.flg_clinical_purpose,
            clinical_purpose_desc_in   => rec_in.clinical_purpose_desc,
            flg_priority_in            => rec_in.flg_priority,
            flg_prn_in                 => rec_in.flg_prn,
            dt_begin_in                => rec_in.dt_begin,
            id_professional_in         => rec_in.id_professional,
            id_institution_in          => rec_in.id_institution,
            dt_status_in               => rec_in.dt_status,
            id_cancel_reason_in        => rec_in.id_cancel_reason,
            create_user_in             => rec_in.create_user,
            create_time_in             => rec_in.create_time,
            create_institution_in      => rec_in.create_institution,
            update_user_in             => rec_in.update_user,
            update_time_in             => rec_in.update_time,
            update_institution_in      => rec_in.update_institution,
            flg_need_ack_in            => rec_in.flg_need_ack,
            flg_action_in              => rec_in.flg_action,
            id_previous_status_in      => rec_in.id_previous_status,
            id_order_recurr_in         => rec_in.id_order_recurr,
            task_duration_in           => rec_in.task_duration,
            id_task_type_in            => rec_in.id_task_type,
            dt_last_update_tstz_in     => rec_in.dt_last_update_tstz,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END upd;

    --Update by record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN comm_order_req%ROWTYPE,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_comm_order_req_in       => rec_in.id_comm_order_req,
            id_workflow_in             => rec_in.id_workflow,
            id_status_in               => rec_in.id_status,
            id_patient_in              => rec_in.id_patient,
            id_episode_in              => rec_in.id_episode,
            id_concept_type_in         => rec_in.id_concept_type,
            id_concept_version_in      => rec_in.id_concept_version,
            id_cncpt_vrs_inst_owner_in => rec_in.id_cncpt_vrs_inst_owner,
            id_concept_term_in         => rec_in.id_concept_term,
            id_cncpt_trm_inst_owner_in => rec_in.id_cncpt_trm_inst_owner,
            flg_free_text_in           => rec_in.flg_free_text,
            id_prof_req_in             => rec_in.id_prof_req,
            id_inst_req_in             => rec_in.id_inst_req,
            dt_req_in                  => rec_in.dt_req,
            flg_clinical_purpose_in    => rec_in.flg_clinical_purpose,
            clinical_purpose_desc_in   => rec_in.clinical_purpose_desc,
            flg_priority_in            => rec_in.flg_priority,
            flg_prn_in                 => rec_in.flg_prn,
            dt_begin_in                => rec_in.dt_begin,
            id_professional_in         => rec_in.id_professional,
            id_institution_in          => rec_in.id_institution,
            dt_status_in               => rec_in.dt_status,
            id_cancel_reason_in        => rec_in.id_cancel_reason,
            create_user_in             => rec_in.create_user,
            create_time_in             => rec_in.create_time,
            create_institution_in      => rec_in.create_institution,
            update_user_in             => rec_in.update_user,
            update_time_in             => rec_in.update_time,
            update_institution_in      => rec_in.update_institution,
            flg_need_ack_in            => rec_in.flg_need_ack,
            flg_action_in              => rec_in.flg_action,
            id_previous_status_in      => rec_in.id_previous_status,
            id_order_recurr_in         => rec_in.id_order_recurr,
            task_duration_in           => rec_in.task_duration,
            id_task_type_in            => rec_in.id_task_type,
            dt_last_update_tstz_in     => rec_in.dt_last_update_tstz,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END upd;

    --Update with collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN comm_order_req_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := FALSE,
        rows_out          IN OUT table_varchar
    ) IS
        l_id_comm_order_req       id_comm_order_req_cc;
        l_id_workflow             id_workflow_cc;
        l_id_status               id_status_cc;
        l_id_patient              id_patient_cc;
        l_id_episode              id_episode_cc;
        l_id_concept_type         id_concept_type_cc;
        l_id_concept_version      id_concept_version_cc;
        l_id_cncpt_vrs_inst_owner id_cncpt_vrs_inst_owner_cc;
        l_id_concept_term         id_concept_term_cc;
        l_id_cncpt_trm_inst_owner id_cncpt_trm_inst_owner_cc;
        l_flg_free_text           flg_free_text_cc;
        l_id_prof_req             id_prof_req_cc;
        l_id_inst_req             id_inst_req_cc;
        l_dt_req                  dt_req_cc;
        l_flg_clinical_purpose    flg_clinical_purpose_cc;
        l_clinical_purpose_desc   clinical_purpose_desc_cc;
        l_flg_priority            flg_priority_cc;
        l_flg_prn                 flg_prn_cc;
        l_dt_begin                dt_begin_cc;
        l_id_professional         id_professional_cc;
        l_id_institution          id_institution_cc;
        l_dt_status               dt_status_cc;
        l_id_cancel_reason        id_cancel_reason_cc;
        l_create_user             create_user_cc;
        l_create_time             create_time_cc;
        l_create_institution      create_institution_cc;
        l_update_user             update_user_cc;
        l_update_time             update_time_cc;
        l_update_institution      update_institution_cc;
        l_flg_need_ack            flg_need_ack_cc;
        l_flg_action              flg_action_cc;
        l_id_previous_status      id_previous_status_cc;
        l_id_order_recurr         id_order_recurr_cc;
        l_task_duration           task_duration_cc;
        l_id_task_type            id_task_type_cc;
        l_dt_last_update_tstz     dt_last_update_tstz_cc;
    BEGIN
        FOR i IN col_in.first .. col_in.last
        LOOP
            l_id_comm_order_req(i) := col_in(i).id_comm_order_req;
            l_id_workflow(i) := col_in(i).id_workflow;
            l_id_status(i) := col_in(i).id_status;
            l_id_patient(i) := col_in(i).id_patient;
            l_id_episode(i) := col_in(i).id_episode;
            l_id_concept_type(i) := col_in(i).id_concept_type;
            l_id_concept_version(i) := col_in(i).id_concept_version;
            l_id_cncpt_vrs_inst_owner(i) := col_in(i).id_cncpt_vrs_inst_owner;
            l_id_concept_term(i) := col_in(i).id_concept_term;
            l_id_cncpt_trm_inst_owner(i) := col_in(i).id_cncpt_trm_inst_owner;
            l_flg_free_text(i) := col_in(i).flg_free_text;
            l_id_prof_req(i) := col_in(i).id_prof_req;
            l_id_inst_req(i) := col_in(i).id_inst_req;
            l_dt_req(i) := col_in(i).dt_req;
            l_flg_clinical_purpose(i) := col_in(i).flg_clinical_purpose;
            l_clinical_purpose_desc(i) := col_in(i).clinical_purpose_desc;
            l_flg_priority(i) := col_in(i).flg_priority;
            l_flg_prn(i) := col_in(i).flg_prn;
            l_dt_begin(i) := col_in(i).dt_begin;
            l_id_professional(i) := col_in(i).id_professional;
            l_id_institution(i) := col_in(i).id_institution;
            l_dt_status(i) := col_in(i).dt_status;
            l_id_cancel_reason(i) := col_in(i).id_cancel_reason;
            l_create_user(i) := col_in(i).create_user;
            l_create_time(i) := col_in(i).create_time;
            l_create_institution(i) := col_in(i).create_institution;
            l_update_user(i) := col_in(i).update_user;
            l_update_time(i) := col_in(i).update_time;
            l_update_institution(i) := col_in(i).update_institution;
            l_flg_need_ack(i) := col_in(i).flg_need_ack;
            l_flg_action(i) := col_in(i).flg_action;
            l_id_previous_status(i) := col_in(i).id_previous_status;
            l_id_order_recurr(i) := col_in(i).id_order_recurr;
            l_task_duration(i) := col_in(i).task_duration;
            l_id_task_type(i) := col_in(i).id_task_type;
            l_dt_last_update_tstz(i) := col_in(i).dt_last_update_tstz;
        END LOOP;
        IF nvl(ignore_if_null_in, FALSE)
        THEN
            -- Set any columns to their current values
            -- if incoming value is NULL.
            -- Put WHEN clause on column-level triggers!
            FORALL i IN col_in.first .. col_in.last
                UPDATE comm_order_req
                   SET id_workflow             = nvl(l_id_workflow(i), id_workflow),
                       id_status               = nvl(l_id_status(i), id_status),
                       id_patient              = nvl(l_id_patient(i), id_patient),
                       id_episode              = nvl(l_id_episode(i), id_episode),
                       id_concept_type         = nvl(l_id_concept_type(i), id_concept_type),
                       id_concept_version      = nvl(l_id_concept_version(i), id_concept_version),
                       id_cncpt_vrs_inst_owner = nvl(l_id_cncpt_vrs_inst_owner(i), id_cncpt_vrs_inst_owner),
                       id_concept_term         = nvl(l_id_concept_term(i), id_concept_term),
                       id_cncpt_trm_inst_owner = nvl(l_id_cncpt_trm_inst_owner(i), id_cncpt_trm_inst_owner),
                       flg_free_text           = nvl(l_flg_free_text(i), flg_free_text),
                       id_prof_req             = nvl(l_id_prof_req(i), id_prof_req),
                       id_inst_req             = nvl(l_id_inst_req(i), id_inst_req),
                       dt_req                  = nvl(l_dt_req(i), dt_req),
                       flg_clinical_purpose    = nvl(l_flg_clinical_purpose(i), flg_clinical_purpose),
                       clinical_purpose_desc   = nvl(l_clinical_purpose_desc(i), clinical_purpose_desc),
                       flg_priority            = nvl(l_flg_priority(i), flg_priority),
                       flg_prn                 = nvl(l_flg_prn(i), flg_prn),
                       dt_begin                = nvl(l_dt_begin(i), dt_begin),
                       id_professional         = nvl(l_id_professional(i), id_professional),
                       id_institution          = nvl(l_id_institution(i), id_institution),
                       dt_status               = nvl(l_dt_status(i), dt_status),
                       id_cancel_reason        = nvl(l_id_cancel_reason(i), id_cancel_reason),
                       create_user             = nvl(l_create_user(i), create_user),
                       create_time             = nvl(l_create_time(i), create_time),
                       create_institution      = nvl(l_create_institution(i), create_institution),
                       update_user             = nvl(l_update_user(i), update_user),
                       update_time             = nvl(l_update_time(i), update_time),
                       update_institution      = nvl(l_update_institution(i), update_institution),
                       flg_need_ack            = nvl(l_flg_need_ack(i), flg_need_ack),
                       flg_action              = nvl(l_flg_action(i), flg_action),
                       id_previous_status      = nvl(l_id_previous_status(i), id_previous_status),
                       id_order_recurr         = nvl(l_id_order_recurr(i), id_order_recurr),
                       task_duration           = nvl(l_task_duration(i), task_duration),
                       id_task_type            = nvl(l_id_task_type(i), id_task_type),
                       dt_last_update_tstz     = nvl(l_dt_last_update_tstz(i), dt_last_update_tstz)
                 WHERE id_comm_order_req = l_id_comm_order_req(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        ELSE
            FORALL i IN col_in.first .. col_in.last
                UPDATE comm_order_req
                   SET id_workflow             = l_id_workflow(i),
                       id_status               = l_id_status(i),
                       id_patient              = l_id_patient(i),
                       id_episode              = l_id_episode(i),
                       id_concept_type         = l_id_concept_type(i),
                       id_concept_version      = l_id_concept_version(i),
                       id_cncpt_vrs_inst_owner = l_id_cncpt_vrs_inst_owner(i),
                       id_concept_term         = l_id_concept_term(i),
                       id_cncpt_trm_inst_owner = l_id_cncpt_trm_inst_owner(i),
                       flg_free_text           = l_flg_free_text(i),
                       id_prof_req             = l_id_prof_req(i),
                       id_inst_req             = l_id_inst_req(i),
                       dt_req                  = l_dt_req(i),
                       flg_clinical_purpose    = l_flg_clinical_purpose(i),
                       clinical_purpose_desc   = l_clinical_purpose_desc(i),
                       flg_priority            = l_flg_priority(i),
                       flg_prn                 = l_flg_prn(i),
                       dt_begin                = l_dt_begin(i),
                       id_professional         = l_id_professional(i),
                       id_institution          = l_id_institution(i),
                       dt_status               = l_dt_status(i),
                       id_cancel_reason        = l_id_cancel_reason(i),
                       create_user             = l_create_user(i),
                       create_time             = l_create_time(i),
                       create_institution      = l_create_institution(i),
                       update_user             = l_update_user(i),
                       update_time             = l_update_time(i),
                       update_institution      = l_update_institution(i),
                       flg_need_ack            = l_flg_need_ack(i),
                       flg_action              = l_flg_action(i),
                       id_previous_status      = l_id_previous_status(i),
                       id_order_recurr         = l_id_order_recurr(i),
                       task_duration           = l_task_duration(i),
                       id_task_type            = l_id_task_type(i),
                       dt_last_update_tstz     = l_dt_last_update_tstz(i)
                 WHERE id_comm_order_req = l_id_comm_order_req(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update with collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN comm_order_req_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(col_in, ignore_if_null_in, handle_error_in, rows_out);
    END upd;

    --Dynamic update string
    FUNCTION dynupdstr
    (
        colname_in IN all_tab_columns.column_name%TYPE,
        where_in   IN VARCHAR2 := NULL
    ) RETURN VARCHAR2 IS
    BEGIN
        RETURN 'BEGIN UPDATE comm_order_req
SET ' || colname_in || ' = :value
 WHERE ' || nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;';
    END dynupdstr;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (with rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := FALSE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN UPDATE comm_order_req
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    END increment_onecol;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (without rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        EXECUTE IMMEDIATE 'UPDATE comm_order_req
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1');
    END increment_onecol;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_comm_order_req_in IN comm_order_req.id_comm_order_req%TYPE,
        handle_error_in      IN BOOLEAN := FALSE,
        rows_out             OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM comm_order_req
         WHERE id_comm_order_req = id_comm_order_req_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_comm_order_req_in IN comm_order_req.id_comm_order_req%TYPE,
        handle_error_in      IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del(id_comm_order_req_in => id_comm_order_req_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del;

    -- Delete all rows for this COQ_AINST_FK foreign key value
    PROCEDURE del_coq_ainst_fk
    (
        id_institution_in IN comm_order_req.id_institution%TYPE,
        handle_error_in   IN BOOLEAN := FALSE,
        rows_out          OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM comm_order_req
         WHERE id_institution = id_institution_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_coq_ainst_fk;

    -- Delete all rows for this COQ_AINST_REQ_FK foreign key value
    PROCEDURE del_coq_ainst_req_fk
    (
        id_inst_req_in  IN comm_order_req.id_inst_req%TYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM comm_order_req
         WHERE id_inst_req = id_inst_req_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_coq_ainst_req_fk;

    -- Delete all rows for this COQ_CNCPTTR_FK foreign key value
    PROCEDURE del_coq_cncpttr_fk
    (
        id_concept_term_in         IN comm_order_req.id_concept_term%TYPE,
        id_cncpt_trm_inst_owner_in IN comm_order_req.id_cncpt_trm_inst_owner%TYPE,
        handle_error_in            IN BOOLEAN := FALSE,
        rows_out                   OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM comm_order_req
         WHERE id_concept_term = id_concept_term_in
           AND id_cncpt_trm_inst_owner = id_cncpt_trm_inst_owner_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_coq_cncpttr_fk;

    -- Delete all rows for this COQ_CNCPTTY_FK foreign key value
    PROCEDURE del_coq_cncptty_fk
    (
        id_concept_type_in IN comm_order_req.id_concept_type%TYPE,
        handle_error_in    IN BOOLEAN := FALSE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM comm_order_req
         WHERE id_concept_type = id_concept_type_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_coq_cncptty_fk;

    -- Delete all rows for this COQ_CNCPTV_FK foreign key value
    PROCEDURE del_coq_cncptv_fk
    (
        id_concept_version_in      IN comm_order_req.id_concept_version%TYPE,
        id_cncpt_vrs_inst_owner_in IN comm_order_req.id_cncpt_vrs_inst_owner%TYPE,
        handle_error_in            IN BOOLEAN := FALSE,
        rows_out                   OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM comm_order_req
         WHERE id_concept_version = id_concept_version_in
           AND id_cncpt_vrs_inst_owner = id_cncpt_vrs_inst_owner_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_coq_cncptv_fk;

    -- Delete all rows for this COQ_CRE_FK foreign key value
    PROCEDURE del_coq_cre_fk
    (
        id_cancel_reason_in IN comm_order_req.id_cancel_reason%TYPE,
        handle_error_in     IN BOOLEAN := FALSE,
        rows_out            OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM comm_order_req
         WHERE id_cancel_reason = id_cancel_reason_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_coq_cre_fk;

    -- Delete all rows for this COQ_EPIS_FK foreign key value
    PROCEDURE del_coq_epis_fk
    (
        id_episode_in   IN comm_order_req.id_episode%TYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM comm_order_req
         WHERE id_episode = id_episode_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_coq_epis_fk;

    -- Delete all rows for this COQ_PAT_FK foreign key value
    PROCEDURE del_coq_pat_fk
    (
        id_patient_in   IN comm_order_req.id_patient%TYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM comm_order_req
         WHERE id_patient = id_patient_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_coq_pat_fk;

    -- Delete all rows for this COQ_PROF_FK foreign key value
    PROCEDURE del_coq_prof_fk
    (
        id_professional_in IN comm_order_req.id_professional%TYPE,
        handle_error_in    IN BOOLEAN := FALSE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM comm_order_req
         WHERE id_professional = id_professional_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_coq_prof_fk;

    -- Delete all rows for this COQ_PROF_REQ_FK foreign key value
    PROCEDURE del_coq_prof_req_fk
    (
        id_prof_req_in  IN comm_order_req.id_prof_req%TYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM comm_order_req
         WHERE id_prof_req = id_prof_req_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_coq_prof_req_fk;

    -- Delete all rows for this COQ_WSW_FK foreign key value
    PROCEDURE del_coq_wsw_fk
    (
        id_workflow_in  IN comm_order_req.id_workflow%TYPE,
        id_status_in    IN comm_order_req.id_status%TYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM comm_order_req
         WHERE id_workflow = id_workflow_in
           AND id_status = id_status_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_coq_wsw_fk;

    -- Delete all rows for this COQ_WSW_STS_PREV_FK foreign key value
    PROCEDURE del_coq_wsw_sts_prev_fk
    (
        id_workflow_in        IN comm_order_req.id_workflow%TYPE,
        id_previous_status_in IN comm_order_req.id_previous_status%TYPE,
        handle_error_in       IN BOOLEAN := FALSE,
        rows_out              OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM comm_order_req
         WHERE id_workflow = id_workflow_in
           AND id_previous_status = id_previous_status_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_coq_wsw_sts_prev_fk;

    -- Delete all rows for this COQ_AINST_FK foreign key value
    PROCEDURE del_coq_ainst_fk
    (
        id_institution_in IN comm_order_req.id_institution%TYPE,
        handle_error_in   IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_coq_ainst_fk(id_institution_in => id_institution_in,
                         handle_error_in   => handle_error_in,
                         rows_out          => rows_out);
    END del_coq_ainst_fk;

    -- Delete all rows for this COQ_AINST_REQ_FK foreign key value
    PROCEDURE del_coq_ainst_req_fk
    (
        id_inst_req_in  IN comm_order_req.id_inst_req%TYPE,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_coq_ainst_req_fk(id_inst_req_in  => id_inst_req_in,
                             handle_error_in => handle_error_in,
                             rows_out        => rows_out);
    END del_coq_ainst_req_fk;

    -- Delete all rows for this COQ_CNCPTTR_FK foreign key value
    PROCEDURE del_coq_cncpttr_fk
    (
        id_concept_term_in         IN comm_order_req.id_concept_term%TYPE,
        id_cncpt_trm_inst_owner_in IN comm_order_req.id_cncpt_trm_inst_owner%TYPE,
        handle_error_in            IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_coq_cncpttr_fk(id_concept_term_in         => id_concept_term_in,
                           id_cncpt_trm_inst_owner_in => id_cncpt_trm_inst_owner_in,
                           handle_error_in            => handle_error_in,
                           rows_out                   => rows_out);
    END del_coq_cncpttr_fk;

    -- Delete all rows for this COQ_CNCPTTY_FK foreign key value
    PROCEDURE del_coq_cncptty_fk
    (
        id_concept_type_in IN comm_order_req.id_concept_type%TYPE,
        handle_error_in    IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_coq_cncptty_fk(id_concept_type_in => id_concept_type_in,
                           handle_error_in    => handle_error_in,
                           rows_out           => rows_out);
    END del_coq_cncptty_fk;

    -- Delete all rows for this COQ_CNCPTV_FK foreign key value
    PROCEDURE del_coq_cncptv_fk
    (
        id_concept_version_in      IN comm_order_req.id_concept_version%TYPE,
        id_cncpt_vrs_inst_owner_in IN comm_order_req.id_cncpt_vrs_inst_owner%TYPE,
        handle_error_in            IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_coq_cncptv_fk(id_concept_version_in      => id_concept_version_in,
                          id_cncpt_vrs_inst_owner_in => id_cncpt_vrs_inst_owner_in,
                          handle_error_in            => handle_error_in,
                          rows_out                   => rows_out);
    END del_coq_cncptv_fk;

    -- Delete all rows for this COQ_CRE_FK foreign key value
    PROCEDURE del_coq_cre_fk
    (
        id_cancel_reason_in IN comm_order_req.id_cancel_reason%TYPE,
        handle_error_in     IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_coq_cre_fk(id_cancel_reason_in => id_cancel_reason_in,
                       handle_error_in     => handle_error_in,
                       rows_out            => rows_out);
    END del_coq_cre_fk;

    -- Delete all rows for this COQ_EPIS_FK foreign key value
    PROCEDURE del_coq_epis_fk
    (
        id_episode_in   IN comm_order_req.id_episode%TYPE,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_coq_epis_fk(id_episode_in => id_episode_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_coq_epis_fk;

    -- Delete all rows for this COQ_PAT_FK foreign key value
    PROCEDURE del_coq_pat_fk
    (
        id_patient_in   IN comm_order_req.id_patient%TYPE,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_coq_pat_fk(id_patient_in => id_patient_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_coq_pat_fk;

    -- Delete all rows for this COQ_PROF_FK foreign key value
    PROCEDURE del_coq_prof_fk
    (
        id_professional_in IN comm_order_req.id_professional%TYPE,
        handle_error_in    IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_coq_prof_fk(id_professional_in => id_professional_in,
                        handle_error_in    => handle_error_in,
                        rows_out           => rows_out);
    END del_coq_prof_fk;

    -- Delete all rows for this COQ_PROF_REQ_FK foreign key value
    PROCEDURE del_coq_prof_req_fk
    (
        id_prof_req_in  IN comm_order_req.id_prof_req%TYPE,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_coq_prof_req_fk(id_prof_req_in => id_prof_req_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_coq_prof_req_fk;

    -- Delete all rows for this COQ_WSW_FK foreign key value
    PROCEDURE del_coq_wsw_fk
    (
        id_workflow_in  IN comm_order_req.id_workflow%TYPE,
        id_status_in    IN comm_order_req.id_status%TYPE,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_coq_wsw_fk(id_workflow_in  => id_workflow_in,
                       id_status_in    => id_status_in,
                       handle_error_in => handle_error_in,
                       rows_out        => rows_out);
    END del_coq_wsw_fk;

    -- Delete all rows for this COQ_WSW_STS_PREV_FK foreign key value
    PROCEDURE del_coq_wsw_sts_prev_fk
    (
        id_workflow_in        IN comm_order_req.id_workflow%TYPE,
        id_previous_status_in IN comm_order_req.id_previous_status%TYPE,
        handle_error_in       IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_coq_wsw_sts_prev_fk(id_workflow_in        => id_workflow_in,
                                id_previous_status_in => id_previous_status_in,
                                handle_error_in       => handle_error_in,
                                rows_out              => rows_out);
    END del_coq_wsw_sts_prev_fk;

    -- Deletions using dynamic SQL
    FUNCTION dyndelstr(where_in IN VARCHAR2) RETURN VARCHAR2 IS
    BEGIN
        IF where_in IS NULL
        THEN
            RETURN 'DELETE FROM comm_order_req';
        ELSE
            RETURN 'DELETE FROM comm_order_req WHERE ' || where_in;
        END IF;
    END dyndelstr;
    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyndelstr(where_clause_in) ||
                          ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyndelstr(where_clause_in);
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(comm_order_req_inout IN OUT comm_order_req%ROWTYPE) IS
    BEGIN
        comm_order_req_inout.id_comm_order_req       := NULL;
        comm_order_req_inout.id_workflow             := NULL;
        comm_order_req_inout.id_status               := NULL;
        comm_order_req_inout.id_patient              := NULL;
        comm_order_req_inout.id_episode              := NULL;
        comm_order_req_inout.id_concept_type         := NULL;
        comm_order_req_inout.id_concept_version      := NULL;
        comm_order_req_inout.id_cncpt_vrs_inst_owner := NULL;
        comm_order_req_inout.id_concept_term         := NULL;
        comm_order_req_inout.id_cncpt_trm_inst_owner := NULL;
        comm_order_req_inout.flg_free_text           := NULL;
        comm_order_req_inout.id_prof_req             := NULL;
        comm_order_req_inout.id_inst_req             := NULL;
        comm_order_req_inout.dt_req                  := NULL;
        comm_order_req_inout.flg_clinical_purpose    := NULL;
        comm_order_req_inout.clinical_purpose_desc   := NULL;
        comm_order_req_inout.flg_priority            := NULL;
        comm_order_req_inout.flg_prn                 := NULL;
        comm_order_req_inout.dt_begin                := NULL;
        comm_order_req_inout.id_professional         := NULL;
        comm_order_req_inout.id_institution          := NULL;
        comm_order_req_inout.dt_status               := NULL;
        comm_order_req_inout.id_cancel_reason        := NULL;
        comm_order_req_inout.create_user             := NULL;
        comm_order_req_inout.create_time             := NULL;
        comm_order_req_inout.create_institution      := NULL;
        comm_order_req_inout.update_user             := NULL;
        comm_order_req_inout.update_time             := NULL;
        comm_order_req_inout.update_institution      := NULL;
        comm_order_req_inout.flg_need_ack            := NULL;
        comm_order_req_inout.flg_action              := NULL;
        comm_order_req_inout.id_previous_status      := NULL;
        comm_order_req_inout.id_order_recurr         := NULL;
        comm_order_req_inout.task_duration           := NULL;
        comm_order_req_inout.id_task_type            := NULL;
        comm_order_req_inout.dt_last_update_tstz     := NULL;
    END initrec;

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN comm_order_req%ROWTYPE IS
        l_comm_order_req comm_order_req%ROWTYPE;
    BEGIN
        RETURN l_comm_order_req;
    END initrec;

    --get data from rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN comm_order_req_tc IS
        data comm_order_req_tc;
    BEGIN
        SELECT *
          BULK COLLECT
          INTO data
          FROM comm_order_req
         WHERE ROWID IN (SELECT /*+ OPT_ESTIMATE(TABLE t ROWS=1) */
                          *
                           FROM TABLE(rows_in) t);
        RETURN data;
    END get_data_rowid;

    --get data from rowid (pragma autonomous transacion)
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN comm_order_req_tc IS
        data comm_order_req_tc;
        PRAGMA AUTONOMOUS_TRANSACTION;
    BEGIN
        data := get_data_rowid(rows_in);
        COMMIT;
        RETURN data;
    
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'get_data_rowid_pat');
            ROLLBACK;
        
    END get_data_rowid_pat;

BEGIN
    NULL;
END ts_comm_order_req;
/
