/*-- Last Change Revision: $Rev: 2028028 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:43:59 +0100 (ter, 02 ago 2022) $*/
CREATE OR REPLACE PACKAGE BODY ts_drug_req
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2021-01-28 15:55:08
| Created By: ALERT
*/
 IS

    e_null_column_value EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_null_column_value, -1400);

    e_existing_fky_reference EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_existing_fky_reference, -2266);

    e_check_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_check_constraint_failure, -2290);

    e_no_parent_key EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_no_parent_key, -2291);

    e_child_record_found EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_child_record_found, -2292);

    e_forall_error EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_forall_error, -24381);

    -- Defined for backward compatibilty.
    e_integ_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_integ_constraint_failure, -2291);

    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN drug_req.id_drug_req%TYPE IS
        retval drug_req.id_drug_req%TYPE;
    BEGIN
        IF sequence_in IS NULL
        THEN
            retval := seq_drug_req.nextval;
        ELSE
            EXECUTE IMMEDIATE 'SELECT ' || sequence_in || '.NEXTVAL FROM dual'
                INTO retval;
        END IF;
        RETURN retval;
    END next_key;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        notes_req_in           IN drug_req.notes_req%TYPE DEFAULT NULL,
        id_episode_in          IN drug_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in         IN drug_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN drug_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in        IN drug_req.notes_cancel%TYPE DEFAULT NULL,
        flg_status_in          IN drug_req.flg_status%TYPE DEFAULT NULL,
        id_room_in             IN drug_req.id_room%TYPE DEFAULT NULL,
        flg_type_in            IN drug_req.flg_type%TYPE DEFAULT NULL,
        flg_sub_type_in        IN drug_req.flg_sub_type%TYPE DEFAULT NULL,
        flg_print_type_in      IN drug_req.flg_print_type%TYPE DEFAULT NULL,
        id_prof_print_in       IN drug_req.id_prof_print%TYPE DEFAULT NULL,
        id_prof_pending_in     IN drug_req.id_prof_pending%TYPE DEFAULT NULL,
        notes_pending_in       IN drug_req.notes_pending%TYPE DEFAULT NULL,
        id_unidose_car_in      IN drug_req.id_unidose_car%TYPE DEFAULT NULL,
        id_patient_in          IN drug_req.id_patient%TYPE DEFAULT NULL,
        dt_drug_req_tstz_in    IN drug_req.dt_drug_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in       IN drug_req.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in      IN drug_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_pending_tstz_in     IN drug_req.dt_pending_tstz%TYPE DEFAULT NULL,
        dt_print_tstz_in       IN drug_req.dt_print_tstz%TYPE DEFAULT NULL,
        dt_unidose_car_tstz_in IN drug_req.dt_unidose_car_tstz%TYPE DEFAULT NULL,
        id_prev_episode_in     IN drug_req.id_prev_episode%TYPE DEFAULT NULL,
        create_user_in         IN drug_req.create_user%TYPE DEFAULT NULL,
        create_time_in         IN drug_req.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN drug_req.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN drug_req.update_user%TYPE DEFAULT NULL,
        update_time_in         IN drug_req.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN drug_req.update_institution%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_pky drug_req.id_drug_req%TYPE := next_key;
    BEGIN
        ins(id_drug_req_in         => l_pky,
            notes_req_in           => notes_req_in,
            id_episode_in          => id_episode_in,
            id_prof_req_in         => id_prof_req_in,
            id_prof_cancel_in      => id_prof_cancel_in,
            notes_cancel_in        => notes_cancel_in,
            flg_status_in          => flg_status_in,
            id_room_in             => id_room_in,
            flg_type_in            => flg_type_in,
            flg_sub_type_in        => flg_sub_type_in,
            flg_print_type_in      => flg_print_type_in,
            id_prof_print_in       => id_prof_print_in,
            id_prof_pending_in     => id_prof_pending_in,
            notes_pending_in       => notes_pending_in,
            id_unidose_car_in      => id_unidose_car_in,
            id_patient_in          => id_patient_in,
            dt_drug_req_tstz_in    => dt_drug_req_tstz_in,
            dt_begin_tstz_in       => dt_begin_tstz_in,
            dt_cancel_tstz_in      => dt_cancel_tstz_in,
            dt_pending_tstz_in     => dt_pending_tstz_in,
            dt_print_tstz_in       => dt_print_tstz_in,
            dt_unidose_car_tstz_in => dt_unidose_car_tstz_in,
            id_prev_episode_in     => id_prev_episode_in,
            create_user_in         => create_user_in,
            create_time_in         => create_time_in,
            create_institution_in  => create_institution_in,
            update_user_in         => update_user_in,
            update_time_in         => update_time_in,
            update_institution_in  => update_institution_in,
            handle_error_in        => handle_error_in,
            rows_out               => rows_out);
    END ins;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        notes_req_in           IN drug_req.notes_req%TYPE DEFAULT NULL,
        id_episode_in          IN drug_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in         IN drug_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN drug_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in        IN drug_req.notes_cancel%TYPE DEFAULT NULL,
        flg_status_in          IN drug_req.flg_status%TYPE DEFAULT NULL,
        id_room_in             IN drug_req.id_room%TYPE DEFAULT NULL,
        flg_type_in            IN drug_req.flg_type%TYPE DEFAULT NULL,
        flg_sub_type_in        IN drug_req.flg_sub_type%TYPE DEFAULT NULL,
        flg_print_type_in      IN drug_req.flg_print_type%TYPE DEFAULT NULL,
        id_prof_print_in       IN drug_req.id_prof_print%TYPE DEFAULT NULL,
        id_prof_pending_in     IN drug_req.id_prof_pending%TYPE DEFAULT NULL,
        notes_pending_in       IN drug_req.notes_pending%TYPE DEFAULT NULL,
        id_unidose_car_in      IN drug_req.id_unidose_car%TYPE DEFAULT NULL,
        id_patient_in          IN drug_req.id_patient%TYPE DEFAULT NULL,
        dt_drug_req_tstz_in    IN drug_req.dt_drug_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in       IN drug_req.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in      IN drug_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_pending_tstz_in     IN drug_req.dt_pending_tstz%TYPE DEFAULT NULL,
        dt_print_tstz_in       IN drug_req.dt_print_tstz%TYPE DEFAULT NULL,
        dt_unidose_car_tstz_in IN drug_req.dt_unidose_car_tstz%TYPE DEFAULT NULL,
        id_prev_episode_in     IN drug_req.id_prev_episode%TYPE DEFAULT NULL,
        create_user_in         IN drug_req.create_user%TYPE DEFAULT NULL,
        create_time_in         IN drug_req.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN drug_req.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN drug_req.update_user%TYPE DEFAULT NULL,
        update_time_in         IN drug_req.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN drug_req.update_institution%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(notes_req_in           => notes_req_in,
            id_episode_in          => id_episode_in,
            id_prof_req_in         => id_prof_req_in,
            id_prof_cancel_in      => id_prof_cancel_in,
            notes_cancel_in        => notes_cancel_in,
            flg_status_in          => flg_status_in,
            id_room_in             => id_room_in,
            flg_type_in            => flg_type_in,
            flg_sub_type_in        => flg_sub_type_in,
            flg_print_type_in      => flg_print_type_in,
            id_prof_print_in       => id_prof_print_in,
            id_prof_pending_in     => id_prof_pending_in,
            notes_pending_in       => notes_pending_in,
            id_unidose_car_in      => id_unidose_car_in,
            id_patient_in          => id_patient_in,
            dt_drug_req_tstz_in    => dt_drug_req_tstz_in,
            dt_begin_tstz_in       => dt_begin_tstz_in,
            dt_cancel_tstz_in      => dt_cancel_tstz_in,
            dt_pending_tstz_in     => dt_pending_tstz_in,
            dt_print_tstz_in       => dt_print_tstz_in,
            dt_unidose_car_tstz_in => dt_unidose_car_tstz_in,
            id_prev_episode_in     => id_prev_episode_in,
            create_user_in         => create_user_in,
            create_time_in         => create_time_in,
            create_institution_in  => create_institution_in,
            update_user_in         => update_user_in,
            update_time_in         => update_time_in,
            update_institution_in  => update_institution_in,
            handle_error_in        => handle_error_in,
            rows_out               => rows_out);
    END ins;

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        notes_req_in           IN drug_req.notes_req%TYPE DEFAULT NULL,
        id_episode_in          IN drug_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in         IN drug_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN drug_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in        IN drug_req.notes_cancel%TYPE DEFAULT NULL,
        flg_status_in          IN drug_req.flg_status%TYPE DEFAULT NULL,
        id_room_in             IN drug_req.id_room%TYPE DEFAULT NULL,
        flg_type_in            IN drug_req.flg_type%TYPE DEFAULT NULL,
        flg_sub_type_in        IN drug_req.flg_sub_type%TYPE DEFAULT NULL,
        flg_print_type_in      IN drug_req.flg_print_type%TYPE DEFAULT NULL,
        id_prof_print_in       IN drug_req.id_prof_print%TYPE DEFAULT NULL,
        id_prof_pending_in     IN drug_req.id_prof_pending%TYPE DEFAULT NULL,
        notes_pending_in       IN drug_req.notes_pending%TYPE DEFAULT NULL,
        id_unidose_car_in      IN drug_req.id_unidose_car%TYPE DEFAULT NULL,
        id_patient_in          IN drug_req.id_patient%TYPE DEFAULT NULL,
        dt_drug_req_tstz_in    IN drug_req.dt_drug_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in       IN drug_req.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in      IN drug_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_pending_tstz_in     IN drug_req.dt_pending_tstz%TYPE DEFAULT NULL,
        dt_print_tstz_in       IN drug_req.dt_print_tstz%TYPE DEFAULT NULL,
        dt_unidose_car_tstz_in IN drug_req.dt_unidose_car_tstz%TYPE DEFAULT NULL,
        id_prev_episode_in     IN drug_req.id_prev_episode%TYPE DEFAULT NULL,
        create_user_in         IN drug_req.create_user%TYPE DEFAULT NULL,
        create_time_in         IN drug_req.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN drug_req.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN drug_req.update_user%TYPE DEFAULT NULL,
        update_time_in         IN drug_req.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN drug_req.update_institution%TYPE DEFAULT NULL,
        id_drug_req_out        IN OUT drug_req.id_drug_req%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_pky drug_req.id_drug_req%TYPE := next_key;
    BEGIN
        ins(id_drug_req_in         => l_pky,
            notes_req_in           => notes_req_in,
            id_episode_in          => id_episode_in,
            id_prof_req_in         => id_prof_req_in,
            id_prof_cancel_in      => id_prof_cancel_in,
            notes_cancel_in        => notes_cancel_in,
            flg_status_in          => flg_status_in,
            id_room_in             => id_room_in,
            flg_type_in            => flg_type_in,
            flg_sub_type_in        => flg_sub_type_in,
            flg_print_type_in      => flg_print_type_in,
            id_prof_print_in       => id_prof_print_in,
            id_prof_pending_in     => id_prof_pending_in,
            notes_pending_in       => notes_pending_in,
            id_unidose_car_in      => id_unidose_car_in,
            id_patient_in          => id_patient_in,
            dt_drug_req_tstz_in    => dt_drug_req_tstz_in,
            dt_begin_tstz_in       => dt_begin_tstz_in,
            dt_cancel_tstz_in      => dt_cancel_tstz_in,
            dt_pending_tstz_in     => dt_pending_tstz_in,
            dt_print_tstz_in       => dt_print_tstz_in,
            dt_unidose_car_tstz_in => dt_unidose_car_tstz_in,
            id_prev_episode_in     => id_prev_episode_in,
            create_user_in         => create_user_in,
            create_time_in         => create_time_in,
            create_institution_in  => create_institution_in,
            update_user_in         => update_user_in,
            update_time_in         => update_time_in,
            update_institution_in  => update_institution_in,
            handle_error_in        => handle_error_in,
            rows_out               => rows_out);
        id_drug_req_out := l_pky;
    END ins;

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        notes_req_in           IN drug_req.notes_req%TYPE DEFAULT NULL,
        id_episode_in          IN drug_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in         IN drug_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN drug_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in        IN drug_req.notes_cancel%TYPE DEFAULT NULL,
        flg_status_in          IN drug_req.flg_status%TYPE DEFAULT NULL,
        id_room_in             IN drug_req.id_room%TYPE DEFAULT NULL,
        flg_type_in            IN drug_req.flg_type%TYPE DEFAULT NULL,
        flg_sub_type_in        IN drug_req.flg_sub_type%TYPE DEFAULT NULL,
        flg_print_type_in      IN drug_req.flg_print_type%TYPE DEFAULT NULL,
        id_prof_print_in       IN drug_req.id_prof_print%TYPE DEFAULT NULL,
        id_prof_pending_in     IN drug_req.id_prof_pending%TYPE DEFAULT NULL,
        notes_pending_in       IN drug_req.notes_pending%TYPE DEFAULT NULL,
        id_unidose_car_in      IN drug_req.id_unidose_car%TYPE DEFAULT NULL,
        id_patient_in          IN drug_req.id_patient%TYPE DEFAULT NULL,
        dt_drug_req_tstz_in    IN drug_req.dt_drug_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in       IN drug_req.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in      IN drug_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_pending_tstz_in     IN drug_req.dt_pending_tstz%TYPE DEFAULT NULL,
        dt_print_tstz_in       IN drug_req.dt_print_tstz%TYPE DEFAULT NULL,
        dt_unidose_car_tstz_in IN drug_req.dt_unidose_car_tstz%TYPE DEFAULT NULL,
        id_prev_episode_in     IN drug_req.id_prev_episode%TYPE DEFAULT NULL,
        create_user_in         IN drug_req.create_user%TYPE DEFAULT NULL,
        create_time_in         IN drug_req.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN drug_req.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN drug_req.update_user%TYPE DEFAULT NULL,
        update_time_in         IN drug_req.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN drug_req.update_institution%TYPE DEFAULT NULL,
        id_drug_req_out        IN OUT drug_req.id_drug_req%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(notes_req_in           => notes_req_in,
            id_episode_in          => id_episode_in,
            id_prof_req_in         => id_prof_req_in,
            id_prof_cancel_in      => id_prof_cancel_in,
            notes_cancel_in        => notes_cancel_in,
            flg_status_in          => flg_status_in,
            id_room_in             => id_room_in,
            flg_type_in            => flg_type_in,
            flg_sub_type_in        => flg_sub_type_in,
            flg_print_type_in      => flg_print_type_in,
            id_prof_print_in       => id_prof_print_in,
            id_prof_pending_in     => id_prof_pending_in,
            notes_pending_in       => notes_pending_in,
            id_unidose_car_in      => id_unidose_car_in,
            id_patient_in          => id_patient_in,
            dt_drug_req_tstz_in    => dt_drug_req_tstz_in,
            dt_begin_tstz_in       => dt_begin_tstz_in,
            dt_cancel_tstz_in      => dt_cancel_tstz_in,
            dt_pending_tstz_in     => dt_pending_tstz_in,
            dt_print_tstz_in       => dt_print_tstz_in,
            dt_unidose_car_tstz_in => dt_unidose_car_tstz_in,
            id_prev_episode_in     => id_prev_episode_in,
            create_user_in         => create_user_in,
            create_time_in         => create_time_in,
            create_institution_in  => create_institution_in,
            update_user_in         => update_user_in,
            update_time_in         => update_time_in,
            update_institution_in  => update_institution_in,
            id_drug_req_out        => id_drug_req_out,
            handle_error_in        => handle_error_in,
            rows_out               => rows_out);
    END ins;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        notes_req_in           IN drug_req.notes_req%TYPE DEFAULT NULL,
        id_episode_in          IN drug_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in         IN drug_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN drug_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in        IN drug_req.notes_cancel%TYPE DEFAULT NULL,
        flg_status_in          IN drug_req.flg_status%TYPE DEFAULT NULL,
        id_room_in             IN drug_req.id_room%TYPE DEFAULT NULL,
        flg_type_in            IN drug_req.flg_type%TYPE DEFAULT NULL,
        flg_sub_type_in        IN drug_req.flg_sub_type%TYPE DEFAULT NULL,
        flg_print_type_in      IN drug_req.flg_print_type%TYPE DEFAULT NULL,
        id_prof_print_in       IN drug_req.id_prof_print%TYPE DEFAULT NULL,
        id_prof_pending_in     IN drug_req.id_prof_pending%TYPE DEFAULT NULL,
        notes_pending_in       IN drug_req.notes_pending%TYPE DEFAULT NULL,
        id_unidose_car_in      IN drug_req.id_unidose_car%TYPE DEFAULT NULL,
        id_patient_in          IN drug_req.id_patient%TYPE DEFAULT NULL,
        dt_drug_req_tstz_in    IN drug_req.dt_drug_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in       IN drug_req.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in      IN drug_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_pending_tstz_in     IN drug_req.dt_pending_tstz%TYPE DEFAULT NULL,
        dt_print_tstz_in       IN drug_req.dt_print_tstz%TYPE DEFAULT NULL,
        dt_unidose_car_tstz_in IN drug_req.dt_unidose_car_tstz%TYPE DEFAULT NULL,
        id_prev_episode_in     IN drug_req.id_prev_episode%TYPE DEFAULT NULL,
        create_user_in         IN drug_req.create_user%TYPE DEFAULT NULL,
        create_time_in         IN drug_req.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN drug_req.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN drug_req.update_user%TYPE DEFAULT NULL,
        update_time_in         IN drug_req.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN drug_req.update_institution%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN drug_req.id_drug_req%TYPE IS
        l_pky drug_req.id_drug_req%TYPE := next_key;
    BEGIN
        ins(id_drug_req_in         => l_pky,
            notes_req_in           => notes_req_in,
            id_episode_in          => id_episode_in,
            id_prof_req_in         => id_prof_req_in,
            id_prof_cancel_in      => id_prof_cancel_in,
            notes_cancel_in        => notes_cancel_in,
            flg_status_in          => flg_status_in,
            id_room_in             => id_room_in,
            flg_type_in            => flg_type_in,
            flg_sub_type_in        => flg_sub_type_in,
            flg_print_type_in      => flg_print_type_in,
            id_prof_print_in       => id_prof_print_in,
            id_prof_pending_in     => id_prof_pending_in,
            notes_pending_in       => notes_pending_in,
            id_unidose_car_in      => id_unidose_car_in,
            id_patient_in          => id_patient_in,
            dt_drug_req_tstz_in    => dt_drug_req_tstz_in,
            dt_begin_tstz_in       => dt_begin_tstz_in,
            dt_cancel_tstz_in      => dt_cancel_tstz_in,
            dt_pending_tstz_in     => dt_pending_tstz_in,
            dt_print_tstz_in       => dt_print_tstz_in,
            dt_unidose_car_tstz_in => dt_unidose_car_tstz_in,
            id_prev_episode_in     => id_prev_episode_in,
            create_user_in         => create_user_in,
            create_time_in         => create_time_in,
            create_institution_in  => create_institution_in,
            update_user_in         => update_user_in,
            update_time_in         => update_time_in,
            update_institution_in  => update_institution_in,
            handle_error_in        => handle_error_in,
            rows_out               => rows_out);
        RETURN l_pky;
    END ins;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        notes_req_in           IN drug_req.notes_req%TYPE DEFAULT NULL,
        id_episode_in          IN drug_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in         IN drug_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN drug_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in        IN drug_req.notes_cancel%TYPE DEFAULT NULL,
        flg_status_in          IN drug_req.flg_status%TYPE DEFAULT NULL,
        id_room_in             IN drug_req.id_room%TYPE DEFAULT NULL,
        flg_type_in            IN drug_req.flg_type%TYPE DEFAULT NULL,
        flg_sub_type_in        IN drug_req.flg_sub_type%TYPE DEFAULT NULL,
        flg_print_type_in      IN drug_req.flg_print_type%TYPE DEFAULT NULL,
        id_prof_print_in       IN drug_req.id_prof_print%TYPE DEFAULT NULL,
        id_prof_pending_in     IN drug_req.id_prof_pending%TYPE DEFAULT NULL,
        notes_pending_in       IN drug_req.notes_pending%TYPE DEFAULT NULL,
        id_unidose_car_in      IN drug_req.id_unidose_car%TYPE DEFAULT NULL,
        id_patient_in          IN drug_req.id_patient%TYPE DEFAULT NULL,
        dt_drug_req_tstz_in    IN drug_req.dt_drug_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in       IN drug_req.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in      IN drug_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_pending_tstz_in     IN drug_req.dt_pending_tstz%TYPE DEFAULT NULL,
        dt_print_tstz_in       IN drug_req.dt_print_tstz%TYPE DEFAULT NULL,
        dt_unidose_car_tstz_in IN drug_req.dt_unidose_car_tstz%TYPE DEFAULT NULL,
        id_prev_episode_in     IN drug_req.id_prev_episode%TYPE DEFAULT NULL,
        create_user_in         IN drug_req.create_user%TYPE DEFAULT NULL,
        create_time_in         IN drug_req.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN drug_req.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN drug_req.update_user%TYPE DEFAULT NULL,
        update_time_in         IN drug_req.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN drug_req.update_institution%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN drug_req.id_drug_req%TYPE IS
        l_pky    drug_req.id_drug_req%TYPE := next_key;
        rows_out table_varchar;
    BEGIN
        ins(id_drug_req_in         => l_pky,
            notes_req_in           => notes_req_in,
            id_episode_in          => id_episode_in,
            id_prof_req_in         => id_prof_req_in,
            id_prof_cancel_in      => id_prof_cancel_in,
            notes_cancel_in        => notes_cancel_in,
            flg_status_in          => flg_status_in,
            id_room_in             => id_room_in,
            flg_type_in            => flg_type_in,
            flg_sub_type_in        => flg_sub_type_in,
            flg_print_type_in      => flg_print_type_in,
            id_prof_print_in       => id_prof_print_in,
            id_prof_pending_in     => id_prof_pending_in,
            notes_pending_in       => notes_pending_in,
            id_unidose_car_in      => id_unidose_car_in,
            id_patient_in          => id_patient_in,
            dt_drug_req_tstz_in    => dt_drug_req_tstz_in,
            dt_begin_tstz_in       => dt_begin_tstz_in,
            dt_cancel_tstz_in      => dt_cancel_tstz_in,
            dt_pending_tstz_in     => dt_pending_tstz_in,
            dt_print_tstz_in       => dt_print_tstz_in,
            dt_unidose_car_tstz_in => dt_unidose_car_tstz_in,
            id_prev_episode_in     => id_prev_episode_in,
            create_user_in         => create_user_in,
            create_time_in         => create_time_in,
            create_institution_in  => create_institution_in,
            update_user_in         => update_user_in,
            update_time_in         => update_time_in,
            update_institution_in  => update_institution_in,
            handle_error_in        => handle_error_in,
            rows_out               => rows_out);
        RETURN l_pky;
    END ins;

    PROCEDURE ins
    (
        id_drug_req_in         IN drug_req.id_drug_req%TYPE,
        notes_req_in           IN drug_req.notes_req%TYPE DEFAULT NULL,
        id_episode_in          IN drug_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in         IN drug_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN drug_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in        IN drug_req.notes_cancel%TYPE DEFAULT NULL,
        flg_status_in          IN drug_req.flg_status%TYPE DEFAULT NULL,
        id_room_in             IN drug_req.id_room%TYPE DEFAULT NULL,
        flg_type_in            IN drug_req.flg_type%TYPE DEFAULT NULL,
        flg_sub_type_in        IN drug_req.flg_sub_type%TYPE DEFAULT NULL,
        flg_print_type_in      IN drug_req.flg_print_type%TYPE DEFAULT NULL,
        id_prof_print_in       IN drug_req.id_prof_print%TYPE DEFAULT NULL,
        id_prof_pending_in     IN drug_req.id_prof_pending%TYPE DEFAULT NULL,
        notes_pending_in       IN drug_req.notes_pending%TYPE DEFAULT NULL,
        id_unidose_car_in      IN drug_req.id_unidose_car%TYPE DEFAULT NULL,
        id_patient_in          IN drug_req.id_patient%TYPE DEFAULT NULL,
        dt_drug_req_tstz_in    IN drug_req.dt_drug_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in       IN drug_req.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in      IN drug_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_pending_tstz_in     IN drug_req.dt_pending_tstz%TYPE DEFAULT NULL,
        dt_print_tstz_in       IN drug_req.dt_print_tstz%TYPE DEFAULT NULL,
        dt_unidose_car_tstz_in IN drug_req.dt_unidose_car_tstz%TYPE DEFAULT NULL,
        id_prev_episode_in     IN drug_req.id_prev_episode%TYPE DEFAULT NULL,
        create_user_in         IN drug_req.create_user%TYPE DEFAULT NULL,
        create_time_in         IN drug_req.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN drug_req.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN drug_req.update_user%TYPE DEFAULT NULL,
        update_time_in         IN drug_req.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN drug_req.update_institution%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    ) IS
    BEGIN
        INSERT INTO drug_req
            (id_drug_req,
             notes_req,
             id_episode,
             id_prof_req,
             id_prof_cancel,
             notes_cancel,
             flg_status,
             id_room,
             flg_type,
             flg_sub_type,
             flg_print_type,
             id_prof_print,
             id_prof_pending,
             notes_pending,
             id_unidose_car,
             id_patient,
             dt_drug_req_tstz,
             dt_begin_tstz,
             dt_cancel_tstz,
             dt_pending_tstz,
             dt_print_tstz,
             dt_unidose_car_tstz,
             id_prev_episode,
             create_user,
             create_time,
             create_institution,
             update_user,
             update_time,
             update_institution)
        VALUES
            (id_drug_req_in,
             notes_req_in,
             id_episode_in,
             id_prof_req_in,
             id_prof_cancel_in,
             notes_cancel_in,
             flg_status_in,
             id_room_in,
             flg_type_in,
             flg_sub_type_in,
             flg_print_type_in,
             id_prof_print_in,
             id_prof_pending_in,
             notes_pending_in,
             id_unidose_car_in,
             id_patient_in,
             dt_drug_req_tstz_in,
             dt_begin_tstz_in,
             dt_cancel_tstz_in,
             dt_pending_tstz_in,
             dt_print_tstz_in,
             dt_unidose_car_tstz_in,
             id_prev_episode_in,
             create_user_in,
             create_time_in,
             create_institution_in,
             update_user_in,
             update_time_in,
             update_institution_in)
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    PROCEDURE ins
    (
        id_drug_req_in         IN drug_req.id_drug_req%TYPE,
        notes_req_in           IN drug_req.notes_req%TYPE DEFAULT NULL,
        id_episode_in          IN drug_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in         IN drug_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN drug_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in        IN drug_req.notes_cancel%TYPE DEFAULT NULL,
        flg_status_in          IN drug_req.flg_status%TYPE DEFAULT NULL,
        id_room_in             IN drug_req.id_room%TYPE DEFAULT NULL,
        flg_type_in            IN drug_req.flg_type%TYPE DEFAULT NULL,
        flg_sub_type_in        IN drug_req.flg_sub_type%TYPE DEFAULT NULL,
        flg_print_type_in      IN drug_req.flg_print_type%TYPE DEFAULT NULL,
        id_prof_print_in       IN drug_req.id_prof_print%TYPE DEFAULT NULL,
        id_prof_pending_in     IN drug_req.id_prof_pending%TYPE DEFAULT NULL,
        notes_pending_in       IN drug_req.notes_pending%TYPE DEFAULT NULL,
        id_unidose_car_in      IN drug_req.id_unidose_car%TYPE DEFAULT NULL,
        id_patient_in          IN drug_req.id_patient%TYPE DEFAULT NULL,
        dt_drug_req_tstz_in    IN drug_req.dt_drug_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in       IN drug_req.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in      IN drug_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_pending_tstz_in     IN drug_req.dt_pending_tstz%TYPE DEFAULT NULL,
        dt_print_tstz_in       IN drug_req.dt_print_tstz%TYPE DEFAULT NULL,
        dt_unidose_car_tstz_in IN drug_req.dt_unidose_car_tstz%TYPE DEFAULT NULL,
        id_prev_episode_in     IN drug_req.id_prev_episode%TYPE DEFAULT NULL,
        create_user_in         IN drug_req.create_user%TYPE DEFAULT NULL,
        create_time_in         IN drug_req.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN drug_req.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN drug_req.update_user%TYPE DEFAULT NULL,
        update_time_in         IN drug_req.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN drug_req.update_institution%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_drug_req_in         => id_drug_req_in,
            notes_req_in           => notes_req_in,
            id_episode_in          => id_episode_in,
            id_prof_req_in         => id_prof_req_in,
            id_prof_cancel_in      => id_prof_cancel_in,
            notes_cancel_in        => notes_cancel_in,
            flg_status_in          => flg_status_in,
            id_room_in             => id_room_in,
            flg_type_in            => flg_type_in,
            flg_sub_type_in        => flg_sub_type_in,
            flg_print_type_in      => flg_print_type_in,
            id_prof_print_in       => id_prof_print_in,
            id_prof_pending_in     => id_prof_pending_in,
            notes_pending_in       => notes_pending_in,
            id_unidose_car_in      => id_unidose_car_in,
            id_patient_in          => id_patient_in,
            dt_drug_req_tstz_in    => dt_drug_req_tstz_in,
            dt_begin_tstz_in       => dt_begin_tstz_in,
            dt_cancel_tstz_in      => dt_cancel_tstz_in,
            dt_pending_tstz_in     => dt_pending_tstz_in,
            dt_print_tstz_in       => dt_print_tstz_in,
            dt_unidose_car_tstz_in => dt_unidose_car_tstz_in,
            id_prev_episode_in     => id_prev_episode_in,
            create_user_in         => create_user_in,
            create_time_in         => create_time_in,
            create_institution_in  => create_institution_in,
            update_user_in         => update_user_in,
            update_time_in         => update_time_in,
            update_institution_in  => update_institution_in,
            handle_error_in        => handle_error_in,
            rows_out               => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN drug_req%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_rec drug_req%ROWTYPE := rec_in;
    BEGIN
        IF gen_pky_in
        THEN
            l_rec.id_drug_req := next_key(sequence_in);
        END IF;
    
        ins(id_drug_req_in         => l_rec.id_drug_req,
            notes_req_in           => l_rec.notes_req,
            id_episode_in          => l_rec.id_episode,
            id_prof_req_in         => l_rec.id_prof_req,
            id_prof_cancel_in      => l_rec.id_prof_cancel,
            notes_cancel_in        => l_rec.notes_cancel,
            flg_status_in          => l_rec.flg_status,
            id_room_in             => l_rec.id_room,
            flg_type_in            => l_rec.flg_type,
            flg_sub_type_in        => l_rec.flg_sub_type,
            flg_print_type_in      => l_rec.flg_print_type,
            id_prof_print_in       => l_rec.id_prof_print,
            id_prof_pending_in     => l_rec.id_prof_pending,
            notes_pending_in       => l_rec.notes_pending,
            id_unidose_car_in      => l_rec.id_unidose_car,
            id_patient_in          => l_rec.id_patient,
            dt_drug_req_tstz_in    => l_rec.dt_drug_req_tstz,
            dt_begin_tstz_in       => l_rec.dt_begin_tstz,
            dt_cancel_tstz_in      => l_rec.dt_cancel_tstz,
            dt_pending_tstz_in     => l_rec.dt_pending_tstz,
            dt_print_tstz_in       => l_rec.dt_print_tstz,
            dt_unidose_car_tstz_in => l_rec.dt_unidose_car_tstz,
            id_prev_episode_in     => l_rec.id_prev_episode,
            create_user_in         => l_rec.create_user,
            create_time_in         => l_rec.create_time,
            create_institution_in  => l_rec.create_institution,
            update_user_in         => l_rec.update_user,
            update_time_in         => l_rec.update_time,
            update_institution_in  => l_rec.update_institution,
            handle_error_in        => handle_error_in,
            rows_out               => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN drug_req%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rec_in          => rec_in,
            gen_pky_in      => gen_pky_in,
            sequence_in     => sequence_in,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN drug_req_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        IF rows_in.count = 0
        THEN
            NULL;
        ELSE
            FORALL indx IN rows_in.first .. rows_in.last SAVE EXCEPTIONS
                INSERT INTO drug_req
                    (id_drug_req,
                     notes_req,
                     id_episode,
                     id_prof_req,
                     id_prof_cancel,
                     notes_cancel,
                     flg_status,
                     id_room,
                     flg_type,
                     flg_sub_type,
                     flg_print_type,
                     id_prof_print,
                     id_prof_pending,
                     notes_pending,
                     id_unidose_car,
                     id_patient,
                     dt_drug_req_tstz,
                     dt_begin_tstz,
                     dt_cancel_tstz,
                     dt_pending_tstz,
                     dt_print_tstz,
                     dt_unidose_car_tstz,
                     id_prev_episode)
                VALUES
                    (rows_in(indx).id_drug_req,
                     rows_in(indx).notes_req,
                     rows_in(indx).id_episode,
                     rows_in(indx).id_prof_req,
                     rows_in(indx).id_prof_cancel,
                     rows_in(indx).notes_cancel,
                     rows_in(indx).flg_status,
                     rows_in(indx).id_room,
                     rows_in(indx).flg_type,
                     rows_in(indx).flg_sub_type,
                     rows_in(indx).flg_print_type,
                     rows_in(indx).id_prof_print,
                     rows_in(indx).id_prof_pending,
                     rows_in(indx).notes_pending,
                     rows_in(indx).id_unidose_car,
                     rows_in(indx).id_patient,
                     rows_in(indx).dt_drug_req_tstz,
                     rows_in(indx).dt_begin_tstz,
                     rows_in(indx).dt_cancel_tstz,
                     rows_in(indx).dt_pending_tstz,
                     rows_in(indx).dt_print_tstz,
                     rows_in(indx).dt_unidose_car_tstz,
                     rows_in(indx).id_prev_episode)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN drug_req_tc,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rows_in => rows_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END ins;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_drug_req_in          IN drug_req.id_drug_req%TYPE,
        notes_req_in            IN drug_req.notes_req%TYPE DEFAULT NULL,
        notes_req_nin           IN BOOLEAN := TRUE,
        id_episode_in           IN drug_req.id_episode%TYPE DEFAULT NULL,
        id_episode_nin          IN BOOLEAN := TRUE,
        id_prof_req_in          IN drug_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_req_nin         IN BOOLEAN := TRUE,
        id_prof_cancel_in       IN drug_req.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin      IN BOOLEAN := TRUE,
        notes_cancel_in         IN drug_req.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin        IN BOOLEAN := TRUE,
        flg_status_in           IN drug_req.flg_status%TYPE DEFAULT NULL,
        flg_status_nin          IN BOOLEAN := TRUE,
        id_room_in              IN drug_req.id_room%TYPE DEFAULT NULL,
        id_room_nin             IN BOOLEAN := TRUE,
        flg_type_in             IN drug_req.flg_type%TYPE DEFAULT NULL,
        flg_type_nin            IN BOOLEAN := TRUE,
        flg_sub_type_in         IN drug_req.flg_sub_type%TYPE DEFAULT NULL,
        flg_sub_type_nin        IN BOOLEAN := TRUE,
        flg_print_type_in       IN drug_req.flg_print_type%TYPE DEFAULT NULL,
        flg_print_type_nin      IN BOOLEAN := TRUE,
        id_prof_print_in        IN drug_req.id_prof_print%TYPE DEFAULT NULL,
        id_prof_print_nin       IN BOOLEAN := TRUE,
        id_prof_pending_in      IN drug_req.id_prof_pending%TYPE DEFAULT NULL,
        id_prof_pending_nin     IN BOOLEAN := TRUE,
        notes_pending_in        IN drug_req.notes_pending%TYPE DEFAULT NULL,
        notes_pending_nin       IN BOOLEAN := TRUE,
        id_unidose_car_in       IN drug_req.id_unidose_car%TYPE DEFAULT NULL,
        id_unidose_car_nin      IN BOOLEAN := TRUE,
        id_patient_in           IN drug_req.id_patient%TYPE DEFAULT NULL,
        id_patient_nin          IN BOOLEAN := TRUE,
        dt_drug_req_tstz_in     IN drug_req.dt_drug_req_tstz%TYPE DEFAULT NULL,
        dt_drug_req_tstz_nin    IN BOOLEAN := TRUE,
        dt_begin_tstz_in        IN drug_req.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_nin       IN BOOLEAN := TRUE,
        dt_cancel_tstz_in       IN drug_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin      IN BOOLEAN := TRUE,
        dt_pending_tstz_in      IN drug_req.dt_pending_tstz%TYPE DEFAULT NULL,
        dt_pending_tstz_nin     IN BOOLEAN := TRUE,
        dt_print_tstz_in        IN drug_req.dt_print_tstz%TYPE DEFAULT NULL,
        dt_print_tstz_nin       IN BOOLEAN := TRUE,
        dt_unidose_car_tstz_in  IN drug_req.dt_unidose_car_tstz%TYPE DEFAULT NULL,
        dt_unidose_car_tstz_nin IN BOOLEAN := TRUE,
        id_prev_episode_in      IN drug_req.id_prev_episode%TYPE DEFAULT NULL,
        id_prev_episode_nin     IN BOOLEAN := TRUE,
        create_user_in          IN drug_req.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN drug_req.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN drug_req.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN drug_req.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN drug_req.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN drug_req.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                IN OUT table_varchar
    ) IS
        l_rows_out              table_varchar;
        l_notes_req_n           NUMBER(1) := sys.diutil.bool_to_int(notes_req_nin);
        l_id_episode_n          NUMBER(1) := sys.diutil.bool_to_int(id_episode_nin);
        l_id_prof_req_n         NUMBER(1) := sys.diutil.bool_to_int(id_prof_req_nin);
        l_id_prof_cancel_n      NUMBER(1) := sys.diutil.bool_to_int(id_prof_cancel_nin);
        l_notes_cancel_n        NUMBER(1) := sys.diutil.bool_to_int(notes_cancel_nin);
        l_flg_status_n          NUMBER(1) := sys.diutil.bool_to_int(flg_status_nin);
        l_id_room_n             NUMBER(1) := sys.diutil.bool_to_int(id_room_nin);
        l_flg_type_n            NUMBER(1) := sys.diutil.bool_to_int(flg_type_nin);
        l_flg_sub_type_n        NUMBER(1) := sys.diutil.bool_to_int(flg_sub_type_nin);
        l_flg_print_type_n      NUMBER(1) := sys.diutil.bool_to_int(flg_print_type_nin);
        l_id_prof_print_n       NUMBER(1) := sys.diutil.bool_to_int(id_prof_print_nin);
        l_id_prof_pending_n     NUMBER(1) := sys.diutil.bool_to_int(id_prof_pending_nin);
        l_notes_pending_n       NUMBER(1) := sys.diutil.bool_to_int(notes_pending_nin);
        l_id_unidose_car_n      NUMBER(1) := sys.diutil.bool_to_int(id_unidose_car_nin);
        l_id_patient_n          NUMBER(1) := sys.diutil.bool_to_int(id_patient_nin);
        l_dt_drug_req_tstz_n    NUMBER(1) := sys.diutil.bool_to_int(dt_drug_req_tstz_nin);
        l_dt_begin_tstz_n       NUMBER(1) := sys.diutil.bool_to_int(dt_begin_tstz_nin);
        l_dt_cancel_tstz_n      NUMBER(1) := sys.diutil.bool_to_int(dt_cancel_tstz_nin);
        l_dt_pending_tstz_n     NUMBER(1) := sys.diutil.bool_to_int(dt_pending_tstz_nin);
        l_dt_print_tstz_n       NUMBER(1) := sys.diutil.bool_to_int(dt_print_tstz_nin);
        l_dt_unidose_car_tstz_n NUMBER(1) := sys.diutil.bool_to_int(dt_unidose_car_tstz_nin);
        l_id_prev_episode_n     NUMBER(1) := sys.diutil.bool_to_int(id_prev_episode_nin);
        l_create_user_n         NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n         NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n  NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n         NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n         NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n  NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
    BEGIN
    
        UPDATE drug_req
           SET notes_req           = decode(l_notes_req_n, 0, notes_req_in, nvl(notes_req_in, notes_req)),
               id_episode          = decode(l_id_episode_n, 0, id_episode_in, nvl(id_episode_in, id_episode)),
               id_prof_req         = decode(l_id_prof_req_n, 0, id_prof_req_in, nvl(id_prof_req_in, id_prof_req)),
               id_prof_cancel      = decode(l_id_prof_cancel_n,
                                            0,
                                            id_prof_cancel_in,
                                            nvl(id_prof_cancel_in, id_prof_cancel)),
               notes_cancel        = decode(l_notes_cancel_n, 0, notes_cancel_in, nvl(notes_cancel_in, notes_cancel)),
               flg_status          = decode(l_flg_status_n, 0, flg_status_in, nvl(flg_status_in, flg_status)),
               id_room             = decode(l_id_room_n, 0, id_room_in, nvl(id_room_in, id_room)),
               flg_type            = decode(l_flg_type_n, 0, flg_type_in, nvl(flg_type_in, flg_type)),
               flg_sub_type        = decode(l_flg_sub_type_n, 0, flg_sub_type_in, nvl(flg_sub_type_in, flg_sub_type)),
               flg_print_type      = decode(l_flg_print_type_n,
                                            0,
                                            flg_print_type_in,
                                            nvl(flg_print_type_in, flg_print_type)),
               id_prof_print       = decode(l_id_prof_print_n, 0, id_prof_print_in, nvl(id_prof_print_in, id_prof_print)),
               id_prof_pending     = decode(l_id_prof_pending_n,
                                            0,
                                            id_prof_pending_in,
                                            nvl(id_prof_pending_in, id_prof_pending)),
               notes_pending       = decode(l_notes_pending_n, 0, notes_pending_in, nvl(notes_pending_in, notes_pending)),
               id_unidose_car      = decode(l_id_unidose_car_n,
                                            0,
                                            id_unidose_car_in,
                                            nvl(id_unidose_car_in, id_unidose_car)),
               id_patient          = decode(l_id_patient_n, 0, id_patient_in, nvl(id_patient_in, id_patient)),
               dt_drug_req_tstz    = decode(l_dt_drug_req_tstz_n,
                                            0,
                                            dt_drug_req_tstz_in,
                                            nvl(dt_drug_req_tstz_in, dt_drug_req_tstz)),
               dt_begin_tstz       = decode(l_dt_begin_tstz_n, 0, dt_begin_tstz_in, nvl(dt_begin_tstz_in, dt_begin_tstz)),
               dt_cancel_tstz      = decode(l_dt_cancel_tstz_n,
                                            0,
                                            dt_cancel_tstz_in,
                                            nvl(dt_cancel_tstz_in, dt_cancel_tstz)),
               dt_pending_tstz     = decode(l_dt_pending_tstz_n,
                                            0,
                                            dt_pending_tstz_in,
                                            nvl(dt_pending_tstz_in, dt_pending_tstz)),
               dt_print_tstz       = decode(l_dt_print_tstz_n, 0, dt_print_tstz_in, nvl(dt_print_tstz_in, dt_print_tstz)),
               dt_unidose_car_tstz = decode(l_dt_unidose_car_tstz_n,
                                            0,
                                            dt_unidose_car_tstz_in,
                                            nvl(dt_unidose_car_tstz_in, dt_unidose_car_tstz)),
               id_prev_episode     = decode(l_id_prev_episode_n,
                                            0,
                                            id_prev_episode_in,
                                            nvl(id_prev_episode_in, id_prev_episode)),
               create_user         = decode(l_create_user_n, 0, create_user_in, nvl(create_user_in, create_user)),
               create_time         = decode(l_create_time_n, 0, create_time_in, nvl(create_time_in, create_time)),
               create_institution  = decode(l_create_institution_n,
                                            0,
                                            create_institution_in,
                                            nvl(create_institution_in, create_institution)),
               update_user         = decode(l_update_user_n, 0, update_user_in, nvl(update_user_in, update_user)),
               update_time         = decode(l_update_time_n, 0, update_time_in, nvl(update_time_in, update_time)),
               update_institution  = decode(l_update_institution_n,
                                            0,
                                            update_institution_in,
                                            nvl(update_institution_in, update_institution))
         WHERE id_drug_req = id_drug_req_in
        RETURNING ROWID BULK COLLECT INTO l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_drug_req_in          IN drug_req.id_drug_req%TYPE,
        notes_req_in            IN drug_req.notes_req%TYPE DEFAULT NULL,
        notes_req_nin           IN BOOLEAN := TRUE,
        id_episode_in           IN drug_req.id_episode%TYPE DEFAULT NULL,
        id_episode_nin          IN BOOLEAN := TRUE,
        id_prof_req_in          IN drug_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_req_nin         IN BOOLEAN := TRUE,
        id_prof_cancel_in       IN drug_req.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin      IN BOOLEAN := TRUE,
        notes_cancel_in         IN drug_req.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin        IN BOOLEAN := TRUE,
        flg_status_in           IN drug_req.flg_status%TYPE DEFAULT NULL,
        flg_status_nin          IN BOOLEAN := TRUE,
        id_room_in              IN drug_req.id_room%TYPE DEFAULT NULL,
        id_room_nin             IN BOOLEAN := TRUE,
        flg_type_in             IN drug_req.flg_type%TYPE DEFAULT NULL,
        flg_type_nin            IN BOOLEAN := TRUE,
        flg_sub_type_in         IN drug_req.flg_sub_type%TYPE DEFAULT NULL,
        flg_sub_type_nin        IN BOOLEAN := TRUE,
        flg_print_type_in       IN drug_req.flg_print_type%TYPE DEFAULT NULL,
        flg_print_type_nin      IN BOOLEAN := TRUE,
        id_prof_print_in        IN drug_req.id_prof_print%TYPE DEFAULT NULL,
        id_prof_print_nin       IN BOOLEAN := TRUE,
        id_prof_pending_in      IN drug_req.id_prof_pending%TYPE DEFAULT NULL,
        id_prof_pending_nin     IN BOOLEAN := TRUE,
        notes_pending_in        IN drug_req.notes_pending%TYPE DEFAULT NULL,
        notes_pending_nin       IN BOOLEAN := TRUE,
        id_unidose_car_in       IN drug_req.id_unidose_car%TYPE DEFAULT NULL,
        id_unidose_car_nin      IN BOOLEAN := TRUE,
        id_patient_in           IN drug_req.id_patient%TYPE DEFAULT NULL,
        id_patient_nin          IN BOOLEAN := TRUE,
        dt_drug_req_tstz_in     IN drug_req.dt_drug_req_tstz%TYPE DEFAULT NULL,
        dt_drug_req_tstz_nin    IN BOOLEAN := TRUE,
        dt_begin_tstz_in        IN drug_req.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_nin       IN BOOLEAN := TRUE,
        dt_cancel_tstz_in       IN drug_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin      IN BOOLEAN := TRUE,
        dt_pending_tstz_in      IN drug_req.dt_pending_tstz%TYPE DEFAULT NULL,
        dt_pending_tstz_nin     IN BOOLEAN := TRUE,
        dt_print_tstz_in        IN drug_req.dt_print_tstz%TYPE DEFAULT NULL,
        dt_print_tstz_nin       IN BOOLEAN := TRUE,
        dt_unidose_car_tstz_in  IN drug_req.dt_unidose_car_tstz%TYPE DEFAULT NULL,
        dt_unidose_car_tstz_nin IN BOOLEAN := TRUE,
        id_prev_episode_in      IN drug_req.id_prev_episode%TYPE DEFAULT NULL,
        id_prev_episode_nin     IN BOOLEAN := TRUE,
        create_user_in          IN drug_req.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN drug_req.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN drug_req.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN drug_req.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN drug_req.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN drug_req.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        handle_error_in         IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_drug_req_in          => id_drug_req_in,
            notes_req_in            => notes_req_in,
            notes_req_nin           => notes_req_nin,
            id_episode_in           => id_episode_in,
            id_episode_nin          => id_episode_nin,
            id_prof_req_in          => id_prof_req_in,
            id_prof_req_nin         => id_prof_req_nin,
            id_prof_cancel_in       => id_prof_cancel_in,
            id_prof_cancel_nin      => id_prof_cancel_nin,
            notes_cancel_in         => notes_cancel_in,
            notes_cancel_nin        => notes_cancel_nin,
            flg_status_in           => flg_status_in,
            flg_status_nin          => flg_status_nin,
            id_room_in              => id_room_in,
            id_room_nin             => id_room_nin,
            flg_type_in             => flg_type_in,
            flg_type_nin            => flg_type_nin,
            flg_sub_type_in         => flg_sub_type_in,
            flg_sub_type_nin        => flg_sub_type_nin,
            flg_print_type_in       => flg_print_type_in,
            flg_print_type_nin      => flg_print_type_nin,
            id_prof_print_in        => id_prof_print_in,
            id_prof_print_nin       => id_prof_print_nin,
            id_prof_pending_in      => id_prof_pending_in,
            id_prof_pending_nin     => id_prof_pending_nin,
            notes_pending_in        => notes_pending_in,
            notes_pending_nin       => notes_pending_nin,
            id_unidose_car_in       => id_unidose_car_in,
            id_unidose_car_nin      => id_unidose_car_nin,
            id_patient_in           => id_patient_in,
            id_patient_nin          => id_patient_nin,
            dt_drug_req_tstz_in     => dt_drug_req_tstz_in,
            dt_drug_req_tstz_nin    => dt_drug_req_tstz_nin,
            dt_begin_tstz_in        => dt_begin_tstz_in,
            dt_begin_tstz_nin       => dt_begin_tstz_nin,
            dt_cancel_tstz_in       => dt_cancel_tstz_in,
            dt_cancel_tstz_nin      => dt_cancel_tstz_nin,
            dt_pending_tstz_in      => dt_pending_tstz_in,
            dt_pending_tstz_nin     => dt_pending_tstz_nin,
            dt_print_tstz_in        => dt_print_tstz_in,
            dt_print_tstz_nin       => dt_print_tstz_nin,
            dt_unidose_car_tstz_in  => dt_unidose_car_tstz_in,
            dt_unidose_car_tstz_nin => dt_unidose_car_tstz_nin,
            id_prev_episode_in      => id_prev_episode_in,
            id_prev_episode_nin     => id_prev_episode_nin,
            create_user_in          => create_user_in,
            create_user_nin         => create_user_nin,
            create_time_in          => create_time_in,
            create_time_nin         => create_time_nin,
            create_institution_in   => create_institution_in,
            create_institution_nin  => create_institution_nin,
            update_user_in          => update_user_in,
            update_user_nin         => update_user_nin,
            update_time_in          => update_time_in,
            update_time_nin         => update_time_nin,
            update_institution_in   => update_institution_in,
            update_institution_nin  => update_institution_nin,
            handle_error_in         => handle_error_in,
            rows_out                => rows_out);
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        notes_req_in            IN drug_req.notes_req%TYPE DEFAULT NULL,
        notes_req_nin           IN BOOLEAN := TRUE,
        id_episode_in           IN drug_req.id_episode%TYPE DEFAULT NULL,
        id_episode_nin          IN BOOLEAN := TRUE,
        id_prof_req_in          IN drug_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_req_nin         IN BOOLEAN := TRUE,
        id_prof_cancel_in       IN drug_req.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin      IN BOOLEAN := TRUE,
        notes_cancel_in         IN drug_req.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin        IN BOOLEAN := TRUE,
        flg_status_in           IN drug_req.flg_status%TYPE DEFAULT NULL,
        flg_status_nin          IN BOOLEAN := TRUE,
        id_room_in              IN drug_req.id_room%TYPE DEFAULT NULL,
        id_room_nin             IN BOOLEAN := TRUE,
        flg_type_in             IN drug_req.flg_type%TYPE DEFAULT NULL,
        flg_type_nin            IN BOOLEAN := TRUE,
        flg_sub_type_in         IN drug_req.flg_sub_type%TYPE DEFAULT NULL,
        flg_sub_type_nin        IN BOOLEAN := TRUE,
        flg_print_type_in       IN drug_req.flg_print_type%TYPE DEFAULT NULL,
        flg_print_type_nin      IN BOOLEAN := TRUE,
        id_prof_print_in        IN drug_req.id_prof_print%TYPE DEFAULT NULL,
        id_prof_print_nin       IN BOOLEAN := TRUE,
        id_prof_pending_in      IN drug_req.id_prof_pending%TYPE DEFAULT NULL,
        id_prof_pending_nin     IN BOOLEAN := TRUE,
        notes_pending_in        IN drug_req.notes_pending%TYPE DEFAULT NULL,
        notes_pending_nin       IN BOOLEAN := TRUE,
        id_unidose_car_in       IN drug_req.id_unidose_car%TYPE DEFAULT NULL,
        id_unidose_car_nin      IN BOOLEAN := TRUE,
        id_patient_in           IN drug_req.id_patient%TYPE DEFAULT NULL,
        id_patient_nin          IN BOOLEAN := TRUE,
        dt_drug_req_tstz_in     IN drug_req.dt_drug_req_tstz%TYPE DEFAULT NULL,
        dt_drug_req_tstz_nin    IN BOOLEAN := TRUE,
        dt_begin_tstz_in        IN drug_req.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_nin       IN BOOLEAN := TRUE,
        dt_cancel_tstz_in       IN drug_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin      IN BOOLEAN := TRUE,
        dt_pending_tstz_in      IN drug_req.dt_pending_tstz%TYPE DEFAULT NULL,
        dt_pending_tstz_nin     IN BOOLEAN := TRUE,
        dt_print_tstz_in        IN drug_req.dt_print_tstz%TYPE DEFAULT NULL,
        dt_print_tstz_nin       IN BOOLEAN := TRUE,
        dt_unidose_car_tstz_in  IN drug_req.dt_unidose_car_tstz%TYPE DEFAULT NULL,
        dt_unidose_car_tstz_nin IN BOOLEAN := TRUE,
        id_prev_episode_in      IN drug_req.id_prev_episode%TYPE DEFAULT NULL,
        id_prev_episode_nin     IN BOOLEAN := TRUE,
        create_user_in          IN drug_req.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN drug_req.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN drug_req.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN drug_req.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN drug_req.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN drug_req.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        where_in                IN VARCHAR2,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                IN OUT table_varchar
    ) IS
        l_sql                   VARCHAR2(32767);
        l_rows_out              table_varchar;
        l_notes_req_n           NUMBER(1) := sys.diutil.bool_to_int(notes_req_nin);
        l_id_episode_n          NUMBER(1) := sys.diutil.bool_to_int(id_episode_nin);
        l_id_prof_req_n         NUMBER(1) := sys.diutil.bool_to_int(id_prof_req_nin);
        l_id_prof_cancel_n      NUMBER(1) := sys.diutil.bool_to_int(id_prof_cancel_nin);
        l_notes_cancel_n        NUMBER(1) := sys.diutil.bool_to_int(notes_cancel_nin);
        l_flg_status_n          NUMBER(1) := sys.diutil.bool_to_int(flg_status_nin);
        l_id_room_n             NUMBER(1) := sys.diutil.bool_to_int(id_room_nin);
        l_flg_type_n            NUMBER(1) := sys.diutil.bool_to_int(flg_type_nin);
        l_flg_sub_type_n        NUMBER(1) := sys.diutil.bool_to_int(flg_sub_type_nin);
        l_flg_print_type_n      NUMBER(1) := sys.diutil.bool_to_int(flg_print_type_nin);
        l_id_prof_print_n       NUMBER(1) := sys.diutil.bool_to_int(id_prof_print_nin);
        l_id_prof_pending_n     NUMBER(1) := sys.diutil.bool_to_int(id_prof_pending_nin);
        l_notes_pending_n       NUMBER(1) := sys.diutil.bool_to_int(notes_pending_nin);
        l_id_unidose_car_n      NUMBER(1) := sys.diutil.bool_to_int(id_unidose_car_nin);
        l_id_patient_n          NUMBER(1) := sys.diutil.bool_to_int(id_patient_nin);
        l_dt_drug_req_tstz_n    NUMBER(1) := sys.diutil.bool_to_int(dt_drug_req_tstz_nin);
        l_dt_begin_tstz_n       NUMBER(1) := sys.diutil.bool_to_int(dt_begin_tstz_nin);
        l_dt_cancel_tstz_n      NUMBER(1) := sys.diutil.bool_to_int(dt_cancel_tstz_nin);
        l_dt_pending_tstz_n     NUMBER(1) := sys.diutil.bool_to_int(dt_pending_tstz_nin);
        l_dt_print_tstz_n       NUMBER(1) := sys.diutil.bool_to_int(dt_print_tstz_nin);
        l_dt_unidose_car_tstz_n NUMBER(1) := sys.diutil.bool_to_int(dt_unidose_car_tstz_nin);
        l_id_prev_episode_n     NUMBER(1) := sys.diutil.bool_to_int(id_prev_episode_nin);
        l_create_user_n         NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n         NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n  NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n         NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n         NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n  NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
    BEGIN
        l_notes_req_n           := sys.diutil.bool_to_int(notes_req_nin);
        l_id_episode_n          := sys.diutil.bool_to_int(id_episode_nin);
        l_id_prof_req_n         := sys.diutil.bool_to_int(id_prof_req_nin);
        l_id_prof_cancel_n      := sys.diutil.bool_to_int(id_prof_cancel_nin);
        l_notes_cancel_n        := sys.diutil.bool_to_int(notes_cancel_nin);
        l_flg_status_n          := sys.diutil.bool_to_int(flg_status_nin);
        l_id_room_n             := sys.diutil.bool_to_int(id_room_nin);
        l_flg_type_n            := sys.diutil.bool_to_int(flg_type_nin);
        l_flg_sub_type_n        := sys.diutil.bool_to_int(flg_sub_type_nin);
        l_flg_print_type_n      := sys.diutil.bool_to_int(flg_print_type_nin);
        l_id_prof_print_n       := sys.diutil.bool_to_int(id_prof_print_nin);
        l_id_prof_pending_n     := sys.diutil.bool_to_int(id_prof_pending_nin);
        l_notes_pending_n       := sys.diutil.bool_to_int(notes_pending_nin);
        l_id_unidose_car_n      := sys.diutil.bool_to_int(id_unidose_car_nin);
        l_id_patient_n          := sys.diutil.bool_to_int(id_patient_nin);
        l_dt_drug_req_tstz_n    := sys.diutil.bool_to_int(dt_drug_req_tstz_nin);
        l_dt_begin_tstz_n       := sys.diutil.bool_to_int(dt_begin_tstz_nin);
        l_dt_cancel_tstz_n      := sys.diutil.bool_to_int(dt_cancel_tstz_nin);
        l_dt_pending_tstz_n     := sys.diutil.bool_to_int(dt_pending_tstz_nin);
        l_dt_print_tstz_n       := sys.diutil.bool_to_int(dt_print_tstz_nin);
        l_dt_unidose_car_tstz_n := sys.diutil.bool_to_int(dt_unidose_car_tstz_nin);
        l_id_prev_episode_n     := sys.diutil.bool_to_int(id_prev_episode_nin);
        l_create_user_n         := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n         := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n  := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n         := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n         := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n  := sys.diutil.bool_to_int(update_institution_nin);
        l_sql                   := 'UPDATE drug_req SET' || ' NOTES_REQ = decode (' || l_notes_req_n ||
                                   ',0,:NOTES_REQ_in, NVL (:NOTES_REQ_in, NOTES_REQ)) ' || ',' ||
                                   ' ID_EPISODE = decode (' || l_id_episode_n ||
                                   ',0,:ID_EPISODE_in, NVL (:ID_EPISODE_in, ID_EPISODE)) ' || ',' ||
                                   ' ID_PROF_REQ = decode (' || l_id_prof_req_n ||
                                   ',0,:ID_PROF_REQ_in, NVL (:ID_PROF_REQ_in, ID_PROF_REQ)) ' || ',' ||
                                   ' ID_PROF_CANCEL = decode (' || l_id_prof_cancel_n ||
                                   ',0,:ID_PROF_CANCEL_in, NVL (:ID_PROF_CANCEL_in, ID_PROF_CANCEL)) ' || ',' ||
                                   ' NOTES_CANCEL = decode (' || l_notes_cancel_n ||
                                   ',0,:NOTES_CANCEL_in, NVL (:NOTES_CANCEL_in, NOTES_CANCEL)) ' || ',' ||
                                   ' FLG_STATUS = decode (' || l_flg_status_n ||
                                   ',0,:FLG_STATUS_in, NVL (:FLG_STATUS_in, FLG_STATUS)) ' || ',' ||
                                   ' ID_ROOM = decode (' || l_id_room_n ||
                                   ',0,:ID_ROOM_in, NVL (:ID_ROOM_in, ID_ROOM)) ' || ',' || ' FLG_TYPE = decode (' ||
                                   l_flg_type_n || ',0,:FLG_TYPE_in, NVL (:FLG_TYPE_in, FLG_TYPE)) ' || ',' ||
                                   ' FLG_SUB_TYPE = decode (' || l_flg_sub_type_n ||
                                   ',0,:FLG_SUB_TYPE_in, NVL (:FLG_SUB_TYPE_in, FLG_SUB_TYPE)) ' || ',' ||
                                   ' FLG_PRINT_TYPE = decode (' || l_flg_print_type_n ||
                                   ',0,:FLG_PRINT_TYPE_in, NVL (:FLG_PRINT_TYPE_in, FLG_PRINT_TYPE)) ' || ',' ||
                                   ' ID_PROF_PRINT = decode (' || l_id_prof_print_n ||
                                   ',0,:ID_PROF_PRINT_in, NVL (:ID_PROF_PRINT_in, ID_PROF_PRINT)) ' || ',' ||
                                   ' ID_PROF_PENDING = decode (' || l_id_prof_pending_n ||
                                   ',0,:ID_PROF_PENDING_in, NVL (:ID_PROF_PENDING_in, ID_PROF_PENDING)) ' || ',' ||
                                   ' NOTES_PENDING = decode (' || l_notes_pending_n ||
                                   ',0,:NOTES_PENDING_in, NVL (:NOTES_PENDING_in, NOTES_PENDING)) ' || ',' ||
                                   ' ID_UNIDOSE_CAR = decode (' || l_id_unidose_car_n ||
                                   ',0,:ID_UNIDOSE_CAR_in, NVL (:ID_UNIDOSE_CAR_in, ID_UNIDOSE_CAR)) ' || ',' ||
                                   ' ID_PATIENT = decode (' || l_id_patient_n ||
                                   ',0,:ID_PATIENT_in, NVL (:ID_PATIENT_in, ID_PATIENT)) ' || ',' ||
                                   ' DT_DRUG_REQ_TSTZ = decode (' || l_dt_drug_req_tstz_n ||
                                   ',0,:DT_DRUG_REQ_TSTZ_in, NVL (:DT_DRUG_REQ_TSTZ_in, DT_DRUG_REQ_TSTZ)) ' || ',' ||
                                   ' DT_BEGIN_TSTZ = decode (' || l_dt_begin_tstz_n ||
                                   ',0,:DT_BEGIN_TSTZ_in, NVL (:DT_BEGIN_TSTZ_in, DT_BEGIN_TSTZ)) ' || ',' ||
                                   ' DT_CANCEL_TSTZ = decode (' || l_dt_cancel_tstz_n ||
                                   ',0,:DT_CANCEL_TSTZ_in, NVL (:DT_CANCEL_TSTZ_in, DT_CANCEL_TSTZ)) ' || ',' ||
                                   ' DT_PENDING_TSTZ = decode (' || l_dt_pending_tstz_n ||
                                   ',0,:DT_PENDING_TSTZ_in, NVL (:DT_PENDING_TSTZ_in, DT_PENDING_TSTZ)) ' || ',' ||
                                   ' DT_PRINT_TSTZ = decode (' || l_dt_print_tstz_n ||
                                   ',0,:DT_PRINT_TSTZ_in, NVL (:DT_PRINT_TSTZ_in, DT_PRINT_TSTZ)) ' || ',' ||
                                   ' DT_UNIDOSE_CAR_TSTZ = decode (' || l_dt_unidose_car_tstz_n ||
                                   ',0,:DT_UNIDOSE_CAR_TSTZ_in, NVL (:DT_UNIDOSE_CAR_TSTZ_in, DT_UNIDOSE_CAR_TSTZ)) ' || ',' ||
                                   ' ID_PREV_EPISODE = decode (' || l_id_prev_episode_n ||
                                   ',0,:ID_PREV_EPISODE_in, NVL (:ID_PREV_EPISODE_in, ID_PREV_EPISODE)) ' || ',' ||
                                   ' CREATE_USER = decode (' || l_create_user_n ||
                                   ',0,:CREATE_USER_in, NVL (:CREATE_USER_in, CREATE_USER)) ' || ',' ||
                                   ' CREATE_TIME = decode (' || l_create_time_n ||
                                   ',0,:CREATE_TIME_in, NVL (:CREATE_TIME_in, CREATE_TIME)) ' || ',' ||
                                   ' CREATE_INSTITUTION = decode (' || l_create_institution_n ||
                                   ',0,:CREATE_INSTITUTION_in, NVL (:CREATE_INSTITUTION_in, CREATE_INSTITUTION)) ' || ',' ||
                                   ' UPDATE_USER = decode (' || l_update_user_n ||
                                   ',0,:UPDATE_USER_in, NVL (:UPDATE_USER_in, UPDATE_USER)) ' || ',' ||
                                   ' UPDATE_TIME = decode (' || l_update_time_n ||
                                   ',0,:UPDATE_TIME_in, NVL (:UPDATE_TIME_in, UPDATE_TIME)) ' || ',' ||
                                   ' UPDATE_INSTITUTION = decode (' || l_update_institution_n ||
                                   ',0,:UPDATE_INSTITUTION_in, NVL (:UPDATE_INSTITUTION_in, UPDATE_INSTITUTION)) ' ||
                                   ' where ' || nvl(where_in, '(1=1)') ||
                                   ' RETURNING ROWID BULK COLLECT INTO :l_rows_out';
        EXECUTE IMMEDIATE 'BEGIN ' || l_sql || '; END;'
            USING IN notes_req_in, id_episode_in, id_prof_req_in, id_prof_cancel_in, notes_cancel_in, flg_status_in, id_room_in, flg_type_in, flg_sub_type_in, flg_print_type_in, id_prof_print_in, id_prof_pending_in, notes_pending_in, id_unidose_car_in, id_patient_in, dt_drug_req_tstz_in, dt_begin_tstz_in, dt_cancel_tstz_in, dt_pending_tstz_in, dt_print_tstz_in, dt_unidose_car_tstz_in, id_prev_episode_in, create_user_in, create_time_in, create_institution_in, update_user_in, update_time_in, update_institution_in, OUT l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        notes_req_in            IN drug_req.notes_req%TYPE DEFAULT NULL,
        notes_req_nin           IN BOOLEAN := TRUE,
        id_episode_in           IN drug_req.id_episode%TYPE DEFAULT NULL,
        id_episode_nin          IN BOOLEAN := TRUE,
        id_prof_req_in          IN drug_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_req_nin         IN BOOLEAN := TRUE,
        id_prof_cancel_in       IN drug_req.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin      IN BOOLEAN := TRUE,
        notes_cancel_in         IN drug_req.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin        IN BOOLEAN := TRUE,
        flg_status_in           IN drug_req.flg_status%TYPE DEFAULT NULL,
        flg_status_nin          IN BOOLEAN := TRUE,
        id_room_in              IN drug_req.id_room%TYPE DEFAULT NULL,
        id_room_nin             IN BOOLEAN := TRUE,
        flg_type_in             IN drug_req.flg_type%TYPE DEFAULT NULL,
        flg_type_nin            IN BOOLEAN := TRUE,
        flg_sub_type_in         IN drug_req.flg_sub_type%TYPE DEFAULT NULL,
        flg_sub_type_nin        IN BOOLEAN := TRUE,
        flg_print_type_in       IN drug_req.flg_print_type%TYPE DEFAULT NULL,
        flg_print_type_nin      IN BOOLEAN := TRUE,
        id_prof_print_in        IN drug_req.id_prof_print%TYPE DEFAULT NULL,
        id_prof_print_nin       IN BOOLEAN := TRUE,
        id_prof_pending_in      IN drug_req.id_prof_pending%TYPE DEFAULT NULL,
        id_prof_pending_nin     IN BOOLEAN := TRUE,
        notes_pending_in        IN drug_req.notes_pending%TYPE DEFAULT NULL,
        notes_pending_nin       IN BOOLEAN := TRUE,
        id_unidose_car_in       IN drug_req.id_unidose_car%TYPE DEFAULT NULL,
        id_unidose_car_nin      IN BOOLEAN := TRUE,
        id_patient_in           IN drug_req.id_patient%TYPE DEFAULT NULL,
        id_patient_nin          IN BOOLEAN := TRUE,
        dt_drug_req_tstz_in     IN drug_req.dt_drug_req_tstz%TYPE DEFAULT NULL,
        dt_drug_req_tstz_nin    IN BOOLEAN := TRUE,
        dt_begin_tstz_in        IN drug_req.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_nin       IN BOOLEAN := TRUE,
        dt_cancel_tstz_in       IN drug_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin      IN BOOLEAN := TRUE,
        dt_pending_tstz_in      IN drug_req.dt_pending_tstz%TYPE DEFAULT NULL,
        dt_pending_tstz_nin     IN BOOLEAN := TRUE,
        dt_print_tstz_in        IN drug_req.dt_print_tstz%TYPE DEFAULT NULL,
        dt_print_tstz_nin       IN BOOLEAN := TRUE,
        dt_unidose_car_tstz_in  IN drug_req.dt_unidose_car_tstz%TYPE DEFAULT NULL,
        dt_unidose_car_tstz_nin IN BOOLEAN := TRUE,
        id_prev_episode_in      IN drug_req.id_prev_episode%TYPE DEFAULT NULL,
        id_prev_episode_nin     IN BOOLEAN := TRUE,
        create_user_in          IN drug_req.create_user%TYPE DEFAULT NULL,
        create_user_nin         IN BOOLEAN := TRUE,
        create_time_in          IN drug_req.create_time%TYPE DEFAULT NULL,
        create_time_nin         IN BOOLEAN := TRUE,
        create_institution_in   IN drug_req.create_institution%TYPE DEFAULT NULL,
        create_institution_nin  IN BOOLEAN := TRUE,
        update_user_in          IN drug_req.update_user%TYPE DEFAULT NULL,
        update_user_nin         IN BOOLEAN := TRUE,
        update_time_in          IN drug_req.update_time%TYPE DEFAULT NULL,
        update_time_nin         IN BOOLEAN := TRUE,
        update_institution_in   IN drug_req.update_institution%TYPE DEFAULT NULL,
        update_institution_nin  IN BOOLEAN := TRUE,
        where_in                IN VARCHAR2,
        handle_error_in         IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(notes_req_in            => notes_req_in,
            notes_req_nin           => notes_req_nin,
            id_episode_in           => id_episode_in,
            id_episode_nin          => id_episode_nin,
            id_prof_req_in          => id_prof_req_in,
            id_prof_req_nin         => id_prof_req_nin,
            id_prof_cancel_in       => id_prof_cancel_in,
            id_prof_cancel_nin      => id_prof_cancel_nin,
            notes_cancel_in         => notes_cancel_in,
            notes_cancel_nin        => notes_cancel_nin,
            flg_status_in           => flg_status_in,
            flg_status_nin          => flg_status_nin,
            id_room_in              => id_room_in,
            id_room_nin             => id_room_nin,
            flg_type_in             => flg_type_in,
            flg_type_nin            => flg_type_nin,
            flg_sub_type_in         => flg_sub_type_in,
            flg_sub_type_nin        => flg_sub_type_nin,
            flg_print_type_in       => flg_print_type_in,
            flg_print_type_nin      => flg_print_type_nin,
            id_prof_print_in        => id_prof_print_in,
            id_prof_print_nin       => id_prof_print_nin,
            id_prof_pending_in      => id_prof_pending_in,
            id_prof_pending_nin     => id_prof_pending_nin,
            notes_pending_in        => notes_pending_in,
            notes_pending_nin       => notes_pending_nin,
            id_unidose_car_in       => id_unidose_car_in,
            id_unidose_car_nin      => id_unidose_car_nin,
            id_patient_in           => id_patient_in,
            id_patient_nin          => id_patient_nin,
            dt_drug_req_tstz_in     => dt_drug_req_tstz_in,
            dt_drug_req_tstz_nin    => dt_drug_req_tstz_nin,
            dt_begin_tstz_in        => dt_begin_tstz_in,
            dt_begin_tstz_nin       => dt_begin_tstz_nin,
            dt_cancel_tstz_in       => dt_cancel_tstz_in,
            dt_cancel_tstz_nin      => dt_cancel_tstz_nin,
            dt_pending_tstz_in      => dt_pending_tstz_in,
            dt_pending_tstz_nin     => dt_pending_tstz_nin,
            dt_print_tstz_in        => dt_print_tstz_in,
            dt_print_tstz_nin       => dt_print_tstz_nin,
            dt_unidose_car_tstz_in  => dt_unidose_car_tstz_in,
            dt_unidose_car_tstz_nin => dt_unidose_car_tstz_nin,
            id_prev_episode_in      => id_prev_episode_in,
            id_prev_episode_nin     => id_prev_episode_nin,
            create_user_in          => create_user_in,
            create_user_nin         => create_user_nin,
            create_time_in          => create_time_in,
            create_time_nin         => create_time_nin,
            create_institution_in   => create_institution_in,
            create_institution_nin  => create_institution_nin,
            update_user_in          => update_user_in,
            update_user_nin         => update_user_nin,
            update_time_in          => update_time_in,
            update_time_nin         => update_time_nin,
            update_institution_in   => update_institution_in,
            update_institution_nin  => update_institution_nin,
            where_in                => where_in,
            handle_error_in         => handle_error_in,
            rows_out                => rows_out);
    END upd;

    --Update/insert columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_drug_req_in         IN drug_req.id_drug_req%TYPE,
        notes_req_in           IN drug_req.notes_req%TYPE DEFAULT NULL,
        id_episode_in          IN drug_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in         IN drug_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN drug_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in        IN drug_req.notes_cancel%TYPE DEFAULT NULL,
        flg_status_in          IN drug_req.flg_status%TYPE DEFAULT NULL,
        id_room_in             IN drug_req.id_room%TYPE DEFAULT NULL,
        flg_type_in            IN drug_req.flg_type%TYPE DEFAULT NULL,
        flg_sub_type_in        IN drug_req.flg_sub_type%TYPE DEFAULT NULL,
        flg_print_type_in      IN drug_req.flg_print_type%TYPE DEFAULT NULL,
        id_prof_print_in       IN drug_req.id_prof_print%TYPE DEFAULT NULL,
        id_prof_pending_in     IN drug_req.id_prof_pending%TYPE DEFAULT NULL,
        notes_pending_in       IN drug_req.notes_pending%TYPE DEFAULT NULL,
        id_unidose_car_in      IN drug_req.id_unidose_car%TYPE DEFAULT NULL,
        id_patient_in          IN drug_req.id_patient%TYPE DEFAULT NULL,
        dt_drug_req_tstz_in    IN drug_req.dt_drug_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in       IN drug_req.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in      IN drug_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_pending_tstz_in     IN drug_req.dt_pending_tstz%TYPE DEFAULT NULL,
        dt_print_tstz_in       IN drug_req.dt_print_tstz%TYPE DEFAULT NULL,
        dt_unidose_car_tstz_in IN drug_req.dt_unidose_car_tstz%TYPE DEFAULT NULL,
        id_prev_episode_in     IN drug_req.id_prev_episode%TYPE DEFAULT NULL,
        create_user_in         IN drug_req.create_user%TYPE DEFAULT NULL,
        create_time_in         IN drug_req.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN drug_req.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN drug_req.update_user%TYPE DEFAULT NULL,
        update_time_in         IN drug_req.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN drug_req.update_institution%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_drug_req_in         => id_drug_req_in,
            notes_req_in           => notes_req_in,
            id_episode_in          => id_episode_in,
            id_prof_req_in         => id_prof_req_in,
            id_prof_cancel_in      => id_prof_cancel_in,
            notes_cancel_in        => notes_cancel_in,
            flg_status_in          => flg_status_in,
            id_room_in             => id_room_in,
            flg_type_in            => flg_type_in,
            flg_sub_type_in        => flg_sub_type_in,
            flg_print_type_in      => flg_print_type_in,
            id_prof_print_in       => id_prof_print_in,
            id_prof_pending_in     => id_prof_pending_in,
            notes_pending_in       => notes_pending_in,
            id_unidose_car_in      => id_unidose_car_in,
            id_patient_in          => id_patient_in,
            dt_drug_req_tstz_in    => dt_drug_req_tstz_in,
            dt_begin_tstz_in       => dt_begin_tstz_in,
            dt_cancel_tstz_in      => dt_cancel_tstz_in,
            dt_pending_tstz_in     => dt_pending_tstz_in,
            dt_print_tstz_in       => dt_print_tstz_in,
            dt_unidose_car_tstz_in => dt_unidose_car_tstz_in,
            id_prev_episode_in     => id_prev_episode_in,
            create_user_in         => create_user_in,
            create_time_in         => create_time_in,
            create_institution_in  => create_institution_in,
            update_user_in         => update_user_in,
            update_time_in         => update_time_in,
            update_institution_in  => update_institution_in,
            handle_error_in        => handle_error_in,
            rows_out               => rows_out);
        IF SQL%ROWCOUNT = 0
        THEN
            ins(id_drug_req_in         => id_drug_req_in,
                notes_req_in           => notes_req_in,
                id_episode_in          => id_episode_in,
                id_prof_req_in         => id_prof_req_in,
                id_prof_cancel_in      => id_prof_cancel_in,
                notes_cancel_in        => notes_cancel_in,
                flg_status_in          => flg_status_in,
                id_room_in             => id_room_in,
                flg_type_in            => flg_type_in,
                flg_sub_type_in        => flg_sub_type_in,
                flg_print_type_in      => flg_print_type_in,
                id_prof_print_in       => id_prof_print_in,
                id_prof_pending_in     => id_prof_pending_in,
                notes_pending_in       => notes_pending_in,
                id_unidose_car_in      => id_unidose_car_in,
                id_patient_in          => id_patient_in,
                dt_drug_req_tstz_in    => dt_drug_req_tstz_in,
                dt_begin_tstz_in       => dt_begin_tstz_in,
                dt_cancel_tstz_in      => dt_cancel_tstz_in,
                dt_pending_tstz_in     => dt_pending_tstz_in,
                dt_print_tstz_in       => dt_print_tstz_in,
                dt_unidose_car_tstz_in => dt_unidose_car_tstz_in,
                id_prev_episode_in     => id_prev_episode_in,
                create_user_in         => create_user_in,
                create_time_in         => create_time_in,
                create_institution_in  => create_institution_in,
                update_user_in         => update_user_in,
                update_time_in         => update_time_in,
                update_institution_in  => update_institution_in,
                handle_error_in        => handle_error_in,
                rows_out               => rows_out);
        END IF;
    END upd_ins;

    --Update/insert columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_drug_req_in         IN drug_req.id_drug_req%TYPE,
        notes_req_in           IN drug_req.notes_req%TYPE DEFAULT NULL,
        id_episode_in          IN drug_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in         IN drug_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_cancel_in      IN drug_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in        IN drug_req.notes_cancel%TYPE DEFAULT NULL,
        flg_status_in          IN drug_req.flg_status%TYPE DEFAULT NULL,
        id_room_in             IN drug_req.id_room%TYPE DEFAULT NULL,
        flg_type_in            IN drug_req.flg_type%TYPE DEFAULT NULL,
        flg_sub_type_in        IN drug_req.flg_sub_type%TYPE DEFAULT NULL,
        flg_print_type_in      IN drug_req.flg_print_type%TYPE DEFAULT NULL,
        id_prof_print_in       IN drug_req.id_prof_print%TYPE DEFAULT NULL,
        id_prof_pending_in     IN drug_req.id_prof_pending%TYPE DEFAULT NULL,
        notes_pending_in       IN drug_req.notes_pending%TYPE DEFAULT NULL,
        id_unidose_car_in      IN drug_req.id_unidose_car%TYPE DEFAULT NULL,
        id_patient_in          IN drug_req.id_patient%TYPE DEFAULT NULL,
        dt_drug_req_tstz_in    IN drug_req.dt_drug_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in       IN drug_req.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in      IN drug_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_pending_tstz_in     IN drug_req.dt_pending_tstz%TYPE DEFAULT NULL,
        dt_print_tstz_in       IN drug_req.dt_print_tstz%TYPE DEFAULT NULL,
        dt_unidose_car_tstz_in IN drug_req.dt_unidose_car_tstz%TYPE DEFAULT NULL,
        id_prev_episode_in     IN drug_req.id_prev_episode%TYPE DEFAULT NULL,
        create_user_in         IN drug_req.create_user%TYPE DEFAULT NULL,
        create_time_in         IN drug_req.create_time%TYPE DEFAULT NULL,
        create_institution_in  IN drug_req.create_institution%TYPE DEFAULT NULL,
        update_user_in         IN drug_req.update_user%TYPE DEFAULT NULL,
        update_time_in         IN drug_req.update_time%TYPE DEFAULT NULL,
        update_institution_in  IN drug_req.update_institution%TYPE DEFAULT NULL,
        handle_error_in        IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd_ins(id_drug_req_in,
                notes_req_in,
                id_episode_in,
                id_prof_req_in,
                id_prof_cancel_in,
                notes_cancel_in,
                flg_status_in,
                id_room_in,
                flg_type_in,
                flg_sub_type_in,
                flg_print_type_in,
                id_prof_print_in,
                id_prof_pending_in,
                notes_pending_in,
                id_unidose_car_in,
                id_patient_in,
                dt_drug_req_tstz_in,
                dt_begin_tstz_in,
                dt_cancel_tstz_in,
                dt_pending_tstz_in,
                dt_print_tstz_in,
                dt_unidose_car_tstz_in,
                id_prev_episode_in,
                create_user_in,
                create_time_in,
                create_institution_in,
                update_user_in,
                update_time_in,
                update_institution_in,
                handle_error_in,
                rows_out);
    END upd_ins;

    --Update by record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN drug_req%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_drug_req_in         => rec_in.id_drug_req,
            notes_req_in           => rec_in.notes_req,
            id_episode_in          => rec_in.id_episode,
            id_prof_req_in         => rec_in.id_prof_req,
            id_prof_cancel_in      => rec_in.id_prof_cancel,
            notes_cancel_in        => rec_in.notes_cancel,
            flg_status_in          => rec_in.flg_status,
            id_room_in             => rec_in.id_room,
            flg_type_in            => rec_in.flg_type,
            flg_sub_type_in        => rec_in.flg_sub_type,
            flg_print_type_in      => rec_in.flg_print_type,
            id_prof_print_in       => rec_in.id_prof_print,
            id_prof_pending_in     => rec_in.id_prof_pending,
            notes_pending_in       => rec_in.notes_pending,
            id_unidose_car_in      => rec_in.id_unidose_car,
            id_patient_in          => rec_in.id_patient,
            dt_drug_req_tstz_in    => rec_in.dt_drug_req_tstz,
            dt_begin_tstz_in       => rec_in.dt_begin_tstz,
            dt_cancel_tstz_in      => rec_in.dt_cancel_tstz,
            dt_pending_tstz_in     => rec_in.dt_pending_tstz,
            dt_print_tstz_in       => rec_in.dt_print_tstz,
            dt_unidose_car_tstz_in => rec_in.dt_unidose_car_tstz,
            id_prev_episode_in     => rec_in.id_prev_episode,
            create_user_in         => rec_in.create_user,
            create_time_in         => rec_in.create_time,
            create_institution_in  => rec_in.create_institution,
            update_user_in         => rec_in.update_user,
            update_time_in         => rec_in.update_time,
            update_institution_in  => rec_in.update_institution,
            handle_error_in        => handle_error_in,
            rows_out               => rows_out);
    END upd;

    --Update by record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN drug_req%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_drug_req_in         => rec_in.id_drug_req,
            notes_req_in           => rec_in.notes_req,
            id_episode_in          => rec_in.id_episode,
            id_prof_req_in         => rec_in.id_prof_req,
            id_prof_cancel_in      => rec_in.id_prof_cancel,
            notes_cancel_in        => rec_in.notes_cancel,
            flg_status_in          => rec_in.flg_status,
            id_room_in             => rec_in.id_room,
            flg_type_in            => rec_in.flg_type,
            flg_sub_type_in        => rec_in.flg_sub_type,
            flg_print_type_in      => rec_in.flg_print_type,
            id_prof_print_in       => rec_in.id_prof_print,
            id_prof_pending_in     => rec_in.id_prof_pending,
            notes_pending_in       => rec_in.notes_pending,
            id_unidose_car_in      => rec_in.id_unidose_car,
            id_patient_in          => rec_in.id_patient,
            dt_drug_req_tstz_in    => rec_in.dt_drug_req_tstz,
            dt_begin_tstz_in       => rec_in.dt_begin_tstz,
            dt_cancel_tstz_in      => rec_in.dt_cancel_tstz,
            dt_pending_tstz_in     => rec_in.dt_pending_tstz,
            dt_print_tstz_in       => rec_in.dt_print_tstz,
            dt_unidose_car_tstz_in => rec_in.dt_unidose_car_tstz,
            id_prev_episode_in     => rec_in.id_prev_episode,
            create_user_in         => rec_in.create_user,
            create_time_in         => rec_in.create_time,
            create_institution_in  => rec_in.create_institution,
            update_user_in         => rec_in.update_user,
            update_time_in         => rec_in.update_time,
            update_institution_in  => rec_in.update_institution,
            handle_error_in        => handle_error_in,
            rows_out               => rows_out);
    END upd;

    --Update with collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN drug_req_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    ) IS
        l_id_drug_req         id_drug_req_cc;
        l_notes_req           notes_req_cc;
        l_id_episode          id_episode_cc;
        l_id_prof_req         id_prof_req_cc;
        l_id_prof_cancel      id_prof_cancel_cc;
        l_notes_cancel        notes_cancel_cc;
        l_flg_status          flg_status_cc;
        l_id_room             id_room_cc;
        l_flg_type            flg_type_cc;
        l_flg_sub_type        flg_sub_type_cc;
        l_flg_print_type      flg_print_type_cc;
        l_id_prof_print       id_prof_print_cc;
        l_id_prof_pending     id_prof_pending_cc;
        l_notes_pending       notes_pending_cc;
        l_id_unidose_car      id_unidose_car_cc;
        l_id_patient          id_patient_cc;
        l_dt_drug_req_tstz    dt_drug_req_tstz_cc;
        l_dt_begin_tstz       dt_begin_tstz_cc;
        l_dt_cancel_tstz      dt_cancel_tstz_cc;
        l_dt_pending_tstz     dt_pending_tstz_cc;
        l_dt_print_tstz       dt_print_tstz_cc;
        l_dt_unidose_car_tstz dt_unidose_car_tstz_cc;
        l_id_prev_episode     id_prev_episode_cc;
        l_create_user         create_user_cc;
        l_create_time         create_time_cc;
        l_create_institution  create_institution_cc;
        l_update_user         update_user_cc;
        l_update_time         update_time_cc;
        l_update_institution  update_institution_cc;
    BEGIN
        FOR i IN col_in.first .. col_in.last
        LOOP
            l_id_drug_req(i) := col_in(i).id_drug_req;
            l_notes_req(i) := col_in(i).notes_req;
            l_id_episode(i) := col_in(i).id_episode;
            l_id_prof_req(i) := col_in(i).id_prof_req;
            l_id_prof_cancel(i) := col_in(i).id_prof_cancel;
            l_notes_cancel(i) := col_in(i).notes_cancel;
            l_flg_status(i) := col_in(i).flg_status;
            l_id_room(i) := col_in(i).id_room;
            l_flg_type(i) := col_in(i).flg_type;
            l_flg_sub_type(i) := col_in(i).flg_sub_type;
            l_flg_print_type(i) := col_in(i).flg_print_type;
            l_id_prof_print(i) := col_in(i).id_prof_print;
            l_id_prof_pending(i) := col_in(i).id_prof_pending;
            l_notes_pending(i) := col_in(i).notes_pending;
            l_id_unidose_car(i) := col_in(i).id_unidose_car;
            l_id_patient(i) := col_in(i).id_patient;
            l_dt_drug_req_tstz(i) := col_in(i).dt_drug_req_tstz;
            l_dt_begin_tstz(i) := col_in(i).dt_begin_tstz;
            l_dt_cancel_tstz(i) := col_in(i).dt_cancel_tstz;
            l_dt_pending_tstz(i) := col_in(i).dt_pending_tstz;
            l_dt_print_tstz(i) := col_in(i).dt_print_tstz;
            l_dt_unidose_car_tstz(i) := col_in(i).dt_unidose_car_tstz;
            l_id_prev_episode(i) := col_in(i).id_prev_episode;
            l_create_user(i) := col_in(i).create_user;
            l_create_time(i) := col_in(i).create_time;
            l_create_institution(i) := col_in(i).create_institution;
            l_update_user(i) := col_in(i).update_user;
            l_update_time(i) := col_in(i).update_time;
            l_update_institution(i) := col_in(i).update_institution;
        END LOOP;
        IF nvl(ignore_if_null_in, FALSE)
        THEN
            -- Set any columns to their current values
            -- if incoming value is NULL.
            -- Put WHEN clause on column-level triggers!
            FORALL i IN col_in.first .. col_in.last
                UPDATE drug_req
                   SET notes_req           = nvl(l_notes_req(i), notes_req),
                       id_episode          = nvl(l_id_episode(i), id_episode),
                       id_prof_req         = nvl(l_id_prof_req(i), id_prof_req),
                       id_prof_cancel      = nvl(l_id_prof_cancel(i), id_prof_cancel),
                       notes_cancel        = nvl(l_notes_cancel(i), notes_cancel),
                       flg_status          = nvl(l_flg_status(i), flg_status),
                       id_room             = nvl(l_id_room(i), id_room),
                       flg_type            = nvl(l_flg_type(i), flg_type),
                       flg_sub_type        = nvl(l_flg_sub_type(i), flg_sub_type),
                       flg_print_type      = nvl(l_flg_print_type(i), flg_print_type),
                       id_prof_print       = nvl(l_id_prof_print(i), id_prof_print),
                       id_prof_pending     = nvl(l_id_prof_pending(i), id_prof_pending),
                       notes_pending       = nvl(l_notes_pending(i), notes_pending),
                       id_unidose_car      = nvl(l_id_unidose_car(i), id_unidose_car),
                       id_patient          = nvl(l_id_patient(i), id_patient),
                       dt_drug_req_tstz    = nvl(l_dt_drug_req_tstz(i), dt_drug_req_tstz),
                       dt_begin_tstz       = nvl(l_dt_begin_tstz(i), dt_begin_tstz),
                       dt_cancel_tstz      = nvl(l_dt_cancel_tstz(i), dt_cancel_tstz),
                       dt_pending_tstz     = nvl(l_dt_pending_tstz(i), dt_pending_tstz),
                       dt_print_tstz       = nvl(l_dt_print_tstz(i), dt_print_tstz),
                       dt_unidose_car_tstz = nvl(l_dt_unidose_car_tstz(i), dt_unidose_car_tstz),
                       id_prev_episode     = nvl(l_id_prev_episode(i), id_prev_episode),
                       create_user         = nvl(l_create_user(i), create_user),
                       create_time         = nvl(l_create_time(i), create_time),
                       create_institution  = nvl(l_create_institution(i), create_institution),
                       update_user         = nvl(l_update_user(i), update_user),
                       update_time         = nvl(l_update_time(i), update_time),
                       update_institution  = nvl(l_update_institution(i), update_institution)
                 WHERE id_drug_req = l_id_drug_req(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        ELSE
            FORALL i IN col_in.first .. col_in.last
                UPDATE drug_req
                   SET notes_req           = l_notes_req(i),
                       id_episode          = l_id_episode(i),
                       id_prof_req         = l_id_prof_req(i),
                       id_prof_cancel      = l_id_prof_cancel(i),
                       notes_cancel        = l_notes_cancel(i),
                       flg_status          = l_flg_status(i),
                       id_room             = l_id_room(i),
                       flg_type            = l_flg_type(i),
                       flg_sub_type        = l_flg_sub_type(i),
                       flg_print_type      = l_flg_print_type(i),
                       id_prof_print       = l_id_prof_print(i),
                       id_prof_pending     = l_id_prof_pending(i),
                       notes_pending       = l_notes_pending(i),
                       id_unidose_car      = l_id_unidose_car(i),
                       id_patient          = l_id_patient(i),
                       dt_drug_req_tstz    = l_dt_drug_req_tstz(i),
                       dt_begin_tstz       = l_dt_begin_tstz(i),
                       dt_cancel_tstz      = l_dt_cancel_tstz(i),
                       dt_pending_tstz     = l_dt_pending_tstz(i),
                       dt_print_tstz       = l_dt_print_tstz(i),
                       dt_unidose_car_tstz = l_dt_unidose_car_tstz(i),
                       id_prev_episode     = l_id_prev_episode(i),
                       create_user         = l_create_user(i),
                       create_time         = l_create_time(i),
                       create_institution  = l_create_institution(i),
                       update_user         = l_update_user(i),
                       update_time         = l_update_time(i),
                       update_institution  = l_update_institution(i)
                 WHERE id_drug_req = l_id_drug_req(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update with collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN drug_req_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(col_in, ignore_if_null_in, handle_error_in, rows_out);
    END upd;

    --Dynamic update string
    FUNCTION dynupdstr
    (
        colname_in IN all_tab_columns.column_name%TYPE,
        where_in   IN VARCHAR2 := NULL
    ) RETURN VARCHAR2 IS
    BEGIN
        RETURN 'BEGIN UPDATE drug_req
SET ' || colname_in || ' = :value
 WHERE ' || nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;';
    END dynupdstr;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (with rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN UPDATE drug_req
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    END increment_onecol;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (without rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        EXECUTE IMMEDIATE 'UPDATE drug_req
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1');
    END increment_onecol;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_drug_req_in  IN drug_req.id_drug_req%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_req
         WHERE id_drug_req = id_drug_req_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_drug_req_in  IN drug_req.id_drug_req%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del(id_drug_req_in => id_drug_req_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del;

    -- Delete all rows for this DRQ_EPIS_FK foreign key value
    PROCEDURE del_drq_epis_fk
    (
        id_episode_in   IN drug_req.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_req
         WHERE id_episode = id_episode_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_drq_epis_fk;

    -- Delete all rows for this DRQ_EPIS_FK2 foreign key value
    PROCEDURE del_drq_epis_fk2
    (
        id_prev_episode_in IN drug_req.id_prev_episode%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_req
         WHERE id_prev_episode = id_prev_episode_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_drq_epis_fk2;

    -- Delete all rows for this DRQ_PAT_FK foreign key value
    PROCEDURE del_drq_pat_fk
    (
        id_patient_in   IN drug_req.id_patient%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_req
         WHERE id_patient = id_patient_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_drq_pat_fk;

    -- Delete all rows for this DRQ_PROF_CANCEL_FK foreign key value
    PROCEDURE del_drq_prof_cancel_fk
    (
        id_prof_cancel_in IN drug_req.id_prof_cancel%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_req
         WHERE id_prof_cancel = id_prof_cancel_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_drq_prof_cancel_fk;

    -- Delete all rows for this DRQ_PROF_PENDING_FK foreign key value
    PROCEDURE del_drq_prof_pending_fk
    (
        id_prof_pending_in IN drug_req.id_prof_pending%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_req
         WHERE id_prof_pending = id_prof_pending_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_drq_prof_pending_fk;

    -- Delete all rows for this DRQ_PROF_PRINT_FK foreign key value
    PROCEDURE del_drq_prof_print_fk
    (
        id_prof_print_in IN drug_req.id_prof_print%TYPE,
        handle_error_in  IN BOOLEAN := TRUE,
        rows_out         OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_req
         WHERE id_prof_print = id_prof_print_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_drq_prof_print_fk;

    -- Delete all rows for this DRQ_PROF_REQ_FK foreign key value
    PROCEDURE del_drq_prof_req_fk
    (
        id_prof_req_in  IN drug_req.id_prof_req%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_req
         WHERE id_prof_req = id_prof_req_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_drq_prof_req_fk;

    -- Delete all rows for this DRQ_ROOM_FK foreign key value
    PROCEDURE del_drq_room_fk
    (
        id_room_in      IN drug_req.id_room%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_req
         WHERE id_room = id_room_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_drq_room_fk;

    -- Delete all rows for this DRQ_UCR_FK foreign key value
    PROCEDURE del_drq_ucr_fk
    (
        id_unidose_car_in IN drug_req.id_unidose_car%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_req
         WHERE id_unidose_car = id_unidose_car_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_drq_ucr_fk;

    -- Delete all rows for this DRQ_EPIS_FK foreign key value
    PROCEDURE del_drq_epis_fk
    (
        id_episode_in   IN drug_req.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_drq_epis_fk(id_episode_in => id_episode_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_drq_epis_fk;

    -- Delete all rows for this DRQ_EPIS_FK2 foreign key value
    PROCEDURE del_drq_epis_fk2
    (
        id_prev_episode_in IN drug_req.id_prev_episode%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_drq_epis_fk2(id_prev_episode_in => id_prev_episode_in,
                         handle_error_in    => handle_error_in,
                         rows_out           => rows_out);
    END del_drq_epis_fk2;

    -- Delete all rows for this DRQ_PAT_FK foreign key value
    PROCEDURE del_drq_pat_fk
    (
        id_patient_in   IN drug_req.id_patient%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_drq_pat_fk(id_patient_in => id_patient_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_drq_pat_fk;

    -- Delete all rows for this DRQ_PROF_CANCEL_FK foreign key value
    PROCEDURE del_drq_prof_cancel_fk
    (
        id_prof_cancel_in IN drug_req.id_prof_cancel%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_drq_prof_cancel_fk(id_prof_cancel_in => id_prof_cancel_in,
                               handle_error_in   => handle_error_in,
                               rows_out          => rows_out);
    END del_drq_prof_cancel_fk;

    -- Delete all rows for this DRQ_PROF_PENDING_FK foreign key value
    PROCEDURE del_drq_prof_pending_fk
    (
        id_prof_pending_in IN drug_req.id_prof_pending%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_drq_prof_pending_fk(id_prof_pending_in => id_prof_pending_in,
                                handle_error_in    => handle_error_in,
                                rows_out           => rows_out);
    END del_drq_prof_pending_fk;

    -- Delete all rows for this DRQ_PROF_PRINT_FK foreign key value
    PROCEDURE del_drq_prof_print_fk
    (
        id_prof_print_in IN drug_req.id_prof_print%TYPE,
        handle_error_in  IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_drq_prof_print_fk(id_prof_print_in => id_prof_print_in,
                              handle_error_in  => handle_error_in,
                              rows_out         => rows_out);
    END del_drq_prof_print_fk;

    -- Delete all rows for this DRQ_PROF_REQ_FK foreign key value
    PROCEDURE del_drq_prof_req_fk
    (
        id_prof_req_in  IN drug_req.id_prof_req%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_drq_prof_req_fk(id_prof_req_in => id_prof_req_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_drq_prof_req_fk;

    -- Delete all rows for this DRQ_ROOM_FK foreign key value
    PROCEDURE del_drq_room_fk
    (
        id_room_in      IN drug_req.id_room%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_drq_room_fk(id_room_in => id_room_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_drq_room_fk;

    -- Delete all rows for this DRQ_UCR_FK foreign key value
    PROCEDURE del_drq_ucr_fk
    (
        id_unidose_car_in IN drug_req.id_unidose_car%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_drq_ucr_fk(id_unidose_car_in => id_unidose_car_in,
                       handle_error_in   => handle_error_in,
                       rows_out          => rows_out);
    END del_drq_ucr_fk;

    -- Deletions using dynamic SQL
    FUNCTION dyndelstr(where_in IN VARCHAR2) RETURN VARCHAR2 IS
    BEGIN
        IF where_in IS NULL
        THEN
            RETURN 'DELETE FROM drug_req';
        ELSE
            RETURN 'DELETE FROM drug_req WHERE ' || where_in;
        END IF;
    END dyndelstr;
    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyndelstr(where_clause_in) ||
                          ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyndelstr(where_clause_in);
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(drug_req_inout IN OUT drug_req%ROWTYPE) IS
    BEGIN
        drug_req_inout.id_drug_req         := NULL;
        drug_req_inout.notes_req           := NULL;
        drug_req_inout.id_episode          := NULL;
        drug_req_inout.id_prof_req         := NULL;
        drug_req_inout.id_prof_cancel      := NULL;
        drug_req_inout.notes_cancel        := NULL;
        drug_req_inout.flg_status          := NULL;
        drug_req_inout.id_room             := NULL;
        drug_req_inout.flg_type            := NULL;
        drug_req_inout.flg_sub_type        := NULL;
        drug_req_inout.flg_print_type      := NULL;
        drug_req_inout.id_prof_print       := NULL;
        drug_req_inout.id_prof_pending     := NULL;
        drug_req_inout.notes_pending       := NULL;
        drug_req_inout.id_unidose_car      := NULL;
        drug_req_inout.id_patient          := NULL;
        drug_req_inout.dt_drug_req_tstz    := NULL;
        drug_req_inout.dt_begin_tstz       := NULL;
        drug_req_inout.dt_cancel_tstz      := NULL;
        drug_req_inout.dt_pending_tstz     := NULL;
        drug_req_inout.dt_print_tstz       := NULL;
        drug_req_inout.dt_unidose_car_tstz := NULL;
        drug_req_inout.id_prev_episode     := NULL;
        drug_req_inout.create_user         := NULL;
        drug_req_inout.create_time         := NULL;
        drug_req_inout.create_institution  := NULL;
        drug_req_inout.update_user         := NULL;
        drug_req_inout.update_time         := NULL;
        drug_req_inout.update_institution  := NULL;
    END initrec;

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN drug_req%ROWTYPE IS
        l_drug_req drug_req%ROWTYPE;
    BEGIN
        RETURN l_drug_req;
    END initrec;

    --get data from rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN drug_req_tc IS
        data drug_req_tc;
    BEGIN
        SELECT *
          BULK COLLECT
          INTO data
          FROM drug_req
         WHERE ROWID IN (SELECT /*+ OPT_ESTIMATE(TABLE t ROWS=1) */
                          *
                           FROM TABLE(rows_in) t);
        RETURN data;
    END get_data_rowid;

    --get data from rowid (pragma autonomous transacion)
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN drug_req_tc IS
        data drug_req_tc;
        PRAGMA AUTONOMOUS_TRANSACTION;
    BEGIN
        data := get_data_rowid(rows_in);
        COMMIT;
        RETURN data;
    
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'get_data_rowid_pat');
            ROLLBACK;
        
    END get_data_rowid_pat;

BEGIN
    NULL;
END ts_drug_req;
/
