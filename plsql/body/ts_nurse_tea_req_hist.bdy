/*-- Last Change Revision: $Rev: 2028274 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:44:48 +0100 (ter, 02 ago 2022) $*/
CREATE OR REPLACE PACKAGE BODY ts_nurse_tea_req_hist
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {657BD35E-2E48-4CD4-B14E-41420B8433B3}
| Created On: Junho 18, 2012 17:8:44
| Created By: ALERT
*/
 IS

    e_null_column_value EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_null_column_value, -1400);
    --
    e_existing_fky_reference EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_existing_fky_reference, -2266);
    --
    e_check_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_check_constraint_failure, -2290);
    --
    e_no_parent_key EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_no_parent_key, -2291);
    --
    e_child_record_found EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_child_record_found, -2292);
    --
    e_forall_error EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_forall_error, -24381);
    --
    -- Defined for backward compatibilty.
    e_integ_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_integ_constraint_failure, -2291);

    -- Private utilities
    PROCEDURE get_constraint_info
    (
        owner_out OUT all_constraints.owner%TYPE,
        name_out  OUT all_constraints.constraint_name%TYPE
    ) IS
        l_errm  VARCHAR2(2000) := dbms_utility.format_error_stack;
        dotloc  PLS_INTEGER;
        leftloc PLS_INTEGER;
    BEGIN
        dotloc    := instr(l_errm, '.');
        leftloc   := instr(l_errm, '(');
        owner_out := substr(l_errm, leftloc + 1, dotloc - leftloc - 1);
        name_out  := substr(l_errm, dotloc + 1, instr(l_errm, ')') - dotloc - 1);
    END get_constraint_info;
    -- Public programs

    PROCEDURE ins
    (
        id_nurse_tea_req_hist_in      IN nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE,
        id_nurse_tea_req_in           IN nurse_tea_req_hist.id_nurse_tea_req%TYPE DEFAULT NULL,
        id_prof_req_in                IN nurse_tea_req_hist.id_prof_req%TYPE DEFAULT NULL,
        id_episode_in                 IN nurse_tea_req_hist.id_episode%TYPE DEFAULT NULL,
        req_header_in                 IN nurse_tea_req_hist.req_header%TYPE DEFAULT NULL,
        flg_status_in                 IN nurse_tea_req_hist.flg_status%TYPE DEFAULT NULL,
        notes_req_in                  IN nurse_tea_req_hist.notes_req%TYPE DEFAULT NULL,
        id_prof_close_in              IN nurse_tea_req_hist.id_prof_close%TYPE DEFAULT NULL,
        notes_close_in                IN nurse_tea_req_hist.notes_close%TYPE DEFAULT NULL,
        id_prof_exec_in               IN nurse_tea_req_hist.id_prof_exec%TYPE DEFAULT NULL,
        id_prev_episode_in            IN nurse_tea_req_hist.id_prev_episode%TYPE DEFAULT NULL,
        dt_nurse_tea_req_tstz_in      IN nurse_tea_req_hist.dt_nurse_tea_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in              IN nurse_tea_req_hist.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_close_tstz_in              IN nurse_tea_req_hist.dt_close_tstz%TYPE DEFAULT NULL,
        id_visit_in                   IN nurse_tea_req_hist.id_visit%TYPE DEFAULT NULL,
        id_patient_in                 IN nurse_tea_req_hist.id_patient%TYPE DEFAULT NULL,
        status_flg_in                 IN nurse_tea_req_hist.status_flg%TYPE DEFAULT NULL,
        status_icon_in                IN nurse_tea_req_hist.status_icon%TYPE DEFAULT NULL,
        status_msg_in                 IN nurse_tea_req_hist.status_msg%TYPE DEFAULT NULL,
        status_str_in                 IN nurse_tea_req_hist.status_str%TYPE DEFAULT NULL,
        create_user_in                IN nurse_tea_req_hist.create_user%TYPE DEFAULT NULL,
        create_time_in                IN nurse_tea_req_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in         IN nurse_tea_req_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in                IN nurse_tea_req_hist.update_user%TYPE DEFAULT NULL,
        update_time_in                IN nurse_tea_req_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in         IN nurse_tea_req_hist.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in           IN nurse_tea_req_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_context_in                 IN nurse_tea_req_hist.id_context%TYPE DEFAULT NULL,
        flg_context_in                IN nurse_tea_req_hist.flg_context%TYPE DEFAULT NULL,
        id_nurse_tea_topic_in         IN nurse_tea_req_hist.id_nurse_tea_topic%TYPE DEFAULT NULL,
        id_order_recurr_plan_in       IN nurse_tea_req_hist.id_order_recurr_plan%TYPE DEFAULT NULL,
        description_in                IN nurse_tea_req_hist.description%TYPE DEFAULT NULL,
        flg_time_in                   IN nurse_tea_req_hist.flg_time%TYPE DEFAULT NULL,
        dt_nurse_tea_req_hist_tstz_in IN nurse_tea_req_hist.dt_nurse_tea_req_hist_tstz%TYPE DEFAULT NULL,
        desc_topic_aux_in             IN nurse_tea_req_hist.desc_topic_aux%TYPE DEFAULT NULL,
        id_not_order_reason_in        IN nurse_tea_req_hist.id_not_order_reason%TYPE DEFAULT NULL,
        handle_error_in               IN BOOLEAN := TRUE,
        rows_out                      OUT table_varchar
    ) IS
    BEGIN
    
        INSERT INTO nurse_tea_req_hist
            (id_nurse_tea_req_hist,
             id_nurse_tea_req,
             id_prof_req,
             id_episode,
             req_header,
             flg_status,
             notes_req,
             id_prof_close,
             notes_close,
             id_prof_exec,
             id_prev_episode,
             dt_nurse_tea_req_tstz,
             dt_begin_tstz,
             dt_close_tstz,
             id_visit,
             id_patient,
             status_flg,
             status_icon,
             status_msg,
             status_str,
             create_user,
             create_time,
             create_institution,
             update_user,
             update_time,
             update_institution,
             id_cancel_reason,
             id_context,
             flg_context,
             id_nurse_tea_topic,
             id_order_recurr_plan,
             description,
             flg_time,
             dt_nurse_tea_req_hist_tstz,
             desc_topic_aux,
             id_not_order_reason)
        VALUES
            (id_nurse_tea_req_hist_in,
             id_nurse_tea_req_in,
             id_prof_req_in,
             id_episode_in,
             req_header_in,
             flg_status_in,
             notes_req_in,
             id_prof_close_in,
             notes_close_in,
             id_prof_exec_in,
             id_prev_episode_in,
             dt_nurse_tea_req_tstz_in,
             dt_begin_tstz_in,
             dt_close_tstz_in,
             id_visit_in,
             id_patient_in,
             status_flg_in,
             status_icon_in,
             status_msg_in,
             status_str_in,
             create_user_in,
             create_time_in,
             create_institution_in,
             update_user_in,
             update_time_in,
             update_institution_in,
             id_cancel_reason_in,
             id_context_in,
             flg_context_in,
             id_nurse_tea_topic_in,
             id_order_recurr_plan_in,
             description_in,
             flg_time_in,
             dt_nurse_tea_req_hist_tstz_in,
             desc_topic_aux_in,
             id_not_order_reason_in)
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN dup_val_on_index THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner           all_constraints.owner%TYPE;
                    l_name            all_constraints.constraint_name%TYPE;
                    l_err_instance_id PLS_INTEGER;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF FALSE
                    THEN
                        NULL; -- Placeholder in case no unique indexes
                    ELSE
                        pk_alert_exceptions.raise_error(error_name_in => 'DUPLICATE-VALUE',
                                                        name1_in      => 'OWNER',
                                                        value1_in     => l_owner,
                                                        name2_in      => 'CONSTRAINT_NAME',
                                                        value2_in     => l_name,
                                                        name3_in      => 'TABLE_NAME',
                                                        value3_in     => 'NURSE_TEA_REQ_HIST');
                    END IF;
                END;
            END IF;
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'NURSE_TEA_REQ_HIST');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'NURSE_TEA_REQ_HIST');
                    IF l_name = 'NTRH_NTR_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_NURSE_TEA_REQ',
                                                        value_in           => id_nurse_tea_req_in);
                    END IF;
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
        WHEN e_null_column_value THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    v_errm    VARCHAR2(2000) := dbms_utility.format_error_stack;
                    dot1loc   INTEGER;
                    dot2loc   INTEGER;
                    parenloc  INTEGER;
                    c_owner   all_constraints.owner%TYPE;
                    c_tabname all_tables.table_name%TYPE;
                    c_colname all_tab_columns.column_name%TYPE;
                BEGIN
                    dot1loc   := instr(v_errm, '.', 1, 1);
                    dot2loc   := instr(v_errm, '.', 1, 2);
                    parenloc  := instr(v_errm, '(');
                    c_owner   := substr(v_errm, parenloc + 1, dot1loc - parenloc - 1);
                    c_tabname := substr(v_errm, dot1loc + 1, dot2loc - dot1loc - 1);
                    c_colname := substr(v_errm, dot2loc + 1, instr(v_errm, ')') - dot2loc - 1);
                
                    pk_alert_exceptions.raise_error(error_name_in => 'COLUMN-CANNOT-BE-NULL',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => c_owner,
                                                    name2_in      => 'TABLE_NAME',
                                                    value2_in     => c_tabname,
                                                    name3_in      => 'COLUMN_NAME',
                                                    value3_in     => c_colname);
                END;
            END IF;
    END ins;

    PROCEDURE ins
    (
        id_nurse_tea_req_hist_in      IN nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE,
        id_nurse_tea_req_in           IN nurse_tea_req_hist.id_nurse_tea_req%TYPE DEFAULT NULL,
        id_prof_req_in                IN nurse_tea_req_hist.id_prof_req%TYPE DEFAULT NULL,
        id_episode_in                 IN nurse_tea_req_hist.id_episode%TYPE DEFAULT NULL,
        req_header_in                 IN nurse_tea_req_hist.req_header%TYPE DEFAULT NULL,
        flg_status_in                 IN nurse_tea_req_hist.flg_status%TYPE DEFAULT NULL,
        notes_req_in                  IN nurse_tea_req_hist.notes_req%TYPE DEFAULT NULL,
        id_prof_close_in              IN nurse_tea_req_hist.id_prof_close%TYPE DEFAULT NULL,
        notes_close_in                IN nurse_tea_req_hist.notes_close%TYPE DEFAULT NULL,
        id_prof_exec_in               IN nurse_tea_req_hist.id_prof_exec%TYPE DEFAULT NULL,
        id_prev_episode_in            IN nurse_tea_req_hist.id_prev_episode%TYPE DEFAULT NULL,
        dt_nurse_tea_req_tstz_in      IN nurse_tea_req_hist.dt_nurse_tea_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in              IN nurse_tea_req_hist.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_close_tstz_in              IN nurse_tea_req_hist.dt_close_tstz%TYPE DEFAULT NULL,
        id_visit_in                   IN nurse_tea_req_hist.id_visit%TYPE DEFAULT NULL,
        id_patient_in                 IN nurse_tea_req_hist.id_patient%TYPE DEFAULT NULL,
        status_flg_in                 IN nurse_tea_req_hist.status_flg%TYPE DEFAULT NULL,
        status_icon_in                IN nurse_tea_req_hist.status_icon%TYPE DEFAULT NULL,
        status_msg_in                 IN nurse_tea_req_hist.status_msg%TYPE DEFAULT NULL,
        status_str_in                 IN nurse_tea_req_hist.status_str%TYPE DEFAULT NULL,
        create_user_in                IN nurse_tea_req_hist.create_user%TYPE DEFAULT NULL,
        create_time_in                IN nurse_tea_req_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in         IN nurse_tea_req_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in                IN nurse_tea_req_hist.update_user%TYPE DEFAULT NULL,
        update_time_in                IN nurse_tea_req_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in         IN nurse_tea_req_hist.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in           IN nurse_tea_req_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_context_in                 IN nurse_tea_req_hist.id_context%TYPE DEFAULT NULL,
        flg_context_in                IN nurse_tea_req_hist.flg_context%TYPE DEFAULT NULL,
        id_nurse_tea_topic_in         IN nurse_tea_req_hist.id_nurse_tea_topic%TYPE DEFAULT NULL,
        id_order_recurr_plan_in       IN nurse_tea_req_hist.id_order_recurr_plan%TYPE DEFAULT NULL,
        description_in                IN nurse_tea_req_hist.description%TYPE DEFAULT NULL,
        flg_time_in                   IN nurse_tea_req_hist.flg_time%TYPE DEFAULT NULL,
        dt_nurse_tea_req_hist_tstz_in IN nurse_tea_req_hist.dt_nurse_tea_req_hist_tstz%TYPE DEFAULT NULL,
        desc_topic_aux_in             IN nurse_tea_req_hist.desc_topic_aux%TYPE DEFAULT NULL,
        id_not_order_reason_in        IN nurse_tea_req_hist.id_not_order_reason%TYPE DEFAULT NULL,
        handle_error_in               IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
    
        ins(id_nurse_tea_req_hist_in      => id_nurse_tea_req_hist_in,
            id_nurse_tea_req_in           => id_nurse_tea_req_in,
            id_prof_req_in                => id_prof_req_in,
            id_episode_in                 => id_episode_in,
            req_header_in                 => req_header_in,
            flg_status_in                 => flg_status_in,
            notes_req_in                  => notes_req_in,
            id_prof_close_in              => id_prof_close_in,
            notes_close_in                => notes_close_in,
            id_prof_exec_in               => id_prof_exec_in,
            id_prev_episode_in            => id_prev_episode_in,
            dt_nurse_tea_req_tstz_in      => dt_nurse_tea_req_tstz_in,
            dt_begin_tstz_in              => dt_begin_tstz_in,
            dt_close_tstz_in              => dt_close_tstz_in,
            id_visit_in                   => id_visit_in,
            id_patient_in                 => id_patient_in,
            status_flg_in                 => status_flg_in,
            status_icon_in                => status_icon_in,
            status_msg_in                 => status_msg_in,
            status_str_in                 => status_str_in,
            create_user_in                => create_user_in,
            create_time_in                => create_time_in,
            create_institution_in         => create_institution_in,
            update_user_in                => update_user_in,
            update_time_in                => update_time_in,
            update_institution_in         => update_institution_in,
            id_cancel_reason_in           => id_cancel_reason_in,
            id_context_in                 => id_context_in,
            flg_context_in                => flg_context_in,
            id_nurse_tea_topic_in         => id_nurse_tea_topic_in,
            id_order_recurr_plan_in       => id_order_recurr_plan_in,
            description_in                => description_in,
            flg_time_in                   => flg_time_in,
            dt_nurse_tea_req_hist_tstz_in => dt_nurse_tea_req_hist_tstz_in,
            desc_topic_aux_in             => desc_topic_aux_in,
            id_not_order_reason_in        => id_not_order_reason_in,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
    END ins;

    /*
    START Special logic for handling LOB columns....
    */

    PROCEDURE n_ins_clobs_in_chunks
    (
        id_nurse_tea_req_hist_in      IN nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE,
        id_nurse_tea_req_in           IN nurse_tea_req_hist.id_nurse_tea_req%TYPE DEFAULT NULL,
        id_prof_req_in                IN nurse_tea_req_hist.id_prof_req%TYPE DEFAULT NULL,
        id_episode_in                 IN nurse_tea_req_hist.id_episode%TYPE DEFAULT NULL,
        req_header_in                 IN nurse_tea_req_hist.req_header%TYPE DEFAULT NULL,
        flg_status_in                 IN nurse_tea_req_hist.flg_status%TYPE DEFAULT NULL,
        notes_req_in                  IN nurse_tea_req_hist.notes_req%TYPE DEFAULT NULL,
        id_prof_close_in              IN nurse_tea_req_hist.id_prof_close%TYPE DEFAULT NULL,
        notes_close_in                IN nurse_tea_req_hist.notes_close%TYPE DEFAULT NULL,
        id_prof_exec_in               IN nurse_tea_req_hist.id_prof_exec%TYPE DEFAULT NULL,
        id_prev_episode_in            IN nurse_tea_req_hist.id_prev_episode%TYPE DEFAULT NULL,
        dt_nurse_tea_req_tstz_in      IN nurse_tea_req_hist.dt_nurse_tea_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in              IN nurse_tea_req_hist.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_close_tstz_in              IN nurse_tea_req_hist.dt_close_tstz%TYPE DEFAULT NULL,
        id_visit_in                   IN nurse_tea_req_hist.id_visit%TYPE DEFAULT NULL,
        id_patient_in                 IN nurse_tea_req_hist.id_patient%TYPE DEFAULT NULL,
        status_flg_in                 IN nurse_tea_req_hist.status_flg%TYPE DEFAULT NULL,
        status_icon_in                IN nurse_tea_req_hist.status_icon%TYPE DEFAULT NULL,
        status_msg_in                 IN nurse_tea_req_hist.status_msg%TYPE DEFAULT NULL,
        status_str_in                 IN nurse_tea_req_hist.status_str%TYPE DEFAULT NULL,
        create_user_in                IN nurse_tea_req_hist.create_user%TYPE DEFAULT NULL,
        create_time_in                IN nurse_tea_req_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in         IN nurse_tea_req_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in                IN nurse_tea_req_hist.update_user%TYPE DEFAULT NULL,
        update_time_in                IN nurse_tea_req_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in         IN nurse_tea_req_hist.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in           IN nurse_tea_req_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_context_in                 IN nurse_tea_req_hist.id_context%TYPE DEFAULT NULL,
        flg_context_in                IN nurse_tea_req_hist.flg_context%TYPE DEFAULT NULL,
        id_nurse_tea_topic_in         IN nurse_tea_req_hist.id_nurse_tea_topic%TYPE DEFAULT NULL,
        id_order_recurr_plan_in       IN nurse_tea_req_hist.id_order_recurr_plan%TYPE DEFAULT NULL,
        flg_time_in                   IN nurse_tea_req_hist.flg_time%TYPE DEFAULT NULL,
        dt_nurse_tea_req_hist_tstz_in IN nurse_tea_req_hist.dt_nurse_tea_req_hist_tstz%TYPE DEFAULT NULL,
        desc_topic_aux_in             IN nurse_tea_req_hist.desc_topic_aux%TYPE DEFAULT NULL,
        id_not_order_reason_in        IN nurse_tea_req_hist.id_not_order_reason%TYPE DEFAULT NULL,
        handle_error_in               IN BOOLEAN := TRUE,
        clob_columns_in               IN varchar2_t,
        clob_pieces_in                IN varchar2_t
    ) IS
        l_description  CLOB;
        i              PLS_INTEGER;
        current_column VARCHAR2(30) := '';
    BEGIN
        /* Be aware, PLSQL limitations on temporary clobs prevent multiple CLOB
        variables from pointing to the same temporary CLOB (it creates copies).
        Otherwise, the code could have been written a bit more compactly. */
    
        FOR i IN clob_columns_in.first .. clob_columns_in.last
        LOOP
            /* Even when all clobs are null, DOA must send 1 row so skip it. */
            IF clob_columns_in(i) IS NOT NULL
            THEN
                IF current_column <> clob_columns_in(i)
                   OR current_column IS NULL
                THEN
                    current_column := lower(clob_columns_in(i));
                
                    CASE current_column
                        WHEN 'description_in' THEN
                            IF l_description IS NULL
                            THEN
                                dbms_lob.createtemporary(l_description, TRUE, dbms_lob.call);
                            END IF;
                    END CASE;
                END IF;
            
                CASE current_column
                    WHEN 'description_in' THEN
                        dbms_lob.writeappend(l_description, length(clob_pieces_in(i)), clob_pieces_in(i));
                END CASE;
            END IF;
        END LOOP;
    
        ins(id_nurse_tea_req_hist_in      => id_nurse_tea_req_hist_in,
            id_nurse_tea_req_in           => id_nurse_tea_req_in,
            id_prof_req_in                => id_prof_req_in,
            id_episode_in                 => id_episode_in,
            req_header_in                 => req_header_in,
            flg_status_in                 => flg_status_in,
            notes_req_in                  => notes_req_in,
            id_prof_close_in              => id_prof_close_in,
            notes_close_in                => notes_close_in,
            id_prof_exec_in               => id_prof_exec_in,
            id_prev_episode_in            => id_prev_episode_in,
            dt_nurse_tea_req_tstz_in      => dt_nurse_tea_req_tstz_in,
            dt_begin_tstz_in              => dt_begin_tstz_in,
            dt_close_tstz_in              => dt_close_tstz_in,
            id_visit_in                   => id_visit_in,
            id_patient_in                 => id_patient_in,
            status_flg_in                 => status_flg_in,
            status_icon_in                => status_icon_in,
            status_msg_in                 => status_msg_in,
            status_str_in                 => status_str_in,
            create_user_in                => create_user_in,
            create_time_in                => create_time_in,
            create_institution_in         => create_institution_in,
            update_user_in                => update_user_in,
            update_time_in                => update_time_in,
            update_institution_in         => update_institution_in,
            id_cancel_reason_in           => id_cancel_reason_in,
            id_context_in                 => id_context_in,
            flg_context_in                => flg_context_in,
            id_nurse_tea_topic_in         => id_nurse_tea_topic_in,
            id_order_recurr_plan_in       => id_order_recurr_plan_in,
            description_in                => l_description,
            flg_time_in                   => flg_time_in,
            dt_nurse_tea_req_hist_tstz_in => dt_nurse_tea_req_hist_tstz_in,
            desc_topic_aux_in             => desc_topic_aux_in,
            id_not_order_reason_in        => id_not_order_reason_in,
            handle_error_in               => handle_error_in);
    
    END n_ins_clobs_in_chunks;

    PROCEDURE n_upd_clobs_in_chunks
    (
        id_nurse_tea_req_hist_in      IN nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE,
        id_nurse_tea_req_in           IN nurse_tea_req_hist.id_nurse_tea_req%TYPE DEFAULT NULL,
        id_prof_req_in                IN nurse_tea_req_hist.id_prof_req%TYPE DEFAULT NULL,
        id_episode_in                 IN nurse_tea_req_hist.id_episode%TYPE DEFAULT NULL,
        req_header_in                 IN nurse_tea_req_hist.req_header%TYPE DEFAULT NULL,
        flg_status_in                 IN nurse_tea_req_hist.flg_status%TYPE DEFAULT NULL,
        notes_req_in                  IN nurse_tea_req_hist.notes_req%TYPE DEFAULT NULL,
        id_prof_close_in              IN nurse_tea_req_hist.id_prof_close%TYPE DEFAULT NULL,
        notes_close_in                IN nurse_tea_req_hist.notes_close%TYPE DEFAULT NULL,
        id_prof_exec_in               IN nurse_tea_req_hist.id_prof_exec%TYPE DEFAULT NULL,
        id_prev_episode_in            IN nurse_tea_req_hist.id_prev_episode%TYPE DEFAULT NULL,
        dt_nurse_tea_req_tstz_in      IN nurse_tea_req_hist.dt_nurse_tea_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in              IN nurse_tea_req_hist.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_close_tstz_in              IN nurse_tea_req_hist.dt_close_tstz%TYPE DEFAULT NULL,
        id_visit_in                   IN nurse_tea_req_hist.id_visit%TYPE DEFAULT NULL,
        id_patient_in                 IN nurse_tea_req_hist.id_patient%TYPE DEFAULT NULL,
        status_flg_in                 IN nurse_tea_req_hist.status_flg%TYPE DEFAULT NULL,
        status_icon_in                IN nurse_tea_req_hist.status_icon%TYPE DEFAULT NULL,
        status_msg_in                 IN nurse_tea_req_hist.status_msg%TYPE DEFAULT NULL,
        status_str_in                 IN nurse_tea_req_hist.status_str%TYPE DEFAULT NULL,
        create_user_in                IN nurse_tea_req_hist.create_user%TYPE DEFAULT NULL,
        create_time_in                IN nurse_tea_req_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in         IN nurse_tea_req_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in                IN nurse_tea_req_hist.update_user%TYPE DEFAULT NULL,
        update_time_in                IN nurse_tea_req_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in         IN nurse_tea_req_hist.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in           IN nurse_tea_req_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_context_in                 IN nurse_tea_req_hist.id_context%TYPE DEFAULT NULL,
        flg_context_in                IN nurse_tea_req_hist.flg_context%TYPE DEFAULT NULL,
        id_nurse_tea_topic_in         IN nurse_tea_req_hist.id_nurse_tea_topic%TYPE DEFAULT NULL,
        id_order_recurr_plan_in       IN nurse_tea_req_hist.id_order_recurr_plan%TYPE DEFAULT NULL,
        flg_time_in                   IN nurse_tea_req_hist.flg_time%TYPE DEFAULT NULL,
        dt_nurse_tea_req_hist_tstz_in IN nurse_tea_req_hist.dt_nurse_tea_req_hist_tstz%TYPE DEFAULT NULL,
        desc_topic_aux_in             IN nurse_tea_req_hist.desc_topic_aux%TYPE DEFAULT NULL,
        id_not_order_reason_in        IN nurse_tea_req_hist.id_not_order_reason%TYPE DEFAULT NULL,
        ignore_if_null_in             IN BOOLEAN := TRUE,
        handle_error_in               IN BOOLEAN := TRUE,
        clob_columns_in               IN varchar2_t,
        clob_pieces_in                IN varchar2_t
    ) IS
        l_description  CLOB;
        i              PLS_INTEGER;
        current_column VARCHAR2(30) := '';
        l_rows         PLS_INTEGER;
    BEGIN
    
        /* Be aware, PLSQL limitations on temporary clobs prevent multiple CLOB
        variables from pointing to the same temporary CLOB (it creates copies).
        Otherwise, the code could have been written a bit more compactly. */
    
        FOR i IN clob_columns_in.first .. clob_columns_in.last
        LOOP
            /* Even when all clobs are null, DOA must send 1 row so skip it. */
            IF clob_columns_in(i) IS NOT NULL
            THEN
                IF current_column <> clob_columns_in(i)
                   OR current_column IS NULL
                THEN
                    current_column := lower(clob_columns_in(i));
                
                    CASE current_column
                        WHEN 'description_in' THEN
                            IF l_description IS NULL
                            THEN
                                dbms_lob.createtemporary(l_description, TRUE, dbms_lob.call);
                            END IF;
                    END CASE;
                END IF;
            
                CASE current_column
                    WHEN 'description_in' THEN
                        dbms_lob.writeappend(l_description, length(clob_pieces_in(i)), clob_pieces_in(i));
                END CASE;
            END IF;
        END LOOP;
    
        upd(id_nurse_tea_req_hist_in      => id_nurse_tea_req_hist_in,
            id_nurse_tea_req_in           => id_nurse_tea_req_in,
            id_prof_req_in                => id_prof_req_in,
            id_episode_in                 => id_episode_in,
            req_header_in                 => req_header_in,
            flg_status_in                 => flg_status_in,
            notes_req_in                  => notes_req_in,
            id_prof_close_in              => id_prof_close_in,
            notes_close_in                => notes_close_in,
            id_prof_exec_in               => id_prof_exec_in,
            id_prev_episode_in            => id_prev_episode_in,
            dt_nurse_tea_req_tstz_in      => dt_nurse_tea_req_tstz_in,
            dt_begin_tstz_in              => dt_begin_tstz_in,
            dt_close_tstz_in              => dt_close_tstz_in,
            id_visit_in                   => id_visit_in,
            id_patient_in                 => id_patient_in,
            status_flg_in                 => status_flg_in,
            status_icon_in                => status_icon_in,
            status_msg_in                 => status_msg_in,
            status_str_in                 => status_str_in,
            create_user_in                => create_user_in,
            create_time_in                => create_time_in,
            create_institution_in         => create_institution_in,
            update_user_in                => update_user_in,
            update_time_in                => update_time_in,
            update_institution_in         => update_institution_in,
            id_cancel_reason_in           => id_cancel_reason_in,
            id_context_in                 => id_context_in,
            flg_context_in                => flg_context_in,
            id_nurse_tea_topic_in         => id_nurse_tea_topic_in,
            id_order_recurr_plan_in       => id_order_recurr_plan_in,
            description_in                => l_description,
            flg_time_in                   => flg_time_in,
            dt_nurse_tea_req_hist_tstz_in => dt_nurse_tea_req_hist_tstz_in,
            desc_topic_aux_in             => desc_topic_aux_in,
            id_not_order_reason_in        => id_not_order_reason_in,
            handle_error_in               => handle_error_in);
    END n_upd_clobs_in_chunks;

    PROCEDURE n_upd_ins_clobs_in_chunks
    (
        id_nurse_tea_req_hist_in      IN nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE,
        id_nurse_tea_req_in           IN nurse_tea_req_hist.id_nurse_tea_req%TYPE DEFAULT NULL,
        id_prof_req_in                IN nurse_tea_req_hist.id_prof_req%TYPE DEFAULT NULL,
        id_episode_in                 IN nurse_tea_req_hist.id_episode%TYPE DEFAULT NULL,
        req_header_in                 IN nurse_tea_req_hist.req_header%TYPE DEFAULT NULL,
        flg_status_in                 IN nurse_tea_req_hist.flg_status%TYPE DEFAULT NULL,
        notes_req_in                  IN nurse_tea_req_hist.notes_req%TYPE DEFAULT NULL,
        id_prof_close_in              IN nurse_tea_req_hist.id_prof_close%TYPE DEFAULT NULL,
        notes_close_in                IN nurse_tea_req_hist.notes_close%TYPE DEFAULT NULL,
        id_prof_exec_in               IN nurse_tea_req_hist.id_prof_exec%TYPE DEFAULT NULL,
        id_prev_episode_in            IN nurse_tea_req_hist.id_prev_episode%TYPE DEFAULT NULL,
        dt_nurse_tea_req_tstz_in      IN nurse_tea_req_hist.dt_nurse_tea_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in              IN nurse_tea_req_hist.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_close_tstz_in              IN nurse_tea_req_hist.dt_close_tstz%TYPE DEFAULT NULL,
        id_visit_in                   IN nurse_tea_req_hist.id_visit%TYPE DEFAULT NULL,
        id_patient_in                 IN nurse_tea_req_hist.id_patient%TYPE DEFAULT NULL,
        status_flg_in                 IN nurse_tea_req_hist.status_flg%TYPE DEFAULT NULL,
        status_icon_in                IN nurse_tea_req_hist.status_icon%TYPE DEFAULT NULL,
        status_msg_in                 IN nurse_tea_req_hist.status_msg%TYPE DEFAULT NULL,
        status_str_in                 IN nurse_tea_req_hist.status_str%TYPE DEFAULT NULL,
        create_user_in                IN nurse_tea_req_hist.create_user%TYPE DEFAULT NULL,
        create_time_in                IN nurse_tea_req_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in         IN nurse_tea_req_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in                IN nurse_tea_req_hist.update_user%TYPE DEFAULT NULL,
        update_time_in                IN nurse_tea_req_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in         IN nurse_tea_req_hist.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in           IN nurse_tea_req_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_context_in                 IN nurse_tea_req_hist.id_context%TYPE DEFAULT NULL,
        flg_context_in                IN nurse_tea_req_hist.flg_context%TYPE DEFAULT NULL,
        id_nurse_tea_topic_in         IN nurse_tea_req_hist.id_nurse_tea_topic%TYPE DEFAULT NULL,
        id_order_recurr_plan_in       IN nurse_tea_req_hist.id_order_recurr_plan%TYPE DEFAULT NULL,
        flg_time_in                   IN nurse_tea_req_hist.flg_time%TYPE DEFAULT NULL,
        dt_nurse_tea_req_hist_tstz_in IN nurse_tea_req_hist.dt_nurse_tea_req_hist_tstz%TYPE DEFAULT NULL,
        desc_topic_aux_in             IN nurse_tea_req_hist.desc_topic_aux%TYPE DEFAULT NULL,
        id_not_order_reason_in        IN nurse_tea_req_hist.id_not_order_reason%TYPE DEFAULT NULL,
        ignore_if_null_in             IN BOOLEAN DEFAULT TRUE,
        handle_error_in               IN BOOLEAN DEFAULT TRUE,
        clob_columns_in               IN varchar2_t,
        clob_pieces_in                IN varchar2_t
    ) IS
    BEGIN
        n_upd_clobs_in_chunks(id_nurse_tea_req_hist_in      => id_nurse_tea_req_hist_in,
                              id_nurse_tea_req_in           => id_nurse_tea_req_in,
                              id_prof_req_in                => id_prof_req_in,
                              id_episode_in                 => id_episode_in,
                              req_header_in                 => req_header_in,
                              flg_status_in                 => flg_status_in,
                              notes_req_in                  => notes_req_in,
                              id_prof_close_in              => id_prof_close_in,
                              notes_close_in                => notes_close_in,
                              id_prof_exec_in               => id_prof_exec_in,
                              id_prev_episode_in            => id_prev_episode_in,
                              dt_nurse_tea_req_tstz_in      => dt_nurse_tea_req_tstz_in,
                              dt_begin_tstz_in              => dt_begin_tstz_in,
                              dt_close_tstz_in              => dt_close_tstz_in,
                              id_visit_in                   => id_visit_in,
                              id_patient_in                 => id_patient_in,
                              status_flg_in                 => status_flg_in,
                              status_icon_in                => status_icon_in,
                              status_msg_in                 => status_msg_in,
                              status_str_in                 => status_str_in,
                              create_user_in                => create_user_in,
                              create_time_in                => create_time_in,
                              create_institution_in         => create_institution_in,
                              update_user_in                => update_user_in,
                              update_time_in                => update_time_in,
                              update_institution_in         => update_institution_in,
                              id_cancel_reason_in           => id_cancel_reason_in,
                              id_context_in                 => id_context_in,
                              flg_context_in                => flg_context_in,
                              id_nurse_tea_topic_in         => id_nurse_tea_topic_in,
                              id_order_recurr_plan_in       => id_order_recurr_plan_in,
                              flg_time_in                   => flg_time_in,
                              dt_nurse_tea_req_hist_tstz_in => dt_nurse_tea_req_hist_tstz_in,
                              desc_topic_aux_in             => desc_topic_aux_in,
                              id_not_order_reason_in        => id_not_order_reason_in,
                              clob_columns_in               => clob_columns_in,
                              clob_pieces_in                => clob_pieces_in,
                              ignore_if_null_in             => ignore_if_null_in,
                              handle_error_in               => handle_error_in);
    
        IF SQL%ROWCOUNT = 0
        THEN
            n_ins_clobs_in_chunks(id_nurse_tea_req_hist_in      => id_nurse_tea_req_hist_in,
                                  id_nurse_tea_req_in           => id_nurse_tea_req_in,
                                  id_prof_req_in                => id_prof_req_in,
                                  id_episode_in                 => id_episode_in,
                                  req_header_in                 => req_header_in,
                                  flg_status_in                 => flg_status_in,
                                  notes_req_in                  => notes_req_in,
                                  id_prof_close_in              => id_prof_close_in,
                                  notes_close_in                => notes_close_in,
                                  id_prof_exec_in               => id_prof_exec_in,
                                  id_prev_episode_in            => id_prev_episode_in,
                                  dt_nurse_tea_req_tstz_in      => dt_nurse_tea_req_tstz_in,
                                  dt_begin_tstz_in              => dt_begin_tstz_in,
                                  dt_close_tstz_in              => dt_close_tstz_in,
                                  id_visit_in                   => id_visit_in,
                                  id_patient_in                 => id_patient_in,
                                  status_flg_in                 => status_flg_in,
                                  status_icon_in                => status_icon_in,
                                  status_msg_in                 => status_msg_in,
                                  status_str_in                 => status_str_in,
                                  create_user_in                => create_user_in,
                                  create_time_in                => create_time_in,
                                  create_institution_in         => create_institution_in,
                                  update_user_in                => update_user_in,
                                  update_time_in                => update_time_in,
                                  update_institution_in         => update_institution_in,
                                  id_cancel_reason_in           => id_cancel_reason_in,
                                  id_context_in                 => id_context_in,
                                  flg_context_in                => flg_context_in,
                                  id_nurse_tea_topic_in         => id_nurse_tea_topic_in,
                                  id_order_recurr_plan_in       => id_order_recurr_plan_in,
                                  flg_time_in                   => flg_time_in,
                                  dt_nurse_tea_req_hist_tstz_in => dt_nurse_tea_req_hist_tstz_in,
                                  desc_topic_aux_in             => desc_topic_aux_in,
                                  id_not_order_reason_in        => id_not_order_reason_in,
                                  clob_columns_in               => clob_columns_in,
                                  clob_pieces_in                => clob_pieces_in,
                                  handle_error_in               => handle_error_in);
        END IF;
    END n_upd_ins_clobs_in_chunks;

    /*
    END Special logic for handling LOB columns.
    */

    PROCEDURE ins
    (
        rec_in          IN nurse_tea_req_hist%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_rec nurse_tea_req_hist%ROWTYPE := rec_in;
    BEGIN
        IF gen_pky_in
        THEN
            l_rec.id_nurse_tea_req_hist := next_key(sequence_in);
        END IF;
        ins(id_nurse_tea_req_hist_in      => l_rec.id_nurse_tea_req_hist,
            id_nurse_tea_req_in           => l_rec.id_nurse_tea_req,
            id_prof_req_in                => l_rec.id_prof_req,
            id_episode_in                 => l_rec.id_episode,
            req_header_in                 => l_rec.req_header,
            flg_status_in                 => l_rec.flg_status,
            notes_req_in                  => l_rec.notes_req,
            id_prof_close_in              => l_rec.id_prof_close,
            notes_close_in                => l_rec.notes_close,
            id_prof_exec_in               => l_rec.id_prof_exec,
            id_prev_episode_in            => l_rec.id_prev_episode,
            dt_nurse_tea_req_tstz_in      => l_rec.dt_nurse_tea_req_tstz,
            dt_begin_tstz_in              => l_rec.dt_begin_tstz,
            dt_close_tstz_in              => l_rec.dt_close_tstz,
            id_visit_in                   => l_rec.id_visit,
            id_patient_in                 => l_rec.id_patient,
            status_flg_in                 => l_rec.status_flg,
            status_icon_in                => l_rec.status_icon,
            status_msg_in                 => l_rec.status_msg,
            status_str_in                 => l_rec.status_str,
            create_user_in                => l_rec.create_user,
            create_time_in                => l_rec.create_time,
            create_institution_in         => l_rec.create_institution,
            update_user_in                => l_rec.update_user,
            update_time_in                => l_rec.update_time,
            update_institution_in         => l_rec.update_institution,
            id_cancel_reason_in           => l_rec.id_cancel_reason,
            id_context_in                 => l_rec.id_context,
            flg_context_in                => l_rec.flg_context,
            id_nurse_tea_topic_in         => l_rec.id_nurse_tea_topic,
            id_order_recurr_plan_in       => l_rec.id_order_recurr_plan,
            description_in                => l_rec.description,
            flg_time_in                   => l_rec.flg_time,
            dt_nurse_tea_req_hist_tstz_in => l_rec.dt_nurse_tea_req_hist_tstz,
            desc_topic_aux_in             => l_rec.desc_topic_aux,
            id_not_order_reason_in        => l_rec.id_not_order_reason,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN nurse_tea_req_hist%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
    
        ins(rec_in          => rec_in,
            gen_pky_in      => gen_pky_in,
            sequence_in     => sequence_in,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    
    END ins;

    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE
    
     IS
        retval nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE;
    
    BEGIN
        IF sequence_in IS NULL
        THEN
            SELECT seq_nurse_tea_req_hist.nextval
              INTO retval
              FROM dual;
        ELSE
            EXECUTE IMMEDIATE 'SELECT ' || sequence_in || '.NEXTVAL FROM dual'
                INTO retval;
        END IF;
        RETURN retval;
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'SEQUENCE-GENERATION-FAILURE',
                                            name1_in      => 'SEQUENCE',
                                            value1_in     => nvl(sequence_in, 'seq_NURSE_TEA_REQ_HIST'));
    END next_key;

    PROCEDURE ins
    (
        id_nurse_tea_req_in           IN nurse_tea_req_hist.id_nurse_tea_req%TYPE DEFAULT NULL,
        id_prof_req_in                IN nurse_tea_req_hist.id_prof_req%TYPE DEFAULT NULL,
        id_episode_in                 IN nurse_tea_req_hist.id_episode%TYPE DEFAULT NULL,
        req_header_in                 IN nurse_tea_req_hist.req_header%TYPE DEFAULT NULL,
        flg_status_in                 IN nurse_tea_req_hist.flg_status%TYPE DEFAULT NULL,
        notes_req_in                  IN nurse_tea_req_hist.notes_req%TYPE DEFAULT NULL,
        id_prof_close_in              IN nurse_tea_req_hist.id_prof_close%TYPE DEFAULT NULL,
        notes_close_in                IN nurse_tea_req_hist.notes_close%TYPE DEFAULT NULL,
        id_prof_exec_in               IN nurse_tea_req_hist.id_prof_exec%TYPE DEFAULT NULL,
        id_prev_episode_in            IN nurse_tea_req_hist.id_prev_episode%TYPE DEFAULT NULL,
        dt_nurse_tea_req_tstz_in      IN nurse_tea_req_hist.dt_nurse_tea_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in              IN nurse_tea_req_hist.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_close_tstz_in              IN nurse_tea_req_hist.dt_close_tstz%TYPE DEFAULT NULL,
        id_visit_in                   IN nurse_tea_req_hist.id_visit%TYPE DEFAULT NULL,
        id_patient_in                 IN nurse_tea_req_hist.id_patient%TYPE DEFAULT NULL,
        status_flg_in                 IN nurse_tea_req_hist.status_flg%TYPE DEFAULT NULL,
        status_icon_in                IN nurse_tea_req_hist.status_icon%TYPE DEFAULT NULL,
        status_msg_in                 IN nurse_tea_req_hist.status_msg%TYPE DEFAULT NULL,
        status_str_in                 IN nurse_tea_req_hist.status_str%TYPE DEFAULT NULL,
        create_user_in                IN nurse_tea_req_hist.create_user%TYPE DEFAULT NULL,
        create_time_in                IN nurse_tea_req_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in         IN nurse_tea_req_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in                IN nurse_tea_req_hist.update_user%TYPE DEFAULT NULL,
        update_time_in                IN nurse_tea_req_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in         IN nurse_tea_req_hist.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in           IN nurse_tea_req_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_context_in                 IN nurse_tea_req_hist.id_context%TYPE DEFAULT NULL,
        flg_context_in                IN nurse_tea_req_hist.flg_context%TYPE DEFAULT NULL,
        id_nurse_tea_topic_in         IN nurse_tea_req_hist.id_nurse_tea_topic%TYPE DEFAULT NULL,
        id_order_recurr_plan_in       IN nurse_tea_req_hist.id_order_recurr_plan%TYPE DEFAULT NULL,
        description_in                IN nurse_tea_req_hist.description%TYPE DEFAULT NULL,
        flg_time_in                   IN nurse_tea_req_hist.flg_time%TYPE DEFAULT NULL,
        dt_nurse_tea_req_hist_tstz_in IN nurse_tea_req_hist.dt_nurse_tea_req_hist_tstz%TYPE DEFAULT NULL,
        desc_topic_aux_in             IN nurse_tea_req_hist.desc_topic_aux%TYPE DEFAULT NULL,
        id_not_order_reason_in        IN nurse_tea_req_hist.id_not_order_reason%TYPE DEFAULT NULL,
        id_nurse_tea_req_hist_out     IN OUT nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE,
        handle_error_in               IN BOOLEAN := TRUE,
        rows_out                      OUT table_varchar
    ) IS
        l_pky nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE := next_key;
    BEGIN
        ins(id_nurse_tea_req_hist_in      => l_pky,
            id_nurse_tea_req_in           => id_nurse_tea_req_in,
            id_prof_req_in                => id_prof_req_in,
            id_episode_in                 => id_episode_in,
            req_header_in                 => req_header_in,
            flg_status_in                 => flg_status_in,
            notes_req_in                  => notes_req_in,
            id_prof_close_in              => id_prof_close_in,
            notes_close_in                => notes_close_in,
            id_prof_exec_in               => id_prof_exec_in,
            id_prev_episode_in            => id_prev_episode_in,
            dt_nurse_tea_req_tstz_in      => dt_nurse_tea_req_tstz_in,
            dt_begin_tstz_in              => dt_begin_tstz_in,
            dt_close_tstz_in              => dt_close_tstz_in,
            id_visit_in                   => id_visit_in,
            id_patient_in                 => id_patient_in,
            status_flg_in                 => status_flg_in,
            status_icon_in                => status_icon_in,
            status_msg_in                 => status_msg_in,
            status_str_in                 => status_str_in,
            create_user_in                => create_user_in,
            create_time_in                => create_time_in,
            create_institution_in         => create_institution_in,
            update_user_in                => update_user_in,
            update_time_in                => update_time_in,
            update_institution_in         => update_institution_in,
            id_cancel_reason_in           => id_cancel_reason_in,
            id_context_in                 => id_context_in,
            flg_context_in                => flg_context_in,
            id_nurse_tea_topic_in         => id_nurse_tea_topic_in,
            id_order_recurr_plan_in       => id_order_recurr_plan_in,
            description_in                => description_in,
            flg_time_in                   => flg_time_in,
            dt_nurse_tea_req_hist_tstz_in => dt_nurse_tea_req_hist_tstz_in,
            desc_topic_aux_in             => desc_topic_aux_in,
            id_not_order_reason_in        => id_not_order_reason_in,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
        id_nurse_tea_req_hist_out := l_pky;
    END ins;

    PROCEDURE ins
    (
        id_nurse_tea_req_in           IN nurse_tea_req_hist.id_nurse_tea_req%TYPE DEFAULT NULL,
        id_prof_req_in                IN nurse_tea_req_hist.id_prof_req%TYPE DEFAULT NULL,
        id_episode_in                 IN nurse_tea_req_hist.id_episode%TYPE DEFAULT NULL,
        req_header_in                 IN nurse_tea_req_hist.req_header%TYPE DEFAULT NULL,
        flg_status_in                 IN nurse_tea_req_hist.flg_status%TYPE DEFAULT NULL,
        notes_req_in                  IN nurse_tea_req_hist.notes_req%TYPE DEFAULT NULL,
        id_prof_close_in              IN nurse_tea_req_hist.id_prof_close%TYPE DEFAULT NULL,
        notes_close_in                IN nurse_tea_req_hist.notes_close%TYPE DEFAULT NULL,
        id_prof_exec_in               IN nurse_tea_req_hist.id_prof_exec%TYPE DEFAULT NULL,
        id_prev_episode_in            IN nurse_tea_req_hist.id_prev_episode%TYPE DEFAULT NULL,
        dt_nurse_tea_req_tstz_in      IN nurse_tea_req_hist.dt_nurse_tea_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in              IN nurse_tea_req_hist.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_close_tstz_in              IN nurse_tea_req_hist.dt_close_tstz%TYPE DEFAULT NULL,
        id_visit_in                   IN nurse_tea_req_hist.id_visit%TYPE DEFAULT NULL,
        id_patient_in                 IN nurse_tea_req_hist.id_patient%TYPE DEFAULT NULL,
        status_flg_in                 IN nurse_tea_req_hist.status_flg%TYPE DEFAULT NULL,
        status_icon_in                IN nurse_tea_req_hist.status_icon%TYPE DEFAULT NULL,
        status_msg_in                 IN nurse_tea_req_hist.status_msg%TYPE DEFAULT NULL,
        status_str_in                 IN nurse_tea_req_hist.status_str%TYPE DEFAULT NULL,
        create_user_in                IN nurse_tea_req_hist.create_user%TYPE DEFAULT NULL,
        create_time_in                IN nurse_tea_req_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in         IN nurse_tea_req_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in                IN nurse_tea_req_hist.update_user%TYPE DEFAULT NULL,
        update_time_in                IN nurse_tea_req_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in         IN nurse_tea_req_hist.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in           IN nurse_tea_req_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_context_in                 IN nurse_tea_req_hist.id_context%TYPE DEFAULT NULL,
        flg_context_in                IN nurse_tea_req_hist.flg_context%TYPE DEFAULT NULL,
        id_nurse_tea_topic_in         IN nurse_tea_req_hist.id_nurse_tea_topic%TYPE DEFAULT NULL,
        id_order_recurr_plan_in       IN nurse_tea_req_hist.id_order_recurr_plan%TYPE DEFAULT NULL,
        description_in                IN nurse_tea_req_hist.description%TYPE DEFAULT NULL,
        flg_time_in                   IN nurse_tea_req_hist.flg_time%TYPE DEFAULT NULL,
        dt_nurse_tea_req_hist_tstz_in IN nurse_tea_req_hist.dt_nurse_tea_req_hist_tstz%TYPE DEFAULT NULL,
        desc_topic_aux_in             IN nurse_tea_req_hist.desc_topic_aux%TYPE DEFAULT NULL,
        id_not_order_reason_in        IN nurse_tea_req_hist.id_not_order_reason%TYPE DEFAULT NULL,
        id_nurse_tea_req_hist_out     IN OUT nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE,
        handle_error_in               IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_nurse_tea_req_in           => id_nurse_tea_req_in,
            id_prof_req_in                => id_prof_req_in,
            id_episode_in                 => id_episode_in,
            req_header_in                 => req_header_in,
            flg_status_in                 => flg_status_in,
            notes_req_in                  => notes_req_in,
            id_prof_close_in              => id_prof_close_in,
            notes_close_in                => notes_close_in,
            id_prof_exec_in               => id_prof_exec_in,
            id_prev_episode_in            => id_prev_episode_in,
            dt_nurse_tea_req_tstz_in      => dt_nurse_tea_req_tstz_in,
            dt_begin_tstz_in              => dt_begin_tstz_in,
            dt_close_tstz_in              => dt_close_tstz_in,
            id_visit_in                   => id_visit_in,
            id_patient_in                 => id_patient_in,
            status_flg_in                 => status_flg_in,
            status_icon_in                => status_icon_in,
            status_msg_in                 => status_msg_in,
            status_str_in                 => status_str_in,
            create_user_in                => create_user_in,
            create_time_in                => create_time_in,
            create_institution_in         => create_institution_in,
            update_user_in                => update_user_in,
            update_time_in                => update_time_in,
            update_institution_in         => update_institution_in,
            id_cancel_reason_in           => id_cancel_reason_in,
            id_context_in                 => id_context_in,
            flg_context_in                => flg_context_in,
            id_nurse_tea_topic_in         => id_nurse_tea_topic_in,
            id_order_recurr_plan_in       => id_order_recurr_plan_in,
            description_in                => description_in,
            flg_time_in                   => flg_time_in,
            dt_nurse_tea_req_hist_tstz_in => dt_nurse_tea_req_hist_tstz_in,
            desc_topic_aux_in             => desc_topic_aux_in,
            id_not_order_reason_in        => id_not_order_reason_in,
            id_nurse_tea_req_hist_out     => id_nurse_tea_req_hist_out,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
    END ins;

    FUNCTION ins
    (
        id_nurse_tea_req_in           IN nurse_tea_req_hist.id_nurse_tea_req%TYPE DEFAULT NULL,
        id_prof_req_in                IN nurse_tea_req_hist.id_prof_req%TYPE DEFAULT NULL,
        id_episode_in                 IN nurse_tea_req_hist.id_episode%TYPE DEFAULT NULL,
        req_header_in                 IN nurse_tea_req_hist.req_header%TYPE DEFAULT NULL,
        flg_status_in                 IN nurse_tea_req_hist.flg_status%TYPE DEFAULT NULL,
        notes_req_in                  IN nurse_tea_req_hist.notes_req%TYPE DEFAULT NULL,
        id_prof_close_in              IN nurse_tea_req_hist.id_prof_close%TYPE DEFAULT NULL,
        notes_close_in                IN nurse_tea_req_hist.notes_close%TYPE DEFAULT NULL,
        id_prof_exec_in               IN nurse_tea_req_hist.id_prof_exec%TYPE DEFAULT NULL,
        id_prev_episode_in            IN nurse_tea_req_hist.id_prev_episode%TYPE DEFAULT NULL,
        dt_nurse_tea_req_tstz_in      IN nurse_tea_req_hist.dt_nurse_tea_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in              IN nurse_tea_req_hist.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_close_tstz_in              IN nurse_tea_req_hist.dt_close_tstz%TYPE DEFAULT NULL,
        id_visit_in                   IN nurse_tea_req_hist.id_visit%TYPE DEFAULT NULL,
        id_patient_in                 IN nurse_tea_req_hist.id_patient%TYPE DEFAULT NULL,
        status_flg_in                 IN nurse_tea_req_hist.status_flg%TYPE DEFAULT NULL,
        status_icon_in                IN nurse_tea_req_hist.status_icon%TYPE DEFAULT NULL,
        status_msg_in                 IN nurse_tea_req_hist.status_msg%TYPE DEFAULT NULL,
        status_str_in                 IN nurse_tea_req_hist.status_str%TYPE DEFAULT NULL,
        create_user_in                IN nurse_tea_req_hist.create_user%TYPE DEFAULT NULL,
        create_time_in                IN nurse_tea_req_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in         IN nurse_tea_req_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in                IN nurse_tea_req_hist.update_user%TYPE DEFAULT NULL,
        update_time_in                IN nurse_tea_req_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in         IN nurse_tea_req_hist.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in           IN nurse_tea_req_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_context_in                 IN nurse_tea_req_hist.id_context%TYPE DEFAULT NULL,
        flg_context_in                IN nurse_tea_req_hist.flg_context%TYPE DEFAULT NULL,
        id_nurse_tea_topic_in         IN nurse_tea_req_hist.id_nurse_tea_topic%TYPE DEFAULT NULL,
        id_order_recurr_plan_in       IN nurse_tea_req_hist.id_order_recurr_plan%TYPE DEFAULT NULL,
        description_in                IN nurse_tea_req_hist.description%TYPE DEFAULT NULL,
        flg_time_in                   IN nurse_tea_req_hist.flg_time%TYPE DEFAULT NULL,
        dt_nurse_tea_req_hist_tstz_in IN nurse_tea_req_hist.dt_nurse_tea_req_hist_tstz%TYPE DEFAULT NULL,
        desc_topic_aux_in             IN nurse_tea_req_hist.desc_topic_aux%TYPE DEFAULT NULL,
        id_not_order_reason_in        IN nurse_tea_req_hist.id_not_order_reason%TYPE DEFAULT NULL,
        handle_error_in               IN BOOLEAN := TRUE,
        rows_out                      OUT table_varchar
    ) RETURN nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE IS
        l_pky nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE := next_key;
    BEGIN
        ins(id_nurse_tea_req_hist_in      => l_pky,
            id_nurse_tea_req_in           => id_nurse_tea_req_in,
            id_prof_req_in                => id_prof_req_in,
            id_episode_in                 => id_episode_in,
            req_header_in                 => req_header_in,
            flg_status_in                 => flg_status_in,
            notes_req_in                  => notes_req_in,
            id_prof_close_in              => id_prof_close_in,
            notes_close_in                => notes_close_in,
            id_prof_exec_in               => id_prof_exec_in,
            id_prev_episode_in            => id_prev_episode_in,
            dt_nurse_tea_req_tstz_in      => dt_nurse_tea_req_tstz_in,
            dt_begin_tstz_in              => dt_begin_tstz_in,
            dt_close_tstz_in              => dt_close_tstz_in,
            id_visit_in                   => id_visit_in,
            id_patient_in                 => id_patient_in,
            status_flg_in                 => status_flg_in,
            status_icon_in                => status_icon_in,
            status_msg_in                 => status_msg_in,
            status_str_in                 => status_str_in,
            create_user_in                => create_user_in,
            create_time_in                => create_time_in,
            create_institution_in         => create_institution_in,
            update_user_in                => update_user_in,
            update_time_in                => update_time_in,
            update_institution_in         => update_institution_in,
            id_cancel_reason_in           => id_cancel_reason_in,
            id_context_in                 => id_context_in,
            flg_context_in                => flg_context_in,
            id_nurse_tea_topic_in         => id_nurse_tea_topic_in,
            id_order_recurr_plan_in       => id_order_recurr_plan_in,
            description_in                => description_in,
            flg_time_in                   => flg_time_in,
            dt_nurse_tea_req_hist_tstz_in => dt_nurse_tea_req_hist_tstz_in,
            desc_topic_aux_in             => desc_topic_aux_in,
            id_not_order_reason_in        => id_not_order_reason_in,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
        RETURN l_pky;
    END ins;

    FUNCTION ins
    (
        id_nurse_tea_req_in           IN nurse_tea_req_hist.id_nurse_tea_req%TYPE DEFAULT NULL,
        id_prof_req_in                IN nurse_tea_req_hist.id_prof_req%TYPE DEFAULT NULL,
        id_episode_in                 IN nurse_tea_req_hist.id_episode%TYPE DEFAULT NULL,
        req_header_in                 IN nurse_tea_req_hist.req_header%TYPE DEFAULT NULL,
        flg_status_in                 IN nurse_tea_req_hist.flg_status%TYPE DEFAULT NULL,
        notes_req_in                  IN nurse_tea_req_hist.notes_req%TYPE DEFAULT NULL,
        id_prof_close_in              IN nurse_tea_req_hist.id_prof_close%TYPE DEFAULT NULL,
        notes_close_in                IN nurse_tea_req_hist.notes_close%TYPE DEFAULT NULL,
        id_prof_exec_in               IN nurse_tea_req_hist.id_prof_exec%TYPE DEFAULT NULL,
        id_prev_episode_in            IN nurse_tea_req_hist.id_prev_episode%TYPE DEFAULT NULL,
        dt_nurse_tea_req_tstz_in      IN nurse_tea_req_hist.dt_nurse_tea_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in              IN nurse_tea_req_hist.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_close_tstz_in              IN nurse_tea_req_hist.dt_close_tstz%TYPE DEFAULT NULL,
        id_visit_in                   IN nurse_tea_req_hist.id_visit%TYPE DEFAULT NULL,
        id_patient_in                 IN nurse_tea_req_hist.id_patient%TYPE DEFAULT NULL,
        status_flg_in                 IN nurse_tea_req_hist.status_flg%TYPE DEFAULT NULL,
        status_icon_in                IN nurse_tea_req_hist.status_icon%TYPE DEFAULT NULL,
        status_msg_in                 IN nurse_tea_req_hist.status_msg%TYPE DEFAULT NULL,
        status_str_in                 IN nurse_tea_req_hist.status_str%TYPE DEFAULT NULL,
        create_user_in                IN nurse_tea_req_hist.create_user%TYPE DEFAULT NULL,
        create_time_in                IN nurse_tea_req_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in         IN nurse_tea_req_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in                IN nurse_tea_req_hist.update_user%TYPE DEFAULT NULL,
        update_time_in                IN nurse_tea_req_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in         IN nurse_tea_req_hist.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in           IN nurse_tea_req_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_context_in                 IN nurse_tea_req_hist.id_context%TYPE DEFAULT NULL,
        flg_context_in                IN nurse_tea_req_hist.flg_context%TYPE DEFAULT NULL,
        id_nurse_tea_topic_in         IN nurse_tea_req_hist.id_nurse_tea_topic%TYPE DEFAULT NULL,
        id_order_recurr_plan_in       IN nurse_tea_req_hist.id_order_recurr_plan%TYPE DEFAULT NULL,
        description_in                IN nurse_tea_req_hist.description%TYPE DEFAULT NULL,
        flg_time_in                   IN nurse_tea_req_hist.flg_time%TYPE DEFAULT NULL,
        dt_nurse_tea_req_hist_tstz_in IN nurse_tea_req_hist.dt_nurse_tea_req_hist_tstz%TYPE DEFAULT NULL,
        desc_topic_aux_in             IN nurse_tea_req_hist.desc_topic_aux%TYPE DEFAULT NULL,
        id_not_order_reason_in        IN nurse_tea_req_hist.id_not_order_reason%TYPE DEFAULT NULL,
        handle_error_in               IN BOOLEAN := TRUE
    ) RETURN nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE IS
        l_pky    nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE := next_key;
        rows_out table_varchar;
    BEGIN
        ins(id_nurse_tea_req_hist_in      => l_pky,
            id_nurse_tea_req_in           => id_nurse_tea_req_in,
            id_prof_req_in                => id_prof_req_in,
            id_episode_in                 => id_episode_in,
            req_header_in                 => req_header_in,
            flg_status_in                 => flg_status_in,
            notes_req_in                  => notes_req_in,
            id_prof_close_in              => id_prof_close_in,
            notes_close_in                => notes_close_in,
            id_prof_exec_in               => id_prof_exec_in,
            id_prev_episode_in            => id_prev_episode_in,
            dt_nurse_tea_req_tstz_in      => dt_nurse_tea_req_tstz_in,
            dt_begin_tstz_in              => dt_begin_tstz_in,
            dt_close_tstz_in              => dt_close_tstz_in,
            id_visit_in                   => id_visit_in,
            id_patient_in                 => id_patient_in,
            status_flg_in                 => status_flg_in,
            status_icon_in                => status_icon_in,
            status_msg_in                 => status_msg_in,
            status_str_in                 => status_str_in,
            create_user_in                => create_user_in,
            create_time_in                => create_time_in,
            create_institution_in         => create_institution_in,
            update_user_in                => update_user_in,
            update_time_in                => update_time_in,
            update_institution_in         => update_institution_in,
            id_cancel_reason_in           => id_cancel_reason_in,
            id_context_in                 => id_context_in,
            flg_context_in                => flg_context_in,
            id_nurse_tea_topic_in         => id_nurse_tea_topic_in,
            id_order_recurr_plan_in       => id_order_recurr_plan_in,
            description_in                => description_in,
            flg_time_in                   => flg_time_in,
            dt_nurse_tea_req_hist_tstz_in => dt_nurse_tea_req_hist_tstz_in,
            desc_topic_aux_in             => desc_topic_aux_in,
            id_not_order_reason_in        => id_not_order_reason_in,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
        RETURN l_pky;
    END ins;

    PROCEDURE ins
    (
        id_nurse_tea_req_in           IN nurse_tea_req_hist.id_nurse_tea_req%TYPE DEFAULT NULL,
        id_prof_req_in                IN nurse_tea_req_hist.id_prof_req%TYPE DEFAULT NULL,
        id_episode_in                 IN nurse_tea_req_hist.id_episode%TYPE DEFAULT NULL,
        req_header_in                 IN nurse_tea_req_hist.req_header%TYPE DEFAULT NULL,
        flg_status_in                 IN nurse_tea_req_hist.flg_status%TYPE DEFAULT NULL,
        notes_req_in                  IN nurse_tea_req_hist.notes_req%TYPE DEFAULT NULL,
        id_prof_close_in              IN nurse_tea_req_hist.id_prof_close%TYPE DEFAULT NULL,
        notes_close_in                IN nurse_tea_req_hist.notes_close%TYPE DEFAULT NULL,
        id_prof_exec_in               IN nurse_tea_req_hist.id_prof_exec%TYPE DEFAULT NULL,
        id_prev_episode_in            IN nurse_tea_req_hist.id_prev_episode%TYPE DEFAULT NULL,
        dt_nurse_tea_req_tstz_in      IN nurse_tea_req_hist.dt_nurse_tea_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in              IN nurse_tea_req_hist.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_close_tstz_in              IN nurse_tea_req_hist.dt_close_tstz%TYPE DEFAULT NULL,
        id_visit_in                   IN nurse_tea_req_hist.id_visit%TYPE DEFAULT NULL,
        id_patient_in                 IN nurse_tea_req_hist.id_patient%TYPE DEFAULT NULL,
        status_flg_in                 IN nurse_tea_req_hist.status_flg%TYPE DEFAULT NULL,
        status_icon_in                IN nurse_tea_req_hist.status_icon%TYPE DEFAULT NULL,
        status_msg_in                 IN nurse_tea_req_hist.status_msg%TYPE DEFAULT NULL,
        status_str_in                 IN nurse_tea_req_hist.status_str%TYPE DEFAULT NULL,
        create_user_in                IN nurse_tea_req_hist.create_user%TYPE DEFAULT NULL,
        create_time_in                IN nurse_tea_req_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in         IN nurse_tea_req_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in                IN nurse_tea_req_hist.update_user%TYPE DEFAULT NULL,
        update_time_in                IN nurse_tea_req_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in         IN nurse_tea_req_hist.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in           IN nurse_tea_req_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_context_in                 IN nurse_tea_req_hist.id_context%TYPE DEFAULT NULL,
        flg_context_in                IN nurse_tea_req_hist.flg_context%TYPE DEFAULT NULL,
        id_nurse_tea_topic_in         IN nurse_tea_req_hist.id_nurse_tea_topic%TYPE DEFAULT NULL,
        id_order_recurr_plan_in       IN nurse_tea_req_hist.id_order_recurr_plan%TYPE DEFAULT NULL,
        description_in                IN nurse_tea_req_hist.description%TYPE DEFAULT NULL,
        flg_time_in                   IN nurse_tea_req_hist.flg_time%TYPE DEFAULT NULL,
        dt_nurse_tea_req_hist_tstz_in IN nurse_tea_req_hist.dt_nurse_tea_req_hist_tstz%TYPE DEFAULT NULL,
        desc_topic_aux_in             IN nurse_tea_req_hist.desc_topic_aux%TYPE DEFAULT NULL,
        id_not_order_reason_in        IN nurse_tea_req_hist.id_not_order_reason%TYPE DEFAULT NULL,
        handle_error_in               IN BOOLEAN := TRUE,
        rows_out                      OUT table_varchar
    ) IS
        l_pky nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE := next_key;
    BEGIN
        ins(id_nurse_tea_req_hist_in      => l_pky,
            id_nurse_tea_req_in           => id_nurse_tea_req_in,
            id_prof_req_in                => id_prof_req_in,
            id_episode_in                 => id_episode_in,
            req_header_in                 => req_header_in,
            flg_status_in                 => flg_status_in,
            notes_req_in                  => notes_req_in,
            id_prof_close_in              => id_prof_close_in,
            notes_close_in                => notes_close_in,
            id_prof_exec_in               => id_prof_exec_in,
            id_prev_episode_in            => id_prev_episode_in,
            dt_nurse_tea_req_tstz_in      => dt_nurse_tea_req_tstz_in,
            dt_begin_tstz_in              => dt_begin_tstz_in,
            dt_close_tstz_in              => dt_close_tstz_in,
            id_visit_in                   => id_visit_in,
            id_patient_in                 => id_patient_in,
            status_flg_in                 => status_flg_in,
            status_icon_in                => status_icon_in,
            status_msg_in                 => status_msg_in,
            status_str_in                 => status_str_in,
            create_user_in                => create_user_in,
            create_time_in                => create_time_in,
            create_institution_in         => create_institution_in,
            update_user_in                => update_user_in,
            update_time_in                => update_time_in,
            update_institution_in         => update_institution_in,
            id_cancel_reason_in           => id_cancel_reason_in,
            id_context_in                 => id_context_in,
            flg_context_in                => flg_context_in,
            id_nurse_tea_topic_in         => id_nurse_tea_topic_in,
            id_order_recurr_plan_in       => id_order_recurr_plan_in,
            description_in                => description_in,
            flg_time_in                   => flg_time_in,
            dt_nurse_tea_req_hist_tstz_in => dt_nurse_tea_req_hist_tstz_in,
            desc_topic_aux_in             => desc_topic_aux_in,
            id_not_order_reason_in        => id_not_order_reason_in,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
    END ins;

    PROCEDURE ins
    (
        id_nurse_tea_req_in           IN nurse_tea_req_hist.id_nurse_tea_req%TYPE DEFAULT NULL,
        id_prof_req_in                IN nurse_tea_req_hist.id_prof_req%TYPE DEFAULT NULL,
        id_episode_in                 IN nurse_tea_req_hist.id_episode%TYPE DEFAULT NULL,
        req_header_in                 IN nurse_tea_req_hist.req_header%TYPE DEFAULT NULL,
        flg_status_in                 IN nurse_tea_req_hist.flg_status%TYPE DEFAULT NULL,
        notes_req_in                  IN nurse_tea_req_hist.notes_req%TYPE DEFAULT NULL,
        id_prof_close_in              IN nurse_tea_req_hist.id_prof_close%TYPE DEFAULT NULL,
        notes_close_in                IN nurse_tea_req_hist.notes_close%TYPE DEFAULT NULL,
        id_prof_exec_in               IN nurse_tea_req_hist.id_prof_exec%TYPE DEFAULT NULL,
        id_prev_episode_in            IN nurse_tea_req_hist.id_prev_episode%TYPE DEFAULT NULL,
        dt_nurse_tea_req_tstz_in      IN nurse_tea_req_hist.dt_nurse_tea_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in              IN nurse_tea_req_hist.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_close_tstz_in              IN nurse_tea_req_hist.dt_close_tstz%TYPE DEFAULT NULL,
        id_visit_in                   IN nurse_tea_req_hist.id_visit%TYPE DEFAULT NULL,
        id_patient_in                 IN nurse_tea_req_hist.id_patient%TYPE DEFAULT NULL,
        status_flg_in                 IN nurse_tea_req_hist.status_flg%TYPE DEFAULT NULL,
        status_icon_in                IN nurse_tea_req_hist.status_icon%TYPE DEFAULT NULL,
        status_msg_in                 IN nurse_tea_req_hist.status_msg%TYPE DEFAULT NULL,
        status_str_in                 IN nurse_tea_req_hist.status_str%TYPE DEFAULT NULL,
        create_user_in                IN nurse_tea_req_hist.create_user%TYPE DEFAULT NULL,
        create_time_in                IN nurse_tea_req_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in         IN nurse_tea_req_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in                IN nurse_tea_req_hist.update_user%TYPE DEFAULT NULL,
        update_time_in                IN nurse_tea_req_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in         IN nurse_tea_req_hist.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in           IN nurse_tea_req_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_context_in                 IN nurse_tea_req_hist.id_context%TYPE DEFAULT NULL,
        flg_context_in                IN nurse_tea_req_hist.flg_context%TYPE DEFAULT NULL,
        id_nurse_tea_topic_in         IN nurse_tea_req_hist.id_nurse_tea_topic%TYPE DEFAULT NULL,
        id_order_recurr_plan_in       IN nurse_tea_req_hist.id_order_recurr_plan%TYPE DEFAULT NULL,
        description_in                IN nurse_tea_req_hist.description%TYPE DEFAULT NULL,
        flg_time_in                   IN nurse_tea_req_hist.flg_time%TYPE DEFAULT NULL,
        dt_nurse_tea_req_hist_tstz_in IN nurse_tea_req_hist.dt_nurse_tea_req_hist_tstz%TYPE DEFAULT NULL,
        desc_topic_aux_in             IN nurse_tea_req_hist.desc_topic_aux%TYPE DEFAULT NULL,
        id_not_order_reason_in        IN nurse_tea_req_hist.id_not_order_reason%TYPE DEFAULT NULL,
        handle_error_in               IN BOOLEAN := TRUE
    ) IS
        l_pky    nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE := next_key;
        rows_out table_varchar;
    BEGIN
        ins(id_nurse_tea_req_hist_in      => l_pky,
            id_nurse_tea_req_in           => id_nurse_tea_req_in,
            id_prof_req_in                => id_prof_req_in,
            id_episode_in                 => id_episode_in,
            req_header_in                 => req_header_in,
            flg_status_in                 => flg_status_in,
            notes_req_in                  => notes_req_in,
            id_prof_close_in              => id_prof_close_in,
            notes_close_in                => notes_close_in,
            id_prof_exec_in               => id_prof_exec_in,
            id_prev_episode_in            => id_prev_episode_in,
            dt_nurse_tea_req_tstz_in      => dt_nurse_tea_req_tstz_in,
            dt_begin_tstz_in              => dt_begin_tstz_in,
            dt_close_tstz_in              => dt_close_tstz_in,
            id_visit_in                   => id_visit_in,
            id_patient_in                 => id_patient_in,
            status_flg_in                 => status_flg_in,
            status_icon_in                => status_icon_in,
            status_msg_in                 => status_msg_in,
            status_str_in                 => status_str_in,
            create_user_in                => create_user_in,
            create_time_in                => create_time_in,
            create_institution_in         => create_institution_in,
            update_user_in                => update_user_in,
            update_time_in                => update_time_in,
            update_institution_in         => update_institution_in,
            id_cancel_reason_in           => id_cancel_reason_in,
            id_context_in                 => id_context_in,
            flg_context_in                => flg_context_in,
            id_nurse_tea_topic_in         => id_nurse_tea_topic_in,
            id_order_recurr_plan_in       => id_order_recurr_plan_in,
            description_in                => description_in,
            flg_time_in                   => flg_time_in,
            dt_nurse_tea_req_hist_tstz_in => dt_nurse_tea_req_hist_tstz_in,
            desc_topic_aux_in             => desc_topic_aux_in,
            id_not_order_reason_in        => id_not_order_reason_in,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
    END ins;

    PROCEDURE ins
    (
        rows_in         IN nurse_tea_req_hist_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        IF rows_in.count = 0
        THEN
            NULL;
        ELSE
            FORALL indx IN rows_in.first .. rows_in.last SAVE EXCEPTIONS
                INSERT INTO nurse_tea_req_hist
                VALUES rows_in
                    (indx)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    EXCEPTION
        WHEN e_forall_error THEN
            -- In Oracle9i and above, SAVE EXCEPTIONS will direct control
            -- here if any error occurs. We can then save all the error
            -- information out to the error instance.
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                <<bulk_handler>>
                DECLARE
                    l_err_instance_id NUMBER;
                BEGIN
                    -- For each error, write to the log.
                    FOR indx IN 1 .. SQL%bulk_exceptions.count
                    LOOP
                        pk_alert_exceptions.register_error(error_name_in       => 'FORALL-INSERT-FAILURE',
                                                           err_instance_id_out => l_err_instance_id);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'BINDING_ROW_' || indx,
                                                        value_in           => SQL%BULK_EXCEPTIONS(indx).error_index,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ERROR_AT_ROW_' || indx,
                                                        value_in           => SQLERRM(-sql%BULK_EXCEPTIONS(indx)
                                                                                      .error_code),
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_NURSE_TEA_REQ_HIST _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_nurse_tea_req_hist,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_NURSE_TEA_REQ _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_nurse_tea_req,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PROF_REQ _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_prof_req,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_EPISODE _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_episode,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'REQ_HEADER _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .req_header,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_STATUS _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .flg_status,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'NOTES_REQ _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .notes_req,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PROF_CLOSE _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_prof_close,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'NOTES_CLOSE _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .notes_close,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PROF_EXEC _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_prof_exec,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PREV_EPISODE _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_prev_episode,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_NURSE_TEA_REQ_TSTZ _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .dt_nurse_tea_req_tstz,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_BEGIN_TSTZ _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .dt_begin_tstz,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_CLOSE_TSTZ _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .dt_close_tstz,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_VISIT _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_visit,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PATIENT _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_patient,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'STATUS_FLG _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .status_flg,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'STATUS_ICON _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .status_icon,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'STATUS_MSG _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .status_msg,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'STATUS_STR _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .status_str,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'CREATE_USER _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .create_user,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'CREATE_TIME _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .create_time,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'CREATE_INSTITUTION _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .create_institution,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'UPDATE_USER _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .update_user,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'UPDATE_TIME _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .update_time,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'UPDATE_INSTITUTION _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .update_institution,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_CANCEL_REASON _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_cancel_reason,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_CONTEXT _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_context,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_CONTEXT _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .flg_context,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_NURSE_TEA_TOPIC _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_nurse_tea_topic,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_ORDER_RECURR_PLAN _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_order_recurr_plan,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_TIME _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .flg_time,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_NURSE_TEA_REQ_HIST_TSTZ _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .dt_nurse_tea_req_hist_tstz,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DESC_TOPIC_AUX _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .desc_topic_aux,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_NOT_ORDER_REASON _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_not_order_reason,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_err_instance_id);
                    END LOOP;
                END bulk_handler;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alert_exceptions.raise_error(error_name_in => 'FORALL-INSERT-FAILURE',
                                                name1_in      => 'TABLE_NAME',
                                                value1_in     => 'NURSE_TEA_REQ_HIST',
                                                name2_in      => 'ROW_COUNT',
                                                value2_in     => rows_in.count);
            END IF;
    END ins;

    PROCEDURE ins
    (
        rows_in         IN nurse_tea_req_hist_tc,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rows_in => rows_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END ins;

    PROCEDURE upd
    (
        id_nurse_tea_req_hist_in       IN nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE,
        id_nurse_tea_req_in            IN nurse_tea_req_hist.id_nurse_tea_req%TYPE DEFAULT NULL,
        id_nurse_tea_req_nin           IN BOOLEAN := TRUE,
        id_prof_req_in                 IN nurse_tea_req_hist.id_prof_req%TYPE DEFAULT NULL,
        id_prof_req_nin                IN BOOLEAN := TRUE,
        id_episode_in                  IN nurse_tea_req_hist.id_episode%TYPE DEFAULT NULL,
        id_episode_nin                 IN BOOLEAN := TRUE,
        req_header_in                  IN nurse_tea_req_hist.req_header%TYPE DEFAULT NULL,
        req_header_nin                 IN BOOLEAN := TRUE,
        flg_status_in                  IN nurse_tea_req_hist.flg_status%TYPE DEFAULT NULL,
        flg_status_nin                 IN BOOLEAN := TRUE,
        notes_req_in                   IN nurse_tea_req_hist.notes_req%TYPE DEFAULT NULL,
        notes_req_nin                  IN BOOLEAN := TRUE,
        id_prof_close_in               IN nurse_tea_req_hist.id_prof_close%TYPE DEFAULT NULL,
        id_prof_close_nin              IN BOOLEAN := TRUE,
        notes_close_in                 IN nurse_tea_req_hist.notes_close%TYPE DEFAULT NULL,
        notes_close_nin                IN BOOLEAN := TRUE,
        id_prof_exec_in                IN nurse_tea_req_hist.id_prof_exec%TYPE DEFAULT NULL,
        id_prof_exec_nin               IN BOOLEAN := TRUE,
        id_prev_episode_in             IN nurse_tea_req_hist.id_prev_episode%TYPE DEFAULT NULL,
        id_prev_episode_nin            IN BOOLEAN := TRUE,
        dt_nurse_tea_req_tstz_in       IN nurse_tea_req_hist.dt_nurse_tea_req_tstz%TYPE DEFAULT NULL,
        dt_nurse_tea_req_tstz_nin      IN BOOLEAN := TRUE,
        dt_begin_tstz_in               IN nurse_tea_req_hist.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_nin              IN BOOLEAN := TRUE,
        dt_close_tstz_in               IN nurse_tea_req_hist.dt_close_tstz%TYPE DEFAULT NULL,
        dt_close_tstz_nin              IN BOOLEAN := TRUE,
        id_visit_in                    IN nurse_tea_req_hist.id_visit%TYPE DEFAULT NULL,
        id_visit_nin                   IN BOOLEAN := TRUE,
        id_patient_in                  IN nurse_tea_req_hist.id_patient%TYPE DEFAULT NULL,
        id_patient_nin                 IN BOOLEAN := TRUE,
        status_flg_in                  IN nurse_tea_req_hist.status_flg%TYPE DEFAULT NULL,
        status_flg_nin                 IN BOOLEAN := TRUE,
        status_icon_in                 IN nurse_tea_req_hist.status_icon%TYPE DEFAULT NULL,
        status_icon_nin                IN BOOLEAN := TRUE,
        status_msg_in                  IN nurse_tea_req_hist.status_msg%TYPE DEFAULT NULL,
        status_msg_nin                 IN BOOLEAN := TRUE,
        status_str_in                  IN nurse_tea_req_hist.status_str%TYPE DEFAULT NULL,
        status_str_nin                 IN BOOLEAN := TRUE,
        create_user_in                 IN nurse_tea_req_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin                IN BOOLEAN := TRUE,
        create_time_in                 IN nurse_tea_req_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin                IN BOOLEAN := TRUE,
        create_institution_in          IN nurse_tea_req_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin         IN BOOLEAN := TRUE,
        update_user_in                 IN nurse_tea_req_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin                IN BOOLEAN := TRUE,
        update_time_in                 IN nurse_tea_req_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin                IN BOOLEAN := TRUE,
        update_institution_in          IN nurse_tea_req_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin         IN BOOLEAN := TRUE,
        id_cancel_reason_in            IN nurse_tea_req_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin           IN BOOLEAN := TRUE,
        id_context_in                  IN nurse_tea_req_hist.id_context%TYPE DEFAULT NULL,
        id_context_nin                 IN BOOLEAN := TRUE,
        flg_context_in                 IN nurse_tea_req_hist.flg_context%TYPE DEFAULT NULL,
        flg_context_nin                IN BOOLEAN := TRUE,
        id_nurse_tea_topic_in          IN nurse_tea_req_hist.id_nurse_tea_topic%TYPE DEFAULT NULL,
        id_nurse_tea_topic_nin         IN BOOLEAN := TRUE,
        id_order_recurr_plan_in        IN nurse_tea_req_hist.id_order_recurr_plan%TYPE DEFAULT NULL,
        id_order_recurr_plan_nin       IN BOOLEAN := TRUE,
        description_in                 IN nurse_tea_req_hist.description%TYPE DEFAULT NULL,
        description_nin                IN BOOLEAN := TRUE,
        flg_time_in                    IN nurse_tea_req_hist.flg_time%TYPE DEFAULT NULL,
        flg_time_nin                   IN BOOLEAN := TRUE,
        dt_nurse_tea_req_hist_tstz_in  IN nurse_tea_req_hist.dt_nurse_tea_req_hist_tstz%TYPE DEFAULT NULL,
        dt_nurse_tea_req_hist_tstz_nin IN BOOLEAN := TRUE,
        desc_topic_aux_in              IN nurse_tea_req_hist.desc_topic_aux%TYPE DEFAULT NULL,
        desc_topic_aux_nin             IN BOOLEAN := TRUE,
        id_not_order_reason_in         IN nurse_tea_req_hist.id_not_order_reason%TYPE DEFAULT NULL,
        id_not_order_reason_nin        IN BOOLEAN := TRUE,
        handle_error_in                IN BOOLEAN := TRUE,
        rows_out                       IN OUT table_varchar
    ) IS
        l_rows_out                     table_varchar;
        l_id_nurse_tea_req_n           NUMBER(1);
        l_id_prof_req_n                NUMBER(1);
        l_id_episode_n                 NUMBER(1);
        l_req_header_n                 NUMBER(1);
        l_flg_status_n                 NUMBER(1);
        l_notes_req_n                  NUMBER(1);
        l_id_prof_close_n              NUMBER(1);
        l_notes_close_n                NUMBER(1);
        l_id_prof_exec_n               NUMBER(1);
        l_id_prev_episode_n            NUMBER(1);
        l_dt_nurse_tea_req_tstz_n      NUMBER(1);
        l_dt_begin_tstz_n              NUMBER(1);
        l_dt_close_tstz_n              NUMBER(1);
        l_id_visit_n                   NUMBER(1);
        l_id_patient_n                 NUMBER(1);
        l_status_flg_n                 NUMBER(1);
        l_status_icon_n                NUMBER(1);
        l_status_msg_n                 NUMBER(1);
        l_status_str_n                 NUMBER(1);
        l_create_user_n                NUMBER(1);
        l_create_time_n                NUMBER(1);
        l_create_institution_n         NUMBER(1);
        l_update_user_n                NUMBER(1);
        l_update_time_n                NUMBER(1);
        l_update_institution_n         NUMBER(1);
        l_id_cancel_reason_n           NUMBER(1);
        l_id_context_n                 NUMBER(1);
        l_flg_context_n                NUMBER(1);
        l_id_nurse_tea_topic_n         NUMBER(1);
        l_id_order_recurr_plan_n       NUMBER(1);
        l_description_n                NUMBER(1);
        l_flg_time_n                   NUMBER(1);
        l_dt_nurse_tea_req_hist_tstz_n NUMBER(1);
        l_desc_topic_aux_n             NUMBER(1);
        l_id_not_order_reason_n        NUMBER(1);
    BEGIN
    
        l_id_nurse_tea_req_n           := sys.diutil.bool_to_int(id_nurse_tea_req_nin);
        l_id_prof_req_n                := sys.diutil.bool_to_int(id_prof_req_nin);
        l_id_episode_n                 := sys.diutil.bool_to_int(id_episode_nin);
        l_req_header_n                 := sys.diutil.bool_to_int(req_header_nin);
        l_flg_status_n                 := sys.diutil.bool_to_int(flg_status_nin);
        l_notes_req_n                  := sys.diutil.bool_to_int(notes_req_nin);
        l_id_prof_close_n              := sys.diutil.bool_to_int(id_prof_close_nin);
        l_notes_close_n                := sys.diutil.bool_to_int(notes_close_nin);
        l_id_prof_exec_n               := sys.diutil.bool_to_int(id_prof_exec_nin);
        l_id_prev_episode_n            := sys.diutil.bool_to_int(id_prev_episode_nin);
        l_dt_nurse_tea_req_tstz_n      := sys.diutil.bool_to_int(dt_nurse_tea_req_tstz_nin);
        l_dt_begin_tstz_n              := sys.diutil.bool_to_int(dt_begin_tstz_nin);
        l_dt_close_tstz_n              := sys.diutil.bool_to_int(dt_close_tstz_nin);
        l_id_visit_n                   := sys.diutil.bool_to_int(id_visit_nin);
        l_id_patient_n                 := sys.diutil.bool_to_int(id_patient_nin);
        l_status_flg_n                 := sys.diutil.bool_to_int(status_flg_nin);
        l_status_icon_n                := sys.diutil.bool_to_int(status_icon_nin);
        l_status_msg_n                 := sys.diutil.bool_to_int(status_msg_nin);
        l_status_str_n                 := sys.diutil.bool_to_int(status_str_nin);
        l_create_user_n                := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n                := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n         := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n                := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n                := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n         := sys.diutil.bool_to_int(update_institution_nin);
        l_id_cancel_reason_n           := sys.diutil.bool_to_int(id_cancel_reason_nin);
        l_id_context_n                 := sys.diutil.bool_to_int(id_context_nin);
        l_flg_context_n                := sys.diutil.bool_to_int(flg_context_nin);
        l_id_nurse_tea_topic_n         := sys.diutil.bool_to_int(id_nurse_tea_topic_nin);
        l_id_order_recurr_plan_n       := sys.diutil.bool_to_int(id_order_recurr_plan_nin);
        l_description_n                := sys.diutil.bool_to_int(description_nin);
        l_flg_time_n                   := sys.diutil.bool_to_int(flg_time_nin);
        l_dt_nurse_tea_req_hist_tstz_n := sys.diutil.bool_to_int(dt_nurse_tea_req_hist_tstz_nin);
        l_desc_topic_aux_n             := sys.diutil.bool_to_int(desc_topic_aux_nin);
        l_id_not_order_reason_n        := sys.diutil.bool_to_int(id_not_order_reason_nin);
    
        UPDATE nurse_tea_req_hist
           SET id_nurse_tea_req           = decode(l_id_nurse_tea_req_n,
                                                   0,
                                                   id_nurse_tea_req_in,
                                                   nvl(id_nurse_tea_req_in, id_nurse_tea_req)),
               id_prof_req                = decode(l_id_prof_req_n, 0, id_prof_req_in, nvl(id_prof_req_in, id_prof_req)),
               id_episode                 = decode(l_id_episode_n, 0, id_episode_in, nvl(id_episode_in, id_episode)),
               req_header                 = decode(l_req_header_n, 0, req_header_in, nvl(req_header_in, req_header)),
               flg_status                 = decode(l_flg_status_n, 0, flg_status_in, nvl(flg_status_in, flg_status)),
               notes_req                  = decode(l_notes_req_n, 0, notes_req_in, nvl(notes_req_in, notes_req)),
               id_prof_close              = decode(l_id_prof_close_n,
                                                   0,
                                                   id_prof_close_in,
                                                   nvl(id_prof_close_in, id_prof_close)),
               notes_close                = decode(l_notes_close_n, 0, notes_close_in, nvl(notes_close_in, notes_close)),
               id_prof_exec               = decode(l_id_prof_exec_n,
                                                   0,
                                                   id_prof_exec_in,
                                                   nvl(id_prof_exec_in, id_prof_exec)),
               id_prev_episode            = decode(l_id_prev_episode_n,
                                                   0,
                                                   id_prev_episode_in,
                                                   nvl(id_prev_episode_in, id_prev_episode)),
               dt_nurse_tea_req_tstz      = decode(l_dt_nurse_tea_req_tstz_n,
                                                   0,
                                                   dt_nurse_tea_req_tstz_in,
                                                   nvl(dt_nurse_tea_req_tstz_in, dt_nurse_tea_req_tstz)),
               dt_begin_tstz              = decode(l_dt_begin_tstz_n,
                                                   0,
                                                   dt_begin_tstz_in,
                                                   nvl(dt_begin_tstz_in, dt_begin_tstz)),
               dt_close_tstz              = decode(l_dt_close_tstz_n,
                                                   0,
                                                   dt_close_tstz_in,
                                                   nvl(dt_close_tstz_in, dt_close_tstz)),
               id_visit                   = decode(l_id_visit_n, 0, id_visit_in, nvl(id_visit_in, id_visit)),
               id_patient                 = decode(l_id_patient_n, 0, id_patient_in, nvl(id_patient_in, id_patient)),
               status_flg                 = decode(l_status_flg_n, 0, status_flg_in, nvl(status_flg_in, status_flg)),
               status_icon                = decode(l_status_icon_n, 0, status_icon_in, nvl(status_icon_in, status_icon)),
               status_msg                 = decode(l_status_msg_n, 0, status_msg_in, nvl(status_msg_in, status_msg)),
               status_str                 = decode(l_status_str_n, 0, status_str_in, nvl(status_str_in, status_str)),
               create_user                = decode(l_create_user_n, 0, create_user_in, nvl(create_user_in, create_user)),
               create_time                = decode(l_create_time_n, 0, create_time_in, nvl(create_time_in, create_time)),
               create_institution         = decode(l_create_institution_n,
                                                   0,
                                                   create_institution_in,
                                                   nvl(create_institution_in, create_institution)),
               update_user                = decode(l_update_user_n, 0, update_user_in, nvl(update_user_in, update_user)),
               update_time                = decode(l_update_time_n, 0, update_time_in, nvl(update_time_in, update_time)),
               update_institution         = decode(l_update_institution_n,
                                                   0,
                                                   update_institution_in,
                                                   nvl(update_institution_in, update_institution)),
               id_cancel_reason           = decode(l_id_cancel_reason_n,
                                                   0,
                                                   id_cancel_reason_in,
                                                   nvl(id_cancel_reason_in, id_cancel_reason)),
               id_context                 = decode(l_id_context_n, 0, id_context_in, nvl(id_context_in, id_context)),
               flg_context                = decode(l_flg_context_n, 0, flg_context_in, nvl(flg_context_in, flg_context)),
               id_nurse_tea_topic         = decode(l_id_nurse_tea_topic_n,
                                                   0,
                                                   id_nurse_tea_topic_in,
                                                   nvl(id_nurse_tea_topic_in, id_nurse_tea_topic)),
               id_order_recurr_plan       = decode(l_id_order_recurr_plan_n,
                                                   0,
                                                   id_order_recurr_plan_in,
                                                   nvl(id_order_recurr_plan_in, id_order_recurr_plan)),
               description                = decode(l_description_n, 0, description_in, nvl(description_in, description)),
               flg_time                   = decode(l_flg_time_n, 0, flg_time_in, nvl(flg_time_in, flg_time)),
               dt_nurse_tea_req_hist_tstz = decode(l_dt_nurse_tea_req_hist_tstz_n,
                                                   0,
                                                   dt_nurse_tea_req_hist_tstz_in,
                                                   nvl(dt_nurse_tea_req_hist_tstz_in, dt_nurse_tea_req_hist_tstz)),
               desc_topic_aux             = decode(l_desc_topic_aux_n,
                                                   0,
                                                   desc_topic_aux_in,
                                                   nvl(desc_topic_aux_in, desc_topic_aux)),
               id_not_order_reason        = decode(l_id_not_order_reason_n,
                                                   0,
                                                   id_not_order_reason_in,
                                                   nvl(id_not_order_reason_in, id_not_order_reason))
         WHERE id_nurse_tea_req_hist = id_nurse_tea_req_hist_in
        RETURNING ROWID BULK COLLECT INTO l_rows_out;
    
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
    
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN dup_val_on_index THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner           all_constraints.owner%TYPE;
                    l_name            all_constraints.constraint_name%TYPE;
                    l_err_instance_id PLS_INTEGER;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF FALSE
                    THEN
                        NULL; -- Placeholder in case no unique indexes
                    ELSE
                        pk_alert_exceptions.raise_error(error_name_in => 'DUPLICATE-VALUE',
                                                        name1_in      => 'OWNER',
                                                        value1_in     => l_owner,
                                                        name2_in      => 'CONSTRAINT_NAME',
                                                        value2_in     => l_name,
                                                        name3_in      => 'TABLE_NAME',
                                                        value3_in     => 'NURSE_TEA_REQ_HIST');
                    END IF;
                END;
            END IF;
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'NURSE_TEA_REQ_HIST');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'NURSE_TEA_REQ_HIST');
                    IF l_name = 'NTRH_NTR_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_NURSE_TEA_REQ',
                                                        value_in           => id_nurse_tea_req_in);
                    END IF;
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
        WHEN e_null_column_value THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    v_errm    VARCHAR2(2000) := dbms_utility.format_error_stack;
                    dot1loc   INTEGER;
                    dot2loc   INTEGER;
                    parenloc  INTEGER;
                    c_owner   all_constraints.owner%TYPE;
                    c_tabname all_tables.table_name%TYPE;
                    c_colname all_tab_columns.column_name%TYPE;
                BEGIN
                    dot1loc   := instr(v_errm, '.', 1, 1);
                    dot2loc   := instr(v_errm, '.', 1, 2);
                    parenloc  := instr(v_errm, '(');
                    c_owner   := substr(v_errm, parenloc + 1, dot1loc - parenloc - 1);
                    c_tabname := substr(v_errm, dot1loc + 1, dot2loc - dot1loc - 1);
                    c_colname := substr(v_errm, dot2loc + 1, instr(v_errm, ')') - dot2loc - 1);
                
                    pk_alert_exceptions.raise_error(error_name_in => 'COLUMN-CANNOT-BE-NULL',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => c_owner,
                                                    name2_in      => 'TABLE_NAME',
                                                    value2_in     => c_tabname,
                                                    name3_in      => 'COLUMN_NAME',
                                                    value3_in     => c_colname);
                END;
            END IF;
    END upd;

    PROCEDURE upd
    (
        id_nurse_tea_req_hist_in       IN nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE,
        id_nurse_tea_req_in            IN nurse_tea_req_hist.id_nurse_tea_req%TYPE DEFAULT NULL,
        id_nurse_tea_req_nin           IN BOOLEAN := TRUE,
        id_prof_req_in                 IN nurse_tea_req_hist.id_prof_req%TYPE DEFAULT NULL,
        id_prof_req_nin                IN BOOLEAN := TRUE,
        id_episode_in                  IN nurse_tea_req_hist.id_episode%TYPE DEFAULT NULL,
        id_episode_nin                 IN BOOLEAN := TRUE,
        req_header_in                  IN nurse_tea_req_hist.req_header%TYPE DEFAULT NULL,
        req_header_nin                 IN BOOLEAN := TRUE,
        flg_status_in                  IN nurse_tea_req_hist.flg_status%TYPE DEFAULT NULL,
        flg_status_nin                 IN BOOLEAN := TRUE,
        notes_req_in                   IN nurse_tea_req_hist.notes_req%TYPE DEFAULT NULL,
        notes_req_nin                  IN BOOLEAN := TRUE,
        id_prof_close_in               IN nurse_tea_req_hist.id_prof_close%TYPE DEFAULT NULL,
        id_prof_close_nin              IN BOOLEAN := TRUE,
        notes_close_in                 IN nurse_tea_req_hist.notes_close%TYPE DEFAULT NULL,
        notes_close_nin                IN BOOLEAN := TRUE,
        id_prof_exec_in                IN nurse_tea_req_hist.id_prof_exec%TYPE DEFAULT NULL,
        id_prof_exec_nin               IN BOOLEAN := TRUE,
        id_prev_episode_in             IN nurse_tea_req_hist.id_prev_episode%TYPE DEFAULT NULL,
        id_prev_episode_nin            IN BOOLEAN := TRUE,
        dt_nurse_tea_req_tstz_in       IN nurse_tea_req_hist.dt_nurse_tea_req_tstz%TYPE DEFAULT NULL,
        dt_nurse_tea_req_tstz_nin      IN BOOLEAN := TRUE,
        dt_begin_tstz_in               IN nurse_tea_req_hist.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_nin              IN BOOLEAN := TRUE,
        dt_close_tstz_in               IN nurse_tea_req_hist.dt_close_tstz%TYPE DEFAULT NULL,
        dt_close_tstz_nin              IN BOOLEAN := TRUE,
        id_visit_in                    IN nurse_tea_req_hist.id_visit%TYPE DEFAULT NULL,
        id_visit_nin                   IN BOOLEAN := TRUE,
        id_patient_in                  IN nurse_tea_req_hist.id_patient%TYPE DEFAULT NULL,
        id_patient_nin                 IN BOOLEAN := TRUE,
        status_flg_in                  IN nurse_tea_req_hist.status_flg%TYPE DEFAULT NULL,
        status_flg_nin                 IN BOOLEAN := TRUE,
        status_icon_in                 IN nurse_tea_req_hist.status_icon%TYPE DEFAULT NULL,
        status_icon_nin                IN BOOLEAN := TRUE,
        status_msg_in                  IN nurse_tea_req_hist.status_msg%TYPE DEFAULT NULL,
        status_msg_nin                 IN BOOLEAN := TRUE,
        status_str_in                  IN nurse_tea_req_hist.status_str%TYPE DEFAULT NULL,
        status_str_nin                 IN BOOLEAN := TRUE,
        create_user_in                 IN nurse_tea_req_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin                IN BOOLEAN := TRUE,
        create_time_in                 IN nurse_tea_req_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin                IN BOOLEAN := TRUE,
        create_institution_in          IN nurse_tea_req_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin         IN BOOLEAN := TRUE,
        update_user_in                 IN nurse_tea_req_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin                IN BOOLEAN := TRUE,
        update_time_in                 IN nurse_tea_req_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin                IN BOOLEAN := TRUE,
        update_institution_in          IN nurse_tea_req_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin         IN BOOLEAN := TRUE,
        id_cancel_reason_in            IN nurse_tea_req_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin           IN BOOLEAN := TRUE,
        id_context_in                  IN nurse_tea_req_hist.id_context%TYPE DEFAULT NULL,
        id_context_nin                 IN BOOLEAN := TRUE,
        flg_context_in                 IN nurse_tea_req_hist.flg_context%TYPE DEFAULT NULL,
        flg_context_nin                IN BOOLEAN := TRUE,
        id_nurse_tea_topic_in          IN nurse_tea_req_hist.id_nurse_tea_topic%TYPE DEFAULT NULL,
        id_nurse_tea_topic_nin         IN BOOLEAN := TRUE,
        id_order_recurr_plan_in        IN nurse_tea_req_hist.id_order_recurr_plan%TYPE DEFAULT NULL,
        id_order_recurr_plan_nin       IN BOOLEAN := TRUE,
        description_in                 IN nurse_tea_req_hist.description%TYPE DEFAULT NULL,
        description_nin                IN BOOLEAN := TRUE,
        flg_time_in                    IN nurse_tea_req_hist.flg_time%TYPE DEFAULT NULL,
        flg_time_nin                   IN BOOLEAN := TRUE,
        dt_nurse_tea_req_hist_tstz_in  IN nurse_tea_req_hist.dt_nurse_tea_req_hist_tstz%TYPE DEFAULT NULL,
        dt_nurse_tea_req_hist_tstz_nin IN BOOLEAN := TRUE,
        desc_topic_aux_in              IN nurse_tea_req_hist.desc_topic_aux%TYPE DEFAULT NULL,
        desc_topic_aux_nin             IN BOOLEAN := TRUE,
        id_not_order_reason_in         IN nurse_tea_req_hist.id_not_order_reason%TYPE DEFAULT NULL,
        id_not_order_reason_nin        IN BOOLEAN := TRUE,
        handle_error_in                IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_nurse_tea_req_hist_in       => id_nurse_tea_req_hist_in,
            id_nurse_tea_req_in            => id_nurse_tea_req_in,
            id_nurse_tea_req_nin           => id_nurse_tea_req_nin,
            id_prof_req_in                 => id_prof_req_in,
            id_prof_req_nin                => id_prof_req_nin,
            id_episode_in                  => id_episode_in,
            id_episode_nin                 => id_episode_nin,
            req_header_in                  => req_header_in,
            req_header_nin                 => req_header_nin,
            flg_status_in                  => flg_status_in,
            flg_status_nin                 => flg_status_nin,
            notes_req_in                   => notes_req_in,
            notes_req_nin                  => notes_req_nin,
            id_prof_close_in               => id_prof_close_in,
            id_prof_close_nin              => id_prof_close_nin,
            notes_close_in                 => notes_close_in,
            notes_close_nin                => notes_close_nin,
            id_prof_exec_in                => id_prof_exec_in,
            id_prof_exec_nin               => id_prof_exec_nin,
            id_prev_episode_in             => id_prev_episode_in,
            id_prev_episode_nin            => id_prev_episode_nin,
            dt_nurse_tea_req_tstz_in       => dt_nurse_tea_req_tstz_in,
            dt_nurse_tea_req_tstz_nin      => dt_nurse_tea_req_tstz_nin,
            dt_begin_tstz_in               => dt_begin_tstz_in,
            dt_begin_tstz_nin              => dt_begin_tstz_nin,
            dt_close_tstz_in               => dt_close_tstz_in,
            dt_close_tstz_nin              => dt_close_tstz_nin,
            id_visit_in                    => id_visit_in,
            id_visit_nin                   => id_visit_nin,
            id_patient_in                  => id_patient_in,
            id_patient_nin                 => id_patient_nin,
            status_flg_in                  => status_flg_in,
            status_flg_nin                 => status_flg_nin,
            status_icon_in                 => status_icon_in,
            status_icon_nin                => status_icon_nin,
            status_msg_in                  => status_msg_in,
            status_msg_nin                 => status_msg_nin,
            status_str_in                  => status_str_in,
            status_str_nin                 => status_str_nin,
            create_user_in                 => create_user_in,
            create_user_nin                => create_user_nin,
            create_time_in                 => create_time_in,
            create_time_nin                => create_time_nin,
            create_institution_in          => create_institution_in,
            create_institution_nin         => create_institution_nin,
            update_user_in                 => update_user_in,
            update_user_nin                => update_user_nin,
            update_time_in                 => update_time_in,
            update_time_nin                => update_time_nin,
            update_institution_in          => update_institution_in,
            update_institution_nin         => update_institution_nin,
            id_cancel_reason_in            => id_cancel_reason_in,
            id_cancel_reason_nin           => id_cancel_reason_nin,
            id_context_in                  => id_context_in,
            id_context_nin                 => id_context_nin,
            flg_context_in                 => flg_context_in,
            flg_context_nin                => flg_context_nin,
            id_nurse_tea_topic_in          => id_nurse_tea_topic_in,
            id_nurse_tea_topic_nin         => id_nurse_tea_topic_nin,
            id_order_recurr_plan_in        => id_order_recurr_plan_in,
            id_order_recurr_plan_nin       => id_order_recurr_plan_nin,
            description_in                 => description_in,
            description_nin                => description_nin,
            flg_time_in                    => flg_time_in,
            flg_time_nin                   => flg_time_nin,
            dt_nurse_tea_req_hist_tstz_in  => dt_nurse_tea_req_hist_tstz_in,
            dt_nurse_tea_req_hist_tstz_nin => dt_nurse_tea_req_hist_tstz_nin,
            desc_topic_aux_in              => desc_topic_aux_in,
            desc_topic_aux_nin             => desc_topic_aux_nin,
            id_not_order_reason_in         => id_not_order_reason_in,
            id_not_order_reason_nin        => id_not_order_reason_nin,
            handle_error_in                => handle_error_in,
            rows_out                       => rows_out);
    END upd;

    PROCEDURE upd
    (
        id_nurse_tea_req_in            IN nurse_tea_req_hist.id_nurse_tea_req%TYPE DEFAULT NULL,
        id_nurse_tea_req_nin           IN BOOLEAN := TRUE,
        id_prof_req_in                 IN nurse_tea_req_hist.id_prof_req%TYPE DEFAULT NULL,
        id_prof_req_nin                IN BOOLEAN := TRUE,
        id_episode_in                  IN nurse_tea_req_hist.id_episode%TYPE DEFAULT NULL,
        id_episode_nin                 IN BOOLEAN := TRUE,
        req_header_in                  IN nurse_tea_req_hist.req_header%TYPE DEFAULT NULL,
        req_header_nin                 IN BOOLEAN := TRUE,
        flg_status_in                  IN nurse_tea_req_hist.flg_status%TYPE DEFAULT NULL,
        flg_status_nin                 IN BOOLEAN := TRUE,
        notes_req_in                   IN nurse_tea_req_hist.notes_req%TYPE DEFAULT NULL,
        notes_req_nin                  IN BOOLEAN := TRUE,
        id_prof_close_in               IN nurse_tea_req_hist.id_prof_close%TYPE DEFAULT NULL,
        id_prof_close_nin              IN BOOLEAN := TRUE,
        notes_close_in                 IN nurse_tea_req_hist.notes_close%TYPE DEFAULT NULL,
        notes_close_nin                IN BOOLEAN := TRUE,
        id_prof_exec_in                IN nurse_tea_req_hist.id_prof_exec%TYPE DEFAULT NULL,
        id_prof_exec_nin               IN BOOLEAN := TRUE,
        id_prev_episode_in             IN nurse_tea_req_hist.id_prev_episode%TYPE DEFAULT NULL,
        id_prev_episode_nin            IN BOOLEAN := TRUE,
        dt_nurse_tea_req_tstz_in       IN nurse_tea_req_hist.dt_nurse_tea_req_tstz%TYPE DEFAULT NULL,
        dt_nurse_tea_req_tstz_nin      IN BOOLEAN := TRUE,
        dt_begin_tstz_in               IN nurse_tea_req_hist.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_nin              IN BOOLEAN := TRUE,
        dt_close_tstz_in               IN nurse_tea_req_hist.dt_close_tstz%TYPE DEFAULT NULL,
        dt_close_tstz_nin              IN BOOLEAN := TRUE,
        id_visit_in                    IN nurse_tea_req_hist.id_visit%TYPE DEFAULT NULL,
        id_visit_nin                   IN BOOLEAN := TRUE,
        id_patient_in                  IN nurse_tea_req_hist.id_patient%TYPE DEFAULT NULL,
        id_patient_nin                 IN BOOLEAN := TRUE,
        status_flg_in                  IN nurse_tea_req_hist.status_flg%TYPE DEFAULT NULL,
        status_flg_nin                 IN BOOLEAN := TRUE,
        status_icon_in                 IN nurse_tea_req_hist.status_icon%TYPE DEFAULT NULL,
        status_icon_nin                IN BOOLEAN := TRUE,
        status_msg_in                  IN nurse_tea_req_hist.status_msg%TYPE DEFAULT NULL,
        status_msg_nin                 IN BOOLEAN := TRUE,
        status_str_in                  IN nurse_tea_req_hist.status_str%TYPE DEFAULT NULL,
        status_str_nin                 IN BOOLEAN := TRUE,
        create_user_in                 IN nurse_tea_req_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin                IN BOOLEAN := TRUE,
        create_time_in                 IN nurse_tea_req_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin                IN BOOLEAN := TRUE,
        create_institution_in          IN nurse_tea_req_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin         IN BOOLEAN := TRUE,
        update_user_in                 IN nurse_tea_req_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin                IN BOOLEAN := TRUE,
        update_time_in                 IN nurse_tea_req_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin                IN BOOLEAN := TRUE,
        update_institution_in          IN nurse_tea_req_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin         IN BOOLEAN := TRUE,
        id_cancel_reason_in            IN nurse_tea_req_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin           IN BOOLEAN := TRUE,
        id_context_in                  IN nurse_tea_req_hist.id_context%TYPE DEFAULT NULL,
        id_context_nin                 IN BOOLEAN := TRUE,
        flg_context_in                 IN nurse_tea_req_hist.flg_context%TYPE DEFAULT NULL,
        flg_context_nin                IN BOOLEAN := TRUE,
        id_nurse_tea_topic_in          IN nurse_tea_req_hist.id_nurse_tea_topic%TYPE DEFAULT NULL,
        id_nurse_tea_topic_nin         IN BOOLEAN := TRUE,
        id_order_recurr_plan_in        IN nurse_tea_req_hist.id_order_recurr_plan%TYPE DEFAULT NULL,
        id_order_recurr_plan_nin       IN BOOLEAN := TRUE,
        description_in                 IN nurse_tea_req_hist.description%TYPE DEFAULT NULL,
        description_nin                IN BOOLEAN := TRUE,
        flg_time_in                    IN nurse_tea_req_hist.flg_time%TYPE DEFAULT NULL,
        flg_time_nin                   IN BOOLEAN := TRUE,
        dt_nurse_tea_req_hist_tstz_in  IN nurse_tea_req_hist.dt_nurse_tea_req_hist_tstz%TYPE DEFAULT NULL,
        dt_nurse_tea_req_hist_tstz_nin IN BOOLEAN := TRUE,
        desc_topic_aux_in              IN nurse_tea_req_hist.desc_topic_aux%TYPE DEFAULT NULL,
        desc_topic_aux_nin             IN BOOLEAN := TRUE,
        id_not_order_reason_in         IN nurse_tea_req_hist.id_not_order_reason%TYPE DEFAULT NULL,
        id_not_order_reason_nin        IN BOOLEAN := TRUE,
        where_in                       VARCHAR2,
        handle_error_in                IN BOOLEAN := TRUE,
        rows_out                       IN OUT table_varchar
    ) IS
        l_sql                          VARCHAR2(32767);
        l_rows_out                     table_varchar;
        l_id_nurse_tea_req_n           NUMBER(1);
        l_id_prof_req_n                NUMBER(1);
        l_id_episode_n                 NUMBER(1);
        l_req_header_n                 NUMBER(1);
        l_flg_status_n                 NUMBER(1);
        l_notes_req_n                  NUMBER(1);
        l_id_prof_close_n              NUMBER(1);
        l_notes_close_n                NUMBER(1);
        l_id_prof_exec_n               NUMBER(1);
        l_id_prev_episode_n            NUMBER(1);
        l_dt_nurse_tea_req_tstz_n      NUMBER(1);
        l_dt_begin_tstz_n              NUMBER(1);
        l_dt_close_tstz_n              NUMBER(1);
        l_id_visit_n                   NUMBER(1);
        l_id_patient_n                 NUMBER(1);
        l_status_flg_n                 NUMBER(1);
        l_status_icon_n                NUMBER(1);
        l_status_msg_n                 NUMBER(1);
        l_status_str_n                 NUMBER(1);
        l_create_user_n                NUMBER(1);
        l_create_time_n                NUMBER(1);
        l_create_institution_n         NUMBER(1);
        l_update_user_n                NUMBER(1);
        l_update_time_n                NUMBER(1);
        l_update_institution_n         NUMBER(1);
        l_id_cancel_reason_n           NUMBER(1);
        l_id_context_n                 NUMBER(1);
        l_flg_context_n                NUMBER(1);
        l_id_nurse_tea_topic_n         NUMBER(1);
        l_id_order_recurr_plan_n       NUMBER(1);
        l_description_n                NUMBER(1);
        l_flg_time_n                   NUMBER(1);
        l_dt_nurse_tea_req_hist_tstz_n NUMBER(1);
        l_desc_topic_aux_n             NUMBER(1);
        l_id_not_order_reason_n        NUMBER(1);
        id_nurse_tea_req_hist_in       nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE;
    BEGIN
    
        l_id_nurse_tea_req_n           := sys.diutil.bool_to_int(id_nurse_tea_req_nin);
        l_id_prof_req_n                := sys.diutil.bool_to_int(id_prof_req_nin);
        l_id_episode_n                 := sys.diutil.bool_to_int(id_episode_nin);
        l_req_header_n                 := sys.diutil.bool_to_int(req_header_nin);
        l_flg_status_n                 := sys.diutil.bool_to_int(flg_status_nin);
        l_notes_req_n                  := sys.diutil.bool_to_int(notes_req_nin);
        l_id_prof_close_n              := sys.diutil.bool_to_int(id_prof_close_nin);
        l_notes_close_n                := sys.diutil.bool_to_int(notes_close_nin);
        l_id_prof_exec_n               := sys.diutil.bool_to_int(id_prof_exec_nin);
        l_id_prev_episode_n            := sys.diutil.bool_to_int(id_prev_episode_nin);
        l_dt_nurse_tea_req_tstz_n      := sys.diutil.bool_to_int(dt_nurse_tea_req_tstz_nin);
        l_dt_begin_tstz_n              := sys.diutil.bool_to_int(dt_begin_tstz_nin);
        l_dt_close_tstz_n              := sys.diutil.bool_to_int(dt_close_tstz_nin);
        l_id_visit_n                   := sys.diutil.bool_to_int(id_visit_nin);
        l_id_patient_n                 := sys.diutil.bool_to_int(id_patient_nin);
        l_status_flg_n                 := sys.diutil.bool_to_int(status_flg_nin);
        l_status_icon_n                := sys.diutil.bool_to_int(status_icon_nin);
        l_status_msg_n                 := sys.diutil.bool_to_int(status_msg_nin);
        l_status_str_n                 := sys.diutil.bool_to_int(status_str_nin);
        l_create_user_n                := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n                := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n         := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n                := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n                := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n         := sys.diutil.bool_to_int(update_institution_nin);
        l_id_cancel_reason_n           := sys.diutil.bool_to_int(id_cancel_reason_nin);
        l_id_context_n                 := sys.diutil.bool_to_int(id_context_nin);
        l_flg_context_n                := sys.diutil.bool_to_int(flg_context_nin);
        l_id_nurse_tea_topic_n         := sys.diutil.bool_to_int(id_nurse_tea_topic_nin);
        l_id_order_recurr_plan_n       := sys.diutil.bool_to_int(id_order_recurr_plan_nin);
        l_description_n                := sys.diutil.bool_to_int(description_nin);
        l_flg_time_n                   := sys.diutil.bool_to_int(flg_time_nin);
        l_dt_nurse_tea_req_hist_tstz_n := sys.diutil.bool_to_int(dt_nurse_tea_req_hist_tstz_nin);
        l_desc_topic_aux_n             := sys.diutil.bool_to_int(desc_topic_aux_nin);
        l_id_not_order_reason_n        := sys.diutil.bool_to_int(id_not_order_reason_nin);
    
        l_sql := 'UPDATE NURSE_TEA_REQ_HIST SET ' || ' ID_NURSE_TEA_REQ = decode (' || l_id_nurse_tea_req_n ||
                 ',0,:id_nurse_tea_req_in, NVL (:id_nurse_tea_req_in, ID_NURSE_TEA_REQ)) ' || ',' ||
                 ' ID_PROF_REQ = decode (' || l_id_prof_req_n ||
                 ',0,:id_prof_req_in, NVL (:id_prof_req_in, ID_PROF_REQ)) ' || ',' || ' ID_EPISODE = decode (' ||
                 l_id_episode_n || ',0,:id_episode_in, NVL (:id_episode_in, ID_EPISODE)) ' || ',' ||
                 ' REQ_HEADER = decode (' || l_req_header_n || ',0,:req_header_in, NVL (:req_header_in, REQ_HEADER)) ' || ',' ||
                 ' FLG_STATUS = decode (' || l_flg_status_n || ',0,:flg_status_in, NVL (:flg_status_in, FLG_STATUS)) ' || ',' ||
                 ' NOTES_REQ = decode (' || l_notes_req_n || ',0,:notes_req_in, NVL (:notes_req_in, NOTES_REQ)) ' || ',' ||
                 ' ID_PROF_CLOSE = decode (' || l_id_prof_close_n ||
                 ',0,:id_prof_close_in, NVL (:id_prof_close_in, ID_PROF_CLOSE)) ' || ',' || ' NOTES_CLOSE = decode (' ||
                 l_notes_close_n || ',0,:notes_close_in, NVL (:notes_close_in, NOTES_CLOSE)) ' || ',' ||
                 ' ID_PROF_EXEC = decode (' || l_id_prof_exec_n ||
                 ',0,:id_prof_exec_in, NVL (:id_prof_exec_in, ID_PROF_EXEC)) ' || ',' || ' ID_PREV_EPISODE = decode (' ||
                 l_id_prev_episode_n || ',0,:id_prev_episode_in, NVL (:id_prev_episode_in, ID_PREV_EPISODE)) ' || ',' ||
                 ' DT_NURSE_TEA_REQ_TSTZ = decode (' || l_dt_nurse_tea_req_tstz_n ||
                 ',0,:dt_nurse_tea_req_tstz_in, NVL (:dt_nurse_tea_req_tstz_in, DT_NURSE_TEA_REQ_TSTZ)) ' || ',' ||
                 ' DT_BEGIN_TSTZ = decode (' || l_dt_begin_tstz_n ||
                 ',0,:dt_begin_tstz_in, NVL (:dt_begin_tstz_in, DT_BEGIN_TSTZ)) ' || ',' || ' DT_CLOSE_TSTZ = decode (' ||
                 l_dt_close_tstz_n || ',0,:dt_close_tstz_in, NVL (:dt_close_tstz_in, DT_CLOSE_TSTZ)) ' || ',' ||
                 ' ID_VISIT = decode (' || l_id_visit_n || ',0,:id_visit_in, NVL (:id_visit_in, ID_VISIT)) ' || ',' ||
                 ' ID_PATIENT = decode (' || l_id_patient_n || ',0,:id_patient_in, NVL (:id_patient_in, ID_PATIENT)) ' || ',' ||
                 ' STATUS_FLG = decode (' || l_status_flg_n || ',0,:status_flg_in, NVL (:status_flg_in, STATUS_FLG)) ' || ',' ||
                 ' STATUS_ICON = decode (' || l_status_icon_n ||
                 ',0,:status_icon_in, NVL (:status_icon_in, STATUS_ICON)) ' || ',' || ' STATUS_MSG = decode (' ||
                 l_status_msg_n || ',0,:status_msg_in, NVL (:status_msg_in, STATUS_MSG)) ' || ',' ||
                 ' STATUS_STR = decode (' || l_status_str_n || ',0,:status_str_in, NVL (:status_str_in, STATUS_STR)) ' || ',' ||
                 ' CREATE_USER = decode (' || l_create_user_n ||
                 ',0,:create_user_in, NVL (:create_user_in, CREATE_USER)) ' || ',' || ' CREATE_TIME = decode (' ||
                 l_create_time_n || ',0,:create_time_in, NVL (:create_time_in, CREATE_TIME)) ' || ',' ||
                 ' CREATE_INSTITUTION = decode (' || l_create_institution_n ||
                 ',0,:create_institution_in, NVL (:create_institution_in, CREATE_INSTITUTION)) ' || ',' ||
                 ' UPDATE_USER = decode (' || l_update_user_n ||
                 ',0,:update_user_in, NVL (:update_user_in, UPDATE_USER)) ' || ',' || ' UPDATE_TIME = decode (' ||
                 l_update_time_n || ',0,:update_time_in, NVL (:update_time_in, UPDATE_TIME)) ' || ',' ||
                 ' UPDATE_INSTITUTION = decode (' || l_update_institution_n ||
                 ',0,:update_institution_in, NVL (:update_institution_in, UPDATE_INSTITUTION)) ' || ',' ||
                 ' ID_CANCEL_REASON = decode (' || l_id_cancel_reason_n ||
                 ',0,:id_cancel_reason_in, NVL (:id_cancel_reason_in, ID_CANCEL_REASON)) ' || ',' ||
                 ' ID_CONTEXT = decode (' || l_id_context_n || ',0,:id_context_in, NVL (:id_context_in, ID_CONTEXT)) ' || ',' ||
                 ' FLG_CONTEXT = decode (' || l_flg_context_n ||
                 ',0,:flg_context_in, NVL (:flg_context_in, FLG_CONTEXT)) ' || ',' || ' ID_NURSE_TEA_TOPIC = decode (' ||
                 l_id_nurse_tea_topic_n ||
                 ',0,:id_nurse_tea_topic_in, NVL (:id_nurse_tea_topic_in, ID_NURSE_TEA_TOPIC)) ' || ',' ||
                 ' ID_ORDER_RECURR_PLAN = decode (' || l_id_order_recurr_plan_n ||
                 ',0,:id_order_recurr_plan_in, NVL (:id_order_recurr_plan_in, ID_ORDER_RECURR_PLAN)) ' || ',' ||
                 ' DESCRIPTION = decode (' || l_description_n ||
                 ',0,:description_in, NVL (:description_in, DESCRIPTION)) ' || ',' || ' FLG_TIME = decode (' ||
                 l_flg_time_n || ',0,:flg_time_in, NVL (:flg_time_in, FLG_TIME)) ' || ',' ||
                 ' DT_NURSE_TEA_REQ_HIST_TSTZ = decode (' || l_dt_nurse_tea_req_hist_tstz_n ||
                 ',0,:dt_nurse_tea_req_hist_tstz_in, NVL (:dt_nurse_tea_req_hist_tstz_in, DT_NURSE_TEA_REQ_HIST_TSTZ)) ' || ',' ||
                 ' DESC_TOPIC_AUX = decode (' || l_desc_topic_aux_n ||
                 ',0,:desc_topic_aux_in, NVL (:desc_topic_aux_in, DESC_TOPIC_AUX)) ' || ',' ||
                 ' ID_NOT_ORDER_REASON = decode (' || l_id_not_order_reason_n ||
                 ',0,:id_not_order_reason_in, NVL (:id_not_order_reason_in, ID_NOT_ORDER_REASON)) ' || ' where ' ||
                 nvl(where_in, '(1=1)') || ' RETURNING ROWID BULK COLLECT INTO :l_rows_out';
    
        EXECUTE IMMEDIATE 'BEGIN ' || l_sql || '; END;'
            USING IN id_nurse_tea_req_in, id_prof_req_in, id_episode_in, req_header_in, flg_status_in, notes_req_in, id_prof_close_in, notes_close_in, id_prof_exec_in, id_prev_episode_in, dt_nurse_tea_req_tstz_in, dt_begin_tstz_in, dt_close_tstz_in, id_visit_in, id_patient_in, status_flg_in, status_icon_in, status_msg_in, status_str_in, create_user_in, create_time_in, create_institution_in, update_user_in, update_time_in, update_institution_in, id_cancel_reason_in, id_context_in, flg_context_in, id_nurse_tea_topic_in, id_order_recurr_plan_in, description_in, flg_time_in, dt_nurse_tea_req_hist_tstz_in, desc_topic_aux_in, id_not_order_reason_in, OUT l_rows_out;
    
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
    
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN dup_val_on_index THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner           all_constraints.owner%TYPE;
                    l_name            all_constraints.constraint_name%TYPE;
                    l_err_instance_id PLS_INTEGER;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF FALSE
                    THEN
                        NULL; -- Placeholder in case no unique indexes
                    ELSE
                        pk_alert_exceptions.raise_error(error_name_in => 'DUPLICATE-VALUE',
                                                        name1_in      => 'OWNER',
                                                        value1_in     => l_owner,
                                                        name2_in      => 'CONSTRAINT_NAME',
                                                        value2_in     => l_name,
                                                        name3_in      => 'TABLE_NAME',
                                                        value3_in     => 'NURSE_TEA_REQ_HIST');
                    END IF;
                END;
            END IF;
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'NURSE_TEA_REQ_HIST');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'NURSE_TEA_REQ_HIST');
                    IF l_name = 'NTRH_NTR_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_NURSE_TEA_REQ',
                                                        value_in           => id_nurse_tea_req_in);
                    END IF;
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
        WHEN e_null_column_value THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    v_errm    VARCHAR2(2000) := dbms_utility.format_error_stack;
                    dot1loc   INTEGER;
                    dot2loc   INTEGER;
                    parenloc  INTEGER;
                    c_owner   all_constraints.owner%TYPE;
                    c_tabname all_tables.table_name%TYPE;
                    c_colname all_tab_columns.column_name%TYPE;
                BEGIN
                    dot1loc   := instr(v_errm, '.', 1, 1);
                    dot2loc   := instr(v_errm, '.', 1, 2);
                    parenloc  := instr(v_errm, '(');
                    c_owner   := substr(v_errm, parenloc + 1, dot1loc - parenloc - 1);
                    c_tabname := substr(v_errm, dot1loc + 1, dot2loc - dot1loc - 1);
                    c_colname := substr(v_errm, dot2loc + 1, instr(v_errm, ')') - dot2loc - 1);
                
                    pk_alert_exceptions.raise_error(error_name_in => 'COLUMN-CANNOT-BE-NULL',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => c_owner,
                                                    name2_in      => 'TABLE_NAME',
                                                    value2_in     => c_tabname,
                                                    name3_in      => 'COLUMN_NAME',
                                                    value3_in     => c_colname);
                END;
            END IF;
    END upd;

    PROCEDURE upd
    (
        id_nurse_tea_req_in            IN nurse_tea_req_hist.id_nurse_tea_req%TYPE DEFAULT NULL,
        id_nurse_tea_req_nin           IN BOOLEAN := TRUE,
        id_prof_req_in                 IN nurse_tea_req_hist.id_prof_req%TYPE DEFAULT NULL,
        id_prof_req_nin                IN BOOLEAN := TRUE,
        id_episode_in                  IN nurse_tea_req_hist.id_episode%TYPE DEFAULT NULL,
        id_episode_nin                 IN BOOLEAN := TRUE,
        req_header_in                  IN nurse_tea_req_hist.req_header%TYPE DEFAULT NULL,
        req_header_nin                 IN BOOLEAN := TRUE,
        flg_status_in                  IN nurse_tea_req_hist.flg_status%TYPE DEFAULT NULL,
        flg_status_nin                 IN BOOLEAN := TRUE,
        notes_req_in                   IN nurse_tea_req_hist.notes_req%TYPE DEFAULT NULL,
        notes_req_nin                  IN BOOLEAN := TRUE,
        id_prof_close_in               IN nurse_tea_req_hist.id_prof_close%TYPE DEFAULT NULL,
        id_prof_close_nin              IN BOOLEAN := TRUE,
        notes_close_in                 IN nurse_tea_req_hist.notes_close%TYPE DEFAULT NULL,
        notes_close_nin                IN BOOLEAN := TRUE,
        id_prof_exec_in                IN nurse_tea_req_hist.id_prof_exec%TYPE DEFAULT NULL,
        id_prof_exec_nin               IN BOOLEAN := TRUE,
        id_prev_episode_in             IN nurse_tea_req_hist.id_prev_episode%TYPE DEFAULT NULL,
        id_prev_episode_nin            IN BOOLEAN := TRUE,
        dt_nurse_tea_req_tstz_in       IN nurse_tea_req_hist.dt_nurse_tea_req_tstz%TYPE DEFAULT NULL,
        dt_nurse_tea_req_tstz_nin      IN BOOLEAN := TRUE,
        dt_begin_tstz_in               IN nurse_tea_req_hist.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_nin              IN BOOLEAN := TRUE,
        dt_close_tstz_in               IN nurse_tea_req_hist.dt_close_tstz%TYPE DEFAULT NULL,
        dt_close_tstz_nin              IN BOOLEAN := TRUE,
        id_visit_in                    IN nurse_tea_req_hist.id_visit%TYPE DEFAULT NULL,
        id_visit_nin                   IN BOOLEAN := TRUE,
        id_patient_in                  IN nurse_tea_req_hist.id_patient%TYPE DEFAULT NULL,
        id_patient_nin                 IN BOOLEAN := TRUE,
        status_flg_in                  IN nurse_tea_req_hist.status_flg%TYPE DEFAULT NULL,
        status_flg_nin                 IN BOOLEAN := TRUE,
        status_icon_in                 IN nurse_tea_req_hist.status_icon%TYPE DEFAULT NULL,
        status_icon_nin                IN BOOLEAN := TRUE,
        status_msg_in                  IN nurse_tea_req_hist.status_msg%TYPE DEFAULT NULL,
        status_msg_nin                 IN BOOLEAN := TRUE,
        status_str_in                  IN nurse_tea_req_hist.status_str%TYPE DEFAULT NULL,
        status_str_nin                 IN BOOLEAN := TRUE,
        create_user_in                 IN nurse_tea_req_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin                IN BOOLEAN := TRUE,
        create_time_in                 IN nurse_tea_req_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin                IN BOOLEAN := TRUE,
        create_institution_in          IN nurse_tea_req_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin         IN BOOLEAN := TRUE,
        update_user_in                 IN nurse_tea_req_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin                IN BOOLEAN := TRUE,
        update_time_in                 IN nurse_tea_req_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin                IN BOOLEAN := TRUE,
        update_institution_in          IN nurse_tea_req_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin         IN BOOLEAN := TRUE,
        id_cancel_reason_in            IN nurse_tea_req_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin           IN BOOLEAN := TRUE,
        id_context_in                  IN nurse_tea_req_hist.id_context%TYPE DEFAULT NULL,
        id_context_nin                 IN BOOLEAN := TRUE,
        flg_context_in                 IN nurse_tea_req_hist.flg_context%TYPE DEFAULT NULL,
        flg_context_nin                IN BOOLEAN := TRUE,
        id_nurse_tea_topic_in          IN nurse_tea_req_hist.id_nurse_tea_topic%TYPE DEFAULT NULL,
        id_nurse_tea_topic_nin         IN BOOLEAN := TRUE,
        id_order_recurr_plan_in        IN nurse_tea_req_hist.id_order_recurr_plan%TYPE DEFAULT NULL,
        id_order_recurr_plan_nin       IN BOOLEAN := TRUE,
        description_in                 IN nurse_tea_req_hist.description%TYPE DEFAULT NULL,
        description_nin                IN BOOLEAN := TRUE,
        flg_time_in                    IN nurse_tea_req_hist.flg_time%TYPE DEFAULT NULL,
        flg_time_nin                   IN BOOLEAN := TRUE,
        dt_nurse_tea_req_hist_tstz_in  IN nurse_tea_req_hist.dt_nurse_tea_req_hist_tstz%TYPE DEFAULT NULL,
        dt_nurse_tea_req_hist_tstz_nin IN BOOLEAN := TRUE,
        desc_topic_aux_in              IN nurse_tea_req_hist.desc_topic_aux%TYPE DEFAULT NULL,
        desc_topic_aux_nin             IN BOOLEAN := TRUE,
        id_not_order_reason_in         IN nurse_tea_req_hist.id_not_order_reason%TYPE DEFAULT NULL,
        id_not_order_reason_nin        IN BOOLEAN := TRUE,
        where_in                       VARCHAR2,
        handle_error_in                IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_nurse_tea_req_in            => id_nurse_tea_req_in,
            id_nurse_tea_req_nin           => id_nurse_tea_req_nin,
            id_prof_req_in                 => id_prof_req_in,
            id_prof_req_nin                => id_prof_req_nin,
            id_episode_in                  => id_episode_in,
            id_episode_nin                 => id_episode_nin,
            req_header_in                  => req_header_in,
            req_header_nin                 => req_header_nin,
            flg_status_in                  => flg_status_in,
            flg_status_nin                 => flg_status_nin,
            notes_req_in                   => notes_req_in,
            notes_req_nin                  => notes_req_nin,
            id_prof_close_in               => id_prof_close_in,
            id_prof_close_nin              => id_prof_close_nin,
            notes_close_in                 => notes_close_in,
            notes_close_nin                => notes_close_nin,
            id_prof_exec_in                => id_prof_exec_in,
            id_prof_exec_nin               => id_prof_exec_nin,
            id_prev_episode_in             => id_prev_episode_in,
            id_prev_episode_nin            => id_prev_episode_nin,
            dt_nurse_tea_req_tstz_in       => dt_nurse_tea_req_tstz_in,
            dt_nurse_tea_req_tstz_nin      => dt_nurse_tea_req_tstz_nin,
            dt_begin_tstz_in               => dt_begin_tstz_in,
            dt_begin_tstz_nin              => dt_begin_tstz_nin,
            dt_close_tstz_in               => dt_close_tstz_in,
            dt_close_tstz_nin              => dt_close_tstz_nin,
            id_visit_in                    => id_visit_in,
            id_visit_nin                   => id_visit_nin,
            id_patient_in                  => id_patient_in,
            id_patient_nin                 => id_patient_nin,
            status_flg_in                  => status_flg_in,
            status_flg_nin                 => status_flg_nin,
            status_icon_in                 => status_icon_in,
            status_icon_nin                => status_icon_nin,
            status_msg_in                  => status_msg_in,
            status_msg_nin                 => status_msg_nin,
            status_str_in                  => status_str_in,
            status_str_nin                 => status_str_nin,
            create_user_in                 => create_user_in,
            create_user_nin                => create_user_nin,
            create_time_in                 => create_time_in,
            create_time_nin                => create_time_nin,
            create_institution_in          => create_institution_in,
            create_institution_nin         => create_institution_nin,
            update_user_in                 => update_user_in,
            update_user_nin                => update_user_nin,
            update_time_in                 => update_time_in,
            update_time_nin                => update_time_nin,
            update_institution_in          => update_institution_in,
            update_institution_nin         => update_institution_nin,
            id_cancel_reason_in            => id_cancel_reason_in,
            id_cancel_reason_nin           => id_cancel_reason_nin,
            id_context_in                  => id_context_in,
            id_context_nin                 => id_context_nin,
            flg_context_in                 => flg_context_in,
            flg_context_nin                => flg_context_nin,
            id_nurse_tea_topic_in          => id_nurse_tea_topic_in,
            id_nurse_tea_topic_nin         => id_nurse_tea_topic_nin,
            id_order_recurr_plan_in        => id_order_recurr_plan_in,
            id_order_recurr_plan_nin       => id_order_recurr_plan_nin,
            description_in                 => description_in,
            description_nin                => description_nin,
            flg_time_in                    => flg_time_in,
            flg_time_nin                   => flg_time_nin,
            dt_nurse_tea_req_hist_tstz_in  => dt_nurse_tea_req_hist_tstz_in,
            dt_nurse_tea_req_hist_tstz_nin => dt_nurse_tea_req_hist_tstz_nin,
            desc_topic_aux_in              => desc_topic_aux_in,
            desc_topic_aux_nin             => desc_topic_aux_nin,
            id_not_order_reason_in         => id_not_order_reason_in,
            id_not_order_reason_nin        => id_not_order_reason_nin,
            where_in                       => where_in,
            handle_error_in                => handle_error_in,
            rows_out                       => rows_out);
    END upd;

    PROCEDURE upd
    (
        rec_in          IN nurse_tea_req_hist%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_nurse_tea_req_hist_in      => rec_in.id_nurse_tea_req_hist,
            id_nurse_tea_req_in           => rec_in.id_nurse_tea_req,
            id_prof_req_in                => rec_in.id_prof_req,
            id_episode_in                 => rec_in.id_episode,
            req_header_in                 => rec_in.req_header,
            flg_status_in                 => rec_in.flg_status,
            notes_req_in                  => rec_in.notes_req,
            id_prof_close_in              => rec_in.id_prof_close,
            notes_close_in                => rec_in.notes_close,
            id_prof_exec_in               => rec_in.id_prof_exec,
            id_prev_episode_in            => rec_in.id_prev_episode,
            dt_nurse_tea_req_tstz_in      => rec_in.dt_nurse_tea_req_tstz,
            dt_begin_tstz_in              => rec_in.dt_begin_tstz,
            dt_close_tstz_in              => rec_in.dt_close_tstz,
            id_visit_in                   => rec_in.id_visit,
            id_patient_in                 => rec_in.id_patient,
            status_flg_in                 => rec_in.status_flg,
            status_icon_in                => rec_in.status_icon,
            status_msg_in                 => rec_in.status_msg,
            status_str_in                 => rec_in.status_str,
            create_user_in                => rec_in.create_user,
            create_time_in                => rec_in.create_time,
            create_institution_in         => rec_in.create_institution,
            update_user_in                => rec_in.update_user,
            update_time_in                => rec_in.update_time,
            update_institution_in         => rec_in.update_institution,
            id_cancel_reason_in           => rec_in.id_cancel_reason,
            id_context_in                 => rec_in.id_context,
            flg_context_in                => rec_in.flg_context,
            id_nurse_tea_topic_in         => rec_in.id_nurse_tea_topic,
            id_order_recurr_plan_in       => rec_in.id_order_recurr_plan,
            description_in                => rec_in.description,
            flg_time_in                   => rec_in.flg_time,
            dt_nurse_tea_req_hist_tstz_in => rec_in.dt_nurse_tea_req_hist_tstz,
            desc_topic_aux_in             => rec_in.desc_topic_aux,
            id_not_order_reason_in        => rec_in.id_not_order_reason
            
           ,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    END upd;

    PROCEDURE upd
    (
        rec_in          IN nurse_tea_req_hist%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_nurse_tea_req_hist_in      => rec_in.id_nurse_tea_req_hist,
            id_nurse_tea_req_in           => rec_in.id_nurse_tea_req,
            id_prof_req_in                => rec_in.id_prof_req,
            id_episode_in                 => rec_in.id_episode,
            req_header_in                 => rec_in.req_header,
            flg_status_in                 => rec_in.flg_status,
            notes_req_in                  => rec_in.notes_req,
            id_prof_close_in              => rec_in.id_prof_close,
            notes_close_in                => rec_in.notes_close,
            id_prof_exec_in               => rec_in.id_prof_exec,
            id_prev_episode_in            => rec_in.id_prev_episode,
            dt_nurse_tea_req_tstz_in      => rec_in.dt_nurse_tea_req_tstz,
            dt_begin_tstz_in              => rec_in.dt_begin_tstz,
            dt_close_tstz_in              => rec_in.dt_close_tstz,
            id_visit_in                   => rec_in.id_visit,
            id_patient_in                 => rec_in.id_patient,
            status_flg_in                 => rec_in.status_flg,
            status_icon_in                => rec_in.status_icon,
            status_msg_in                 => rec_in.status_msg,
            status_str_in                 => rec_in.status_str,
            create_user_in                => rec_in.create_user,
            create_time_in                => rec_in.create_time,
            create_institution_in         => rec_in.create_institution,
            update_user_in                => rec_in.update_user,
            update_time_in                => rec_in.update_time,
            update_institution_in         => rec_in.update_institution,
            id_cancel_reason_in           => rec_in.id_cancel_reason,
            id_context_in                 => rec_in.id_context,
            flg_context_in                => rec_in.flg_context,
            id_nurse_tea_topic_in         => rec_in.id_nurse_tea_topic,
            id_order_recurr_plan_in       => rec_in.id_order_recurr_plan,
            description_in                => rec_in.description,
            flg_time_in                   => rec_in.flg_time,
            dt_nurse_tea_req_hist_tstz_in => rec_in.dt_nurse_tea_req_hist_tstz,
            desc_topic_aux_in             => rec_in.desc_topic_aux,
            id_not_order_reason_in        => rec_in.id_not_order_reason
            
           ,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    END upd;

    PROCEDURE upd_ins
    (
        id_nurse_tea_req_hist_in      IN nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE,
        id_nurse_tea_req_in           IN nurse_tea_req_hist.id_nurse_tea_req%TYPE DEFAULT NULL,
        id_prof_req_in                IN nurse_tea_req_hist.id_prof_req%TYPE DEFAULT NULL,
        id_episode_in                 IN nurse_tea_req_hist.id_episode%TYPE DEFAULT NULL,
        req_header_in                 IN nurse_tea_req_hist.req_header%TYPE DEFAULT NULL,
        flg_status_in                 IN nurse_tea_req_hist.flg_status%TYPE DEFAULT NULL,
        notes_req_in                  IN nurse_tea_req_hist.notes_req%TYPE DEFAULT NULL,
        id_prof_close_in              IN nurse_tea_req_hist.id_prof_close%TYPE DEFAULT NULL,
        notes_close_in                IN nurse_tea_req_hist.notes_close%TYPE DEFAULT NULL,
        id_prof_exec_in               IN nurse_tea_req_hist.id_prof_exec%TYPE DEFAULT NULL,
        id_prev_episode_in            IN nurse_tea_req_hist.id_prev_episode%TYPE DEFAULT NULL,
        dt_nurse_tea_req_tstz_in      IN nurse_tea_req_hist.dt_nurse_tea_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in              IN nurse_tea_req_hist.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_close_tstz_in              IN nurse_tea_req_hist.dt_close_tstz%TYPE DEFAULT NULL,
        id_visit_in                   IN nurse_tea_req_hist.id_visit%TYPE DEFAULT NULL,
        id_patient_in                 IN nurse_tea_req_hist.id_patient%TYPE DEFAULT NULL,
        status_flg_in                 IN nurse_tea_req_hist.status_flg%TYPE DEFAULT NULL,
        status_icon_in                IN nurse_tea_req_hist.status_icon%TYPE DEFAULT NULL,
        status_msg_in                 IN nurse_tea_req_hist.status_msg%TYPE DEFAULT NULL,
        status_str_in                 IN nurse_tea_req_hist.status_str%TYPE DEFAULT NULL,
        create_user_in                IN nurse_tea_req_hist.create_user%TYPE DEFAULT NULL,
        create_time_in                IN nurse_tea_req_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in         IN nurse_tea_req_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in                IN nurse_tea_req_hist.update_user%TYPE DEFAULT NULL,
        update_time_in                IN nurse_tea_req_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in         IN nurse_tea_req_hist.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in           IN nurse_tea_req_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_context_in                 IN nurse_tea_req_hist.id_context%TYPE DEFAULT NULL,
        flg_context_in                IN nurse_tea_req_hist.flg_context%TYPE DEFAULT NULL,
        id_nurse_tea_topic_in         IN nurse_tea_req_hist.id_nurse_tea_topic%TYPE DEFAULT NULL,
        id_order_recurr_plan_in       IN nurse_tea_req_hist.id_order_recurr_plan%TYPE DEFAULT NULL,
        description_in                IN nurse_tea_req_hist.description%TYPE DEFAULT NULL,
        flg_time_in                   IN nurse_tea_req_hist.flg_time%TYPE DEFAULT NULL,
        dt_nurse_tea_req_hist_tstz_in IN nurse_tea_req_hist.dt_nurse_tea_req_hist_tstz%TYPE DEFAULT NULL,
        desc_topic_aux_in             IN nurse_tea_req_hist.desc_topic_aux%TYPE DEFAULT NULL,
        id_not_order_reason_in        IN nurse_tea_req_hist.id_not_order_reason%TYPE DEFAULT NULL,
        handle_error_in               IN BOOLEAN := TRUE,
        rows_out                      OUT table_varchar
    ) IS
    BEGIN
        upd(id_nurse_tea_req_hist_in      => id_nurse_tea_req_hist_in,
            id_nurse_tea_req_in           => id_nurse_tea_req_in,
            id_prof_req_in                => id_prof_req_in,
            id_episode_in                 => id_episode_in,
            req_header_in                 => req_header_in,
            flg_status_in                 => flg_status_in,
            notes_req_in                  => notes_req_in,
            id_prof_close_in              => id_prof_close_in,
            notes_close_in                => notes_close_in,
            id_prof_exec_in               => id_prof_exec_in,
            id_prev_episode_in            => id_prev_episode_in,
            dt_nurse_tea_req_tstz_in      => dt_nurse_tea_req_tstz_in,
            dt_begin_tstz_in              => dt_begin_tstz_in,
            dt_close_tstz_in              => dt_close_tstz_in,
            id_visit_in                   => id_visit_in,
            id_patient_in                 => id_patient_in,
            status_flg_in                 => status_flg_in,
            status_icon_in                => status_icon_in,
            status_msg_in                 => status_msg_in,
            status_str_in                 => status_str_in,
            create_user_in                => create_user_in,
            create_time_in                => create_time_in,
            create_institution_in         => create_institution_in,
            update_user_in                => update_user_in,
            update_time_in                => update_time_in,
            update_institution_in         => update_institution_in,
            id_cancel_reason_in           => id_cancel_reason_in,
            id_context_in                 => id_context_in,
            flg_context_in                => flg_context_in,
            id_nurse_tea_topic_in         => id_nurse_tea_topic_in,
            id_order_recurr_plan_in       => id_order_recurr_plan_in,
            description_in                => description_in,
            flg_time_in                   => flg_time_in,
            dt_nurse_tea_req_hist_tstz_in => dt_nurse_tea_req_hist_tstz_in,
            desc_topic_aux_in             => desc_topic_aux_in,
            id_not_order_reason_in        => id_not_order_reason_in,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
        IF SQL%ROWCOUNT = 0
        THEN
            ins(id_nurse_tea_req_hist_in      => id_nurse_tea_req_hist_in,
                id_nurse_tea_req_in           => id_nurse_tea_req_in,
                id_prof_req_in                => id_prof_req_in,
                id_episode_in                 => id_episode_in,
                req_header_in                 => req_header_in,
                flg_status_in                 => flg_status_in,
                notes_req_in                  => notes_req_in,
                id_prof_close_in              => id_prof_close_in,
                notes_close_in                => notes_close_in,
                id_prof_exec_in               => id_prof_exec_in,
                id_prev_episode_in            => id_prev_episode_in,
                dt_nurse_tea_req_tstz_in      => dt_nurse_tea_req_tstz_in,
                dt_begin_tstz_in              => dt_begin_tstz_in,
                dt_close_tstz_in              => dt_close_tstz_in,
                id_visit_in                   => id_visit_in,
                id_patient_in                 => id_patient_in,
                status_flg_in                 => status_flg_in,
                status_icon_in                => status_icon_in,
                status_msg_in                 => status_msg_in,
                status_str_in                 => status_str_in,
                create_user_in                => create_user_in,
                create_time_in                => create_time_in,
                create_institution_in         => create_institution_in,
                update_user_in                => update_user_in,
                update_time_in                => update_time_in,
                update_institution_in         => update_institution_in,
                id_cancel_reason_in           => id_cancel_reason_in,
                id_context_in                 => id_context_in,
                flg_context_in                => flg_context_in,
                id_nurse_tea_topic_in         => id_nurse_tea_topic_in,
                id_order_recurr_plan_in       => id_order_recurr_plan_in,
                description_in                => description_in,
                flg_time_in                   => flg_time_in,
                dt_nurse_tea_req_hist_tstz_in => dt_nurse_tea_req_hist_tstz_in,
                desc_topic_aux_in             => desc_topic_aux_in,
                id_not_order_reason_in        => id_not_order_reason_in,
                handle_error_in               => handle_error_in,
                rows_out                      => rows_out);
        END IF;
    END upd_ins;

    PROCEDURE upd_ins
    (
        id_nurse_tea_req_hist_in      IN nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE,
        id_nurse_tea_req_in           IN nurse_tea_req_hist.id_nurse_tea_req%TYPE DEFAULT NULL,
        id_prof_req_in                IN nurse_tea_req_hist.id_prof_req%TYPE DEFAULT NULL,
        id_episode_in                 IN nurse_tea_req_hist.id_episode%TYPE DEFAULT NULL,
        req_header_in                 IN nurse_tea_req_hist.req_header%TYPE DEFAULT NULL,
        flg_status_in                 IN nurse_tea_req_hist.flg_status%TYPE DEFAULT NULL,
        notes_req_in                  IN nurse_tea_req_hist.notes_req%TYPE DEFAULT NULL,
        id_prof_close_in              IN nurse_tea_req_hist.id_prof_close%TYPE DEFAULT NULL,
        notes_close_in                IN nurse_tea_req_hist.notes_close%TYPE DEFAULT NULL,
        id_prof_exec_in               IN nurse_tea_req_hist.id_prof_exec%TYPE DEFAULT NULL,
        id_prev_episode_in            IN nurse_tea_req_hist.id_prev_episode%TYPE DEFAULT NULL,
        dt_nurse_tea_req_tstz_in      IN nurse_tea_req_hist.dt_nurse_tea_req_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_in              IN nurse_tea_req_hist.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_close_tstz_in              IN nurse_tea_req_hist.dt_close_tstz%TYPE DEFAULT NULL,
        id_visit_in                   IN nurse_tea_req_hist.id_visit%TYPE DEFAULT NULL,
        id_patient_in                 IN nurse_tea_req_hist.id_patient%TYPE DEFAULT NULL,
        status_flg_in                 IN nurse_tea_req_hist.status_flg%TYPE DEFAULT NULL,
        status_icon_in                IN nurse_tea_req_hist.status_icon%TYPE DEFAULT NULL,
        status_msg_in                 IN nurse_tea_req_hist.status_msg%TYPE DEFAULT NULL,
        status_str_in                 IN nurse_tea_req_hist.status_str%TYPE DEFAULT NULL,
        create_user_in                IN nurse_tea_req_hist.create_user%TYPE DEFAULT NULL,
        create_time_in                IN nurse_tea_req_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in         IN nurse_tea_req_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in                IN nurse_tea_req_hist.update_user%TYPE DEFAULT NULL,
        update_time_in                IN nurse_tea_req_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in         IN nurse_tea_req_hist.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in           IN nurse_tea_req_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_context_in                 IN nurse_tea_req_hist.id_context%TYPE DEFAULT NULL,
        flg_context_in                IN nurse_tea_req_hist.flg_context%TYPE DEFAULT NULL,
        id_nurse_tea_topic_in         IN nurse_tea_req_hist.id_nurse_tea_topic%TYPE DEFAULT NULL,
        id_order_recurr_plan_in       IN nurse_tea_req_hist.id_order_recurr_plan%TYPE DEFAULT NULL,
        description_in                IN nurse_tea_req_hist.description%TYPE DEFAULT NULL,
        flg_time_in                   IN nurse_tea_req_hist.flg_time%TYPE DEFAULT NULL,
        dt_nurse_tea_req_hist_tstz_in IN nurse_tea_req_hist.dt_nurse_tea_req_hist_tstz%TYPE DEFAULT NULL,
        desc_topic_aux_in             IN nurse_tea_req_hist.desc_topic_aux%TYPE DEFAULT NULL,
        id_not_order_reason_in        IN nurse_tea_req_hist.id_not_order_reason%TYPE DEFAULT NULL,
        handle_error_in               IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd_ins(id_nurse_tea_req_hist_in,
                id_nurse_tea_req_in,
                id_prof_req_in,
                id_episode_in,
                req_header_in,
                flg_status_in,
                notes_req_in,
                id_prof_close_in,
                notes_close_in,
                id_prof_exec_in,
                id_prev_episode_in,
                dt_nurse_tea_req_tstz_in,
                dt_begin_tstz_in,
                dt_close_tstz_in,
                id_visit_in,
                id_patient_in,
                status_flg_in,
                status_icon_in,
                status_msg_in,
                status_str_in,
                create_user_in,
                create_time_in,
                create_institution_in,
                update_user_in,
                update_time_in,
                update_institution_in,
                id_cancel_reason_in,
                id_context_in,
                flg_context_in,
                id_nurse_tea_topic_in,
                id_order_recurr_plan_in,
                description_in,
                flg_time_in,
                dt_nurse_tea_req_hist_tstz_in,
                desc_topic_aux_in,
                id_not_order_reason_in,
                handle_error_in,
                rows_out);
    END upd_ins;

    PROCEDURE upd
    (
        col_in            IN nurse_tea_req_hist_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    ) IS
        l_id_nurse_tea_req_hist      id_nurse_tea_req_hist_cc;
        l_id_nurse_tea_req           id_nurse_tea_req_cc;
        l_id_prof_req                id_prof_req_cc;
        l_id_episode                 id_episode_cc;
        l_req_header                 req_header_cc;
        l_flg_status                 flg_status_cc;
        l_notes_req                  notes_req_cc;
        l_id_prof_close              id_prof_close_cc;
        l_notes_close                notes_close_cc;
        l_id_prof_exec               id_prof_exec_cc;
        l_id_prev_episode            id_prev_episode_cc;
        l_dt_nurse_tea_req_tstz      dt_nurse_tea_req_tstz_cc;
        l_dt_begin_tstz              dt_begin_tstz_cc;
        l_dt_close_tstz              dt_close_tstz_cc;
        l_id_visit                   id_visit_cc;
        l_id_patient                 id_patient_cc;
        l_status_flg                 status_flg_cc;
        l_status_icon                status_icon_cc;
        l_status_msg                 status_msg_cc;
        l_status_str                 status_str_cc;
        l_create_user                create_user_cc;
        l_create_time                create_time_cc;
        l_create_institution         create_institution_cc;
        l_update_user                update_user_cc;
        l_update_time                update_time_cc;
        l_update_institution         update_institution_cc;
        l_id_cancel_reason           id_cancel_reason_cc;
        l_id_context                 id_context_cc;
        l_flg_context                flg_context_cc;
        l_id_nurse_tea_topic         id_nurse_tea_topic_cc;
        l_id_order_recurr_plan       id_order_recurr_plan_cc;
        l_description                description_cc;
        l_flg_time                   flg_time_cc;
        l_dt_nurse_tea_req_hist_tstz dt_nurse_tea_req_hist_tstz_cc;
        l_desc_topic_aux             desc_topic_aux_cc;
        l_id_not_order_reason        id_not_order_reason_cc;
    BEGIN
        FOR i IN col_in.first .. col_in.last
        LOOP
            l_id_nurse_tea_req_hist(i) := col_in(i).id_nurse_tea_req_hist;
            l_id_nurse_tea_req(i) := col_in(i).id_nurse_tea_req;
            l_id_prof_req(i) := col_in(i).id_prof_req;
            l_id_episode(i) := col_in(i).id_episode;
            l_req_header(i) := col_in(i).req_header;
            l_flg_status(i) := col_in(i).flg_status;
            l_notes_req(i) := col_in(i).notes_req;
            l_id_prof_close(i) := col_in(i).id_prof_close;
            l_notes_close(i) := col_in(i).notes_close;
            l_id_prof_exec(i) := col_in(i).id_prof_exec;
            l_id_prev_episode(i) := col_in(i).id_prev_episode;
            l_dt_nurse_tea_req_tstz(i) := col_in(i).dt_nurse_tea_req_tstz;
            l_dt_begin_tstz(i) := col_in(i).dt_begin_tstz;
            l_dt_close_tstz(i) := col_in(i).dt_close_tstz;
            l_id_visit(i) := col_in(i).id_visit;
            l_id_patient(i) := col_in(i).id_patient;
            l_status_flg(i) := col_in(i).status_flg;
            l_status_icon(i) := col_in(i).status_icon;
            l_status_msg(i) := col_in(i).status_msg;
            l_status_str(i) := col_in(i).status_str;
            l_create_user(i) := col_in(i).create_user;
            l_create_time(i) := col_in(i).create_time;
            l_create_institution(i) := col_in(i).create_institution;
            l_update_user(i) := col_in(i).update_user;
            l_update_time(i) := col_in(i).update_time;
            l_update_institution(i) := col_in(i).update_institution;
            l_id_cancel_reason(i) := col_in(i).id_cancel_reason;
            l_id_context(i) := col_in(i).id_context;
            l_flg_context(i) := col_in(i).flg_context;
            l_id_nurse_tea_topic(i) := col_in(i).id_nurse_tea_topic;
            l_id_order_recurr_plan(i) := col_in(i).id_order_recurr_plan;
            l_description(i) := col_in(i).description;
            l_flg_time(i) := col_in(i).flg_time;
            l_dt_nurse_tea_req_hist_tstz(i) := col_in(i).dt_nurse_tea_req_hist_tstz;
            l_desc_topic_aux(i) := col_in(i).desc_topic_aux;
            l_id_not_order_reason(i) := col_in(i).id_not_order_reason;
        END LOOP;
        IF nvl(ignore_if_null_in, FALSE)
        THEN
            -- Set any columns to their current values
            -- if incoming value is NULL.
            -- Put WHEN clause on column-level triggers!
            FORALL i IN col_in.first .. col_in.last
                UPDATE nurse_tea_req_hist
                   SET id_nurse_tea_req           = nvl(l_id_nurse_tea_req(i), id_nurse_tea_req),
                       id_prof_req                = nvl(l_id_prof_req(i), id_prof_req),
                       id_episode                 = nvl(l_id_episode(i), id_episode),
                       req_header                 = nvl(l_req_header(i), req_header),
                       flg_status                 = nvl(l_flg_status(i), flg_status),
                       notes_req                  = nvl(l_notes_req(i), notes_req),
                       id_prof_close              = nvl(l_id_prof_close(i), id_prof_close),
                       notes_close                = nvl(l_notes_close(i), notes_close),
                       id_prof_exec               = nvl(l_id_prof_exec(i), id_prof_exec),
                       id_prev_episode            = nvl(l_id_prev_episode(i), id_prev_episode),
                       dt_nurse_tea_req_tstz      = nvl(l_dt_nurse_tea_req_tstz(i), dt_nurse_tea_req_tstz),
                       dt_begin_tstz              = nvl(l_dt_begin_tstz(i), dt_begin_tstz),
                       dt_close_tstz              = nvl(l_dt_close_tstz(i), dt_close_tstz),
                       id_visit                   = nvl(l_id_visit(i), id_visit),
                       id_patient                 = nvl(l_id_patient(i), id_patient),
                       status_flg                 = nvl(l_status_flg(i), status_flg),
                       status_icon                = nvl(l_status_icon(i), status_icon),
                       status_msg                 = nvl(l_status_msg(i), status_msg),
                       status_str                 = nvl(l_status_str(i), status_str),
                       create_user                = nvl(l_create_user(i), create_user),
                       create_time                = nvl(l_create_time(i), create_time),
                       create_institution         = nvl(l_create_institution(i), create_institution),
                       update_user                = nvl(l_update_user(i), update_user),
                       update_time                = nvl(l_update_time(i), update_time),
                       update_institution         = nvl(l_update_institution(i), update_institution),
                       id_cancel_reason           = nvl(l_id_cancel_reason(i), id_cancel_reason),
                       id_context                 = nvl(l_id_context(i), id_context),
                       flg_context                = nvl(l_flg_context(i), flg_context),
                       id_nurse_tea_topic         = nvl(l_id_nurse_tea_topic(i), id_nurse_tea_topic),
                       id_order_recurr_plan       = nvl(l_id_order_recurr_plan(i), id_order_recurr_plan),
                       description                = nvl(l_description(i), description),
                       flg_time                   = nvl(l_flg_time(i), flg_time),
                       dt_nurse_tea_req_hist_tstz = nvl(l_dt_nurse_tea_req_hist_tstz(i), dt_nurse_tea_req_hist_tstz),
                       desc_topic_aux             = nvl(l_desc_topic_aux(i), desc_topic_aux),
                       id_not_order_reason        = nvl(l_id_not_order_reason(i), id_not_order_reason)
                 WHERE id_nurse_tea_req_hist = l_id_nurse_tea_req_hist(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        ELSE
            FORALL i IN col_in.first .. col_in.last
                UPDATE nurse_tea_req_hist
                   SET id_nurse_tea_req           = l_id_nurse_tea_req(i),
                       id_prof_req                = l_id_prof_req(i),
                       id_episode                 = l_id_episode(i),
                       req_header                 = l_req_header(i),
                       flg_status                 = l_flg_status(i),
                       notes_req                  = l_notes_req(i),
                       id_prof_close              = l_id_prof_close(i),
                       notes_close                = l_notes_close(i),
                       id_prof_exec               = l_id_prof_exec(i),
                       id_prev_episode            = l_id_prev_episode(i),
                       dt_nurse_tea_req_tstz      = l_dt_nurse_tea_req_tstz(i),
                       dt_begin_tstz              = l_dt_begin_tstz(i),
                       dt_close_tstz              = l_dt_close_tstz(i),
                       id_visit                   = l_id_visit(i),
                       id_patient                 = l_id_patient(i),
                       status_flg                 = l_status_flg(i),
                       status_icon                = l_status_icon(i),
                       status_msg                 = l_status_msg(i),
                       status_str                 = l_status_str(i),
                       create_user                = l_create_user(i),
                       create_time                = l_create_time(i),
                       create_institution         = l_create_institution(i),
                       update_user                = l_update_user(i),
                       update_time                = l_update_time(i),
                       update_institution         = l_update_institution(i),
                       id_cancel_reason           = l_id_cancel_reason(i),
                       id_context                 = l_id_context(i),
                       flg_context                = l_flg_context(i),
                       id_nurse_tea_topic         = l_id_nurse_tea_topic(i),
                       id_order_recurr_plan       = l_id_order_recurr_plan(i),
                       description                = l_description(i),
                       flg_time                   = l_flg_time(i),
                       dt_nurse_tea_req_hist_tstz = l_dt_nurse_tea_req_hist_tstz(i),
                       desc_topic_aux             = l_desc_topic_aux(i),
                       id_not_order_reason        = l_id_not_order_reason(i)
                 WHERE id_nurse_tea_req_hist = l_id_nurse_tea_req_hist(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    END upd;

    PROCEDURE upd
    (
        col_in            IN nurse_tea_req_hist_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(col_in, ignore_if_null_in, handle_error_in, rows_out);
    END upd;

    FUNCTION dynupdstr
    (
        colname_in IN all_tab_columns.column_name%TYPE,
        where_in   IN VARCHAR2 := NULL
    )
    
     RETURN VARCHAR2 IS
    BEGIN
        RETURN 'BEGIN UPDATE NURSE_TEA_REQ_HIST
             SET ' || colname_in || ' = :value
           WHERE ' || nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;';
    END dynupdstr;

    FUNCTION dynupdstr_no_rows_out
    (
        colname_in IN all_tab_columns.column_name%TYPE,
        where_in   IN VARCHAR2 := NULL
    )
    
     RETURN VARCHAR2 IS
    BEGIN
        RETURN 'UPDATE NURSE_TEA_REQ_HIST
             SET ' || colname_in || ' = :value
           WHERE ' || nvl(where_in, '1=1');
    END dynupdstr_no_rows_out;

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN UPDATE NURSE_TEA_REQ_HIST set ' || colname_in || '=' || colname_in || ' + ' ||
                          nvl(increment_value_in, 1) || ' WHERE ' || nvl(where_in, '1=1') ||
                          ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    EXCEPTION
        WHEN dup_val_on_index THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner           all_constraints.owner%TYPE;
                    l_name            all_constraints.constraint_name%TYPE;
                    l_err_instance_id PLS_INTEGER;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'DUPLICATE-VALUE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'NURSE_TEA_REQ_HIST');
                END;
            END IF;
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'NURSE_TEA_REQ_HIST');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'NURSE_TEA_REQ_HIST');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
        WHEN e_null_column_value THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    v_errm    VARCHAR2(2000) := dbms_utility.format_error_stack;
                    dot1loc   INTEGER;
                    dot2loc   INTEGER;
                    parenloc  INTEGER;
                    c_owner   all_constraints.owner%TYPE;
                    c_tabname all_tables.table_name%TYPE;
                    c_colname all_tab_columns.column_name%TYPE;
                BEGIN
                    dot1loc   := instr(v_errm, '.', 1, 1);
                    dot2loc   := instr(v_errm, '.', 1, 2);
                    parenloc  := instr(v_errm, '(');
                    c_owner   := substr(v_errm, parenloc + 1, dot1loc - parenloc - 1);
                    c_tabname := substr(v_errm, dot1loc + 1, dot2loc - dot1loc - 1);
                    c_colname := substr(v_errm, dot2loc + 1, instr(v_errm, ')') - dot2loc - 1);
                
                    pk_alert_exceptions.raise_error(error_name_in => 'COLUMN-CANNOT-BE-NULL',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => c_owner,
                                                    name2_in      => 'TABLE_NAME',
                                                    value2_in     => c_tabname,
                                                    name3_in      => 'COLUMN_NAME',
                                                    value3_in     => c_colname);
                END;
            END IF;
    END increment_onecol;

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        EXECUTE IMMEDIATE 'UPDATE NURSE_TEA_REQ_HIST set ' || colname_in || '=' || colname_in || ' + ' ||
                          nvl(increment_value_in, 1) || ' WHERE ' || nvl(where_in, '1=1');
    EXCEPTION
        WHEN dup_val_on_index THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner           all_constraints.owner%TYPE;
                    l_name            all_constraints.constraint_name%TYPE;
                    l_err_instance_id PLS_INTEGER;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'DUPLICATE-VALUE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'NURSE_TEA_REQ_HIST');
                END;
            END IF;
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'NURSE_TEA_REQ_HIST');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'NURSE_TEA_REQ_HIST');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
        WHEN e_null_column_value THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    v_errm    VARCHAR2(2000) := dbms_utility.format_error_stack;
                    dot1loc   INTEGER;
                    dot2loc   INTEGER;
                    parenloc  INTEGER;
                    c_owner   all_constraints.owner%TYPE;
                    c_tabname all_tables.table_name%TYPE;
                    c_colname all_tab_columns.column_name%TYPE;
                BEGIN
                    dot1loc   := instr(v_errm, '.', 1, 1);
                    dot2loc   := instr(v_errm, '.', 1, 2);
                    parenloc  := instr(v_errm, '(');
                    c_owner   := substr(v_errm, parenloc + 1, dot1loc - parenloc - 1);
                    c_tabname := substr(v_errm, dot1loc + 1, dot2loc - dot1loc - 1);
                    c_colname := substr(v_errm, dot2loc + 1, instr(v_errm, ')') - dot2loc - 1);
                
                    pk_alert_exceptions.raise_error(error_name_in => 'COLUMN-CANNOT-BE-NULL',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => c_owner,
                                                    name2_in      => 'TABLE_NAME',
                                                    value2_in     => c_tabname,
                                                    name3_in      => 'COLUMN_NAME',
                                                    value3_in     => c_colname);
                END;
            END IF;
    END increment_onecol;

    -- Delete functionality

    PROCEDURE del
    (
        id_nurse_tea_req_hist_in IN nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM nurse_tea_req_hist
         WHERE id_nurse_tea_req_hist = id_nurse_tea_req_hist_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'NURSE_TEA_REQ_HIST');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'NURSE_TEA_REQ_HIST');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del;

    PROCEDURE del
    (
        id_nurse_tea_req_hist_in IN nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE,
        handle_error_in          IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
    
        del(id_nurse_tea_req_hist_in => id_nurse_tea_req_hist_in,
            handle_error_in          => handle_error_in,
            rows_out                 => rows_out);
    
    END del;

    -- Delete all rows for primary key column ID_NURSE_TEA_REQ_HIST
    PROCEDURE del_id_nurse_tea_req_hist
    (
        id_nurse_tea_req_hist_in IN nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM nurse_tea_req_hist
         WHERE id_nurse_tea_req_hist = id_nurse_tea_req_hist_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'NURSE_TEA_REQ_HIST');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'NURSE_TEA_REQ_HIST');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_id_nurse_tea_req_hist;

    -- Delete all rows for primary key column ID_NURSE_TEA_REQ_HIST
    PROCEDURE del_id_nurse_tea_req_hist
    (
        id_nurse_tea_req_hist_in IN nurse_tea_req_hist.id_nurse_tea_req_hist%TYPE,
        handle_error_in          IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_id_nurse_tea_req_hist(id_nurse_tea_req_hist_in => id_nurse_tea_req_hist_in,
                                  handle_error_in          => handle_error_in,
                                  rows_out                 => rows_out);
    END del_id_nurse_tea_req_hist;

    PROCEDURE del_ntrh_ntr_fk
    (
        id_nurse_tea_req_in IN nurse_tea_req_hist.id_nurse_tea_req%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM nurse_tea_req_hist
         WHERE id_nurse_tea_req = del_ntrh_ntr_fk.id_nurse_tea_req_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'NURSE_TEA_REQ_HIST');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'NURSE_TEA_REQ_HIST');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_ntrh_ntr_fk;

    PROCEDURE del_ntrh_ntr_fk
    (
        id_nurse_tea_req_in IN nurse_tea_req_hist.id_nurse_tea_req%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_ntrh_ntr_fk(id_nurse_tea_req_in => id_nurse_tea_req_in,
                        handle_error_in     => handle_error_in,
                        rows_out            => rows_out);
    END del_ntrh_ntr_fk;

    -- Deletions using dynamic SQL
    FUNCTION dyndelstr(where_in IN VARCHAR2) RETURN VARCHAR2 IS
    BEGIN
        IF where_in IS NULL
        THEN
            RETURN 'DELETE FROM NURSE_TEA_REQ_HIST';
        ELSE
            RETURN 'DELETE FROM NURSE_TEA_REQ_HIST WHERE ' || where_in;
        END IF;
    END dyndelstr;

    FUNCTION dyncoldelstr(colname_in IN all_tab_columns.column_name%TYPE) RETURN VARCHAR2 IS
    BEGIN
        RETURN dyndelstr(colname_in || ' = :value');
    END;

    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyndelstr(where_clause_in);
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'NURSE_TEA_REQ_HIST');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'NURSE_TEA_REQ_HIST');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by;

    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyndelstr(where_clause_in) ||
                          ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'NURSE_TEA_REQ_HIST');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'NURSE_TEA_REQ_HIST');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyncoldelstr(colname_in)
            USING colvalue_in;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'NURSE_TEA_REQ_HIST');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'NURSE_TEA_REQ_HIST');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyncoldelstr(colname_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING IN colvalue_in, OUT rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'NURSE_TEA_REQ_HIST');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'NURSE_TEA_REQ_HIST');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyncoldelstr(colname_in)
            USING colvalue_in;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'NURSE_TEA_REQ_HIST');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'NURSE_TEA_REQ_HIST');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyncoldelstr(colname_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING IN colvalue_in, OUT rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'NURSE_TEA_REQ_HIST');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'NURSE_TEA_REQ_HIST');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyncoldelstr(colname_in)
            USING colvalue_in;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'NURSE_TEA_REQ_HIST');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'NURSE_TEA_REQ_HIST');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyncoldelstr(colname_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING IN colvalue_in, OUT rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'NURSE_TEA_REQ_HIST');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'NURSE_TEA_REQ_HIST');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyncoldelstr(colname_in)
            USING colvalue_in;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'NURSE_TEA_REQ_HIST');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'NURSE_TEA_REQ_HIST');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyncoldelstr(colname_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING IN colvalue_in, OUT rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'NURSE_TEA_REQ_HIST');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'NURSE_TEA_REQ_HIST');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(nurse_tea_req_hist_inout IN OUT nurse_tea_req_hist%ROWTYPE) IS
    BEGIN
        nurse_tea_req_hist_inout.id_nurse_tea_req_hist      := NULL;
        nurse_tea_req_hist_inout.id_nurse_tea_req           := NULL;
        nurse_tea_req_hist_inout.id_prof_req                := NULL;
        nurse_tea_req_hist_inout.id_episode                 := NULL;
        nurse_tea_req_hist_inout.req_header                 := NULL;
        nurse_tea_req_hist_inout.flg_status                 := NULL;
        nurse_tea_req_hist_inout.notes_req                  := NULL;
        nurse_tea_req_hist_inout.id_prof_close              := NULL;
        nurse_tea_req_hist_inout.notes_close                := NULL;
        nurse_tea_req_hist_inout.id_prof_exec               := NULL;
        nurse_tea_req_hist_inout.id_prev_episode            := NULL;
        nurse_tea_req_hist_inout.dt_nurse_tea_req_tstz      := NULL;
        nurse_tea_req_hist_inout.dt_begin_tstz              := NULL;
        nurse_tea_req_hist_inout.dt_close_tstz              := NULL;
        nurse_tea_req_hist_inout.id_visit                   := NULL;
        nurse_tea_req_hist_inout.id_patient                 := NULL;
        nurse_tea_req_hist_inout.status_flg                 := NULL;
        nurse_tea_req_hist_inout.status_icon                := NULL;
        nurse_tea_req_hist_inout.status_msg                 := NULL;
        nurse_tea_req_hist_inout.status_str                 := NULL;
        nurse_tea_req_hist_inout.create_user                := NULL;
        nurse_tea_req_hist_inout.create_time                := NULL;
        nurse_tea_req_hist_inout.create_institution         := NULL;
        nurse_tea_req_hist_inout.update_user                := NULL;
        nurse_tea_req_hist_inout.update_time                := NULL;
        nurse_tea_req_hist_inout.update_institution         := NULL;
        nurse_tea_req_hist_inout.id_cancel_reason           := NULL;
        nurse_tea_req_hist_inout.id_context                 := NULL;
        nurse_tea_req_hist_inout.flg_context                := NULL;
        nurse_tea_req_hist_inout.id_nurse_tea_topic         := NULL;
        nurse_tea_req_hist_inout.id_order_recurr_plan       := NULL;
        nurse_tea_req_hist_inout.description                := NULL;
        nurse_tea_req_hist_inout.flg_time                   := NULL;
        nurse_tea_req_hist_inout.dt_nurse_tea_req_hist_tstz := NULL;
        nurse_tea_req_hist_inout.desc_topic_aux             := NULL;
        nurse_tea_req_hist_inout.id_not_order_reason        := NULL;
    END initrec;

    FUNCTION initrec RETURN nurse_tea_req_hist%ROWTYPE IS
        l_nurse_tea_req_hist nurse_tea_req_hist%ROWTYPE;
    BEGIN
        RETURN l_nurse_tea_req_hist;
    END initrec;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN nurse_tea_req_hist_tc IS
        data nurse_tea_req_hist_tc;
    BEGIN
        SELECT * BULK COLLECT
          INTO data
          FROM nurse_tea_req_hist
         WHERE ROWID IN (SELECT /*+opt_estimate(table,t,scale_rows=0.0000001))*/
                          *
                           FROM TABLE(rows_in) t);
        RETURN data;
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'get_data_rowid');
    END get_data_rowid;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN nurse_tea_req_hist_tc IS
        PRAGMA AUTONOMOUS_TRANSACTION;
        data nurse_tea_req_hist_tc;
    BEGIN
        data := get_data_rowid(rows_in);
        COMMIT;
        RETURN data;
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'get_data_rowid');
            ROLLBACK;
    END get_data_rowid_pat;

BEGIN
    NULL;
END ts_nurse_tea_req_hist;
/
