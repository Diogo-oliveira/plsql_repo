/*-- Last Change Revision: $Rev: 2028415 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:45:38 +0100 (ter, 02 ago 2022) $*/
CREATE OR REPLACE PACKAGE BODY ts_vital_sign_read
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2021-06-30 10:42:38
| Created By: ALERT
*/
 IS

    e_null_column_value EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_null_column_value, -1400);

    e_existing_fky_reference EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_existing_fky_reference, -2266);

    e_check_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_check_constraint_failure, -2290);

    e_no_parent_key EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_no_parent_key, -2291);

    e_child_record_found EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_child_record_found, -2292);

    e_forall_error EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_forall_error, -24381);

    -- Defined for backward compatibilty.
    e_integ_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_integ_constraint_failure, -2291);

    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN vital_sign_read.id_vital_sign_read%TYPE IS
        retval vital_sign_read.id_vital_sign_read%TYPE;
    BEGIN
        IF sequence_in IS NULL
        THEN
            retval := seq_vital_sign_read.nextval;
        ELSE
            EXECUTE IMMEDIATE 'SELECT ' || sequence_in || '.NEXTVAL FROM dual'
                INTO retval;
        END IF;
        RETURN retval;
    END next_key;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_vital_sign_in             IN vital_sign_read.id_vital_sign%TYPE DEFAULT NULL,
        id_vital_sign_desc_in        IN vital_sign_read.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_episode_in                IN vital_sign_read.id_episode%TYPE DEFAULT NULL,
        value_in                     IN vital_sign_read.value%TYPE DEFAULT NULL,
        flg_state_in                 IN vital_sign_read.flg_state%TYPE DEFAULT NULL,
        id_prof_read_in              IN vital_sign_read.id_prof_read%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN vital_sign_read.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN vital_sign_read.notes_cancel%TYPE DEFAULT NULL,
        id_patient_in                IN vital_sign_read.id_patient%TYPE DEFAULT NULL,
        id_monitorization_vs_plan_in IN vital_sign_read.id_monitorization_vs_plan%TYPE DEFAULT NULL,
        id_institution_read_in       IN vital_sign_read.id_institution_read%TYPE DEFAULT NULL,
        id_software_read_in          IN vital_sign_read.id_software_read%TYPE DEFAULT NULL,
        id_institution_cancel_in     IN vital_sign_read.id_institution_cancel%TYPE DEFAULT NULL,
        id_software_cancel_in        IN vital_sign_read.id_software_cancel%TYPE DEFAULT NULL,
        id_vital_sign_notes_in       IN vital_sign_read.id_vital_sign_notes%TYPE DEFAULT NULL,
        id_epis_triage_in            IN vital_sign_read.id_epis_triage%TYPE DEFAULT NULL,
        id_unit_measure_in           IN vital_sign_read.id_unit_measure%TYPE DEFAULT NULL,
        flg_most_freq_in             IN vital_sign_read.flg_most_freq%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_in   IN vital_sign_read.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN vital_sign_read.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_registry_in               IN vital_sign_read.dt_registry%TYPE DEFAULT NULL,
        id_vs_scales_element_in      IN vital_sign_read.id_vs_scales_element%TYPE DEFAULT NULL,
        create_user_in               IN vital_sign_read.create_user%TYPE DEFAULT NULL,
        create_time_in               IN vital_sign_read.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN vital_sign_read.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN vital_sign_read.update_user%TYPE DEFAULT NULL,
        update_time_in               IN vital_sign_read.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN vital_sign_read.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN vital_sign_read.id_cancel_reason%TYPE DEFAULT NULL,
        id_unit_measure_sel_in       IN vital_sign_read.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_edit_reason_in            IN vital_sign_read.id_edit_reason%TYPE DEFAULT NULL,
        value_high_in                IN vital_sign_read.value_high%TYPE DEFAULT NULL,
        value_low_in                 IN vital_sign_read.value_low%TYPE DEFAULT NULL,
        id_epis_documentation_in     IN vital_sign_read.id_epis_documentation%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
        l_pky vital_sign_read.id_vital_sign_read%TYPE := next_key;
    BEGIN
        ins(id_vital_sign_read_in        => l_pky,
            id_vital_sign_in             => id_vital_sign_in,
            id_vital_sign_desc_in        => id_vital_sign_desc_in,
            id_episode_in                => id_episode_in,
            value_in                     => value_in,
            flg_state_in                 => flg_state_in,
            id_prof_read_in              => id_prof_read_in,
            id_prof_cancel_in            => id_prof_cancel_in,
            notes_cancel_in              => notes_cancel_in,
            id_patient_in                => id_patient_in,
            id_monitorization_vs_plan_in => id_monitorization_vs_plan_in,
            id_institution_read_in       => id_institution_read_in,
            id_software_read_in          => id_software_read_in,
            id_institution_cancel_in     => id_institution_cancel_in,
            id_software_cancel_in        => id_software_cancel_in,
            id_vital_sign_notes_in       => id_vital_sign_notes_in,
            id_epis_triage_in            => id_epis_triage_in,
            id_unit_measure_in           => id_unit_measure_in,
            flg_most_freq_in             => flg_most_freq_in,
            dt_vital_sign_read_tstz_in   => dt_vital_sign_read_tstz_in,
            dt_cancel_tstz_in            => dt_cancel_tstz_in,
            dt_registry_in               => dt_registry_in,
            id_vs_scales_element_in      => id_vs_scales_element_in,
            create_user_in               => create_user_in,
            create_time_in               => create_time_in,
            create_institution_in        => create_institution_in,
            update_user_in               => update_user_in,
            update_time_in               => update_time_in,
            update_institution_in        => update_institution_in,
            id_cancel_reason_in          => id_cancel_reason_in,
            id_unit_measure_sel_in       => id_unit_measure_sel_in,
            id_edit_reason_in            => id_edit_reason_in,
            value_high_in                => value_high_in,
            value_low_in                 => value_low_in,
            id_epis_documentation_in     => id_epis_documentation_in,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
    END ins;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_vital_sign_in             IN vital_sign_read.id_vital_sign%TYPE DEFAULT NULL,
        id_vital_sign_desc_in        IN vital_sign_read.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_episode_in                IN vital_sign_read.id_episode%TYPE DEFAULT NULL,
        value_in                     IN vital_sign_read.value%TYPE DEFAULT NULL,
        flg_state_in                 IN vital_sign_read.flg_state%TYPE DEFAULT NULL,
        id_prof_read_in              IN vital_sign_read.id_prof_read%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN vital_sign_read.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN vital_sign_read.notes_cancel%TYPE DEFAULT NULL,
        id_patient_in                IN vital_sign_read.id_patient%TYPE DEFAULT NULL,
        id_monitorization_vs_plan_in IN vital_sign_read.id_monitorization_vs_plan%TYPE DEFAULT NULL,
        id_institution_read_in       IN vital_sign_read.id_institution_read%TYPE DEFAULT NULL,
        id_software_read_in          IN vital_sign_read.id_software_read%TYPE DEFAULT NULL,
        id_institution_cancel_in     IN vital_sign_read.id_institution_cancel%TYPE DEFAULT NULL,
        id_software_cancel_in        IN vital_sign_read.id_software_cancel%TYPE DEFAULT NULL,
        id_vital_sign_notes_in       IN vital_sign_read.id_vital_sign_notes%TYPE DEFAULT NULL,
        id_epis_triage_in            IN vital_sign_read.id_epis_triage%TYPE DEFAULT NULL,
        id_unit_measure_in           IN vital_sign_read.id_unit_measure%TYPE DEFAULT NULL,
        flg_most_freq_in             IN vital_sign_read.flg_most_freq%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_in   IN vital_sign_read.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN vital_sign_read.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_registry_in               IN vital_sign_read.dt_registry%TYPE DEFAULT NULL,
        id_vs_scales_element_in      IN vital_sign_read.id_vs_scales_element%TYPE DEFAULT NULL,
        create_user_in               IN vital_sign_read.create_user%TYPE DEFAULT NULL,
        create_time_in               IN vital_sign_read.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN vital_sign_read.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN vital_sign_read.update_user%TYPE DEFAULT NULL,
        update_time_in               IN vital_sign_read.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN vital_sign_read.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN vital_sign_read.id_cancel_reason%TYPE DEFAULT NULL,
        id_unit_measure_sel_in       IN vital_sign_read.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_edit_reason_in            IN vital_sign_read.id_edit_reason%TYPE DEFAULT NULL,
        value_high_in                IN vital_sign_read.value_high%TYPE DEFAULT NULL,
        value_low_in                 IN vital_sign_read.value_low%TYPE DEFAULT NULL,
        id_epis_documentation_in     IN vital_sign_read.id_epis_documentation%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_vital_sign_in             => id_vital_sign_in,
            id_vital_sign_desc_in        => id_vital_sign_desc_in,
            id_episode_in                => id_episode_in,
            value_in                     => value_in,
            flg_state_in                 => flg_state_in,
            id_prof_read_in              => id_prof_read_in,
            id_prof_cancel_in            => id_prof_cancel_in,
            notes_cancel_in              => notes_cancel_in,
            id_patient_in                => id_patient_in,
            id_monitorization_vs_plan_in => id_monitorization_vs_plan_in,
            id_institution_read_in       => id_institution_read_in,
            id_software_read_in          => id_software_read_in,
            id_institution_cancel_in     => id_institution_cancel_in,
            id_software_cancel_in        => id_software_cancel_in,
            id_vital_sign_notes_in       => id_vital_sign_notes_in,
            id_epis_triage_in            => id_epis_triage_in,
            id_unit_measure_in           => id_unit_measure_in,
            flg_most_freq_in             => flg_most_freq_in,
            dt_vital_sign_read_tstz_in   => dt_vital_sign_read_tstz_in,
            dt_cancel_tstz_in            => dt_cancel_tstz_in,
            dt_registry_in               => dt_registry_in,
            id_vs_scales_element_in      => id_vs_scales_element_in,
            create_user_in               => create_user_in,
            create_time_in               => create_time_in,
            create_institution_in        => create_institution_in,
            update_user_in               => update_user_in,
            update_time_in               => update_time_in,
            update_institution_in        => update_institution_in,
            id_cancel_reason_in          => id_cancel_reason_in,
            id_unit_measure_sel_in       => id_unit_measure_sel_in,
            id_edit_reason_in            => id_edit_reason_in,
            value_high_in                => value_high_in,
            value_low_in                 => value_low_in,
            id_epis_documentation_in     => id_epis_documentation_in,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
    END ins;

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_vital_sign_in             IN vital_sign_read.id_vital_sign%TYPE DEFAULT NULL,
        id_vital_sign_desc_in        IN vital_sign_read.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_episode_in                IN vital_sign_read.id_episode%TYPE DEFAULT NULL,
        value_in                     IN vital_sign_read.value%TYPE DEFAULT NULL,
        flg_state_in                 IN vital_sign_read.flg_state%TYPE DEFAULT NULL,
        id_prof_read_in              IN vital_sign_read.id_prof_read%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN vital_sign_read.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN vital_sign_read.notes_cancel%TYPE DEFAULT NULL,
        id_patient_in                IN vital_sign_read.id_patient%TYPE DEFAULT NULL,
        id_monitorization_vs_plan_in IN vital_sign_read.id_monitorization_vs_plan%TYPE DEFAULT NULL,
        id_institution_read_in       IN vital_sign_read.id_institution_read%TYPE DEFAULT NULL,
        id_software_read_in          IN vital_sign_read.id_software_read%TYPE DEFAULT NULL,
        id_institution_cancel_in     IN vital_sign_read.id_institution_cancel%TYPE DEFAULT NULL,
        id_software_cancel_in        IN vital_sign_read.id_software_cancel%TYPE DEFAULT NULL,
        id_vital_sign_notes_in       IN vital_sign_read.id_vital_sign_notes%TYPE DEFAULT NULL,
        id_epis_triage_in            IN vital_sign_read.id_epis_triage%TYPE DEFAULT NULL,
        id_unit_measure_in           IN vital_sign_read.id_unit_measure%TYPE DEFAULT NULL,
        flg_most_freq_in             IN vital_sign_read.flg_most_freq%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_in   IN vital_sign_read.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN vital_sign_read.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_registry_in               IN vital_sign_read.dt_registry%TYPE DEFAULT NULL,
        id_vs_scales_element_in      IN vital_sign_read.id_vs_scales_element%TYPE DEFAULT NULL,
        create_user_in               IN vital_sign_read.create_user%TYPE DEFAULT NULL,
        create_time_in               IN vital_sign_read.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN vital_sign_read.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN vital_sign_read.update_user%TYPE DEFAULT NULL,
        update_time_in               IN vital_sign_read.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN vital_sign_read.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN vital_sign_read.id_cancel_reason%TYPE DEFAULT NULL,
        id_unit_measure_sel_in       IN vital_sign_read.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_edit_reason_in            IN vital_sign_read.id_edit_reason%TYPE DEFAULT NULL,
        value_high_in                IN vital_sign_read.value_high%TYPE DEFAULT NULL,
        value_low_in                 IN vital_sign_read.value_low%TYPE DEFAULT NULL,
        id_epis_documentation_in     IN vital_sign_read.id_epis_documentation%TYPE DEFAULT NULL,
        id_vital_sign_read_out       IN OUT vital_sign_read.id_vital_sign_read%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
        l_pky vital_sign_read.id_vital_sign_read%TYPE := next_key;
    BEGIN
        ins(id_vital_sign_read_in        => l_pky,
            id_vital_sign_in             => id_vital_sign_in,
            id_vital_sign_desc_in        => id_vital_sign_desc_in,
            id_episode_in                => id_episode_in,
            value_in                     => value_in,
            flg_state_in                 => flg_state_in,
            id_prof_read_in              => id_prof_read_in,
            id_prof_cancel_in            => id_prof_cancel_in,
            notes_cancel_in              => notes_cancel_in,
            id_patient_in                => id_patient_in,
            id_monitorization_vs_plan_in => id_monitorization_vs_plan_in,
            id_institution_read_in       => id_institution_read_in,
            id_software_read_in          => id_software_read_in,
            id_institution_cancel_in     => id_institution_cancel_in,
            id_software_cancel_in        => id_software_cancel_in,
            id_vital_sign_notes_in       => id_vital_sign_notes_in,
            id_epis_triage_in            => id_epis_triage_in,
            id_unit_measure_in           => id_unit_measure_in,
            flg_most_freq_in             => flg_most_freq_in,
            dt_vital_sign_read_tstz_in   => dt_vital_sign_read_tstz_in,
            dt_cancel_tstz_in            => dt_cancel_tstz_in,
            dt_registry_in               => dt_registry_in,
            id_vs_scales_element_in      => id_vs_scales_element_in,
            create_user_in               => create_user_in,
            create_time_in               => create_time_in,
            create_institution_in        => create_institution_in,
            update_user_in               => update_user_in,
            update_time_in               => update_time_in,
            update_institution_in        => update_institution_in,
            id_cancel_reason_in          => id_cancel_reason_in,
            id_unit_measure_sel_in       => id_unit_measure_sel_in,
            id_edit_reason_in            => id_edit_reason_in,
            value_high_in                => value_high_in,
            value_low_in                 => value_low_in,
            id_epis_documentation_in     => id_epis_documentation_in,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
        id_vital_sign_read_out := l_pky;
    END ins;

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_vital_sign_in             IN vital_sign_read.id_vital_sign%TYPE DEFAULT NULL,
        id_vital_sign_desc_in        IN vital_sign_read.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_episode_in                IN vital_sign_read.id_episode%TYPE DEFAULT NULL,
        value_in                     IN vital_sign_read.value%TYPE DEFAULT NULL,
        flg_state_in                 IN vital_sign_read.flg_state%TYPE DEFAULT NULL,
        id_prof_read_in              IN vital_sign_read.id_prof_read%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN vital_sign_read.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN vital_sign_read.notes_cancel%TYPE DEFAULT NULL,
        id_patient_in                IN vital_sign_read.id_patient%TYPE DEFAULT NULL,
        id_monitorization_vs_plan_in IN vital_sign_read.id_monitorization_vs_plan%TYPE DEFAULT NULL,
        id_institution_read_in       IN vital_sign_read.id_institution_read%TYPE DEFAULT NULL,
        id_software_read_in          IN vital_sign_read.id_software_read%TYPE DEFAULT NULL,
        id_institution_cancel_in     IN vital_sign_read.id_institution_cancel%TYPE DEFAULT NULL,
        id_software_cancel_in        IN vital_sign_read.id_software_cancel%TYPE DEFAULT NULL,
        id_vital_sign_notes_in       IN vital_sign_read.id_vital_sign_notes%TYPE DEFAULT NULL,
        id_epis_triage_in            IN vital_sign_read.id_epis_triage%TYPE DEFAULT NULL,
        id_unit_measure_in           IN vital_sign_read.id_unit_measure%TYPE DEFAULT NULL,
        flg_most_freq_in             IN vital_sign_read.flg_most_freq%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_in   IN vital_sign_read.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN vital_sign_read.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_registry_in               IN vital_sign_read.dt_registry%TYPE DEFAULT NULL,
        id_vs_scales_element_in      IN vital_sign_read.id_vs_scales_element%TYPE DEFAULT NULL,
        create_user_in               IN vital_sign_read.create_user%TYPE DEFAULT NULL,
        create_time_in               IN vital_sign_read.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN vital_sign_read.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN vital_sign_read.update_user%TYPE DEFAULT NULL,
        update_time_in               IN vital_sign_read.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN vital_sign_read.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN vital_sign_read.id_cancel_reason%TYPE DEFAULT NULL,
        id_unit_measure_sel_in       IN vital_sign_read.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_edit_reason_in            IN vital_sign_read.id_edit_reason%TYPE DEFAULT NULL,
        value_high_in                IN vital_sign_read.value_high%TYPE DEFAULT NULL,
        value_low_in                 IN vital_sign_read.value_low%TYPE DEFAULT NULL,
        id_epis_documentation_in     IN vital_sign_read.id_epis_documentation%TYPE DEFAULT NULL,
        id_vital_sign_read_out       IN OUT vital_sign_read.id_vital_sign_read%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_vital_sign_in             => id_vital_sign_in,
            id_vital_sign_desc_in        => id_vital_sign_desc_in,
            id_episode_in                => id_episode_in,
            value_in                     => value_in,
            flg_state_in                 => flg_state_in,
            id_prof_read_in              => id_prof_read_in,
            id_prof_cancel_in            => id_prof_cancel_in,
            notes_cancel_in              => notes_cancel_in,
            id_patient_in                => id_patient_in,
            id_monitorization_vs_plan_in => id_monitorization_vs_plan_in,
            id_institution_read_in       => id_institution_read_in,
            id_software_read_in          => id_software_read_in,
            id_institution_cancel_in     => id_institution_cancel_in,
            id_software_cancel_in        => id_software_cancel_in,
            id_vital_sign_notes_in       => id_vital_sign_notes_in,
            id_epis_triage_in            => id_epis_triage_in,
            id_unit_measure_in           => id_unit_measure_in,
            flg_most_freq_in             => flg_most_freq_in,
            dt_vital_sign_read_tstz_in   => dt_vital_sign_read_tstz_in,
            dt_cancel_tstz_in            => dt_cancel_tstz_in,
            dt_registry_in               => dt_registry_in,
            id_vs_scales_element_in      => id_vs_scales_element_in,
            create_user_in               => create_user_in,
            create_time_in               => create_time_in,
            create_institution_in        => create_institution_in,
            update_user_in               => update_user_in,
            update_time_in               => update_time_in,
            update_institution_in        => update_institution_in,
            id_cancel_reason_in          => id_cancel_reason_in,
            id_unit_measure_sel_in       => id_unit_measure_sel_in,
            id_edit_reason_in            => id_edit_reason_in,
            value_high_in                => value_high_in,
            value_low_in                 => value_low_in,
            id_epis_documentation_in     => id_epis_documentation_in,
            id_vital_sign_read_out       => id_vital_sign_read_out,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
    END ins;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_vital_sign_in             IN vital_sign_read.id_vital_sign%TYPE DEFAULT NULL,
        id_vital_sign_desc_in        IN vital_sign_read.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_episode_in                IN vital_sign_read.id_episode%TYPE DEFAULT NULL,
        value_in                     IN vital_sign_read.value%TYPE DEFAULT NULL,
        flg_state_in                 IN vital_sign_read.flg_state%TYPE DEFAULT NULL,
        id_prof_read_in              IN vital_sign_read.id_prof_read%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN vital_sign_read.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN vital_sign_read.notes_cancel%TYPE DEFAULT NULL,
        id_patient_in                IN vital_sign_read.id_patient%TYPE DEFAULT NULL,
        id_monitorization_vs_plan_in IN vital_sign_read.id_monitorization_vs_plan%TYPE DEFAULT NULL,
        id_institution_read_in       IN vital_sign_read.id_institution_read%TYPE DEFAULT NULL,
        id_software_read_in          IN vital_sign_read.id_software_read%TYPE DEFAULT NULL,
        id_institution_cancel_in     IN vital_sign_read.id_institution_cancel%TYPE DEFAULT NULL,
        id_software_cancel_in        IN vital_sign_read.id_software_cancel%TYPE DEFAULT NULL,
        id_vital_sign_notes_in       IN vital_sign_read.id_vital_sign_notes%TYPE DEFAULT NULL,
        id_epis_triage_in            IN vital_sign_read.id_epis_triage%TYPE DEFAULT NULL,
        id_unit_measure_in           IN vital_sign_read.id_unit_measure%TYPE DEFAULT NULL,
        flg_most_freq_in             IN vital_sign_read.flg_most_freq%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_in   IN vital_sign_read.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN vital_sign_read.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_registry_in               IN vital_sign_read.dt_registry%TYPE DEFAULT NULL,
        id_vs_scales_element_in      IN vital_sign_read.id_vs_scales_element%TYPE DEFAULT NULL,
        create_user_in               IN vital_sign_read.create_user%TYPE DEFAULT NULL,
        create_time_in               IN vital_sign_read.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN vital_sign_read.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN vital_sign_read.update_user%TYPE DEFAULT NULL,
        update_time_in               IN vital_sign_read.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN vital_sign_read.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN vital_sign_read.id_cancel_reason%TYPE DEFAULT NULL,
        id_unit_measure_sel_in       IN vital_sign_read.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_edit_reason_in            IN vital_sign_read.id_edit_reason%TYPE DEFAULT NULL,
        value_high_in                IN vital_sign_read.value_high%TYPE DEFAULT NULL,
        value_low_in                 IN vital_sign_read.value_low%TYPE DEFAULT NULL,
        id_epis_documentation_in     IN vital_sign_read.id_epis_documentation%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) RETURN vital_sign_read.id_vital_sign_read%TYPE IS
        l_pky vital_sign_read.id_vital_sign_read%TYPE := next_key;
    BEGIN
        ins(id_vital_sign_read_in        => l_pky,
            id_vital_sign_in             => id_vital_sign_in,
            id_vital_sign_desc_in        => id_vital_sign_desc_in,
            id_episode_in                => id_episode_in,
            value_in                     => value_in,
            flg_state_in                 => flg_state_in,
            id_prof_read_in              => id_prof_read_in,
            id_prof_cancel_in            => id_prof_cancel_in,
            notes_cancel_in              => notes_cancel_in,
            id_patient_in                => id_patient_in,
            id_monitorization_vs_plan_in => id_monitorization_vs_plan_in,
            id_institution_read_in       => id_institution_read_in,
            id_software_read_in          => id_software_read_in,
            id_institution_cancel_in     => id_institution_cancel_in,
            id_software_cancel_in        => id_software_cancel_in,
            id_vital_sign_notes_in       => id_vital_sign_notes_in,
            id_epis_triage_in            => id_epis_triage_in,
            id_unit_measure_in           => id_unit_measure_in,
            flg_most_freq_in             => flg_most_freq_in,
            dt_vital_sign_read_tstz_in   => dt_vital_sign_read_tstz_in,
            dt_cancel_tstz_in            => dt_cancel_tstz_in,
            dt_registry_in               => dt_registry_in,
            id_vs_scales_element_in      => id_vs_scales_element_in,
            create_user_in               => create_user_in,
            create_time_in               => create_time_in,
            create_institution_in        => create_institution_in,
            update_user_in               => update_user_in,
            update_time_in               => update_time_in,
            update_institution_in        => update_institution_in,
            id_cancel_reason_in          => id_cancel_reason_in,
            id_unit_measure_sel_in       => id_unit_measure_sel_in,
            id_edit_reason_in            => id_edit_reason_in,
            value_high_in                => value_high_in,
            value_low_in                 => value_low_in,
            id_epis_documentation_in     => id_epis_documentation_in,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
        RETURN l_pky;
    END ins;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_vital_sign_in             IN vital_sign_read.id_vital_sign%TYPE DEFAULT NULL,
        id_vital_sign_desc_in        IN vital_sign_read.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_episode_in                IN vital_sign_read.id_episode%TYPE DEFAULT NULL,
        value_in                     IN vital_sign_read.value%TYPE DEFAULT NULL,
        flg_state_in                 IN vital_sign_read.flg_state%TYPE DEFAULT NULL,
        id_prof_read_in              IN vital_sign_read.id_prof_read%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN vital_sign_read.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN vital_sign_read.notes_cancel%TYPE DEFAULT NULL,
        id_patient_in                IN vital_sign_read.id_patient%TYPE DEFAULT NULL,
        id_monitorization_vs_plan_in IN vital_sign_read.id_monitorization_vs_plan%TYPE DEFAULT NULL,
        id_institution_read_in       IN vital_sign_read.id_institution_read%TYPE DEFAULT NULL,
        id_software_read_in          IN vital_sign_read.id_software_read%TYPE DEFAULT NULL,
        id_institution_cancel_in     IN vital_sign_read.id_institution_cancel%TYPE DEFAULT NULL,
        id_software_cancel_in        IN vital_sign_read.id_software_cancel%TYPE DEFAULT NULL,
        id_vital_sign_notes_in       IN vital_sign_read.id_vital_sign_notes%TYPE DEFAULT NULL,
        id_epis_triage_in            IN vital_sign_read.id_epis_triage%TYPE DEFAULT NULL,
        id_unit_measure_in           IN vital_sign_read.id_unit_measure%TYPE DEFAULT NULL,
        flg_most_freq_in             IN vital_sign_read.flg_most_freq%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_in   IN vital_sign_read.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN vital_sign_read.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_registry_in               IN vital_sign_read.dt_registry%TYPE DEFAULT NULL,
        id_vs_scales_element_in      IN vital_sign_read.id_vs_scales_element%TYPE DEFAULT NULL,
        create_user_in               IN vital_sign_read.create_user%TYPE DEFAULT NULL,
        create_time_in               IN vital_sign_read.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN vital_sign_read.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN vital_sign_read.update_user%TYPE DEFAULT NULL,
        update_time_in               IN vital_sign_read.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN vital_sign_read.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN vital_sign_read.id_cancel_reason%TYPE DEFAULT NULL,
        id_unit_measure_sel_in       IN vital_sign_read.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_edit_reason_in            IN vital_sign_read.id_edit_reason%TYPE DEFAULT NULL,
        value_high_in                IN vital_sign_read.value_high%TYPE DEFAULT NULL,
        value_low_in                 IN vital_sign_read.value_low%TYPE DEFAULT NULL,
        id_epis_documentation_in     IN vital_sign_read.id_epis_documentation%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := FALSE
    ) RETURN vital_sign_read.id_vital_sign_read%TYPE IS
        l_pky    vital_sign_read.id_vital_sign_read%TYPE := next_key;
        rows_out table_varchar;
    BEGIN
        ins(id_vital_sign_read_in        => l_pky,
            id_vital_sign_in             => id_vital_sign_in,
            id_vital_sign_desc_in        => id_vital_sign_desc_in,
            id_episode_in                => id_episode_in,
            value_in                     => value_in,
            flg_state_in                 => flg_state_in,
            id_prof_read_in              => id_prof_read_in,
            id_prof_cancel_in            => id_prof_cancel_in,
            notes_cancel_in              => notes_cancel_in,
            id_patient_in                => id_patient_in,
            id_monitorization_vs_plan_in => id_monitorization_vs_plan_in,
            id_institution_read_in       => id_institution_read_in,
            id_software_read_in          => id_software_read_in,
            id_institution_cancel_in     => id_institution_cancel_in,
            id_software_cancel_in        => id_software_cancel_in,
            id_vital_sign_notes_in       => id_vital_sign_notes_in,
            id_epis_triage_in            => id_epis_triage_in,
            id_unit_measure_in           => id_unit_measure_in,
            flg_most_freq_in             => flg_most_freq_in,
            dt_vital_sign_read_tstz_in   => dt_vital_sign_read_tstz_in,
            dt_cancel_tstz_in            => dt_cancel_tstz_in,
            dt_registry_in               => dt_registry_in,
            id_vs_scales_element_in      => id_vs_scales_element_in,
            create_user_in               => create_user_in,
            create_time_in               => create_time_in,
            create_institution_in        => create_institution_in,
            update_user_in               => update_user_in,
            update_time_in               => update_time_in,
            update_institution_in        => update_institution_in,
            id_cancel_reason_in          => id_cancel_reason_in,
            id_unit_measure_sel_in       => id_unit_measure_sel_in,
            id_edit_reason_in            => id_edit_reason_in,
            value_high_in                => value_high_in,
            value_low_in                 => value_low_in,
            id_epis_documentation_in     => id_epis_documentation_in,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
        RETURN l_pky;
    END ins;

    PROCEDURE ins
    (
        id_vital_sign_read_in        IN vital_sign_read.id_vital_sign_read%TYPE,
        id_vital_sign_in             IN vital_sign_read.id_vital_sign%TYPE DEFAULT NULL,
        id_vital_sign_desc_in        IN vital_sign_read.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_episode_in                IN vital_sign_read.id_episode%TYPE DEFAULT NULL,
        value_in                     IN vital_sign_read.value%TYPE DEFAULT NULL,
        flg_state_in                 IN vital_sign_read.flg_state%TYPE DEFAULT NULL,
        id_prof_read_in              IN vital_sign_read.id_prof_read%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN vital_sign_read.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN vital_sign_read.notes_cancel%TYPE DEFAULT NULL,
        id_patient_in                IN vital_sign_read.id_patient%TYPE DEFAULT NULL,
        id_monitorization_vs_plan_in IN vital_sign_read.id_monitorization_vs_plan%TYPE DEFAULT NULL,
        id_institution_read_in       IN vital_sign_read.id_institution_read%TYPE DEFAULT NULL,
        id_software_read_in          IN vital_sign_read.id_software_read%TYPE DEFAULT NULL,
        id_institution_cancel_in     IN vital_sign_read.id_institution_cancel%TYPE DEFAULT NULL,
        id_software_cancel_in        IN vital_sign_read.id_software_cancel%TYPE DEFAULT NULL,
        id_vital_sign_notes_in       IN vital_sign_read.id_vital_sign_notes%TYPE DEFAULT NULL,
        id_epis_triage_in            IN vital_sign_read.id_epis_triage%TYPE DEFAULT NULL,
        id_unit_measure_in           IN vital_sign_read.id_unit_measure%TYPE DEFAULT NULL,
        flg_most_freq_in             IN vital_sign_read.flg_most_freq%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_in   IN vital_sign_read.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN vital_sign_read.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_registry_in               IN vital_sign_read.dt_registry%TYPE DEFAULT NULL,
        id_vs_scales_element_in      IN vital_sign_read.id_vs_scales_element%TYPE DEFAULT NULL,
        create_user_in               IN vital_sign_read.create_user%TYPE DEFAULT NULL,
        create_time_in               IN vital_sign_read.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN vital_sign_read.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN vital_sign_read.update_user%TYPE DEFAULT NULL,
        update_time_in               IN vital_sign_read.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN vital_sign_read.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN vital_sign_read.id_cancel_reason%TYPE DEFAULT NULL,
        id_unit_measure_sel_in       IN vital_sign_read.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_edit_reason_in            IN vital_sign_read.id_edit_reason%TYPE DEFAULT NULL,
        value_high_in                IN vital_sign_read.value_high%TYPE DEFAULT NULL,
        value_low_in                 IN vital_sign_read.value_low%TYPE DEFAULT NULL,
        id_epis_documentation_in     IN vital_sign_read.id_epis_documentation%TYPE DEFAULT NULL,
        handle_error_in              IN BOOLEAN := FALSE,
        rows_out                     OUT table_varchar
    ) IS
    BEGIN
        INSERT INTO vital_sign_read
            (id_vital_sign_read,
             id_vital_sign,
             id_vital_sign_desc,
             id_episode,
             VALUE,
             flg_state,
             id_prof_read,
             id_prof_cancel,
             notes_cancel,
             id_patient,
             id_monitorization_vs_plan,
             id_institution_read,
             id_software_read,
             id_institution_cancel,
             id_software_cancel,
             id_vital_sign_notes,
             id_epis_triage,
             id_unit_measure,
             flg_most_freq,
             dt_vital_sign_read_tstz,
             dt_cancel_tstz,
             dt_registry,
             id_vs_scales_element,
             create_user,
             create_time,
             create_institution,
             update_user,
             update_time,
             update_institution,
             id_cancel_reason,
             id_unit_measure_sel,
             id_edit_reason,
             value_high,
             value_low,
             id_epis_documentation)
        VALUES
            (id_vital_sign_read_in,
             id_vital_sign_in,
             id_vital_sign_desc_in,
             id_episode_in,
             value_in,
             flg_state_in,
             id_prof_read_in,
             id_prof_cancel_in,
             notes_cancel_in,
             id_patient_in,
             id_monitorization_vs_plan_in,
             id_institution_read_in,
             id_software_read_in,
             id_institution_cancel_in,
             id_software_cancel_in,
             id_vital_sign_notes_in,
             id_epis_triage_in,
             id_unit_measure_in,
             flg_most_freq_in,
             dt_vital_sign_read_tstz_in,
             dt_cancel_tstz_in,
             dt_registry_in,
             id_vs_scales_element_in,
             create_user_in,
             create_time_in,
             create_institution_in,
             update_user_in,
             update_time_in,
             update_institution_in,
             id_cancel_reason_in,
             id_unit_measure_sel_in,
             id_edit_reason_in,
             value_high_in,
             value_low_in,
             id_epis_documentation_in)
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    PROCEDURE ins
    (
        id_vital_sign_read_in        IN vital_sign_read.id_vital_sign_read%TYPE,
        id_vital_sign_in             IN vital_sign_read.id_vital_sign%TYPE DEFAULT NULL,
        id_vital_sign_desc_in        IN vital_sign_read.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_episode_in                IN vital_sign_read.id_episode%TYPE DEFAULT NULL,
        value_in                     IN vital_sign_read.value%TYPE DEFAULT NULL,
        flg_state_in                 IN vital_sign_read.flg_state%TYPE DEFAULT NULL,
        id_prof_read_in              IN vital_sign_read.id_prof_read%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN vital_sign_read.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN vital_sign_read.notes_cancel%TYPE DEFAULT NULL,
        id_patient_in                IN vital_sign_read.id_patient%TYPE DEFAULT NULL,
        id_monitorization_vs_plan_in IN vital_sign_read.id_monitorization_vs_plan%TYPE DEFAULT NULL,
        id_institution_read_in       IN vital_sign_read.id_institution_read%TYPE DEFAULT NULL,
        id_software_read_in          IN vital_sign_read.id_software_read%TYPE DEFAULT NULL,
        id_institution_cancel_in     IN vital_sign_read.id_institution_cancel%TYPE DEFAULT NULL,
        id_software_cancel_in        IN vital_sign_read.id_software_cancel%TYPE DEFAULT NULL,
        id_vital_sign_notes_in       IN vital_sign_read.id_vital_sign_notes%TYPE DEFAULT NULL,
        id_epis_triage_in            IN vital_sign_read.id_epis_triage%TYPE DEFAULT NULL,
        id_unit_measure_in           IN vital_sign_read.id_unit_measure%TYPE DEFAULT NULL,
        flg_most_freq_in             IN vital_sign_read.flg_most_freq%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_in   IN vital_sign_read.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN vital_sign_read.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_registry_in               IN vital_sign_read.dt_registry%TYPE DEFAULT NULL,
        id_vs_scales_element_in      IN vital_sign_read.id_vs_scales_element%TYPE DEFAULT NULL,
        create_user_in               IN vital_sign_read.create_user%TYPE DEFAULT NULL,
        create_time_in               IN vital_sign_read.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN vital_sign_read.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN vital_sign_read.update_user%TYPE DEFAULT NULL,
        update_time_in               IN vital_sign_read.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN vital_sign_read.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN vital_sign_read.id_cancel_reason%TYPE DEFAULT NULL,
        id_unit_measure_sel_in       IN vital_sign_read.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_edit_reason_in            IN vital_sign_read.id_edit_reason%TYPE DEFAULT NULL,
        value_high_in                IN vital_sign_read.value_high%TYPE DEFAULT NULL,
        value_low_in                 IN vital_sign_read.value_low%TYPE DEFAULT NULL,
        id_epis_documentation_in     IN vital_sign_read.id_epis_documentation%TYPE DEFAULT NULL,
        handle_error_in              IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_vital_sign_read_in        => id_vital_sign_read_in,
            id_vital_sign_in             => id_vital_sign_in,
            id_vital_sign_desc_in        => id_vital_sign_desc_in,
            id_episode_in                => id_episode_in,
            value_in                     => value_in,
            flg_state_in                 => flg_state_in,
            id_prof_read_in              => id_prof_read_in,
            id_prof_cancel_in            => id_prof_cancel_in,
            notes_cancel_in              => notes_cancel_in,
            id_patient_in                => id_patient_in,
            id_monitorization_vs_plan_in => id_monitorization_vs_plan_in,
            id_institution_read_in       => id_institution_read_in,
            id_software_read_in          => id_software_read_in,
            id_institution_cancel_in     => id_institution_cancel_in,
            id_software_cancel_in        => id_software_cancel_in,
            id_vital_sign_notes_in       => id_vital_sign_notes_in,
            id_epis_triage_in            => id_epis_triage_in,
            id_unit_measure_in           => id_unit_measure_in,
            flg_most_freq_in             => flg_most_freq_in,
            dt_vital_sign_read_tstz_in   => dt_vital_sign_read_tstz_in,
            dt_cancel_tstz_in            => dt_cancel_tstz_in,
            dt_registry_in               => dt_registry_in,
            id_vs_scales_element_in      => id_vs_scales_element_in,
            create_user_in               => create_user_in,
            create_time_in               => create_time_in,
            create_institution_in        => create_institution_in,
            update_user_in               => update_user_in,
            update_time_in               => update_time_in,
            update_institution_in        => update_institution_in,
            id_cancel_reason_in          => id_cancel_reason_in,
            id_unit_measure_sel_in       => id_unit_measure_sel_in,
            id_edit_reason_in            => id_edit_reason_in,
            value_high_in                => value_high_in,
            value_low_in                 => value_low_in,
            id_epis_documentation_in     => id_epis_documentation_in,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN vital_sign_read%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
        l_rec vital_sign_read%ROWTYPE := rec_in;
    BEGIN
        IF gen_pky_in
        THEN
            l_rec.id_vital_sign_read := next_key(sequence_in);
        END IF;
    
        ins(id_vital_sign_read_in        => l_rec.id_vital_sign_read,
            id_vital_sign_in             => l_rec.id_vital_sign,
            id_vital_sign_desc_in        => l_rec.id_vital_sign_desc,
            id_episode_in                => l_rec.id_episode,
            value_in                     => l_rec.value,
            flg_state_in                 => l_rec.flg_state,
            id_prof_read_in              => l_rec.id_prof_read,
            id_prof_cancel_in            => l_rec.id_prof_cancel,
            notes_cancel_in              => l_rec.notes_cancel,
            id_patient_in                => l_rec.id_patient,
            id_monitorization_vs_plan_in => l_rec.id_monitorization_vs_plan,
            id_institution_read_in       => l_rec.id_institution_read,
            id_software_read_in          => l_rec.id_software_read,
            id_institution_cancel_in     => l_rec.id_institution_cancel,
            id_software_cancel_in        => l_rec.id_software_cancel,
            id_vital_sign_notes_in       => l_rec.id_vital_sign_notes,
            id_epis_triage_in            => l_rec.id_epis_triage,
            id_unit_measure_in           => l_rec.id_unit_measure,
            flg_most_freq_in             => l_rec.flg_most_freq,
            dt_vital_sign_read_tstz_in   => l_rec.dt_vital_sign_read_tstz,
            dt_cancel_tstz_in            => l_rec.dt_cancel_tstz,
            dt_registry_in               => l_rec.dt_registry,
            id_vs_scales_element_in      => l_rec.id_vs_scales_element,
            create_user_in               => l_rec.create_user,
            create_time_in               => l_rec.create_time,
            create_institution_in        => l_rec.create_institution,
            update_user_in               => l_rec.update_user,
            update_time_in               => l_rec.update_time,
            update_institution_in        => l_rec.update_institution,
            id_cancel_reason_in          => l_rec.id_cancel_reason,
            id_unit_measure_sel_in       => l_rec.id_unit_measure_sel,
            id_edit_reason_in            => l_rec.id_edit_reason,
            value_high_in                => l_rec.value_high,
            value_low_in                 => l_rec.value_low,
            id_epis_documentation_in     => l_rec.id_epis_documentation,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN vital_sign_read%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rec_in          => rec_in,
            gen_pky_in      => gen_pky_in,
            sequence_in     => sequence_in,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN vital_sign_read_tc,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        IF rows_in.count = 0
        THEN
            NULL;
        ELSE
            FORALL indx IN rows_in.first .. rows_in.last SAVE EXCEPTIONS
                INSERT INTO vital_sign_read
                    (id_vital_sign_read,
                     id_vital_sign,
                     id_vital_sign_desc,
                     id_episode,
                     VALUE,
                     flg_state,
                     id_prof_read,
                     id_prof_cancel,
                     notes_cancel,
                     id_patient,
                     id_monitorization_vs_plan,
                     id_institution_read,
                     id_software_read,
                     id_institution_cancel,
                     id_software_cancel,
                     id_vital_sign_notes,
                     id_epis_triage,
                     id_unit_measure,
                     flg_most_freq,
                     dt_vital_sign_read_tstz,
                     dt_cancel_tstz,
                     dt_registry,
                     id_vs_scales_element,
                     id_cancel_reason,
                     id_unit_measure_sel,
                     id_edit_reason,
                     value_high,
                     value_low,
                     id_epis_documentation)
                VALUES
                    (rows_in(indx).id_vital_sign_read,
                     rows_in(indx).id_vital_sign,
                     rows_in(indx).id_vital_sign_desc,
                     rows_in(indx).id_episode,
                     rows_in(indx).value,
                     rows_in(indx).flg_state,
                     rows_in(indx).id_prof_read,
                     rows_in(indx).id_prof_cancel,
                     rows_in(indx).notes_cancel,
                     rows_in(indx).id_patient,
                     rows_in(indx).id_monitorization_vs_plan,
                     rows_in(indx).id_institution_read,
                     rows_in(indx).id_software_read,
                     rows_in(indx).id_institution_cancel,
                     rows_in(indx).id_software_cancel,
                     rows_in(indx).id_vital_sign_notes,
                     rows_in(indx).id_epis_triage,
                     rows_in(indx).id_unit_measure,
                     rows_in(indx).flg_most_freq,
                     rows_in(indx).dt_vital_sign_read_tstz,
                     rows_in(indx).dt_cancel_tstz,
                     rows_in(indx).dt_registry,
                     rows_in(indx).id_vs_scales_element,
                     rows_in(indx).id_cancel_reason,
                     rows_in(indx).id_unit_measure_sel,
                     rows_in(indx).id_edit_reason,
                     rows_in(indx).value_high,
                     rows_in(indx).value_low,
                     rows_in(indx).id_epis_documentation)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN vital_sign_read_tc,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rows_in => rows_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END ins;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_vital_sign_read_in         IN vital_sign_read.id_vital_sign_read%TYPE,
        id_vital_sign_in              IN vital_sign_read.id_vital_sign%TYPE DEFAULT NULL,
        id_vital_sign_nin             IN BOOLEAN := TRUE,
        id_vital_sign_desc_in         IN vital_sign_read.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_vital_sign_desc_nin        IN BOOLEAN := TRUE,
        id_episode_in                 IN vital_sign_read.id_episode%TYPE DEFAULT NULL,
        id_episode_nin                IN BOOLEAN := TRUE,
        value_in                      IN vital_sign_read.value%TYPE DEFAULT NULL,
        value_nin                     IN BOOLEAN := TRUE,
        flg_state_in                  IN vital_sign_read.flg_state%TYPE DEFAULT NULL,
        flg_state_nin                 IN BOOLEAN := TRUE,
        id_prof_read_in               IN vital_sign_read.id_prof_read%TYPE DEFAULT NULL,
        id_prof_read_nin              IN BOOLEAN := TRUE,
        id_prof_cancel_in             IN vital_sign_read.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin            IN BOOLEAN := TRUE,
        notes_cancel_in               IN vital_sign_read.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin              IN BOOLEAN := TRUE,
        id_patient_in                 IN vital_sign_read.id_patient%TYPE DEFAULT NULL,
        id_patient_nin                IN BOOLEAN := TRUE,
        id_monitorization_vs_plan_in  IN vital_sign_read.id_monitorization_vs_plan%TYPE DEFAULT NULL,
        id_monitorization_vs_plan_nin IN BOOLEAN := TRUE,
        id_institution_read_in        IN vital_sign_read.id_institution_read%TYPE DEFAULT NULL,
        id_institution_read_nin       IN BOOLEAN := TRUE,
        id_software_read_in           IN vital_sign_read.id_software_read%TYPE DEFAULT NULL,
        id_software_read_nin          IN BOOLEAN := TRUE,
        id_institution_cancel_in      IN vital_sign_read.id_institution_cancel%TYPE DEFAULT NULL,
        id_institution_cancel_nin     IN BOOLEAN := TRUE,
        id_software_cancel_in         IN vital_sign_read.id_software_cancel%TYPE DEFAULT NULL,
        id_software_cancel_nin        IN BOOLEAN := TRUE,
        id_vital_sign_notes_in        IN vital_sign_read.id_vital_sign_notes%TYPE DEFAULT NULL,
        id_vital_sign_notes_nin       IN BOOLEAN := TRUE,
        id_epis_triage_in             IN vital_sign_read.id_epis_triage%TYPE DEFAULT NULL,
        id_epis_triage_nin            IN BOOLEAN := TRUE,
        id_unit_measure_in            IN vital_sign_read.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_nin           IN BOOLEAN := TRUE,
        flg_most_freq_in              IN vital_sign_read.flg_most_freq%TYPE DEFAULT NULL,
        flg_most_freq_nin             IN BOOLEAN := TRUE,
        dt_vital_sign_read_tstz_in    IN vital_sign_read.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_nin   IN BOOLEAN := TRUE,
        dt_cancel_tstz_in             IN vital_sign_read.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin            IN BOOLEAN := TRUE,
        dt_registry_in                IN vital_sign_read.dt_registry%TYPE DEFAULT NULL,
        dt_registry_nin               IN BOOLEAN := TRUE,
        id_vs_scales_element_in       IN vital_sign_read.id_vs_scales_element%TYPE DEFAULT NULL,
        id_vs_scales_element_nin      IN BOOLEAN := TRUE,
        create_user_in                IN vital_sign_read.create_user%TYPE DEFAULT NULL,
        create_user_nin               IN BOOLEAN := TRUE,
        create_time_in                IN vital_sign_read.create_time%TYPE DEFAULT NULL,
        create_time_nin               IN BOOLEAN := TRUE,
        create_institution_in         IN vital_sign_read.create_institution%TYPE DEFAULT NULL,
        create_institution_nin        IN BOOLEAN := TRUE,
        update_user_in                IN vital_sign_read.update_user%TYPE DEFAULT NULL,
        update_user_nin               IN BOOLEAN := TRUE,
        update_time_in                IN vital_sign_read.update_time%TYPE DEFAULT NULL,
        update_time_nin               IN BOOLEAN := TRUE,
        update_institution_in         IN vital_sign_read.update_institution%TYPE DEFAULT NULL,
        update_institution_nin        IN BOOLEAN := TRUE,
        id_cancel_reason_in           IN vital_sign_read.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin          IN BOOLEAN := TRUE,
        id_unit_measure_sel_in        IN vital_sign_read.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_unit_measure_sel_nin       IN BOOLEAN := TRUE,
        id_edit_reason_in             IN vital_sign_read.id_edit_reason%TYPE DEFAULT NULL,
        id_edit_reason_nin            IN BOOLEAN := TRUE,
        value_high_in                 IN vital_sign_read.value_high%TYPE DEFAULT NULL,
        value_high_nin                IN BOOLEAN := TRUE,
        value_low_in                  IN vital_sign_read.value_low%TYPE DEFAULT NULL,
        value_low_nin                 IN BOOLEAN := TRUE,
        id_epis_documentation_in      IN vital_sign_read.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_documentation_nin     IN BOOLEAN := TRUE,
        handle_error_in               IN BOOLEAN := FALSE,
        rows_out                      IN OUT table_varchar
    ) IS
        l_rows_out                    table_varchar;
        l_id_vital_sign_n             NUMBER(1) := sys.diutil.bool_to_int(id_vital_sign_nin);
        l_id_vital_sign_desc_n        NUMBER(1) := sys.diutil.bool_to_int(id_vital_sign_desc_nin);
        l_id_episode_n                NUMBER(1) := sys.diutil.bool_to_int(id_episode_nin);
        l_value_n                     NUMBER(1) := sys.diutil.bool_to_int(value_nin);
        l_flg_state_n                 NUMBER(1) := sys.diutil.bool_to_int(flg_state_nin);
        l_id_prof_read_n              NUMBER(1) := sys.diutil.bool_to_int(id_prof_read_nin);
        l_id_prof_cancel_n            NUMBER(1) := sys.diutil.bool_to_int(id_prof_cancel_nin);
        l_notes_cancel_n              NUMBER(1) := sys.diutil.bool_to_int(notes_cancel_nin);
        l_id_patient_n                NUMBER(1) := sys.diutil.bool_to_int(id_patient_nin);
        l_id_monitorization_vs_plan_n NUMBER(1) := sys.diutil.bool_to_int(id_monitorization_vs_plan_nin);
        l_id_institution_read_n       NUMBER(1) := sys.diutil.bool_to_int(id_institution_read_nin);
        l_id_software_read_n          NUMBER(1) := sys.diutil.bool_to_int(id_software_read_nin);
        l_id_institution_cancel_n     NUMBER(1) := sys.diutil.bool_to_int(id_institution_cancel_nin);
        l_id_software_cancel_n        NUMBER(1) := sys.diutil.bool_to_int(id_software_cancel_nin);
        l_id_vital_sign_notes_n       NUMBER(1) := sys.diutil.bool_to_int(id_vital_sign_notes_nin);
        l_id_epis_triage_n            NUMBER(1) := sys.diutil.bool_to_int(id_epis_triage_nin);
        l_id_unit_measure_n           NUMBER(1) := sys.diutil.bool_to_int(id_unit_measure_nin);
        l_flg_most_freq_n             NUMBER(1) := sys.diutil.bool_to_int(flg_most_freq_nin);
        l_dt_vital_sign_read_tstz_n   NUMBER(1) := sys.diutil.bool_to_int(dt_vital_sign_read_tstz_nin);
        l_dt_cancel_tstz_n            NUMBER(1) := sys.diutil.bool_to_int(dt_cancel_tstz_nin);
        l_dt_registry_n               NUMBER(1) := sys.diutil.bool_to_int(dt_registry_nin);
        l_id_vs_scales_element_n      NUMBER(1) := sys.diutil.bool_to_int(id_vs_scales_element_nin);
        l_create_user_n               NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n               NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n        NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n               NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n               NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n        NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_id_cancel_reason_n          NUMBER(1) := sys.diutil.bool_to_int(id_cancel_reason_nin);
        l_id_unit_measure_sel_n       NUMBER(1) := sys.diutil.bool_to_int(id_unit_measure_sel_nin);
        l_id_edit_reason_n            NUMBER(1) := sys.diutil.bool_to_int(id_edit_reason_nin);
        l_value_high_n                NUMBER(1) := sys.diutil.bool_to_int(value_high_nin);
        l_value_low_n                 NUMBER(1) := sys.diutil.bool_to_int(value_low_nin);
        l_id_epis_documentation_n     NUMBER(1) := sys.diutil.bool_to_int(id_epis_documentation_nin);
    BEGIN
    
        UPDATE vital_sign_read
           SET id_vital_sign             = decode(l_id_vital_sign_n,
                                                  0,
                                                  id_vital_sign_in,
                                                  nvl(id_vital_sign_in, id_vital_sign)),
               id_vital_sign_desc        = decode(l_id_vital_sign_desc_n,
                                                  0,
                                                  id_vital_sign_desc_in,
                                                  nvl(id_vital_sign_desc_in, id_vital_sign_desc)),
               id_episode                = decode(l_id_episode_n, 0, id_episode_in, nvl(id_episode_in, id_episode)),
               VALUE                     = decode(l_value_n, 0, value_in, nvl(value_in, VALUE)),
               flg_state                 = decode(l_flg_state_n, 0, flg_state_in, nvl(flg_state_in, flg_state)),
               id_prof_read              = decode(l_id_prof_read_n,
                                                  0,
                                                  id_prof_read_in,
                                                  nvl(id_prof_read_in, id_prof_read)),
               id_prof_cancel            = decode(l_id_prof_cancel_n,
                                                  0,
                                                  id_prof_cancel_in,
                                                  nvl(id_prof_cancel_in, id_prof_cancel)),
               notes_cancel              = decode(l_notes_cancel_n,
                                                  0,
                                                  notes_cancel_in,
                                                  nvl(notes_cancel_in, notes_cancel)),
               id_patient                = decode(l_id_patient_n, 0, id_patient_in, nvl(id_patient_in, id_patient)),
               id_monitorization_vs_plan = decode(l_id_monitorization_vs_plan_n,
                                                  0,
                                                  id_monitorization_vs_plan_in,
                                                  nvl(id_monitorization_vs_plan_in, id_monitorization_vs_plan)),
               id_institution_read       = decode(l_id_institution_read_n,
                                                  0,
                                                  id_institution_read_in,
                                                  nvl(id_institution_read_in, id_institution_read)),
               id_software_read          = decode(l_id_software_read_n,
                                                  0,
                                                  id_software_read_in,
                                                  nvl(id_software_read_in, id_software_read)),
               id_institution_cancel     = decode(l_id_institution_cancel_n,
                                                  0,
                                                  id_institution_cancel_in,
                                                  nvl(id_institution_cancel_in, id_institution_cancel)),
               id_software_cancel        = decode(l_id_software_cancel_n,
                                                  0,
                                                  id_software_cancel_in,
                                                  nvl(id_software_cancel_in, id_software_cancel)),
               id_vital_sign_notes       = decode(l_id_vital_sign_notes_n,
                                                  0,
                                                  id_vital_sign_notes_in,
                                                  nvl(id_vital_sign_notes_in, id_vital_sign_notes)),
               id_epis_triage            = decode(l_id_epis_triage_n,
                                                  0,
                                                  id_epis_triage_in,
                                                  nvl(id_epis_triage_in, id_epis_triage)),
               id_unit_measure           = decode(l_id_unit_measure_n,
                                                  0,
                                                  id_unit_measure_in,
                                                  nvl(id_unit_measure_in, id_unit_measure)),
               flg_most_freq             = decode(l_flg_most_freq_n,
                                                  0,
                                                  flg_most_freq_in,
                                                  nvl(flg_most_freq_in, flg_most_freq)),
               dt_vital_sign_read_tstz   = decode(l_dt_vital_sign_read_tstz_n,
                                                  0,
                                                  dt_vital_sign_read_tstz_in,
                                                  nvl(dt_vital_sign_read_tstz_in, dt_vital_sign_read_tstz)),
               dt_cancel_tstz            = decode(l_dt_cancel_tstz_n,
                                                  0,
                                                  dt_cancel_tstz_in,
                                                  nvl(dt_cancel_tstz_in, dt_cancel_tstz)),
               dt_registry               = decode(l_dt_registry_n, 0, dt_registry_in, nvl(dt_registry_in, dt_registry)),
               id_vs_scales_element      = decode(l_id_vs_scales_element_n,
                                                  0,
                                                  id_vs_scales_element_in,
                                                  nvl(id_vs_scales_element_in, id_vs_scales_element)),
               create_user               = decode(l_create_user_n, 0, create_user_in, nvl(create_user_in, create_user)),
               create_time               = decode(l_create_time_n, 0, create_time_in, nvl(create_time_in, create_time)),
               create_institution        = decode(l_create_institution_n,
                                                  0,
                                                  create_institution_in,
                                                  nvl(create_institution_in, create_institution)),
               update_user               = decode(l_update_user_n, 0, update_user_in, nvl(update_user_in, update_user)),
               update_time               = decode(l_update_time_n, 0, update_time_in, nvl(update_time_in, update_time)),
               update_institution        = decode(l_update_institution_n,
                                                  0,
                                                  update_institution_in,
                                                  nvl(update_institution_in, update_institution)),
               id_cancel_reason          = decode(l_id_cancel_reason_n,
                                                  0,
                                                  id_cancel_reason_in,
                                                  nvl(id_cancel_reason_in, id_cancel_reason)),
               id_unit_measure_sel       = decode(l_id_unit_measure_sel_n,
                                                  0,
                                                  id_unit_measure_sel_in,
                                                  nvl(id_unit_measure_sel_in, id_unit_measure_sel)),
               id_edit_reason            = decode(l_id_edit_reason_n,
                                                  0,
                                                  id_edit_reason_in,
                                                  nvl(id_edit_reason_in, id_edit_reason)),
               value_high                = decode(l_value_high_n, 0, value_high_in, nvl(value_high_in, value_high)),
               value_low                 = decode(l_value_low_n, 0, value_low_in, nvl(value_low_in, value_low)),
               id_epis_documentation     = decode(l_id_epis_documentation_n,
                                                  0,
                                                  id_epis_documentation_in,
                                                  nvl(id_epis_documentation_in, id_epis_documentation))
         WHERE id_vital_sign_read = id_vital_sign_read_in
        RETURNING ROWID BULK COLLECT INTO l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_vital_sign_read_in         IN vital_sign_read.id_vital_sign_read%TYPE,
        id_vital_sign_in              IN vital_sign_read.id_vital_sign%TYPE DEFAULT NULL,
        id_vital_sign_nin             IN BOOLEAN := TRUE,
        id_vital_sign_desc_in         IN vital_sign_read.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_vital_sign_desc_nin        IN BOOLEAN := TRUE,
        id_episode_in                 IN vital_sign_read.id_episode%TYPE DEFAULT NULL,
        id_episode_nin                IN BOOLEAN := TRUE,
        value_in                      IN vital_sign_read.value%TYPE DEFAULT NULL,
        value_nin                     IN BOOLEAN := TRUE,
        flg_state_in                  IN vital_sign_read.flg_state%TYPE DEFAULT NULL,
        flg_state_nin                 IN BOOLEAN := TRUE,
        id_prof_read_in               IN vital_sign_read.id_prof_read%TYPE DEFAULT NULL,
        id_prof_read_nin              IN BOOLEAN := TRUE,
        id_prof_cancel_in             IN vital_sign_read.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin            IN BOOLEAN := TRUE,
        notes_cancel_in               IN vital_sign_read.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin              IN BOOLEAN := TRUE,
        id_patient_in                 IN vital_sign_read.id_patient%TYPE DEFAULT NULL,
        id_patient_nin                IN BOOLEAN := TRUE,
        id_monitorization_vs_plan_in  IN vital_sign_read.id_monitorization_vs_plan%TYPE DEFAULT NULL,
        id_monitorization_vs_plan_nin IN BOOLEAN := TRUE,
        id_institution_read_in        IN vital_sign_read.id_institution_read%TYPE DEFAULT NULL,
        id_institution_read_nin       IN BOOLEAN := TRUE,
        id_software_read_in           IN vital_sign_read.id_software_read%TYPE DEFAULT NULL,
        id_software_read_nin          IN BOOLEAN := TRUE,
        id_institution_cancel_in      IN vital_sign_read.id_institution_cancel%TYPE DEFAULT NULL,
        id_institution_cancel_nin     IN BOOLEAN := TRUE,
        id_software_cancel_in         IN vital_sign_read.id_software_cancel%TYPE DEFAULT NULL,
        id_software_cancel_nin        IN BOOLEAN := TRUE,
        id_vital_sign_notes_in        IN vital_sign_read.id_vital_sign_notes%TYPE DEFAULT NULL,
        id_vital_sign_notes_nin       IN BOOLEAN := TRUE,
        id_epis_triage_in             IN vital_sign_read.id_epis_triage%TYPE DEFAULT NULL,
        id_epis_triage_nin            IN BOOLEAN := TRUE,
        id_unit_measure_in            IN vital_sign_read.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_nin           IN BOOLEAN := TRUE,
        flg_most_freq_in              IN vital_sign_read.flg_most_freq%TYPE DEFAULT NULL,
        flg_most_freq_nin             IN BOOLEAN := TRUE,
        dt_vital_sign_read_tstz_in    IN vital_sign_read.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_nin   IN BOOLEAN := TRUE,
        dt_cancel_tstz_in             IN vital_sign_read.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin            IN BOOLEAN := TRUE,
        dt_registry_in                IN vital_sign_read.dt_registry%TYPE DEFAULT NULL,
        dt_registry_nin               IN BOOLEAN := TRUE,
        id_vs_scales_element_in       IN vital_sign_read.id_vs_scales_element%TYPE DEFAULT NULL,
        id_vs_scales_element_nin      IN BOOLEAN := TRUE,
        create_user_in                IN vital_sign_read.create_user%TYPE DEFAULT NULL,
        create_user_nin               IN BOOLEAN := TRUE,
        create_time_in                IN vital_sign_read.create_time%TYPE DEFAULT NULL,
        create_time_nin               IN BOOLEAN := TRUE,
        create_institution_in         IN vital_sign_read.create_institution%TYPE DEFAULT NULL,
        create_institution_nin        IN BOOLEAN := TRUE,
        update_user_in                IN vital_sign_read.update_user%TYPE DEFAULT NULL,
        update_user_nin               IN BOOLEAN := TRUE,
        update_time_in                IN vital_sign_read.update_time%TYPE DEFAULT NULL,
        update_time_nin               IN BOOLEAN := TRUE,
        update_institution_in         IN vital_sign_read.update_institution%TYPE DEFAULT NULL,
        update_institution_nin        IN BOOLEAN := TRUE,
        id_cancel_reason_in           IN vital_sign_read.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin          IN BOOLEAN := TRUE,
        id_unit_measure_sel_in        IN vital_sign_read.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_unit_measure_sel_nin       IN BOOLEAN := TRUE,
        id_edit_reason_in             IN vital_sign_read.id_edit_reason%TYPE DEFAULT NULL,
        id_edit_reason_nin            IN BOOLEAN := TRUE,
        value_high_in                 IN vital_sign_read.value_high%TYPE DEFAULT NULL,
        value_high_nin                IN BOOLEAN := TRUE,
        value_low_in                  IN vital_sign_read.value_low%TYPE DEFAULT NULL,
        value_low_nin                 IN BOOLEAN := TRUE,
        id_epis_documentation_in      IN vital_sign_read.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_documentation_nin     IN BOOLEAN := TRUE,
        handle_error_in               IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_vital_sign_read_in         => id_vital_sign_read_in,
            id_vital_sign_in              => id_vital_sign_in,
            id_vital_sign_nin             => id_vital_sign_nin,
            id_vital_sign_desc_in         => id_vital_sign_desc_in,
            id_vital_sign_desc_nin        => id_vital_sign_desc_nin,
            id_episode_in                 => id_episode_in,
            id_episode_nin                => id_episode_nin,
            value_in                      => value_in,
            value_nin                     => value_nin,
            flg_state_in                  => flg_state_in,
            flg_state_nin                 => flg_state_nin,
            id_prof_read_in               => id_prof_read_in,
            id_prof_read_nin              => id_prof_read_nin,
            id_prof_cancel_in             => id_prof_cancel_in,
            id_prof_cancel_nin            => id_prof_cancel_nin,
            notes_cancel_in               => notes_cancel_in,
            notes_cancel_nin              => notes_cancel_nin,
            id_patient_in                 => id_patient_in,
            id_patient_nin                => id_patient_nin,
            id_monitorization_vs_plan_in  => id_monitorization_vs_plan_in,
            id_monitorization_vs_plan_nin => id_monitorization_vs_plan_nin,
            id_institution_read_in        => id_institution_read_in,
            id_institution_read_nin       => id_institution_read_nin,
            id_software_read_in           => id_software_read_in,
            id_software_read_nin          => id_software_read_nin,
            id_institution_cancel_in      => id_institution_cancel_in,
            id_institution_cancel_nin     => id_institution_cancel_nin,
            id_software_cancel_in         => id_software_cancel_in,
            id_software_cancel_nin        => id_software_cancel_nin,
            id_vital_sign_notes_in        => id_vital_sign_notes_in,
            id_vital_sign_notes_nin       => id_vital_sign_notes_nin,
            id_epis_triage_in             => id_epis_triage_in,
            id_epis_triage_nin            => id_epis_triage_nin,
            id_unit_measure_in            => id_unit_measure_in,
            id_unit_measure_nin           => id_unit_measure_nin,
            flg_most_freq_in              => flg_most_freq_in,
            flg_most_freq_nin             => flg_most_freq_nin,
            dt_vital_sign_read_tstz_in    => dt_vital_sign_read_tstz_in,
            dt_vital_sign_read_tstz_nin   => dt_vital_sign_read_tstz_nin,
            dt_cancel_tstz_in             => dt_cancel_tstz_in,
            dt_cancel_tstz_nin            => dt_cancel_tstz_nin,
            dt_registry_in                => dt_registry_in,
            dt_registry_nin               => dt_registry_nin,
            id_vs_scales_element_in       => id_vs_scales_element_in,
            id_vs_scales_element_nin      => id_vs_scales_element_nin,
            create_user_in                => create_user_in,
            create_user_nin               => create_user_nin,
            create_time_in                => create_time_in,
            create_time_nin               => create_time_nin,
            create_institution_in         => create_institution_in,
            create_institution_nin        => create_institution_nin,
            update_user_in                => update_user_in,
            update_user_nin               => update_user_nin,
            update_time_in                => update_time_in,
            update_time_nin               => update_time_nin,
            update_institution_in         => update_institution_in,
            update_institution_nin        => update_institution_nin,
            id_cancel_reason_in           => id_cancel_reason_in,
            id_cancel_reason_nin          => id_cancel_reason_nin,
            id_unit_measure_sel_in        => id_unit_measure_sel_in,
            id_unit_measure_sel_nin       => id_unit_measure_sel_nin,
            id_edit_reason_in             => id_edit_reason_in,
            id_edit_reason_nin            => id_edit_reason_nin,
            value_high_in                 => value_high_in,
            value_high_nin                => value_high_nin,
            value_low_in                  => value_low_in,
            value_low_nin                 => value_low_nin,
            id_epis_documentation_in      => id_epis_documentation_in,
            id_epis_documentation_nin     => id_epis_documentation_nin,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_vital_sign_in              IN vital_sign_read.id_vital_sign%TYPE DEFAULT NULL,
        id_vital_sign_nin             IN BOOLEAN := TRUE,
        id_vital_sign_desc_in         IN vital_sign_read.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_vital_sign_desc_nin        IN BOOLEAN := TRUE,
        id_episode_in                 IN vital_sign_read.id_episode%TYPE DEFAULT NULL,
        id_episode_nin                IN BOOLEAN := TRUE,
        value_in                      IN vital_sign_read.value%TYPE DEFAULT NULL,
        value_nin                     IN BOOLEAN := TRUE,
        flg_state_in                  IN vital_sign_read.flg_state%TYPE DEFAULT NULL,
        flg_state_nin                 IN BOOLEAN := TRUE,
        id_prof_read_in               IN vital_sign_read.id_prof_read%TYPE DEFAULT NULL,
        id_prof_read_nin              IN BOOLEAN := TRUE,
        id_prof_cancel_in             IN vital_sign_read.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin            IN BOOLEAN := TRUE,
        notes_cancel_in               IN vital_sign_read.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin              IN BOOLEAN := TRUE,
        id_patient_in                 IN vital_sign_read.id_patient%TYPE DEFAULT NULL,
        id_patient_nin                IN BOOLEAN := TRUE,
        id_monitorization_vs_plan_in  IN vital_sign_read.id_monitorization_vs_plan%TYPE DEFAULT NULL,
        id_monitorization_vs_plan_nin IN BOOLEAN := TRUE,
        id_institution_read_in        IN vital_sign_read.id_institution_read%TYPE DEFAULT NULL,
        id_institution_read_nin       IN BOOLEAN := TRUE,
        id_software_read_in           IN vital_sign_read.id_software_read%TYPE DEFAULT NULL,
        id_software_read_nin          IN BOOLEAN := TRUE,
        id_institution_cancel_in      IN vital_sign_read.id_institution_cancel%TYPE DEFAULT NULL,
        id_institution_cancel_nin     IN BOOLEAN := TRUE,
        id_software_cancel_in         IN vital_sign_read.id_software_cancel%TYPE DEFAULT NULL,
        id_software_cancel_nin        IN BOOLEAN := TRUE,
        id_vital_sign_notes_in        IN vital_sign_read.id_vital_sign_notes%TYPE DEFAULT NULL,
        id_vital_sign_notes_nin       IN BOOLEAN := TRUE,
        id_epis_triage_in             IN vital_sign_read.id_epis_triage%TYPE DEFAULT NULL,
        id_epis_triage_nin            IN BOOLEAN := TRUE,
        id_unit_measure_in            IN vital_sign_read.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_nin           IN BOOLEAN := TRUE,
        flg_most_freq_in              IN vital_sign_read.flg_most_freq%TYPE DEFAULT NULL,
        flg_most_freq_nin             IN BOOLEAN := TRUE,
        dt_vital_sign_read_tstz_in    IN vital_sign_read.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_nin   IN BOOLEAN := TRUE,
        dt_cancel_tstz_in             IN vital_sign_read.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin            IN BOOLEAN := TRUE,
        dt_registry_in                IN vital_sign_read.dt_registry%TYPE DEFAULT NULL,
        dt_registry_nin               IN BOOLEAN := TRUE,
        id_vs_scales_element_in       IN vital_sign_read.id_vs_scales_element%TYPE DEFAULT NULL,
        id_vs_scales_element_nin      IN BOOLEAN := TRUE,
        create_user_in                IN vital_sign_read.create_user%TYPE DEFAULT NULL,
        create_user_nin               IN BOOLEAN := TRUE,
        create_time_in                IN vital_sign_read.create_time%TYPE DEFAULT NULL,
        create_time_nin               IN BOOLEAN := TRUE,
        create_institution_in         IN vital_sign_read.create_institution%TYPE DEFAULT NULL,
        create_institution_nin        IN BOOLEAN := TRUE,
        update_user_in                IN vital_sign_read.update_user%TYPE DEFAULT NULL,
        update_user_nin               IN BOOLEAN := TRUE,
        update_time_in                IN vital_sign_read.update_time%TYPE DEFAULT NULL,
        update_time_nin               IN BOOLEAN := TRUE,
        update_institution_in         IN vital_sign_read.update_institution%TYPE DEFAULT NULL,
        update_institution_nin        IN BOOLEAN := TRUE,
        id_cancel_reason_in           IN vital_sign_read.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin          IN BOOLEAN := TRUE,
        id_unit_measure_sel_in        IN vital_sign_read.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_unit_measure_sel_nin       IN BOOLEAN := TRUE,
        id_edit_reason_in             IN vital_sign_read.id_edit_reason%TYPE DEFAULT NULL,
        id_edit_reason_nin            IN BOOLEAN := TRUE,
        value_high_in                 IN vital_sign_read.value_high%TYPE DEFAULT NULL,
        value_high_nin                IN BOOLEAN := TRUE,
        value_low_in                  IN vital_sign_read.value_low%TYPE DEFAULT NULL,
        value_low_nin                 IN BOOLEAN := TRUE,
        id_epis_documentation_in      IN vital_sign_read.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_documentation_nin     IN BOOLEAN := TRUE,
        where_in                      IN VARCHAR2,
        handle_error_in               IN BOOLEAN := FALSE,
        rows_out                      IN OUT table_varchar
    ) IS
        l_sql                         VARCHAR2(32767);
        l_rows_out                    table_varchar;
        l_id_vital_sign_n             NUMBER(1) := sys.diutil.bool_to_int(id_vital_sign_nin);
        l_id_vital_sign_desc_n        NUMBER(1) := sys.diutil.bool_to_int(id_vital_sign_desc_nin);
        l_id_episode_n                NUMBER(1) := sys.diutil.bool_to_int(id_episode_nin);
        l_value_n                     NUMBER(1) := sys.diutil.bool_to_int(value_nin);
        l_flg_state_n                 NUMBER(1) := sys.diutil.bool_to_int(flg_state_nin);
        l_id_prof_read_n              NUMBER(1) := sys.diutil.bool_to_int(id_prof_read_nin);
        l_id_prof_cancel_n            NUMBER(1) := sys.diutil.bool_to_int(id_prof_cancel_nin);
        l_notes_cancel_n              NUMBER(1) := sys.diutil.bool_to_int(notes_cancel_nin);
        l_id_patient_n                NUMBER(1) := sys.diutil.bool_to_int(id_patient_nin);
        l_id_monitorization_vs_plan_n NUMBER(1) := sys.diutil.bool_to_int(id_monitorization_vs_plan_nin);
        l_id_institution_read_n       NUMBER(1) := sys.diutil.bool_to_int(id_institution_read_nin);
        l_id_software_read_n          NUMBER(1) := sys.diutil.bool_to_int(id_software_read_nin);
        l_id_institution_cancel_n     NUMBER(1) := sys.diutil.bool_to_int(id_institution_cancel_nin);
        l_id_software_cancel_n        NUMBER(1) := sys.diutil.bool_to_int(id_software_cancel_nin);
        l_id_vital_sign_notes_n       NUMBER(1) := sys.diutil.bool_to_int(id_vital_sign_notes_nin);
        l_id_epis_triage_n            NUMBER(1) := sys.diutil.bool_to_int(id_epis_triage_nin);
        l_id_unit_measure_n           NUMBER(1) := sys.diutil.bool_to_int(id_unit_measure_nin);
        l_flg_most_freq_n             NUMBER(1) := sys.diutil.bool_to_int(flg_most_freq_nin);
        l_dt_vital_sign_read_tstz_n   NUMBER(1) := sys.diutil.bool_to_int(dt_vital_sign_read_tstz_nin);
        l_dt_cancel_tstz_n            NUMBER(1) := sys.diutil.bool_to_int(dt_cancel_tstz_nin);
        l_dt_registry_n               NUMBER(1) := sys.diutil.bool_to_int(dt_registry_nin);
        l_id_vs_scales_element_n      NUMBER(1) := sys.diutil.bool_to_int(id_vs_scales_element_nin);
        l_create_user_n               NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n               NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n        NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n               NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n               NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n        NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_id_cancel_reason_n          NUMBER(1) := sys.diutil.bool_to_int(id_cancel_reason_nin);
        l_id_unit_measure_sel_n       NUMBER(1) := sys.diutil.bool_to_int(id_unit_measure_sel_nin);
        l_id_edit_reason_n            NUMBER(1) := sys.diutil.bool_to_int(id_edit_reason_nin);
        l_value_high_n                NUMBER(1) := sys.diutil.bool_to_int(value_high_nin);
        l_value_low_n                 NUMBER(1) := sys.diutil.bool_to_int(value_low_nin);
        l_id_epis_documentation_n     NUMBER(1) := sys.diutil.bool_to_int(id_epis_documentation_nin);
    BEGIN
        l_id_vital_sign_n             := sys.diutil.bool_to_int(id_vital_sign_nin);
        l_id_vital_sign_desc_n        := sys.diutil.bool_to_int(id_vital_sign_desc_nin);
        l_id_episode_n                := sys.diutil.bool_to_int(id_episode_nin);
        l_value_n                     := sys.diutil.bool_to_int(value_nin);
        l_flg_state_n                 := sys.diutil.bool_to_int(flg_state_nin);
        l_id_prof_read_n              := sys.diutil.bool_to_int(id_prof_read_nin);
        l_id_prof_cancel_n            := sys.diutil.bool_to_int(id_prof_cancel_nin);
        l_notes_cancel_n              := sys.diutil.bool_to_int(notes_cancel_nin);
        l_id_patient_n                := sys.diutil.bool_to_int(id_patient_nin);
        l_id_monitorization_vs_plan_n := sys.diutil.bool_to_int(id_monitorization_vs_plan_nin);
        l_id_institution_read_n       := sys.diutil.bool_to_int(id_institution_read_nin);
        l_id_software_read_n          := sys.diutil.bool_to_int(id_software_read_nin);
        l_id_institution_cancel_n     := sys.diutil.bool_to_int(id_institution_cancel_nin);
        l_id_software_cancel_n        := sys.diutil.bool_to_int(id_software_cancel_nin);
        l_id_vital_sign_notes_n       := sys.diutil.bool_to_int(id_vital_sign_notes_nin);
        l_id_epis_triage_n            := sys.diutil.bool_to_int(id_epis_triage_nin);
        l_id_unit_measure_n           := sys.diutil.bool_to_int(id_unit_measure_nin);
        l_flg_most_freq_n             := sys.diutil.bool_to_int(flg_most_freq_nin);
        l_dt_vital_sign_read_tstz_n   := sys.diutil.bool_to_int(dt_vital_sign_read_tstz_nin);
        l_dt_cancel_tstz_n            := sys.diutil.bool_to_int(dt_cancel_tstz_nin);
        l_dt_registry_n               := sys.diutil.bool_to_int(dt_registry_nin);
        l_id_vs_scales_element_n      := sys.diutil.bool_to_int(id_vs_scales_element_nin);
        l_create_user_n               := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n               := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n        := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n               := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n               := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n        := sys.diutil.bool_to_int(update_institution_nin);
        l_id_cancel_reason_n          := sys.diutil.bool_to_int(id_cancel_reason_nin);
        l_id_unit_measure_sel_n       := sys.diutil.bool_to_int(id_unit_measure_sel_nin);
        l_id_edit_reason_n            := sys.diutil.bool_to_int(id_edit_reason_nin);
        l_value_high_n                := sys.diutil.bool_to_int(value_high_nin);
        l_value_low_n                 := sys.diutil.bool_to_int(value_low_nin);
        l_id_epis_documentation_n     := sys.diutil.bool_to_int(id_epis_documentation_nin);
        l_sql                         := 'UPDATE vital_sign_read SET' || ' ID_VITAL_SIGN = decode (' ||
                                         l_id_vital_sign_n ||
                                         ',0,:ID_VITAL_SIGN_in, NVL (:ID_VITAL_SIGN_in, ID_VITAL_SIGN)) ' || ',' ||
                                         ' ID_VITAL_SIGN_DESC = decode (' || l_id_vital_sign_desc_n ||
                                         ',0,:ID_VITAL_SIGN_DESC_in, NVL (:ID_VITAL_SIGN_DESC_in, ID_VITAL_SIGN_DESC)) ' || ',' ||
                                         ' ID_EPISODE = decode (' || l_id_episode_n ||
                                         ',0,:ID_EPISODE_in, NVL (:ID_EPISODE_in, ID_EPISODE)) ' || ',' ||
                                         ' VALUE = decode (' || l_value_n || ',0,:VALUE_in, NVL (:VALUE_in, VALUE)) ' || ',' ||
                                         ' FLG_STATE = decode (' || l_flg_state_n ||
                                         ',0,:FLG_STATE_in, NVL (:FLG_STATE_in, FLG_STATE)) ' || ',' ||
                                         ' ID_PROF_READ = decode (' || l_id_prof_read_n ||
                                         ',0,:ID_PROF_READ_in, NVL (:ID_PROF_READ_in, ID_PROF_READ)) ' || ',' ||
                                         ' ID_PROF_CANCEL = decode (' || l_id_prof_cancel_n ||
                                         ',0,:ID_PROF_CANCEL_in, NVL (:ID_PROF_CANCEL_in, ID_PROF_CANCEL)) ' || ',' ||
                                         ' NOTES_CANCEL = decode (' || l_notes_cancel_n ||
                                         ',0,:NOTES_CANCEL_in, NVL (:NOTES_CANCEL_in, NOTES_CANCEL)) ' || ',' ||
                                         ' ID_PATIENT = decode (' || l_id_patient_n ||
                                         ',0,:ID_PATIENT_in, NVL (:ID_PATIENT_in, ID_PATIENT)) ' || ',' ||
                                         ' ID_MONITORIZATION_VS_PLAN = decode (' || l_id_monitorization_vs_plan_n ||
                                         ',0,:ID_MONITORIZATION_VS_PLAN_in, NVL (:ID_MONITORIZATION_VS_PLAN_in, ID_MONITORIZATION_VS_PLAN)) ' || ',' ||
                                         ' ID_INSTITUTION_READ = decode (' || l_id_institution_read_n ||
                                         ',0,:ID_INSTITUTION_READ_in, NVL (:ID_INSTITUTION_READ_in, ID_INSTITUTION_READ)) ' || ',' ||
                                         ' ID_SOFTWARE_READ = decode (' || l_id_software_read_n ||
                                         ',0,:ID_SOFTWARE_READ_in, NVL (:ID_SOFTWARE_READ_in, ID_SOFTWARE_READ)) ' || ',' ||
                                         ' ID_INSTITUTION_CANCEL = decode (' || l_id_institution_cancel_n ||
                                         ',0,:ID_INSTITUTION_CANCEL_in, NVL (:ID_INSTITUTION_CANCEL_in, ID_INSTITUTION_CANCEL)) ' || ',' ||
                                         ' ID_SOFTWARE_CANCEL = decode (' || l_id_software_cancel_n ||
                                         ',0,:ID_SOFTWARE_CANCEL_in, NVL (:ID_SOFTWARE_CANCEL_in, ID_SOFTWARE_CANCEL)) ' || ',' ||
                                         ' ID_VITAL_SIGN_NOTES = decode (' || l_id_vital_sign_notes_n ||
                                         ',0,:ID_VITAL_SIGN_NOTES_in, NVL (:ID_VITAL_SIGN_NOTES_in, ID_VITAL_SIGN_NOTES)) ' || ',' ||
                                         ' ID_EPIS_TRIAGE = decode (' || l_id_epis_triage_n ||
                                         ',0,:ID_EPIS_TRIAGE_in, NVL (:ID_EPIS_TRIAGE_in, ID_EPIS_TRIAGE)) ' || ',' ||
                                         ' ID_UNIT_MEASURE = decode (' || l_id_unit_measure_n ||
                                         ',0,:ID_UNIT_MEASURE_in, NVL (:ID_UNIT_MEASURE_in, ID_UNIT_MEASURE)) ' || ',' ||
                                         ' FLG_MOST_FREQ = decode (' || l_flg_most_freq_n ||
                                         ',0,:FLG_MOST_FREQ_in, NVL (:FLG_MOST_FREQ_in, FLG_MOST_FREQ)) ' || ',' ||
                                         ' DT_VITAL_SIGN_READ_TSTZ = decode (' || l_dt_vital_sign_read_tstz_n ||
                                         ',0,:DT_VITAL_SIGN_READ_TSTZ_in, NVL (:DT_VITAL_SIGN_READ_TSTZ_in, DT_VITAL_SIGN_READ_TSTZ)) ' || ',' ||
                                         ' DT_CANCEL_TSTZ = decode (' || l_dt_cancel_tstz_n ||
                                         ',0,:DT_CANCEL_TSTZ_in, NVL (:DT_CANCEL_TSTZ_in, DT_CANCEL_TSTZ)) ' || ',' ||
                                         ' DT_REGISTRY = decode (' || l_dt_registry_n ||
                                         ',0,:DT_REGISTRY_in, NVL (:DT_REGISTRY_in, DT_REGISTRY)) ' || ',' ||
                                         ' ID_VS_SCALES_ELEMENT = decode (' || l_id_vs_scales_element_n ||
                                         ',0,:ID_VS_SCALES_ELEMENT_in, NVL (:ID_VS_SCALES_ELEMENT_in, ID_VS_SCALES_ELEMENT)) ' || ',' ||
                                         ' CREATE_USER = decode (' || l_create_user_n ||
                                         ',0,:CREATE_USER_in, NVL (:CREATE_USER_in, CREATE_USER)) ' || ',' ||
                                         ' CREATE_TIME = decode (' || l_create_time_n ||
                                         ',0,:CREATE_TIME_in, NVL (:CREATE_TIME_in, CREATE_TIME)) ' || ',' ||
                                         ' CREATE_INSTITUTION = decode (' || l_create_institution_n ||
                                         ',0,:CREATE_INSTITUTION_in, NVL (:CREATE_INSTITUTION_in, CREATE_INSTITUTION)) ' || ',' ||
                                         ' UPDATE_USER = decode (' || l_update_user_n ||
                                         ',0,:UPDATE_USER_in, NVL (:UPDATE_USER_in, UPDATE_USER)) ' || ',' ||
                                         ' UPDATE_TIME = decode (' || l_update_time_n ||
                                         ',0,:UPDATE_TIME_in, NVL (:UPDATE_TIME_in, UPDATE_TIME)) ' || ',' ||
                                         ' UPDATE_INSTITUTION = decode (' || l_update_institution_n ||
                                         ',0,:UPDATE_INSTITUTION_in, NVL (:UPDATE_INSTITUTION_in, UPDATE_INSTITUTION)) ' || ',' ||
                                         ' ID_CANCEL_REASON = decode (' || l_id_cancel_reason_n ||
                                         ',0,:ID_CANCEL_REASON_in, NVL (:ID_CANCEL_REASON_in, ID_CANCEL_REASON)) ' || ',' ||
                                         ' ID_UNIT_MEASURE_SEL = decode (' || l_id_unit_measure_sel_n ||
                                         ',0,:ID_UNIT_MEASURE_SEL_in, NVL (:ID_UNIT_MEASURE_SEL_in, ID_UNIT_MEASURE_SEL)) ' || ',' ||
                                         ' ID_EDIT_REASON = decode (' || l_id_edit_reason_n ||
                                         ',0,:ID_EDIT_REASON_in, NVL (:ID_EDIT_REASON_in, ID_EDIT_REASON)) ' || ',' ||
                                         ' VALUE_HIGH = decode (' || l_value_high_n ||
                                         ',0,:VALUE_HIGH_in, NVL (:VALUE_HIGH_in, VALUE_HIGH)) ' || ',' ||
                                         ' VALUE_LOW = decode (' || l_value_low_n ||
                                         ',0,:VALUE_LOW_in, NVL (:VALUE_LOW_in, VALUE_LOW)) ' || ',' ||
                                         ' ID_EPIS_DOCUMENTATION = decode (' || l_id_epis_documentation_n ||
                                         ',0,:ID_EPIS_DOCUMENTATION_in, NVL (:ID_EPIS_DOCUMENTATION_in, ID_EPIS_DOCUMENTATION)) ' ||
                                         ' where ' || nvl(where_in, '(1=1)') ||
                                         ' RETURNING ROWID BULK COLLECT INTO :l_rows_out';
        EXECUTE IMMEDIATE 'BEGIN ' || l_sql || '; END;'
            USING IN id_vital_sign_in, id_vital_sign_desc_in, id_episode_in, value_in, flg_state_in, id_prof_read_in, id_prof_cancel_in, notes_cancel_in, id_patient_in, id_monitorization_vs_plan_in, id_institution_read_in, id_software_read_in, id_institution_cancel_in, id_software_cancel_in, id_vital_sign_notes_in, id_epis_triage_in, id_unit_measure_in, flg_most_freq_in, dt_vital_sign_read_tstz_in, dt_cancel_tstz_in, dt_registry_in, id_vs_scales_element_in, create_user_in, create_time_in, create_institution_in, update_user_in, update_time_in, update_institution_in, id_cancel_reason_in, id_unit_measure_sel_in, id_edit_reason_in, value_high_in, value_low_in, id_epis_documentation_in, OUT l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_vital_sign_in              IN vital_sign_read.id_vital_sign%TYPE DEFAULT NULL,
        id_vital_sign_nin             IN BOOLEAN := TRUE,
        id_vital_sign_desc_in         IN vital_sign_read.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_vital_sign_desc_nin        IN BOOLEAN := TRUE,
        id_episode_in                 IN vital_sign_read.id_episode%TYPE DEFAULT NULL,
        id_episode_nin                IN BOOLEAN := TRUE,
        value_in                      IN vital_sign_read.value%TYPE DEFAULT NULL,
        value_nin                     IN BOOLEAN := TRUE,
        flg_state_in                  IN vital_sign_read.flg_state%TYPE DEFAULT NULL,
        flg_state_nin                 IN BOOLEAN := TRUE,
        id_prof_read_in               IN vital_sign_read.id_prof_read%TYPE DEFAULT NULL,
        id_prof_read_nin              IN BOOLEAN := TRUE,
        id_prof_cancel_in             IN vital_sign_read.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin            IN BOOLEAN := TRUE,
        notes_cancel_in               IN vital_sign_read.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin              IN BOOLEAN := TRUE,
        id_patient_in                 IN vital_sign_read.id_patient%TYPE DEFAULT NULL,
        id_patient_nin                IN BOOLEAN := TRUE,
        id_monitorization_vs_plan_in  IN vital_sign_read.id_monitorization_vs_plan%TYPE DEFAULT NULL,
        id_monitorization_vs_plan_nin IN BOOLEAN := TRUE,
        id_institution_read_in        IN vital_sign_read.id_institution_read%TYPE DEFAULT NULL,
        id_institution_read_nin       IN BOOLEAN := TRUE,
        id_software_read_in           IN vital_sign_read.id_software_read%TYPE DEFAULT NULL,
        id_software_read_nin          IN BOOLEAN := TRUE,
        id_institution_cancel_in      IN vital_sign_read.id_institution_cancel%TYPE DEFAULT NULL,
        id_institution_cancel_nin     IN BOOLEAN := TRUE,
        id_software_cancel_in         IN vital_sign_read.id_software_cancel%TYPE DEFAULT NULL,
        id_software_cancel_nin        IN BOOLEAN := TRUE,
        id_vital_sign_notes_in        IN vital_sign_read.id_vital_sign_notes%TYPE DEFAULT NULL,
        id_vital_sign_notes_nin       IN BOOLEAN := TRUE,
        id_epis_triage_in             IN vital_sign_read.id_epis_triage%TYPE DEFAULT NULL,
        id_epis_triage_nin            IN BOOLEAN := TRUE,
        id_unit_measure_in            IN vital_sign_read.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_nin           IN BOOLEAN := TRUE,
        flg_most_freq_in              IN vital_sign_read.flg_most_freq%TYPE DEFAULT NULL,
        flg_most_freq_nin             IN BOOLEAN := TRUE,
        dt_vital_sign_read_tstz_in    IN vital_sign_read.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_nin   IN BOOLEAN := TRUE,
        dt_cancel_tstz_in             IN vital_sign_read.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin            IN BOOLEAN := TRUE,
        dt_registry_in                IN vital_sign_read.dt_registry%TYPE DEFAULT NULL,
        dt_registry_nin               IN BOOLEAN := TRUE,
        id_vs_scales_element_in       IN vital_sign_read.id_vs_scales_element%TYPE DEFAULT NULL,
        id_vs_scales_element_nin      IN BOOLEAN := TRUE,
        create_user_in                IN vital_sign_read.create_user%TYPE DEFAULT NULL,
        create_user_nin               IN BOOLEAN := TRUE,
        create_time_in                IN vital_sign_read.create_time%TYPE DEFAULT NULL,
        create_time_nin               IN BOOLEAN := TRUE,
        create_institution_in         IN vital_sign_read.create_institution%TYPE DEFAULT NULL,
        create_institution_nin        IN BOOLEAN := TRUE,
        update_user_in                IN vital_sign_read.update_user%TYPE DEFAULT NULL,
        update_user_nin               IN BOOLEAN := TRUE,
        update_time_in                IN vital_sign_read.update_time%TYPE DEFAULT NULL,
        update_time_nin               IN BOOLEAN := TRUE,
        update_institution_in         IN vital_sign_read.update_institution%TYPE DEFAULT NULL,
        update_institution_nin        IN BOOLEAN := TRUE,
        id_cancel_reason_in           IN vital_sign_read.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin          IN BOOLEAN := TRUE,
        id_unit_measure_sel_in        IN vital_sign_read.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_unit_measure_sel_nin       IN BOOLEAN := TRUE,
        id_edit_reason_in             IN vital_sign_read.id_edit_reason%TYPE DEFAULT NULL,
        id_edit_reason_nin            IN BOOLEAN := TRUE,
        value_high_in                 IN vital_sign_read.value_high%TYPE DEFAULT NULL,
        value_high_nin                IN BOOLEAN := TRUE,
        value_low_in                  IN vital_sign_read.value_low%TYPE DEFAULT NULL,
        value_low_nin                 IN BOOLEAN := TRUE,
        id_epis_documentation_in      IN vital_sign_read.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_documentation_nin     IN BOOLEAN := TRUE,
        where_in                      IN VARCHAR2,
        handle_error_in               IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_vital_sign_in              => id_vital_sign_in,
            id_vital_sign_nin             => id_vital_sign_nin,
            id_vital_sign_desc_in         => id_vital_sign_desc_in,
            id_vital_sign_desc_nin        => id_vital_sign_desc_nin,
            id_episode_in                 => id_episode_in,
            id_episode_nin                => id_episode_nin,
            value_in                      => value_in,
            value_nin                     => value_nin,
            flg_state_in                  => flg_state_in,
            flg_state_nin                 => flg_state_nin,
            id_prof_read_in               => id_prof_read_in,
            id_prof_read_nin              => id_prof_read_nin,
            id_prof_cancel_in             => id_prof_cancel_in,
            id_prof_cancel_nin            => id_prof_cancel_nin,
            notes_cancel_in               => notes_cancel_in,
            notes_cancel_nin              => notes_cancel_nin,
            id_patient_in                 => id_patient_in,
            id_patient_nin                => id_patient_nin,
            id_monitorization_vs_plan_in  => id_monitorization_vs_plan_in,
            id_monitorization_vs_plan_nin => id_monitorization_vs_plan_nin,
            id_institution_read_in        => id_institution_read_in,
            id_institution_read_nin       => id_institution_read_nin,
            id_software_read_in           => id_software_read_in,
            id_software_read_nin          => id_software_read_nin,
            id_institution_cancel_in      => id_institution_cancel_in,
            id_institution_cancel_nin     => id_institution_cancel_nin,
            id_software_cancel_in         => id_software_cancel_in,
            id_software_cancel_nin        => id_software_cancel_nin,
            id_vital_sign_notes_in        => id_vital_sign_notes_in,
            id_vital_sign_notes_nin       => id_vital_sign_notes_nin,
            id_epis_triage_in             => id_epis_triage_in,
            id_epis_triage_nin            => id_epis_triage_nin,
            id_unit_measure_in            => id_unit_measure_in,
            id_unit_measure_nin           => id_unit_measure_nin,
            flg_most_freq_in              => flg_most_freq_in,
            flg_most_freq_nin             => flg_most_freq_nin,
            dt_vital_sign_read_tstz_in    => dt_vital_sign_read_tstz_in,
            dt_vital_sign_read_tstz_nin   => dt_vital_sign_read_tstz_nin,
            dt_cancel_tstz_in             => dt_cancel_tstz_in,
            dt_cancel_tstz_nin            => dt_cancel_tstz_nin,
            dt_registry_in                => dt_registry_in,
            dt_registry_nin               => dt_registry_nin,
            id_vs_scales_element_in       => id_vs_scales_element_in,
            id_vs_scales_element_nin      => id_vs_scales_element_nin,
            create_user_in                => create_user_in,
            create_user_nin               => create_user_nin,
            create_time_in                => create_time_in,
            create_time_nin               => create_time_nin,
            create_institution_in         => create_institution_in,
            create_institution_nin        => create_institution_nin,
            update_user_in                => update_user_in,
            update_user_nin               => update_user_nin,
            update_time_in                => update_time_in,
            update_time_nin               => update_time_nin,
            update_institution_in         => update_institution_in,
            update_institution_nin        => update_institution_nin,
            id_cancel_reason_in           => id_cancel_reason_in,
            id_cancel_reason_nin          => id_cancel_reason_nin,
            id_unit_measure_sel_in        => id_unit_measure_sel_in,
            id_unit_measure_sel_nin       => id_unit_measure_sel_nin,
            id_edit_reason_in             => id_edit_reason_in,
            id_edit_reason_nin            => id_edit_reason_nin,
            value_high_in                 => value_high_in,
            value_high_nin                => value_high_nin,
            value_low_in                  => value_low_in,
            value_low_nin                 => value_low_nin,
            id_epis_documentation_in      => id_epis_documentation_in,
            id_epis_documentation_nin     => id_epis_documentation_nin,
            where_in                      => where_in,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
    END upd;

    --Update/insert columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_vital_sign_read_in        IN vital_sign_read.id_vital_sign_read%TYPE,
        id_vital_sign_in             IN vital_sign_read.id_vital_sign%TYPE DEFAULT NULL,
        id_vital_sign_desc_in        IN vital_sign_read.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_episode_in                IN vital_sign_read.id_episode%TYPE DEFAULT NULL,
        value_in                     IN vital_sign_read.value%TYPE DEFAULT NULL,
        flg_state_in                 IN vital_sign_read.flg_state%TYPE DEFAULT NULL,
        id_prof_read_in              IN vital_sign_read.id_prof_read%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN vital_sign_read.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN vital_sign_read.notes_cancel%TYPE DEFAULT NULL,
        id_patient_in                IN vital_sign_read.id_patient%TYPE DEFAULT NULL,
        id_monitorization_vs_plan_in IN vital_sign_read.id_monitorization_vs_plan%TYPE DEFAULT NULL,
        id_institution_read_in       IN vital_sign_read.id_institution_read%TYPE DEFAULT NULL,
        id_software_read_in          IN vital_sign_read.id_software_read%TYPE DEFAULT NULL,
        id_institution_cancel_in     IN vital_sign_read.id_institution_cancel%TYPE DEFAULT NULL,
        id_software_cancel_in        IN vital_sign_read.id_software_cancel%TYPE DEFAULT NULL,
        id_vital_sign_notes_in       IN vital_sign_read.id_vital_sign_notes%TYPE DEFAULT NULL,
        id_epis_triage_in            IN vital_sign_read.id_epis_triage%TYPE DEFAULT NULL,
        id_unit_measure_in           IN vital_sign_read.id_unit_measure%TYPE DEFAULT NULL,
        flg_most_freq_in             IN vital_sign_read.flg_most_freq%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_in   IN vital_sign_read.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN vital_sign_read.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_registry_in               IN vital_sign_read.dt_registry%TYPE DEFAULT NULL,
        id_vs_scales_element_in      IN vital_sign_read.id_vs_scales_element%TYPE DEFAULT NULL,
        create_user_in               IN vital_sign_read.create_user%TYPE DEFAULT NULL,
        create_time_in               IN vital_sign_read.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN vital_sign_read.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN vital_sign_read.update_user%TYPE DEFAULT NULL,
        update_time_in               IN vital_sign_read.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN vital_sign_read.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN vital_sign_read.id_cancel_reason%TYPE DEFAULT NULL,
        id_unit_measure_sel_in       IN vital_sign_read.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_edit_reason_in            IN vital_sign_read.id_edit_reason%TYPE DEFAULT NULL,
        value_high_in                IN vital_sign_read.value_high%TYPE DEFAULT NULL,
        value_low_in                 IN vital_sign_read.value_low%TYPE DEFAULT NULL,
        id_epis_documentation_in     IN vital_sign_read.id_epis_documentation%TYPE DEFAULT NULL,
        handle_error_in              IN BOOLEAN := FALSE,
        rows_out                     IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_vital_sign_read_in        => id_vital_sign_read_in,
            id_vital_sign_in             => id_vital_sign_in,
            id_vital_sign_desc_in        => id_vital_sign_desc_in,
            id_episode_in                => id_episode_in,
            value_in                     => value_in,
            flg_state_in                 => flg_state_in,
            id_prof_read_in              => id_prof_read_in,
            id_prof_cancel_in            => id_prof_cancel_in,
            notes_cancel_in              => notes_cancel_in,
            id_patient_in                => id_patient_in,
            id_monitorization_vs_plan_in => id_monitorization_vs_plan_in,
            id_institution_read_in       => id_institution_read_in,
            id_software_read_in          => id_software_read_in,
            id_institution_cancel_in     => id_institution_cancel_in,
            id_software_cancel_in        => id_software_cancel_in,
            id_vital_sign_notes_in       => id_vital_sign_notes_in,
            id_epis_triage_in            => id_epis_triage_in,
            id_unit_measure_in           => id_unit_measure_in,
            flg_most_freq_in             => flg_most_freq_in,
            dt_vital_sign_read_tstz_in   => dt_vital_sign_read_tstz_in,
            dt_cancel_tstz_in            => dt_cancel_tstz_in,
            dt_registry_in               => dt_registry_in,
            id_vs_scales_element_in      => id_vs_scales_element_in,
            create_user_in               => create_user_in,
            create_time_in               => create_time_in,
            create_institution_in        => create_institution_in,
            update_user_in               => update_user_in,
            update_time_in               => update_time_in,
            update_institution_in        => update_institution_in,
            id_cancel_reason_in          => id_cancel_reason_in,
            id_unit_measure_sel_in       => id_unit_measure_sel_in,
            id_edit_reason_in            => id_edit_reason_in,
            value_high_in                => value_high_in,
            value_low_in                 => value_low_in,
            id_epis_documentation_in     => id_epis_documentation_in,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
        IF SQL%ROWCOUNT = 0
        THEN
            ins(id_vital_sign_read_in        => id_vital_sign_read_in,
                id_vital_sign_in             => id_vital_sign_in,
                id_vital_sign_desc_in        => id_vital_sign_desc_in,
                id_episode_in                => id_episode_in,
                value_in                     => value_in,
                flg_state_in                 => flg_state_in,
                id_prof_read_in              => id_prof_read_in,
                id_prof_cancel_in            => id_prof_cancel_in,
                notes_cancel_in              => notes_cancel_in,
                id_patient_in                => id_patient_in,
                id_monitorization_vs_plan_in => id_monitorization_vs_plan_in,
                id_institution_read_in       => id_institution_read_in,
                id_software_read_in          => id_software_read_in,
                id_institution_cancel_in     => id_institution_cancel_in,
                id_software_cancel_in        => id_software_cancel_in,
                id_vital_sign_notes_in       => id_vital_sign_notes_in,
                id_epis_triage_in            => id_epis_triage_in,
                id_unit_measure_in           => id_unit_measure_in,
                flg_most_freq_in             => flg_most_freq_in,
                dt_vital_sign_read_tstz_in   => dt_vital_sign_read_tstz_in,
                dt_cancel_tstz_in            => dt_cancel_tstz_in,
                dt_registry_in               => dt_registry_in,
                id_vs_scales_element_in      => id_vs_scales_element_in,
                create_user_in               => create_user_in,
                create_time_in               => create_time_in,
                create_institution_in        => create_institution_in,
                update_user_in               => update_user_in,
                update_time_in               => update_time_in,
                update_institution_in        => update_institution_in,
                id_cancel_reason_in          => id_cancel_reason_in,
                id_unit_measure_sel_in       => id_unit_measure_sel_in,
                id_edit_reason_in            => id_edit_reason_in,
                value_high_in                => value_high_in,
                value_low_in                 => value_low_in,
                id_epis_documentation_in     => id_epis_documentation_in,
                handle_error_in              => handle_error_in,
                rows_out                     => rows_out);
        END IF;
    END upd_ins;

    --Update/insert columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_vital_sign_read_in        IN vital_sign_read.id_vital_sign_read%TYPE,
        id_vital_sign_in             IN vital_sign_read.id_vital_sign%TYPE DEFAULT NULL,
        id_vital_sign_desc_in        IN vital_sign_read.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_episode_in                IN vital_sign_read.id_episode%TYPE DEFAULT NULL,
        value_in                     IN vital_sign_read.value%TYPE DEFAULT NULL,
        flg_state_in                 IN vital_sign_read.flg_state%TYPE DEFAULT NULL,
        id_prof_read_in              IN vital_sign_read.id_prof_read%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN vital_sign_read.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN vital_sign_read.notes_cancel%TYPE DEFAULT NULL,
        id_patient_in                IN vital_sign_read.id_patient%TYPE DEFAULT NULL,
        id_monitorization_vs_plan_in IN vital_sign_read.id_monitorization_vs_plan%TYPE DEFAULT NULL,
        id_institution_read_in       IN vital_sign_read.id_institution_read%TYPE DEFAULT NULL,
        id_software_read_in          IN vital_sign_read.id_software_read%TYPE DEFAULT NULL,
        id_institution_cancel_in     IN vital_sign_read.id_institution_cancel%TYPE DEFAULT NULL,
        id_software_cancel_in        IN vital_sign_read.id_software_cancel%TYPE DEFAULT NULL,
        id_vital_sign_notes_in       IN vital_sign_read.id_vital_sign_notes%TYPE DEFAULT NULL,
        id_epis_triage_in            IN vital_sign_read.id_epis_triage%TYPE DEFAULT NULL,
        id_unit_measure_in           IN vital_sign_read.id_unit_measure%TYPE DEFAULT NULL,
        flg_most_freq_in             IN vital_sign_read.flg_most_freq%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_in   IN vital_sign_read.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN vital_sign_read.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_registry_in               IN vital_sign_read.dt_registry%TYPE DEFAULT NULL,
        id_vs_scales_element_in      IN vital_sign_read.id_vs_scales_element%TYPE DEFAULT NULL,
        create_user_in               IN vital_sign_read.create_user%TYPE DEFAULT NULL,
        create_time_in               IN vital_sign_read.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN vital_sign_read.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN vital_sign_read.update_user%TYPE DEFAULT NULL,
        update_time_in               IN vital_sign_read.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN vital_sign_read.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN vital_sign_read.id_cancel_reason%TYPE DEFAULT NULL,
        id_unit_measure_sel_in       IN vital_sign_read.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_edit_reason_in            IN vital_sign_read.id_edit_reason%TYPE DEFAULT NULL,
        value_high_in                IN vital_sign_read.value_high%TYPE DEFAULT NULL,
        value_low_in                 IN vital_sign_read.value_low%TYPE DEFAULT NULL,
        id_epis_documentation_in     IN vital_sign_read.id_epis_documentation%TYPE DEFAULT NULL,
        handle_error_in              IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd_ins(id_vital_sign_read_in,
                id_vital_sign_in,
                id_vital_sign_desc_in,
                id_episode_in,
                value_in,
                flg_state_in,
                id_prof_read_in,
                id_prof_cancel_in,
                notes_cancel_in,
                id_patient_in,
                id_monitorization_vs_plan_in,
                id_institution_read_in,
                id_software_read_in,
                id_institution_cancel_in,
                id_software_cancel_in,
                id_vital_sign_notes_in,
                id_epis_triage_in,
                id_unit_measure_in,
                flg_most_freq_in,
                dt_vital_sign_read_tstz_in,
                dt_cancel_tstz_in,
                dt_registry_in,
                id_vs_scales_element_in,
                create_user_in,
                create_time_in,
                create_institution_in,
                update_user_in,
                update_time_in,
                update_institution_in,
                id_cancel_reason_in,
                id_unit_measure_sel_in,
                id_edit_reason_in,
                value_high_in,
                value_low_in,
                id_epis_documentation_in,
                handle_error_in,
                rows_out);
    END upd_ins;

    --Update by record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN vital_sign_read%ROWTYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_vital_sign_read_in        => rec_in.id_vital_sign_read,
            id_vital_sign_in             => rec_in.id_vital_sign,
            id_vital_sign_desc_in        => rec_in.id_vital_sign_desc,
            id_episode_in                => rec_in.id_episode,
            value_in                     => rec_in.value,
            flg_state_in                 => rec_in.flg_state,
            id_prof_read_in              => rec_in.id_prof_read,
            id_prof_cancel_in            => rec_in.id_prof_cancel,
            notes_cancel_in              => rec_in.notes_cancel,
            id_patient_in                => rec_in.id_patient,
            id_monitorization_vs_plan_in => rec_in.id_monitorization_vs_plan,
            id_institution_read_in       => rec_in.id_institution_read,
            id_software_read_in          => rec_in.id_software_read,
            id_institution_cancel_in     => rec_in.id_institution_cancel,
            id_software_cancel_in        => rec_in.id_software_cancel,
            id_vital_sign_notes_in       => rec_in.id_vital_sign_notes,
            id_epis_triage_in            => rec_in.id_epis_triage,
            id_unit_measure_in           => rec_in.id_unit_measure,
            flg_most_freq_in             => rec_in.flg_most_freq,
            dt_vital_sign_read_tstz_in   => rec_in.dt_vital_sign_read_tstz,
            dt_cancel_tstz_in            => rec_in.dt_cancel_tstz,
            dt_registry_in               => rec_in.dt_registry,
            id_vs_scales_element_in      => rec_in.id_vs_scales_element,
            create_user_in               => rec_in.create_user,
            create_time_in               => rec_in.create_time,
            create_institution_in        => rec_in.create_institution,
            update_user_in               => rec_in.update_user,
            update_time_in               => rec_in.update_time,
            update_institution_in        => rec_in.update_institution,
            id_cancel_reason_in          => rec_in.id_cancel_reason,
            id_unit_measure_sel_in       => rec_in.id_unit_measure_sel,
            id_edit_reason_in            => rec_in.id_edit_reason,
            value_high_in                => rec_in.value_high,
            value_low_in                 => rec_in.value_low,
            id_epis_documentation_in     => rec_in.id_epis_documentation,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
    END upd;

    --Update by record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN vital_sign_read%ROWTYPE,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_vital_sign_read_in        => rec_in.id_vital_sign_read,
            id_vital_sign_in             => rec_in.id_vital_sign,
            id_vital_sign_desc_in        => rec_in.id_vital_sign_desc,
            id_episode_in                => rec_in.id_episode,
            value_in                     => rec_in.value,
            flg_state_in                 => rec_in.flg_state,
            id_prof_read_in              => rec_in.id_prof_read,
            id_prof_cancel_in            => rec_in.id_prof_cancel,
            notes_cancel_in              => rec_in.notes_cancel,
            id_patient_in                => rec_in.id_patient,
            id_monitorization_vs_plan_in => rec_in.id_monitorization_vs_plan,
            id_institution_read_in       => rec_in.id_institution_read,
            id_software_read_in          => rec_in.id_software_read,
            id_institution_cancel_in     => rec_in.id_institution_cancel,
            id_software_cancel_in        => rec_in.id_software_cancel,
            id_vital_sign_notes_in       => rec_in.id_vital_sign_notes,
            id_epis_triage_in            => rec_in.id_epis_triage,
            id_unit_measure_in           => rec_in.id_unit_measure,
            flg_most_freq_in             => rec_in.flg_most_freq,
            dt_vital_sign_read_tstz_in   => rec_in.dt_vital_sign_read_tstz,
            dt_cancel_tstz_in            => rec_in.dt_cancel_tstz,
            dt_registry_in               => rec_in.dt_registry,
            id_vs_scales_element_in      => rec_in.id_vs_scales_element,
            create_user_in               => rec_in.create_user,
            create_time_in               => rec_in.create_time,
            create_institution_in        => rec_in.create_institution,
            update_user_in               => rec_in.update_user,
            update_time_in               => rec_in.update_time,
            update_institution_in        => rec_in.update_institution,
            id_cancel_reason_in          => rec_in.id_cancel_reason,
            id_unit_measure_sel_in       => rec_in.id_unit_measure_sel,
            id_edit_reason_in            => rec_in.id_edit_reason,
            value_high_in                => rec_in.value_high,
            value_low_in                 => rec_in.value_low,
            id_epis_documentation_in     => rec_in.id_epis_documentation,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
    END upd;

    --Update with collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN vital_sign_read_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := FALSE,
        rows_out          IN OUT table_varchar
    ) IS
        l_id_vital_sign_read        id_vital_sign_read_cc;
        l_id_vital_sign             id_vital_sign_cc;
        l_id_vital_sign_desc        id_vital_sign_desc_cc;
        l_id_episode                id_episode_cc;
        l_value                     value_cc;
        l_flg_state                 flg_state_cc;
        l_id_prof_read              id_prof_read_cc;
        l_id_prof_cancel            id_prof_cancel_cc;
        l_notes_cancel              notes_cancel_cc;
        l_id_patient                id_patient_cc;
        l_id_monitorization_vs_plan id_monitorization_vs_plan_cc;
        l_id_institution_read       id_institution_read_cc;
        l_id_software_read          id_software_read_cc;
        l_id_institution_cancel     id_institution_cancel_cc;
        l_id_software_cancel        id_software_cancel_cc;
        l_id_vital_sign_notes       id_vital_sign_notes_cc;
        l_id_epis_triage            id_epis_triage_cc;
        l_id_unit_measure           id_unit_measure_cc;
        l_flg_most_freq             flg_most_freq_cc;
        l_dt_vital_sign_read_tstz   dt_vital_sign_read_tstz_cc;
        l_dt_cancel_tstz            dt_cancel_tstz_cc;
        l_dt_registry               dt_registry_cc;
        l_id_vs_scales_element      id_vs_scales_element_cc;
        l_create_user               create_user_cc;
        l_create_time               create_time_cc;
        l_create_institution        create_institution_cc;
        l_update_user               update_user_cc;
        l_update_time               update_time_cc;
        l_update_institution        update_institution_cc;
        l_id_cancel_reason          id_cancel_reason_cc;
        l_id_unit_measure_sel       id_unit_measure_sel_cc;
        l_id_edit_reason            id_edit_reason_cc;
        l_value_high                value_high_cc;
        l_value_low                 value_low_cc;
        l_id_epis_documentation     id_epis_documentation_cc;
    BEGIN
        FOR i IN col_in.first .. col_in.last
        LOOP
            l_id_vital_sign_read(i) := col_in(i).id_vital_sign_read;
            l_id_vital_sign(i) := col_in(i).id_vital_sign;
            l_id_vital_sign_desc(i) := col_in(i).id_vital_sign_desc;
            l_id_episode(i) := col_in(i).id_episode;
            l_value(i) := col_in(i).value;
            l_flg_state(i) := col_in(i).flg_state;
            l_id_prof_read(i) := col_in(i).id_prof_read;
            l_id_prof_cancel(i) := col_in(i).id_prof_cancel;
            l_notes_cancel(i) := col_in(i).notes_cancel;
            l_id_patient(i) := col_in(i).id_patient;
            l_id_monitorization_vs_plan(i) := col_in(i).id_monitorization_vs_plan;
            l_id_institution_read(i) := col_in(i).id_institution_read;
            l_id_software_read(i) := col_in(i).id_software_read;
            l_id_institution_cancel(i) := col_in(i).id_institution_cancel;
            l_id_software_cancel(i) := col_in(i).id_software_cancel;
            l_id_vital_sign_notes(i) := col_in(i).id_vital_sign_notes;
            l_id_epis_triage(i) := col_in(i).id_epis_triage;
            l_id_unit_measure(i) := col_in(i).id_unit_measure;
            l_flg_most_freq(i) := col_in(i).flg_most_freq;
            l_dt_vital_sign_read_tstz(i) := col_in(i).dt_vital_sign_read_tstz;
            l_dt_cancel_tstz(i) := col_in(i).dt_cancel_tstz;
            l_dt_registry(i) := col_in(i).dt_registry;
            l_id_vs_scales_element(i) := col_in(i).id_vs_scales_element;
            l_create_user(i) := col_in(i).create_user;
            l_create_time(i) := col_in(i).create_time;
            l_create_institution(i) := col_in(i).create_institution;
            l_update_user(i) := col_in(i).update_user;
            l_update_time(i) := col_in(i).update_time;
            l_update_institution(i) := col_in(i).update_institution;
            l_id_cancel_reason(i) := col_in(i).id_cancel_reason;
            l_id_unit_measure_sel(i) := col_in(i).id_unit_measure_sel;
            l_id_edit_reason(i) := col_in(i).id_edit_reason;
            l_value_high(i) := col_in(i).value_high;
            l_value_low(i) := col_in(i).value_low;
            l_id_epis_documentation(i) := col_in(i).id_epis_documentation;
        END LOOP;
        IF nvl(ignore_if_null_in, FALSE)
        THEN
            -- Set any columns to their current values
            -- if incoming value is NULL.
            -- Put WHEN clause on column-level triggers!
            FORALL i IN col_in.first .. col_in.last
                UPDATE vital_sign_read
                   SET id_vital_sign             = nvl(l_id_vital_sign(i), id_vital_sign),
                       id_vital_sign_desc        = nvl(l_id_vital_sign_desc(i), id_vital_sign_desc),
                       id_episode                = nvl(l_id_episode(i), id_episode),
                       VALUE                     = nvl(l_value(i), VALUE),
                       flg_state                 = nvl(l_flg_state(i), flg_state),
                       id_prof_read              = nvl(l_id_prof_read(i), id_prof_read),
                       id_prof_cancel            = nvl(l_id_prof_cancel(i), id_prof_cancel),
                       notes_cancel              = nvl(l_notes_cancel(i), notes_cancel),
                       id_patient                = nvl(l_id_patient(i), id_patient),
                       id_monitorization_vs_plan = nvl(l_id_monitorization_vs_plan(i), id_monitorization_vs_plan),
                       id_institution_read       = nvl(l_id_institution_read(i), id_institution_read),
                       id_software_read          = nvl(l_id_software_read(i), id_software_read),
                       id_institution_cancel     = nvl(l_id_institution_cancel(i), id_institution_cancel),
                       id_software_cancel        = nvl(l_id_software_cancel(i), id_software_cancel),
                       id_vital_sign_notes       = nvl(l_id_vital_sign_notes(i), id_vital_sign_notes),
                       id_epis_triage            = nvl(l_id_epis_triage(i), id_epis_triage),
                       id_unit_measure           = nvl(l_id_unit_measure(i), id_unit_measure),
                       flg_most_freq             = nvl(l_flg_most_freq(i), flg_most_freq),
                       dt_vital_sign_read_tstz   = nvl(l_dt_vital_sign_read_tstz(i), dt_vital_sign_read_tstz),
                       dt_cancel_tstz            = nvl(l_dt_cancel_tstz(i), dt_cancel_tstz),
                       dt_registry               = nvl(l_dt_registry(i), dt_registry),
                       id_vs_scales_element      = nvl(l_id_vs_scales_element(i), id_vs_scales_element),
                       create_user               = nvl(l_create_user(i), create_user),
                       create_time               = nvl(l_create_time(i), create_time),
                       create_institution        = nvl(l_create_institution(i), create_institution),
                       update_user               = nvl(l_update_user(i), update_user),
                       update_time               = nvl(l_update_time(i), update_time),
                       update_institution        = nvl(l_update_institution(i), update_institution),
                       id_cancel_reason          = nvl(l_id_cancel_reason(i), id_cancel_reason),
                       id_unit_measure_sel       = nvl(l_id_unit_measure_sel(i), id_unit_measure_sel),
                       id_edit_reason            = nvl(l_id_edit_reason(i), id_edit_reason),
                       value_high                = nvl(l_value_high(i), value_high),
                       value_low                 = nvl(l_value_low(i), value_low),
                       id_epis_documentation     = nvl(l_id_epis_documentation(i), id_epis_documentation)
                 WHERE id_vital_sign_read = l_id_vital_sign_read(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        ELSE
            FORALL i IN col_in.first .. col_in.last
                UPDATE vital_sign_read
                   SET id_vital_sign             = l_id_vital_sign(i),
                       id_vital_sign_desc        = l_id_vital_sign_desc(i),
                       id_episode                = l_id_episode(i),
                       VALUE                     = l_value(i),
                       flg_state                 = l_flg_state(i),
                       id_prof_read              = l_id_prof_read(i),
                       id_prof_cancel            = l_id_prof_cancel(i),
                       notes_cancel              = l_notes_cancel(i),
                       id_patient                = l_id_patient(i),
                       id_monitorization_vs_plan = l_id_monitorization_vs_plan(i),
                       id_institution_read       = l_id_institution_read(i),
                       id_software_read          = l_id_software_read(i),
                       id_institution_cancel     = l_id_institution_cancel(i),
                       id_software_cancel        = l_id_software_cancel(i),
                       id_vital_sign_notes       = l_id_vital_sign_notes(i),
                       id_epis_triage            = l_id_epis_triage(i),
                       id_unit_measure           = l_id_unit_measure(i),
                       flg_most_freq             = l_flg_most_freq(i),
                       dt_vital_sign_read_tstz   = l_dt_vital_sign_read_tstz(i),
                       dt_cancel_tstz            = l_dt_cancel_tstz(i),
                       dt_registry               = l_dt_registry(i),
                       id_vs_scales_element      = l_id_vs_scales_element(i),
                       create_user               = l_create_user(i),
                       create_time               = l_create_time(i),
                       create_institution        = l_create_institution(i),
                       update_user               = l_update_user(i),
                       update_time               = l_update_time(i),
                       update_institution        = l_update_institution(i),
                       id_cancel_reason          = l_id_cancel_reason(i),
                       id_unit_measure_sel       = l_id_unit_measure_sel(i),
                       id_edit_reason            = l_id_edit_reason(i),
                       value_high                = l_value_high(i),
                       value_low                 = l_value_low(i),
                       id_epis_documentation     = l_id_epis_documentation(i)
                 WHERE id_vital_sign_read = l_id_vital_sign_read(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update with collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN vital_sign_read_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(col_in, ignore_if_null_in, handle_error_in, rows_out);
    END upd;

    --Dynamic update string
    FUNCTION dynupdstr
    (
        colname_in IN all_tab_columns.column_name%TYPE,
        where_in   IN VARCHAR2 := NULL
    ) RETURN VARCHAR2 IS
    BEGIN
        RETURN 'BEGIN UPDATE vital_sign_read
SET ' || colname_in || ' = :value
 WHERE ' || nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;';
    END dynupdstr;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (with rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := FALSE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN UPDATE vital_sign_read
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    END increment_onecol;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (without rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        EXECUTE IMMEDIATE 'UPDATE vital_sign_read
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1');
    END increment_onecol;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_vital_sign_read_in IN vital_sign_read.id_vital_sign_read%TYPE,
        handle_error_in       IN BOOLEAN := FALSE,
        rows_out              OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read
         WHERE id_vital_sign_read = id_vital_sign_read_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_vital_sign_read_in IN vital_sign_read.id_vital_sign_read%TYPE,
        handle_error_in       IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del(id_vital_sign_read_in => id_vital_sign_read_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del;

    -- Delete all rows for this VSR_CR_FK foreign key value
    PROCEDURE del_vsr_cr_fk
    (
        id_cancel_reason_in IN vital_sign_read.id_cancel_reason%TYPE,
        handle_error_in     IN BOOLEAN := FALSE,
        rows_out            OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read
         WHERE id_cancel_reason = id_cancel_reason_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsr_cr_fk;

    -- Delete all rows for this VSR_EPIS_FK foreign key value
    PROCEDURE del_vsr_epis_fk
    (
        id_episode_in   IN vital_sign_read.id_episode%TYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read
         WHERE id_episode = id_episode_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsr_epis_fk;

    -- Delete all rows for this VSR_ER_FK foreign key value
    PROCEDURE del_vsr_er_fk
    (
        id_edit_reason_in IN vital_sign_read.id_edit_reason%TYPE,
        handle_error_in   IN BOOLEAN := FALSE,
        rows_out          OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read
         WHERE id_edit_reason = id_edit_reason_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsr_er_fk;

    -- Delete all rows for this VSR_ETRG_FK foreign key value
    PROCEDURE del_vsr_etrg_fk
    (
        id_epis_triage_in IN vital_sign_read.id_epis_triage%TYPE,
        handle_error_in   IN BOOLEAN := FALSE,
        rows_out          OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read
         WHERE id_epis_triage = id_epis_triage_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsr_etrg_fk;

    -- Delete all rows for this VSR_INST_FK foreign key value
    PROCEDURE del_vsr_inst_fk
    (
        id_institution_read_in IN vital_sign_read.id_institution_read%TYPE,
        handle_error_in        IN BOOLEAN := FALSE,
        rows_out               OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read
         WHERE id_institution_read = id_institution_read_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsr_inst_fk;

    -- Delete all rows for this VSR_INST_FK2 foreign key value
    PROCEDURE del_vsr_inst_fk2
    (
        id_institution_cancel_in IN vital_sign_read.id_institution_cancel%TYPE,
        handle_error_in          IN BOOLEAN := FALSE,
        rows_out                 OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read
         WHERE id_institution_cancel = id_institution_cancel_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsr_inst_fk2;

    -- Delete all rows for this VSR_MVSP_FK foreign key value
    PROCEDURE del_vsr_mvsp_fk
    (
        id_monitorization_vs_plan_in IN vital_sign_read.id_monitorization_vs_plan%TYPE,
        handle_error_in              IN BOOLEAN := FALSE,
        rows_out                     OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read
         WHERE id_monitorization_vs_plan = id_monitorization_vs_plan_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsr_mvsp_fk;

    -- Delete all rows for this VSR_PAT_FK foreign key value
    PROCEDURE del_vsr_pat_fk
    (
        id_patient_in   IN vital_sign_read.id_patient%TYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read
         WHERE id_patient = id_patient_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsr_pat_fk;

    -- Delete all rows for this VSR_PROF_CANCEL_FK foreign key value
    PROCEDURE del_vsr_prof_cancel_fk
    (
        id_prof_cancel_in IN vital_sign_read.id_prof_cancel%TYPE,
        handle_error_in   IN BOOLEAN := FALSE,
        rows_out          OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read
         WHERE id_prof_cancel = id_prof_cancel_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsr_prof_cancel_fk;

    -- Delete all rows for this VSR_PROF_READ_FK foreign key value
    PROCEDURE del_vsr_prof_read_fk
    (
        id_prof_read_in IN vital_sign_read.id_prof_read%TYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read
         WHERE id_prof_read = id_prof_read_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsr_prof_read_fk;

    -- Delete all rows for this VSR_SVS_FK foreign key value
    PROCEDURE del_vsr_svs_fk
    (
        id_vital_sign_in IN vital_sign_read.id_vital_sign%TYPE,
        handle_error_in  IN BOOLEAN := FALSE,
        rows_out         OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read
         WHERE id_vital_sign = id_vital_sign_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsr_svs_fk;

    -- Delete all rows for this VSR_S_FK foreign key value
    PROCEDURE del_vsr_s_fk
    (
        id_software_read_in IN vital_sign_read.id_software_read%TYPE,
        handle_error_in     IN BOOLEAN := FALSE,
        rows_out            OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read
         WHERE id_software_read = id_software_read_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsr_s_fk;

    -- Delete all rows for this VSR_S_FK2 foreign key value
    PROCEDURE del_vsr_s_fk2
    (
        id_software_cancel_in IN vital_sign_read.id_software_cancel%TYPE,
        handle_error_in       IN BOOLEAN := FALSE,
        rows_out              OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read
         WHERE id_software_cancel = id_software_cancel_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsr_s_fk2;

    -- Delete all rows for this VSR_UMS_FK foreign key value
    PROCEDURE del_vsr_ums_fk
    (
        id_unit_measure_sel_in IN vital_sign_read.id_unit_measure_sel%TYPE,
        handle_error_in        IN BOOLEAN := FALSE,
        rows_out               OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read
         WHERE id_unit_measure_sel = id_unit_measure_sel_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsr_ums_fk;

    -- Delete all rows for this VSR_UNITM_FK foreign key value
    PROCEDURE del_vsr_unitm_fk
    (
        id_unit_measure_in IN vital_sign_read.id_unit_measure%TYPE,
        handle_error_in    IN BOOLEAN := FALSE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read
         WHERE id_unit_measure = id_unit_measure_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsr_unitm_fk;

    -- Delete all rows for this VSR_VSD_FK foreign key value
    PROCEDURE del_vsr_vsd_fk
    (
        id_vital_sign_desc_in IN vital_sign_read.id_vital_sign_desc%TYPE,
        handle_error_in       IN BOOLEAN := FALSE,
        rows_out              OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read
         WHERE id_vital_sign_desc = id_vital_sign_desc_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsr_vsd_fk;

    -- Delete all rows for this VSR_VSNOTES_FK foreign key value
    PROCEDURE del_vsr_vsnotes_fk
    (
        id_vital_sign_notes_in IN vital_sign_read.id_vital_sign_notes%TYPE,
        handle_error_in        IN BOOLEAN := FALSE,
        rows_out               OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read
         WHERE id_vital_sign_notes = id_vital_sign_notes_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsr_vsnotes_fk;

    -- Delete all rows for this VSR_VSSE_FK foreign key value
    PROCEDURE del_vsr_vsse_fk
    (
        id_vs_scales_element_in IN vital_sign_read.id_vs_scales_element%TYPE,
        handle_error_in         IN BOOLEAN := FALSE,
        rows_out                OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read
         WHERE id_vs_scales_element = id_vs_scales_element_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsr_vsse_fk;

    -- Delete all rows for this VSR_CR_FK foreign key value
    PROCEDURE del_vsr_cr_fk
    (
        id_cancel_reason_in IN vital_sign_read.id_cancel_reason%TYPE,
        handle_error_in     IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsr_cr_fk(id_cancel_reason_in => id_cancel_reason_in,
                      handle_error_in     => handle_error_in,
                      rows_out            => rows_out);
    END del_vsr_cr_fk;

    -- Delete all rows for this VSR_EPIS_FK foreign key value
    PROCEDURE del_vsr_epis_fk
    (
        id_episode_in   IN vital_sign_read.id_episode%TYPE,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsr_epis_fk(id_episode_in => id_episode_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_vsr_epis_fk;

    -- Delete all rows for this VSR_ER_FK foreign key value
    PROCEDURE del_vsr_er_fk
    (
        id_edit_reason_in IN vital_sign_read.id_edit_reason%TYPE,
        handle_error_in   IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsr_er_fk(id_edit_reason_in => id_edit_reason_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_vsr_er_fk;

    -- Delete all rows for this VSR_ETRG_FK foreign key value
    PROCEDURE del_vsr_etrg_fk
    (
        id_epis_triage_in IN vital_sign_read.id_epis_triage%TYPE,
        handle_error_in   IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsr_etrg_fk(id_epis_triage_in => id_epis_triage_in,
                        handle_error_in   => handle_error_in,
                        rows_out          => rows_out);
    END del_vsr_etrg_fk;

    -- Delete all rows for this VSR_INST_FK foreign key value
    PROCEDURE del_vsr_inst_fk
    (
        id_institution_read_in IN vital_sign_read.id_institution_read%TYPE,
        handle_error_in        IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsr_inst_fk(id_institution_read_in => id_institution_read_in,
                        handle_error_in        => handle_error_in,
                        rows_out               => rows_out);
    END del_vsr_inst_fk;

    -- Delete all rows for this VSR_INST_FK2 foreign key value
    PROCEDURE del_vsr_inst_fk2
    (
        id_institution_cancel_in IN vital_sign_read.id_institution_cancel%TYPE,
        handle_error_in          IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsr_inst_fk2(id_institution_cancel_in => id_institution_cancel_in,
                         handle_error_in          => handle_error_in,
                         rows_out                 => rows_out);
    END del_vsr_inst_fk2;

    -- Delete all rows for this VSR_MVSP_FK foreign key value
    PROCEDURE del_vsr_mvsp_fk
    (
        id_monitorization_vs_plan_in IN vital_sign_read.id_monitorization_vs_plan%TYPE,
        handle_error_in              IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsr_mvsp_fk(id_monitorization_vs_plan_in => id_monitorization_vs_plan_in,
                        handle_error_in              => handle_error_in,
                        rows_out                     => rows_out);
    END del_vsr_mvsp_fk;

    -- Delete all rows for this VSR_PAT_FK foreign key value
    PROCEDURE del_vsr_pat_fk
    (
        id_patient_in   IN vital_sign_read.id_patient%TYPE,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsr_pat_fk(id_patient_in => id_patient_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_vsr_pat_fk;

    -- Delete all rows for this VSR_PROF_CANCEL_FK foreign key value
    PROCEDURE del_vsr_prof_cancel_fk
    (
        id_prof_cancel_in IN vital_sign_read.id_prof_cancel%TYPE,
        handle_error_in   IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsr_prof_cancel_fk(id_prof_cancel_in => id_prof_cancel_in,
                               handle_error_in   => handle_error_in,
                               rows_out          => rows_out);
    END del_vsr_prof_cancel_fk;

    -- Delete all rows for this VSR_PROF_READ_FK foreign key value
    PROCEDURE del_vsr_prof_read_fk
    (
        id_prof_read_in IN vital_sign_read.id_prof_read%TYPE,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsr_prof_read_fk(id_prof_read_in => id_prof_read_in,
                             handle_error_in => handle_error_in,
                             rows_out        => rows_out);
    END del_vsr_prof_read_fk;

    -- Delete all rows for this VSR_SVS_FK foreign key value
    PROCEDURE del_vsr_svs_fk
    (
        id_vital_sign_in IN vital_sign_read.id_vital_sign%TYPE,
        handle_error_in  IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsr_svs_fk(id_vital_sign_in => id_vital_sign_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_vsr_svs_fk;

    -- Delete all rows for this VSR_S_FK foreign key value
    PROCEDURE del_vsr_s_fk
    (
        id_software_read_in IN vital_sign_read.id_software_read%TYPE,
        handle_error_in     IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsr_s_fk(id_software_read_in => id_software_read_in,
                     handle_error_in     => handle_error_in,
                     rows_out            => rows_out);
    END del_vsr_s_fk;

    -- Delete all rows for this VSR_S_FK2 foreign key value
    PROCEDURE del_vsr_s_fk2
    (
        id_software_cancel_in IN vital_sign_read.id_software_cancel%TYPE,
        handle_error_in       IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsr_s_fk2(id_software_cancel_in => id_software_cancel_in,
                      handle_error_in       => handle_error_in,
                      rows_out              => rows_out);
    END del_vsr_s_fk2;

    -- Delete all rows for this VSR_UMS_FK foreign key value
    PROCEDURE del_vsr_ums_fk
    (
        id_unit_measure_sel_in IN vital_sign_read.id_unit_measure_sel%TYPE,
        handle_error_in        IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsr_ums_fk(id_unit_measure_sel_in => id_unit_measure_sel_in,
                       handle_error_in        => handle_error_in,
                       rows_out               => rows_out);
    END del_vsr_ums_fk;

    -- Delete all rows for this VSR_UNITM_FK foreign key value
    PROCEDURE del_vsr_unitm_fk
    (
        id_unit_measure_in IN vital_sign_read.id_unit_measure%TYPE,
        handle_error_in    IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsr_unitm_fk(id_unit_measure_in => id_unit_measure_in,
                         handle_error_in    => handle_error_in,
                         rows_out           => rows_out);
    END del_vsr_unitm_fk;

    -- Delete all rows for this VSR_VSD_FK foreign key value
    PROCEDURE del_vsr_vsd_fk
    (
        id_vital_sign_desc_in IN vital_sign_read.id_vital_sign_desc%TYPE,
        handle_error_in       IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsr_vsd_fk(id_vital_sign_desc_in => id_vital_sign_desc_in,
                       handle_error_in       => handle_error_in,
                       rows_out              => rows_out);
    END del_vsr_vsd_fk;

    -- Delete all rows for this VSR_VSNOTES_FK foreign key value
    PROCEDURE del_vsr_vsnotes_fk
    (
        id_vital_sign_notes_in IN vital_sign_read.id_vital_sign_notes%TYPE,
        handle_error_in        IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsr_vsnotes_fk(id_vital_sign_notes_in => id_vital_sign_notes_in,
                           handle_error_in        => handle_error_in,
                           rows_out               => rows_out);
    END del_vsr_vsnotes_fk;

    -- Delete all rows for this VSR_VSSE_FK foreign key value
    PROCEDURE del_vsr_vsse_fk
    (
        id_vs_scales_element_in IN vital_sign_read.id_vs_scales_element%TYPE,
        handle_error_in         IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsr_vsse_fk(id_vs_scales_element_in => id_vs_scales_element_in,
                        handle_error_in         => handle_error_in,
                        rows_out                => rows_out);
    END del_vsr_vsse_fk;

    -- Deletions using dynamic SQL
    FUNCTION dyndelstr(where_in IN VARCHAR2) RETURN VARCHAR2 IS
    BEGIN
        IF where_in IS NULL
        THEN
            RETURN 'DELETE FROM vital_sign_read';
        ELSE
            RETURN 'DELETE FROM vital_sign_read WHERE ' || where_in;
        END IF;
    END dyndelstr;
    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyndelstr(where_clause_in) ||
                          ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyndelstr(where_clause_in);
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(vital_sign_read_inout IN OUT vital_sign_read%ROWTYPE) IS
    BEGIN
        vital_sign_read_inout.id_vital_sign_read        := NULL;
        vital_sign_read_inout.id_vital_sign             := NULL;
        vital_sign_read_inout.id_vital_sign_desc        := NULL;
        vital_sign_read_inout.id_episode                := NULL;
        vital_sign_read_inout.value                     := NULL;
        vital_sign_read_inout.flg_state                 := NULL;
        vital_sign_read_inout.id_prof_read              := NULL;
        vital_sign_read_inout.id_prof_cancel            := NULL;
        vital_sign_read_inout.notes_cancel              := NULL;
        vital_sign_read_inout.id_patient                := NULL;
        vital_sign_read_inout.id_monitorization_vs_plan := NULL;
        vital_sign_read_inout.id_institution_read       := NULL;
        vital_sign_read_inout.id_software_read          := NULL;
        vital_sign_read_inout.id_institution_cancel     := NULL;
        vital_sign_read_inout.id_software_cancel        := NULL;
        vital_sign_read_inout.id_vital_sign_notes       := NULL;
        vital_sign_read_inout.id_epis_triage            := NULL;
        vital_sign_read_inout.id_unit_measure           := NULL;
        vital_sign_read_inout.flg_most_freq             := NULL;
        vital_sign_read_inout.dt_vital_sign_read_tstz   := NULL;
        vital_sign_read_inout.dt_cancel_tstz            := NULL;
        vital_sign_read_inout.dt_registry               := NULL;
        vital_sign_read_inout.id_vs_scales_element      := NULL;
        vital_sign_read_inout.create_user               := NULL;
        vital_sign_read_inout.create_time               := NULL;
        vital_sign_read_inout.create_institution        := NULL;
        vital_sign_read_inout.update_user               := NULL;
        vital_sign_read_inout.update_time               := NULL;
        vital_sign_read_inout.update_institution        := NULL;
        vital_sign_read_inout.id_cancel_reason          := NULL;
        vital_sign_read_inout.id_unit_measure_sel       := NULL;
        vital_sign_read_inout.id_edit_reason            := NULL;
        vital_sign_read_inout.value_high                := NULL;
        vital_sign_read_inout.value_low                 := NULL;
        vital_sign_read_inout.id_epis_documentation     := NULL;
    END initrec;

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN vital_sign_read%ROWTYPE IS
        l_vital_sign_read vital_sign_read%ROWTYPE;
    BEGIN
        RETURN l_vital_sign_read;
    END initrec;

    --get data from rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN vital_sign_read_tc IS
        data vital_sign_read_tc;
    BEGIN
        SELECT *
          BULK COLLECT
          INTO data
          FROM vital_sign_read
         WHERE ROWID IN (SELECT /*+ OPT_ESTIMATE(TABLE t ROWS=1) */
                          *
                           FROM TABLE(rows_in) t);
        RETURN data;
    END get_data_rowid;

    --get data from rowid (pragma autonomous transacion)
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN vital_sign_read_tc IS
        data vital_sign_read_tc;
        PRAGMA AUTONOMOUS_TRANSACTION;
    BEGIN
        data := get_data_rowid(rows_in);
        COMMIT;
        RETURN data;
    
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'get_data_rowid_pat');
            ROLLBACK;
        
    END get_data_rowid_pat;

BEGIN
    NULL;
END ts_vital_sign_read;
/
