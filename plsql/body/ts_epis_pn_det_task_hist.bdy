/*-- Last Change Revision: $Rev: 2028131 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:44:16 +0100 (ter, 02 ago 2022) $*/
CREATE OR REPLACE PACKAGE BODY ts_epis_pn_det_task_hist
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2021-11-10 12:10:20
| Created By: ALERT
*/
 IS

    e_null_column_value EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_null_column_value, -1400);

    e_existing_fky_reference EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_existing_fky_reference, -2266);

    e_check_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_check_constraint_failure, -2290);

    e_no_parent_key EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_no_parent_key, -2291);

    e_child_record_found EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_child_record_found, -2292);

    e_forall_error EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_forall_error, -24381);

    -- Defined for backward compatibilty.
    e_integ_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_integ_constraint_failure, -2291);

    PROCEDURE ins
    (
        dt_epis_pn_det_task_hist_in IN epis_pn_det_task_hist.dt_epis_pn_det_task_hist%TYPE,
        id_epis_pn_det_task_in      IN epis_pn_det_task_hist.id_epis_pn_det_task%TYPE,
        id_epis_pn_det_in           IN epis_pn_det_task_hist.id_epis_pn_det%TYPE DEFAULT NULL,
        id_task_in                  IN epis_pn_det_task_hist.id_task%TYPE DEFAULT NULL,
        id_task_type_in             IN epis_pn_det_task_hist.id_task_type%TYPE DEFAULT NULL,
        flg_status_in               IN epis_pn_det_task_hist.flg_status%TYPE DEFAULT 'A',
        pn_note_in                  IN epis_pn_det_task_hist.pn_note%TYPE DEFAULT NULL,
        dt_last_update_in           IN epis_pn_det_task_hist.dt_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_in      IN epis_pn_det_task_hist.id_prof_last_update%TYPE DEFAULT NULL,
        flg_table_origin_in         IN epis_pn_det_task_hist.flg_table_origin%TYPE DEFAULT NULL,
        create_user_in              IN epis_pn_det_task_hist.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_pn_det_task_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_pn_det_task_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_pn_det_task_hist.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_pn_det_task_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_pn_det_task_hist.update_institution%TYPE DEFAULT NULL,
        id_task_aggregator_in       IN epis_pn_det_task_hist.id_task_aggregator%TYPE DEFAULT NULL,
        dt_task_in                  IN epis_pn_det_task_hist.dt_task%TYPE DEFAULT NULL,
        id_prof_task_in             IN epis_pn_det_task_hist.id_prof_task%TYPE DEFAULT NULL,
        rank_task_in                IN epis_pn_det_task_hist.rank_task%TYPE DEFAULT NULL,
        id_parent_in                IN epis_pn_det_task_hist.id_parent%TYPE DEFAULT NULL,
        dt_group_import_in          IN epis_pn_det_task_hist.dt_group_import%TYPE DEFAULT NULL,
        id_group_import_in          IN epis_pn_det_task_hist.id_group_import%TYPE DEFAULT NULL,
        code_desc_group_in          IN epis_pn_det_task_hist.code_desc_group%TYPE DEFAULT NULL,
        id_sub_group_import_in      IN epis_pn_det_task_hist.id_sub_group_import%TYPE DEFAULT NULL,
        code_desc_sub_group_in      IN epis_pn_det_task_hist.code_desc_sub_group%TYPE DEFAULT NULL,
        id_group_table_in           IN epis_pn_det_task_hist.id_group_table%TYPE DEFAULT NULL,
        table_position_in           IN epis_pn_det_task_hist.table_position%TYPE DEFAULT NULL,
        flg_action_in               IN epis_pn_det_task_hist.flg_action%TYPE DEFAULT 'A',
        id_sample_type_in           IN epis_pn_det_task_hist.id_sample_type%TYPE DEFAULT NULL,
        code_desc_sample_type_in    IN epis_pn_det_task_hist.code_desc_sample_type%TYPE DEFAULT NULL,
        dt_req_task_in              IN epis_pn_det_task_hist.dt_req_task%TYPE DEFAULT NULL,
        code_desc_group_parent_in   IN epis_pn_det_task_hist.code_desc_group_parent%TYPE DEFAULT NULL,
        instructions_hash_in        IN epis_pn_det_task_hist.instructions_hash%TYPE DEFAULT NULL,
        handle_error_in             IN BOOLEAN := FALSE,
        rows_out                    OUT table_varchar
    ) IS
    BEGIN
        INSERT INTO epis_pn_det_task_hist
            (dt_epis_pn_det_task_hist,
             id_epis_pn_det_task,
             id_epis_pn_det,
             id_task,
             id_task_type,
             flg_status,
             pn_note,
             dt_last_update,
             id_prof_last_update,
             flg_table_origin,
             create_user,
             create_time,
             create_institution,
             update_user,
             update_time,
             update_institution,
             id_task_aggregator,
             dt_task,
             id_prof_task,
             rank_task,
             id_parent,
             dt_group_import,
             id_group_import,
             code_desc_group,
             id_sub_group_import,
             code_desc_sub_group,
             id_group_table,
             table_position,
             flg_action,
             id_sample_type,
             code_desc_sample_type,
             dt_req_task,
             code_desc_group_parent,
             instructions_hash)
        VALUES
            (dt_epis_pn_det_task_hist_in,
             id_epis_pn_det_task_in,
             id_epis_pn_det_in,
             id_task_in,
             id_task_type_in,
             flg_status_in,
             pn_note_in,
             dt_last_update_in,
             id_prof_last_update_in,
             flg_table_origin_in,
             create_user_in,
             create_time_in,
             create_institution_in,
             update_user_in,
             update_time_in,
             update_institution_in,
             id_task_aggregator_in,
             dt_task_in,
             id_prof_task_in,
             rank_task_in,
             id_parent_in,
             dt_group_import_in,
             id_group_import_in,
             code_desc_group_in,
             id_sub_group_import_in,
             code_desc_sub_group_in,
             id_group_table_in,
             table_position_in,
             flg_action_in,
             id_sample_type_in,
             code_desc_sample_type_in,
             dt_req_task_in,
             code_desc_group_parent_in,
             instructions_hash_in)
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    PROCEDURE ins
    (
        dt_epis_pn_det_task_hist_in IN epis_pn_det_task_hist.dt_epis_pn_det_task_hist%TYPE,
        id_epis_pn_det_task_in      IN epis_pn_det_task_hist.id_epis_pn_det_task%TYPE,
        id_epis_pn_det_in           IN epis_pn_det_task_hist.id_epis_pn_det%TYPE DEFAULT NULL,
        id_task_in                  IN epis_pn_det_task_hist.id_task%TYPE DEFAULT NULL,
        id_task_type_in             IN epis_pn_det_task_hist.id_task_type%TYPE DEFAULT NULL,
        flg_status_in               IN epis_pn_det_task_hist.flg_status%TYPE DEFAULT 'A',
        pn_note_in                  IN epis_pn_det_task_hist.pn_note%TYPE DEFAULT NULL,
        dt_last_update_in           IN epis_pn_det_task_hist.dt_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_in      IN epis_pn_det_task_hist.id_prof_last_update%TYPE DEFAULT NULL,
        flg_table_origin_in         IN epis_pn_det_task_hist.flg_table_origin%TYPE DEFAULT NULL,
        create_user_in              IN epis_pn_det_task_hist.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_pn_det_task_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_pn_det_task_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_pn_det_task_hist.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_pn_det_task_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_pn_det_task_hist.update_institution%TYPE DEFAULT NULL,
        id_task_aggregator_in       IN epis_pn_det_task_hist.id_task_aggregator%TYPE DEFAULT NULL,
        dt_task_in                  IN epis_pn_det_task_hist.dt_task%TYPE DEFAULT NULL,
        id_prof_task_in             IN epis_pn_det_task_hist.id_prof_task%TYPE DEFAULT NULL,
        rank_task_in                IN epis_pn_det_task_hist.rank_task%TYPE DEFAULT NULL,
        id_parent_in                IN epis_pn_det_task_hist.id_parent%TYPE DEFAULT NULL,
        dt_group_import_in          IN epis_pn_det_task_hist.dt_group_import%TYPE DEFAULT NULL,
        id_group_import_in          IN epis_pn_det_task_hist.id_group_import%TYPE DEFAULT NULL,
        code_desc_group_in          IN epis_pn_det_task_hist.code_desc_group%TYPE DEFAULT NULL,
        id_sub_group_import_in      IN epis_pn_det_task_hist.id_sub_group_import%TYPE DEFAULT NULL,
        code_desc_sub_group_in      IN epis_pn_det_task_hist.code_desc_sub_group%TYPE DEFAULT NULL,
        id_group_table_in           IN epis_pn_det_task_hist.id_group_table%TYPE DEFAULT NULL,
        table_position_in           IN epis_pn_det_task_hist.table_position%TYPE DEFAULT NULL,
        flg_action_in               IN epis_pn_det_task_hist.flg_action%TYPE DEFAULT 'A',
        id_sample_type_in           IN epis_pn_det_task_hist.id_sample_type%TYPE DEFAULT NULL,
        code_desc_sample_type_in    IN epis_pn_det_task_hist.code_desc_sample_type%TYPE DEFAULT NULL,
        dt_req_task_in              IN epis_pn_det_task_hist.dt_req_task%TYPE DEFAULT NULL,
        code_desc_group_parent_in   IN epis_pn_det_task_hist.code_desc_group_parent%TYPE DEFAULT NULL,
        instructions_hash_in        IN epis_pn_det_task_hist.instructions_hash%TYPE DEFAULT NULL,
        handle_error_in             IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(dt_epis_pn_det_task_hist_in => dt_epis_pn_det_task_hist_in,
            id_epis_pn_det_task_in      => id_epis_pn_det_task_in,
            id_epis_pn_det_in           => id_epis_pn_det_in,
            id_task_in                  => id_task_in,
            id_task_type_in             => id_task_type_in,
            flg_status_in               => flg_status_in,
            pn_note_in                  => pn_note_in,
            dt_last_update_in           => dt_last_update_in,
            id_prof_last_update_in      => id_prof_last_update_in,
            flg_table_origin_in         => flg_table_origin_in,
            create_user_in              => create_user_in,
            create_time_in              => create_time_in,
            create_institution_in       => create_institution_in,
            update_user_in              => update_user_in,
            update_time_in              => update_time_in,
            update_institution_in       => update_institution_in,
            id_task_aggregator_in       => id_task_aggregator_in,
            dt_task_in                  => dt_task_in,
            id_prof_task_in             => id_prof_task_in,
            rank_task_in                => rank_task_in,
            id_parent_in                => id_parent_in,
            dt_group_import_in          => dt_group_import_in,
            id_group_import_in          => id_group_import_in,
            code_desc_group_in          => code_desc_group_in,
            id_sub_group_import_in      => id_sub_group_import_in,
            code_desc_sub_group_in      => code_desc_sub_group_in,
            id_group_table_in           => id_group_table_in,
            table_position_in           => table_position_in,
            flg_action_in               => flg_action_in,
            id_sample_type_in           => id_sample_type_in,
            code_desc_sample_type_in    => code_desc_sample_type_in,
            dt_req_task_in              => dt_req_task_in,
            code_desc_group_parent_in   => code_desc_group_parent_in,
            instructions_hash_in        => instructions_hash_in,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN epis_pn_det_task_hist%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
        l_rec epis_pn_det_task_hist%ROWTYPE := rec_in;
    BEGIN
    
        ins(dt_epis_pn_det_task_hist_in => l_rec.dt_epis_pn_det_task_hist,
            id_epis_pn_det_task_in      => l_rec.id_epis_pn_det_task,
            id_epis_pn_det_in           => l_rec.id_epis_pn_det,
            id_task_in                  => l_rec.id_task,
            id_task_type_in             => l_rec.id_task_type,
            flg_status_in               => l_rec.flg_status,
            pn_note_in                  => l_rec.pn_note,
            dt_last_update_in           => l_rec.dt_last_update,
            id_prof_last_update_in      => l_rec.id_prof_last_update,
            flg_table_origin_in         => l_rec.flg_table_origin,
            create_user_in              => l_rec.create_user,
            create_time_in              => l_rec.create_time,
            create_institution_in       => l_rec.create_institution,
            update_user_in              => l_rec.update_user,
            update_time_in              => l_rec.update_time,
            update_institution_in       => l_rec.update_institution,
            id_task_aggregator_in       => l_rec.id_task_aggregator,
            dt_task_in                  => l_rec.dt_task,
            id_prof_task_in             => l_rec.id_prof_task,
            rank_task_in                => l_rec.rank_task,
            id_parent_in                => l_rec.id_parent,
            dt_group_import_in          => l_rec.dt_group_import,
            id_group_import_in          => l_rec.id_group_import,
            code_desc_group_in          => l_rec.code_desc_group,
            id_sub_group_import_in      => l_rec.id_sub_group_import,
            code_desc_sub_group_in      => l_rec.code_desc_sub_group,
            id_group_table_in           => l_rec.id_group_table,
            table_position_in           => l_rec.table_position,
            flg_action_in               => l_rec.flg_action,
            id_sample_type_in           => l_rec.id_sample_type,
            code_desc_sample_type_in    => l_rec.code_desc_sample_type,
            dt_req_task_in              => l_rec.dt_req_task,
            code_desc_group_parent_in   => l_rec.code_desc_group_parent,
            instructions_hash_in        => l_rec.instructions_hash,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN epis_pn_det_task_hist%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rec_in          => rec_in,
            gen_pky_in      => gen_pky_in,
            sequence_in     => sequence_in,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN epis_pn_det_task_hist_tc,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        IF rows_in.count = 0
        THEN
            NULL;
        ELSE
            FORALL indx IN rows_in.first .. rows_in.last SAVE EXCEPTIONS
                INSERT INTO epis_pn_det_task_hist
                    (id_epis_pn_det_task,
                     dt_epis_pn_det_task_hist,
                     id_epis_pn_det,
                     id_task,
                     id_task_type,
                     flg_status,
                     pn_note,
                     dt_last_update,
                     id_prof_last_update,
                     flg_table_origin,
                     id_task_aggregator,
                     dt_task,
                     id_prof_task,
                     rank_task,
                     id_parent,
                     dt_group_import,
                     id_group_import,
                     code_desc_group,
                     id_sub_group_import,
                     code_desc_sub_group,
                     id_group_table,
                     table_position,
                     flg_action,
                     id_sample_type,
                     code_desc_sample_type,
                     dt_req_task,
                     code_desc_group_parent,
                     instructions_hash)
                VALUES
                    (rows_in(indx).id_epis_pn_det_task,
                     rows_in(indx).dt_epis_pn_det_task_hist,
                     rows_in(indx).id_epis_pn_det,
                     rows_in(indx).id_task,
                     rows_in(indx).id_task_type,
                     rows_in(indx).flg_status,
                     rows_in(indx).pn_note,
                     rows_in(indx).dt_last_update,
                     rows_in(indx).id_prof_last_update,
                     rows_in(indx).flg_table_origin,
                     rows_in(indx).id_task_aggregator,
                     rows_in(indx).dt_task,
                     rows_in(indx).id_prof_task,
                     rows_in(indx).rank_task,
                     rows_in(indx).id_parent,
                     rows_in(indx).dt_group_import,
                     rows_in(indx).id_group_import,
                     rows_in(indx).code_desc_group,
                     rows_in(indx).id_sub_group_import,
                     rows_in(indx).code_desc_sub_group,
                     rows_in(indx).id_group_table,
                     rows_in(indx).table_position,
                     rows_in(indx).flg_action,
                     rows_in(indx).id_sample_type,
                     rows_in(indx).code_desc_sample_type,
                     rows_in(indx).dt_req_task,
                     rows_in(indx).code_desc_group_parent,
                     rows_in(indx).instructions_hash)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN epis_pn_det_task_hist_tc,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rows_in => rows_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END ins;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        dt_epis_pn_det_task_hist_in IN epis_pn_det_task_hist.dt_epis_pn_det_task_hist%TYPE,
        id_epis_pn_det_task_in      IN epis_pn_det_task_hist.id_epis_pn_det_task%TYPE,
        id_epis_pn_det_in           IN epis_pn_det_task_hist.id_epis_pn_det%TYPE DEFAULT NULL,
        id_epis_pn_det_nin          IN BOOLEAN := TRUE,
        id_task_in                  IN epis_pn_det_task_hist.id_task%TYPE DEFAULT NULL,
        id_task_nin                 IN BOOLEAN := TRUE,
        id_task_type_in             IN epis_pn_det_task_hist.id_task_type%TYPE DEFAULT NULL,
        id_task_type_nin            IN BOOLEAN := TRUE,
        flg_status_in               IN epis_pn_det_task_hist.flg_status%TYPE DEFAULT NULL,
        flg_status_nin              IN BOOLEAN := TRUE,
        pn_note_in                  IN epis_pn_det_task_hist.pn_note%TYPE DEFAULT NULL,
        pn_note_nin                 IN BOOLEAN := TRUE,
        dt_last_update_in           IN epis_pn_det_task_hist.dt_last_update%TYPE DEFAULT NULL,
        dt_last_update_nin          IN BOOLEAN := TRUE,
        id_prof_last_update_in      IN epis_pn_det_task_hist.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin     IN BOOLEAN := TRUE,
        flg_table_origin_in         IN epis_pn_det_task_hist.flg_table_origin%TYPE DEFAULT NULL,
        flg_table_origin_nin        IN BOOLEAN := TRUE,
        create_user_in              IN epis_pn_det_task_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN epis_pn_det_task_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN epis_pn_det_task_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN epis_pn_det_task_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN epis_pn_det_task_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN epis_pn_det_task_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        id_task_aggregator_in       IN epis_pn_det_task_hist.id_task_aggregator%TYPE DEFAULT NULL,
        id_task_aggregator_nin      IN BOOLEAN := TRUE,
        dt_task_in                  IN epis_pn_det_task_hist.dt_task%TYPE DEFAULT NULL,
        dt_task_nin                 IN BOOLEAN := TRUE,
        id_prof_task_in             IN epis_pn_det_task_hist.id_prof_task%TYPE DEFAULT NULL,
        id_prof_task_nin            IN BOOLEAN := TRUE,
        rank_task_in                IN epis_pn_det_task_hist.rank_task%TYPE DEFAULT NULL,
        rank_task_nin               IN BOOLEAN := TRUE,
        id_parent_in                IN epis_pn_det_task_hist.id_parent%TYPE DEFAULT NULL,
        id_parent_nin               IN BOOLEAN := TRUE,
        dt_group_import_in          IN epis_pn_det_task_hist.dt_group_import%TYPE DEFAULT NULL,
        dt_group_import_nin         IN BOOLEAN := TRUE,
        id_group_import_in          IN epis_pn_det_task_hist.id_group_import%TYPE DEFAULT NULL,
        id_group_import_nin         IN BOOLEAN := TRUE,
        code_desc_group_in          IN epis_pn_det_task_hist.code_desc_group%TYPE DEFAULT NULL,
        code_desc_group_nin         IN BOOLEAN := TRUE,
        id_sub_group_import_in      IN epis_pn_det_task_hist.id_sub_group_import%TYPE DEFAULT NULL,
        id_sub_group_import_nin     IN BOOLEAN := TRUE,
        code_desc_sub_group_in      IN epis_pn_det_task_hist.code_desc_sub_group%TYPE DEFAULT NULL,
        code_desc_sub_group_nin     IN BOOLEAN := TRUE,
        id_group_table_in           IN epis_pn_det_task_hist.id_group_table%TYPE DEFAULT NULL,
        id_group_table_nin          IN BOOLEAN := TRUE,
        table_position_in           IN epis_pn_det_task_hist.table_position%TYPE DEFAULT NULL,
        table_position_nin          IN BOOLEAN := TRUE,
        flg_action_in               IN epis_pn_det_task_hist.flg_action%TYPE DEFAULT NULL,
        flg_action_nin              IN BOOLEAN := TRUE,
        id_sample_type_in           IN epis_pn_det_task_hist.id_sample_type%TYPE DEFAULT NULL,
        id_sample_type_nin          IN BOOLEAN := TRUE,
        code_desc_sample_type_in    IN epis_pn_det_task_hist.code_desc_sample_type%TYPE DEFAULT NULL,
        code_desc_sample_type_nin   IN BOOLEAN := TRUE,
        dt_req_task_in              IN epis_pn_det_task_hist.dt_req_task%TYPE DEFAULT NULL,
        dt_req_task_nin             IN BOOLEAN := TRUE,
        code_desc_group_parent_in   IN epis_pn_det_task_hist.code_desc_group_parent%TYPE DEFAULT NULL,
        code_desc_group_parent_nin  IN BOOLEAN := TRUE,
        instructions_hash_in        IN epis_pn_det_task_hist.instructions_hash%TYPE DEFAULT NULL,
        instructions_hash_nin       IN BOOLEAN := TRUE,
        handle_error_in             IN BOOLEAN := FALSE,
        rows_out                    IN OUT table_varchar
    ) IS
        l_rows_out                 table_varchar;
        l_id_epis_pn_det_n         NUMBER(1) := sys.diutil.bool_to_int(id_epis_pn_det_nin);
        l_id_task_n                NUMBER(1) := sys.diutil.bool_to_int(id_task_nin);
        l_id_task_type_n           NUMBER(1) := sys.diutil.bool_to_int(id_task_type_nin);
        l_flg_status_n             NUMBER(1) := sys.diutil.bool_to_int(flg_status_nin);
        l_pn_note_n                NUMBER(1) := sys.diutil.bool_to_int(pn_note_nin);
        l_dt_last_update_n         NUMBER(1) := sys.diutil.bool_to_int(dt_last_update_nin);
        l_id_prof_last_update_n    NUMBER(1) := sys.diutil.bool_to_int(id_prof_last_update_nin);
        l_flg_table_origin_n       NUMBER(1) := sys.diutil.bool_to_int(flg_table_origin_nin);
        l_create_user_n            NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n            NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n     NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n            NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n            NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n     NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_id_task_aggregator_n     NUMBER(1) := sys.diutil.bool_to_int(id_task_aggregator_nin);
        l_dt_task_n                NUMBER(1) := sys.diutil.bool_to_int(dt_task_nin);
        l_id_prof_task_n           NUMBER(1) := sys.diutil.bool_to_int(id_prof_task_nin);
        l_rank_task_n              NUMBER(1) := sys.diutil.bool_to_int(rank_task_nin);
        l_id_parent_n              NUMBER(1) := sys.diutil.bool_to_int(id_parent_nin);
        l_dt_group_import_n        NUMBER(1) := sys.diutil.bool_to_int(dt_group_import_nin);
        l_id_group_import_n        NUMBER(1) := sys.diutil.bool_to_int(id_group_import_nin);
        l_code_desc_group_n        NUMBER(1) := sys.diutil.bool_to_int(code_desc_group_nin);
        l_id_sub_group_import_n    NUMBER(1) := sys.diutil.bool_to_int(id_sub_group_import_nin);
        l_code_desc_sub_group_n    NUMBER(1) := sys.diutil.bool_to_int(code_desc_sub_group_nin);
        l_id_group_table_n         NUMBER(1) := sys.diutil.bool_to_int(id_group_table_nin);
        l_table_position_n         NUMBER(1) := sys.diutil.bool_to_int(table_position_nin);
        l_flg_action_n             NUMBER(1) := sys.diutil.bool_to_int(flg_action_nin);
        l_id_sample_type_n         NUMBER(1) := sys.diutil.bool_to_int(id_sample_type_nin);
        l_code_desc_sample_type_n  NUMBER(1) := sys.diutil.bool_to_int(code_desc_sample_type_nin);
        l_dt_req_task_n            NUMBER(1) := sys.diutil.bool_to_int(dt_req_task_nin);
        l_code_desc_group_parent_n NUMBER(1) := sys.diutil.bool_to_int(code_desc_group_parent_nin);
        l_instructions_hash_n      NUMBER(1) := sys.diutil.bool_to_int(instructions_hash_nin);
    BEGIN
    
        UPDATE epis_pn_det_task_hist
           SET id_epis_pn_det         = decode(l_id_epis_pn_det_n,
                                               0,
                                               id_epis_pn_det_in,
                                               nvl(id_epis_pn_det_in, id_epis_pn_det)),
               id_task                = decode(l_id_task_n, 0, id_task_in, nvl(id_task_in, id_task)),
               id_task_type           = decode(l_id_task_type_n, 0, id_task_type_in, nvl(id_task_type_in, id_task_type)),
               flg_status             = decode(l_flg_status_n, 0, flg_status_in, nvl(flg_status_in, flg_status)),
               pn_note                = decode(l_pn_note_n, 0, pn_note_in, nvl(pn_note_in, pn_note)),
               dt_last_update         = decode(l_dt_last_update_n,
                                               0,
                                               dt_last_update_in,
                                               nvl(dt_last_update_in, dt_last_update)),
               id_prof_last_update    = decode(l_id_prof_last_update_n,
                                               0,
                                               id_prof_last_update_in,
                                               nvl(id_prof_last_update_in, id_prof_last_update)),
               flg_table_origin       = decode(l_flg_table_origin_n,
                                               0,
                                               flg_table_origin_in,
                                               nvl(flg_table_origin_in, flg_table_origin)),
               create_user            = decode(l_create_user_n, 0, create_user_in, nvl(create_user_in, create_user)),
               create_time            = decode(l_create_time_n, 0, create_time_in, nvl(create_time_in, create_time)),
               create_institution     = decode(l_create_institution_n,
                                               0,
                                               create_institution_in,
                                               nvl(create_institution_in, create_institution)),
               update_user            = decode(l_update_user_n, 0, update_user_in, nvl(update_user_in, update_user)),
               update_time            = decode(l_update_time_n, 0, update_time_in, nvl(update_time_in, update_time)),
               update_institution     = decode(l_update_institution_n,
                                               0,
                                               update_institution_in,
                                               nvl(update_institution_in, update_institution)),
               id_task_aggregator     = decode(l_id_task_aggregator_n,
                                               0,
                                               id_task_aggregator_in,
                                               nvl(id_task_aggregator_in, id_task_aggregator)),
               dt_task                = decode(l_dt_task_n, 0, dt_task_in, nvl(dt_task_in, dt_task)),
               id_prof_task           = decode(l_id_prof_task_n, 0, id_prof_task_in, nvl(id_prof_task_in, id_prof_task)),
               rank_task              = decode(l_rank_task_n, 0, rank_task_in, nvl(rank_task_in, rank_task)),
               id_parent              = decode(l_id_parent_n, 0, id_parent_in, nvl(id_parent_in, id_parent)),
               dt_group_import        = decode(l_dt_group_import_n,
                                               0,
                                               dt_group_import_in,
                                               nvl(dt_group_import_in, dt_group_import)),
               id_group_import        = decode(l_id_group_import_n,
                                               0,
                                               id_group_import_in,
                                               nvl(id_group_import_in, id_group_import)),
               code_desc_group        = decode(l_code_desc_group_n,
                                               0,
                                               code_desc_group_in,
                                               nvl(code_desc_group_in, code_desc_group)),
               id_sub_group_import    = decode(l_id_sub_group_import_n,
                                               0,
                                               id_sub_group_import_in,
                                               nvl(id_sub_group_import_in, id_sub_group_import)),
               code_desc_sub_group    = decode(l_code_desc_sub_group_n,
                                               0,
                                               code_desc_sub_group_in,
                                               nvl(code_desc_sub_group_in, code_desc_sub_group)),
               id_group_table         = decode(l_id_group_table_n,
                                               0,
                                               id_group_table_in,
                                               nvl(id_group_table_in, id_group_table)),
               table_position         = decode(l_table_position_n,
                                               0,
                                               table_position_in,
                                               nvl(table_position_in, table_position)),
               flg_action             = decode(l_flg_action_n, 0, flg_action_in, nvl(flg_action_in, flg_action)),
               id_sample_type         = decode(l_id_sample_type_n,
                                               0,
                                               id_sample_type_in,
                                               nvl(id_sample_type_in, id_sample_type)),
               code_desc_sample_type  = decode(l_code_desc_sample_type_n,
                                               0,
                                               code_desc_sample_type_in,
                                               nvl(code_desc_sample_type_in, code_desc_sample_type)),
               dt_req_task            = decode(l_dt_req_task_n, 0, dt_req_task_in, nvl(dt_req_task_in, dt_req_task)),
               code_desc_group_parent = decode(l_code_desc_group_parent_n,
                                               0,
                                               code_desc_group_parent_in,
                                               nvl(code_desc_group_parent_in, code_desc_group_parent)),
               instructions_hash      = decode(l_instructions_hash_n,
                                               0,
                                               instructions_hash_in,
                                               nvl(instructions_hash_in, instructions_hash))
         WHERE dt_epis_pn_det_task_hist = dt_epis_pn_det_task_hist_in
           AND id_epis_pn_det_task = id_epis_pn_det_task_in
        RETURNING ROWID BULK COLLECT INTO l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        dt_epis_pn_det_task_hist_in IN epis_pn_det_task_hist.dt_epis_pn_det_task_hist%TYPE,
        id_epis_pn_det_task_in      IN epis_pn_det_task_hist.id_epis_pn_det_task%TYPE,
        id_epis_pn_det_in           IN epis_pn_det_task_hist.id_epis_pn_det%TYPE DEFAULT NULL,
        id_epis_pn_det_nin          IN BOOLEAN := TRUE,
        id_task_in                  IN epis_pn_det_task_hist.id_task%TYPE DEFAULT NULL,
        id_task_nin                 IN BOOLEAN := TRUE,
        id_task_type_in             IN epis_pn_det_task_hist.id_task_type%TYPE DEFAULT NULL,
        id_task_type_nin            IN BOOLEAN := TRUE,
        flg_status_in               IN epis_pn_det_task_hist.flg_status%TYPE DEFAULT NULL,
        flg_status_nin              IN BOOLEAN := TRUE,
        pn_note_in                  IN epis_pn_det_task_hist.pn_note%TYPE DEFAULT NULL,
        pn_note_nin                 IN BOOLEAN := TRUE,
        dt_last_update_in           IN epis_pn_det_task_hist.dt_last_update%TYPE DEFAULT NULL,
        dt_last_update_nin          IN BOOLEAN := TRUE,
        id_prof_last_update_in      IN epis_pn_det_task_hist.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin     IN BOOLEAN := TRUE,
        flg_table_origin_in         IN epis_pn_det_task_hist.flg_table_origin%TYPE DEFAULT NULL,
        flg_table_origin_nin        IN BOOLEAN := TRUE,
        create_user_in              IN epis_pn_det_task_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN epis_pn_det_task_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN epis_pn_det_task_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN epis_pn_det_task_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN epis_pn_det_task_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN epis_pn_det_task_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        id_task_aggregator_in       IN epis_pn_det_task_hist.id_task_aggregator%TYPE DEFAULT NULL,
        id_task_aggregator_nin      IN BOOLEAN := TRUE,
        dt_task_in                  IN epis_pn_det_task_hist.dt_task%TYPE DEFAULT NULL,
        dt_task_nin                 IN BOOLEAN := TRUE,
        id_prof_task_in             IN epis_pn_det_task_hist.id_prof_task%TYPE DEFAULT NULL,
        id_prof_task_nin            IN BOOLEAN := TRUE,
        rank_task_in                IN epis_pn_det_task_hist.rank_task%TYPE DEFAULT NULL,
        rank_task_nin               IN BOOLEAN := TRUE,
        id_parent_in                IN epis_pn_det_task_hist.id_parent%TYPE DEFAULT NULL,
        id_parent_nin               IN BOOLEAN := TRUE,
        dt_group_import_in          IN epis_pn_det_task_hist.dt_group_import%TYPE DEFAULT NULL,
        dt_group_import_nin         IN BOOLEAN := TRUE,
        id_group_import_in          IN epis_pn_det_task_hist.id_group_import%TYPE DEFAULT NULL,
        id_group_import_nin         IN BOOLEAN := TRUE,
        code_desc_group_in          IN epis_pn_det_task_hist.code_desc_group%TYPE DEFAULT NULL,
        code_desc_group_nin         IN BOOLEAN := TRUE,
        id_sub_group_import_in      IN epis_pn_det_task_hist.id_sub_group_import%TYPE DEFAULT NULL,
        id_sub_group_import_nin     IN BOOLEAN := TRUE,
        code_desc_sub_group_in      IN epis_pn_det_task_hist.code_desc_sub_group%TYPE DEFAULT NULL,
        code_desc_sub_group_nin     IN BOOLEAN := TRUE,
        id_group_table_in           IN epis_pn_det_task_hist.id_group_table%TYPE DEFAULT NULL,
        id_group_table_nin          IN BOOLEAN := TRUE,
        table_position_in           IN epis_pn_det_task_hist.table_position%TYPE DEFAULT NULL,
        table_position_nin          IN BOOLEAN := TRUE,
        flg_action_in               IN epis_pn_det_task_hist.flg_action%TYPE DEFAULT NULL,
        flg_action_nin              IN BOOLEAN := TRUE,
        id_sample_type_in           IN epis_pn_det_task_hist.id_sample_type%TYPE DEFAULT NULL,
        id_sample_type_nin          IN BOOLEAN := TRUE,
        code_desc_sample_type_in    IN epis_pn_det_task_hist.code_desc_sample_type%TYPE DEFAULT NULL,
        code_desc_sample_type_nin   IN BOOLEAN := TRUE,
        dt_req_task_in              IN epis_pn_det_task_hist.dt_req_task%TYPE DEFAULT NULL,
        dt_req_task_nin             IN BOOLEAN := TRUE,
        code_desc_group_parent_in   IN epis_pn_det_task_hist.code_desc_group_parent%TYPE DEFAULT NULL,
        code_desc_group_parent_nin  IN BOOLEAN := TRUE,
        instructions_hash_in        IN epis_pn_det_task_hist.instructions_hash%TYPE DEFAULT NULL,
        instructions_hash_nin       IN BOOLEAN := TRUE,
        handle_error_in             IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(dt_epis_pn_det_task_hist_in => dt_epis_pn_det_task_hist_in,
            id_epis_pn_det_task_in      => id_epis_pn_det_task_in,
            id_epis_pn_det_in           => id_epis_pn_det_in,
            id_epis_pn_det_nin          => id_epis_pn_det_nin,
            id_task_in                  => id_task_in,
            id_task_nin                 => id_task_nin,
            id_task_type_in             => id_task_type_in,
            id_task_type_nin            => id_task_type_nin,
            flg_status_in               => flg_status_in,
            flg_status_nin              => flg_status_nin,
            pn_note_in                  => pn_note_in,
            pn_note_nin                 => pn_note_nin,
            dt_last_update_in           => dt_last_update_in,
            dt_last_update_nin          => dt_last_update_nin,
            id_prof_last_update_in      => id_prof_last_update_in,
            id_prof_last_update_nin     => id_prof_last_update_nin,
            flg_table_origin_in         => flg_table_origin_in,
            flg_table_origin_nin        => flg_table_origin_nin,
            create_user_in              => create_user_in,
            create_user_nin             => create_user_nin,
            create_time_in              => create_time_in,
            create_time_nin             => create_time_nin,
            create_institution_in       => create_institution_in,
            create_institution_nin      => create_institution_nin,
            update_user_in              => update_user_in,
            update_user_nin             => update_user_nin,
            update_time_in              => update_time_in,
            update_time_nin             => update_time_nin,
            update_institution_in       => update_institution_in,
            update_institution_nin      => update_institution_nin,
            id_task_aggregator_in       => id_task_aggregator_in,
            id_task_aggregator_nin      => id_task_aggregator_nin,
            dt_task_in                  => dt_task_in,
            dt_task_nin                 => dt_task_nin,
            id_prof_task_in             => id_prof_task_in,
            id_prof_task_nin            => id_prof_task_nin,
            rank_task_in                => rank_task_in,
            rank_task_nin               => rank_task_nin,
            id_parent_in                => id_parent_in,
            id_parent_nin               => id_parent_nin,
            dt_group_import_in          => dt_group_import_in,
            dt_group_import_nin         => dt_group_import_nin,
            id_group_import_in          => id_group_import_in,
            id_group_import_nin         => id_group_import_nin,
            code_desc_group_in          => code_desc_group_in,
            code_desc_group_nin         => code_desc_group_nin,
            id_sub_group_import_in      => id_sub_group_import_in,
            id_sub_group_import_nin     => id_sub_group_import_nin,
            code_desc_sub_group_in      => code_desc_sub_group_in,
            code_desc_sub_group_nin     => code_desc_sub_group_nin,
            id_group_table_in           => id_group_table_in,
            id_group_table_nin          => id_group_table_nin,
            table_position_in           => table_position_in,
            table_position_nin          => table_position_nin,
            flg_action_in               => flg_action_in,
            flg_action_nin              => flg_action_nin,
            id_sample_type_in           => id_sample_type_in,
            id_sample_type_nin          => id_sample_type_nin,
            code_desc_sample_type_in    => code_desc_sample_type_in,
            code_desc_sample_type_nin   => code_desc_sample_type_nin,
            dt_req_task_in              => dt_req_task_in,
            dt_req_task_nin             => dt_req_task_nin,
            code_desc_group_parent_in   => code_desc_group_parent_in,
            code_desc_group_parent_nin  => code_desc_group_parent_nin,
            instructions_hash_in        => instructions_hash_in,
            instructions_hash_nin       => instructions_hash_nin,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_epis_pn_det_in          IN epis_pn_det_task_hist.id_epis_pn_det%TYPE DEFAULT NULL,
        id_epis_pn_det_nin         IN BOOLEAN := TRUE,
        id_task_in                 IN epis_pn_det_task_hist.id_task%TYPE DEFAULT NULL,
        id_task_nin                IN BOOLEAN := TRUE,
        id_task_type_in            IN epis_pn_det_task_hist.id_task_type%TYPE DEFAULT NULL,
        id_task_type_nin           IN BOOLEAN := TRUE,
        flg_status_in              IN epis_pn_det_task_hist.flg_status%TYPE DEFAULT NULL,
        flg_status_nin             IN BOOLEAN := TRUE,
        pn_note_in                 IN epis_pn_det_task_hist.pn_note%TYPE DEFAULT NULL,
        pn_note_nin                IN BOOLEAN := TRUE,
        dt_last_update_in          IN epis_pn_det_task_hist.dt_last_update%TYPE DEFAULT NULL,
        dt_last_update_nin         IN BOOLEAN := TRUE,
        id_prof_last_update_in     IN epis_pn_det_task_hist.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin    IN BOOLEAN := TRUE,
        flg_table_origin_in        IN epis_pn_det_task_hist.flg_table_origin%TYPE DEFAULT NULL,
        flg_table_origin_nin       IN BOOLEAN := TRUE,
        create_user_in             IN epis_pn_det_task_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin            IN BOOLEAN := TRUE,
        create_time_in             IN epis_pn_det_task_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin            IN BOOLEAN := TRUE,
        create_institution_in      IN epis_pn_det_task_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin     IN BOOLEAN := TRUE,
        update_user_in             IN epis_pn_det_task_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin            IN BOOLEAN := TRUE,
        update_time_in             IN epis_pn_det_task_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin            IN BOOLEAN := TRUE,
        update_institution_in      IN epis_pn_det_task_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin     IN BOOLEAN := TRUE,
        id_task_aggregator_in      IN epis_pn_det_task_hist.id_task_aggregator%TYPE DEFAULT NULL,
        id_task_aggregator_nin     IN BOOLEAN := TRUE,
        dt_task_in                 IN epis_pn_det_task_hist.dt_task%TYPE DEFAULT NULL,
        dt_task_nin                IN BOOLEAN := TRUE,
        id_prof_task_in            IN epis_pn_det_task_hist.id_prof_task%TYPE DEFAULT NULL,
        id_prof_task_nin           IN BOOLEAN := TRUE,
        rank_task_in               IN epis_pn_det_task_hist.rank_task%TYPE DEFAULT NULL,
        rank_task_nin              IN BOOLEAN := TRUE,
        id_parent_in               IN epis_pn_det_task_hist.id_parent%TYPE DEFAULT NULL,
        id_parent_nin              IN BOOLEAN := TRUE,
        dt_group_import_in         IN epis_pn_det_task_hist.dt_group_import%TYPE DEFAULT NULL,
        dt_group_import_nin        IN BOOLEAN := TRUE,
        id_group_import_in         IN epis_pn_det_task_hist.id_group_import%TYPE DEFAULT NULL,
        id_group_import_nin        IN BOOLEAN := TRUE,
        code_desc_group_in         IN epis_pn_det_task_hist.code_desc_group%TYPE DEFAULT NULL,
        code_desc_group_nin        IN BOOLEAN := TRUE,
        id_sub_group_import_in     IN epis_pn_det_task_hist.id_sub_group_import%TYPE DEFAULT NULL,
        id_sub_group_import_nin    IN BOOLEAN := TRUE,
        code_desc_sub_group_in     IN epis_pn_det_task_hist.code_desc_sub_group%TYPE DEFAULT NULL,
        code_desc_sub_group_nin    IN BOOLEAN := TRUE,
        id_group_table_in          IN epis_pn_det_task_hist.id_group_table%TYPE DEFAULT NULL,
        id_group_table_nin         IN BOOLEAN := TRUE,
        table_position_in          IN epis_pn_det_task_hist.table_position%TYPE DEFAULT NULL,
        table_position_nin         IN BOOLEAN := TRUE,
        flg_action_in              IN epis_pn_det_task_hist.flg_action%TYPE DEFAULT NULL,
        flg_action_nin             IN BOOLEAN := TRUE,
        id_sample_type_in          IN epis_pn_det_task_hist.id_sample_type%TYPE DEFAULT NULL,
        id_sample_type_nin         IN BOOLEAN := TRUE,
        code_desc_sample_type_in   IN epis_pn_det_task_hist.code_desc_sample_type%TYPE DEFAULT NULL,
        code_desc_sample_type_nin  IN BOOLEAN := TRUE,
        dt_req_task_in             IN epis_pn_det_task_hist.dt_req_task%TYPE DEFAULT NULL,
        dt_req_task_nin            IN BOOLEAN := TRUE,
        code_desc_group_parent_in  IN epis_pn_det_task_hist.code_desc_group_parent%TYPE DEFAULT NULL,
        code_desc_group_parent_nin IN BOOLEAN := TRUE,
        instructions_hash_in       IN epis_pn_det_task_hist.instructions_hash%TYPE DEFAULT NULL,
        instructions_hash_nin      IN BOOLEAN := TRUE,
        where_in                   IN VARCHAR2,
        handle_error_in            IN BOOLEAN := FALSE,
        rows_out                   IN OUT table_varchar
    ) IS
        l_sql                      VARCHAR2(32767);
        l_rows_out                 table_varchar;
        l_id_epis_pn_det_n         NUMBER(1) := sys.diutil.bool_to_int(id_epis_pn_det_nin);
        l_id_task_n                NUMBER(1) := sys.diutil.bool_to_int(id_task_nin);
        l_id_task_type_n           NUMBER(1) := sys.diutil.bool_to_int(id_task_type_nin);
        l_flg_status_n             NUMBER(1) := sys.diutil.bool_to_int(flg_status_nin);
        l_pn_note_n                NUMBER(1) := sys.diutil.bool_to_int(pn_note_nin);
        l_dt_last_update_n         NUMBER(1) := sys.diutil.bool_to_int(dt_last_update_nin);
        l_id_prof_last_update_n    NUMBER(1) := sys.diutil.bool_to_int(id_prof_last_update_nin);
        l_flg_table_origin_n       NUMBER(1) := sys.diutil.bool_to_int(flg_table_origin_nin);
        l_create_user_n            NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n            NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n     NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n            NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n            NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n     NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_id_task_aggregator_n     NUMBER(1) := sys.diutil.bool_to_int(id_task_aggregator_nin);
        l_dt_task_n                NUMBER(1) := sys.diutil.bool_to_int(dt_task_nin);
        l_id_prof_task_n           NUMBER(1) := sys.diutil.bool_to_int(id_prof_task_nin);
        l_rank_task_n              NUMBER(1) := sys.diutil.bool_to_int(rank_task_nin);
        l_id_parent_n              NUMBER(1) := sys.diutil.bool_to_int(id_parent_nin);
        l_dt_group_import_n        NUMBER(1) := sys.diutil.bool_to_int(dt_group_import_nin);
        l_id_group_import_n        NUMBER(1) := sys.diutil.bool_to_int(id_group_import_nin);
        l_code_desc_group_n        NUMBER(1) := sys.diutil.bool_to_int(code_desc_group_nin);
        l_id_sub_group_import_n    NUMBER(1) := sys.diutil.bool_to_int(id_sub_group_import_nin);
        l_code_desc_sub_group_n    NUMBER(1) := sys.diutil.bool_to_int(code_desc_sub_group_nin);
        l_id_group_table_n         NUMBER(1) := sys.diutil.bool_to_int(id_group_table_nin);
        l_table_position_n         NUMBER(1) := sys.diutil.bool_to_int(table_position_nin);
        l_flg_action_n             NUMBER(1) := sys.diutil.bool_to_int(flg_action_nin);
        l_id_sample_type_n         NUMBER(1) := sys.diutil.bool_to_int(id_sample_type_nin);
        l_code_desc_sample_type_n  NUMBER(1) := sys.diutil.bool_to_int(code_desc_sample_type_nin);
        l_dt_req_task_n            NUMBER(1) := sys.diutil.bool_to_int(dt_req_task_nin);
        l_code_desc_group_parent_n NUMBER(1) := sys.diutil.bool_to_int(code_desc_group_parent_nin);
        l_instructions_hash_n      NUMBER(1) := sys.diutil.bool_to_int(instructions_hash_nin);
    BEGIN
        l_id_epis_pn_det_n         := sys.diutil.bool_to_int(id_epis_pn_det_nin);
        l_id_task_n                := sys.diutil.bool_to_int(id_task_nin);
        l_id_task_type_n           := sys.diutil.bool_to_int(id_task_type_nin);
        l_flg_status_n             := sys.diutil.bool_to_int(flg_status_nin);
        l_pn_note_n                := sys.diutil.bool_to_int(pn_note_nin);
        l_dt_last_update_n         := sys.diutil.bool_to_int(dt_last_update_nin);
        l_id_prof_last_update_n    := sys.diutil.bool_to_int(id_prof_last_update_nin);
        l_flg_table_origin_n       := sys.diutil.bool_to_int(flg_table_origin_nin);
        l_create_user_n            := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n            := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n     := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n            := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n            := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n     := sys.diutil.bool_to_int(update_institution_nin);
        l_id_task_aggregator_n     := sys.diutil.bool_to_int(id_task_aggregator_nin);
        l_dt_task_n                := sys.diutil.bool_to_int(dt_task_nin);
        l_id_prof_task_n           := sys.diutil.bool_to_int(id_prof_task_nin);
        l_rank_task_n              := sys.diutil.bool_to_int(rank_task_nin);
        l_id_parent_n              := sys.diutil.bool_to_int(id_parent_nin);
        l_dt_group_import_n        := sys.diutil.bool_to_int(dt_group_import_nin);
        l_id_group_import_n        := sys.diutil.bool_to_int(id_group_import_nin);
        l_code_desc_group_n        := sys.diutil.bool_to_int(code_desc_group_nin);
        l_id_sub_group_import_n    := sys.diutil.bool_to_int(id_sub_group_import_nin);
        l_code_desc_sub_group_n    := sys.diutil.bool_to_int(code_desc_sub_group_nin);
        l_id_group_table_n         := sys.diutil.bool_to_int(id_group_table_nin);
        l_table_position_n         := sys.diutil.bool_to_int(table_position_nin);
        l_flg_action_n             := sys.diutil.bool_to_int(flg_action_nin);
        l_id_sample_type_n         := sys.diutil.bool_to_int(id_sample_type_nin);
        l_code_desc_sample_type_n  := sys.diutil.bool_to_int(code_desc_sample_type_nin);
        l_dt_req_task_n            := sys.diutil.bool_to_int(dt_req_task_nin);
        l_code_desc_group_parent_n := sys.diutil.bool_to_int(code_desc_group_parent_nin);
        l_instructions_hash_n      := sys.diutil.bool_to_int(instructions_hash_nin);
        l_sql                      := 'UPDATE epis_pn_det_task_hist SET' || ' ID_EPIS_PN_DET = decode (' ||
                                      l_id_epis_pn_det_n ||
                                      ',0,:ID_EPIS_PN_DET_in, NVL (:ID_EPIS_PN_DET_in, ID_EPIS_PN_DET)) ' || ',' ||
                                      ' ID_TASK = decode (' || l_id_task_n ||
                                      ',0,:ID_TASK_in, NVL (:ID_TASK_in, ID_TASK)) ' || ',' ||
                                      ' ID_TASK_TYPE = decode (' || l_id_task_type_n ||
                                      ',0,:ID_TASK_TYPE_in, NVL (:ID_TASK_TYPE_in, ID_TASK_TYPE)) ' || ',' ||
                                      ' FLG_STATUS = decode (' || l_flg_status_n ||
                                      ',0,:FLG_STATUS_in, NVL (:FLG_STATUS_in, FLG_STATUS)) ' || ',' ||
                                      ' PN_NOTE = decode (' || l_pn_note_n ||
                                      ',0,:PN_NOTE_in, NVL (:PN_NOTE_in, PN_NOTE)) ' || ',' ||
                                      ' DT_LAST_UPDATE = decode (' || l_dt_last_update_n ||
                                      ',0,:DT_LAST_UPDATE_in, NVL (:DT_LAST_UPDATE_in, DT_LAST_UPDATE)) ' || ',' ||
                                      ' ID_PROF_LAST_UPDATE = decode (' || l_id_prof_last_update_n ||
                                      ',0,:ID_PROF_LAST_UPDATE_in, NVL (:ID_PROF_LAST_UPDATE_in, ID_PROF_LAST_UPDATE)) ' || ',' ||
                                      ' FLG_TABLE_ORIGIN = decode (' || l_flg_table_origin_n ||
                                      ',0,:FLG_TABLE_ORIGIN_in, NVL (:FLG_TABLE_ORIGIN_in, FLG_TABLE_ORIGIN)) ' || ',' ||
                                      ' CREATE_USER = decode (' || l_create_user_n ||
                                      ',0,:CREATE_USER_in, NVL (:CREATE_USER_in, CREATE_USER)) ' || ',' ||
                                      ' CREATE_TIME = decode (' || l_create_time_n ||
                                      ',0,:CREATE_TIME_in, NVL (:CREATE_TIME_in, CREATE_TIME)) ' || ',' ||
                                      ' CREATE_INSTITUTION = decode (' || l_create_institution_n ||
                                      ',0,:CREATE_INSTITUTION_in, NVL (:CREATE_INSTITUTION_in, CREATE_INSTITUTION)) ' || ',' ||
                                      ' UPDATE_USER = decode (' || l_update_user_n ||
                                      ',0,:UPDATE_USER_in, NVL (:UPDATE_USER_in, UPDATE_USER)) ' || ',' ||
                                      ' UPDATE_TIME = decode (' || l_update_time_n ||
                                      ',0,:UPDATE_TIME_in, NVL (:UPDATE_TIME_in, UPDATE_TIME)) ' || ',' ||
                                      ' UPDATE_INSTITUTION = decode (' || l_update_institution_n ||
                                      ',0,:UPDATE_INSTITUTION_in, NVL (:UPDATE_INSTITUTION_in, UPDATE_INSTITUTION)) ' || ',' ||
                                      ' ID_TASK_AGGREGATOR = decode (' || l_id_task_aggregator_n ||
                                      ',0,:ID_TASK_AGGREGATOR_in, NVL (:ID_TASK_AGGREGATOR_in, ID_TASK_AGGREGATOR)) ' || ',' ||
                                      ' DT_TASK = decode (' || l_dt_task_n ||
                                      ',0,:DT_TASK_in, NVL (:DT_TASK_in, DT_TASK)) ' || ',' ||
                                      ' ID_PROF_TASK = decode (' || l_id_prof_task_n ||
                                      ',0,:ID_PROF_TASK_in, NVL (:ID_PROF_TASK_in, ID_PROF_TASK)) ' || ',' ||
                                      ' RANK_TASK = decode (' || l_rank_task_n ||
                                      ',0,:RANK_TASK_in, NVL (:RANK_TASK_in, RANK_TASK)) ' || ',' ||
                                      ' ID_PARENT = decode (' || l_id_parent_n ||
                                      ',0,:ID_PARENT_in, NVL (:ID_PARENT_in, ID_PARENT)) ' || ',' ||
                                      ' DT_GROUP_IMPORT = decode (' || l_dt_group_import_n ||
                                      ',0,:DT_GROUP_IMPORT_in, NVL (:DT_GROUP_IMPORT_in, DT_GROUP_IMPORT)) ' || ',' ||
                                      ' ID_GROUP_IMPORT = decode (' || l_id_group_import_n ||
                                      ',0,:ID_GROUP_IMPORT_in, NVL (:ID_GROUP_IMPORT_in, ID_GROUP_IMPORT)) ' || ',' ||
                                      ' CODE_DESC_GROUP = decode (' || l_code_desc_group_n ||
                                      ',0,:CODE_DESC_GROUP_in, NVL (:CODE_DESC_GROUP_in, CODE_DESC_GROUP)) ' || ',' ||
                                      ' ID_SUB_GROUP_IMPORT = decode (' || l_id_sub_group_import_n ||
                                      ',0,:ID_SUB_GROUP_IMPORT_in, NVL (:ID_SUB_GROUP_IMPORT_in, ID_SUB_GROUP_IMPORT)) ' || ',' ||
                                      ' CODE_DESC_SUB_GROUP = decode (' || l_code_desc_sub_group_n ||
                                      ',0,:CODE_DESC_SUB_GROUP_in, NVL (:CODE_DESC_SUB_GROUP_in, CODE_DESC_SUB_GROUP)) ' || ',' ||
                                      ' ID_GROUP_TABLE = decode (' || l_id_group_table_n ||
                                      ',0,:ID_GROUP_TABLE_in, NVL (:ID_GROUP_TABLE_in, ID_GROUP_TABLE)) ' || ',' ||
                                      ' TABLE_POSITION = decode (' || l_table_position_n ||
                                      ',0,:TABLE_POSITION_in, NVL (:TABLE_POSITION_in, TABLE_POSITION)) ' || ',' ||
                                      ' FLG_ACTION = decode (' || l_flg_action_n ||
                                      ',0,:FLG_ACTION_in, NVL (:FLG_ACTION_in, FLG_ACTION)) ' || ',' ||
                                      ' ID_SAMPLE_TYPE = decode (' || l_id_sample_type_n ||
                                      ',0,:ID_SAMPLE_TYPE_in, NVL (:ID_SAMPLE_TYPE_in, ID_SAMPLE_TYPE)) ' || ',' ||
                                      ' CODE_DESC_SAMPLE_TYPE = decode (' || l_code_desc_sample_type_n ||
                                      ',0,:CODE_DESC_SAMPLE_TYPE_in, NVL (:CODE_DESC_SAMPLE_TYPE_in, CODE_DESC_SAMPLE_TYPE)) ' || ',' ||
                                      ' DT_REQ_TASK = decode (' || l_dt_req_task_n ||
                                      ',0,:DT_REQ_TASK_in, NVL (:DT_REQ_TASK_in, DT_REQ_TASK)) ' || ',' ||
                                      ' CODE_DESC_GROUP_PARENT = decode (' || l_code_desc_group_parent_n ||
                                      ',0,:CODE_DESC_GROUP_PARENT_in, NVL (:CODE_DESC_GROUP_PARENT_in, CODE_DESC_GROUP_PARENT)) ' || ',' ||
                                      ' INSTRUCTIONS_HASH = decode (' || l_instructions_hash_n ||
                                      ',0,:INSTRUCTIONS_HASH_in, NVL (:INSTRUCTIONS_HASH_in, INSTRUCTIONS_HASH)) ' ||
                                      ' where ' || nvl(where_in, '(1=1)') ||
                                      ' RETURNING ROWID BULK COLLECT INTO :l_rows_out';
        EXECUTE IMMEDIATE 'BEGIN ' || l_sql || '; END;'
            USING IN id_epis_pn_det_in, id_task_in, id_task_type_in, flg_status_in, pn_note_in, dt_last_update_in, id_prof_last_update_in, flg_table_origin_in, create_user_in, create_time_in, create_institution_in, update_user_in, update_time_in, update_institution_in, id_task_aggregator_in, dt_task_in, id_prof_task_in, rank_task_in, id_parent_in, dt_group_import_in, id_group_import_in, code_desc_group_in, id_sub_group_import_in, code_desc_sub_group_in, id_group_table_in, table_position_in, flg_action_in, id_sample_type_in, code_desc_sample_type_in, dt_req_task_in, code_desc_group_parent_in, instructions_hash_in, OUT l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_epis_pn_det_in          IN epis_pn_det_task_hist.id_epis_pn_det%TYPE DEFAULT NULL,
        id_epis_pn_det_nin         IN BOOLEAN := TRUE,
        id_task_in                 IN epis_pn_det_task_hist.id_task%TYPE DEFAULT NULL,
        id_task_nin                IN BOOLEAN := TRUE,
        id_task_type_in            IN epis_pn_det_task_hist.id_task_type%TYPE DEFAULT NULL,
        id_task_type_nin           IN BOOLEAN := TRUE,
        flg_status_in              IN epis_pn_det_task_hist.flg_status%TYPE DEFAULT NULL,
        flg_status_nin             IN BOOLEAN := TRUE,
        pn_note_in                 IN epis_pn_det_task_hist.pn_note%TYPE DEFAULT NULL,
        pn_note_nin                IN BOOLEAN := TRUE,
        dt_last_update_in          IN epis_pn_det_task_hist.dt_last_update%TYPE DEFAULT NULL,
        dt_last_update_nin         IN BOOLEAN := TRUE,
        id_prof_last_update_in     IN epis_pn_det_task_hist.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin    IN BOOLEAN := TRUE,
        flg_table_origin_in        IN epis_pn_det_task_hist.flg_table_origin%TYPE DEFAULT NULL,
        flg_table_origin_nin       IN BOOLEAN := TRUE,
        create_user_in             IN epis_pn_det_task_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin            IN BOOLEAN := TRUE,
        create_time_in             IN epis_pn_det_task_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin            IN BOOLEAN := TRUE,
        create_institution_in      IN epis_pn_det_task_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin     IN BOOLEAN := TRUE,
        update_user_in             IN epis_pn_det_task_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin            IN BOOLEAN := TRUE,
        update_time_in             IN epis_pn_det_task_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin            IN BOOLEAN := TRUE,
        update_institution_in      IN epis_pn_det_task_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin     IN BOOLEAN := TRUE,
        id_task_aggregator_in      IN epis_pn_det_task_hist.id_task_aggregator%TYPE DEFAULT NULL,
        id_task_aggregator_nin     IN BOOLEAN := TRUE,
        dt_task_in                 IN epis_pn_det_task_hist.dt_task%TYPE DEFAULT NULL,
        dt_task_nin                IN BOOLEAN := TRUE,
        id_prof_task_in            IN epis_pn_det_task_hist.id_prof_task%TYPE DEFAULT NULL,
        id_prof_task_nin           IN BOOLEAN := TRUE,
        rank_task_in               IN epis_pn_det_task_hist.rank_task%TYPE DEFAULT NULL,
        rank_task_nin              IN BOOLEAN := TRUE,
        id_parent_in               IN epis_pn_det_task_hist.id_parent%TYPE DEFAULT NULL,
        id_parent_nin              IN BOOLEAN := TRUE,
        dt_group_import_in         IN epis_pn_det_task_hist.dt_group_import%TYPE DEFAULT NULL,
        dt_group_import_nin        IN BOOLEAN := TRUE,
        id_group_import_in         IN epis_pn_det_task_hist.id_group_import%TYPE DEFAULT NULL,
        id_group_import_nin        IN BOOLEAN := TRUE,
        code_desc_group_in         IN epis_pn_det_task_hist.code_desc_group%TYPE DEFAULT NULL,
        code_desc_group_nin        IN BOOLEAN := TRUE,
        id_sub_group_import_in     IN epis_pn_det_task_hist.id_sub_group_import%TYPE DEFAULT NULL,
        id_sub_group_import_nin    IN BOOLEAN := TRUE,
        code_desc_sub_group_in     IN epis_pn_det_task_hist.code_desc_sub_group%TYPE DEFAULT NULL,
        code_desc_sub_group_nin    IN BOOLEAN := TRUE,
        id_group_table_in          IN epis_pn_det_task_hist.id_group_table%TYPE DEFAULT NULL,
        id_group_table_nin         IN BOOLEAN := TRUE,
        table_position_in          IN epis_pn_det_task_hist.table_position%TYPE DEFAULT NULL,
        table_position_nin         IN BOOLEAN := TRUE,
        flg_action_in              IN epis_pn_det_task_hist.flg_action%TYPE DEFAULT NULL,
        flg_action_nin             IN BOOLEAN := TRUE,
        id_sample_type_in          IN epis_pn_det_task_hist.id_sample_type%TYPE DEFAULT NULL,
        id_sample_type_nin         IN BOOLEAN := TRUE,
        code_desc_sample_type_in   IN epis_pn_det_task_hist.code_desc_sample_type%TYPE DEFAULT NULL,
        code_desc_sample_type_nin  IN BOOLEAN := TRUE,
        dt_req_task_in             IN epis_pn_det_task_hist.dt_req_task%TYPE DEFAULT NULL,
        dt_req_task_nin            IN BOOLEAN := TRUE,
        code_desc_group_parent_in  IN epis_pn_det_task_hist.code_desc_group_parent%TYPE DEFAULT NULL,
        code_desc_group_parent_nin IN BOOLEAN := TRUE,
        instructions_hash_in       IN epis_pn_det_task_hist.instructions_hash%TYPE DEFAULT NULL,
        instructions_hash_nin      IN BOOLEAN := TRUE,
        where_in                   IN VARCHAR2,
        handle_error_in            IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_epis_pn_det_in          => id_epis_pn_det_in,
            id_epis_pn_det_nin         => id_epis_pn_det_nin,
            id_task_in                 => id_task_in,
            id_task_nin                => id_task_nin,
            id_task_type_in            => id_task_type_in,
            id_task_type_nin           => id_task_type_nin,
            flg_status_in              => flg_status_in,
            flg_status_nin             => flg_status_nin,
            pn_note_in                 => pn_note_in,
            pn_note_nin                => pn_note_nin,
            dt_last_update_in          => dt_last_update_in,
            dt_last_update_nin         => dt_last_update_nin,
            id_prof_last_update_in     => id_prof_last_update_in,
            id_prof_last_update_nin    => id_prof_last_update_nin,
            flg_table_origin_in        => flg_table_origin_in,
            flg_table_origin_nin       => flg_table_origin_nin,
            create_user_in             => create_user_in,
            create_user_nin            => create_user_nin,
            create_time_in             => create_time_in,
            create_time_nin            => create_time_nin,
            create_institution_in      => create_institution_in,
            create_institution_nin     => create_institution_nin,
            update_user_in             => update_user_in,
            update_user_nin            => update_user_nin,
            update_time_in             => update_time_in,
            update_time_nin            => update_time_nin,
            update_institution_in      => update_institution_in,
            update_institution_nin     => update_institution_nin,
            id_task_aggregator_in      => id_task_aggregator_in,
            id_task_aggregator_nin     => id_task_aggregator_nin,
            dt_task_in                 => dt_task_in,
            dt_task_nin                => dt_task_nin,
            id_prof_task_in            => id_prof_task_in,
            id_prof_task_nin           => id_prof_task_nin,
            rank_task_in               => rank_task_in,
            rank_task_nin              => rank_task_nin,
            id_parent_in               => id_parent_in,
            id_parent_nin              => id_parent_nin,
            dt_group_import_in         => dt_group_import_in,
            dt_group_import_nin        => dt_group_import_nin,
            id_group_import_in         => id_group_import_in,
            id_group_import_nin        => id_group_import_nin,
            code_desc_group_in         => code_desc_group_in,
            code_desc_group_nin        => code_desc_group_nin,
            id_sub_group_import_in     => id_sub_group_import_in,
            id_sub_group_import_nin    => id_sub_group_import_nin,
            code_desc_sub_group_in     => code_desc_sub_group_in,
            code_desc_sub_group_nin    => code_desc_sub_group_nin,
            id_group_table_in          => id_group_table_in,
            id_group_table_nin         => id_group_table_nin,
            table_position_in          => table_position_in,
            table_position_nin         => table_position_nin,
            flg_action_in              => flg_action_in,
            flg_action_nin             => flg_action_nin,
            id_sample_type_in          => id_sample_type_in,
            id_sample_type_nin         => id_sample_type_nin,
            code_desc_sample_type_in   => code_desc_sample_type_in,
            code_desc_sample_type_nin  => code_desc_sample_type_nin,
            dt_req_task_in             => dt_req_task_in,
            dt_req_task_nin            => dt_req_task_nin,
            code_desc_group_parent_in  => code_desc_group_parent_in,
            code_desc_group_parent_nin => code_desc_group_parent_nin,
            instructions_hash_in       => instructions_hash_in,
            instructions_hash_nin      => instructions_hash_nin,
            where_in                   => where_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END upd;

    --Update/insert columns (with rows_out)
    PROCEDURE upd_ins
    (
        dt_epis_pn_det_task_hist_in IN epis_pn_det_task_hist.dt_epis_pn_det_task_hist%TYPE,
        id_epis_pn_det_task_in      IN epis_pn_det_task_hist.id_epis_pn_det_task%TYPE,
        id_epis_pn_det_in           IN epis_pn_det_task_hist.id_epis_pn_det%TYPE DEFAULT NULL,
        id_task_in                  IN epis_pn_det_task_hist.id_task%TYPE DEFAULT NULL,
        id_task_type_in             IN epis_pn_det_task_hist.id_task_type%TYPE DEFAULT NULL,
        flg_status_in               IN epis_pn_det_task_hist.flg_status%TYPE DEFAULT NULL,
        pn_note_in                  IN epis_pn_det_task_hist.pn_note%TYPE DEFAULT NULL,
        dt_last_update_in           IN epis_pn_det_task_hist.dt_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_in      IN epis_pn_det_task_hist.id_prof_last_update%TYPE DEFAULT NULL,
        flg_table_origin_in         IN epis_pn_det_task_hist.flg_table_origin%TYPE DEFAULT NULL,
        create_user_in              IN epis_pn_det_task_hist.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_pn_det_task_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_pn_det_task_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_pn_det_task_hist.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_pn_det_task_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_pn_det_task_hist.update_institution%TYPE DEFAULT NULL,
        id_task_aggregator_in       IN epis_pn_det_task_hist.id_task_aggregator%TYPE DEFAULT NULL,
        dt_task_in                  IN epis_pn_det_task_hist.dt_task%TYPE DEFAULT NULL,
        id_prof_task_in             IN epis_pn_det_task_hist.id_prof_task%TYPE DEFAULT NULL,
        rank_task_in                IN epis_pn_det_task_hist.rank_task%TYPE DEFAULT NULL,
        id_parent_in                IN epis_pn_det_task_hist.id_parent%TYPE DEFAULT NULL,
        dt_group_import_in          IN epis_pn_det_task_hist.dt_group_import%TYPE DEFAULT NULL,
        id_group_import_in          IN epis_pn_det_task_hist.id_group_import%TYPE DEFAULT NULL,
        code_desc_group_in          IN epis_pn_det_task_hist.code_desc_group%TYPE DEFAULT NULL,
        id_sub_group_import_in      IN epis_pn_det_task_hist.id_sub_group_import%TYPE DEFAULT NULL,
        code_desc_sub_group_in      IN epis_pn_det_task_hist.code_desc_sub_group%TYPE DEFAULT NULL,
        id_group_table_in           IN epis_pn_det_task_hist.id_group_table%TYPE DEFAULT NULL,
        table_position_in           IN epis_pn_det_task_hist.table_position%TYPE DEFAULT NULL,
        flg_action_in               IN epis_pn_det_task_hist.flg_action%TYPE DEFAULT NULL,
        id_sample_type_in           IN epis_pn_det_task_hist.id_sample_type%TYPE DEFAULT NULL,
        code_desc_sample_type_in    IN epis_pn_det_task_hist.code_desc_sample_type%TYPE DEFAULT NULL,
        dt_req_task_in              IN epis_pn_det_task_hist.dt_req_task%TYPE DEFAULT NULL,
        code_desc_group_parent_in   IN epis_pn_det_task_hist.code_desc_group_parent%TYPE DEFAULT NULL,
        instructions_hash_in        IN epis_pn_det_task_hist.instructions_hash%TYPE DEFAULT NULL,
        handle_error_in             IN BOOLEAN := FALSE,
        rows_out                    IN OUT table_varchar
    ) IS
    BEGIN
        upd(dt_epis_pn_det_task_hist_in => dt_epis_pn_det_task_hist_in,
            id_epis_pn_det_task_in      => id_epis_pn_det_task_in,
            id_epis_pn_det_in           => id_epis_pn_det_in,
            id_task_in                  => id_task_in,
            id_task_type_in             => id_task_type_in,
            flg_status_in               => flg_status_in,
            pn_note_in                  => pn_note_in,
            dt_last_update_in           => dt_last_update_in,
            id_prof_last_update_in      => id_prof_last_update_in,
            flg_table_origin_in         => flg_table_origin_in,
            create_user_in              => create_user_in,
            create_time_in              => create_time_in,
            create_institution_in       => create_institution_in,
            update_user_in              => update_user_in,
            update_time_in              => update_time_in,
            update_institution_in       => update_institution_in,
            id_task_aggregator_in       => id_task_aggregator_in,
            dt_task_in                  => dt_task_in,
            id_prof_task_in             => id_prof_task_in,
            rank_task_in                => rank_task_in,
            id_parent_in                => id_parent_in,
            dt_group_import_in          => dt_group_import_in,
            id_group_import_in          => id_group_import_in,
            code_desc_group_in          => code_desc_group_in,
            id_sub_group_import_in      => id_sub_group_import_in,
            code_desc_sub_group_in      => code_desc_sub_group_in,
            id_group_table_in           => id_group_table_in,
            table_position_in           => table_position_in,
            flg_action_in               => flg_action_in,
            id_sample_type_in           => id_sample_type_in,
            code_desc_sample_type_in    => code_desc_sample_type_in,
            dt_req_task_in              => dt_req_task_in,
            code_desc_group_parent_in   => code_desc_group_parent_in,
            instructions_hash_in        => instructions_hash_in,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
        IF SQL%ROWCOUNT = 0
        THEN
            ins(dt_epis_pn_det_task_hist_in => dt_epis_pn_det_task_hist_in,
                id_epis_pn_det_task_in      => id_epis_pn_det_task_in,
                id_epis_pn_det_in           => id_epis_pn_det_in,
                id_task_in                  => id_task_in,
                id_task_type_in             => id_task_type_in,
                flg_status_in               => flg_status_in,
                pn_note_in                  => pn_note_in,
                dt_last_update_in           => dt_last_update_in,
                id_prof_last_update_in      => id_prof_last_update_in,
                flg_table_origin_in         => flg_table_origin_in,
                create_user_in              => create_user_in,
                create_time_in              => create_time_in,
                create_institution_in       => create_institution_in,
                update_user_in              => update_user_in,
                update_time_in              => update_time_in,
                update_institution_in       => update_institution_in,
                id_task_aggregator_in       => id_task_aggregator_in,
                dt_task_in                  => dt_task_in,
                id_prof_task_in             => id_prof_task_in,
                rank_task_in                => rank_task_in,
                id_parent_in                => id_parent_in,
                dt_group_import_in          => dt_group_import_in,
                id_group_import_in          => id_group_import_in,
                code_desc_group_in          => code_desc_group_in,
                id_sub_group_import_in      => id_sub_group_import_in,
                code_desc_sub_group_in      => code_desc_sub_group_in,
                id_group_table_in           => id_group_table_in,
                table_position_in           => table_position_in,
                flg_action_in               => flg_action_in,
                id_sample_type_in           => id_sample_type_in,
                code_desc_sample_type_in    => code_desc_sample_type_in,
                dt_req_task_in              => dt_req_task_in,
                code_desc_group_parent_in   => code_desc_group_parent_in,
                instructions_hash_in        => instructions_hash_in,
                handle_error_in             => handle_error_in,
                rows_out                    => rows_out);
        END IF;
    END upd_ins;

    --Update/insert columns (without rows_out)
    PROCEDURE upd_ins
    (
        dt_epis_pn_det_task_hist_in IN epis_pn_det_task_hist.dt_epis_pn_det_task_hist%TYPE,
        id_epis_pn_det_task_in      IN epis_pn_det_task_hist.id_epis_pn_det_task%TYPE,
        id_epis_pn_det_in           IN epis_pn_det_task_hist.id_epis_pn_det%TYPE DEFAULT NULL,
        id_task_in                  IN epis_pn_det_task_hist.id_task%TYPE DEFAULT NULL,
        id_task_type_in             IN epis_pn_det_task_hist.id_task_type%TYPE DEFAULT NULL,
        flg_status_in               IN epis_pn_det_task_hist.flg_status%TYPE DEFAULT NULL,
        pn_note_in                  IN epis_pn_det_task_hist.pn_note%TYPE DEFAULT NULL,
        dt_last_update_in           IN epis_pn_det_task_hist.dt_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_in      IN epis_pn_det_task_hist.id_prof_last_update%TYPE DEFAULT NULL,
        flg_table_origin_in         IN epis_pn_det_task_hist.flg_table_origin%TYPE DEFAULT NULL,
        create_user_in              IN epis_pn_det_task_hist.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_pn_det_task_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_pn_det_task_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_pn_det_task_hist.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_pn_det_task_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_pn_det_task_hist.update_institution%TYPE DEFAULT NULL,
        id_task_aggregator_in       IN epis_pn_det_task_hist.id_task_aggregator%TYPE DEFAULT NULL,
        dt_task_in                  IN epis_pn_det_task_hist.dt_task%TYPE DEFAULT NULL,
        id_prof_task_in             IN epis_pn_det_task_hist.id_prof_task%TYPE DEFAULT NULL,
        rank_task_in                IN epis_pn_det_task_hist.rank_task%TYPE DEFAULT NULL,
        id_parent_in                IN epis_pn_det_task_hist.id_parent%TYPE DEFAULT NULL,
        dt_group_import_in          IN epis_pn_det_task_hist.dt_group_import%TYPE DEFAULT NULL,
        id_group_import_in          IN epis_pn_det_task_hist.id_group_import%TYPE DEFAULT NULL,
        code_desc_group_in          IN epis_pn_det_task_hist.code_desc_group%TYPE DEFAULT NULL,
        id_sub_group_import_in      IN epis_pn_det_task_hist.id_sub_group_import%TYPE DEFAULT NULL,
        code_desc_sub_group_in      IN epis_pn_det_task_hist.code_desc_sub_group%TYPE DEFAULT NULL,
        id_group_table_in           IN epis_pn_det_task_hist.id_group_table%TYPE DEFAULT NULL,
        table_position_in           IN epis_pn_det_task_hist.table_position%TYPE DEFAULT NULL,
        flg_action_in               IN epis_pn_det_task_hist.flg_action%TYPE DEFAULT NULL,
        id_sample_type_in           IN epis_pn_det_task_hist.id_sample_type%TYPE DEFAULT NULL,
        code_desc_sample_type_in    IN epis_pn_det_task_hist.code_desc_sample_type%TYPE DEFAULT NULL,
        dt_req_task_in              IN epis_pn_det_task_hist.dt_req_task%TYPE DEFAULT NULL,
        code_desc_group_parent_in   IN epis_pn_det_task_hist.code_desc_group_parent%TYPE DEFAULT NULL,
        instructions_hash_in        IN epis_pn_det_task_hist.instructions_hash%TYPE DEFAULT NULL,
        handle_error_in             IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd_ins(dt_epis_pn_det_task_hist_in,
                id_epis_pn_det_task_in,
                id_epis_pn_det_in,
                id_task_in,
                id_task_type_in,
                flg_status_in,
                pn_note_in,
                dt_last_update_in,
                id_prof_last_update_in,
                flg_table_origin_in,
                create_user_in,
                create_time_in,
                create_institution_in,
                update_user_in,
                update_time_in,
                update_institution_in,
                id_task_aggregator_in,
                dt_task_in,
                id_prof_task_in,
                rank_task_in,
                id_parent_in,
                dt_group_import_in,
                id_group_import_in,
                code_desc_group_in,
                id_sub_group_import_in,
                code_desc_sub_group_in,
                id_group_table_in,
                table_position_in,
                flg_action_in,
                id_sample_type_in,
                code_desc_sample_type_in,
                dt_req_task_in,
                code_desc_group_parent_in,
                instructions_hash_in,
                handle_error_in,
                rows_out);
    END upd_ins;

    --Update by record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN epis_pn_det_task_hist%ROWTYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        IN OUT table_varchar
    ) IS
    BEGIN
        upd(dt_epis_pn_det_task_hist_in => rec_in.dt_epis_pn_det_task_hist,
            id_epis_pn_det_task_in      => rec_in.id_epis_pn_det_task,
            id_epis_pn_det_in           => rec_in.id_epis_pn_det,
            id_task_in                  => rec_in.id_task,
            id_task_type_in             => rec_in.id_task_type,
            flg_status_in               => rec_in.flg_status,
            pn_note_in                  => rec_in.pn_note,
            dt_last_update_in           => rec_in.dt_last_update,
            id_prof_last_update_in      => rec_in.id_prof_last_update,
            flg_table_origin_in         => rec_in.flg_table_origin,
            create_user_in              => rec_in.create_user,
            create_time_in              => rec_in.create_time,
            create_institution_in       => rec_in.create_institution,
            update_user_in              => rec_in.update_user,
            update_time_in              => rec_in.update_time,
            update_institution_in       => rec_in.update_institution,
            id_task_aggregator_in       => rec_in.id_task_aggregator,
            dt_task_in                  => rec_in.dt_task,
            id_prof_task_in             => rec_in.id_prof_task,
            rank_task_in                => rec_in.rank_task,
            id_parent_in                => rec_in.id_parent,
            dt_group_import_in          => rec_in.dt_group_import,
            id_group_import_in          => rec_in.id_group_import,
            code_desc_group_in          => rec_in.code_desc_group,
            id_sub_group_import_in      => rec_in.id_sub_group_import,
            code_desc_sub_group_in      => rec_in.code_desc_sub_group,
            id_group_table_in           => rec_in.id_group_table,
            table_position_in           => rec_in.table_position,
            flg_action_in               => rec_in.flg_action,
            id_sample_type_in           => rec_in.id_sample_type,
            code_desc_sample_type_in    => rec_in.code_desc_sample_type,
            dt_req_task_in              => rec_in.dt_req_task,
            code_desc_group_parent_in   => rec_in.code_desc_group_parent,
            instructions_hash_in        => rec_in.instructions_hash,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END upd;

    --Update by record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN epis_pn_det_task_hist%ROWTYPE,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(dt_epis_pn_det_task_hist_in => rec_in.dt_epis_pn_det_task_hist,
            id_epis_pn_det_task_in      => rec_in.id_epis_pn_det_task,
            id_epis_pn_det_in           => rec_in.id_epis_pn_det,
            id_task_in                  => rec_in.id_task,
            id_task_type_in             => rec_in.id_task_type,
            flg_status_in               => rec_in.flg_status,
            pn_note_in                  => rec_in.pn_note,
            dt_last_update_in           => rec_in.dt_last_update,
            id_prof_last_update_in      => rec_in.id_prof_last_update,
            flg_table_origin_in         => rec_in.flg_table_origin,
            create_user_in              => rec_in.create_user,
            create_time_in              => rec_in.create_time,
            create_institution_in       => rec_in.create_institution,
            update_user_in              => rec_in.update_user,
            update_time_in              => rec_in.update_time,
            update_institution_in       => rec_in.update_institution,
            id_task_aggregator_in       => rec_in.id_task_aggregator,
            dt_task_in                  => rec_in.dt_task,
            id_prof_task_in             => rec_in.id_prof_task,
            rank_task_in                => rec_in.rank_task,
            id_parent_in                => rec_in.id_parent,
            dt_group_import_in          => rec_in.dt_group_import,
            id_group_import_in          => rec_in.id_group_import,
            code_desc_group_in          => rec_in.code_desc_group,
            id_sub_group_import_in      => rec_in.id_sub_group_import,
            code_desc_sub_group_in      => rec_in.code_desc_sub_group,
            id_group_table_in           => rec_in.id_group_table,
            table_position_in           => rec_in.table_position,
            flg_action_in               => rec_in.flg_action,
            id_sample_type_in           => rec_in.id_sample_type,
            code_desc_sample_type_in    => rec_in.code_desc_sample_type,
            dt_req_task_in              => rec_in.dt_req_task,
            code_desc_group_parent_in   => rec_in.code_desc_group_parent,
            instructions_hash_in        => rec_in.instructions_hash,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END upd;

    --Update with collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN epis_pn_det_task_hist_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := FALSE,
        rows_out          IN OUT table_varchar
    ) IS
        l_dt_epis_pn_det_task_hist dt_epis_pn_det_task_hist_cc;
        l_id_epis_pn_det_task      id_epis_pn_det_task_cc;
        l_id_epis_pn_det           id_epis_pn_det_cc;
        l_id_task                  id_task_cc;
        l_id_task_type             id_task_type_cc;
        l_flg_status               flg_status_cc;
        l_pn_note                  pn_note_cc;
        l_dt_last_update           dt_last_update_cc;
        l_id_prof_last_update      id_prof_last_update_cc;
        l_flg_table_origin         flg_table_origin_cc;
        l_create_user              create_user_cc;
        l_create_time              create_time_cc;
        l_create_institution       create_institution_cc;
        l_update_user              update_user_cc;
        l_update_time              update_time_cc;
        l_update_institution       update_institution_cc;
        l_id_task_aggregator       id_task_aggregator_cc;
        l_dt_task                  dt_task_cc;
        l_id_prof_task             id_prof_task_cc;
        l_rank_task                rank_task_cc;
        l_id_parent                id_parent_cc;
        l_dt_group_import          dt_group_import_cc;
        l_id_group_import          id_group_import_cc;
        l_code_desc_group          code_desc_group_cc;
        l_id_sub_group_import      id_sub_group_import_cc;
        l_code_desc_sub_group      code_desc_sub_group_cc;
        l_id_group_table           id_group_table_cc;
        l_table_position           table_position_cc;
        l_flg_action               flg_action_cc;
        l_id_sample_type           id_sample_type_cc;
        l_code_desc_sample_type    code_desc_sample_type_cc;
        l_dt_req_task              dt_req_task_cc;
        l_code_desc_group_parent   code_desc_group_parent_cc;
        l_instructions_hash        instructions_hash_cc;
    BEGIN
        FOR i IN col_in.first .. col_in.last
        LOOP
            l_dt_epis_pn_det_task_hist(i) := col_in(i).dt_epis_pn_det_task_hist;
            l_id_epis_pn_det_task(i) := col_in(i).id_epis_pn_det_task;
            l_id_epis_pn_det(i) := col_in(i).id_epis_pn_det;
            l_id_task(i) := col_in(i).id_task;
            l_id_task_type(i) := col_in(i).id_task_type;
            l_flg_status(i) := col_in(i).flg_status;
            l_pn_note(i) := col_in(i).pn_note;
            l_dt_last_update(i) := col_in(i).dt_last_update;
            l_id_prof_last_update(i) := col_in(i).id_prof_last_update;
            l_flg_table_origin(i) := col_in(i).flg_table_origin;
            l_create_user(i) := col_in(i).create_user;
            l_create_time(i) := col_in(i).create_time;
            l_create_institution(i) := col_in(i).create_institution;
            l_update_user(i) := col_in(i).update_user;
            l_update_time(i) := col_in(i).update_time;
            l_update_institution(i) := col_in(i).update_institution;
            l_id_task_aggregator(i) := col_in(i).id_task_aggregator;
            l_dt_task(i) := col_in(i).dt_task;
            l_id_prof_task(i) := col_in(i).id_prof_task;
            l_rank_task(i) := col_in(i).rank_task;
            l_id_parent(i) := col_in(i).id_parent;
            l_dt_group_import(i) := col_in(i).dt_group_import;
            l_id_group_import(i) := col_in(i).id_group_import;
            l_code_desc_group(i) := col_in(i).code_desc_group;
            l_id_sub_group_import(i) := col_in(i).id_sub_group_import;
            l_code_desc_sub_group(i) := col_in(i).code_desc_sub_group;
            l_id_group_table(i) := col_in(i).id_group_table;
            l_table_position(i) := col_in(i).table_position;
            l_flg_action(i) := col_in(i).flg_action;
            l_id_sample_type(i) := col_in(i).id_sample_type;
            l_code_desc_sample_type(i) := col_in(i).code_desc_sample_type;
            l_dt_req_task(i) := col_in(i).dt_req_task;
            l_code_desc_group_parent(i) := col_in(i).code_desc_group_parent;
            l_instructions_hash(i) := col_in(i).instructions_hash;
        END LOOP;
        IF nvl(ignore_if_null_in, FALSE)
        THEN
            -- Set any columns to their current values
            -- if incoming value is NULL.
            -- Put WHEN clause on column-level triggers!
            FORALL i IN col_in.first .. col_in.last
                UPDATE epis_pn_det_task_hist
                   SET id_epis_pn_det         = nvl(l_id_epis_pn_det(i), id_epis_pn_det),
                       id_task                = nvl(l_id_task(i), id_task),
                       id_task_type           = nvl(l_id_task_type(i), id_task_type),
                       flg_status             = nvl(l_flg_status(i), flg_status),
                       pn_note                = nvl(l_pn_note(i), pn_note),
                       dt_last_update         = nvl(l_dt_last_update(i), dt_last_update),
                       id_prof_last_update    = nvl(l_id_prof_last_update(i), id_prof_last_update),
                       flg_table_origin       = nvl(l_flg_table_origin(i), flg_table_origin),
                       create_user            = nvl(l_create_user(i), create_user),
                       create_time            = nvl(l_create_time(i), create_time),
                       create_institution     = nvl(l_create_institution(i), create_institution),
                       update_user            = nvl(l_update_user(i), update_user),
                       update_time            = nvl(l_update_time(i), update_time),
                       update_institution     = nvl(l_update_institution(i), update_institution),
                       id_task_aggregator     = nvl(l_id_task_aggregator(i), id_task_aggregator),
                       dt_task                = nvl(l_dt_task(i), dt_task),
                       id_prof_task           = nvl(l_id_prof_task(i), id_prof_task),
                       rank_task              = nvl(l_rank_task(i), rank_task),
                       id_parent              = nvl(l_id_parent(i), id_parent),
                       dt_group_import        = nvl(l_dt_group_import(i), dt_group_import),
                       id_group_import        = nvl(l_id_group_import(i), id_group_import),
                       code_desc_group        = nvl(l_code_desc_group(i), code_desc_group),
                       id_sub_group_import    = nvl(l_id_sub_group_import(i), id_sub_group_import),
                       code_desc_sub_group    = nvl(l_code_desc_sub_group(i), code_desc_sub_group),
                       id_group_table         = nvl(l_id_group_table(i), id_group_table),
                       table_position         = nvl(l_table_position(i), table_position),
                       flg_action             = nvl(l_flg_action(i), flg_action),
                       id_sample_type         = nvl(l_id_sample_type(i), id_sample_type),
                       code_desc_sample_type  = nvl(l_code_desc_sample_type(i), code_desc_sample_type),
                       dt_req_task            = nvl(l_dt_req_task(i), dt_req_task),
                       code_desc_group_parent = nvl(l_code_desc_group_parent(i), code_desc_group_parent),
                       instructions_hash      = nvl(l_instructions_hash(i), instructions_hash)
                 WHERE dt_epis_pn_det_task_hist = l_dt_epis_pn_det_task_hist(i)
                   AND id_epis_pn_det_task = l_id_epis_pn_det_task(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        ELSE
            FORALL i IN col_in.first .. col_in.last
                UPDATE epis_pn_det_task_hist
                   SET id_epis_pn_det         = l_id_epis_pn_det(i),
                       id_task                = l_id_task(i),
                       id_task_type           = l_id_task_type(i),
                       flg_status             = l_flg_status(i),
                       pn_note                = l_pn_note(i),
                       dt_last_update         = l_dt_last_update(i),
                       id_prof_last_update    = l_id_prof_last_update(i),
                       flg_table_origin       = l_flg_table_origin(i),
                       create_user            = l_create_user(i),
                       create_time            = l_create_time(i),
                       create_institution     = l_create_institution(i),
                       update_user            = l_update_user(i),
                       update_time            = l_update_time(i),
                       update_institution     = l_update_institution(i),
                       id_task_aggregator     = l_id_task_aggregator(i),
                       dt_task                = l_dt_task(i),
                       id_prof_task           = l_id_prof_task(i),
                       rank_task              = l_rank_task(i),
                       id_parent              = l_id_parent(i),
                       dt_group_import        = l_dt_group_import(i),
                       id_group_import        = l_id_group_import(i),
                       code_desc_group        = l_code_desc_group(i),
                       id_sub_group_import    = l_id_sub_group_import(i),
                       code_desc_sub_group    = l_code_desc_sub_group(i),
                       id_group_table         = l_id_group_table(i),
                       table_position         = l_table_position(i),
                       flg_action             = l_flg_action(i),
                       id_sample_type         = l_id_sample_type(i),
                       code_desc_sample_type  = l_code_desc_sample_type(i),
                       dt_req_task            = l_dt_req_task(i),
                       code_desc_group_parent = l_code_desc_group_parent(i),
                       instructions_hash      = l_instructions_hash(i)
                 WHERE dt_epis_pn_det_task_hist = l_dt_epis_pn_det_task_hist(i)
                   AND id_epis_pn_det_task = l_id_epis_pn_det_task(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update with collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN epis_pn_det_task_hist_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(col_in, ignore_if_null_in, handle_error_in, rows_out);
    END upd;

    --Dynamic update string
    FUNCTION dynupdstr
    (
        colname_in IN all_tab_columns.column_name%TYPE,
        where_in   IN VARCHAR2 := NULL
    ) RETURN VARCHAR2 IS
    BEGIN
        RETURN 'BEGIN UPDATE epis_pn_det_task_hist
SET ' || colname_in || ' = :value
 WHERE ' || nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;';
    END dynupdstr;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (with rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := FALSE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN UPDATE epis_pn_det_task_hist
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    END increment_onecol;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (without rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        EXECUTE IMMEDIATE 'UPDATE epis_pn_det_task_hist
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1');
    END increment_onecol;

    -- Delete one row by primary key
    PROCEDURE del
    (
        dt_epis_pn_det_task_hist_in IN epis_pn_det_task_hist.dt_epis_pn_det_task_hist%TYPE,
        id_epis_pn_det_task_in      IN epis_pn_det_task_hist.id_epis_pn_det_task%TYPE,
        handle_error_in             IN BOOLEAN := FALSE,
        rows_out                    OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM epis_pn_det_task_hist
         WHERE dt_epis_pn_det_task_hist = dt_epis_pn_det_task_hist_in
           AND id_epis_pn_det_task = id_epis_pn_det_task_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del;

    -- Delete one row by primary key
    PROCEDURE del
    (
        dt_epis_pn_det_task_hist_in IN epis_pn_det_task_hist.dt_epis_pn_det_task_hist%TYPE,
        id_epis_pn_det_task_in      IN epis_pn_det_task_hist.id_epis_pn_det_task%TYPE,
        handle_error_in             IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del(dt_epis_pn_det_task_hist_in => dt_epis_pn_det_task_hist_in,
            id_epis_pn_det_task_in      => id_epis_pn_det_task_in,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END del;

    -- Delete all rows for this EPDTKH_EPDT_FK foreign key value
    PROCEDURE del_epdtkh_epdt_fk
    (
        id_epis_pn_det_task_in IN epis_pn_det_task_hist.id_epis_pn_det_task%TYPE,
        handle_error_in        IN BOOLEAN := FALSE,
        rows_out               OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM epis_pn_det_task_hist
         WHERE id_epis_pn_det_task = id_epis_pn_det_task_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_epdtkh_epdt_fk;

    -- Delete all rows for this EPDTKH_PROF_FK foreign key value
    PROCEDURE del_epdtkh_prof_fk
    (
        id_prof_last_update_in IN epis_pn_det_task_hist.id_prof_last_update%TYPE,
        handle_error_in        IN BOOLEAN := FALSE,
        rows_out               OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM epis_pn_det_task_hist
         WHERE id_prof_last_update = id_prof_last_update_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_epdtkh_prof_fk;

    -- Delete all rows for this EPDTKH_EPDT_FK foreign key value
    PROCEDURE del_epdtkh_epdt_fk
    (
        id_epis_pn_det_task_in IN epis_pn_det_task_hist.id_epis_pn_det_task%TYPE,
        handle_error_in        IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_epdtkh_epdt_fk(id_epis_pn_det_task_in => id_epis_pn_det_task_in,
                           handle_error_in        => handle_error_in,
                           rows_out               => rows_out);
    END del_epdtkh_epdt_fk;

    -- Delete all rows for this EPDTKH_PROF_FK foreign key value
    PROCEDURE del_epdtkh_prof_fk
    (
        id_prof_last_update_in IN epis_pn_det_task_hist.id_prof_last_update%TYPE,
        handle_error_in        IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_epdtkh_prof_fk(id_prof_last_update_in => id_prof_last_update_in,
                           handle_error_in        => handle_error_in,
                           rows_out               => rows_out);
    END del_epdtkh_prof_fk;

    -- Deletions using dynamic SQL
    FUNCTION dyndelstr(where_in IN VARCHAR2) RETURN VARCHAR2 IS
    BEGIN
        IF where_in IS NULL
        THEN
            RETURN 'DELETE FROM epis_pn_det_task_hist';
        ELSE
            RETURN 'DELETE FROM epis_pn_det_task_hist WHERE ' || where_in;
        END IF;
    END dyndelstr;
    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyndelstr(where_clause_in) ||
                          ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyndelstr(where_clause_in);
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(epis_pn_det_task_hist_inout IN OUT epis_pn_det_task_hist%ROWTYPE) IS
    BEGIN
        epis_pn_det_task_hist_inout.dt_epis_pn_det_task_hist := NULL;
        epis_pn_det_task_hist_inout.id_epis_pn_det_task      := NULL;
        epis_pn_det_task_hist_inout.id_epis_pn_det           := NULL;
        epis_pn_det_task_hist_inout.id_task                  := NULL;
        epis_pn_det_task_hist_inout.id_task_type             := NULL;
        epis_pn_det_task_hist_inout.flg_status               := NULL;
        epis_pn_det_task_hist_inout.pn_note                  := NULL;
        epis_pn_det_task_hist_inout.dt_last_update           := NULL;
        epis_pn_det_task_hist_inout.id_prof_last_update      := NULL;
        epis_pn_det_task_hist_inout.flg_table_origin         := NULL;
        epis_pn_det_task_hist_inout.create_user              := NULL;
        epis_pn_det_task_hist_inout.create_time              := NULL;
        epis_pn_det_task_hist_inout.create_institution       := NULL;
        epis_pn_det_task_hist_inout.update_user              := NULL;
        epis_pn_det_task_hist_inout.update_time              := NULL;
        epis_pn_det_task_hist_inout.update_institution       := NULL;
        epis_pn_det_task_hist_inout.id_task_aggregator       := NULL;
        epis_pn_det_task_hist_inout.dt_task                  := NULL;
        epis_pn_det_task_hist_inout.id_prof_task             := NULL;
        epis_pn_det_task_hist_inout.rank_task                := NULL;
        epis_pn_det_task_hist_inout.id_parent                := NULL;
        epis_pn_det_task_hist_inout.dt_group_import          := NULL;
        epis_pn_det_task_hist_inout.id_group_import          := NULL;
        epis_pn_det_task_hist_inout.code_desc_group          := NULL;
        epis_pn_det_task_hist_inout.id_sub_group_import      := NULL;
        epis_pn_det_task_hist_inout.code_desc_sub_group      := NULL;
        epis_pn_det_task_hist_inout.id_group_table           := NULL;
        epis_pn_det_task_hist_inout.table_position           := NULL;
        epis_pn_det_task_hist_inout.flg_action               := NULL;
        epis_pn_det_task_hist_inout.id_sample_type           := NULL;
        epis_pn_det_task_hist_inout.code_desc_sample_type    := NULL;
        epis_pn_det_task_hist_inout.dt_req_task              := NULL;
        epis_pn_det_task_hist_inout.code_desc_group_parent   := NULL;
        epis_pn_det_task_hist_inout.instructions_hash        := NULL;
    END initrec;

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN epis_pn_det_task_hist%ROWTYPE IS
        l_epis_pn_det_task_hist epis_pn_det_task_hist%ROWTYPE;
    BEGIN
        RETURN l_epis_pn_det_task_hist;
    END initrec;

    --get data from rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN epis_pn_det_task_hist_tc IS
        data epis_pn_det_task_hist_tc;
    BEGIN
        SELECT *
          BULK COLLECT
          INTO data
          FROM epis_pn_det_task_hist
         WHERE ROWID IN (SELECT /*+ OPT_ESTIMATE(TABLE t ROWS=1) */
                          *
                           FROM TABLE(rows_in) t);
        RETURN data;
    END get_data_rowid;

    --get data from rowid (pragma autonomous transacion)
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN epis_pn_det_task_hist_tc IS
        data epis_pn_det_task_hist_tc;
        PRAGMA AUTONOMOUS_TRANSACTION;
    BEGIN
        data := get_data_rowid(rows_in);
        COMMIT;
        RETURN data;
    
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'get_data_rowid_pat');
            ROLLBACK;
        
    END get_data_rowid_pat;

BEGIN
    NULL;
END ts_epis_pn_det_task_hist;
/
