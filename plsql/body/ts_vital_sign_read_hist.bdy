/*-- Last Change Revision: $Rev: 1803920 $*/
/*-- Last Change by: $Author: pedro.teixeira $*/
/*-- Date of last change: $Date: 2017-11-03 18:31:33 +0000 (sex, 03 nov 2017) $*/
CREATE OR REPLACE PACKAGE BODY ts_vital_sign_read_hist
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2017-09-28 11:24:18
| Created By: ALERT
*/
 IS

    e_null_column_value EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_null_column_value, -1400);

    e_existing_fky_reference EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_existing_fky_reference, -2266);

    e_check_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_check_constraint_failure, -2290);

    e_no_parent_key EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_no_parent_key, -2291);

    e_child_record_found EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_child_record_found, -2292);

    e_forall_error EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_forall_error, -24381);

    -- Defined for backward compatibilty.
    e_integ_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_integ_constraint_failure, -2291);

    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN vital_sign_read_hist.id_vital_sign_read_hist%TYPE IS
        retval vital_sign_read_hist.id_vital_sign_read_hist%TYPE;
    BEGIN
        IF sequence_in IS NULL
        THEN
            retval := seq_vital_sign_read_hist.nextval;
        ELSE
            EXECUTE IMMEDIATE 'SELECT ' || sequence_in || '.NEXTVAL FROM dual'
                INTO retval;
        END IF;
        RETURN retval;
    END next_key;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_vital_sign_read_in      IN vital_sign_read_hist.id_vital_sign_read%TYPE DEFAULT NULL,
        value_in                   IN vital_sign_read_hist.value%TYPE DEFAULT NULL,
        flg_status_in              IN vital_sign_read_hist.flg_status%TYPE DEFAULT NULL,
        id_unit_measure_in         IN vital_sign_read_hist.id_unit_measure%TYPE DEFAULT NULL,
        id_prof_read_in            IN vital_sign_read_hist.id_prof_read%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_in IN vital_sign_read_hist.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_registry_in             IN vital_sign_read_hist.dt_registry%TYPE DEFAULT NULL,
        flg_value_changed_in       IN vital_sign_read_hist.flg_value_changed%TYPE DEFAULT NULL,
        flg_status_changed_in      IN vital_sign_read_hist.flg_status_changed%TYPE DEFAULT NULL,
        flg_dt_vs_read_changed_in  IN vital_sign_read_hist.flg_dt_vs_read_changed%TYPE DEFAULT NULL,
        flg_id_prof_changed_in     IN vital_sign_read_hist.flg_id_prof_changed%TYPE DEFAULT NULL,
        flg_id_unit_changed_in     IN vital_sign_read_hist.flg_id_unit_changed%TYPE DEFAULT NULL,
        create_user_in             IN vital_sign_read_hist.create_user%TYPE DEFAULT NULL,
        create_time_in             IN vital_sign_read_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN vital_sign_read_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN vital_sign_read_hist.update_user%TYPE DEFAULT NULL,
        update_time_in             IN vital_sign_read_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN vital_sign_read_hist.update_institution%TYPE DEFAULT NULL,
        id_vital_sign_desc_in      IN vital_sign_read_hist.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_unit_measure_sel_in     IN vital_sign_read_hist.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_edit_reason_in          IN vital_sign_read_hist.id_edit_reason%TYPE DEFAULT NULL,
        notes_edit_in              IN vital_sign_read_hist.notes_edit%TYPE DEFAULT NULL,
        value_high_in              IN vital_sign_read_hist.value_high%TYPE DEFAULT NULL,
        value_low_in               IN vital_sign_read_hist.value_low%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_pky vital_sign_read_hist.id_vital_sign_read_hist%TYPE := next_key;
    BEGIN
        ins(id_vital_sign_read_hist_in => l_pky,
            id_vital_sign_read_in      => id_vital_sign_read_in,
            value_in                   => value_in,
            flg_status_in              => flg_status_in,
            id_unit_measure_in         => id_unit_measure_in,
            id_prof_read_in            => id_prof_read_in,
            dt_vital_sign_read_tstz_in => dt_vital_sign_read_tstz_in,
            dt_registry_in             => dt_registry_in,
            flg_value_changed_in       => flg_value_changed_in,
            flg_status_changed_in      => flg_status_changed_in,
            flg_dt_vs_read_changed_in  => flg_dt_vs_read_changed_in,
            flg_id_prof_changed_in     => flg_id_prof_changed_in,
            flg_id_unit_changed_in     => flg_id_unit_changed_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            id_vital_sign_desc_in      => id_vital_sign_desc_in,
            id_unit_measure_sel_in     => id_unit_measure_sel_in,
            id_edit_reason_in          => id_edit_reason_in,
            notes_edit_in              => notes_edit_in,
            value_high_in              => value_high_in,
            value_low_in               => value_low_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END ins;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_vital_sign_read_in      IN vital_sign_read_hist.id_vital_sign_read%TYPE DEFAULT NULL,
        value_in                   IN vital_sign_read_hist.value%TYPE DEFAULT NULL,
        flg_status_in              IN vital_sign_read_hist.flg_status%TYPE DEFAULT NULL,
        id_unit_measure_in         IN vital_sign_read_hist.id_unit_measure%TYPE DEFAULT NULL,
        id_prof_read_in            IN vital_sign_read_hist.id_prof_read%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_in IN vital_sign_read_hist.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_registry_in             IN vital_sign_read_hist.dt_registry%TYPE DEFAULT NULL,
        flg_value_changed_in       IN vital_sign_read_hist.flg_value_changed%TYPE DEFAULT NULL,
        flg_status_changed_in      IN vital_sign_read_hist.flg_status_changed%TYPE DEFAULT NULL,
        flg_dt_vs_read_changed_in  IN vital_sign_read_hist.flg_dt_vs_read_changed%TYPE DEFAULT NULL,
        flg_id_prof_changed_in     IN vital_sign_read_hist.flg_id_prof_changed%TYPE DEFAULT NULL,
        flg_id_unit_changed_in     IN vital_sign_read_hist.flg_id_unit_changed%TYPE DEFAULT NULL,
        create_user_in             IN vital_sign_read_hist.create_user%TYPE DEFAULT NULL,
        create_time_in             IN vital_sign_read_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN vital_sign_read_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN vital_sign_read_hist.update_user%TYPE DEFAULT NULL,
        update_time_in             IN vital_sign_read_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN vital_sign_read_hist.update_institution%TYPE DEFAULT NULL,
        id_vital_sign_desc_in      IN vital_sign_read_hist.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_unit_measure_sel_in     IN vital_sign_read_hist.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_edit_reason_in          IN vital_sign_read_hist.id_edit_reason%TYPE DEFAULT NULL,
        notes_edit_in              IN vital_sign_read_hist.notes_edit%TYPE DEFAULT NULL,
        value_high_in              IN vital_sign_read_hist.value_high%TYPE DEFAULT NULL,
        value_low_in               IN vital_sign_read_hist.value_low%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_vital_sign_read_in      => id_vital_sign_read_in,
            value_in                   => value_in,
            flg_status_in              => flg_status_in,
            id_unit_measure_in         => id_unit_measure_in,
            id_prof_read_in            => id_prof_read_in,
            dt_vital_sign_read_tstz_in => dt_vital_sign_read_tstz_in,
            dt_registry_in             => dt_registry_in,
            flg_value_changed_in       => flg_value_changed_in,
            flg_status_changed_in      => flg_status_changed_in,
            flg_dt_vs_read_changed_in  => flg_dt_vs_read_changed_in,
            flg_id_prof_changed_in     => flg_id_prof_changed_in,
            flg_id_unit_changed_in     => flg_id_unit_changed_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            id_vital_sign_desc_in      => id_vital_sign_desc_in,
            id_unit_measure_sel_in     => id_unit_measure_sel_in,
            id_edit_reason_in          => id_edit_reason_in,
            notes_edit_in              => notes_edit_in,
            value_high_in              => value_high_in,
            value_low_in               => value_low_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END ins;

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_vital_sign_read_in       IN vital_sign_read_hist.id_vital_sign_read%TYPE DEFAULT NULL,
        value_in                    IN vital_sign_read_hist.value%TYPE DEFAULT NULL,
        flg_status_in               IN vital_sign_read_hist.flg_status%TYPE DEFAULT NULL,
        id_unit_measure_in          IN vital_sign_read_hist.id_unit_measure%TYPE DEFAULT NULL,
        id_prof_read_in             IN vital_sign_read_hist.id_prof_read%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_in  IN vital_sign_read_hist.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_registry_in              IN vital_sign_read_hist.dt_registry%TYPE DEFAULT NULL,
        flg_value_changed_in        IN vital_sign_read_hist.flg_value_changed%TYPE DEFAULT NULL,
        flg_status_changed_in       IN vital_sign_read_hist.flg_status_changed%TYPE DEFAULT NULL,
        flg_dt_vs_read_changed_in   IN vital_sign_read_hist.flg_dt_vs_read_changed%TYPE DEFAULT NULL,
        flg_id_prof_changed_in      IN vital_sign_read_hist.flg_id_prof_changed%TYPE DEFAULT NULL,
        flg_id_unit_changed_in      IN vital_sign_read_hist.flg_id_unit_changed%TYPE DEFAULT NULL,
        create_user_in              IN vital_sign_read_hist.create_user%TYPE DEFAULT NULL,
        create_time_in              IN vital_sign_read_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN vital_sign_read_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN vital_sign_read_hist.update_user%TYPE DEFAULT NULL,
        update_time_in              IN vital_sign_read_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN vital_sign_read_hist.update_institution%TYPE DEFAULT NULL,
        id_vital_sign_desc_in       IN vital_sign_read_hist.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_unit_measure_sel_in      IN vital_sign_read_hist.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_edit_reason_in           IN vital_sign_read_hist.id_edit_reason%TYPE DEFAULT NULL,
        notes_edit_in               IN vital_sign_read_hist.notes_edit%TYPE DEFAULT NULL,
        value_high_in               IN vital_sign_read_hist.value_high%TYPE DEFAULT NULL,
        value_low_in                IN vital_sign_read_hist.value_low%TYPE DEFAULT NULL,
        id_vital_sign_read_hist_out IN OUT vital_sign_read_hist.id_vital_sign_read_hist%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_pky vital_sign_read_hist.id_vital_sign_read_hist%TYPE := next_key;
    BEGIN
        ins(id_vital_sign_read_hist_in => l_pky,
            id_vital_sign_read_in      => id_vital_sign_read_in,
            value_in                   => value_in,
            flg_status_in              => flg_status_in,
            id_unit_measure_in         => id_unit_measure_in,
            id_prof_read_in            => id_prof_read_in,
            dt_vital_sign_read_tstz_in => dt_vital_sign_read_tstz_in,
            dt_registry_in             => dt_registry_in,
            flg_value_changed_in       => flg_value_changed_in,
            flg_status_changed_in      => flg_status_changed_in,
            flg_dt_vs_read_changed_in  => flg_dt_vs_read_changed_in,
            flg_id_prof_changed_in     => flg_id_prof_changed_in,
            flg_id_unit_changed_in     => flg_id_unit_changed_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            id_vital_sign_desc_in      => id_vital_sign_desc_in,
            id_unit_measure_sel_in     => id_unit_measure_sel_in,
            id_edit_reason_in          => id_edit_reason_in,
            notes_edit_in              => notes_edit_in,
            value_high_in              => value_high_in,
            value_low_in               => value_low_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
        id_vital_sign_read_hist_out := l_pky;
    END ins;

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_vital_sign_read_in       IN vital_sign_read_hist.id_vital_sign_read%TYPE DEFAULT NULL,
        value_in                    IN vital_sign_read_hist.value%TYPE DEFAULT NULL,
        flg_status_in               IN vital_sign_read_hist.flg_status%TYPE DEFAULT NULL,
        id_unit_measure_in          IN vital_sign_read_hist.id_unit_measure%TYPE DEFAULT NULL,
        id_prof_read_in             IN vital_sign_read_hist.id_prof_read%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_in  IN vital_sign_read_hist.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_registry_in              IN vital_sign_read_hist.dt_registry%TYPE DEFAULT NULL,
        flg_value_changed_in        IN vital_sign_read_hist.flg_value_changed%TYPE DEFAULT NULL,
        flg_status_changed_in       IN vital_sign_read_hist.flg_status_changed%TYPE DEFAULT NULL,
        flg_dt_vs_read_changed_in   IN vital_sign_read_hist.flg_dt_vs_read_changed%TYPE DEFAULT NULL,
        flg_id_prof_changed_in      IN vital_sign_read_hist.flg_id_prof_changed%TYPE DEFAULT NULL,
        flg_id_unit_changed_in      IN vital_sign_read_hist.flg_id_unit_changed%TYPE DEFAULT NULL,
        create_user_in              IN vital_sign_read_hist.create_user%TYPE DEFAULT NULL,
        create_time_in              IN vital_sign_read_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN vital_sign_read_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN vital_sign_read_hist.update_user%TYPE DEFAULT NULL,
        update_time_in              IN vital_sign_read_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN vital_sign_read_hist.update_institution%TYPE DEFAULT NULL,
        id_vital_sign_desc_in       IN vital_sign_read_hist.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_unit_measure_sel_in      IN vital_sign_read_hist.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_edit_reason_in           IN vital_sign_read_hist.id_edit_reason%TYPE DEFAULT NULL,
        notes_edit_in               IN vital_sign_read_hist.notes_edit%TYPE DEFAULT NULL,
        value_high_in               IN vital_sign_read_hist.value_high%TYPE DEFAULT NULL,
        value_low_in                IN vital_sign_read_hist.value_low%TYPE DEFAULT NULL,
        id_vital_sign_read_hist_out IN OUT vital_sign_read_hist.id_vital_sign_read_hist%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_vital_sign_read_in       => id_vital_sign_read_in,
            value_in                    => value_in,
            flg_status_in               => flg_status_in,
            id_unit_measure_in          => id_unit_measure_in,
            id_prof_read_in             => id_prof_read_in,
            dt_vital_sign_read_tstz_in  => dt_vital_sign_read_tstz_in,
            dt_registry_in              => dt_registry_in,
            flg_value_changed_in        => flg_value_changed_in,
            flg_status_changed_in       => flg_status_changed_in,
            flg_dt_vs_read_changed_in   => flg_dt_vs_read_changed_in,
            flg_id_prof_changed_in      => flg_id_prof_changed_in,
            flg_id_unit_changed_in      => flg_id_unit_changed_in,
            create_user_in              => create_user_in,
            create_time_in              => create_time_in,
            create_institution_in       => create_institution_in,
            update_user_in              => update_user_in,
            update_time_in              => update_time_in,
            update_institution_in       => update_institution_in,
            id_vital_sign_desc_in       => id_vital_sign_desc_in,
            id_unit_measure_sel_in      => id_unit_measure_sel_in,
            id_edit_reason_in           => id_edit_reason_in,
            notes_edit_in               => notes_edit_in,
            value_high_in               => value_high_in,
            value_low_in                => value_low_in,
            id_vital_sign_read_hist_out => id_vital_sign_read_hist_out,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END ins;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_vital_sign_read_in      IN vital_sign_read_hist.id_vital_sign_read%TYPE DEFAULT NULL,
        value_in                   IN vital_sign_read_hist.value%TYPE DEFAULT NULL,
        flg_status_in              IN vital_sign_read_hist.flg_status%TYPE DEFAULT NULL,
        id_unit_measure_in         IN vital_sign_read_hist.id_unit_measure%TYPE DEFAULT NULL,
        id_prof_read_in            IN vital_sign_read_hist.id_prof_read%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_in IN vital_sign_read_hist.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_registry_in             IN vital_sign_read_hist.dt_registry%TYPE DEFAULT NULL,
        flg_value_changed_in       IN vital_sign_read_hist.flg_value_changed%TYPE DEFAULT NULL,
        flg_status_changed_in      IN vital_sign_read_hist.flg_status_changed%TYPE DEFAULT NULL,
        flg_dt_vs_read_changed_in  IN vital_sign_read_hist.flg_dt_vs_read_changed%TYPE DEFAULT NULL,
        flg_id_prof_changed_in     IN vital_sign_read_hist.flg_id_prof_changed%TYPE DEFAULT NULL,
        flg_id_unit_changed_in     IN vital_sign_read_hist.flg_id_unit_changed%TYPE DEFAULT NULL,
        create_user_in             IN vital_sign_read_hist.create_user%TYPE DEFAULT NULL,
        create_time_in             IN vital_sign_read_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN vital_sign_read_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN vital_sign_read_hist.update_user%TYPE DEFAULT NULL,
        update_time_in             IN vital_sign_read_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN vital_sign_read_hist.update_institution%TYPE DEFAULT NULL,
        id_vital_sign_desc_in      IN vital_sign_read_hist.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_unit_measure_sel_in     IN vital_sign_read_hist.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_edit_reason_in          IN vital_sign_read_hist.id_edit_reason%TYPE DEFAULT NULL,
        notes_edit_in              IN vital_sign_read_hist.notes_edit%TYPE DEFAULT NULL,
        value_high_in              IN vital_sign_read_hist.value_high%TYPE DEFAULT NULL,
        value_low_in               IN vital_sign_read_hist.value_low%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN vital_sign_read_hist.id_vital_sign_read_hist%TYPE IS
        l_pky vital_sign_read_hist.id_vital_sign_read_hist%TYPE := next_key;
    BEGIN
        ins(id_vital_sign_read_hist_in => l_pky,
            id_vital_sign_read_in      => id_vital_sign_read_in,
            value_in                   => value_in,
            flg_status_in              => flg_status_in,
            id_unit_measure_in         => id_unit_measure_in,
            id_prof_read_in            => id_prof_read_in,
            dt_vital_sign_read_tstz_in => dt_vital_sign_read_tstz_in,
            dt_registry_in             => dt_registry_in,
            flg_value_changed_in       => flg_value_changed_in,
            flg_status_changed_in      => flg_status_changed_in,
            flg_dt_vs_read_changed_in  => flg_dt_vs_read_changed_in,
            flg_id_prof_changed_in     => flg_id_prof_changed_in,
            flg_id_unit_changed_in     => flg_id_unit_changed_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            id_vital_sign_desc_in      => id_vital_sign_desc_in,
            id_unit_measure_sel_in     => id_unit_measure_sel_in,
            id_edit_reason_in          => id_edit_reason_in,
            notes_edit_in              => notes_edit_in,
            value_high_in              => value_high_in,
            value_low_in               => value_low_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
        RETURN l_pky;
    END ins;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_vital_sign_read_in      IN vital_sign_read_hist.id_vital_sign_read%TYPE DEFAULT NULL,
        value_in                   IN vital_sign_read_hist.value%TYPE DEFAULT NULL,
        flg_status_in              IN vital_sign_read_hist.flg_status%TYPE DEFAULT NULL,
        id_unit_measure_in         IN vital_sign_read_hist.id_unit_measure%TYPE DEFAULT NULL,
        id_prof_read_in            IN vital_sign_read_hist.id_prof_read%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_in IN vital_sign_read_hist.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_registry_in             IN vital_sign_read_hist.dt_registry%TYPE DEFAULT NULL,
        flg_value_changed_in       IN vital_sign_read_hist.flg_value_changed%TYPE DEFAULT NULL,
        flg_status_changed_in      IN vital_sign_read_hist.flg_status_changed%TYPE DEFAULT NULL,
        flg_dt_vs_read_changed_in  IN vital_sign_read_hist.flg_dt_vs_read_changed%TYPE DEFAULT NULL,
        flg_id_prof_changed_in     IN vital_sign_read_hist.flg_id_prof_changed%TYPE DEFAULT NULL,
        flg_id_unit_changed_in     IN vital_sign_read_hist.flg_id_unit_changed%TYPE DEFAULT NULL,
        create_user_in             IN vital_sign_read_hist.create_user%TYPE DEFAULT NULL,
        create_time_in             IN vital_sign_read_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN vital_sign_read_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN vital_sign_read_hist.update_user%TYPE DEFAULT NULL,
        update_time_in             IN vital_sign_read_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN vital_sign_read_hist.update_institution%TYPE DEFAULT NULL,
        id_vital_sign_desc_in      IN vital_sign_read_hist.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_unit_measure_sel_in     IN vital_sign_read_hist.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_edit_reason_in          IN vital_sign_read_hist.id_edit_reason%TYPE DEFAULT NULL,
        notes_edit_in              IN vital_sign_read_hist.notes_edit%TYPE DEFAULT NULL,
        value_high_in              IN vital_sign_read_hist.value_high%TYPE DEFAULT NULL,
        value_low_in               IN vital_sign_read_hist.value_low%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN vital_sign_read_hist.id_vital_sign_read_hist%TYPE IS
        l_pky    vital_sign_read_hist.id_vital_sign_read_hist%TYPE := next_key;
        rows_out table_varchar;
    BEGIN
        ins(id_vital_sign_read_hist_in => l_pky,
            id_vital_sign_read_in      => id_vital_sign_read_in,
            value_in                   => value_in,
            flg_status_in              => flg_status_in,
            id_unit_measure_in         => id_unit_measure_in,
            id_prof_read_in            => id_prof_read_in,
            dt_vital_sign_read_tstz_in => dt_vital_sign_read_tstz_in,
            dt_registry_in             => dt_registry_in,
            flg_value_changed_in       => flg_value_changed_in,
            flg_status_changed_in      => flg_status_changed_in,
            flg_dt_vs_read_changed_in  => flg_dt_vs_read_changed_in,
            flg_id_prof_changed_in     => flg_id_prof_changed_in,
            flg_id_unit_changed_in     => flg_id_unit_changed_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            id_vital_sign_desc_in      => id_vital_sign_desc_in,
            id_unit_measure_sel_in     => id_unit_measure_sel_in,
            id_edit_reason_in          => id_edit_reason_in,
            notes_edit_in              => notes_edit_in,
            value_high_in              => value_high_in,
            value_low_in               => value_low_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
        RETURN l_pky;
    END ins;

    PROCEDURE ins
    (
        id_vital_sign_read_hist_in IN vital_sign_read_hist.id_vital_sign_read_hist%TYPE,
        id_vital_sign_read_in      IN vital_sign_read_hist.id_vital_sign_read%TYPE DEFAULT NULL,
        value_in                   IN vital_sign_read_hist.value%TYPE DEFAULT NULL,
        flg_status_in              IN vital_sign_read_hist.flg_status%TYPE DEFAULT NULL,
        id_unit_measure_in         IN vital_sign_read_hist.id_unit_measure%TYPE DEFAULT NULL,
        id_prof_read_in            IN vital_sign_read_hist.id_prof_read%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_in IN vital_sign_read_hist.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_registry_in             IN vital_sign_read_hist.dt_registry%TYPE DEFAULT NULL,
        flg_value_changed_in       IN vital_sign_read_hist.flg_value_changed%TYPE DEFAULT NULL,
        flg_status_changed_in      IN vital_sign_read_hist.flg_status_changed%TYPE DEFAULT NULL,
        flg_dt_vs_read_changed_in  IN vital_sign_read_hist.flg_dt_vs_read_changed%TYPE DEFAULT NULL,
        flg_id_prof_changed_in     IN vital_sign_read_hist.flg_id_prof_changed%TYPE DEFAULT NULL,
        flg_id_unit_changed_in     IN vital_sign_read_hist.flg_id_unit_changed%TYPE DEFAULT NULL,
        create_user_in             IN vital_sign_read_hist.create_user%TYPE DEFAULT NULL,
        create_time_in             IN vital_sign_read_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN vital_sign_read_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN vital_sign_read_hist.update_user%TYPE DEFAULT NULL,
        update_time_in             IN vital_sign_read_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN vital_sign_read_hist.update_institution%TYPE DEFAULT NULL,
        id_vital_sign_desc_in      IN vital_sign_read_hist.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_unit_measure_sel_in     IN vital_sign_read_hist.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_edit_reason_in          IN vital_sign_read_hist.id_edit_reason%TYPE DEFAULT NULL,
        notes_edit_in              IN vital_sign_read_hist.notes_edit%TYPE DEFAULT NULL,
        value_high_in              IN vital_sign_read_hist.value_high%TYPE DEFAULT NULL,
        value_low_in               IN vital_sign_read_hist.value_low%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT table_varchar
    ) IS
    BEGIN
        INSERT INTO vital_sign_read_hist
            (id_vital_sign_read_hist,
             id_vital_sign_read,
             VALUE,
             flg_status,
             id_unit_measure,
             id_prof_read,
             dt_vital_sign_read_tstz,
             dt_registry,
             flg_value_changed,
             flg_status_changed,
             flg_dt_vs_read_changed,
             flg_id_prof_changed,
             flg_id_unit_changed,
             create_user,
             create_time,
             create_institution,
             update_user,
             update_time,
             update_institution,
             id_vital_sign_desc,
             id_unit_measure_sel,
             id_edit_reason,
             notes_edit,
             value_high,
             value_low)
        VALUES
            (id_vital_sign_read_hist_in,
             id_vital_sign_read_in,
             value_in,
             flg_status_in,
             id_unit_measure_in,
             id_prof_read_in,
             dt_vital_sign_read_tstz_in,
             dt_registry_in,
             flg_value_changed_in,
             flg_status_changed_in,
             flg_dt_vs_read_changed_in,
             flg_id_prof_changed_in,
             flg_id_unit_changed_in,
             create_user_in,
             create_time_in,
             create_institution_in,
             update_user_in,
             update_time_in,
             update_institution_in,
             id_vital_sign_desc_in,
             id_unit_measure_sel_in,
             id_edit_reason_in,
             notes_edit_in,
             value_high_in,
             value_low_in)
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    PROCEDURE ins
    (
        id_vital_sign_read_hist_in IN vital_sign_read_hist.id_vital_sign_read_hist%TYPE,
        id_vital_sign_read_in      IN vital_sign_read_hist.id_vital_sign_read%TYPE DEFAULT NULL,
        value_in                   IN vital_sign_read_hist.value%TYPE DEFAULT NULL,
        flg_status_in              IN vital_sign_read_hist.flg_status%TYPE DEFAULT NULL,
        id_unit_measure_in         IN vital_sign_read_hist.id_unit_measure%TYPE DEFAULT NULL,
        id_prof_read_in            IN vital_sign_read_hist.id_prof_read%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_in IN vital_sign_read_hist.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_registry_in             IN vital_sign_read_hist.dt_registry%TYPE DEFAULT NULL,
        flg_value_changed_in       IN vital_sign_read_hist.flg_value_changed%TYPE DEFAULT NULL,
        flg_status_changed_in      IN vital_sign_read_hist.flg_status_changed%TYPE DEFAULT NULL,
        flg_dt_vs_read_changed_in  IN vital_sign_read_hist.flg_dt_vs_read_changed%TYPE DEFAULT NULL,
        flg_id_prof_changed_in     IN vital_sign_read_hist.flg_id_prof_changed%TYPE DEFAULT NULL,
        flg_id_unit_changed_in     IN vital_sign_read_hist.flg_id_unit_changed%TYPE DEFAULT NULL,
        create_user_in             IN vital_sign_read_hist.create_user%TYPE DEFAULT NULL,
        create_time_in             IN vital_sign_read_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN vital_sign_read_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN vital_sign_read_hist.update_user%TYPE DEFAULT NULL,
        update_time_in             IN vital_sign_read_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN vital_sign_read_hist.update_institution%TYPE DEFAULT NULL,
        id_vital_sign_desc_in      IN vital_sign_read_hist.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_unit_measure_sel_in     IN vital_sign_read_hist.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_edit_reason_in          IN vital_sign_read_hist.id_edit_reason%TYPE DEFAULT NULL,
        notes_edit_in              IN vital_sign_read_hist.notes_edit%TYPE DEFAULT NULL,
        value_high_in              IN vital_sign_read_hist.value_high%TYPE DEFAULT NULL,
        value_low_in               IN vital_sign_read_hist.value_low%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_vital_sign_read_hist_in => id_vital_sign_read_hist_in,
            id_vital_sign_read_in      => id_vital_sign_read_in,
            value_in                   => value_in,
            flg_status_in              => flg_status_in,
            id_unit_measure_in         => id_unit_measure_in,
            id_prof_read_in            => id_prof_read_in,
            dt_vital_sign_read_tstz_in => dt_vital_sign_read_tstz_in,
            dt_registry_in             => dt_registry_in,
            flg_value_changed_in       => flg_value_changed_in,
            flg_status_changed_in      => flg_status_changed_in,
            flg_dt_vs_read_changed_in  => flg_dt_vs_read_changed_in,
            flg_id_prof_changed_in     => flg_id_prof_changed_in,
            flg_id_unit_changed_in     => flg_id_unit_changed_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            id_vital_sign_desc_in      => id_vital_sign_desc_in,
            id_unit_measure_sel_in     => id_unit_measure_sel_in,
            id_edit_reason_in          => id_edit_reason_in,
            notes_edit_in              => notes_edit_in,
            value_high_in              => value_high_in,
            value_low_in               => value_low_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN vital_sign_read_hist%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_rec vital_sign_read_hist%ROWTYPE := rec_in;
    BEGIN
        IF gen_pky_in
        THEN
            l_rec.id_vital_sign_read_hist := next_key(sequence_in);
        END IF;
    
        ins(id_vital_sign_read_hist_in => l_rec.id_vital_sign_read_hist,
            id_vital_sign_read_in      => l_rec.id_vital_sign_read,
            value_in                   => l_rec.value,
            flg_status_in              => l_rec.flg_status,
            id_unit_measure_in         => l_rec.id_unit_measure,
            id_prof_read_in            => l_rec.id_prof_read,
            dt_vital_sign_read_tstz_in => l_rec.dt_vital_sign_read_tstz,
            dt_registry_in             => l_rec.dt_registry,
            flg_value_changed_in       => l_rec.flg_value_changed,
            flg_status_changed_in      => l_rec.flg_status_changed,
            flg_dt_vs_read_changed_in  => l_rec.flg_dt_vs_read_changed,
            flg_id_prof_changed_in     => l_rec.flg_id_prof_changed,
            flg_id_unit_changed_in     => l_rec.flg_id_unit_changed,
            create_user_in             => l_rec.create_user,
            create_time_in             => l_rec.create_time,
            create_institution_in      => l_rec.create_institution,
            update_user_in             => l_rec.update_user,
            update_time_in             => l_rec.update_time,
            update_institution_in      => l_rec.update_institution,
            id_vital_sign_desc_in      => l_rec.id_vital_sign_desc,
            id_unit_measure_sel_in     => l_rec.id_unit_measure_sel,
            id_edit_reason_in          => l_rec.id_edit_reason,
            notes_edit_in              => l_rec.notes_edit,
            value_high_in              => l_rec.value_high,
            value_low_in               => l_rec.value_low,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN vital_sign_read_hist%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rec_in          => rec_in,
            gen_pky_in      => gen_pky_in,
            sequence_in     => sequence_in,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN vital_sign_read_hist_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        IF rows_in.count = 0
        THEN
            NULL;
        ELSE
            FORALL indx IN rows_in.first .. rows_in.last SAVE EXCEPTIONS
                INSERT INTO vital_sign_read_hist
                VALUES rows_in
                    (indx)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN vital_sign_read_hist_tc,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rows_in => rows_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END ins;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_vital_sign_read_hist_in  IN vital_sign_read_hist.id_vital_sign_read_hist%TYPE,
        id_vital_sign_read_in       IN vital_sign_read_hist.id_vital_sign_read%TYPE DEFAULT NULL,
        id_vital_sign_read_nin      IN BOOLEAN := TRUE,
        value_in                    IN vital_sign_read_hist.value%TYPE DEFAULT NULL,
        value_nin                   IN BOOLEAN := TRUE,
        flg_status_in               IN vital_sign_read_hist.flg_status%TYPE DEFAULT NULL,
        flg_status_nin              IN BOOLEAN := TRUE,
        id_unit_measure_in          IN vital_sign_read_hist.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_nin         IN BOOLEAN := TRUE,
        id_prof_read_in             IN vital_sign_read_hist.id_prof_read%TYPE DEFAULT NULL,
        id_prof_read_nin            IN BOOLEAN := TRUE,
        dt_vital_sign_read_tstz_in  IN vital_sign_read_hist.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_nin IN BOOLEAN := TRUE,
        dt_registry_in              IN vital_sign_read_hist.dt_registry%TYPE DEFAULT NULL,
        dt_registry_nin             IN BOOLEAN := TRUE,
        flg_value_changed_in        IN vital_sign_read_hist.flg_value_changed%TYPE DEFAULT NULL,
        flg_value_changed_nin       IN BOOLEAN := TRUE,
        flg_status_changed_in       IN vital_sign_read_hist.flg_status_changed%TYPE DEFAULT NULL,
        flg_status_changed_nin      IN BOOLEAN := TRUE,
        flg_dt_vs_read_changed_in   IN vital_sign_read_hist.flg_dt_vs_read_changed%TYPE DEFAULT NULL,
        flg_dt_vs_read_changed_nin  IN BOOLEAN := TRUE,
        flg_id_prof_changed_in      IN vital_sign_read_hist.flg_id_prof_changed%TYPE DEFAULT NULL,
        flg_id_prof_changed_nin     IN BOOLEAN := TRUE,
        flg_id_unit_changed_in      IN vital_sign_read_hist.flg_id_unit_changed%TYPE DEFAULT NULL,
        flg_id_unit_changed_nin     IN BOOLEAN := TRUE,
        create_user_in              IN vital_sign_read_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN vital_sign_read_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN vital_sign_read_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN vital_sign_read_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN vital_sign_read_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN vital_sign_read_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        id_vital_sign_desc_in       IN vital_sign_read_hist.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_vital_sign_desc_nin      IN BOOLEAN := TRUE,
        id_unit_measure_sel_in      IN vital_sign_read_hist.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_unit_measure_sel_nin     IN BOOLEAN := TRUE,
        id_edit_reason_in           IN vital_sign_read_hist.id_edit_reason%TYPE DEFAULT NULL,
        id_edit_reason_nin          IN BOOLEAN := TRUE,
        notes_edit_in               IN vital_sign_read_hist.notes_edit%TYPE DEFAULT NULL,
        notes_edit_nin              IN BOOLEAN := TRUE,
        value_high_in               IN vital_sign_read_hist.value_high%TYPE DEFAULT NULL,
        value_high_nin              IN BOOLEAN := TRUE,
        value_low_in                IN vital_sign_read_hist.value_low%TYPE DEFAULT NULL,
        value_low_nin               IN BOOLEAN := TRUE,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    IN OUT table_varchar
    ) IS
        l_rows_out                  table_varchar;
        l_id_vital_sign_read_n      NUMBER(1) := sys.diutil.bool_to_int(id_vital_sign_read_nin);
        l_value_n                   NUMBER(1) := sys.diutil.bool_to_int(value_nin);
        l_flg_status_n              NUMBER(1) := sys.diutil.bool_to_int(flg_status_nin);
        l_id_unit_measure_n         NUMBER(1) := sys.diutil.bool_to_int(id_unit_measure_nin);
        l_id_prof_read_n            NUMBER(1) := sys.diutil.bool_to_int(id_prof_read_nin);
        l_dt_vital_sign_read_tstz_n NUMBER(1) := sys.diutil.bool_to_int(dt_vital_sign_read_tstz_nin);
        l_dt_registry_n             NUMBER(1) := sys.diutil.bool_to_int(dt_registry_nin);
        l_flg_value_changed_n       NUMBER(1) := sys.diutil.bool_to_int(flg_value_changed_nin);
        l_flg_status_changed_n      NUMBER(1) := sys.diutil.bool_to_int(flg_status_changed_nin);
        l_flg_dt_vs_read_changed_n  NUMBER(1) := sys.diutil.bool_to_int(flg_dt_vs_read_changed_nin);
        l_flg_id_prof_changed_n     NUMBER(1) := sys.diutil.bool_to_int(flg_id_prof_changed_nin);
        l_flg_id_unit_changed_n     NUMBER(1) := sys.diutil.bool_to_int(flg_id_unit_changed_nin);
        l_create_user_n             NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n             NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n      NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n             NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n             NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n      NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_id_vital_sign_desc_n      NUMBER(1) := sys.diutil.bool_to_int(id_vital_sign_desc_nin);
        l_id_unit_measure_sel_n     NUMBER(1) := sys.diutil.bool_to_int(id_unit_measure_sel_nin);
        l_id_edit_reason_n          NUMBER(1) := sys.diutil.bool_to_int(id_edit_reason_nin);
        l_notes_edit_n              NUMBER(1) := sys.diutil.bool_to_int(notes_edit_nin);
        l_value_high_n              NUMBER(1) := sys.diutil.bool_to_int(value_high_nin);
        l_value_low_n               NUMBER(1) := sys.diutil.bool_to_int(value_low_nin);
    BEGIN
    
        UPDATE vital_sign_read_hist
           SET id_vital_sign_read      = decode(l_id_vital_sign_read_n,
                                                0,
                                                id_vital_sign_read_in,
                                                nvl(id_vital_sign_read_in, id_vital_sign_read)),
               VALUE                   = decode(l_value_n, 0, value_in, nvl(value_in, VALUE)),
               flg_status              = decode(l_flg_status_n, 0, flg_status_in, nvl(flg_status_in, flg_status)),
               id_unit_measure         = decode(l_id_unit_measure_n,
                                                0,
                                                id_unit_measure_in,
                                                nvl(id_unit_measure_in, id_unit_measure)),
               id_prof_read            = decode(l_id_prof_read_n, 0, id_prof_read_in, nvl(id_prof_read_in, id_prof_read)),
               dt_vital_sign_read_tstz = decode(l_dt_vital_sign_read_tstz_n,
                                                0,
                                                dt_vital_sign_read_tstz_in,
                                                nvl(dt_vital_sign_read_tstz_in, dt_vital_sign_read_tstz)),
               dt_registry             = decode(l_dt_registry_n, 0, dt_registry_in, nvl(dt_registry_in, dt_registry)),
               flg_value_changed       = decode(l_flg_value_changed_n,
                                                0,
                                                flg_value_changed_in,
                                                nvl(flg_value_changed_in, flg_value_changed)),
               flg_status_changed      = decode(l_flg_status_changed_n,
                                                0,
                                                flg_status_changed_in,
                                                nvl(flg_status_changed_in, flg_status_changed)),
               flg_dt_vs_read_changed  = decode(l_flg_dt_vs_read_changed_n,
                                                0,
                                                flg_dt_vs_read_changed_in,
                                                nvl(flg_dt_vs_read_changed_in, flg_dt_vs_read_changed)),
               flg_id_prof_changed     = decode(l_flg_id_prof_changed_n,
                                                0,
                                                flg_id_prof_changed_in,
                                                nvl(flg_id_prof_changed_in, flg_id_prof_changed)),
               flg_id_unit_changed     = decode(l_flg_id_unit_changed_n,
                                                0,
                                                flg_id_unit_changed_in,
                                                nvl(flg_id_unit_changed_in, flg_id_unit_changed)),
               create_user             = decode(l_create_user_n, 0, create_user_in, nvl(create_user_in, create_user)),
               create_time             = decode(l_create_time_n, 0, create_time_in, nvl(create_time_in, create_time)),
               create_institution      = decode(l_create_institution_n,
                                                0,
                                                create_institution_in,
                                                nvl(create_institution_in, create_institution)),
               update_user             = decode(l_update_user_n, 0, update_user_in, nvl(update_user_in, update_user)),
               update_time             = decode(l_update_time_n, 0, update_time_in, nvl(update_time_in, update_time)),
               update_institution      = decode(l_update_institution_n,
                                                0,
                                                update_institution_in,
                                                nvl(update_institution_in, update_institution)),
               id_vital_sign_desc      = decode(l_id_vital_sign_desc_n,
                                                0,
                                                id_vital_sign_desc_in,
                                                nvl(id_vital_sign_desc_in, id_vital_sign_desc)),
               id_unit_measure_sel     = decode(l_id_unit_measure_sel_n,
                                                0,
                                                id_unit_measure_sel_in,
                                                nvl(id_unit_measure_sel_in, id_unit_measure_sel)),
               id_edit_reason          = decode(l_id_edit_reason_n,
                                                0,
                                                id_edit_reason_in,
                                                nvl(id_edit_reason_in, id_edit_reason)),
               notes_edit              = decode(l_notes_edit_n, 0, notes_edit_in, nvl(notes_edit_in, notes_edit)),
               value_high              = decode(l_value_high_n, 0, value_high_in, nvl(value_high_in, value_high)),
               value_low               = decode(l_value_low_n, 0, value_low_in, nvl(value_low_in, value_low))
         WHERE id_vital_sign_read_hist = id_vital_sign_read_hist_in
        RETURNING ROWID BULK COLLECT INTO l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_vital_sign_read_hist_in  IN vital_sign_read_hist.id_vital_sign_read_hist%TYPE,
        id_vital_sign_read_in       IN vital_sign_read_hist.id_vital_sign_read%TYPE DEFAULT NULL,
        id_vital_sign_read_nin      IN BOOLEAN := TRUE,
        value_in                    IN vital_sign_read_hist.value%TYPE DEFAULT NULL,
        value_nin                   IN BOOLEAN := TRUE,
        flg_status_in               IN vital_sign_read_hist.flg_status%TYPE DEFAULT NULL,
        flg_status_nin              IN BOOLEAN := TRUE,
        id_unit_measure_in          IN vital_sign_read_hist.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_nin         IN BOOLEAN := TRUE,
        id_prof_read_in             IN vital_sign_read_hist.id_prof_read%TYPE DEFAULT NULL,
        id_prof_read_nin            IN BOOLEAN := TRUE,
        dt_vital_sign_read_tstz_in  IN vital_sign_read_hist.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_nin IN BOOLEAN := TRUE,
        dt_registry_in              IN vital_sign_read_hist.dt_registry%TYPE DEFAULT NULL,
        dt_registry_nin             IN BOOLEAN := TRUE,
        flg_value_changed_in        IN vital_sign_read_hist.flg_value_changed%TYPE DEFAULT NULL,
        flg_value_changed_nin       IN BOOLEAN := TRUE,
        flg_status_changed_in       IN vital_sign_read_hist.flg_status_changed%TYPE DEFAULT NULL,
        flg_status_changed_nin      IN BOOLEAN := TRUE,
        flg_dt_vs_read_changed_in   IN vital_sign_read_hist.flg_dt_vs_read_changed%TYPE DEFAULT NULL,
        flg_dt_vs_read_changed_nin  IN BOOLEAN := TRUE,
        flg_id_prof_changed_in      IN vital_sign_read_hist.flg_id_prof_changed%TYPE DEFAULT NULL,
        flg_id_prof_changed_nin     IN BOOLEAN := TRUE,
        flg_id_unit_changed_in      IN vital_sign_read_hist.flg_id_unit_changed%TYPE DEFAULT NULL,
        flg_id_unit_changed_nin     IN BOOLEAN := TRUE,
        create_user_in              IN vital_sign_read_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN vital_sign_read_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN vital_sign_read_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN vital_sign_read_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN vital_sign_read_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN vital_sign_read_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        id_vital_sign_desc_in       IN vital_sign_read_hist.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_vital_sign_desc_nin      IN BOOLEAN := TRUE,
        id_unit_measure_sel_in      IN vital_sign_read_hist.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_unit_measure_sel_nin     IN BOOLEAN := TRUE,
        id_edit_reason_in           IN vital_sign_read_hist.id_edit_reason%TYPE DEFAULT NULL,
        id_edit_reason_nin          IN BOOLEAN := TRUE,
        notes_edit_in               IN vital_sign_read_hist.notes_edit%TYPE DEFAULT NULL,
        notes_edit_nin              IN BOOLEAN := TRUE,
        value_high_in               IN vital_sign_read_hist.value_high%TYPE DEFAULT NULL,
        value_high_nin              IN BOOLEAN := TRUE,
        value_low_in                IN vital_sign_read_hist.value_low%TYPE DEFAULT NULL,
        value_low_nin               IN BOOLEAN := TRUE,
        handle_error_in             IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_vital_sign_read_hist_in  => id_vital_sign_read_hist_in,
            id_vital_sign_read_in       => id_vital_sign_read_in,
            id_vital_sign_read_nin      => id_vital_sign_read_nin,
            value_in                    => value_in,
            value_nin                   => value_nin,
            flg_status_in               => flg_status_in,
            flg_status_nin              => flg_status_nin,
            id_unit_measure_in          => id_unit_measure_in,
            id_unit_measure_nin         => id_unit_measure_nin,
            id_prof_read_in             => id_prof_read_in,
            id_prof_read_nin            => id_prof_read_nin,
            dt_vital_sign_read_tstz_in  => dt_vital_sign_read_tstz_in,
            dt_vital_sign_read_tstz_nin => dt_vital_sign_read_tstz_nin,
            dt_registry_in              => dt_registry_in,
            dt_registry_nin             => dt_registry_nin,
            flg_value_changed_in        => flg_value_changed_in,
            flg_value_changed_nin       => flg_value_changed_nin,
            flg_status_changed_in       => flg_status_changed_in,
            flg_status_changed_nin      => flg_status_changed_nin,
            flg_dt_vs_read_changed_in   => flg_dt_vs_read_changed_in,
            flg_dt_vs_read_changed_nin  => flg_dt_vs_read_changed_nin,
            flg_id_prof_changed_in      => flg_id_prof_changed_in,
            flg_id_prof_changed_nin     => flg_id_prof_changed_nin,
            flg_id_unit_changed_in      => flg_id_unit_changed_in,
            flg_id_unit_changed_nin     => flg_id_unit_changed_nin,
            create_user_in              => create_user_in,
            create_user_nin             => create_user_nin,
            create_time_in              => create_time_in,
            create_time_nin             => create_time_nin,
            create_institution_in       => create_institution_in,
            create_institution_nin      => create_institution_nin,
            update_user_in              => update_user_in,
            update_user_nin             => update_user_nin,
            update_time_in              => update_time_in,
            update_time_nin             => update_time_nin,
            update_institution_in       => update_institution_in,
            update_institution_nin      => update_institution_nin,
            id_vital_sign_desc_in       => id_vital_sign_desc_in,
            id_vital_sign_desc_nin      => id_vital_sign_desc_nin,
            id_unit_measure_sel_in      => id_unit_measure_sel_in,
            id_unit_measure_sel_nin     => id_unit_measure_sel_nin,
            id_edit_reason_in           => id_edit_reason_in,
            id_edit_reason_nin          => id_edit_reason_nin,
            notes_edit_in               => notes_edit_in,
            notes_edit_nin              => notes_edit_nin,
            value_high_in               => value_high_in,
            value_high_nin              => value_high_nin,
            value_low_in                => value_low_in,
            value_low_nin               => value_low_nin,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_vital_sign_read_in       IN vital_sign_read_hist.id_vital_sign_read%TYPE DEFAULT NULL,
        id_vital_sign_read_nin      IN BOOLEAN := TRUE,
        value_in                    IN vital_sign_read_hist.value%TYPE DEFAULT NULL,
        value_nin                   IN BOOLEAN := TRUE,
        flg_status_in               IN vital_sign_read_hist.flg_status%TYPE DEFAULT NULL,
        flg_status_nin              IN BOOLEAN := TRUE,
        id_unit_measure_in          IN vital_sign_read_hist.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_nin         IN BOOLEAN := TRUE,
        id_prof_read_in             IN vital_sign_read_hist.id_prof_read%TYPE DEFAULT NULL,
        id_prof_read_nin            IN BOOLEAN := TRUE,
        dt_vital_sign_read_tstz_in  IN vital_sign_read_hist.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_nin IN BOOLEAN := TRUE,
        dt_registry_in              IN vital_sign_read_hist.dt_registry%TYPE DEFAULT NULL,
        dt_registry_nin             IN BOOLEAN := TRUE,
        flg_value_changed_in        IN vital_sign_read_hist.flg_value_changed%TYPE DEFAULT NULL,
        flg_value_changed_nin       IN BOOLEAN := TRUE,
        flg_status_changed_in       IN vital_sign_read_hist.flg_status_changed%TYPE DEFAULT NULL,
        flg_status_changed_nin      IN BOOLEAN := TRUE,
        flg_dt_vs_read_changed_in   IN vital_sign_read_hist.flg_dt_vs_read_changed%TYPE DEFAULT NULL,
        flg_dt_vs_read_changed_nin  IN BOOLEAN := TRUE,
        flg_id_prof_changed_in      IN vital_sign_read_hist.flg_id_prof_changed%TYPE DEFAULT NULL,
        flg_id_prof_changed_nin     IN BOOLEAN := TRUE,
        flg_id_unit_changed_in      IN vital_sign_read_hist.flg_id_unit_changed%TYPE DEFAULT NULL,
        flg_id_unit_changed_nin     IN BOOLEAN := TRUE,
        create_user_in              IN vital_sign_read_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN vital_sign_read_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN vital_sign_read_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN vital_sign_read_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN vital_sign_read_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN vital_sign_read_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        id_vital_sign_desc_in       IN vital_sign_read_hist.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_vital_sign_desc_nin      IN BOOLEAN := TRUE,
        id_unit_measure_sel_in      IN vital_sign_read_hist.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_unit_measure_sel_nin     IN BOOLEAN := TRUE,
        id_edit_reason_in           IN vital_sign_read_hist.id_edit_reason%TYPE DEFAULT NULL,
        id_edit_reason_nin          IN BOOLEAN := TRUE,
        notes_edit_in               IN vital_sign_read_hist.notes_edit%TYPE DEFAULT NULL,
        notes_edit_nin              IN BOOLEAN := TRUE,
        value_high_in               IN vital_sign_read_hist.value_high%TYPE DEFAULT NULL,
        value_high_nin              IN BOOLEAN := TRUE,
        value_low_in                IN vital_sign_read_hist.value_low%TYPE DEFAULT NULL,
        value_low_nin               IN BOOLEAN := TRUE,
        where_in                    IN VARCHAR2,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    IN OUT table_varchar
    ) IS
        l_sql                       VARCHAR2(32767);
        l_rows_out                  table_varchar;
        l_id_vital_sign_read_n      NUMBER(1) := sys.diutil.bool_to_int(id_vital_sign_read_nin);
        l_value_n                   NUMBER(1) := sys.diutil.bool_to_int(value_nin);
        l_flg_status_n              NUMBER(1) := sys.diutil.bool_to_int(flg_status_nin);
        l_id_unit_measure_n         NUMBER(1) := sys.diutil.bool_to_int(id_unit_measure_nin);
        l_id_prof_read_n            NUMBER(1) := sys.diutil.bool_to_int(id_prof_read_nin);
        l_dt_vital_sign_read_tstz_n NUMBER(1) := sys.diutil.bool_to_int(dt_vital_sign_read_tstz_nin);
        l_dt_registry_n             NUMBER(1) := sys.diutil.bool_to_int(dt_registry_nin);
        l_flg_value_changed_n       NUMBER(1) := sys.diutil.bool_to_int(flg_value_changed_nin);
        l_flg_status_changed_n      NUMBER(1) := sys.diutil.bool_to_int(flg_status_changed_nin);
        l_flg_dt_vs_read_changed_n  NUMBER(1) := sys.diutil.bool_to_int(flg_dt_vs_read_changed_nin);
        l_flg_id_prof_changed_n     NUMBER(1) := sys.diutil.bool_to_int(flg_id_prof_changed_nin);
        l_flg_id_unit_changed_n     NUMBER(1) := sys.diutil.bool_to_int(flg_id_unit_changed_nin);
        l_create_user_n             NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n             NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n      NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n             NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n             NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n      NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_id_vital_sign_desc_n      NUMBER(1) := sys.diutil.bool_to_int(id_vital_sign_desc_nin);
        l_id_unit_measure_sel_n     NUMBER(1) := sys.diutil.bool_to_int(id_unit_measure_sel_nin);
        l_id_edit_reason_n          NUMBER(1) := sys.diutil.bool_to_int(id_edit_reason_nin);
        l_notes_edit_n              NUMBER(1) := sys.diutil.bool_to_int(notes_edit_nin);
        l_value_high_n              NUMBER(1) := sys.diutil.bool_to_int(value_high_nin);
        l_value_low_n               NUMBER(1) := sys.diutil.bool_to_int(value_low_nin);
    BEGIN
        l_id_vital_sign_read_n      := sys.diutil.bool_to_int(id_vital_sign_read_nin);
        l_value_n                   := sys.diutil.bool_to_int(value_nin);
        l_flg_status_n              := sys.diutil.bool_to_int(flg_status_nin);
        l_id_unit_measure_n         := sys.diutil.bool_to_int(id_unit_measure_nin);
        l_id_prof_read_n            := sys.diutil.bool_to_int(id_prof_read_nin);
        l_dt_vital_sign_read_tstz_n := sys.diutil.bool_to_int(dt_vital_sign_read_tstz_nin);
        l_dt_registry_n             := sys.diutil.bool_to_int(dt_registry_nin);
        l_flg_value_changed_n       := sys.diutil.bool_to_int(flg_value_changed_nin);
        l_flg_status_changed_n      := sys.diutil.bool_to_int(flg_status_changed_nin);
        l_flg_dt_vs_read_changed_n  := sys.diutil.bool_to_int(flg_dt_vs_read_changed_nin);
        l_flg_id_prof_changed_n     := sys.diutil.bool_to_int(flg_id_prof_changed_nin);
        l_flg_id_unit_changed_n     := sys.diutil.bool_to_int(flg_id_unit_changed_nin);
        l_create_user_n             := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n             := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n      := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n             := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n             := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n      := sys.diutil.bool_to_int(update_institution_nin);
        l_id_vital_sign_desc_n      := sys.diutil.bool_to_int(id_vital_sign_desc_nin);
        l_id_unit_measure_sel_n     := sys.diutil.bool_to_int(id_unit_measure_sel_nin);
        l_id_edit_reason_n          := sys.diutil.bool_to_int(id_edit_reason_nin);
        l_notes_edit_n              := sys.diutil.bool_to_int(notes_edit_nin);
        l_value_high_n              := sys.diutil.bool_to_int(value_high_nin);
        l_value_low_n               := sys.diutil.bool_to_int(value_low_nin);
        l_sql                       := 'UPDATE vital_sign_read_hist SET' || ' ID_VITAL_SIGN_READ = decode (' ||
                                       l_id_vital_sign_read_n ||
                                       ',0,:ID_VITAL_SIGN_READ_in, NVL (:ID_VITAL_SIGN_READ_in, ID_VITAL_SIGN_READ)) ' || ',' ||
                                       ' VALUE = decode (' || l_value_n || ',0,:VALUE_in, NVL (:VALUE_in, VALUE)) ' || ',' ||
                                       ' FLG_STATUS = decode (' || l_flg_status_n ||
                                       ',0,:FLG_STATUS_in, NVL (:FLG_STATUS_in, FLG_STATUS)) ' || ',' ||
                                       ' ID_UNIT_MEASURE = decode (' || l_id_unit_measure_n ||
                                       ',0,:ID_UNIT_MEASURE_in, NVL (:ID_UNIT_MEASURE_in, ID_UNIT_MEASURE)) ' || ',' ||
                                       ' ID_PROF_READ = decode (' || l_id_prof_read_n ||
                                       ',0,:ID_PROF_READ_in, NVL (:ID_PROF_READ_in, ID_PROF_READ)) ' || ',' ||
                                       ' DT_VITAL_SIGN_READ_TSTZ = decode (' || l_dt_vital_sign_read_tstz_n ||
                                       ',0,:DT_VITAL_SIGN_READ_TSTZ_in, NVL (:DT_VITAL_SIGN_READ_TSTZ_in, DT_VITAL_SIGN_READ_TSTZ)) ' || ',' ||
                                       ' DT_REGISTRY = decode (' || l_dt_registry_n ||
                                       ',0,:DT_REGISTRY_in, NVL (:DT_REGISTRY_in, DT_REGISTRY)) ' || ',' ||
                                       ' FLG_VALUE_CHANGED = decode (' || l_flg_value_changed_n ||
                                       ',0,:FLG_VALUE_CHANGED_in, NVL (:FLG_VALUE_CHANGED_in, FLG_VALUE_CHANGED)) ' || ',' ||
                                       ' FLG_STATUS_CHANGED = decode (' || l_flg_status_changed_n ||
                                       ',0,:FLG_STATUS_CHANGED_in, NVL (:FLG_STATUS_CHANGED_in, FLG_STATUS_CHANGED)) ' || ',' ||
                                       ' FLG_DT_VS_READ_CHANGED = decode (' || l_flg_dt_vs_read_changed_n ||
                                       ',0,:FLG_DT_VS_READ_CHANGED_in, NVL (:FLG_DT_VS_READ_CHANGED_in, FLG_DT_VS_READ_CHANGED)) ' || ',' ||
                                       ' FLG_ID_PROF_CHANGED = decode (' || l_flg_id_prof_changed_n ||
                                       ',0,:FLG_ID_PROF_CHANGED_in, NVL (:FLG_ID_PROF_CHANGED_in, FLG_ID_PROF_CHANGED)) ' || ',' ||
                                       ' FLG_ID_UNIT_CHANGED = decode (' || l_flg_id_unit_changed_n ||
                                       ',0,:FLG_ID_UNIT_CHANGED_in, NVL (:FLG_ID_UNIT_CHANGED_in, FLG_ID_UNIT_CHANGED)) ' || ',' ||
                                       ' CREATE_USER = decode (' || l_create_user_n ||
                                       ',0,:CREATE_USER_in, NVL (:CREATE_USER_in, CREATE_USER)) ' || ',' ||
                                       ' CREATE_TIME = decode (' || l_create_time_n ||
                                       ',0,:CREATE_TIME_in, NVL (:CREATE_TIME_in, CREATE_TIME)) ' || ',' ||
                                       ' CREATE_INSTITUTION = decode (' || l_create_institution_n ||
                                       ',0,:CREATE_INSTITUTION_in, NVL (:CREATE_INSTITUTION_in, CREATE_INSTITUTION)) ' || ',' ||
                                       ' UPDATE_USER = decode (' || l_update_user_n ||
                                       ',0,:UPDATE_USER_in, NVL (:UPDATE_USER_in, UPDATE_USER)) ' || ',' ||
                                       ' UPDATE_TIME = decode (' || l_update_time_n ||
                                       ',0,:UPDATE_TIME_in, NVL (:UPDATE_TIME_in, UPDATE_TIME)) ' || ',' ||
                                       ' UPDATE_INSTITUTION = decode (' || l_update_institution_n ||
                                       ',0,:UPDATE_INSTITUTION_in, NVL (:UPDATE_INSTITUTION_in, UPDATE_INSTITUTION)) ' || ',' ||
                                       ' ID_VITAL_SIGN_DESC = decode (' || l_id_vital_sign_desc_n ||
                                       ',0,:ID_VITAL_SIGN_DESC_in, NVL (:ID_VITAL_SIGN_DESC_in, ID_VITAL_SIGN_DESC)) ' || ',' ||
                                       ' ID_UNIT_MEASURE_SEL = decode (' || l_id_unit_measure_sel_n ||
                                       ',0,:ID_UNIT_MEASURE_SEL_in, NVL (:ID_UNIT_MEASURE_SEL_in, ID_UNIT_MEASURE_SEL)) ' || ',' ||
                                       ' ID_EDIT_REASON = decode (' || l_id_edit_reason_n ||
                                       ',0,:ID_EDIT_REASON_in, NVL (:ID_EDIT_REASON_in, ID_EDIT_REASON)) ' || ',' ||
                                       ' NOTES_EDIT = decode (' || l_notes_edit_n ||
                                       ',0,:NOTES_EDIT_in, NVL (:NOTES_EDIT_in, NOTES_EDIT)) ' || ',' ||
                                       ' VALUE_HIGH = decode (' || l_value_high_n ||
                                       ',0,:VALUE_HIGH_in, NVL (:VALUE_HIGH_in, VALUE_HIGH)) ' || ',' ||
                                       ' VALUE_LOW = decode (' || l_value_low_n ||
                                       ',0,:VALUE_LOW_in, NVL (:VALUE_LOW_in, VALUE_LOW)) ' || ' where ' ||
                                       nvl(where_in, '(1=1)') || ' RETURNING ROWID BULK COLLECT INTO :l_rows_out';
        EXECUTE IMMEDIATE 'BEGIN ' || l_sql || '; END;'
            USING IN id_vital_sign_read_in, value_in, flg_status_in, id_unit_measure_in, id_prof_read_in, dt_vital_sign_read_tstz_in, dt_registry_in, flg_value_changed_in, flg_status_changed_in, flg_dt_vs_read_changed_in, flg_id_prof_changed_in, flg_id_unit_changed_in, create_user_in, create_time_in, create_institution_in, update_user_in, update_time_in, update_institution_in, id_vital_sign_desc_in, id_unit_measure_sel_in, id_edit_reason_in, notes_edit_in, value_high_in, value_low_in, OUT l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_vital_sign_read_in       IN vital_sign_read_hist.id_vital_sign_read%TYPE DEFAULT NULL,
        id_vital_sign_read_nin      IN BOOLEAN := TRUE,
        value_in                    IN vital_sign_read_hist.value%TYPE DEFAULT NULL,
        value_nin                   IN BOOLEAN := TRUE,
        flg_status_in               IN vital_sign_read_hist.flg_status%TYPE DEFAULT NULL,
        flg_status_nin              IN BOOLEAN := TRUE,
        id_unit_measure_in          IN vital_sign_read_hist.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_nin         IN BOOLEAN := TRUE,
        id_prof_read_in             IN vital_sign_read_hist.id_prof_read%TYPE DEFAULT NULL,
        id_prof_read_nin            IN BOOLEAN := TRUE,
        dt_vital_sign_read_tstz_in  IN vital_sign_read_hist.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_nin IN BOOLEAN := TRUE,
        dt_registry_in              IN vital_sign_read_hist.dt_registry%TYPE DEFAULT NULL,
        dt_registry_nin             IN BOOLEAN := TRUE,
        flg_value_changed_in        IN vital_sign_read_hist.flg_value_changed%TYPE DEFAULT NULL,
        flg_value_changed_nin       IN BOOLEAN := TRUE,
        flg_status_changed_in       IN vital_sign_read_hist.flg_status_changed%TYPE DEFAULT NULL,
        flg_status_changed_nin      IN BOOLEAN := TRUE,
        flg_dt_vs_read_changed_in   IN vital_sign_read_hist.flg_dt_vs_read_changed%TYPE DEFAULT NULL,
        flg_dt_vs_read_changed_nin  IN BOOLEAN := TRUE,
        flg_id_prof_changed_in      IN vital_sign_read_hist.flg_id_prof_changed%TYPE DEFAULT NULL,
        flg_id_prof_changed_nin     IN BOOLEAN := TRUE,
        flg_id_unit_changed_in      IN vital_sign_read_hist.flg_id_unit_changed%TYPE DEFAULT NULL,
        flg_id_unit_changed_nin     IN BOOLEAN := TRUE,
        create_user_in              IN vital_sign_read_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN vital_sign_read_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN vital_sign_read_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN vital_sign_read_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN vital_sign_read_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN vital_sign_read_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        id_vital_sign_desc_in       IN vital_sign_read_hist.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_vital_sign_desc_nin      IN BOOLEAN := TRUE,
        id_unit_measure_sel_in      IN vital_sign_read_hist.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_unit_measure_sel_nin     IN BOOLEAN := TRUE,
        id_edit_reason_in           IN vital_sign_read_hist.id_edit_reason%TYPE DEFAULT NULL,
        id_edit_reason_nin          IN BOOLEAN := TRUE,
        notes_edit_in               IN vital_sign_read_hist.notes_edit%TYPE DEFAULT NULL,
        notes_edit_nin              IN BOOLEAN := TRUE,
        value_high_in               IN vital_sign_read_hist.value_high%TYPE DEFAULT NULL,
        value_high_nin              IN BOOLEAN := TRUE,
        value_low_in                IN vital_sign_read_hist.value_low%TYPE DEFAULT NULL,
        value_low_nin               IN BOOLEAN := TRUE,
        where_in                    IN VARCHAR2,
        handle_error_in             IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_vital_sign_read_in       => id_vital_sign_read_in,
            id_vital_sign_read_nin      => id_vital_sign_read_nin,
            value_in                    => value_in,
            value_nin                   => value_nin,
            flg_status_in               => flg_status_in,
            flg_status_nin              => flg_status_nin,
            id_unit_measure_in          => id_unit_measure_in,
            id_unit_measure_nin         => id_unit_measure_nin,
            id_prof_read_in             => id_prof_read_in,
            id_prof_read_nin            => id_prof_read_nin,
            dt_vital_sign_read_tstz_in  => dt_vital_sign_read_tstz_in,
            dt_vital_sign_read_tstz_nin => dt_vital_sign_read_tstz_nin,
            dt_registry_in              => dt_registry_in,
            dt_registry_nin             => dt_registry_nin,
            flg_value_changed_in        => flg_value_changed_in,
            flg_value_changed_nin       => flg_value_changed_nin,
            flg_status_changed_in       => flg_status_changed_in,
            flg_status_changed_nin      => flg_status_changed_nin,
            flg_dt_vs_read_changed_in   => flg_dt_vs_read_changed_in,
            flg_dt_vs_read_changed_nin  => flg_dt_vs_read_changed_nin,
            flg_id_prof_changed_in      => flg_id_prof_changed_in,
            flg_id_prof_changed_nin     => flg_id_prof_changed_nin,
            flg_id_unit_changed_in      => flg_id_unit_changed_in,
            flg_id_unit_changed_nin     => flg_id_unit_changed_nin,
            create_user_in              => create_user_in,
            create_user_nin             => create_user_nin,
            create_time_in              => create_time_in,
            create_time_nin             => create_time_nin,
            create_institution_in       => create_institution_in,
            create_institution_nin      => create_institution_nin,
            update_user_in              => update_user_in,
            update_user_nin             => update_user_nin,
            update_time_in              => update_time_in,
            update_time_nin             => update_time_nin,
            update_institution_in       => update_institution_in,
            update_institution_nin      => update_institution_nin,
            id_vital_sign_desc_in       => id_vital_sign_desc_in,
            id_vital_sign_desc_nin      => id_vital_sign_desc_nin,
            id_unit_measure_sel_in      => id_unit_measure_sel_in,
            id_unit_measure_sel_nin     => id_unit_measure_sel_nin,
            id_edit_reason_in           => id_edit_reason_in,
            id_edit_reason_nin          => id_edit_reason_nin,
            notes_edit_in               => notes_edit_in,
            notes_edit_nin              => notes_edit_nin,
            value_high_in               => value_high_in,
            value_high_nin              => value_high_nin,
            value_low_in                => value_low_in,
            value_low_nin               => value_low_nin,
            where_in                    => where_in,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END upd;

    --Update/insert columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_vital_sign_read_hist_in IN vital_sign_read_hist.id_vital_sign_read_hist%TYPE,
        id_vital_sign_read_in      IN vital_sign_read_hist.id_vital_sign_read%TYPE DEFAULT NULL,
        value_in                   IN vital_sign_read_hist.value%TYPE DEFAULT NULL,
        flg_status_in              IN vital_sign_read_hist.flg_status%TYPE DEFAULT NULL,
        id_unit_measure_in         IN vital_sign_read_hist.id_unit_measure%TYPE DEFAULT NULL,
        id_prof_read_in            IN vital_sign_read_hist.id_prof_read%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_in IN vital_sign_read_hist.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_registry_in             IN vital_sign_read_hist.dt_registry%TYPE DEFAULT NULL,
        flg_value_changed_in       IN vital_sign_read_hist.flg_value_changed%TYPE DEFAULT NULL,
        flg_status_changed_in      IN vital_sign_read_hist.flg_status_changed%TYPE DEFAULT NULL,
        flg_dt_vs_read_changed_in  IN vital_sign_read_hist.flg_dt_vs_read_changed%TYPE DEFAULT NULL,
        flg_id_prof_changed_in     IN vital_sign_read_hist.flg_id_prof_changed%TYPE DEFAULT NULL,
        flg_id_unit_changed_in     IN vital_sign_read_hist.flg_id_unit_changed%TYPE DEFAULT NULL,
        create_user_in             IN vital_sign_read_hist.create_user%TYPE DEFAULT NULL,
        create_time_in             IN vital_sign_read_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN vital_sign_read_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN vital_sign_read_hist.update_user%TYPE DEFAULT NULL,
        update_time_in             IN vital_sign_read_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN vital_sign_read_hist.update_institution%TYPE DEFAULT NULL,
        id_vital_sign_desc_in      IN vital_sign_read_hist.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_unit_measure_sel_in     IN vital_sign_read_hist.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_edit_reason_in          IN vital_sign_read_hist.id_edit_reason%TYPE DEFAULT NULL,
        notes_edit_in              IN vital_sign_read_hist.notes_edit%TYPE DEFAULT NULL,
        value_high_in              IN vital_sign_read_hist.value_high%TYPE DEFAULT NULL,
        value_low_in               IN vital_sign_read_hist.value_low%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_vital_sign_read_hist_in => id_vital_sign_read_hist_in,
            id_vital_sign_read_in      => id_vital_sign_read_in,
            value_in                   => value_in,
            flg_status_in              => flg_status_in,
            id_unit_measure_in         => id_unit_measure_in,
            id_prof_read_in            => id_prof_read_in,
            dt_vital_sign_read_tstz_in => dt_vital_sign_read_tstz_in,
            dt_registry_in             => dt_registry_in,
            flg_value_changed_in       => flg_value_changed_in,
            flg_status_changed_in      => flg_status_changed_in,
            flg_dt_vs_read_changed_in  => flg_dt_vs_read_changed_in,
            flg_id_prof_changed_in     => flg_id_prof_changed_in,
            flg_id_unit_changed_in     => flg_id_unit_changed_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            id_vital_sign_desc_in      => id_vital_sign_desc_in,
            id_unit_measure_sel_in     => id_unit_measure_sel_in,
            id_edit_reason_in          => id_edit_reason_in,
            notes_edit_in              => notes_edit_in,
            value_high_in              => value_high_in,
            value_low_in               => value_low_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
        IF SQL%ROWCOUNT = 0
        THEN
            ins(id_vital_sign_read_hist_in => id_vital_sign_read_hist_in,
                id_vital_sign_read_in      => id_vital_sign_read_in,
                value_in                   => value_in,
                flg_status_in              => flg_status_in,
                id_unit_measure_in         => id_unit_measure_in,
                id_prof_read_in            => id_prof_read_in,
                dt_vital_sign_read_tstz_in => dt_vital_sign_read_tstz_in,
                dt_registry_in             => dt_registry_in,
                flg_value_changed_in       => flg_value_changed_in,
                flg_status_changed_in      => flg_status_changed_in,
                flg_dt_vs_read_changed_in  => flg_dt_vs_read_changed_in,
                flg_id_prof_changed_in     => flg_id_prof_changed_in,
                flg_id_unit_changed_in     => flg_id_unit_changed_in,
                create_user_in             => create_user_in,
                create_time_in             => create_time_in,
                create_institution_in      => create_institution_in,
                update_user_in             => update_user_in,
                update_time_in             => update_time_in,
                update_institution_in      => update_institution_in,
                id_vital_sign_desc_in      => id_vital_sign_desc_in,
                id_unit_measure_sel_in     => id_unit_measure_sel_in,
                id_edit_reason_in          => id_edit_reason_in,
                notes_edit_in              => notes_edit_in,
                value_high_in              => value_high_in,
                value_low_in               => value_low_in,
                handle_error_in            => handle_error_in,
                rows_out                   => rows_out);
        END IF;
    END upd_ins;

    --Update/insert columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_vital_sign_read_hist_in IN vital_sign_read_hist.id_vital_sign_read_hist%TYPE,
        id_vital_sign_read_in      IN vital_sign_read_hist.id_vital_sign_read%TYPE DEFAULT NULL,
        value_in                   IN vital_sign_read_hist.value%TYPE DEFAULT NULL,
        flg_status_in              IN vital_sign_read_hist.flg_status%TYPE DEFAULT NULL,
        id_unit_measure_in         IN vital_sign_read_hist.id_unit_measure%TYPE DEFAULT NULL,
        id_prof_read_in            IN vital_sign_read_hist.id_prof_read%TYPE DEFAULT NULL,
        dt_vital_sign_read_tstz_in IN vital_sign_read_hist.dt_vital_sign_read_tstz%TYPE DEFAULT NULL,
        dt_registry_in             IN vital_sign_read_hist.dt_registry%TYPE DEFAULT NULL,
        flg_value_changed_in       IN vital_sign_read_hist.flg_value_changed%TYPE DEFAULT NULL,
        flg_status_changed_in      IN vital_sign_read_hist.flg_status_changed%TYPE DEFAULT NULL,
        flg_dt_vs_read_changed_in  IN vital_sign_read_hist.flg_dt_vs_read_changed%TYPE DEFAULT NULL,
        flg_id_prof_changed_in     IN vital_sign_read_hist.flg_id_prof_changed%TYPE DEFAULT NULL,
        flg_id_unit_changed_in     IN vital_sign_read_hist.flg_id_unit_changed%TYPE DEFAULT NULL,
        create_user_in             IN vital_sign_read_hist.create_user%TYPE DEFAULT NULL,
        create_time_in             IN vital_sign_read_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN vital_sign_read_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN vital_sign_read_hist.update_user%TYPE DEFAULT NULL,
        update_time_in             IN vital_sign_read_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN vital_sign_read_hist.update_institution%TYPE DEFAULT NULL,
        id_vital_sign_desc_in      IN vital_sign_read_hist.id_vital_sign_desc%TYPE DEFAULT NULL,
        id_unit_measure_sel_in     IN vital_sign_read_hist.id_unit_measure_sel%TYPE DEFAULT NULL,
        id_edit_reason_in          IN vital_sign_read_hist.id_edit_reason%TYPE DEFAULT NULL,
        notes_edit_in              IN vital_sign_read_hist.notes_edit%TYPE DEFAULT NULL,
        value_high_in              IN vital_sign_read_hist.value_high%TYPE DEFAULT NULL,
        value_low_in               IN vital_sign_read_hist.value_low%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd_ins(id_vital_sign_read_hist_in,
                id_vital_sign_read_in,
                value_in,
                flg_status_in,
                id_unit_measure_in,
                id_prof_read_in,
                dt_vital_sign_read_tstz_in,
                dt_registry_in,
                flg_value_changed_in,
                flg_status_changed_in,
                flg_dt_vs_read_changed_in,
                flg_id_prof_changed_in,
                flg_id_unit_changed_in,
                create_user_in,
                create_time_in,
                create_institution_in,
                update_user_in,
                update_time_in,
                update_institution_in,
                id_vital_sign_desc_in,
                id_unit_measure_sel_in,
                id_edit_reason_in,
                notes_edit_in,
                value_high_in,
                value_low_in,
                handle_error_in,
                rows_out);
    END upd_ins;

    --Update by record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN vital_sign_read_hist%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_vital_sign_read_hist_in => rec_in.id_vital_sign_read_hist,
            id_vital_sign_read_in      => rec_in.id_vital_sign_read,
            value_in                   => rec_in.value,
            flg_status_in              => rec_in.flg_status,
            id_unit_measure_in         => rec_in.id_unit_measure,
            id_prof_read_in            => rec_in.id_prof_read,
            dt_vital_sign_read_tstz_in => rec_in.dt_vital_sign_read_tstz,
            dt_registry_in             => rec_in.dt_registry,
            flg_value_changed_in       => rec_in.flg_value_changed,
            flg_status_changed_in      => rec_in.flg_status_changed,
            flg_dt_vs_read_changed_in  => rec_in.flg_dt_vs_read_changed,
            flg_id_prof_changed_in     => rec_in.flg_id_prof_changed,
            flg_id_unit_changed_in     => rec_in.flg_id_unit_changed,
            create_user_in             => rec_in.create_user,
            create_time_in             => rec_in.create_time,
            create_institution_in      => rec_in.create_institution,
            update_user_in             => rec_in.update_user,
            update_time_in             => rec_in.update_time,
            update_institution_in      => rec_in.update_institution,
            id_vital_sign_desc_in      => rec_in.id_vital_sign_desc,
            id_unit_measure_sel_in     => rec_in.id_unit_measure_sel,
            id_edit_reason_in          => rec_in.id_edit_reason,
            notes_edit_in              => rec_in.notes_edit,
            value_high_in              => rec_in.value_high,
            value_low_in               => rec_in.value_low,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END upd;

    --Update by record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN vital_sign_read_hist%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_vital_sign_read_hist_in => rec_in.id_vital_sign_read_hist,
            id_vital_sign_read_in      => rec_in.id_vital_sign_read,
            value_in                   => rec_in.value,
            flg_status_in              => rec_in.flg_status,
            id_unit_measure_in         => rec_in.id_unit_measure,
            id_prof_read_in            => rec_in.id_prof_read,
            dt_vital_sign_read_tstz_in => rec_in.dt_vital_sign_read_tstz,
            dt_registry_in             => rec_in.dt_registry,
            flg_value_changed_in       => rec_in.flg_value_changed,
            flg_status_changed_in      => rec_in.flg_status_changed,
            flg_dt_vs_read_changed_in  => rec_in.flg_dt_vs_read_changed,
            flg_id_prof_changed_in     => rec_in.flg_id_prof_changed,
            flg_id_unit_changed_in     => rec_in.flg_id_unit_changed,
            create_user_in             => rec_in.create_user,
            create_time_in             => rec_in.create_time,
            create_institution_in      => rec_in.create_institution,
            update_user_in             => rec_in.update_user,
            update_time_in             => rec_in.update_time,
            update_institution_in      => rec_in.update_institution,
            id_vital_sign_desc_in      => rec_in.id_vital_sign_desc,
            id_unit_measure_sel_in     => rec_in.id_unit_measure_sel,
            id_edit_reason_in          => rec_in.id_edit_reason,
            notes_edit_in              => rec_in.notes_edit,
            value_high_in              => rec_in.value_high,
            value_low_in               => rec_in.value_low,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END upd;

    --Update with collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN vital_sign_read_hist_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    ) IS
        l_id_vital_sign_read_hist id_vital_sign_read_hist_cc;
        l_id_vital_sign_read      id_vital_sign_read_cc;
        l_value                   value_cc;
        l_flg_status              flg_status_cc;
        l_id_unit_measure         id_unit_measure_cc;
        l_id_prof_read            id_prof_read_cc;
        l_dt_vital_sign_read_tstz dt_vital_sign_read_tstz_cc;
        l_dt_registry             dt_registry_cc;
        l_flg_value_changed       flg_value_changed_cc;
        l_flg_status_changed      flg_status_changed_cc;
        l_flg_dt_vs_read_changed  flg_dt_vs_read_changed_cc;
        l_flg_id_prof_changed     flg_id_prof_changed_cc;
        l_flg_id_unit_changed     flg_id_unit_changed_cc;
        l_create_user             create_user_cc;
        l_create_time             create_time_cc;
        l_create_institution      create_institution_cc;
        l_update_user             update_user_cc;
        l_update_time             update_time_cc;
        l_update_institution      update_institution_cc;
        l_id_vital_sign_desc      id_vital_sign_desc_cc;
        l_id_unit_measure_sel     id_unit_measure_sel_cc;
        l_id_edit_reason          id_edit_reason_cc;
        l_notes_edit              notes_edit_cc;
        l_value_high              value_high_cc;
        l_value_low               value_low_cc;
    BEGIN
        FOR i IN col_in.first .. col_in.last
        LOOP
            l_id_vital_sign_read_hist(i) := col_in(i).id_vital_sign_read_hist;
            l_id_vital_sign_read(i) := col_in(i).id_vital_sign_read;
            l_value(i) := col_in(i).value;
            l_flg_status(i) := col_in(i).flg_status;
            l_id_unit_measure(i) := col_in(i).id_unit_measure;
            l_id_prof_read(i) := col_in(i).id_prof_read;
            l_dt_vital_sign_read_tstz(i) := col_in(i).dt_vital_sign_read_tstz;
            l_dt_registry(i) := col_in(i).dt_registry;
            l_flg_value_changed(i) := col_in(i).flg_value_changed;
            l_flg_status_changed(i) := col_in(i).flg_status_changed;
            l_flg_dt_vs_read_changed(i) := col_in(i).flg_dt_vs_read_changed;
            l_flg_id_prof_changed(i) := col_in(i).flg_id_prof_changed;
            l_flg_id_unit_changed(i) := col_in(i).flg_id_unit_changed;
            l_create_user(i) := col_in(i).create_user;
            l_create_time(i) := col_in(i).create_time;
            l_create_institution(i) := col_in(i).create_institution;
            l_update_user(i) := col_in(i).update_user;
            l_update_time(i) := col_in(i).update_time;
            l_update_institution(i) := col_in(i).update_institution;
            l_id_vital_sign_desc(i) := col_in(i).id_vital_sign_desc;
            l_id_unit_measure_sel(i) := col_in(i).id_unit_measure_sel;
            l_id_edit_reason(i) := col_in(i).id_edit_reason;
            l_notes_edit(i) := col_in(i).notes_edit;
            l_value_high(i) := col_in(i).value_high;
            l_value_low(i) := col_in(i).value_low;
        END LOOP;
        IF nvl(ignore_if_null_in, FALSE)
        THEN
            -- Set any columns to their current values
            -- if incoming value is NULL.
            -- Put WHEN clause on column-level triggers!
            FORALL i IN col_in.first .. col_in.last
                UPDATE vital_sign_read_hist
                   SET id_vital_sign_read      = nvl(l_id_vital_sign_read(i), id_vital_sign_read),
                       VALUE                   = nvl(l_value(i), VALUE),
                       flg_status              = nvl(l_flg_status(i), flg_status),
                       id_unit_measure         = nvl(l_id_unit_measure(i), id_unit_measure),
                       id_prof_read            = nvl(l_id_prof_read(i), id_prof_read),
                       dt_vital_sign_read_tstz = nvl(l_dt_vital_sign_read_tstz(i), dt_vital_sign_read_tstz),
                       dt_registry             = nvl(l_dt_registry(i), dt_registry),
                       flg_value_changed       = nvl(l_flg_value_changed(i), flg_value_changed),
                       flg_status_changed      = nvl(l_flg_status_changed(i), flg_status_changed),
                       flg_dt_vs_read_changed  = nvl(l_flg_dt_vs_read_changed(i), flg_dt_vs_read_changed),
                       flg_id_prof_changed     = nvl(l_flg_id_prof_changed(i), flg_id_prof_changed),
                       flg_id_unit_changed     = nvl(l_flg_id_unit_changed(i), flg_id_unit_changed),
                       create_user             = nvl(l_create_user(i), create_user),
                       create_time             = nvl(l_create_time(i), create_time),
                       create_institution      = nvl(l_create_institution(i), create_institution),
                       update_user             = nvl(l_update_user(i), update_user),
                       update_time             = nvl(l_update_time(i), update_time),
                       update_institution      = nvl(l_update_institution(i), update_institution),
                       id_vital_sign_desc      = nvl(l_id_vital_sign_desc(i), id_vital_sign_desc),
                       id_unit_measure_sel     = nvl(l_id_unit_measure_sel(i), id_unit_measure_sel),
                       id_edit_reason          = nvl(l_id_edit_reason(i), id_edit_reason),
                       notes_edit              = nvl(l_notes_edit(i), notes_edit),
                       value_high              = nvl(l_value_high(i), value_high),
                       value_low               = nvl(l_value_low(i), value_low)
                 WHERE id_vital_sign_read_hist = l_id_vital_sign_read_hist(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        ELSE
            FORALL i IN col_in.first .. col_in.last
                UPDATE vital_sign_read_hist
                   SET id_vital_sign_read      = l_id_vital_sign_read(i),
                       VALUE                   = l_value(i),
                       flg_status              = l_flg_status(i),
                       id_unit_measure         = l_id_unit_measure(i),
                       id_prof_read            = l_id_prof_read(i),
                       dt_vital_sign_read_tstz = l_dt_vital_sign_read_tstz(i),
                       dt_registry             = l_dt_registry(i),
                       flg_value_changed       = l_flg_value_changed(i),
                       flg_status_changed      = l_flg_status_changed(i),
                       flg_dt_vs_read_changed  = l_flg_dt_vs_read_changed(i),
                       flg_id_prof_changed     = l_flg_id_prof_changed(i),
                       flg_id_unit_changed     = l_flg_id_unit_changed(i),
                       create_user             = l_create_user(i),
                       create_time             = l_create_time(i),
                       create_institution      = l_create_institution(i),
                       update_user             = l_update_user(i),
                       update_time             = l_update_time(i),
                       update_institution      = l_update_institution(i),
                       id_vital_sign_desc      = l_id_vital_sign_desc(i),
                       id_unit_measure_sel     = l_id_unit_measure_sel(i),
                       id_edit_reason          = l_id_edit_reason(i),
                       notes_edit              = l_notes_edit(i),
                       value_high              = l_value_high(i),
                       value_low               = l_value_low(i)
                 WHERE id_vital_sign_read_hist = l_id_vital_sign_read_hist(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update with collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN vital_sign_read_hist_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(col_in, ignore_if_null_in, handle_error_in, rows_out);
    END upd;

    --Dynamic update string
    FUNCTION dynupdstr
    (
        colname_in IN all_tab_columns.column_name%TYPE,
        where_in   IN VARCHAR2 := NULL
    ) RETURN VARCHAR2 IS
    BEGIN
        RETURN 'BEGIN UPDATE vital_sign_read_hist
SET ' || colname_in || ' = :value
 WHERE ' || nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;';
    END dynupdstr;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (with rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN UPDATE vital_sign_read_hist
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    END increment_onecol;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (without rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        EXECUTE IMMEDIATE 'UPDATE vital_sign_read_hist
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1');
    END increment_onecol;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_vital_sign_read_hist_in IN vital_sign_read_hist.id_vital_sign_read_hist%TYPE,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read_hist
         WHERE id_vital_sign_read_hist = id_vital_sign_read_hist_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_vital_sign_read_hist_in IN vital_sign_read_hist.id_vital_sign_read_hist%TYPE,
        handle_error_in            IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del(id_vital_sign_read_hist_in => id_vital_sign_read_hist_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END del;

    -- Delete all rows for this VSRH_PROF_READ_FK foreign key value
    PROCEDURE del_vsrh_prof_read_fk
    (
        id_prof_read_in IN vital_sign_read_hist.id_prof_read%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read_hist
         WHERE id_prof_read = id_prof_read_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsrh_prof_read_fk;

    -- Delete all rows for this VSRH_UMS_FK foreign key value
    PROCEDURE del_vsrh_ums_fk
    (
        id_unit_measure_sel_in IN vital_sign_read_hist.id_unit_measure_sel%TYPE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read_hist
         WHERE id_unit_measure_sel = id_unit_measure_sel_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsrh_ums_fk;

    -- Delete all rows for this VSRH_UNITM_FK foreign key value
    PROCEDURE del_vsrh_unitm_fk
    (
        id_unit_measure_in IN vital_sign_read_hist.id_unit_measure%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read_hist
         WHERE id_unit_measure = id_unit_measure_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsrh_unitm_fk;

    -- Delete all rows for this VSRH_VSR_FK foreign key value
    PROCEDURE del_vsrh_vsr_fk
    (
        id_vital_sign_read_in IN vital_sign_read_hist.id_vital_sign_read%TYPE,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM vital_sign_read_hist
         WHERE id_vital_sign_read = id_vital_sign_read_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_vsrh_vsr_fk;

    -- Delete all rows for this VSRH_PROF_READ_FK foreign key value
    PROCEDURE del_vsrh_prof_read_fk
    (
        id_prof_read_in IN vital_sign_read_hist.id_prof_read%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsrh_prof_read_fk(id_prof_read_in => id_prof_read_in,
                              handle_error_in => handle_error_in,
                              rows_out        => rows_out);
    END del_vsrh_prof_read_fk;

    -- Delete all rows for this VSRH_UMS_FK foreign key value
    PROCEDURE del_vsrh_ums_fk
    (
        id_unit_measure_sel_in IN vital_sign_read_hist.id_unit_measure_sel%TYPE,
        handle_error_in        IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsrh_ums_fk(id_unit_measure_sel_in => id_unit_measure_sel_in,
                        handle_error_in        => handle_error_in,
                        rows_out               => rows_out);
    END del_vsrh_ums_fk;

    -- Delete all rows for this VSRH_UNITM_FK foreign key value
    PROCEDURE del_vsrh_unitm_fk
    (
        id_unit_measure_in IN vital_sign_read_hist.id_unit_measure%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsrh_unitm_fk(id_unit_measure_in => id_unit_measure_in,
                          handle_error_in    => handle_error_in,
                          rows_out           => rows_out);
    END del_vsrh_unitm_fk;

    -- Delete all rows for this VSRH_VSR_FK foreign key value
    PROCEDURE del_vsrh_vsr_fk
    (
        id_vital_sign_read_in IN vital_sign_read_hist.id_vital_sign_read%TYPE,
        handle_error_in       IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_vsrh_vsr_fk(id_vital_sign_read_in => id_vital_sign_read_in,
                        handle_error_in       => handle_error_in,
                        rows_out              => rows_out);
    END del_vsrh_vsr_fk;

    -- Deletions using dynamic SQL
    FUNCTION dyndelstr(where_in IN VARCHAR2) RETURN VARCHAR2 IS
    BEGIN
        IF where_in IS NULL
        THEN
            RETURN 'DELETE FROM vital_sign_read_hist';
        ELSE
            RETURN 'DELETE FROM vital_sign_read_hist WHERE ' || where_in;
        END IF;
    END dyndelstr;
    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyndelstr(where_clause_in) ||
                          ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyndelstr(where_clause_in);
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(vital_sign_read_hist_inout IN OUT vital_sign_read_hist%ROWTYPE) IS
    BEGIN
        vital_sign_read_hist_inout.id_vital_sign_read_hist := NULL;
        vital_sign_read_hist_inout.id_vital_sign_read      := NULL;
        vital_sign_read_hist_inout.value                   := NULL;
        vital_sign_read_hist_inout.flg_status              := NULL;
        vital_sign_read_hist_inout.id_unit_measure         := NULL;
        vital_sign_read_hist_inout.id_prof_read            := NULL;
        vital_sign_read_hist_inout.dt_vital_sign_read_tstz := NULL;
        vital_sign_read_hist_inout.dt_registry             := NULL;
        vital_sign_read_hist_inout.flg_value_changed       := NULL;
        vital_sign_read_hist_inout.flg_status_changed      := NULL;
        vital_sign_read_hist_inout.flg_dt_vs_read_changed  := NULL;
        vital_sign_read_hist_inout.flg_id_prof_changed     := NULL;
        vital_sign_read_hist_inout.flg_id_unit_changed     := NULL;
        vital_sign_read_hist_inout.create_user             := NULL;
        vital_sign_read_hist_inout.create_time             := NULL;
        vital_sign_read_hist_inout.create_institution      := NULL;
        vital_sign_read_hist_inout.update_user             := NULL;
        vital_sign_read_hist_inout.update_time             := NULL;
        vital_sign_read_hist_inout.update_institution      := NULL;
        vital_sign_read_hist_inout.id_vital_sign_desc      := NULL;
        vital_sign_read_hist_inout.id_unit_measure_sel     := NULL;
        vital_sign_read_hist_inout.id_edit_reason          := NULL;
        vital_sign_read_hist_inout.notes_edit              := NULL;
        vital_sign_read_hist_inout.value_high              := NULL;
        vital_sign_read_hist_inout.value_low               := NULL;
    END initrec;

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN vital_sign_read_hist%ROWTYPE IS
        l_vital_sign_read_hist vital_sign_read_hist%ROWTYPE;
    BEGIN
        RETURN l_vital_sign_read_hist;
    END initrec;

    --get data from rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN vital_sign_read_hist_tc IS
        data vital_sign_read_hist_tc;
    BEGIN
        SELECT *
          BULK COLLECT
          INTO data
          FROM vital_sign_read_hist
         WHERE ROWID IN (SELECT /*+opt_estimate(table,t,scale_rows=0.0000001))*/
                          *
                           FROM TABLE(rows_in) t);
        RETURN data;
    END get_data_rowid;

    --get data from rowid (pragma autonomous transacion)
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN vital_sign_read_hist_tc IS
        data vital_sign_read_hist_tc;
        PRAGMA AUTONOMOUS_TRANSACTION;
    BEGIN
        data := get_data_rowid(rows_in);
        COMMIT;
        RETURN data;
    
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'get_data_rowid_pat');
            ROLLBACK;
        
    END get_data_rowid_pat;

BEGIN
    NULL;
END ts_vital_sign_read_hist;
/
