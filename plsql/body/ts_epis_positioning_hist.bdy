/*-- Last Change Revision: $Rev: 2028139 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:44:17 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE BODY ts_epis_positioning_hist
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2020-03-25 14:52:23
| Created By: ALERT
*/
 IS

    e_null_column_value EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_null_column_value, -1400);

    e_existing_fky_reference EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_existing_fky_reference, -2266);

    e_check_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_check_constraint_failure, -2290);

    e_no_parent_key EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_no_parent_key, -2291);

    e_child_record_found EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_child_record_found, -2292);

    e_forall_error EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_forall_error, -24381);

    -- Defined for backward compatibilty.
    e_integ_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_integ_constraint_failure, -2291);

    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN epis_positioning_hist.id_epis_positioning_hist%TYPE IS
        retval epis_positioning_hist.id_epis_positioning_hist%TYPE;
    BEGIN
        IF sequence_in IS NULL
        THEN
            retval := seq_epis_positioning_hist.nextval;
        ELSE
            EXECUTE IMMEDIATE 'SELECT ' || sequence_in || '.NEXTVAL FROM dual'
                INTO retval;
        END IF;
        RETURN retval;
    END next_key;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_epis_positioning_in  IN epis_positioning_hist.id_epis_positioning%TYPE DEFAULT NULL,
        id_episode_in           IN epis_positioning_hist.id_episode%TYPE DEFAULT NULL,
        id_professional_in      IN epis_positioning_hist.id_professional%TYPE DEFAULT NULL,
        flg_status_in           IN epis_positioning_hist.flg_status%TYPE DEFAULT 'R',
        flg_massage_in          IN epis_positioning_hist.flg_massage%TYPE DEFAULT 'N',
        notes_in                IN epis_positioning_hist.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in       IN epis_positioning_hist.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in         IN epis_positioning_hist.notes_cancel%TYPE DEFAULT NULL,
        rot_interval_in         IN epis_positioning_hist.rot_interval%TYPE DEFAULT NULL,
        id_prof_inter_in        IN epis_positioning_hist.id_prof_inter%TYPE DEFAULT NULL,
        notes_inter_in          IN epis_positioning_hist.notes_inter%TYPE DEFAULT NULL,
        dt_creation_tstz_in     IN epis_positioning_hist.dt_creation_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in       IN epis_positioning_hist.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_inter_tstz_in        IN epis_positioning_hist.dt_inter_tstz%TYPE DEFAULT NULL,
        create_user_in          IN epis_positioning_hist.create_user%TYPE DEFAULT NULL,
        create_time_in          IN epis_positioning_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN epis_positioning_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN epis_positioning_hist.update_user%TYPE DEFAULT NULL,
        update_time_in          IN epis_positioning_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN epis_positioning_hist.update_institution%TYPE DEFAULT NULL,
        id_rotation_interval_in IN epis_positioning_hist.id_rotation_interval%TYPE DEFAULT NULL,
        id_cancel_reason_in     IN epis_positioning_hist.id_cancel_reason%TYPE DEFAULT NULL,
        dt_epis_positioning_in  IN epis_positioning_hist.dt_epis_positioning%TYPE DEFAULT NULL,
        flg_origin_in           IN epis_positioning_hist.flg_origin%TYPE DEFAULT NULL,
        id_episode_context_in   IN epis_positioning_hist.id_episode_context%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_pky epis_positioning_hist.id_epis_positioning_hist%TYPE := next_key;
    BEGIN
        ins(id_epis_positioning_hist_in => l_pky,
            id_epis_positioning_in      => id_epis_positioning_in,
            id_episode_in               => id_episode_in,
            id_professional_in          => id_professional_in,
            flg_status_in               => flg_status_in,
            flg_massage_in              => flg_massage_in,
            notes_in                    => notes_in,
            id_prof_cancel_in           => id_prof_cancel_in,
            notes_cancel_in             => notes_cancel_in,
            rot_interval_in             => rot_interval_in,
            id_prof_inter_in            => id_prof_inter_in,
            notes_inter_in              => notes_inter_in,
            dt_creation_tstz_in         => dt_creation_tstz_in,
            dt_cancel_tstz_in           => dt_cancel_tstz_in,
            dt_inter_tstz_in            => dt_inter_tstz_in,
            create_user_in              => create_user_in,
            create_time_in              => create_time_in,
            create_institution_in       => create_institution_in,
            update_user_in              => update_user_in,
            update_time_in              => update_time_in,
            update_institution_in       => update_institution_in,
            id_rotation_interval_in     => id_rotation_interval_in,
            id_cancel_reason_in         => id_cancel_reason_in,
            dt_epis_positioning_in      => dt_epis_positioning_in,
            flg_origin_in               => flg_origin_in,
            id_episode_context_in       => id_episode_context_in,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END ins;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_epis_positioning_in  IN epis_positioning_hist.id_epis_positioning%TYPE DEFAULT NULL,
        id_episode_in           IN epis_positioning_hist.id_episode%TYPE DEFAULT NULL,
        id_professional_in      IN epis_positioning_hist.id_professional%TYPE DEFAULT NULL,
        flg_status_in           IN epis_positioning_hist.flg_status%TYPE DEFAULT 'R',
        flg_massage_in          IN epis_positioning_hist.flg_massage%TYPE DEFAULT 'N',
        notes_in                IN epis_positioning_hist.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in       IN epis_positioning_hist.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in         IN epis_positioning_hist.notes_cancel%TYPE DEFAULT NULL,
        rot_interval_in         IN epis_positioning_hist.rot_interval%TYPE DEFAULT NULL,
        id_prof_inter_in        IN epis_positioning_hist.id_prof_inter%TYPE DEFAULT NULL,
        notes_inter_in          IN epis_positioning_hist.notes_inter%TYPE DEFAULT NULL,
        dt_creation_tstz_in     IN epis_positioning_hist.dt_creation_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in       IN epis_positioning_hist.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_inter_tstz_in        IN epis_positioning_hist.dt_inter_tstz%TYPE DEFAULT NULL,
        create_user_in          IN epis_positioning_hist.create_user%TYPE DEFAULT NULL,
        create_time_in          IN epis_positioning_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN epis_positioning_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN epis_positioning_hist.update_user%TYPE DEFAULT NULL,
        update_time_in          IN epis_positioning_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN epis_positioning_hist.update_institution%TYPE DEFAULT NULL,
        id_rotation_interval_in IN epis_positioning_hist.id_rotation_interval%TYPE DEFAULT NULL,
        id_cancel_reason_in     IN epis_positioning_hist.id_cancel_reason%TYPE DEFAULT NULL,
        dt_epis_positioning_in  IN epis_positioning_hist.dt_epis_positioning%TYPE DEFAULT NULL,
        flg_origin_in           IN epis_positioning_hist.flg_origin%TYPE DEFAULT NULL,
        id_episode_context_in   IN epis_positioning_hist.id_episode_context%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_epis_positioning_in  => id_epis_positioning_in,
            id_episode_in           => id_episode_in,
            id_professional_in      => id_professional_in,
            flg_status_in           => flg_status_in,
            flg_massage_in          => flg_massage_in,
            notes_in                => notes_in,
            id_prof_cancel_in       => id_prof_cancel_in,
            notes_cancel_in         => notes_cancel_in,
            rot_interval_in         => rot_interval_in,
            id_prof_inter_in        => id_prof_inter_in,
            notes_inter_in          => notes_inter_in,
            dt_creation_tstz_in     => dt_creation_tstz_in,
            dt_cancel_tstz_in       => dt_cancel_tstz_in,
            dt_inter_tstz_in        => dt_inter_tstz_in,
            create_user_in          => create_user_in,
            create_time_in          => create_time_in,
            create_institution_in   => create_institution_in,
            update_user_in          => update_user_in,
            update_time_in          => update_time_in,
            update_institution_in   => update_institution_in,
            id_rotation_interval_in => id_rotation_interval_in,
            id_cancel_reason_in     => id_cancel_reason_in,
            dt_epis_positioning_in  => dt_epis_positioning_in,
            flg_origin_in           => flg_origin_in,
            id_episode_context_in   => id_episode_context_in,
            handle_error_in         => handle_error_in,
            rows_out                => rows_out);
    END ins;

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_epis_positioning_in       IN epis_positioning_hist.id_epis_positioning%TYPE DEFAULT NULL,
        id_episode_in                IN epis_positioning_hist.id_episode%TYPE DEFAULT NULL,
        id_professional_in           IN epis_positioning_hist.id_professional%TYPE DEFAULT NULL,
        flg_status_in                IN epis_positioning_hist.flg_status%TYPE DEFAULT 'R',
        flg_massage_in               IN epis_positioning_hist.flg_massage%TYPE DEFAULT 'N',
        notes_in                     IN epis_positioning_hist.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN epis_positioning_hist.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN epis_positioning_hist.notes_cancel%TYPE DEFAULT NULL,
        rot_interval_in              IN epis_positioning_hist.rot_interval%TYPE DEFAULT NULL,
        id_prof_inter_in             IN epis_positioning_hist.id_prof_inter%TYPE DEFAULT NULL,
        notes_inter_in               IN epis_positioning_hist.notes_inter%TYPE DEFAULT NULL,
        dt_creation_tstz_in          IN epis_positioning_hist.dt_creation_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN epis_positioning_hist.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_inter_tstz_in             IN epis_positioning_hist.dt_inter_tstz%TYPE DEFAULT NULL,
        create_user_in               IN epis_positioning_hist.create_user%TYPE DEFAULT NULL,
        create_time_in               IN epis_positioning_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN epis_positioning_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN epis_positioning_hist.update_user%TYPE DEFAULT NULL,
        update_time_in               IN epis_positioning_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN epis_positioning_hist.update_institution%TYPE DEFAULT NULL,
        id_rotation_interval_in      IN epis_positioning_hist.id_rotation_interval%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN epis_positioning_hist.id_cancel_reason%TYPE DEFAULT NULL,
        dt_epis_positioning_in       IN epis_positioning_hist.dt_epis_positioning%TYPE DEFAULT NULL,
        flg_origin_in                IN epis_positioning_hist.flg_origin%TYPE DEFAULT NULL,
        id_episode_context_in        IN epis_positioning_hist.id_episode_context%TYPE DEFAULT NULL,
        id_epis_positioning_hist_out IN OUT epis_positioning_hist.id_epis_positioning_hist%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_pky epis_positioning_hist.id_epis_positioning_hist%TYPE := next_key;
    BEGIN
        ins(id_epis_positioning_hist_in => l_pky,
            id_epis_positioning_in      => id_epis_positioning_in,
            id_episode_in               => id_episode_in,
            id_professional_in          => id_professional_in,
            flg_status_in               => flg_status_in,
            flg_massage_in              => flg_massage_in,
            notes_in                    => notes_in,
            id_prof_cancel_in           => id_prof_cancel_in,
            notes_cancel_in             => notes_cancel_in,
            rot_interval_in             => rot_interval_in,
            id_prof_inter_in            => id_prof_inter_in,
            notes_inter_in              => notes_inter_in,
            dt_creation_tstz_in         => dt_creation_tstz_in,
            dt_cancel_tstz_in           => dt_cancel_tstz_in,
            dt_inter_tstz_in            => dt_inter_tstz_in,
            create_user_in              => create_user_in,
            create_time_in              => create_time_in,
            create_institution_in       => create_institution_in,
            update_user_in              => update_user_in,
            update_time_in              => update_time_in,
            update_institution_in       => update_institution_in,
            id_rotation_interval_in     => id_rotation_interval_in,
            id_cancel_reason_in         => id_cancel_reason_in,
            dt_epis_positioning_in      => dt_epis_positioning_in,
            flg_origin_in               => flg_origin_in,
            id_episode_context_in       => id_episode_context_in,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
        id_epis_positioning_hist_out := l_pky;
    END ins;

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_epis_positioning_in       IN epis_positioning_hist.id_epis_positioning%TYPE DEFAULT NULL,
        id_episode_in                IN epis_positioning_hist.id_episode%TYPE DEFAULT NULL,
        id_professional_in           IN epis_positioning_hist.id_professional%TYPE DEFAULT NULL,
        flg_status_in                IN epis_positioning_hist.flg_status%TYPE DEFAULT 'R',
        flg_massage_in               IN epis_positioning_hist.flg_massage%TYPE DEFAULT 'N',
        notes_in                     IN epis_positioning_hist.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in            IN epis_positioning_hist.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in              IN epis_positioning_hist.notes_cancel%TYPE DEFAULT NULL,
        rot_interval_in              IN epis_positioning_hist.rot_interval%TYPE DEFAULT NULL,
        id_prof_inter_in             IN epis_positioning_hist.id_prof_inter%TYPE DEFAULT NULL,
        notes_inter_in               IN epis_positioning_hist.notes_inter%TYPE DEFAULT NULL,
        dt_creation_tstz_in          IN epis_positioning_hist.dt_creation_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in            IN epis_positioning_hist.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_inter_tstz_in             IN epis_positioning_hist.dt_inter_tstz%TYPE DEFAULT NULL,
        create_user_in               IN epis_positioning_hist.create_user%TYPE DEFAULT NULL,
        create_time_in               IN epis_positioning_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN epis_positioning_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN epis_positioning_hist.update_user%TYPE DEFAULT NULL,
        update_time_in               IN epis_positioning_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN epis_positioning_hist.update_institution%TYPE DEFAULT NULL,
        id_rotation_interval_in      IN epis_positioning_hist.id_rotation_interval%TYPE DEFAULT NULL,
        id_cancel_reason_in          IN epis_positioning_hist.id_cancel_reason%TYPE DEFAULT NULL,
        dt_epis_positioning_in       IN epis_positioning_hist.dt_epis_positioning%TYPE DEFAULT NULL,
        flg_origin_in                IN epis_positioning_hist.flg_origin%TYPE DEFAULT NULL,
        id_episode_context_in        IN epis_positioning_hist.id_episode_context%TYPE DEFAULT NULL,
        id_epis_positioning_hist_out IN OUT epis_positioning_hist.id_epis_positioning_hist%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_epis_positioning_in       => id_epis_positioning_in,
            id_episode_in                => id_episode_in,
            id_professional_in           => id_professional_in,
            flg_status_in                => flg_status_in,
            flg_massage_in               => flg_massage_in,
            notes_in                     => notes_in,
            id_prof_cancel_in            => id_prof_cancel_in,
            notes_cancel_in              => notes_cancel_in,
            rot_interval_in              => rot_interval_in,
            id_prof_inter_in             => id_prof_inter_in,
            notes_inter_in               => notes_inter_in,
            dt_creation_tstz_in          => dt_creation_tstz_in,
            dt_cancel_tstz_in            => dt_cancel_tstz_in,
            dt_inter_tstz_in             => dt_inter_tstz_in,
            create_user_in               => create_user_in,
            create_time_in               => create_time_in,
            create_institution_in        => create_institution_in,
            update_user_in               => update_user_in,
            update_time_in               => update_time_in,
            update_institution_in        => update_institution_in,
            id_rotation_interval_in      => id_rotation_interval_in,
            id_cancel_reason_in          => id_cancel_reason_in,
            dt_epis_positioning_in       => dt_epis_positioning_in,
            flg_origin_in                => flg_origin_in,
            id_episode_context_in        => id_episode_context_in,
            id_epis_positioning_hist_out => id_epis_positioning_hist_out,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
    END ins;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_epis_positioning_in  IN epis_positioning_hist.id_epis_positioning%TYPE DEFAULT NULL,
        id_episode_in           IN epis_positioning_hist.id_episode%TYPE DEFAULT NULL,
        id_professional_in      IN epis_positioning_hist.id_professional%TYPE DEFAULT NULL,
        flg_status_in           IN epis_positioning_hist.flg_status%TYPE DEFAULT 'R',
        flg_massage_in          IN epis_positioning_hist.flg_massage%TYPE DEFAULT 'N',
        notes_in                IN epis_positioning_hist.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in       IN epis_positioning_hist.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in         IN epis_positioning_hist.notes_cancel%TYPE DEFAULT NULL,
        rot_interval_in         IN epis_positioning_hist.rot_interval%TYPE DEFAULT NULL,
        id_prof_inter_in        IN epis_positioning_hist.id_prof_inter%TYPE DEFAULT NULL,
        notes_inter_in          IN epis_positioning_hist.notes_inter%TYPE DEFAULT NULL,
        dt_creation_tstz_in     IN epis_positioning_hist.dt_creation_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in       IN epis_positioning_hist.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_inter_tstz_in        IN epis_positioning_hist.dt_inter_tstz%TYPE DEFAULT NULL,
        create_user_in          IN epis_positioning_hist.create_user%TYPE DEFAULT NULL,
        create_time_in          IN epis_positioning_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN epis_positioning_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN epis_positioning_hist.update_user%TYPE DEFAULT NULL,
        update_time_in          IN epis_positioning_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN epis_positioning_hist.update_institution%TYPE DEFAULT NULL,
        id_rotation_interval_in IN epis_positioning_hist.id_rotation_interval%TYPE DEFAULT NULL,
        id_cancel_reason_in     IN epis_positioning_hist.id_cancel_reason%TYPE DEFAULT NULL,
        dt_epis_positioning_in  IN epis_positioning_hist.dt_epis_positioning%TYPE DEFAULT NULL,
        flg_origin_in           IN epis_positioning_hist.flg_origin%TYPE DEFAULT NULL,
        id_episode_context_in   IN epis_positioning_hist.id_episode_context%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN epis_positioning_hist.id_epis_positioning_hist%TYPE IS
        l_pky epis_positioning_hist.id_epis_positioning_hist%TYPE := next_key;
    BEGIN
        ins(id_epis_positioning_hist_in => l_pky,
            id_epis_positioning_in      => id_epis_positioning_in,
            id_episode_in               => id_episode_in,
            id_professional_in          => id_professional_in,
            flg_status_in               => flg_status_in,
            flg_massage_in              => flg_massage_in,
            notes_in                    => notes_in,
            id_prof_cancel_in           => id_prof_cancel_in,
            notes_cancel_in             => notes_cancel_in,
            rot_interval_in             => rot_interval_in,
            id_prof_inter_in            => id_prof_inter_in,
            notes_inter_in              => notes_inter_in,
            dt_creation_tstz_in         => dt_creation_tstz_in,
            dt_cancel_tstz_in           => dt_cancel_tstz_in,
            dt_inter_tstz_in            => dt_inter_tstz_in,
            create_user_in              => create_user_in,
            create_time_in              => create_time_in,
            create_institution_in       => create_institution_in,
            update_user_in              => update_user_in,
            update_time_in              => update_time_in,
            update_institution_in       => update_institution_in,
            id_rotation_interval_in     => id_rotation_interval_in,
            id_cancel_reason_in         => id_cancel_reason_in,
            dt_epis_positioning_in      => dt_epis_positioning_in,
            flg_origin_in               => flg_origin_in,
            id_episode_context_in       => id_episode_context_in,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
        RETURN l_pky;
    END ins;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_epis_positioning_in  IN epis_positioning_hist.id_epis_positioning%TYPE DEFAULT NULL,
        id_episode_in           IN epis_positioning_hist.id_episode%TYPE DEFAULT NULL,
        id_professional_in      IN epis_positioning_hist.id_professional%TYPE DEFAULT NULL,
        flg_status_in           IN epis_positioning_hist.flg_status%TYPE DEFAULT 'R',
        flg_massage_in          IN epis_positioning_hist.flg_massage%TYPE DEFAULT 'N',
        notes_in                IN epis_positioning_hist.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in       IN epis_positioning_hist.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in         IN epis_positioning_hist.notes_cancel%TYPE DEFAULT NULL,
        rot_interval_in         IN epis_positioning_hist.rot_interval%TYPE DEFAULT NULL,
        id_prof_inter_in        IN epis_positioning_hist.id_prof_inter%TYPE DEFAULT NULL,
        notes_inter_in          IN epis_positioning_hist.notes_inter%TYPE DEFAULT NULL,
        dt_creation_tstz_in     IN epis_positioning_hist.dt_creation_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in       IN epis_positioning_hist.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_inter_tstz_in        IN epis_positioning_hist.dt_inter_tstz%TYPE DEFAULT NULL,
        create_user_in          IN epis_positioning_hist.create_user%TYPE DEFAULT NULL,
        create_time_in          IN epis_positioning_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in   IN epis_positioning_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in          IN epis_positioning_hist.update_user%TYPE DEFAULT NULL,
        update_time_in          IN epis_positioning_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in   IN epis_positioning_hist.update_institution%TYPE DEFAULT NULL,
        id_rotation_interval_in IN epis_positioning_hist.id_rotation_interval%TYPE DEFAULT NULL,
        id_cancel_reason_in     IN epis_positioning_hist.id_cancel_reason%TYPE DEFAULT NULL,
        dt_epis_positioning_in  IN epis_positioning_hist.dt_epis_positioning%TYPE DEFAULT NULL,
        flg_origin_in           IN epis_positioning_hist.flg_origin%TYPE DEFAULT NULL,
        id_episode_context_in   IN epis_positioning_hist.id_episode_context%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN epis_positioning_hist.id_epis_positioning_hist%TYPE IS
        l_pky    epis_positioning_hist.id_epis_positioning_hist%TYPE := next_key;
        rows_out table_varchar;
    BEGIN
        ins(id_epis_positioning_hist_in => l_pky,
            id_epis_positioning_in      => id_epis_positioning_in,
            id_episode_in               => id_episode_in,
            id_professional_in          => id_professional_in,
            flg_status_in               => flg_status_in,
            flg_massage_in              => flg_massage_in,
            notes_in                    => notes_in,
            id_prof_cancel_in           => id_prof_cancel_in,
            notes_cancel_in             => notes_cancel_in,
            rot_interval_in             => rot_interval_in,
            id_prof_inter_in            => id_prof_inter_in,
            notes_inter_in              => notes_inter_in,
            dt_creation_tstz_in         => dt_creation_tstz_in,
            dt_cancel_tstz_in           => dt_cancel_tstz_in,
            dt_inter_tstz_in            => dt_inter_tstz_in,
            create_user_in              => create_user_in,
            create_time_in              => create_time_in,
            create_institution_in       => create_institution_in,
            update_user_in              => update_user_in,
            update_time_in              => update_time_in,
            update_institution_in       => update_institution_in,
            id_rotation_interval_in     => id_rotation_interval_in,
            id_cancel_reason_in         => id_cancel_reason_in,
            dt_epis_positioning_in      => dt_epis_positioning_in,
            flg_origin_in               => flg_origin_in,
            id_episode_context_in       => id_episode_context_in,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
        RETURN l_pky;
    END ins;

    PROCEDURE ins
    (
        id_epis_positioning_hist_in IN epis_positioning_hist.id_epis_positioning_hist%TYPE,
        id_epis_positioning_in      IN epis_positioning_hist.id_epis_positioning%TYPE DEFAULT NULL,
        id_episode_in               IN epis_positioning_hist.id_episode%TYPE DEFAULT NULL,
        id_professional_in          IN epis_positioning_hist.id_professional%TYPE DEFAULT NULL,
        flg_status_in               IN epis_positioning_hist.flg_status%TYPE DEFAULT 'R',
        flg_massage_in              IN epis_positioning_hist.flg_massage%TYPE DEFAULT 'N',
        notes_in                    IN epis_positioning_hist.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in           IN epis_positioning_hist.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in             IN epis_positioning_hist.notes_cancel%TYPE DEFAULT NULL,
        rot_interval_in             IN epis_positioning_hist.rot_interval%TYPE DEFAULT NULL,
        id_prof_inter_in            IN epis_positioning_hist.id_prof_inter%TYPE DEFAULT NULL,
        notes_inter_in              IN epis_positioning_hist.notes_inter%TYPE DEFAULT NULL,
        dt_creation_tstz_in         IN epis_positioning_hist.dt_creation_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in           IN epis_positioning_hist.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_inter_tstz_in            IN epis_positioning_hist.dt_inter_tstz%TYPE DEFAULT NULL,
        create_user_in              IN epis_positioning_hist.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_positioning_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_positioning_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_positioning_hist.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_positioning_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_positioning_hist.update_institution%TYPE DEFAULT NULL,
        id_rotation_interval_in     IN epis_positioning_hist.id_rotation_interval%TYPE DEFAULT NULL,
        id_cancel_reason_in         IN epis_positioning_hist.id_cancel_reason%TYPE DEFAULT NULL,
        dt_epis_positioning_in      IN epis_positioning_hist.dt_epis_positioning%TYPE DEFAULT NULL,
        flg_origin_in               IN epis_positioning_hist.flg_origin%TYPE DEFAULT NULL,
        id_episode_context_in       IN epis_positioning_hist.id_episode_context%TYPE DEFAULT NULL,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    OUT table_varchar
    ) IS
    BEGIN
        INSERT INTO epis_positioning_hist
            (id_epis_positioning_hist,
             id_epis_positioning,
             id_episode,
             id_professional,
             flg_status,
             flg_massage,
             notes,
             id_prof_cancel,
             notes_cancel,
             rot_interval,
             id_prof_inter,
             notes_inter,
             dt_creation_tstz,
             dt_cancel_tstz,
             dt_inter_tstz,
             create_user,
             create_time,
             create_institution,
             update_user,
             update_time,
             update_institution,
             id_rotation_interval,
             id_cancel_reason,
             dt_epis_positioning,
             flg_origin,
             id_episode_context)
        VALUES
            (id_epis_positioning_hist_in,
             id_epis_positioning_in,
             id_episode_in,
             id_professional_in,
             flg_status_in,
             flg_massage_in,
             notes_in,
             id_prof_cancel_in,
             notes_cancel_in,
             rot_interval_in,
             id_prof_inter_in,
             notes_inter_in,
             dt_creation_tstz_in,
             dt_cancel_tstz_in,
             dt_inter_tstz_in,
             create_user_in,
             create_time_in,
             create_institution_in,
             update_user_in,
             update_time_in,
             update_institution_in,
             id_rotation_interval_in,
             id_cancel_reason_in,
             dt_epis_positioning_in,
             flg_origin_in,
             id_episode_context_in)
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    PROCEDURE ins
    (
        id_epis_positioning_hist_in IN epis_positioning_hist.id_epis_positioning_hist%TYPE,
        id_epis_positioning_in      IN epis_positioning_hist.id_epis_positioning%TYPE DEFAULT NULL,
        id_episode_in               IN epis_positioning_hist.id_episode%TYPE DEFAULT NULL,
        id_professional_in          IN epis_positioning_hist.id_professional%TYPE DEFAULT NULL,
        flg_status_in               IN epis_positioning_hist.flg_status%TYPE DEFAULT 'R',
        flg_massage_in              IN epis_positioning_hist.flg_massage%TYPE DEFAULT 'N',
        notes_in                    IN epis_positioning_hist.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in           IN epis_positioning_hist.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in             IN epis_positioning_hist.notes_cancel%TYPE DEFAULT NULL,
        rot_interval_in             IN epis_positioning_hist.rot_interval%TYPE DEFAULT NULL,
        id_prof_inter_in            IN epis_positioning_hist.id_prof_inter%TYPE DEFAULT NULL,
        notes_inter_in              IN epis_positioning_hist.notes_inter%TYPE DEFAULT NULL,
        dt_creation_tstz_in         IN epis_positioning_hist.dt_creation_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in           IN epis_positioning_hist.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_inter_tstz_in            IN epis_positioning_hist.dt_inter_tstz%TYPE DEFAULT NULL,
        create_user_in              IN epis_positioning_hist.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_positioning_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_positioning_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_positioning_hist.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_positioning_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_positioning_hist.update_institution%TYPE DEFAULT NULL,
        id_rotation_interval_in     IN epis_positioning_hist.id_rotation_interval%TYPE DEFAULT NULL,
        id_cancel_reason_in         IN epis_positioning_hist.id_cancel_reason%TYPE DEFAULT NULL,
        dt_epis_positioning_in      IN epis_positioning_hist.dt_epis_positioning%TYPE DEFAULT NULL,
        flg_origin_in               IN epis_positioning_hist.flg_origin%TYPE DEFAULT NULL,
        id_episode_context_in       IN epis_positioning_hist.id_episode_context%TYPE DEFAULT NULL,
        handle_error_in             IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_epis_positioning_hist_in => id_epis_positioning_hist_in,
            id_epis_positioning_in      => id_epis_positioning_in,
            id_episode_in               => id_episode_in,
            id_professional_in          => id_professional_in,
            flg_status_in               => flg_status_in,
            flg_massage_in              => flg_massage_in,
            notes_in                    => notes_in,
            id_prof_cancel_in           => id_prof_cancel_in,
            notes_cancel_in             => notes_cancel_in,
            rot_interval_in             => rot_interval_in,
            id_prof_inter_in            => id_prof_inter_in,
            notes_inter_in              => notes_inter_in,
            dt_creation_tstz_in         => dt_creation_tstz_in,
            dt_cancel_tstz_in           => dt_cancel_tstz_in,
            dt_inter_tstz_in            => dt_inter_tstz_in,
            create_user_in              => create_user_in,
            create_time_in              => create_time_in,
            create_institution_in       => create_institution_in,
            update_user_in              => update_user_in,
            update_time_in              => update_time_in,
            update_institution_in       => update_institution_in,
            id_rotation_interval_in     => id_rotation_interval_in,
            id_cancel_reason_in         => id_cancel_reason_in,
            dt_epis_positioning_in      => dt_epis_positioning_in,
            flg_origin_in               => flg_origin_in,
            id_episode_context_in       => id_episode_context_in,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN epis_positioning_hist%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_rec epis_positioning_hist%ROWTYPE := rec_in;
    BEGIN
        IF gen_pky_in
        THEN
            l_rec.id_epis_positioning_hist := next_key(sequence_in);
        END IF;
    
        ins(id_epis_positioning_hist_in => l_rec.id_epis_positioning_hist,
            id_epis_positioning_in      => l_rec.id_epis_positioning,
            id_episode_in               => l_rec.id_episode,
            id_professional_in          => l_rec.id_professional,
            flg_status_in               => l_rec.flg_status,
            flg_massage_in              => l_rec.flg_massage,
            notes_in                    => l_rec.notes,
            id_prof_cancel_in           => l_rec.id_prof_cancel,
            notes_cancel_in             => l_rec.notes_cancel,
            rot_interval_in             => l_rec.rot_interval,
            id_prof_inter_in            => l_rec.id_prof_inter,
            notes_inter_in              => l_rec.notes_inter,
            dt_creation_tstz_in         => l_rec.dt_creation_tstz,
            dt_cancel_tstz_in           => l_rec.dt_cancel_tstz,
            dt_inter_tstz_in            => l_rec.dt_inter_tstz,
            create_user_in              => l_rec.create_user,
            create_time_in              => l_rec.create_time,
            create_institution_in       => l_rec.create_institution,
            update_user_in              => l_rec.update_user,
            update_time_in              => l_rec.update_time,
            update_institution_in       => l_rec.update_institution,
            id_rotation_interval_in     => l_rec.id_rotation_interval,
            id_cancel_reason_in         => l_rec.id_cancel_reason,
            dt_epis_positioning_in      => l_rec.dt_epis_positioning,
            flg_origin_in               => l_rec.flg_origin,
            id_episode_context_in       => l_rec.id_episode_context,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN epis_positioning_hist%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rec_in          => rec_in,
            gen_pky_in      => gen_pky_in,
            sequence_in     => sequence_in,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN epis_positioning_hist_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        IF rows_in.count = 0
        THEN
            NULL;
        ELSE
            FORALL indx IN rows_in.first .. rows_in.last SAVE EXCEPTIONS
                INSERT INTO epis_positioning_hist
                    (id_epis_positioning_hist,
                     id_epis_positioning,
                     id_episode,
                     id_professional,
                     flg_status,
                     flg_massage,
                     notes,
                     id_prof_cancel,
                     notes_cancel,
                     rot_interval,
                     id_prof_inter,
                     notes_inter,
                     dt_creation_tstz,
                     dt_cancel_tstz,
                     dt_inter_tstz,
                     id_rotation_interval,
                     id_cancel_reason,
                     dt_epis_positioning,
                     flg_origin,
                     id_episode_context)
                VALUES
                    (rows_in(indx).id_epis_positioning_hist,
                     rows_in(indx).id_epis_positioning,
                     rows_in(indx).id_episode,
                     rows_in(indx).id_professional,
                     rows_in(indx).flg_status,
                     rows_in(indx).flg_massage,
                     rows_in(indx).notes,
                     rows_in(indx).id_prof_cancel,
                     rows_in(indx).notes_cancel,
                     rows_in(indx).rot_interval,
                     rows_in(indx).id_prof_inter,
                     rows_in(indx).notes_inter,
                     rows_in(indx).dt_creation_tstz,
                     rows_in(indx).dt_cancel_tstz,
                     rows_in(indx).dt_inter_tstz,
                     rows_in(indx).id_rotation_interval,
                     rows_in(indx).id_cancel_reason,
                     rows_in(indx).dt_epis_positioning,
                     rows_in(indx).flg_origin,
                     rows_in(indx).id_episode_context)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN epis_positioning_hist_tc,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rows_in => rows_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END ins;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_epis_positioning_hist_in IN epis_positioning_hist.id_epis_positioning_hist%TYPE,
        id_epis_positioning_in      IN epis_positioning_hist.id_epis_positioning%TYPE DEFAULT NULL,
        id_epis_positioning_nin     IN BOOLEAN := TRUE,
        id_episode_in               IN epis_positioning_hist.id_episode%TYPE DEFAULT NULL,
        id_episode_nin              IN BOOLEAN := TRUE,
        id_professional_in          IN epis_positioning_hist.id_professional%TYPE DEFAULT NULL,
        id_professional_nin         IN BOOLEAN := TRUE,
        flg_status_in               IN epis_positioning_hist.flg_status%TYPE DEFAULT NULL,
        flg_status_nin              IN BOOLEAN := TRUE,
        flg_massage_in              IN epis_positioning_hist.flg_massage%TYPE DEFAULT NULL,
        flg_massage_nin             IN BOOLEAN := TRUE,
        notes_in                    IN epis_positioning_hist.notes%TYPE DEFAULT NULL,
        notes_nin                   IN BOOLEAN := TRUE,
        id_prof_cancel_in           IN epis_positioning_hist.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin          IN BOOLEAN := TRUE,
        notes_cancel_in             IN epis_positioning_hist.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin            IN BOOLEAN := TRUE,
        rot_interval_in             IN epis_positioning_hist.rot_interval%TYPE DEFAULT NULL,
        rot_interval_nin            IN BOOLEAN := TRUE,
        id_prof_inter_in            IN epis_positioning_hist.id_prof_inter%TYPE DEFAULT NULL,
        id_prof_inter_nin           IN BOOLEAN := TRUE,
        notes_inter_in              IN epis_positioning_hist.notes_inter%TYPE DEFAULT NULL,
        notes_inter_nin             IN BOOLEAN := TRUE,
        dt_creation_tstz_in         IN epis_positioning_hist.dt_creation_tstz%TYPE DEFAULT NULL,
        dt_creation_tstz_nin        IN BOOLEAN := TRUE,
        dt_cancel_tstz_in           IN epis_positioning_hist.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin          IN BOOLEAN := TRUE,
        dt_inter_tstz_in            IN epis_positioning_hist.dt_inter_tstz%TYPE DEFAULT NULL,
        dt_inter_tstz_nin           IN BOOLEAN := TRUE,
        create_user_in              IN epis_positioning_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN epis_positioning_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN epis_positioning_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN epis_positioning_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN epis_positioning_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN epis_positioning_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        id_rotation_interval_in     IN epis_positioning_hist.id_rotation_interval%TYPE DEFAULT NULL,
        id_rotation_interval_nin    IN BOOLEAN := TRUE,
        id_cancel_reason_in         IN epis_positioning_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin        IN BOOLEAN := TRUE,
        dt_epis_positioning_in      IN epis_positioning_hist.dt_epis_positioning%TYPE DEFAULT NULL,
        dt_epis_positioning_nin     IN BOOLEAN := TRUE,
        flg_origin_in               IN epis_positioning_hist.flg_origin%TYPE DEFAULT NULL,
        flg_origin_nin              IN BOOLEAN := TRUE,
        id_episode_context_in       IN epis_positioning_hist.id_episode_context%TYPE DEFAULT NULL,
        id_episode_context_nin      IN BOOLEAN := TRUE,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    IN OUT table_varchar
    ) IS
        l_rows_out               table_varchar;
        l_id_epis_positioning_n  NUMBER(1) := sys.diutil.bool_to_int(id_epis_positioning_nin);
        l_id_episode_n           NUMBER(1) := sys.diutil.bool_to_int(id_episode_nin);
        l_id_professional_n      NUMBER(1) := sys.diutil.bool_to_int(id_professional_nin);
        l_flg_status_n           NUMBER(1) := sys.diutil.bool_to_int(flg_status_nin);
        l_flg_massage_n          NUMBER(1) := sys.diutil.bool_to_int(flg_massage_nin);
        l_notes_n                NUMBER(1) := sys.diutil.bool_to_int(notes_nin);
        l_id_prof_cancel_n       NUMBER(1) := sys.diutil.bool_to_int(id_prof_cancel_nin);
        l_notes_cancel_n         NUMBER(1) := sys.diutil.bool_to_int(notes_cancel_nin);
        l_rot_interval_n         NUMBER(1) := sys.diutil.bool_to_int(rot_interval_nin);
        l_id_prof_inter_n        NUMBER(1) := sys.diutil.bool_to_int(id_prof_inter_nin);
        l_notes_inter_n          NUMBER(1) := sys.diutil.bool_to_int(notes_inter_nin);
        l_dt_creation_tstz_n     NUMBER(1) := sys.diutil.bool_to_int(dt_creation_tstz_nin);
        l_dt_cancel_tstz_n       NUMBER(1) := sys.diutil.bool_to_int(dt_cancel_tstz_nin);
        l_dt_inter_tstz_n        NUMBER(1) := sys.diutil.bool_to_int(dt_inter_tstz_nin);
        l_create_user_n          NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n          NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n   NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n          NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n          NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n   NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_id_rotation_interval_n NUMBER(1) := sys.diutil.bool_to_int(id_rotation_interval_nin);
        l_id_cancel_reason_n     NUMBER(1) := sys.diutil.bool_to_int(id_cancel_reason_nin);
        l_dt_epis_positioning_n  NUMBER(1) := sys.diutil.bool_to_int(dt_epis_positioning_nin);
        l_flg_origin_n           NUMBER(1) := sys.diutil.bool_to_int(flg_origin_nin);
        l_id_episode_context_n   NUMBER(1) := sys.diutil.bool_to_int(id_episode_context_nin);
    BEGIN
    
        UPDATE epis_positioning_hist
           SET id_epis_positioning  = decode(l_id_epis_positioning_n,
                                             0,
                                             id_epis_positioning_in,
                                             nvl(id_epis_positioning_in, id_epis_positioning)),
               id_episode           = decode(l_id_episode_n, 0, id_episode_in, nvl(id_episode_in, id_episode)),
               id_professional      = decode(l_id_professional_n,
                                             0,
                                             id_professional_in,
                                             nvl(id_professional_in, id_professional)),
               flg_status           = decode(l_flg_status_n, 0, flg_status_in, nvl(flg_status_in, flg_status)),
               flg_massage          = decode(l_flg_massage_n, 0, flg_massage_in, nvl(flg_massage_in, flg_massage)),
               notes                = decode(l_notes_n, 0, notes_in, nvl(notes_in, notes)),
               id_prof_cancel       = decode(l_id_prof_cancel_n,
                                             0,
                                             id_prof_cancel_in,
                                             nvl(id_prof_cancel_in, id_prof_cancel)),
               notes_cancel         = decode(l_notes_cancel_n, 0, notes_cancel_in, nvl(notes_cancel_in, notes_cancel)),
               rot_interval         = decode(l_rot_interval_n, 0, rot_interval_in, nvl(rot_interval_in, rot_interval)),
               id_prof_inter        = decode(l_id_prof_inter_n,
                                             0,
                                             id_prof_inter_in,
                                             nvl(id_prof_inter_in, id_prof_inter)),
               notes_inter          = decode(l_notes_inter_n, 0, notes_inter_in, nvl(notes_inter_in, notes_inter)),
               dt_creation_tstz     = decode(l_dt_creation_tstz_n,
                                             0,
                                             dt_creation_tstz_in,
                                             nvl(dt_creation_tstz_in, dt_creation_tstz)),
               dt_cancel_tstz       = decode(l_dt_cancel_tstz_n,
                                             0,
                                             dt_cancel_tstz_in,
                                             nvl(dt_cancel_tstz_in, dt_cancel_tstz)),
               dt_inter_tstz        = decode(l_dt_inter_tstz_n,
                                             0,
                                             dt_inter_tstz_in,
                                             nvl(dt_inter_tstz_in, dt_inter_tstz)),
               create_user          = decode(l_create_user_n, 0, create_user_in, nvl(create_user_in, create_user)),
               create_time          = decode(l_create_time_n, 0, create_time_in, nvl(create_time_in, create_time)),
               create_institution   = decode(l_create_institution_n,
                                             0,
                                             create_institution_in,
                                             nvl(create_institution_in, create_institution)),
               update_user          = decode(l_update_user_n, 0, update_user_in, nvl(update_user_in, update_user)),
               update_time          = decode(l_update_time_n, 0, update_time_in, nvl(update_time_in, update_time)),
               update_institution   = decode(l_update_institution_n,
                                             0,
                                             update_institution_in,
                                             nvl(update_institution_in, update_institution)),
               id_rotation_interval = decode(l_id_rotation_interval_n,
                                             0,
                                             id_rotation_interval_in,
                                             nvl(id_rotation_interval_in, id_rotation_interval)),
               id_cancel_reason     = decode(l_id_cancel_reason_n,
                                             0,
                                             id_cancel_reason_in,
                                             nvl(id_cancel_reason_in, id_cancel_reason)),
               dt_epis_positioning  = decode(l_dt_epis_positioning_n,
                                             0,
                                             dt_epis_positioning_in,
                                             nvl(dt_epis_positioning_in, dt_epis_positioning)),
               flg_origin           = decode(l_flg_origin_n, 0, flg_origin_in, nvl(flg_origin_in, flg_origin)),
               id_episode_context   = decode(l_id_episode_context_n,
                                             0,
                                             id_episode_context_in,
                                             nvl(id_episode_context_in, id_episode_context))
         WHERE id_epis_positioning_hist = id_epis_positioning_hist_in
        RETURNING ROWID BULK COLLECT INTO l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_epis_positioning_hist_in IN epis_positioning_hist.id_epis_positioning_hist%TYPE,
        id_epis_positioning_in      IN epis_positioning_hist.id_epis_positioning%TYPE DEFAULT NULL,
        id_epis_positioning_nin     IN BOOLEAN := TRUE,
        id_episode_in               IN epis_positioning_hist.id_episode%TYPE DEFAULT NULL,
        id_episode_nin              IN BOOLEAN := TRUE,
        id_professional_in          IN epis_positioning_hist.id_professional%TYPE DEFAULT NULL,
        id_professional_nin         IN BOOLEAN := TRUE,
        flg_status_in               IN epis_positioning_hist.flg_status%TYPE DEFAULT NULL,
        flg_status_nin              IN BOOLEAN := TRUE,
        flg_massage_in              IN epis_positioning_hist.flg_massage%TYPE DEFAULT NULL,
        flg_massage_nin             IN BOOLEAN := TRUE,
        notes_in                    IN epis_positioning_hist.notes%TYPE DEFAULT NULL,
        notes_nin                   IN BOOLEAN := TRUE,
        id_prof_cancel_in           IN epis_positioning_hist.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin          IN BOOLEAN := TRUE,
        notes_cancel_in             IN epis_positioning_hist.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin            IN BOOLEAN := TRUE,
        rot_interval_in             IN epis_positioning_hist.rot_interval%TYPE DEFAULT NULL,
        rot_interval_nin            IN BOOLEAN := TRUE,
        id_prof_inter_in            IN epis_positioning_hist.id_prof_inter%TYPE DEFAULT NULL,
        id_prof_inter_nin           IN BOOLEAN := TRUE,
        notes_inter_in              IN epis_positioning_hist.notes_inter%TYPE DEFAULT NULL,
        notes_inter_nin             IN BOOLEAN := TRUE,
        dt_creation_tstz_in         IN epis_positioning_hist.dt_creation_tstz%TYPE DEFAULT NULL,
        dt_creation_tstz_nin        IN BOOLEAN := TRUE,
        dt_cancel_tstz_in           IN epis_positioning_hist.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin          IN BOOLEAN := TRUE,
        dt_inter_tstz_in            IN epis_positioning_hist.dt_inter_tstz%TYPE DEFAULT NULL,
        dt_inter_tstz_nin           IN BOOLEAN := TRUE,
        create_user_in              IN epis_positioning_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN epis_positioning_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN epis_positioning_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN epis_positioning_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN epis_positioning_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN epis_positioning_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        id_rotation_interval_in     IN epis_positioning_hist.id_rotation_interval%TYPE DEFAULT NULL,
        id_rotation_interval_nin    IN BOOLEAN := TRUE,
        id_cancel_reason_in         IN epis_positioning_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin        IN BOOLEAN := TRUE,
        dt_epis_positioning_in      IN epis_positioning_hist.dt_epis_positioning%TYPE DEFAULT NULL,
        dt_epis_positioning_nin     IN BOOLEAN := TRUE,
        flg_origin_in               IN epis_positioning_hist.flg_origin%TYPE DEFAULT NULL,
        flg_origin_nin              IN BOOLEAN := TRUE,
        id_episode_context_in       IN epis_positioning_hist.id_episode_context%TYPE DEFAULT NULL,
        id_episode_context_nin      IN BOOLEAN := TRUE,
        handle_error_in             IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_epis_positioning_hist_in => id_epis_positioning_hist_in,
            id_epis_positioning_in      => id_epis_positioning_in,
            id_epis_positioning_nin     => id_epis_positioning_nin,
            id_episode_in               => id_episode_in,
            id_episode_nin              => id_episode_nin,
            id_professional_in          => id_professional_in,
            id_professional_nin         => id_professional_nin,
            flg_status_in               => flg_status_in,
            flg_status_nin              => flg_status_nin,
            flg_massage_in              => flg_massage_in,
            flg_massage_nin             => flg_massage_nin,
            notes_in                    => notes_in,
            notes_nin                   => notes_nin,
            id_prof_cancel_in           => id_prof_cancel_in,
            id_prof_cancel_nin          => id_prof_cancel_nin,
            notes_cancel_in             => notes_cancel_in,
            notes_cancel_nin            => notes_cancel_nin,
            rot_interval_in             => rot_interval_in,
            rot_interval_nin            => rot_interval_nin,
            id_prof_inter_in            => id_prof_inter_in,
            id_prof_inter_nin           => id_prof_inter_nin,
            notes_inter_in              => notes_inter_in,
            notes_inter_nin             => notes_inter_nin,
            dt_creation_tstz_in         => dt_creation_tstz_in,
            dt_creation_tstz_nin        => dt_creation_tstz_nin,
            dt_cancel_tstz_in           => dt_cancel_tstz_in,
            dt_cancel_tstz_nin          => dt_cancel_tstz_nin,
            dt_inter_tstz_in            => dt_inter_tstz_in,
            dt_inter_tstz_nin           => dt_inter_tstz_nin,
            create_user_in              => create_user_in,
            create_user_nin             => create_user_nin,
            create_time_in              => create_time_in,
            create_time_nin             => create_time_nin,
            create_institution_in       => create_institution_in,
            create_institution_nin      => create_institution_nin,
            update_user_in              => update_user_in,
            update_user_nin             => update_user_nin,
            update_time_in              => update_time_in,
            update_time_nin             => update_time_nin,
            update_institution_in       => update_institution_in,
            update_institution_nin      => update_institution_nin,
            id_rotation_interval_in     => id_rotation_interval_in,
            id_rotation_interval_nin    => id_rotation_interval_nin,
            id_cancel_reason_in         => id_cancel_reason_in,
            id_cancel_reason_nin        => id_cancel_reason_nin,
            dt_epis_positioning_in      => dt_epis_positioning_in,
            dt_epis_positioning_nin     => dt_epis_positioning_nin,
            flg_origin_in               => flg_origin_in,
            flg_origin_nin              => flg_origin_nin,
            id_episode_context_in       => id_episode_context_in,
            id_episode_context_nin      => id_episode_context_nin,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_epis_positioning_in   IN epis_positioning_hist.id_epis_positioning%TYPE DEFAULT NULL,
        id_epis_positioning_nin  IN BOOLEAN := TRUE,
        id_episode_in            IN epis_positioning_hist.id_episode%TYPE DEFAULT NULL,
        id_episode_nin           IN BOOLEAN := TRUE,
        id_professional_in       IN epis_positioning_hist.id_professional%TYPE DEFAULT NULL,
        id_professional_nin      IN BOOLEAN := TRUE,
        flg_status_in            IN epis_positioning_hist.flg_status%TYPE DEFAULT NULL,
        flg_status_nin           IN BOOLEAN := TRUE,
        flg_massage_in           IN epis_positioning_hist.flg_massage%TYPE DEFAULT NULL,
        flg_massage_nin          IN BOOLEAN := TRUE,
        notes_in                 IN epis_positioning_hist.notes%TYPE DEFAULT NULL,
        notes_nin                IN BOOLEAN := TRUE,
        id_prof_cancel_in        IN epis_positioning_hist.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin       IN BOOLEAN := TRUE,
        notes_cancel_in          IN epis_positioning_hist.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin         IN BOOLEAN := TRUE,
        rot_interval_in          IN epis_positioning_hist.rot_interval%TYPE DEFAULT NULL,
        rot_interval_nin         IN BOOLEAN := TRUE,
        id_prof_inter_in         IN epis_positioning_hist.id_prof_inter%TYPE DEFAULT NULL,
        id_prof_inter_nin        IN BOOLEAN := TRUE,
        notes_inter_in           IN epis_positioning_hist.notes_inter%TYPE DEFAULT NULL,
        notes_inter_nin          IN BOOLEAN := TRUE,
        dt_creation_tstz_in      IN epis_positioning_hist.dt_creation_tstz%TYPE DEFAULT NULL,
        dt_creation_tstz_nin     IN BOOLEAN := TRUE,
        dt_cancel_tstz_in        IN epis_positioning_hist.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin       IN BOOLEAN := TRUE,
        dt_inter_tstz_in         IN epis_positioning_hist.dt_inter_tstz%TYPE DEFAULT NULL,
        dt_inter_tstz_nin        IN BOOLEAN := TRUE,
        create_user_in           IN epis_positioning_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin          IN BOOLEAN := TRUE,
        create_time_in           IN epis_positioning_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin          IN BOOLEAN := TRUE,
        create_institution_in    IN epis_positioning_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin   IN BOOLEAN := TRUE,
        update_user_in           IN epis_positioning_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin          IN BOOLEAN := TRUE,
        update_time_in           IN epis_positioning_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin          IN BOOLEAN := TRUE,
        update_institution_in    IN epis_positioning_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin   IN BOOLEAN := TRUE,
        id_rotation_interval_in  IN epis_positioning_hist.id_rotation_interval%TYPE DEFAULT NULL,
        id_rotation_interval_nin IN BOOLEAN := TRUE,
        id_cancel_reason_in      IN epis_positioning_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin     IN BOOLEAN := TRUE,
        dt_epis_positioning_in   IN epis_positioning_hist.dt_epis_positioning%TYPE DEFAULT NULL,
        dt_epis_positioning_nin  IN BOOLEAN := TRUE,
        flg_origin_in            IN epis_positioning_hist.flg_origin%TYPE DEFAULT NULL,
        flg_origin_nin           IN BOOLEAN := TRUE,
        id_episode_context_in    IN epis_positioning_hist.id_episode_context%TYPE DEFAULT NULL,
        id_episode_context_nin   IN BOOLEAN := TRUE,
        where_in                 IN VARCHAR2,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 IN OUT table_varchar
    ) IS
        l_sql                    VARCHAR2(32767);
        l_rows_out               table_varchar;
        l_id_epis_positioning_n  NUMBER(1) := sys.diutil.bool_to_int(id_epis_positioning_nin);
        l_id_episode_n           NUMBER(1) := sys.diutil.bool_to_int(id_episode_nin);
        l_id_professional_n      NUMBER(1) := sys.diutil.bool_to_int(id_professional_nin);
        l_flg_status_n           NUMBER(1) := sys.diutil.bool_to_int(flg_status_nin);
        l_flg_massage_n          NUMBER(1) := sys.diutil.bool_to_int(flg_massage_nin);
        l_notes_n                NUMBER(1) := sys.diutil.bool_to_int(notes_nin);
        l_id_prof_cancel_n       NUMBER(1) := sys.diutil.bool_to_int(id_prof_cancel_nin);
        l_notes_cancel_n         NUMBER(1) := sys.diutil.bool_to_int(notes_cancel_nin);
        l_rot_interval_n         NUMBER(1) := sys.diutil.bool_to_int(rot_interval_nin);
        l_id_prof_inter_n        NUMBER(1) := sys.diutil.bool_to_int(id_prof_inter_nin);
        l_notes_inter_n          NUMBER(1) := sys.diutil.bool_to_int(notes_inter_nin);
        l_dt_creation_tstz_n     NUMBER(1) := sys.diutil.bool_to_int(dt_creation_tstz_nin);
        l_dt_cancel_tstz_n       NUMBER(1) := sys.diutil.bool_to_int(dt_cancel_tstz_nin);
        l_dt_inter_tstz_n        NUMBER(1) := sys.diutil.bool_to_int(dt_inter_tstz_nin);
        l_create_user_n          NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n          NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n   NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n          NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n          NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n   NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_id_rotation_interval_n NUMBER(1) := sys.diutil.bool_to_int(id_rotation_interval_nin);
        l_id_cancel_reason_n     NUMBER(1) := sys.diutil.bool_to_int(id_cancel_reason_nin);
        l_dt_epis_positioning_n  NUMBER(1) := sys.diutil.bool_to_int(dt_epis_positioning_nin);
        l_flg_origin_n           NUMBER(1) := sys.diutil.bool_to_int(flg_origin_nin);
        l_id_episode_context_n   NUMBER(1) := sys.diutil.bool_to_int(id_episode_context_nin);
    BEGIN
        l_id_epis_positioning_n  := sys.diutil.bool_to_int(id_epis_positioning_nin);
        l_id_episode_n           := sys.diutil.bool_to_int(id_episode_nin);
        l_id_professional_n      := sys.diutil.bool_to_int(id_professional_nin);
        l_flg_status_n           := sys.diutil.bool_to_int(flg_status_nin);
        l_flg_massage_n          := sys.diutil.bool_to_int(flg_massage_nin);
        l_notes_n                := sys.diutil.bool_to_int(notes_nin);
        l_id_prof_cancel_n       := sys.diutil.bool_to_int(id_prof_cancel_nin);
        l_notes_cancel_n         := sys.diutil.bool_to_int(notes_cancel_nin);
        l_rot_interval_n         := sys.diutil.bool_to_int(rot_interval_nin);
        l_id_prof_inter_n        := sys.diutil.bool_to_int(id_prof_inter_nin);
        l_notes_inter_n          := sys.diutil.bool_to_int(notes_inter_nin);
        l_dt_creation_tstz_n     := sys.diutil.bool_to_int(dt_creation_tstz_nin);
        l_dt_cancel_tstz_n       := sys.diutil.bool_to_int(dt_cancel_tstz_nin);
        l_dt_inter_tstz_n        := sys.diutil.bool_to_int(dt_inter_tstz_nin);
        l_create_user_n          := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n          := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n   := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n          := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n          := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n   := sys.diutil.bool_to_int(update_institution_nin);
        l_id_rotation_interval_n := sys.diutil.bool_to_int(id_rotation_interval_nin);
        l_id_cancel_reason_n     := sys.diutil.bool_to_int(id_cancel_reason_nin);
        l_dt_epis_positioning_n  := sys.diutil.bool_to_int(dt_epis_positioning_nin);
        l_flg_origin_n           := sys.diutil.bool_to_int(flg_origin_nin);
        l_id_episode_context_n   := sys.diutil.bool_to_int(id_episode_context_nin);
        l_sql                    := 'UPDATE epis_positioning_hist SET' || ' ID_EPIS_POSITIONING = decode (' ||
                                    l_id_epis_positioning_n ||
                                    ',0,:ID_EPIS_POSITIONING_in, NVL (:ID_EPIS_POSITIONING_in, ID_EPIS_POSITIONING)) ' || ',' ||
                                    ' ID_EPISODE = decode (' || l_id_episode_n ||
                                    ',0,:ID_EPISODE_in, NVL (:ID_EPISODE_in, ID_EPISODE)) ' || ',' ||
                                    ' ID_PROFESSIONAL = decode (' || l_id_professional_n ||
                                    ',0,:ID_PROFESSIONAL_in, NVL (:ID_PROFESSIONAL_in, ID_PROFESSIONAL)) ' || ',' ||
                                    ' FLG_STATUS = decode (' || l_flg_status_n ||
                                    ',0,:FLG_STATUS_in, NVL (:FLG_STATUS_in, FLG_STATUS)) ' || ',' ||
                                    ' FLG_MASSAGE = decode (' || l_flg_massage_n ||
                                    ',0,:FLG_MASSAGE_in, NVL (:FLG_MASSAGE_in, FLG_MASSAGE)) ' || ',' ||
                                    ' NOTES = decode (' || l_notes_n || ',0,:NOTES_in, NVL (:NOTES_in, NOTES)) ' || ',' ||
                                    ' ID_PROF_CANCEL = decode (' || l_id_prof_cancel_n ||
                                    ',0,:ID_PROF_CANCEL_in, NVL (:ID_PROF_CANCEL_in, ID_PROF_CANCEL)) ' || ',' ||
                                    ' NOTES_CANCEL = decode (' || l_notes_cancel_n ||
                                    ',0,:NOTES_CANCEL_in, NVL (:NOTES_CANCEL_in, NOTES_CANCEL)) ' || ',' ||
                                    ' ROT_INTERVAL = decode (' || l_rot_interval_n ||
                                    ',0,:ROT_INTERVAL_in, NVL (:ROT_INTERVAL_in, ROT_INTERVAL)) ' || ',' ||
                                    ' ID_PROF_INTER = decode (' || l_id_prof_inter_n ||
                                    ',0,:ID_PROF_INTER_in, NVL (:ID_PROF_INTER_in, ID_PROF_INTER)) ' || ',' ||
                                    ' NOTES_INTER = decode (' || l_notes_inter_n ||
                                    ',0,:NOTES_INTER_in, NVL (:NOTES_INTER_in, NOTES_INTER)) ' || ',' ||
                                    ' DT_CREATION_TSTZ = decode (' || l_dt_creation_tstz_n ||
                                    ',0,:DT_CREATION_TSTZ_in, NVL (:DT_CREATION_TSTZ_in, DT_CREATION_TSTZ)) ' || ',' ||
                                    ' DT_CANCEL_TSTZ = decode (' || l_dt_cancel_tstz_n ||
                                    ',0,:DT_CANCEL_TSTZ_in, NVL (:DT_CANCEL_TSTZ_in, DT_CANCEL_TSTZ)) ' || ',' ||
                                    ' DT_INTER_TSTZ = decode (' || l_dt_inter_tstz_n ||
                                    ',0,:DT_INTER_TSTZ_in, NVL (:DT_INTER_TSTZ_in, DT_INTER_TSTZ)) ' || ',' ||
                                    ' CREATE_USER = decode (' || l_create_user_n ||
                                    ',0,:CREATE_USER_in, NVL (:CREATE_USER_in, CREATE_USER)) ' || ',' ||
                                    ' CREATE_TIME = decode (' || l_create_time_n ||
                                    ',0,:CREATE_TIME_in, NVL (:CREATE_TIME_in, CREATE_TIME)) ' || ',' ||
                                    ' CREATE_INSTITUTION = decode (' || l_create_institution_n ||
                                    ',0,:CREATE_INSTITUTION_in, NVL (:CREATE_INSTITUTION_in, CREATE_INSTITUTION)) ' || ',' ||
                                    ' UPDATE_USER = decode (' || l_update_user_n ||
                                    ',0,:UPDATE_USER_in, NVL (:UPDATE_USER_in, UPDATE_USER)) ' || ',' ||
                                    ' UPDATE_TIME = decode (' || l_update_time_n ||
                                    ',0,:UPDATE_TIME_in, NVL (:UPDATE_TIME_in, UPDATE_TIME)) ' || ',' ||
                                    ' UPDATE_INSTITUTION = decode (' || l_update_institution_n ||
                                    ',0,:UPDATE_INSTITUTION_in, NVL (:UPDATE_INSTITUTION_in, UPDATE_INSTITUTION)) ' || ',' ||
                                    ' ID_ROTATION_INTERVAL = decode (' || l_id_rotation_interval_n ||
                                    ',0,:ID_ROTATION_INTERVAL_in, NVL (:ID_ROTATION_INTERVAL_in, ID_ROTATION_INTERVAL)) ' || ',' ||
                                    ' ID_CANCEL_REASON = decode (' || l_id_cancel_reason_n ||
                                    ',0,:ID_CANCEL_REASON_in, NVL (:ID_CANCEL_REASON_in, ID_CANCEL_REASON)) ' || ',' ||
                                    ' DT_EPIS_POSITIONING = decode (' || l_dt_epis_positioning_n ||
                                    ',0,:DT_EPIS_POSITIONING_in, NVL (:DT_EPIS_POSITIONING_in, DT_EPIS_POSITIONING)) ' || ',' ||
                                    ' FLG_ORIGIN = decode (' || l_flg_origin_n ||
                                    ',0,:FLG_ORIGIN_in, NVL (:FLG_ORIGIN_in, FLG_ORIGIN)) ' || ',' ||
                                    ' ID_EPISODE_CONTEXT = decode (' || l_id_episode_context_n ||
                                    ',0,:ID_EPISODE_CONTEXT_in, NVL (:ID_EPISODE_CONTEXT_in, ID_EPISODE_CONTEXT)) ' ||
                                    ' where ' || nvl(where_in, '(1=1)') ||
                                    ' RETURNING ROWID BULK COLLECT INTO :l_rows_out';
        EXECUTE IMMEDIATE 'BEGIN ' || l_sql || '; END;'
            USING IN id_epis_positioning_in, id_episode_in, id_professional_in, flg_status_in, flg_massage_in, notes_in, id_prof_cancel_in, notes_cancel_in, rot_interval_in, id_prof_inter_in, notes_inter_in, dt_creation_tstz_in, dt_cancel_tstz_in, dt_inter_tstz_in, create_user_in, create_time_in, create_institution_in, update_user_in, update_time_in, update_institution_in, id_rotation_interval_in, id_cancel_reason_in, dt_epis_positioning_in, flg_origin_in, id_episode_context_in, OUT l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_epis_positioning_in   IN epis_positioning_hist.id_epis_positioning%TYPE DEFAULT NULL,
        id_epis_positioning_nin  IN BOOLEAN := TRUE,
        id_episode_in            IN epis_positioning_hist.id_episode%TYPE DEFAULT NULL,
        id_episode_nin           IN BOOLEAN := TRUE,
        id_professional_in       IN epis_positioning_hist.id_professional%TYPE DEFAULT NULL,
        id_professional_nin      IN BOOLEAN := TRUE,
        flg_status_in            IN epis_positioning_hist.flg_status%TYPE DEFAULT NULL,
        flg_status_nin           IN BOOLEAN := TRUE,
        flg_massage_in           IN epis_positioning_hist.flg_massage%TYPE DEFAULT NULL,
        flg_massage_nin          IN BOOLEAN := TRUE,
        notes_in                 IN epis_positioning_hist.notes%TYPE DEFAULT NULL,
        notes_nin                IN BOOLEAN := TRUE,
        id_prof_cancel_in        IN epis_positioning_hist.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin       IN BOOLEAN := TRUE,
        notes_cancel_in          IN epis_positioning_hist.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin         IN BOOLEAN := TRUE,
        rot_interval_in          IN epis_positioning_hist.rot_interval%TYPE DEFAULT NULL,
        rot_interval_nin         IN BOOLEAN := TRUE,
        id_prof_inter_in         IN epis_positioning_hist.id_prof_inter%TYPE DEFAULT NULL,
        id_prof_inter_nin        IN BOOLEAN := TRUE,
        notes_inter_in           IN epis_positioning_hist.notes_inter%TYPE DEFAULT NULL,
        notes_inter_nin          IN BOOLEAN := TRUE,
        dt_creation_tstz_in      IN epis_positioning_hist.dt_creation_tstz%TYPE DEFAULT NULL,
        dt_creation_tstz_nin     IN BOOLEAN := TRUE,
        dt_cancel_tstz_in        IN epis_positioning_hist.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin       IN BOOLEAN := TRUE,
        dt_inter_tstz_in         IN epis_positioning_hist.dt_inter_tstz%TYPE DEFAULT NULL,
        dt_inter_tstz_nin        IN BOOLEAN := TRUE,
        create_user_in           IN epis_positioning_hist.create_user%TYPE DEFAULT NULL,
        create_user_nin          IN BOOLEAN := TRUE,
        create_time_in           IN epis_positioning_hist.create_time%TYPE DEFAULT NULL,
        create_time_nin          IN BOOLEAN := TRUE,
        create_institution_in    IN epis_positioning_hist.create_institution%TYPE DEFAULT NULL,
        create_institution_nin   IN BOOLEAN := TRUE,
        update_user_in           IN epis_positioning_hist.update_user%TYPE DEFAULT NULL,
        update_user_nin          IN BOOLEAN := TRUE,
        update_time_in           IN epis_positioning_hist.update_time%TYPE DEFAULT NULL,
        update_time_nin          IN BOOLEAN := TRUE,
        update_institution_in    IN epis_positioning_hist.update_institution%TYPE DEFAULT NULL,
        update_institution_nin   IN BOOLEAN := TRUE,
        id_rotation_interval_in  IN epis_positioning_hist.id_rotation_interval%TYPE DEFAULT NULL,
        id_rotation_interval_nin IN BOOLEAN := TRUE,
        id_cancel_reason_in      IN epis_positioning_hist.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin     IN BOOLEAN := TRUE,
        dt_epis_positioning_in   IN epis_positioning_hist.dt_epis_positioning%TYPE DEFAULT NULL,
        dt_epis_positioning_nin  IN BOOLEAN := TRUE,
        flg_origin_in            IN epis_positioning_hist.flg_origin%TYPE DEFAULT NULL,
        flg_origin_nin           IN BOOLEAN := TRUE,
        id_episode_context_in    IN epis_positioning_hist.id_episode_context%TYPE DEFAULT NULL,
        id_episode_context_nin   IN BOOLEAN := TRUE,
        where_in                 IN VARCHAR2,
        handle_error_in          IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_epis_positioning_in   => id_epis_positioning_in,
            id_epis_positioning_nin  => id_epis_positioning_nin,
            id_episode_in            => id_episode_in,
            id_episode_nin           => id_episode_nin,
            id_professional_in       => id_professional_in,
            id_professional_nin      => id_professional_nin,
            flg_status_in            => flg_status_in,
            flg_status_nin           => flg_status_nin,
            flg_massage_in           => flg_massage_in,
            flg_massage_nin          => flg_massage_nin,
            notes_in                 => notes_in,
            notes_nin                => notes_nin,
            id_prof_cancel_in        => id_prof_cancel_in,
            id_prof_cancel_nin       => id_prof_cancel_nin,
            notes_cancel_in          => notes_cancel_in,
            notes_cancel_nin         => notes_cancel_nin,
            rot_interval_in          => rot_interval_in,
            rot_interval_nin         => rot_interval_nin,
            id_prof_inter_in         => id_prof_inter_in,
            id_prof_inter_nin        => id_prof_inter_nin,
            notes_inter_in           => notes_inter_in,
            notes_inter_nin          => notes_inter_nin,
            dt_creation_tstz_in      => dt_creation_tstz_in,
            dt_creation_tstz_nin     => dt_creation_tstz_nin,
            dt_cancel_tstz_in        => dt_cancel_tstz_in,
            dt_cancel_tstz_nin       => dt_cancel_tstz_nin,
            dt_inter_tstz_in         => dt_inter_tstz_in,
            dt_inter_tstz_nin        => dt_inter_tstz_nin,
            create_user_in           => create_user_in,
            create_user_nin          => create_user_nin,
            create_time_in           => create_time_in,
            create_time_nin          => create_time_nin,
            create_institution_in    => create_institution_in,
            create_institution_nin   => create_institution_nin,
            update_user_in           => update_user_in,
            update_user_nin          => update_user_nin,
            update_time_in           => update_time_in,
            update_time_nin          => update_time_nin,
            update_institution_in    => update_institution_in,
            update_institution_nin   => update_institution_nin,
            id_rotation_interval_in  => id_rotation_interval_in,
            id_rotation_interval_nin => id_rotation_interval_nin,
            id_cancel_reason_in      => id_cancel_reason_in,
            id_cancel_reason_nin     => id_cancel_reason_nin,
            dt_epis_positioning_in   => dt_epis_positioning_in,
            dt_epis_positioning_nin  => dt_epis_positioning_nin,
            flg_origin_in            => flg_origin_in,
            flg_origin_nin           => flg_origin_nin,
            id_episode_context_in    => id_episode_context_in,
            id_episode_context_nin   => id_episode_context_nin,
            where_in                 => where_in,
            handle_error_in          => handle_error_in,
            rows_out                 => rows_out);
    END upd;

    --Update/insert columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_epis_positioning_hist_in IN epis_positioning_hist.id_epis_positioning_hist%TYPE,
        id_epis_positioning_in      IN epis_positioning_hist.id_epis_positioning%TYPE DEFAULT NULL,
        id_episode_in               IN epis_positioning_hist.id_episode%TYPE DEFAULT NULL,
        id_professional_in          IN epis_positioning_hist.id_professional%TYPE DEFAULT NULL,
        flg_status_in               IN epis_positioning_hist.flg_status%TYPE DEFAULT NULL,
        flg_massage_in              IN epis_positioning_hist.flg_massage%TYPE DEFAULT NULL,
        notes_in                    IN epis_positioning_hist.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in           IN epis_positioning_hist.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in             IN epis_positioning_hist.notes_cancel%TYPE DEFAULT NULL,
        rot_interval_in             IN epis_positioning_hist.rot_interval%TYPE DEFAULT NULL,
        id_prof_inter_in            IN epis_positioning_hist.id_prof_inter%TYPE DEFAULT NULL,
        notes_inter_in              IN epis_positioning_hist.notes_inter%TYPE DEFAULT NULL,
        dt_creation_tstz_in         IN epis_positioning_hist.dt_creation_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in           IN epis_positioning_hist.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_inter_tstz_in            IN epis_positioning_hist.dt_inter_tstz%TYPE DEFAULT NULL,
        create_user_in              IN epis_positioning_hist.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_positioning_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_positioning_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_positioning_hist.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_positioning_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_positioning_hist.update_institution%TYPE DEFAULT NULL,
        id_rotation_interval_in     IN epis_positioning_hist.id_rotation_interval%TYPE DEFAULT NULL,
        id_cancel_reason_in         IN epis_positioning_hist.id_cancel_reason%TYPE DEFAULT NULL,
        dt_epis_positioning_in      IN epis_positioning_hist.dt_epis_positioning%TYPE DEFAULT NULL,
        flg_origin_in               IN epis_positioning_hist.flg_origin%TYPE DEFAULT NULL,
        id_episode_context_in       IN epis_positioning_hist.id_episode_context%TYPE DEFAULT NULL,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_epis_positioning_hist_in => id_epis_positioning_hist_in,
            id_epis_positioning_in      => id_epis_positioning_in,
            id_episode_in               => id_episode_in,
            id_professional_in          => id_professional_in,
            flg_status_in               => flg_status_in,
            flg_massage_in              => flg_massage_in,
            notes_in                    => notes_in,
            id_prof_cancel_in           => id_prof_cancel_in,
            notes_cancel_in             => notes_cancel_in,
            rot_interval_in             => rot_interval_in,
            id_prof_inter_in            => id_prof_inter_in,
            notes_inter_in              => notes_inter_in,
            dt_creation_tstz_in         => dt_creation_tstz_in,
            dt_cancel_tstz_in           => dt_cancel_tstz_in,
            dt_inter_tstz_in            => dt_inter_tstz_in,
            create_user_in              => create_user_in,
            create_time_in              => create_time_in,
            create_institution_in       => create_institution_in,
            update_user_in              => update_user_in,
            update_time_in              => update_time_in,
            update_institution_in       => update_institution_in,
            id_rotation_interval_in     => id_rotation_interval_in,
            id_cancel_reason_in         => id_cancel_reason_in,
            dt_epis_positioning_in      => dt_epis_positioning_in,
            flg_origin_in               => flg_origin_in,
            id_episode_context_in       => id_episode_context_in,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
        IF SQL%ROWCOUNT = 0
        THEN
            ins(id_epis_positioning_hist_in => id_epis_positioning_hist_in,
                id_epis_positioning_in      => id_epis_positioning_in,
                id_episode_in               => id_episode_in,
                id_professional_in          => id_professional_in,
                flg_status_in               => flg_status_in,
                flg_massage_in              => flg_massage_in,
                notes_in                    => notes_in,
                id_prof_cancel_in           => id_prof_cancel_in,
                notes_cancel_in             => notes_cancel_in,
                rot_interval_in             => rot_interval_in,
                id_prof_inter_in            => id_prof_inter_in,
                notes_inter_in              => notes_inter_in,
                dt_creation_tstz_in         => dt_creation_tstz_in,
                dt_cancel_tstz_in           => dt_cancel_tstz_in,
                dt_inter_tstz_in            => dt_inter_tstz_in,
                create_user_in              => create_user_in,
                create_time_in              => create_time_in,
                create_institution_in       => create_institution_in,
                update_user_in              => update_user_in,
                update_time_in              => update_time_in,
                update_institution_in       => update_institution_in,
                id_rotation_interval_in     => id_rotation_interval_in,
                id_cancel_reason_in         => id_cancel_reason_in,
                dt_epis_positioning_in      => dt_epis_positioning_in,
                flg_origin_in               => flg_origin_in,
                id_episode_context_in       => id_episode_context_in,
                handle_error_in             => handle_error_in,
                rows_out                    => rows_out);
        END IF;
    END upd_ins;

    --Update/insert columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_epis_positioning_hist_in IN epis_positioning_hist.id_epis_positioning_hist%TYPE,
        id_epis_positioning_in      IN epis_positioning_hist.id_epis_positioning%TYPE DEFAULT NULL,
        id_episode_in               IN epis_positioning_hist.id_episode%TYPE DEFAULT NULL,
        id_professional_in          IN epis_positioning_hist.id_professional%TYPE DEFAULT NULL,
        flg_status_in               IN epis_positioning_hist.flg_status%TYPE DEFAULT NULL,
        flg_massage_in              IN epis_positioning_hist.flg_massage%TYPE DEFAULT NULL,
        notes_in                    IN epis_positioning_hist.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in           IN epis_positioning_hist.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in             IN epis_positioning_hist.notes_cancel%TYPE DEFAULT NULL,
        rot_interval_in             IN epis_positioning_hist.rot_interval%TYPE DEFAULT NULL,
        id_prof_inter_in            IN epis_positioning_hist.id_prof_inter%TYPE DEFAULT NULL,
        notes_inter_in              IN epis_positioning_hist.notes_inter%TYPE DEFAULT NULL,
        dt_creation_tstz_in         IN epis_positioning_hist.dt_creation_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in           IN epis_positioning_hist.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_inter_tstz_in            IN epis_positioning_hist.dt_inter_tstz%TYPE DEFAULT NULL,
        create_user_in              IN epis_positioning_hist.create_user%TYPE DEFAULT NULL,
        create_time_in              IN epis_positioning_hist.create_time%TYPE DEFAULT NULL,
        create_institution_in       IN epis_positioning_hist.create_institution%TYPE DEFAULT NULL,
        update_user_in              IN epis_positioning_hist.update_user%TYPE DEFAULT NULL,
        update_time_in              IN epis_positioning_hist.update_time%TYPE DEFAULT NULL,
        update_institution_in       IN epis_positioning_hist.update_institution%TYPE DEFAULT NULL,
        id_rotation_interval_in     IN epis_positioning_hist.id_rotation_interval%TYPE DEFAULT NULL,
        id_cancel_reason_in         IN epis_positioning_hist.id_cancel_reason%TYPE DEFAULT NULL,
        dt_epis_positioning_in      IN epis_positioning_hist.dt_epis_positioning%TYPE DEFAULT NULL,
        flg_origin_in               IN epis_positioning_hist.flg_origin%TYPE DEFAULT NULL,
        id_episode_context_in       IN epis_positioning_hist.id_episode_context%TYPE DEFAULT NULL,
        handle_error_in             IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd_ins(id_epis_positioning_hist_in,
                id_epis_positioning_in,
                id_episode_in,
                id_professional_in,
                flg_status_in,
                flg_massage_in,
                notes_in,
                id_prof_cancel_in,
                notes_cancel_in,
                rot_interval_in,
                id_prof_inter_in,
                notes_inter_in,
                dt_creation_tstz_in,
                dt_cancel_tstz_in,
                dt_inter_tstz_in,
                create_user_in,
                create_time_in,
                create_institution_in,
                update_user_in,
                update_time_in,
                update_institution_in,
                id_rotation_interval_in,
                id_cancel_reason_in,
                dt_epis_positioning_in,
                flg_origin_in,
                id_episode_context_in,
                handle_error_in,
                rows_out);
    END upd_ins;

    --Update by record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN epis_positioning_hist%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_epis_positioning_hist_in => rec_in.id_epis_positioning_hist,
            id_epis_positioning_in      => rec_in.id_epis_positioning,
            id_episode_in               => rec_in.id_episode,
            id_professional_in          => rec_in.id_professional,
            flg_status_in               => rec_in.flg_status,
            flg_massage_in              => rec_in.flg_massage,
            notes_in                    => rec_in.notes,
            id_prof_cancel_in           => rec_in.id_prof_cancel,
            notes_cancel_in             => rec_in.notes_cancel,
            rot_interval_in             => rec_in.rot_interval,
            id_prof_inter_in            => rec_in.id_prof_inter,
            notes_inter_in              => rec_in.notes_inter,
            dt_creation_tstz_in         => rec_in.dt_creation_tstz,
            dt_cancel_tstz_in           => rec_in.dt_cancel_tstz,
            dt_inter_tstz_in            => rec_in.dt_inter_tstz,
            create_user_in              => rec_in.create_user,
            create_time_in              => rec_in.create_time,
            create_institution_in       => rec_in.create_institution,
            update_user_in              => rec_in.update_user,
            update_time_in              => rec_in.update_time,
            update_institution_in       => rec_in.update_institution,
            id_rotation_interval_in     => rec_in.id_rotation_interval,
            id_cancel_reason_in         => rec_in.id_cancel_reason,
            dt_epis_positioning_in      => rec_in.dt_epis_positioning,
            flg_origin_in               => rec_in.flg_origin,
            id_episode_context_in       => rec_in.id_episode_context,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END upd;

    --Update by record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN epis_positioning_hist%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_epis_positioning_hist_in => rec_in.id_epis_positioning_hist,
            id_epis_positioning_in      => rec_in.id_epis_positioning,
            id_episode_in               => rec_in.id_episode,
            id_professional_in          => rec_in.id_professional,
            flg_status_in               => rec_in.flg_status,
            flg_massage_in              => rec_in.flg_massage,
            notes_in                    => rec_in.notes,
            id_prof_cancel_in           => rec_in.id_prof_cancel,
            notes_cancel_in             => rec_in.notes_cancel,
            rot_interval_in             => rec_in.rot_interval,
            id_prof_inter_in            => rec_in.id_prof_inter,
            notes_inter_in              => rec_in.notes_inter,
            dt_creation_tstz_in         => rec_in.dt_creation_tstz,
            dt_cancel_tstz_in           => rec_in.dt_cancel_tstz,
            dt_inter_tstz_in            => rec_in.dt_inter_tstz,
            create_user_in              => rec_in.create_user,
            create_time_in              => rec_in.create_time,
            create_institution_in       => rec_in.create_institution,
            update_user_in              => rec_in.update_user,
            update_time_in              => rec_in.update_time,
            update_institution_in       => rec_in.update_institution,
            id_rotation_interval_in     => rec_in.id_rotation_interval,
            id_cancel_reason_in         => rec_in.id_cancel_reason,
            dt_epis_positioning_in      => rec_in.dt_epis_positioning,
            flg_origin_in               => rec_in.flg_origin,
            id_episode_context_in       => rec_in.id_episode_context,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END upd;

    --Update with collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN epis_positioning_hist_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    ) IS
        l_id_epis_positioning_hist id_epis_positioning_hist_cc;
        l_id_epis_positioning      id_epis_positioning_cc;
        l_id_episode               id_episode_cc;
        l_id_professional          id_professional_cc;
        l_flg_status               flg_status_cc;
        l_flg_massage              flg_massage_cc;
        l_notes                    notes_cc;
        l_id_prof_cancel           id_prof_cancel_cc;
        l_notes_cancel             notes_cancel_cc;
        l_rot_interval             rot_interval_cc;
        l_id_prof_inter            id_prof_inter_cc;
        l_notes_inter              notes_inter_cc;
        l_dt_creation_tstz         dt_creation_tstz_cc;
        l_dt_cancel_tstz           dt_cancel_tstz_cc;
        l_dt_inter_tstz            dt_inter_tstz_cc;
        l_create_user              create_user_cc;
        l_create_time              create_time_cc;
        l_create_institution       create_institution_cc;
        l_update_user              update_user_cc;
        l_update_time              update_time_cc;
        l_update_institution       update_institution_cc;
        l_id_rotation_interval     id_rotation_interval_cc;
        l_id_cancel_reason         id_cancel_reason_cc;
        l_dt_epis_positioning      dt_epis_positioning_cc;
        l_flg_origin               flg_origin_cc;
        l_id_episode_context       id_episode_context_cc;
    BEGIN
        FOR i IN col_in.first .. col_in.last
        LOOP
            l_id_epis_positioning_hist(i) := col_in(i).id_epis_positioning_hist;
            l_id_epis_positioning(i) := col_in(i).id_epis_positioning;
            l_id_episode(i) := col_in(i).id_episode;
            l_id_professional(i) := col_in(i).id_professional;
            l_flg_status(i) := col_in(i).flg_status;
            l_flg_massage(i) := col_in(i).flg_massage;
            l_notes(i) := col_in(i).notes;
            l_id_prof_cancel(i) := col_in(i).id_prof_cancel;
            l_notes_cancel(i) := col_in(i).notes_cancel;
            l_rot_interval(i) := col_in(i).rot_interval;
            l_id_prof_inter(i) := col_in(i).id_prof_inter;
            l_notes_inter(i) := col_in(i).notes_inter;
            l_dt_creation_tstz(i) := col_in(i).dt_creation_tstz;
            l_dt_cancel_tstz(i) := col_in(i).dt_cancel_tstz;
            l_dt_inter_tstz(i) := col_in(i).dt_inter_tstz;
            l_create_user(i) := col_in(i).create_user;
            l_create_time(i) := col_in(i).create_time;
            l_create_institution(i) := col_in(i).create_institution;
            l_update_user(i) := col_in(i).update_user;
            l_update_time(i) := col_in(i).update_time;
            l_update_institution(i) := col_in(i).update_institution;
            l_id_rotation_interval(i) := col_in(i).id_rotation_interval;
            l_id_cancel_reason(i) := col_in(i).id_cancel_reason;
            l_dt_epis_positioning(i) := col_in(i).dt_epis_positioning;
            l_flg_origin(i) := col_in(i).flg_origin;
            l_id_episode_context(i) := col_in(i).id_episode_context;
        END LOOP;
        IF nvl(ignore_if_null_in, FALSE)
        THEN
            -- Set any columns to their current values
            -- if incoming value is NULL.
            -- Put WHEN clause on column-level triggers!
            FORALL i IN col_in.first .. col_in.last
                UPDATE epis_positioning_hist
                   SET id_epis_positioning  = nvl(l_id_epis_positioning(i), id_epis_positioning),
                       id_episode           = nvl(l_id_episode(i), id_episode),
                       id_professional      = nvl(l_id_professional(i), id_professional),
                       flg_status           = nvl(l_flg_status(i), flg_status),
                       flg_massage          = nvl(l_flg_massage(i), flg_massage),
                       notes                = nvl(l_notes(i), notes),
                       id_prof_cancel       = nvl(l_id_prof_cancel(i), id_prof_cancel),
                       notes_cancel         = nvl(l_notes_cancel(i), notes_cancel),
                       rot_interval         = nvl(l_rot_interval(i), rot_interval),
                       id_prof_inter        = nvl(l_id_prof_inter(i), id_prof_inter),
                       notes_inter          = nvl(l_notes_inter(i), notes_inter),
                       dt_creation_tstz     = nvl(l_dt_creation_tstz(i), dt_creation_tstz),
                       dt_cancel_tstz       = nvl(l_dt_cancel_tstz(i), dt_cancel_tstz),
                       dt_inter_tstz        = nvl(l_dt_inter_tstz(i), dt_inter_tstz),
                       create_user          = nvl(l_create_user(i), create_user),
                       create_time          = nvl(l_create_time(i), create_time),
                       create_institution   = nvl(l_create_institution(i), create_institution),
                       update_user          = nvl(l_update_user(i), update_user),
                       update_time          = nvl(l_update_time(i), update_time),
                       update_institution   = nvl(l_update_institution(i), update_institution),
                       id_rotation_interval = nvl(l_id_rotation_interval(i), id_rotation_interval),
                       id_cancel_reason     = nvl(l_id_cancel_reason(i), id_cancel_reason),
                       dt_epis_positioning  = nvl(l_dt_epis_positioning(i), dt_epis_positioning),
                       flg_origin           = nvl(l_flg_origin(i), flg_origin),
                       id_episode_context   = nvl(l_id_episode_context(i), id_episode_context)
                 WHERE id_epis_positioning_hist = l_id_epis_positioning_hist(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        ELSE
            FORALL i IN col_in.first .. col_in.last
                UPDATE epis_positioning_hist
                   SET id_epis_positioning  = l_id_epis_positioning(i),
                       id_episode           = l_id_episode(i),
                       id_professional      = l_id_professional(i),
                       flg_status           = l_flg_status(i),
                       flg_massage          = l_flg_massage(i),
                       notes                = l_notes(i),
                       id_prof_cancel       = l_id_prof_cancel(i),
                       notes_cancel         = l_notes_cancel(i),
                       rot_interval         = l_rot_interval(i),
                       id_prof_inter        = l_id_prof_inter(i),
                       notes_inter          = l_notes_inter(i),
                       dt_creation_tstz     = l_dt_creation_tstz(i),
                       dt_cancel_tstz       = l_dt_cancel_tstz(i),
                       dt_inter_tstz        = l_dt_inter_tstz(i),
                       create_user          = l_create_user(i),
                       create_time          = l_create_time(i),
                       create_institution   = l_create_institution(i),
                       update_user          = l_update_user(i),
                       update_time          = l_update_time(i),
                       update_institution   = l_update_institution(i),
                       id_rotation_interval = l_id_rotation_interval(i),
                       id_cancel_reason     = l_id_cancel_reason(i),
                       dt_epis_positioning  = l_dt_epis_positioning(i),
                       flg_origin           = l_flg_origin(i),
                       id_episode_context   = l_id_episode_context(i)
                 WHERE id_epis_positioning_hist = l_id_epis_positioning_hist(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update with collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN epis_positioning_hist_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(col_in, ignore_if_null_in, handle_error_in, rows_out);
    END upd;

    --Dynamic update string
    FUNCTION dynupdstr
    (
        colname_in IN all_tab_columns.column_name%TYPE,
        where_in   IN VARCHAR2 := NULL
    ) RETURN VARCHAR2 IS
    BEGIN
        RETURN 'BEGIN UPDATE epis_positioning_hist
SET ' || colname_in || ' = :value
 WHERE ' || nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;';
    END dynupdstr;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (with rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN UPDATE epis_positioning_hist
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    END increment_onecol;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (without rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        EXECUTE IMMEDIATE 'UPDATE epis_positioning_hist
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1');
    END increment_onecol;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_epis_positioning_hist_in IN epis_positioning_hist.id_epis_positioning_hist%TYPE,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM epis_positioning_hist
         WHERE id_epis_positioning_hist = id_epis_positioning_hist_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_epis_positioning_hist_in IN epis_positioning_hist.id_epis_positioning_hist%TYPE,
        handle_error_in             IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del(id_epis_positioning_hist_in => id_epis_positioning_hist_in,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END del;

    -- Delete all rows for this EPGH_EPG_FK foreign key value
    PROCEDURE del_epgh_epg_fk
    (
        id_epis_positioning_in IN epis_positioning_hist.id_epis_positioning%TYPE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM epis_positioning_hist
         WHERE id_epis_positioning = id_epis_positioning_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_epgh_epg_fk;

    -- Delete all rows for this EPGH_EPIS_FK foreign key value
    PROCEDURE del_epgh_epis_fk
    (
        id_episode_in   IN epis_positioning_hist.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM epis_positioning_hist
         WHERE id_episode = id_episode_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_epgh_epis_fk;

    -- Delete all rows for this EPGH_PROF_FK foreign key value
    PROCEDURE del_epgh_prof_fk
    (
        id_professional_in IN epis_positioning_hist.id_professional%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM epis_positioning_hist
         WHERE id_professional = id_professional_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_epgh_prof_fk;

    -- Delete all rows for this EPGH_PROF_FK2 foreign key value
    PROCEDURE del_epgh_prof_fk2
    (
        id_prof_cancel_in IN epis_positioning_hist.id_prof_cancel%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM epis_positioning_hist
         WHERE id_prof_cancel = id_prof_cancel_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_epgh_prof_fk2;

    -- Delete all rows for this EPGH_PROF_FK3 foreign key value
    PROCEDURE del_epgh_prof_fk3
    (
        id_prof_inter_in IN epis_positioning_hist.id_prof_inter%TYPE,
        handle_error_in  IN BOOLEAN := TRUE,
        rows_out         OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM epis_positioning_hist
         WHERE id_prof_inter = id_prof_inter_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_epgh_prof_fk3;

    -- Delete all rows for this EPGH_ROTATION_INTERVAL_FK foreign key value
    PROCEDURE del_epgh_rotation_interval_fk
    (
        id_rotation_interval_in IN epis_positioning_hist.id_rotation_interval%TYPE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM epis_positioning_hist
         WHERE id_rotation_interval = id_rotation_interval_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_epgh_rotation_interval_fk;

    -- Delete all rows for this EPH_ICR_FK foreign key value
    PROCEDURE del_eph_icr_fk
    (
        id_cancel_reason_in IN epis_positioning_hist.id_cancel_reason%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM epis_positioning_hist
         WHERE id_cancel_reason = id_cancel_reason_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_eph_icr_fk;

    -- Delete all rows for this EPGH_EPG_FK foreign key value
    PROCEDURE del_epgh_epg_fk
    (
        id_epis_positioning_in IN epis_positioning_hist.id_epis_positioning%TYPE,
        handle_error_in        IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_epgh_epg_fk(id_epis_positioning_in => id_epis_positioning_in,
                        handle_error_in        => handle_error_in,
                        rows_out               => rows_out);
    END del_epgh_epg_fk;

    -- Delete all rows for this EPGH_EPIS_FK foreign key value
    PROCEDURE del_epgh_epis_fk
    (
        id_episode_in   IN epis_positioning_hist.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_epgh_epis_fk(id_episode_in => id_episode_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_epgh_epis_fk;

    -- Delete all rows for this EPGH_PROF_FK foreign key value
    PROCEDURE del_epgh_prof_fk
    (
        id_professional_in IN epis_positioning_hist.id_professional%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_epgh_prof_fk(id_professional_in => id_professional_in,
                         handle_error_in    => handle_error_in,
                         rows_out           => rows_out);
    END del_epgh_prof_fk;

    -- Delete all rows for this EPGH_PROF_FK2 foreign key value
    PROCEDURE del_epgh_prof_fk2
    (
        id_prof_cancel_in IN epis_positioning_hist.id_prof_cancel%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_epgh_prof_fk2(id_prof_cancel_in => id_prof_cancel_in,
                          handle_error_in   => handle_error_in,
                          rows_out          => rows_out);
    END del_epgh_prof_fk2;

    -- Delete all rows for this EPGH_PROF_FK3 foreign key value
    PROCEDURE del_epgh_prof_fk3
    (
        id_prof_inter_in IN epis_positioning_hist.id_prof_inter%TYPE,
        handle_error_in  IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_epgh_prof_fk3(id_prof_inter_in => id_prof_inter_in,
                          handle_error_in  => handle_error_in,
                          rows_out         => rows_out);
    END del_epgh_prof_fk3;

    -- Delete all rows for this EPGH_ROTATION_INTERVAL_FK foreign key value
    PROCEDURE del_epgh_rotation_interval_fk
    (
        id_rotation_interval_in IN epis_positioning_hist.id_rotation_interval%TYPE,
        handle_error_in         IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_epgh_rotation_interval_fk(id_rotation_interval_in => id_rotation_interval_in,
                                      handle_error_in         => handle_error_in,
                                      rows_out                => rows_out);
    END del_epgh_rotation_interval_fk;

    -- Delete all rows for this EPH_ICR_FK foreign key value
    PROCEDURE del_eph_icr_fk
    (
        id_cancel_reason_in IN epis_positioning_hist.id_cancel_reason%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_eph_icr_fk(id_cancel_reason_in => id_cancel_reason_in,
                       handle_error_in     => handle_error_in,
                       rows_out            => rows_out);
    END del_eph_icr_fk;

    -- Deletions using dynamic SQL
    FUNCTION dyndelstr(where_in IN VARCHAR2) RETURN VARCHAR2 IS
    BEGIN
        IF where_in IS NULL
        THEN
            RETURN 'DELETE FROM epis_positioning_hist';
        ELSE
            RETURN 'DELETE FROM epis_positioning_hist WHERE ' || where_in;
        END IF;
    END dyndelstr;
    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyndelstr(where_clause_in) ||
                          ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyndelstr(where_clause_in);
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(epis_positioning_hist_inout IN OUT epis_positioning_hist%ROWTYPE) IS
    BEGIN
        epis_positioning_hist_inout.id_epis_positioning_hist := NULL;
        epis_positioning_hist_inout.id_epis_positioning      := NULL;
        epis_positioning_hist_inout.id_episode               := NULL;
        epis_positioning_hist_inout.id_professional          := NULL;
        epis_positioning_hist_inout.flg_status               := NULL;
        epis_positioning_hist_inout.flg_massage              := NULL;
        epis_positioning_hist_inout.notes                    := NULL;
        epis_positioning_hist_inout.id_prof_cancel           := NULL;
        epis_positioning_hist_inout.notes_cancel             := NULL;
        epis_positioning_hist_inout.rot_interval             := NULL;
        epis_positioning_hist_inout.id_prof_inter            := NULL;
        epis_positioning_hist_inout.notes_inter              := NULL;
        epis_positioning_hist_inout.dt_creation_tstz         := NULL;
        epis_positioning_hist_inout.dt_cancel_tstz           := NULL;
        epis_positioning_hist_inout.dt_inter_tstz            := NULL;
        epis_positioning_hist_inout.create_user              := NULL;
        epis_positioning_hist_inout.create_time              := NULL;
        epis_positioning_hist_inout.create_institution       := NULL;
        epis_positioning_hist_inout.update_user              := NULL;
        epis_positioning_hist_inout.update_time              := NULL;
        epis_positioning_hist_inout.update_institution       := NULL;
        epis_positioning_hist_inout.id_rotation_interval     := NULL;
        epis_positioning_hist_inout.id_cancel_reason         := NULL;
        epis_positioning_hist_inout.dt_epis_positioning      := NULL;
        epis_positioning_hist_inout.flg_origin               := NULL;
        epis_positioning_hist_inout.id_episode_context       := NULL;
    END initrec;

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN epis_positioning_hist%ROWTYPE IS
        l_epis_positioning_hist epis_positioning_hist%ROWTYPE;
    BEGIN
        RETURN l_epis_positioning_hist;
    END initrec;

    --get data from rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN epis_positioning_hist_tc IS
        data epis_positioning_hist_tc;
    BEGIN
        SELECT *
          BULK COLLECT
          INTO data
          FROM epis_positioning_hist
         WHERE ROWID IN (SELECT /*+ OPT_ESTIMATE(TABLE t ROWS=1) */
                          *
                           FROM TABLE(rows_in) t);
        RETURN data;
    END get_data_rowid;

    --get data from rowid (pragma autonomous transacion)
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN epis_positioning_hist_tc IS
        data epis_positioning_hist_tc;
        PRAGMA AUTONOMOUS_TRANSACTION;
    BEGIN
        data := get_data_rowid(rows_in);
        COMMIT;
        RETURN data;
    
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'get_data_rowid_pat');
            ROLLBACK;
        
    END get_data_rowid_pat;

BEGIN
    NULL;
END ts_epis_positioning_hist;
/
