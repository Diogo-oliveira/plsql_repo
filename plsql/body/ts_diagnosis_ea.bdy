/*-- Last Change Revision: $Rev: 1771068 $*/
/*-- Last Change by: $Author: carlos.ferreira $*/
/*-- Date of last change: $Date: 2017-02-10 16:01:35 +0000 (sex, 10 fev 2017) $*/
CREATE OR REPLACE PACKAGE BODY ts_diagnosis_ea
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2017-02-10 09:52:21
| Created By: ALERT
*/
 IS

    e_null_column_value EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_null_column_value, -1400);

    e_existing_fky_reference EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_existing_fky_reference, -2266);

    e_check_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_check_constraint_failure, -2290);

    e_no_parent_key EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_no_parent_key, -2291);

    e_child_record_found EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_child_record_found, -2292);

    e_forall_error EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_forall_error, -24381);

    -- Defined for backward compatibilty.
    e_integ_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_integ_constraint_failure, -2291);

    PROCEDURE ins
    (
        id_cncpt_vrs_inst_owner_in IN diagnosis_ea.id_cncpt_vrs_inst_owner%TYPE,
        id_institution_in          IN diagnosis_ea.id_institution%TYPE,
        id_professional_in         IN diagnosis_ea.id_professional%TYPE,
        id_dep_clin_serv_in        IN diagnosis_ea.id_dep_clin_serv%TYPE,
        id_concept_version_in      IN diagnosis_ea.id_concept_version%TYPE,
        id_cncpt_trm_inst_owner_in IN diagnosis_ea.id_cncpt_trm_inst_owner%TYPE,
        id_concept_term_in         IN diagnosis_ea.id_concept_term%TYPE,
        id_language_in             IN diagnosis_ea.id_language%TYPE,
        id_software_in             IN diagnosis_ea.id_software%TYPE,
        code_diagnosis_in          IN diagnosis_ea.code_diagnosis%TYPE DEFAULT NULL,
        code_medical_in            IN diagnosis_ea.code_medical%TYPE DEFAULT NULL,
        code_surgical_in           IN diagnosis_ea.code_surgical%TYPE DEFAULT NULL,
        code_problems_in           IN diagnosis_ea.code_problems%TYPE DEFAULT NULL,
        code_cong_anomalies_in     IN diagnosis_ea.code_cong_anomalies%TYPE DEFAULT NULL,
        code_diagnosis_partial_in  IN diagnosis_ea.code_diagnosis_partial%TYPE DEFAULT NULL,
        concept_code_in            IN diagnosis_ea.concept_code%TYPE DEFAULT NULL,
        mdm_coding_in              IN diagnosis_ea.mdm_coding%TYPE DEFAULT NULL,
        flg_terminology_in         IN diagnosis_ea.flg_terminology%TYPE DEFAULT NULL,
        flg_subtype_in             IN diagnosis_ea.flg_subtype%TYPE DEFAULT NULL,
        flg_diag_type_in           IN diagnosis_ea.flg_diag_type%TYPE DEFAULT NULL,
        flg_family_in              IN diagnosis_ea.flg_family%TYPE DEFAULT NULL,
        flg_icd9_in                IN diagnosis_ea.flg_icd9%TYPE DEFAULT NULL,
        flg_job_in                 IN diagnosis_ea.flg_job%TYPE DEFAULT NULL,
        flg_msi_concept_term_in    IN diagnosis_ea.flg_msi_concept_term%TYPE DEFAULT NULL,
        flg_other_in               IN diagnosis_ea.flg_other%TYPE DEFAULT NULL,
        flg_pos_birth_in           IN diagnosis_ea.flg_pos_birth%TYPE DEFAULT NULL,
        flg_select_in              IN diagnosis_ea.flg_select%TYPE DEFAULT NULL,
        concept_type_int_name_in   IN diagnosis_ea.concept_type_int_name%TYPE DEFAULT NULL,
        age_min_in                 IN diagnosis_ea.age_min%TYPE DEFAULT NULL,
        age_max_in                 IN diagnosis_ea.age_max%TYPE DEFAULT NULL,
        gender_in                  IN diagnosis_ea.gender%TYPE DEFAULT NULL,
        rank_in                    IN diagnosis_ea.rank%TYPE DEFAULT NULL,
        diagnosis_path_in          IN diagnosis_ea.diagnosis_path%TYPE DEFAULT NULL,
        flg_is_diagnosis_in        IN diagnosis_ea.flg_is_diagnosis%TYPE DEFAULT NULL,
        code_death_event_in        IN diagnosis_ea.code_death_event%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT table_varchar
    ) IS
    BEGIN
        INSERT INTO diagnosis_ea
            (id_cncpt_vrs_inst_owner,
             id_institution,
             id_professional,
             id_dep_clin_serv,
             id_concept_version,
             id_cncpt_trm_inst_owner,
             id_concept_term,
             id_language,
             id_software,
             code_diagnosis,
             code_medical,
             code_surgical,
             code_problems,
             code_cong_anomalies,
             code_diagnosis_partial,
             concept_code,
             mdm_coding,
             flg_terminology,
             flg_subtype,
             flg_diag_type,
             flg_family,
             flg_icd9,
             flg_job,
             flg_msi_concept_term,
             flg_other,
             flg_pos_birth,
             flg_select,
             concept_type_int_name,
             age_min,
             age_max,
             gender,
             rank,
             diagnosis_path,
             flg_is_diagnosis,
             code_death_event)
        VALUES
            (id_cncpt_vrs_inst_owner_in,
             id_institution_in,
             id_professional_in,
             id_dep_clin_serv_in,
             id_concept_version_in,
             id_cncpt_trm_inst_owner_in,
             id_concept_term_in,
             id_language_in,
             id_software_in,
             code_diagnosis_in,
             code_medical_in,
             code_surgical_in,
             code_problems_in,
             code_cong_anomalies_in,
             code_diagnosis_partial_in,
             concept_code_in,
             mdm_coding_in,
             flg_terminology_in,
             flg_subtype_in,
             flg_diag_type_in,
             flg_family_in,
             flg_icd9_in,
             flg_job_in,
             flg_msi_concept_term_in,
             flg_other_in,
             flg_pos_birth_in,
             flg_select_in,
             concept_type_int_name_in,
             age_min_in,
             age_max_in,
             gender_in,
             rank_in,
             diagnosis_path_in,
             flg_is_diagnosis_in,
             code_death_event_in)
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    PROCEDURE ins
    (
        id_cncpt_vrs_inst_owner_in IN diagnosis_ea.id_cncpt_vrs_inst_owner%TYPE,
        id_institution_in          IN diagnosis_ea.id_institution%TYPE,
        id_professional_in         IN diagnosis_ea.id_professional%TYPE,
        id_dep_clin_serv_in        IN diagnosis_ea.id_dep_clin_serv%TYPE,
        id_concept_version_in      IN diagnosis_ea.id_concept_version%TYPE,
        id_cncpt_trm_inst_owner_in IN diagnosis_ea.id_cncpt_trm_inst_owner%TYPE,
        id_concept_term_in         IN diagnosis_ea.id_concept_term%TYPE,
        id_language_in             IN diagnosis_ea.id_language%TYPE,
        id_software_in             IN diagnosis_ea.id_software%TYPE,
        code_diagnosis_in          IN diagnosis_ea.code_diagnosis%TYPE DEFAULT NULL,
        code_medical_in            IN diagnosis_ea.code_medical%TYPE DEFAULT NULL,
        code_surgical_in           IN diagnosis_ea.code_surgical%TYPE DEFAULT NULL,
        code_problems_in           IN diagnosis_ea.code_problems%TYPE DEFAULT NULL,
        code_cong_anomalies_in     IN diagnosis_ea.code_cong_anomalies%TYPE DEFAULT NULL,
        code_diagnosis_partial_in  IN diagnosis_ea.code_diagnosis_partial%TYPE DEFAULT NULL,
        concept_code_in            IN diagnosis_ea.concept_code%TYPE DEFAULT NULL,
        mdm_coding_in              IN diagnosis_ea.mdm_coding%TYPE DEFAULT NULL,
        flg_terminology_in         IN diagnosis_ea.flg_terminology%TYPE DEFAULT NULL,
        flg_subtype_in             IN diagnosis_ea.flg_subtype%TYPE DEFAULT NULL,
        flg_diag_type_in           IN diagnosis_ea.flg_diag_type%TYPE DEFAULT NULL,
        flg_family_in              IN diagnosis_ea.flg_family%TYPE DEFAULT NULL,
        flg_icd9_in                IN diagnosis_ea.flg_icd9%TYPE DEFAULT NULL,
        flg_job_in                 IN diagnosis_ea.flg_job%TYPE DEFAULT NULL,
        flg_msi_concept_term_in    IN diagnosis_ea.flg_msi_concept_term%TYPE DEFAULT NULL,
        flg_other_in               IN diagnosis_ea.flg_other%TYPE DEFAULT NULL,
        flg_pos_birth_in           IN diagnosis_ea.flg_pos_birth%TYPE DEFAULT NULL,
        flg_select_in              IN diagnosis_ea.flg_select%TYPE DEFAULT NULL,
        concept_type_int_name_in   IN diagnosis_ea.concept_type_int_name%TYPE DEFAULT NULL,
        age_min_in                 IN diagnosis_ea.age_min%TYPE DEFAULT NULL,
        age_max_in                 IN diagnosis_ea.age_max%TYPE DEFAULT NULL,
        gender_in                  IN diagnosis_ea.gender%TYPE DEFAULT NULL,
        rank_in                    IN diagnosis_ea.rank%TYPE DEFAULT NULL,
        diagnosis_path_in          IN diagnosis_ea.diagnosis_path%TYPE DEFAULT NULL,
        flg_is_diagnosis_in        IN diagnosis_ea.flg_is_diagnosis%TYPE DEFAULT NULL,
        code_death_event_in        IN diagnosis_ea.code_death_event%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_cncpt_vrs_inst_owner_in => id_cncpt_vrs_inst_owner_in,
            id_institution_in          => id_institution_in,
            id_professional_in         => id_professional_in,
            id_dep_clin_serv_in        => id_dep_clin_serv_in,
            id_concept_version_in      => id_concept_version_in,
            id_cncpt_trm_inst_owner_in => id_cncpt_trm_inst_owner_in,
            id_concept_term_in         => id_concept_term_in,
            id_language_in             => id_language_in,
            id_software_in             => id_software_in,
            code_diagnosis_in          => code_diagnosis_in,
            code_medical_in            => code_medical_in,
            code_surgical_in           => code_surgical_in,
            code_problems_in           => code_problems_in,
            code_cong_anomalies_in     => code_cong_anomalies_in,
            code_diagnosis_partial_in  => code_diagnosis_partial_in,
            concept_code_in            => concept_code_in,
            mdm_coding_in              => mdm_coding_in,
            flg_terminology_in         => flg_terminology_in,
            flg_subtype_in             => flg_subtype_in,
            flg_diag_type_in           => flg_diag_type_in,
            flg_family_in              => flg_family_in,
            flg_icd9_in                => flg_icd9_in,
            flg_job_in                 => flg_job_in,
            flg_msi_concept_term_in    => flg_msi_concept_term_in,
            flg_other_in               => flg_other_in,
            flg_pos_birth_in           => flg_pos_birth_in,
            flg_select_in              => flg_select_in,
            concept_type_int_name_in   => concept_type_int_name_in,
            age_min_in                 => age_min_in,
            age_max_in                 => age_max_in,
            gender_in                  => gender_in,
            rank_in                    => rank_in,
            diagnosis_path_in          => diagnosis_path_in,
            flg_is_diagnosis_in        => flg_is_diagnosis_in,
            code_death_event_in        => code_death_event_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN diagnosis_ea%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_rec diagnosis_ea%ROWTYPE := rec_in;
    BEGIN
    
        ins(id_cncpt_vrs_inst_owner_in => l_rec.id_cncpt_vrs_inst_owner,
            id_institution_in          => l_rec.id_institution,
            id_professional_in         => l_rec.id_professional,
            id_dep_clin_serv_in        => l_rec.id_dep_clin_serv,
            id_concept_version_in      => l_rec.id_concept_version,
            id_cncpt_trm_inst_owner_in => l_rec.id_cncpt_trm_inst_owner,
            id_concept_term_in         => l_rec.id_concept_term,
            id_language_in             => l_rec.id_language,
            id_software_in             => l_rec.id_software,
            code_diagnosis_in          => l_rec.code_diagnosis,
            code_medical_in            => l_rec.code_medical,
            code_surgical_in           => l_rec.code_surgical,
            code_problems_in           => l_rec.code_problems,
            code_cong_anomalies_in     => l_rec.code_cong_anomalies,
            code_diagnosis_partial_in  => l_rec.code_diagnosis_partial,
            concept_code_in            => l_rec.concept_code,
            mdm_coding_in              => l_rec.mdm_coding,
            flg_terminology_in         => l_rec.flg_terminology,
            flg_subtype_in             => l_rec.flg_subtype,
            flg_diag_type_in           => l_rec.flg_diag_type,
            flg_family_in              => l_rec.flg_family,
            flg_icd9_in                => l_rec.flg_icd9,
            flg_job_in                 => l_rec.flg_job,
            flg_msi_concept_term_in    => l_rec.flg_msi_concept_term,
            flg_other_in               => l_rec.flg_other,
            flg_pos_birth_in           => l_rec.flg_pos_birth,
            flg_select_in              => l_rec.flg_select,
            concept_type_int_name_in   => l_rec.concept_type_int_name,
            age_min_in                 => l_rec.age_min,
            age_max_in                 => l_rec.age_max,
            gender_in                  => l_rec.gender,
            rank_in                    => l_rec.rank,
            diagnosis_path_in          => l_rec.diagnosis_path,
            flg_is_diagnosis_in        => l_rec.flg_is_diagnosis,
            code_death_event_in        => l_rec.code_death_event,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN diagnosis_ea%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rec_in          => rec_in,
            gen_pky_in      => gen_pky_in,
            sequence_in     => sequence_in,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN diagnosis_ea_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        IF rows_in.count = 0
        THEN
            NULL;
        ELSE
            FORALL indx IN rows_in.first .. rows_in.last SAVE EXCEPTIONS
                INSERT INTO diagnosis_ea
                VALUES rows_in
                    (indx)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN diagnosis_ea_tc,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rows_in => rows_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END ins;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_cncpt_vrs_inst_owner_in IN diagnosis_ea.id_cncpt_vrs_inst_owner%TYPE,
        id_institution_in          IN diagnosis_ea.id_institution%TYPE,
        id_professional_in         IN diagnosis_ea.id_professional%TYPE,
        id_dep_clin_serv_in        IN diagnosis_ea.id_dep_clin_serv%TYPE,
        id_concept_version_in      IN diagnosis_ea.id_concept_version%TYPE,
        id_cncpt_trm_inst_owner_in IN diagnosis_ea.id_cncpt_trm_inst_owner%TYPE,
        id_concept_term_in         IN diagnosis_ea.id_concept_term%TYPE,
        id_language_in             IN diagnosis_ea.id_language%TYPE,
        id_software_in             IN diagnosis_ea.id_software%TYPE,
        code_diagnosis_in          IN diagnosis_ea.code_diagnosis%TYPE DEFAULT NULL,
        code_diagnosis_nin         IN BOOLEAN := TRUE,
        code_medical_in            IN diagnosis_ea.code_medical%TYPE DEFAULT NULL,
        code_medical_nin           IN BOOLEAN := TRUE,
        code_surgical_in           IN diagnosis_ea.code_surgical%TYPE DEFAULT NULL,
        code_surgical_nin          IN BOOLEAN := TRUE,
        code_problems_in           IN diagnosis_ea.code_problems%TYPE DEFAULT NULL,
        code_problems_nin          IN BOOLEAN := TRUE,
        code_cong_anomalies_in     IN diagnosis_ea.code_cong_anomalies%TYPE DEFAULT NULL,
        code_cong_anomalies_nin    IN BOOLEAN := TRUE,
        code_diagnosis_partial_in  IN diagnosis_ea.code_diagnosis_partial%TYPE DEFAULT NULL,
        code_diagnosis_partial_nin IN BOOLEAN := TRUE,
        concept_code_in            IN diagnosis_ea.concept_code%TYPE DEFAULT NULL,
        concept_code_nin           IN BOOLEAN := TRUE,
        mdm_coding_in              IN diagnosis_ea.mdm_coding%TYPE DEFAULT NULL,
        mdm_coding_nin             IN BOOLEAN := TRUE,
        flg_terminology_in         IN diagnosis_ea.flg_terminology%TYPE DEFAULT NULL,
        flg_terminology_nin        IN BOOLEAN := TRUE,
        flg_subtype_in             IN diagnosis_ea.flg_subtype%TYPE DEFAULT NULL,
        flg_subtype_nin            IN BOOLEAN := TRUE,
        flg_diag_type_in           IN diagnosis_ea.flg_diag_type%TYPE DEFAULT NULL,
        flg_diag_type_nin          IN BOOLEAN := TRUE,
        flg_family_in              IN diagnosis_ea.flg_family%TYPE DEFAULT NULL,
        flg_family_nin             IN BOOLEAN := TRUE,
        flg_icd9_in                IN diagnosis_ea.flg_icd9%TYPE DEFAULT NULL,
        flg_icd9_nin               IN BOOLEAN := TRUE,
        flg_job_in                 IN diagnosis_ea.flg_job%TYPE DEFAULT NULL,
        flg_job_nin                IN BOOLEAN := TRUE,
        flg_msi_concept_term_in    IN diagnosis_ea.flg_msi_concept_term%TYPE DEFAULT NULL,
        flg_msi_concept_term_nin   IN BOOLEAN := TRUE,
        flg_other_in               IN diagnosis_ea.flg_other%TYPE DEFAULT NULL,
        flg_other_nin              IN BOOLEAN := TRUE,
        flg_pos_birth_in           IN diagnosis_ea.flg_pos_birth%TYPE DEFAULT NULL,
        flg_pos_birth_nin          IN BOOLEAN := TRUE,
        flg_select_in              IN diagnosis_ea.flg_select%TYPE DEFAULT NULL,
        flg_select_nin             IN BOOLEAN := TRUE,
        concept_type_int_name_in   IN diagnosis_ea.concept_type_int_name%TYPE DEFAULT NULL,
        concept_type_int_name_nin  IN BOOLEAN := TRUE,
        age_min_in                 IN diagnosis_ea.age_min%TYPE DEFAULT NULL,
        age_min_nin                IN BOOLEAN := TRUE,
        age_max_in                 IN diagnosis_ea.age_max%TYPE DEFAULT NULL,
        age_max_nin                IN BOOLEAN := TRUE,
        gender_in                  IN diagnosis_ea.gender%TYPE DEFAULT NULL,
        gender_nin                 IN BOOLEAN := TRUE,
        rank_in                    IN diagnosis_ea.rank%TYPE DEFAULT NULL,
        rank_nin                   IN BOOLEAN := TRUE,
        diagnosis_path_in          IN diagnosis_ea.diagnosis_path%TYPE DEFAULT NULL,
        diagnosis_path_nin         IN BOOLEAN := TRUE,
        flg_is_diagnosis_in        IN diagnosis_ea.flg_is_diagnosis%TYPE DEFAULT NULL,
        flg_is_diagnosis_nin       IN BOOLEAN := TRUE,
        code_death_event_in        IN diagnosis_ea.code_death_event%TYPE DEFAULT NULL,
        code_death_event_nin       IN BOOLEAN := TRUE,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   IN OUT table_varchar
    ) IS
        l_rows_out                 table_varchar;
        l_code_diagnosis_n         NUMBER(1) := sys.diutil.bool_to_int(code_diagnosis_nin);
        l_code_medical_n           NUMBER(1) := sys.diutil.bool_to_int(code_medical_nin);
        l_code_surgical_n          NUMBER(1) := sys.diutil.bool_to_int(code_surgical_nin);
        l_code_problems_n          NUMBER(1) := sys.diutil.bool_to_int(code_problems_nin);
        l_code_cong_anomalies_n    NUMBER(1) := sys.diutil.bool_to_int(code_cong_anomalies_nin);
        l_code_diagnosis_partial_n NUMBER(1) := sys.diutil.bool_to_int(code_diagnosis_partial_nin);
        l_concept_code_n           NUMBER(1) := sys.diutil.bool_to_int(concept_code_nin);
        l_mdm_coding_n             NUMBER(1) := sys.diutil.bool_to_int(mdm_coding_nin);
        l_flg_terminology_n        NUMBER(1) := sys.diutil.bool_to_int(flg_terminology_nin);
        l_flg_subtype_n            NUMBER(1) := sys.diutil.bool_to_int(flg_subtype_nin);
        l_flg_diag_type_n          NUMBER(1) := sys.diutil.bool_to_int(flg_diag_type_nin);
        l_flg_family_n             NUMBER(1) := sys.diutil.bool_to_int(flg_family_nin);
        l_flg_icd9_n               NUMBER(1) := sys.diutil.bool_to_int(flg_icd9_nin);
        l_flg_job_n                NUMBER(1) := sys.diutil.bool_to_int(flg_job_nin);
        l_flg_msi_concept_term_n   NUMBER(1) := sys.diutil.bool_to_int(flg_msi_concept_term_nin);
        l_flg_other_n              NUMBER(1) := sys.diutil.bool_to_int(flg_other_nin);
        l_flg_pos_birth_n          NUMBER(1) := sys.diutil.bool_to_int(flg_pos_birth_nin);
        l_flg_select_n             NUMBER(1) := sys.diutil.bool_to_int(flg_select_nin);
        l_concept_type_int_name_n  NUMBER(1) := sys.diutil.bool_to_int(concept_type_int_name_nin);
        l_age_min_n                NUMBER(1) := sys.diutil.bool_to_int(age_min_nin);
        l_age_max_n                NUMBER(1) := sys.diutil.bool_to_int(age_max_nin);
        l_gender_n                 NUMBER(1) := sys.diutil.bool_to_int(gender_nin);
        l_rank_n                   NUMBER(1) := sys.diutil.bool_to_int(rank_nin);
        l_diagnosis_path_n         NUMBER(1) := sys.diutil.bool_to_int(diagnosis_path_nin);
        l_flg_is_diagnosis_n       NUMBER(1) := sys.diutil.bool_to_int(flg_is_diagnosis_nin);
        l_code_death_event_n       NUMBER(1) := sys.diutil.bool_to_int(code_death_event_nin);
    BEGIN
    
        UPDATE diagnosis_ea
           SET code_diagnosis         = decode(l_code_diagnosis_n,
                                               0,
                                               code_diagnosis_in,
                                               nvl(code_diagnosis_in, code_diagnosis)),
               code_medical           = decode(l_code_medical_n, 0, code_medical_in, nvl(code_medical_in, code_medical)),
               code_surgical          = decode(l_code_surgical_n,
                                               0,
                                               code_surgical_in,
                                               nvl(code_surgical_in, code_surgical)),
               code_problems          = decode(l_code_problems_n,
                                               0,
                                               code_problems_in,
                                               nvl(code_problems_in, code_problems)),
               code_cong_anomalies    = decode(l_code_cong_anomalies_n,
                                               0,
                                               code_cong_anomalies_in,
                                               nvl(code_cong_anomalies_in, code_cong_anomalies)),
               code_diagnosis_partial = decode(l_code_diagnosis_partial_n,
                                               0,
                                               code_diagnosis_partial_in,
                                               nvl(code_diagnosis_partial_in, code_diagnosis_partial)),
               concept_code           = decode(l_concept_code_n, 0, concept_code_in, nvl(concept_code_in, concept_code)),
               mdm_coding             = decode(l_mdm_coding_n, 0, mdm_coding_in, nvl(mdm_coding_in, mdm_coding)),
               flg_terminology        = decode(l_flg_terminology_n,
                                               0,
                                               flg_terminology_in,
                                               nvl(flg_terminology_in, flg_terminology)),
               flg_subtype            = decode(l_flg_subtype_n, 0, flg_subtype_in, nvl(flg_subtype_in, flg_subtype)),
               flg_diag_type          = decode(l_flg_diag_type_n,
                                               0,
                                               flg_diag_type_in,
                                               nvl(flg_diag_type_in, flg_diag_type)),
               flg_family             = decode(l_flg_family_n, 0, flg_family_in, nvl(flg_family_in, flg_family)),
               flg_icd9               = decode(l_flg_icd9_n, 0, flg_icd9_in, nvl(flg_icd9_in, flg_icd9)),
               flg_job                = decode(l_flg_job_n, 0, flg_job_in, nvl(flg_job_in, flg_job)),
               flg_msi_concept_term   = decode(l_flg_msi_concept_term_n,
                                               0,
                                               flg_msi_concept_term_in,
                                               nvl(flg_msi_concept_term_in, flg_msi_concept_term)),
               flg_other              = decode(l_flg_other_n, 0, flg_other_in, nvl(flg_other_in, flg_other)),
               flg_pos_birth          = decode(l_flg_pos_birth_n,
                                               0,
                                               flg_pos_birth_in,
                                               nvl(flg_pos_birth_in, flg_pos_birth)),
               flg_select             = decode(l_flg_select_n, 0, flg_select_in, nvl(flg_select_in, flg_select)),
               concept_type_int_name  = decode(l_concept_type_int_name_n,
                                               0,
                                               concept_type_int_name_in,
                                               nvl(concept_type_int_name_in, concept_type_int_name)),
               age_min                = decode(l_age_min_n, 0, age_min_in, nvl(age_min_in, age_min)),
               age_max                = decode(l_age_max_n, 0, age_max_in, nvl(age_max_in, age_max)),
               gender                 = decode(l_gender_n, 0, gender_in, nvl(gender_in, gender)),
               rank                   = decode(l_rank_n, 0, rank_in, nvl(rank_in, rank)),
               diagnosis_path         = decode(l_diagnosis_path_n,
                                               0,
                                               diagnosis_path_in,
                                               nvl(diagnosis_path_in, diagnosis_path)),
               flg_is_diagnosis       = decode(l_flg_is_diagnosis_n,
                                               0,
                                               flg_is_diagnosis_in,
                                               nvl(flg_is_diagnosis_in, flg_is_diagnosis)),
               code_death_event       = decode(l_code_death_event_n,
                                               0,
                                               code_death_event_in,
                                               nvl(code_death_event_in, code_death_event))
         WHERE id_cncpt_vrs_inst_owner = id_cncpt_vrs_inst_owner_in
           AND id_institution = id_institution_in
           AND id_professional = id_professional_in
           AND id_dep_clin_serv = id_dep_clin_serv_in
           AND id_concept_version = id_concept_version_in
           AND id_cncpt_trm_inst_owner = id_cncpt_trm_inst_owner_in
           AND id_concept_term = id_concept_term_in
           AND id_language = id_language_in
           AND id_software = id_software_in
        RETURNING ROWID BULK COLLECT INTO l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_cncpt_vrs_inst_owner_in IN diagnosis_ea.id_cncpt_vrs_inst_owner%TYPE,
        id_institution_in          IN diagnosis_ea.id_institution%TYPE,
        id_professional_in         IN diagnosis_ea.id_professional%TYPE,
        id_dep_clin_serv_in        IN diagnosis_ea.id_dep_clin_serv%TYPE,
        id_concept_version_in      IN diagnosis_ea.id_concept_version%TYPE,
        id_cncpt_trm_inst_owner_in IN diagnosis_ea.id_cncpt_trm_inst_owner%TYPE,
        id_concept_term_in         IN diagnosis_ea.id_concept_term%TYPE,
        id_language_in             IN diagnosis_ea.id_language%TYPE,
        id_software_in             IN diagnosis_ea.id_software%TYPE,
        code_diagnosis_in          IN diagnosis_ea.code_diagnosis%TYPE DEFAULT NULL,
        code_diagnosis_nin         IN BOOLEAN := TRUE,
        code_medical_in            IN diagnosis_ea.code_medical%TYPE DEFAULT NULL,
        code_medical_nin           IN BOOLEAN := TRUE,
        code_surgical_in           IN diagnosis_ea.code_surgical%TYPE DEFAULT NULL,
        code_surgical_nin          IN BOOLEAN := TRUE,
        code_problems_in           IN diagnosis_ea.code_problems%TYPE DEFAULT NULL,
        code_problems_nin          IN BOOLEAN := TRUE,
        code_cong_anomalies_in     IN diagnosis_ea.code_cong_anomalies%TYPE DEFAULT NULL,
        code_cong_anomalies_nin    IN BOOLEAN := TRUE,
        code_diagnosis_partial_in  IN diagnosis_ea.code_diagnosis_partial%TYPE DEFAULT NULL,
        code_diagnosis_partial_nin IN BOOLEAN := TRUE,
        concept_code_in            IN diagnosis_ea.concept_code%TYPE DEFAULT NULL,
        concept_code_nin           IN BOOLEAN := TRUE,
        mdm_coding_in              IN diagnosis_ea.mdm_coding%TYPE DEFAULT NULL,
        mdm_coding_nin             IN BOOLEAN := TRUE,
        flg_terminology_in         IN diagnosis_ea.flg_terminology%TYPE DEFAULT NULL,
        flg_terminology_nin        IN BOOLEAN := TRUE,
        flg_subtype_in             IN diagnosis_ea.flg_subtype%TYPE DEFAULT NULL,
        flg_subtype_nin            IN BOOLEAN := TRUE,
        flg_diag_type_in           IN diagnosis_ea.flg_diag_type%TYPE DEFAULT NULL,
        flg_diag_type_nin          IN BOOLEAN := TRUE,
        flg_family_in              IN diagnosis_ea.flg_family%TYPE DEFAULT NULL,
        flg_family_nin             IN BOOLEAN := TRUE,
        flg_icd9_in                IN diagnosis_ea.flg_icd9%TYPE DEFAULT NULL,
        flg_icd9_nin               IN BOOLEAN := TRUE,
        flg_job_in                 IN diagnosis_ea.flg_job%TYPE DEFAULT NULL,
        flg_job_nin                IN BOOLEAN := TRUE,
        flg_msi_concept_term_in    IN diagnosis_ea.flg_msi_concept_term%TYPE DEFAULT NULL,
        flg_msi_concept_term_nin   IN BOOLEAN := TRUE,
        flg_other_in               IN diagnosis_ea.flg_other%TYPE DEFAULT NULL,
        flg_other_nin              IN BOOLEAN := TRUE,
        flg_pos_birth_in           IN diagnosis_ea.flg_pos_birth%TYPE DEFAULT NULL,
        flg_pos_birth_nin          IN BOOLEAN := TRUE,
        flg_select_in              IN diagnosis_ea.flg_select%TYPE DEFAULT NULL,
        flg_select_nin             IN BOOLEAN := TRUE,
        concept_type_int_name_in   IN diagnosis_ea.concept_type_int_name%TYPE DEFAULT NULL,
        concept_type_int_name_nin  IN BOOLEAN := TRUE,
        age_min_in                 IN diagnosis_ea.age_min%TYPE DEFAULT NULL,
        age_min_nin                IN BOOLEAN := TRUE,
        age_max_in                 IN diagnosis_ea.age_max%TYPE DEFAULT NULL,
        age_max_nin                IN BOOLEAN := TRUE,
        gender_in                  IN diagnosis_ea.gender%TYPE DEFAULT NULL,
        gender_nin                 IN BOOLEAN := TRUE,
        rank_in                    IN diagnosis_ea.rank%TYPE DEFAULT NULL,
        rank_nin                   IN BOOLEAN := TRUE,
        diagnosis_path_in          IN diagnosis_ea.diagnosis_path%TYPE DEFAULT NULL,
        diagnosis_path_nin         IN BOOLEAN := TRUE,
        flg_is_diagnosis_in        IN diagnosis_ea.flg_is_diagnosis%TYPE DEFAULT NULL,
        flg_is_diagnosis_nin       IN BOOLEAN := TRUE,
        code_death_event_in        IN diagnosis_ea.code_death_event%TYPE DEFAULT NULL,
        code_death_event_nin       IN BOOLEAN := TRUE,
        handle_error_in            IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_cncpt_vrs_inst_owner_in => id_cncpt_vrs_inst_owner_in,
            id_institution_in          => id_institution_in,
            id_professional_in         => id_professional_in,
            id_dep_clin_serv_in        => id_dep_clin_serv_in,
            id_concept_version_in      => id_concept_version_in,
            id_cncpt_trm_inst_owner_in => id_cncpt_trm_inst_owner_in,
            id_concept_term_in         => id_concept_term_in,
            id_language_in             => id_language_in,
            id_software_in             => id_software_in,
            code_diagnosis_in          => code_diagnosis_in,
            code_diagnosis_nin         => code_diagnosis_nin,
            code_medical_in            => code_medical_in,
            code_medical_nin           => code_medical_nin,
            code_surgical_in           => code_surgical_in,
            code_surgical_nin          => code_surgical_nin,
            code_problems_in           => code_problems_in,
            code_problems_nin          => code_problems_nin,
            code_cong_anomalies_in     => code_cong_anomalies_in,
            code_cong_anomalies_nin    => code_cong_anomalies_nin,
            code_diagnosis_partial_in  => code_diagnosis_partial_in,
            code_diagnosis_partial_nin => code_diagnosis_partial_nin,
            concept_code_in            => concept_code_in,
            concept_code_nin           => concept_code_nin,
            mdm_coding_in              => mdm_coding_in,
            mdm_coding_nin             => mdm_coding_nin,
            flg_terminology_in         => flg_terminology_in,
            flg_terminology_nin        => flg_terminology_nin,
            flg_subtype_in             => flg_subtype_in,
            flg_subtype_nin            => flg_subtype_nin,
            flg_diag_type_in           => flg_diag_type_in,
            flg_diag_type_nin          => flg_diag_type_nin,
            flg_family_in              => flg_family_in,
            flg_family_nin             => flg_family_nin,
            flg_icd9_in                => flg_icd9_in,
            flg_icd9_nin               => flg_icd9_nin,
            flg_job_in                 => flg_job_in,
            flg_job_nin                => flg_job_nin,
            flg_msi_concept_term_in    => flg_msi_concept_term_in,
            flg_msi_concept_term_nin   => flg_msi_concept_term_nin,
            flg_other_in               => flg_other_in,
            flg_other_nin              => flg_other_nin,
            flg_pos_birth_in           => flg_pos_birth_in,
            flg_pos_birth_nin          => flg_pos_birth_nin,
            flg_select_in              => flg_select_in,
            flg_select_nin             => flg_select_nin,
            concept_type_int_name_in   => concept_type_int_name_in,
            concept_type_int_name_nin  => concept_type_int_name_nin,
            age_min_in                 => age_min_in,
            age_min_nin                => age_min_nin,
            age_max_in                 => age_max_in,
            age_max_nin                => age_max_nin,
            gender_in                  => gender_in,
            gender_nin                 => gender_nin,
            rank_in                    => rank_in,
            rank_nin                   => rank_nin,
            diagnosis_path_in          => diagnosis_path_in,
            diagnosis_path_nin         => diagnosis_path_nin,
            flg_is_diagnosis_in        => flg_is_diagnosis_in,
            flg_is_diagnosis_nin       => flg_is_diagnosis_nin,
            code_death_event_in        => code_death_event_in,
            code_death_event_nin       => code_death_event_nin,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        code_diagnosis_in          IN diagnosis_ea.code_diagnosis%TYPE DEFAULT NULL,
        code_diagnosis_nin         IN BOOLEAN := TRUE,
        code_medical_in            IN diagnosis_ea.code_medical%TYPE DEFAULT NULL,
        code_medical_nin           IN BOOLEAN := TRUE,
        code_surgical_in           IN diagnosis_ea.code_surgical%TYPE DEFAULT NULL,
        code_surgical_nin          IN BOOLEAN := TRUE,
        code_problems_in           IN diagnosis_ea.code_problems%TYPE DEFAULT NULL,
        code_problems_nin          IN BOOLEAN := TRUE,
        code_cong_anomalies_in     IN diagnosis_ea.code_cong_anomalies%TYPE DEFAULT NULL,
        code_cong_anomalies_nin    IN BOOLEAN := TRUE,
        code_diagnosis_partial_in  IN diagnosis_ea.code_diagnosis_partial%TYPE DEFAULT NULL,
        code_diagnosis_partial_nin IN BOOLEAN := TRUE,
        concept_code_in            IN diagnosis_ea.concept_code%TYPE DEFAULT NULL,
        concept_code_nin           IN BOOLEAN := TRUE,
        mdm_coding_in              IN diagnosis_ea.mdm_coding%TYPE DEFAULT NULL,
        mdm_coding_nin             IN BOOLEAN := TRUE,
        flg_terminology_in         IN diagnosis_ea.flg_terminology%TYPE DEFAULT NULL,
        flg_terminology_nin        IN BOOLEAN := TRUE,
        flg_subtype_in             IN diagnosis_ea.flg_subtype%TYPE DEFAULT NULL,
        flg_subtype_nin            IN BOOLEAN := TRUE,
        flg_diag_type_in           IN diagnosis_ea.flg_diag_type%TYPE DEFAULT NULL,
        flg_diag_type_nin          IN BOOLEAN := TRUE,
        flg_family_in              IN diagnosis_ea.flg_family%TYPE DEFAULT NULL,
        flg_family_nin             IN BOOLEAN := TRUE,
        flg_icd9_in                IN diagnosis_ea.flg_icd9%TYPE DEFAULT NULL,
        flg_icd9_nin               IN BOOLEAN := TRUE,
        flg_job_in                 IN diagnosis_ea.flg_job%TYPE DEFAULT NULL,
        flg_job_nin                IN BOOLEAN := TRUE,
        flg_msi_concept_term_in    IN diagnosis_ea.flg_msi_concept_term%TYPE DEFAULT NULL,
        flg_msi_concept_term_nin   IN BOOLEAN := TRUE,
        flg_other_in               IN diagnosis_ea.flg_other%TYPE DEFAULT NULL,
        flg_other_nin              IN BOOLEAN := TRUE,
        flg_pos_birth_in           IN diagnosis_ea.flg_pos_birth%TYPE DEFAULT NULL,
        flg_pos_birth_nin          IN BOOLEAN := TRUE,
        flg_select_in              IN diagnosis_ea.flg_select%TYPE DEFAULT NULL,
        flg_select_nin             IN BOOLEAN := TRUE,
        concept_type_int_name_in   IN diagnosis_ea.concept_type_int_name%TYPE DEFAULT NULL,
        concept_type_int_name_nin  IN BOOLEAN := TRUE,
        age_min_in                 IN diagnosis_ea.age_min%TYPE DEFAULT NULL,
        age_min_nin                IN BOOLEAN := TRUE,
        age_max_in                 IN diagnosis_ea.age_max%TYPE DEFAULT NULL,
        age_max_nin                IN BOOLEAN := TRUE,
        gender_in                  IN diagnosis_ea.gender%TYPE DEFAULT NULL,
        gender_nin                 IN BOOLEAN := TRUE,
        rank_in                    IN diagnosis_ea.rank%TYPE DEFAULT NULL,
        rank_nin                   IN BOOLEAN := TRUE,
        diagnosis_path_in          IN diagnosis_ea.diagnosis_path%TYPE DEFAULT NULL,
        diagnosis_path_nin         IN BOOLEAN := TRUE,
        flg_is_diagnosis_in        IN diagnosis_ea.flg_is_diagnosis%TYPE DEFAULT NULL,
        flg_is_diagnosis_nin       IN BOOLEAN := TRUE,
        code_death_event_in        IN diagnosis_ea.code_death_event%TYPE DEFAULT NULL,
        code_death_event_nin       IN BOOLEAN := TRUE,
        where_in                   IN VARCHAR2,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   IN OUT table_varchar
    ) IS
        l_sql                      VARCHAR2(32767);
        l_rows_out                 table_varchar;
        l_code_diagnosis_n         NUMBER(1) := sys.diutil.bool_to_int(code_diagnosis_nin);
        l_code_medical_n           NUMBER(1) := sys.diutil.bool_to_int(code_medical_nin);
        l_code_surgical_n          NUMBER(1) := sys.diutil.bool_to_int(code_surgical_nin);
        l_code_problems_n          NUMBER(1) := sys.diutil.bool_to_int(code_problems_nin);
        l_code_cong_anomalies_n    NUMBER(1) := sys.diutil.bool_to_int(code_cong_anomalies_nin);
        l_code_diagnosis_partial_n NUMBER(1) := sys.diutil.bool_to_int(code_diagnosis_partial_nin);
        l_concept_code_n           NUMBER(1) := sys.diutil.bool_to_int(concept_code_nin);
        l_mdm_coding_n             NUMBER(1) := sys.diutil.bool_to_int(mdm_coding_nin);
        l_flg_terminology_n        NUMBER(1) := sys.diutil.bool_to_int(flg_terminology_nin);
        l_flg_subtype_n            NUMBER(1) := sys.diutil.bool_to_int(flg_subtype_nin);
        l_flg_diag_type_n          NUMBER(1) := sys.diutil.bool_to_int(flg_diag_type_nin);
        l_flg_family_n             NUMBER(1) := sys.diutil.bool_to_int(flg_family_nin);
        l_flg_icd9_n               NUMBER(1) := sys.diutil.bool_to_int(flg_icd9_nin);
        l_flg_job_n                NUMBER(1) := sys.diutil.bool_to_int(flg_job_nin);
        l_flg_msi_concept_term_n   NUMBER(1) := sys.diutil.bool_to_int(flg_msi_concept_term_nin);
        l_flg_other_n              NUMBER(1) := sys.diutil.bool_to_int(flg_other_nin);
        l_flg_pos_birth_n          NUMBER(1) := sys.diutil.bool_to_int(flg_pos_birth_nin);
        l_flg_select_n             NUMBER(1) := sys.diutil.bool_to_int(flg_select_nin);
        l_concept_type_int_name_n  NUMBER(1) := sys.diutil.bool_to_int(concept_type_int_name_nin);
        l_age_min_n                NUMBER(1) := sys.diutil.bool_to_int(age_min_nin);
        l_age_max_n                NUMBER(1) := sys.diutil.bool_to_int(age_max_nin);
        l_gender_n                 NUMBER(1) := sys.diutil.bool_to_int(gender_nin);
        l_rank_n                   NUMBER(1) := sys.diutil.bool_to_int(rank_nin);
        l_diagnosis_path_n         NUMBER(1) := sys.diutil.bool_to_int(diagnosis_path_nin);
        l_flg_is_diagnosis_n       NUMBER(1) := sys.diutil.bool_to_int(flg_is_diagnosis_nin);
        l_code_death_event_n       NUMBER(1) := sys.diutil.bool_to_int(code_death_event_nin);
    BEGIN
        l_code_diagnosis_n         := sys.diutil.bool_to_int(code_diagnosis_nin);
        l_code_medical_n           := sys.diutil.bool_to_int(code_medical_nin);
        l_code_surgical_n          := sys.diutil.bool_to_int(code_surgical_nin);
        l_code_problems_n          := sys.diutil.bool_to_int(code_problems_nin);
        l_code_cong_anomalies_n    := sys.diutil.bool_to_int(code_cong_anomalies_nin);
        l_code_diagnosis_partial_n := sys.diutil.bool_to_int(code_diagnosis_partial_nin);
        l_concept_code_n           := sys.diutil.bool_to_int(concept_code_nin);
        l_mdm_coding_n             := sys.diutil.bool_to_int(mdm_coding_nin);
        l_flg_terminology_n        := sys.diutil.bool_to_int(flg_terminology_nin);
        l_flg_subtype_n            := sys.diutil.bool_to_int(flg_subtype_nin);
        l_flg_diag_type_n          := sys.diutil.bool_to_int(flg_diag_type_nin);
        l_flg_family_n             := sys.diutil.bool_to_int(flg_family_nin);
        l_flg_icd9_n               := sys.diutil.bool_to_int(flg_icd9_nin);
        l_flg_job_n                := sys.diutil.bool_to_int(flg_job_nin);
        l_flg_msi_concept_term_n   := sys.diutil.bool_to_int(flg_msi_concept_term_nin);
        l_flg_other_n              := sys.diutil.bool_to_int(flg_other_nin);
        l_flg_pos_birth_n          := sys.diutil.bool_to_int(flg_pos_birth_nin);
        l_flg_select_n             := sys.diutil.bool_to_int(flg_select_nin);
        l_concept_type_int_name_n  := sys.diutil.bool_to_int(concept_type_int_name_nin);
        l_age_min_n                := sys.diutil.bool_to_int(age_min_nin);
        l_age_max_n                := sys.diutil.bool_to_int(age_max_nin);
        l_gender_n                 := sys.diutil.bool_to_int(gender_nin);
        l_rank_n                   := sys.diutil.bool_to_int(rank_nin);
        l_diagnosis_path_n         := sys.diutil.bool_to_int(diagnosis_path_nin);
        l_flg_is_diagnosis_n       := sys.diutil.bool_to_int(flg_is_diagnosis_nin);
        l_code_death_event_n       := sys.diutil.bool_to_int(code_death_event_nin);
        l_sql                      := 'UPDATE diagnosis_ea SET' || ' CODE_DIAGNOSIS = decode (' || l_code_diagnosis_n ||
                                      ',0,:CODE_DIAGNOSIS_in, NVL (:CODE_DIAGNOSIS_in, CODE_DIAGNOSIS)) ' || ',' ||
                                      ' CODE_MEDICAL = decode (' || l_code_medical_n ||
                                      ',0,:CODE_MEDICAL_in, NVL (:CODE_MEDICAL_in, CODE_MEDICAL)) ' || ',' ||
                                      ' CODE_SURGICAL = decode (' || l_code_surgical_n ||
                                      ',0,:CODE_SURGICAL_in, NVL (:CODE_SURGICAL_in, CODE_SURGICAL)) ' || ',' ||
                                      ' CODE_PROBLEMS = decode (' || l_code_problems_n ||
                                      ',0,:CODE_PROBLEMS_in, NVL (:CODE_PROBLEMS_in, CODE_PROBLEMS)) ' || ',' ||
                                      ' CODE_CONG_ANOMALIES = decode (' || l_code_cong_anomalies_n ||
                                      ',0,:CODE_CONG_ANOMALIES_in, NVL (:CODE_CONG_ANOMALIES_in, CODE_CONG_ANOMALIES)) ' || ',' ||
                                      ' CODE_DIAGNOSIS_PARTIAL = decode (' || l_code_diagnosis_partial_n ||
                                      ',0,:CODE_DIAGNOSIS_PARTIAL_in, NVL (:CODE_DIAGNOSIS_PARTIAL_in, CODE_DIAGNOSIS_PARTIAL)) ' || ',' ||
                                      ' CONCEPT_CODE = decode (' || l_concept_code_n ||
                                      ',0,:CONCEPT_CODE_in, NVL (:CONCEPT_CODE_in, CONCEPT_CODE)) ' || ',' ||
                                      ' MDM_CODING = decode (' || l_mdm_coding_n ||
                                      ',0,:MDM_CODING_in, NVL (:MDM_CODING_in, MDM_CODING)) ' || ',' ||
                                      ' FLG_TERMINOLOGY = decode (' || l_flg_terminology_n ||
                                      ',0,:FLG_TERMINOLOGY_in, NVL (:FLG_TERMINOLOGY_in, FLG_TERMINOLOGY)) ' || ',' ||
                                      ' FLG_SUBTYPE = decode (' || l_flg_subtype_n ||
                                      ',0,:FLG_SUBTYPE_in, NVL (:FLG_SUBTYPE_in, FLG_SUBTYPE)) ' || ',' ||
                                      ' FLG_DIAG_TYPE = decode (' || l_flg_diag_type_n ||
                                      ',0,:FLG_DIAG_TYPE_in, NVL (:FLG_DIAG_TYPE_in, FLG_DIAG_TYPE)) ' || ',' ||
                                      ' FLG_FAMILY = decode (' || l_flg_family_n ||
                                      ',0,:FLG_FAMILY_in, NVL (:FLG_FAMILY_in, FLG_FAMILY)) ' || ',' ||
                                      ' FLG_ICD9 = decode (' || l_flg_icd9_n ||
                                      ',0,:FLG_ICD9_in, NVL (:FLG_ICD9_in, FLG_ICD9)) ' || ',' || ' FLG_JOB = decode (' ||
                                      l_flg_job_n || ',0,:FLG_JOB_in, NVL (:FLG_JOB_in, FLG_JOB)) ' || ',' ||
                                      ' FLG_MSI_CONCEPT_TERM = decode (' || l_flg_msi_concept_term_n ||
                                      ',0,:FLG_MSI_CONCEPT_TERM_in, NVL (:FLG_MSI_CONCEPT_TERM_in, FLG_MSI_CONCEPT_TERM)) ' || ',' ||
                                      ' FLG_OTHER = decode (' || l_flg_other_n ||
                                      ',0,:FLG_OTHER_in, NVL (:FLG_OTHER_in, FLG_OTHER)) ' || ',' ||
                                      ' FLG_POS_BIRTH = decode (' || l_flg_pos_birth_n ||
                                      ',0,:FLG_POS_BIRTH_in, NVL (:FLG_POS_BIRTH_in, FLG_POS_BIRTH)) ' || ',' ||
                                      ' FLG_SELECT = decode (' || l_flg_select_n ||
                                      ',0,:FLG_SELECT_in, NVL (:FLG_SELECT_in, FLG_SELECT)) ' || ',' ||
                                      ' CONCEPT_TYPE_INT_NAME = decode (' || l_concept_type_int_name_n ||
                                      ',0,:CONCEPT_TYPE_INT_NAME_in, NVL (:CONCEPT_TYPE_INT_NAME_in, CONCEPT_TYPE_INT_NAME)) ' || ',' ||
                                      ' AGE_MIN = decode (' || l_age_min_n ||
                                      ',0,:AGE_MIN_in, NVL (:AGE_MIN_in, AGE_MIN)) ' || ',' || ' AGE_MAX = decode (' ||
                                      l_age_max_n || ',0,:AGE_MAX_in, NVL (:AGE_MAX_in, AGE_MAX)) ' || ',' ||
                                      ' GENDER = decode (' || l_gender_n || ',0,:GENDER_in, NVL (:GENDER_in, GENDER)) ' || ',' ||
                                      ' RANK = decode (' || l_rank_n || ',0,:RANK_in, NVL (:RANK_in, RANK)) ' || ',' ||
                                      ' DIAGNOSIS_PATH = decode (' || l_diagnosis_path_n ||
                                      ',0,:DIAGNOSIS_PATH_in, NVL (:DIAGNOSIS_PATH_in, DIAGNOSIS_PATH)) ' || ',' ||
                                      ' FLG_IS_DIAGNOSIS = decode (' || l_flg_is_diagnosis_n ||
                                      ',0,:FLG_IS_DIAGNOSIS_in, NVL (:FLG_IS_DIAGNOSIS_in, FLG_IS_DIAGNOSIS)) ' || ',' ||
                                      ' CODE_DEATH_EVENT = decode (' || l_code_death_event_n ||
                                      ',0,:CODE_DEATH_EVENT_in, NVL (:CODE_DEATH_EVENT_in, CODE_DEATH_EVENT)) ' ||
                                      ' where ' || nvl(where_in, '(1=1)') ||
                                      ' RETURNING ROWID BULK COLLECT INTO :l_rows_out';
        EXECUTE IMMEDIATE 'BEGIN ' || l_sql || '; END;'
            USING IN code_diagnosis_in, code_medical_in, code_surgical_in, code_problems_in, code_cong_anomalies_in, code_diagnosis_partial_in, concept_code_in, mdm_coding_in, flg_terminology_in, flg_subtype_in, flg_diag_type_in, flg_family_in, flg_icd9_in, flg_job_in, flg_msi_concept_term_in, flg_other_in, flg_pos_birth_in, flg_select_in, concept_type_int_name_in, age_min_in, age_max_in, gender_in, rank_in, diagnosis_path_in, flg_is_diagnosis_in, code_death_event_in, OUT l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        code_diagnosis_in          IN diagnosis_ea.code_diagnosis%TYPE DEFAULT NULL,
        code_diagnosis_nin         IN BOOLEAN := TRUE,
        code_medical_in            IN diagnosis_ea.code_medical%TYPE DEFAULT NULL,
        code_medical_nin           IN BOOLEAN := TRUE,
        code_surgical_in           IN diagnosis_ea.code_surgical%TYPE DEFAULT NULL,
        code_surgical_nin          IN BOOLEAN := TRUE,
        code_problems_in           IN diagnosis_ea.code_problems%TYPE DEFAULT NULL,
        code_problems_nin          IN BOOLEAN := TRUE,
        code_cong_anomalies_in     IN diagnosis_ea.code_cong_anomalies%TYPE DEFAULT NULL,
        code_cong_anomalies_nin    IN BOOLEAN := TRUE,
        code_diagnosis_partial_in  IN diagnosis_ea.code_diagnosis_partial%TYPE DEFAULT NULL,
        code_diagnosis_partial_nin IN BOOLEAN := TRUE,
        concept_code_in            IN diagnosis_ea.concept_code%TYPE DEFAULT NULL,
        concept_code_nin           IN BOOLEAN := TRUE,
        mdm_coding_in              IN diagnosis_ea.mdm_coding%TYPE DEFAULT NULL,
        mdm_coding_nin             IN BOOLEAN := TRUE,
        flg_terminology_in         IN diagnosis_ea.flg_terminology%TYPE DEFAULT NULL,
        flg_terminology_nin        IN BOOLEAN := TRUE,
        flg_subtype_in             IN diagnosis_ea.flg_subtype%TYPE DEFAULT NULL,
        flg_subtype_nin            IN BOOLEAN := TRUE,
        flg_diag_type_in           IN diagnosis_ea.flg_diag_type%TYPE DEFAULT NULL,
        flg_diag_type_nin          IN BOOLEAN := TRUE,
        flg_family_in              IN diagnosis_ea.flg_family%TYPE DEFAULT NULL,
        flg_family_nin             IN BOOLEAN := TRUE,
        flg_icd9_in                IN diagnosis_ea.flg_icd9%TYPE DEFAULT NULL,
        flg_icd9_nin               IN BOOLEAN := TRUE,
        flg_job_in                 IN diagnosis_ea.flg_job%TYPE DEFAULT NULL,
        flg_job_nin                IN BOOLEAN := TRUE,
        flg_msi_concept_term_in    IN diagnosis_ea.flg_msi_concept_term%TYPE DEFAULT NULL,
        flg_msi_concept_term_nin   IN BOOLEAN := TRUE,
        flg_other_in               IN diagnosis_ea.flg_other%TYPE DEFAULT NULL,
        flg_other_nin              IN BOOLEAN := TRUE,
        flg_pos_birth_in           IN diagnosis_ea.flg_pos_birth%TYPE DEFAULT NULL,
        flg_pos_birth_nin          IN BOOLEAN := TRUE,
        flg_select_in              IN diagnosis_ea.flg_select%TYPE DEFAULT NULL,
        flg_select_nin             IN BOOLEAN := TRUE,
        concept_type_int_name_in   IN diagnosis_ea.concept_type_int_name%TYPE DEFAULT NULL,
        concept_type_int_name_nin  IN BOOLEAN := TRUE,
        age_min_in                 IN diagnosis_ea.age_min%TYPE DEFAULT NULL,
        age_min_nin                IN BOOLEAN := TRUE,
        age_max_in                 IN diagnosis_ea.age_max%TYPE DEFAULT NULL,
        age_max_nin                IN BOOLEAN := TRUE,
        gender_in                  IN diagnosis_ea.gender%TYPE DEFAULT NULL,
        gender_nin                 IN BOOLEAN := TRUE,
        rank_in                    IN diagnosis_ea.rank%TYPE DEFAULT NULL,
        rank_nin                   IN BOOLEAN := TRUE,
        diagnosis_path_in          IN diagnosis_ea.diagnosis_path%TYPE DEFAULT NULL,
        diagnosis_path_nin         IN BOOLEAN := TRUE,
        flg_is_diagnosis_in        IN diagnosis_ea.flg_is_diagnosis%TYPE DEFAULT NULL,
        flg_is_diagnosis_nin       IN BOOLEAN := TRUE,
        code_death_event_in        IN diagnosis_ea.code_death_event%TYPE DEFAULT NULL,
        code_death_event_nin       IN BOOLEAN := TRUE,
        where_in                   IN VARCHAR2,
        handle_error_in            IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(code_diagnosis_in          => code_diagnosis_in,
            code_diagnosis_nin         => code_diagnosis_nin,
            code_medical_in            => code_medical_in,
            code_medical_nin           => code_medical_nin,
            code_surgical_in           => code_surgical_in,
            code_surgical_nin          => code_surgical_nin,
            code_problems_in           => code_problems_in,
            code_problems_nin          => code_problems_nin,
            code_cong_anomalies_in     => code_cong_anomalies_in,
            code_cong_anomalies_nin    => code_cong_anomalies_nin,
            code_diagnosis_partial_in  => code_diagnosis_partial_in,
            code_diagnosis_partial_nin => code_diagnosis_partial_nin,
            concept_code_in            => concept_code_in,
            concept_code_nin           => concept_code_nin,
            mdm_coding_in              => mdm_coding_in,
            mdm_coding_nin             => mdm_coding_nin,
            flg_terminology_in         => flg_terminology_in,
            flg_terminology_nin        => flg_terminology_nin,
            flg_subtype_in             => flg_subtype_in,
            flg_subtype_nin            => flg_subtype_nin,
            flg_diag_type_in           => flg_diag_type_in,
            flg_diag_type_nin          => flg_diag_type_nin,
            flg_family_in              => flg_family_in,
            flg_family_nin             => flg_family_nin,
            flg_icd9_in                => flg_icd9_in,
            flg_icd9_nin               => flg_icd9_nin,
            flg_job_in                 => flg_job_in,
            flg_job_nin                => flg_job_nin,
            flg_msi_concept_term_in    => flg_msi_concept_term_in,
            flg_msi_concept_term_nin   => flg_msi_concept_term_nin,
            flg_other_in               => flg_other_in,
            flg_other_nin              => flg_other_nin,
            flg_pos_birth_in           => flg_pos_birth_in,
            flg_pos_birth_nin          => flg_pos_birth_nin,
            flg_select_in              => flg_select_in,
            flg_select_nin             => flg_select_nin,
            concept_type_int_name_in   => concept_type_int_name_in,
            concept_type_int_name_nin  => concept_type_int_name_nin,
            age_min_in                 => age_min_in,
            age_min_nin                => age_min_nin,
            age_max_in                 => age_max_in,
            age_max_nin                => age_max_nin,
            gender_in                  => gender_in,
            gender_nin                 => gender_nin,
            rank_in                    => rank_in,
            rank_nin                   => rank_nin,
            diagnosis_path_in          => diagnosis_path_in,
            diagnosis_path_nin         => diagnosis_path_nin,
            flg_is_diagnosis_in        => flg_is_diagnosis_in,
            flg_is_diagnosis_nin       => flg_is_diagnosis_nin,
            code_death_event_in        => code_death_event_in,
            code_death_event_nin       => code_death_event_nin,
            where_in                   => where_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END upd;

    --Update/insert columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_cncpt_vrs_inst_owner_in IN diagnosis_ea.id_cncpt_vrs_inst_owner%TYPE,
        id_institution_in          IN diagnosis_ea.id_institution%TYPE,
        id_professional_in         IN diagnosis_ea.id_professional%TYPE,
        id_dep_clin_serv_in        IN diagnosis_ea.id_dep_clin_serv%TYPE,
        id_concept_version_in      IN diagnosis_ea.id_concept_version%TYPE,
        id_cncpt_trm_inst_owner_in IN diagnosis_ea.id_cncpt_trm_inst_owner%TYPE,
        id_concept_term_in         IN diagnosis_ea.id_concept_term%TYPE,
        id_language_in             IN diagnosis_ea.id_language%TYPE,
        id_software_in             IN diagnosis_ea.id_software%TYPE,
        code_diagnosis_in          IN diagnosis_ea.code_diagnosis%TYPE DEFAULT NULL,
        code_medical_in            IN diagnosis_ea.code_medical%TYPE DEFAULT NULL,
        code_surgical_in           IN diagnosis_ea.code_surgical%TYPE DEFAULT NULL,
        code_problems_in           IN diagnosis_ea.code_problems%TYPE DEFAULT NULL,
        code_cong_anomalies_in     IN diagnosis_ea.code_cong_anomalies%TYPE DEFAULT NULL,
        code_diagnosis_partial_in  IN diagnosis_ea.code_diagnosis_partial%TYPE DEFAULT NULL,
        concept_code_in            IN diagnosis_ea.concept_code%TYPE DEFAULT NULL,
        mdm_coding_in              IN diagnosis_ea.mdm_coding%TYPE DEFAULT NULL,
        flg_terminology_in         IN diagnosis_ea.flg_terminology%TYPE DEFAULT NULL,
        flg_subtype_in             IN diagnosis_ea.flg_subtype%TYPE DEFAULT NULL,
        flg_diag_type_in           IN diagnosis_ea.flg_diag_type%TYPE DEFAULT NULL,
        flg_family_in              IN diagnosis_ea.flg_family%TYPE DEFAULT NULL,
        flg_icd9_in                IN diagnosis_ea.flg_icd9%TYPE DEFAULT NULL,
        flg_job_in                 IN diagnosis_ea.flg_job%TYPE DEFAULT NULL,
        flg_msi_concept_term_in    IN diagnosis_ea.flg_msi_concept_term%TYPE DEFAULT NULL,
        flg_other_in               IN diagnosis_ea.flg_other%TYPE DEFAULT NULL,
        flg_pos_birth_in           IN diagnosis_ea.flg_pos_birth%TYPE DEFAULT NULL,
        flg_select_in              IN diagnosis_ea.flg_select%TYPE DEFAULT NULL,
        concept_type_int_name_in   IN diagnosis_ea.concept_type_int_name%TYPE DEFAULT NULL,
        age_min_in                 IN diagnosis_ea.age_min%TYPE DEFAULT NULL,
        age_max_in                 IN diagnosis_ea.age_max%TYPE DEFAULT NULL,
        gender_in                  IN diagnosis_ea.gender%TYPE DEFAULT NULL,
        rank_in                    IN diagnosis_ea.rank%TYPE DEFAULT NULL,
        diagnosis_path_in          IN diagnosis_ea.diagnosis_path%TYPE DEFAULT NULL,
        flg_is_diagnosis_in        IN diagnosis_ea.flg_is_diagnosis%TYPE DEFAULT NULL,
        code_death_event_in        IN diagnosis_ea.code_death_event%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_cncpt_vrs_inst_owner_in => id_cncpt_vrs_inst_owner_in,
            id_institution_in          => id_institution_in,
            id_professional_in         => id_professional_in,
            id_dep_clin_serv_in        => id_dep_clin_serv_in,
            id_concept_version_in      => id_concept_version_in,
            id_cncpt_trm_inst_owner_in => id_cncpt_trm_inst_owner_in,
            id_concept_term_in         => id_concept_term_in,
            id_language_in             => id_language_in,
            id_software_in             => id_software_in,
            code_diagnosis_in          => code_diagnosis_in,
            code_medical_in            => code_medical_in,
            code_surgical_in           => code_surgical_in,
            code_problems_in           => code_problems_in,
            code_cong_anomalies_in     => code_cong_anomalies_in,
            code_diagnosis_partial_in  => code_diagnosis_partial_in,
            concept_code_in            => concept_code_in,
            mdm_coding_in              => mdm_coding_in,
            flg_terminology_in         => flg_terminology_in,
            flg_subtype_in             => flg_subtype_in,
            flg_diag_type_in           => flg_diag_type_in,
            flg_family_in              => flg_family_in,
            flg_icd9_in                => flg_icd9_in,
            flg_job_in                 => flg_job_in,
            flg_msi_concept_term_in    => flg_msi_concept_term_in,
            flg_other_in               => flg_other_in,
            flg_pos_birth_in           => flg_pos_birth_in,
            flg_select_in              => flg_select_in,
            concept_type_int_name_in   => concept_type_int_name_in,
            age_min_in                 => age_min_in,
            age_max_in                 => age_max_in,
            gender_in                  => gender_in,
            rank_in                    => rank_in,
            diagnosis_path_in          => diagnosis_path_in,
            flg_is_diagnosis_in        => flg_is_diagnosis_in,
            code_death_event_in        => code_death_event_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
        IF SQL%ROWCOUNT = 0
        THEN
            ins(id_cncpt_vrs_inst_owner_in => id_cncpt_vrs_inst_owner_in,
                id_institution_in          => id_institution_in,
                id_professional_in         => id_professional_in,
                id_dep_clin_serv_in        => id_dep_clin_serv_in,
                id_concept_version_in      => id_concept_version_in,
                id_cncpt_trm_inst_owner_in => id_cncpt_trm_inst_owner_in,
                id_concept_term_in         => id_concept_term_in,
                id_language_in             => id_language_in,
                id_software_in             => id_software_in,
                code_diagnosis_in          => code_diagnosis_in,
                code_medical_in            => code_medical_in,
                code_surgical_in           => code_surgical_in,
                code_problems_in           => code_problems_in,
                code_cong_anomalies_in     => code_cong_anomalies_in,
                code_diagnosis_partial_in  => code_diagnosis_partial_in,
                concept_code_in            => concept_code_in,
                mdm_coding_in              => mdm_coding_in,
                flg_terminology_in         => flg_terminology_in,
                flg_subtype_in             => flg_subtype_in,
                flg_diag_type_in           => flg_diag_type_in,
                flg_family_in              => flg_family_in,
                flg_icd9_in                => flg_icd9_in,
                flg_job_in                 => flg_job_in,
                flg_msi_concept_term_in    => flg_msi_concept_term_in,
                flg_other_in               => flg_other_in,
                flg_pos_birth_in           => flg_pos_birth_in,
                flg_select_in              => flg_select_in,
                concept_type_int_name_in   => concept_type_int_name_in,
                age_min_in                 => age_min_in,
                age_max_in                 => age_max_in,
                gender_in                  => gender_in,
                rank_in                    => rank_in,
                diagnosis_path_in          => diagnosis_path_in,
                flg_is_diagnosis_in        => flg_is_diagnosis_in,
                code_death_event_in        => code_death_event_in,
                handle_error_in            => handle_error_in,
                rows_out                   => rows_out);
        END IF;
    END upd_ins;

    --Update/insert columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_cncpt_vrs_inst_owner_in IN diagnosis_ea.id_cncpt_vrs_inst_owner%TYPE,
        id_institution_in          IN diagnosis_ea.id_institution%TYPE,
        id_professional_in         IN diagnosis_ea.id_professional%TYPE,
        id_dep_clin_serv_in        IN diagnosis_ea.id_dep_clin_serv%TYPE,
        id_concept_version_in      IN diagnosis_ea.id_concept_version%TYPE,
        id_cncpt_trm_inst_owner_in IN diagnosis_ea.id_cncpt_trm_inst_owner%TYPE,
        id_concept_term_in         IN diagnosis_ea.id_concept_term%TYPE,
        id_language_in             IN diagnosis_ea.id_language%TYPE,
        id_software_in             IN diagnosis_ea.id_software%TYPE,
        code_diagnosis_in          IN diagnosis_ea.code_diagnosis%TYPE DEFAULT NULL,
        code_medical_in            IN diagnosis_ea.code_medical%TYPE DEFAULT NULL,
        code_surgical_in           IN diagnosis_ea.code_surgical%TYPE DEFAULT NULL,
        code_problems_in           IN diagnosis_ea.code_problems%TYPE DEFAULT NULL,
        code_cong_anomalies_in     IN diagnosis_ea.code_cong_anomalies%TYPE DEFAULT NULL,
        code_diagnosis_partial_in  IN diagnosis_ea.code_diagnosis_partial%TYPE DEFAULT NULL,
        concept_code_in            IN diagnosis_ea.concept_code%TYPE DEFAULT NULL,
        mdm_coding_in              IN diagnosis_ea.mdm_coding%TYPE DEFAULT NULL,
        flg_terminology_in         IN diagnosis_ea.flg_terminology%TYPE DEFAULT NULL,
        flg_subtype_in             IN diagnosis_ea.flg_subtype%TYPE DEFAULT NULL,
        flg_diag_type_in           IN diagnosis_ea.flg_diag_type%TYPE DEFAULT NULL,
        flg_family_in              IN diagnosis_ea.flg_family%TYPE DEFAULT NULL,
        flg_icd9_in                IN diagnosis_ea.flg_icd9%TYPE DEFAULT NULL,
        flg_job_in                 IN diagnosis_ea.flg_job%TYPE DEFAULT NULL,
        flg_msi_concept_term_in    IN diagnosis_ea.flg_msi_concept_term%TYPE DEFAULT NULL,
        flg_other_in               IN diagnosis_ea.flg_other%TYPE DEFAULT NULL,
        flg_pos_birth_in           IN diagnosis_ea.flg_pos_birth%TYPE DEFAULT NULL,
        flg_select_in              IN diagnosis_ea.flg_select%TYPE DEFAULT NULL,
        concept_type_int_name_in   IN diagnosis_ea.concept_type_int_name%TYPE DEFAULT NULL,
        age_min_in                 IN diagnosis_ea.age_min%TYPE DEFAULT NULL,
        age_max_in                 IN diagnosis_ea.age_max%TYPE DEFAULT NULL,
        gender_in                  IN diagnosis_ea.gender%TYPE DEFAULT NULL,
        rank_in                    IN diagnosis_ea.rank%TYPE DEFAULT NULL,
        diagnosis_path_in          IN diagnosis_ea.diagnosis_path%TYPE DEFAULT NULL,
        flg_is_diagnosis_in        IN diagnosis_ea.flg_is_diagnosis%TYPE DEFAULT NULL,
        code_death_event_in        IN diagnosis_ea.code_death_event%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd_ins(id_cncpt_vrs_inst_owner_in,
                id_institution_in,
                id_professional_in,
                id_dep_clin_serv_in,
                id_concept_version_in,
                id_cncpt_trm_inst_owner_in,
                id_concept_term_in,
                id_language_in,
                id_software_in,
                code_diagnosis_in,
                code_medical_in,
                code_surgical_in,
                code_problems_in,
                code_cong_anomalies_in,
                code_diagnosis_partial_in,
                concept_code_in,
                mdm_coding_in,
                flg_terminology_in,
                flg_subtype_in,
                flg_diag_type_in,
                flg_family_in,
                flg_icd9_in,
                flg_job_in,
                flg_msi_concept_term_in,
                flg_other_in,
                flg_pos_birth_in,
                flg_select_in,
                concept_type_int_name_in,
                age_min_in,
                age_max_in,
                gender_in,
                rank_in,
                diagnosis_path_in,
                flg_is_diagnosis_in,
                code_death_event_in,
                handle_error_in,
                rows_out);
    END upd_ins;

    --Update by record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN diagnosis_ea%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_cncpt_vrs_inst_owner_in => rec_in.id_cncpt_vrs_inst_owner,
            id_institution_in          => rec_in.id_institution,
            id_professional_in         => rec_in.id_professional,
            id_dep_clin_serv_in        => rec_in.id_dep_clin_serv,
            id_concept_version_in      => rec_in.id_concept_version,
            id_cncpt_trm_inst_owner_in => rec_in.id_cncpt_trm_inst_owner,
            id_concept_term_in         => rec_in.id_concept_term,
            id_language_in             => rec_in.id_language,
            id_software_in             => rec_in.id_software,
            code_diagnosis_in          => rec_in.code_diagnosis,
            code_medical_in            => rec_in.code_medical,
            code_surgical_in           => rec_in.code_surgical,
            code_problems_in           => rec_in.code_problems,
            code_cong_anomalies_in     => rec_in.code_cong_anomalies,
            code_diagnosis_partial_in  => rec_in.code_diagnosis_partial,
            concept_code_in            => rec_in.concept_code,
            mdm_coding_in              => rec_in.mdm_coding,
            flg_terminology_in         => rec_in.flg_terminology,
            flg_subtype_in             => rec_in.flg_subtype,
            flg_diag_type_in           => rec_in.flg_diag_type,
            flg_family_in              => rec_in.flg_family,
            flg_icd9_in                => rec_in.flg_icd9,
            flg_job_in                 => rec_in.flg_job,
            flg_msi_concept_term_in    => rec_in.flg_msi_concept_term,
            flg_other_in               => rec_in.flg_other,
            flg_pos_birth_in           => rec_in.flg_pos_birth,
            flg_select_in              => rec_in.flg_select,
            concept_type_int_name_in   => rec_in.concept_type_int_name,
            age_min_in                 => rec_in.age_min,
            age_max_in                 => rec_in.age_max,
            gender_in                  => rec_in.gender,
            rank_in                    => rec_in.rank,
            diagnosis_path_in          => rec_in.diagnosis_path,
            flg_is_diagnosis_in        => rec_in.flg_is_diagnosis,
            code_death_event_in        => rec_in.code_death_event,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END upd;

    --Update by record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN diagnosis_ea%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_cncpt_vrs_inst_owner_in => rec_in.id_cncpt_vrs_inst_owner,
            id_institution_in          => rec_in.id_institution,
            id_professional_in         => rec_in.id_professional,
            id_dep_clin_serv_in        => rec_in.id_dep_clin_serv,
            id_concept_version_in      => rec_in.id_concept_version,
            id_cncpt_trm_inst_owner_in => rec_in.id_cncpt_trm_inst_owner,
            id_concept_term_in         => rec_in.id_concept_term,
            id_language_in             => rec_in.id_language,
            id_software_in             => rec_in.id_software,
            code_diagnosis_in          => rec_in.code_diagnosis,
            code_medical_in            => rec_in.code_medical,
            code_surgical_in           => rec_in.code_surgical,
            code_problems_in           => rec_in.code_problems,
            code_cong_anomalies_in     => rec_in.code_cong_anomalies,
            code_diagnosis_partial_in  => rec_in.code_diagnosis_partial,
            concept_code_in            => rec_in.concept_code,
            mdm_coding_in              => rec_in.mdm_coding,
            flg_terminology_in         => rec_in.flg_terminology,
            flg_subtype_in             => rec_in.flg_subtype,
            flg_diag_type_in           => rec_in.flg_diag_type,
            flg_family_in              => rec_in.flg_family,
            flg_icd9_in                => rec_in.flg_icd9,
            flg_job_in                 => rec_in.flg_job,
            flg_msi_concept_term_in    => rec_in.flg_msi_concept_term,
            flg_other_in               => rec_in.flg_other,
            flg_pos_birth_in           => rec_in.flg_pos_birth,
            flg_select_in              => rec_in.flg_select,
            concept_type_int_name_in   => rec_in.concept_type_int_name,
            age_min_in                 => rec_in.age_min,
            age_max_in                 => rec_in.age_max,
            gender_in                  => rec_in.gender,
            rank_in                    => rec_in.rank,
            diagnosis_path_in          => rec_in.diagnosis_path,
            flg_is_diagnosis_in        => rec_in.flg_is_diagnosis,
            code_death_event_in        => rec_in.code_death_event,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END upd;

    --Update with collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN diagnosis_ea_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    ) IS
        l_id_cncpt_vrs_inst_owner id_cncpt_vrs_inst_owner_cc;
        l_id_institution          id_institution_cc;
        l_id_professional         id_professional_cc;
        l_id_dep_clin_serv        id_dep_clin_serv_cc;
        l_id_concept_version      id_concept_version_cc;
        l_id_cncpt_trm_inst_owner id_cncpt_trm_inst_owner_cc;
        l_id_concept_term         id_concept_term_cc;
        l_id_language             id_language_cc;
        l_id_software             id_software_cc;
        l_code_diagnosis          code_diagnosis_cc;
        l_code_medical            code_medical_cc;
        l_code_surgical           code_surgical_cc;
        l_code_problems           code_problems_cc;
        l_code_cong_anomalies     code_cong_anomalies_cc;
        l_code_diagnosis_partial  code_diagnosis_partial_cc;
        l_concept_code            concept_code_cc;
        l_mdm_coding              mdm_coding_cc;
        l_flg_terminology         flg_terminology_cc;
        l_flg_subtype             flg_subtype_cc;
        l_flg_diag_type           flg_diag_type_cc;
        l_flg_family              flg_family_cc;
        l_flg_icd9                flg_icd9_cc;
        l_flg_job                 flg_job_cc;
        l_flg_msi_concept_term    flg_msi_concept_term_cc;
        l_flg_other               flg_other_cc;
        l_flg_pos_birth           flg_pos_birth_cc;
        l_flg_select              flg_select_cc;
        l_concept_type_int_name   concept_type_int_name_cc;
        l_age_min                 age_min_cc;
        l_age_max                 age_max_cc;
        l_gender                  gender_cc;
        l_rank                    rank_cc;
        l_diagnosis_path          diagnosis_path_cc;
        l_flg_is_diagnosis        flg_is_diagnosis_cc;
        l_code_death_event        code_death_event_cc;
    BEGIN
        FOR i IN col_in.first .. col_in.last
        LOOP
            l_id_cncpt_vrs_inst_owner(i) := col_in(i).id_cncpt_vrs_inst_owner;
            l_id_institution(i) := col_in(i).id_institution;
            l_id_professional(i) := col_in(i).id_professional;
            l_id_dep_clin_serv(i) := col_in(i).id_dep_clin_serv;
            l_id_concept_version(i) := col_in(i).id_concept_version;
            l_id_cncpt_trm_inst_owner(i) := col_in(i).id_cncpt_trm_inst_owner;
            l_id_concept_term(i) := col_in(i).id_concept_term;
            l_id_language(i) := col_in(i).id_language;
            l_id_software(i) := col_in(i).id_software;
            l_code_diagnosis(i) := col_in(i).code_diagnosis;
            l_code_medical(i) := col_in(i).code_medical;
            l_code_surgical(i) := col_in(i).code_surgical;
            l_code_problems(i) := col_in(i).code_problems;
            l_code_cong_anomalies(i) := col_in(i).code_cong_anomalies;
            l_code_diagnosis_partial(i) := col_in(i).code_diagnosis_partial;
            l_concept_code(i) := col_in(i).concept_code;
            l_mdm_coding(i) := col_in(i).mdm_coding;
            l_flg_terminology(i) := col_in(i).flg_terminology;
            l_flg_subtype(i) := col_in(i).flg_subtype;
            l_flg_diag_type(i) := col_in(i).flg_diag_type;
            l_flg_family(i) := col_in(i).flg_family;
            l_flg_icd9(i) := col_in(i).flg_icd9;
            l_flg_job(i) := col_in(i).flg_job;
            l_flg_msi_concept_term(i) := col_in(i).flg_msi_concept_term;
            l_flg_other(i) := col_in(i).flg_other;
            l_flg_pos_birth(i) := col_in(i).flg_pos_birth;
            l_flg_select(i) := col_in(i).flg_select;
            l_concept_type_int_name(i) := col_in(i).concept_type_int_name;
            l_age_min(i) := col_in(i).age_min;
            l_age_max(i) := col_in(i).age_max;
            l_gender(i) := col_in(i).gender;
            l_rank(i) := col_in(i).rank;
            l_diagnosis_path(i) := col_in(i).diagnosis_path;
            l_flg_is_diagnosis(i) := col_in(i).flg_is_diagnosis;
            l_code_death_event(i) := col_in(i).code_death_event;
        END LOOP;
        IF nvl(ignore_if_null_in, FALSE)
        THEN
            -- Set any columns to their current values
            -- if incoming value is NULL.
            -- Put WHEN clause on column-level triggers!
            FORALL i IN col_in.first .. col_in.last
                UPDATE diagnosis_ea
                   SET code_diagnosis         = nvl(l_code_diagnosis(i), code_diagnosis),
                       code_medical           = nvl(l_code_medical(i), code_medical),
                       code_surgical          = nvl(l_code_surgical(i), code_surgical),
                       code_problems          = nvl(l_code_problems(i), code_problems),
                       code_cong_anomalies    = nvl(l_code_cong_anomalies(i), code_cong_anomalies),
                       code_diagnosis_partial = nvl(l_code_diagnosis_partial(i), code_diagnosis_partial),
                       concept_code           = nvl(l_concept_code(i), concept_code),
                       mdm_coding             = nvl(l_mdm_coding(i), mdm_coding),
                       flg_terminology        = nvl(l_flg_terminology(i), flg_terminology),
                       flg_subtype            = nvl(l_flg_subtype(i), flg_subtype),
                       flg_diag_type          = nvl(l_flg_diag_type(i), flg_diag_type),
                       flg_family             = nvl(l_flg_family(i), flg_family),
                       flg_icd9               = nvl(l_flg_icd9(i), flg_icd9),
                       flg_job                = nvl(l_flg_job(i), flg_job),
                       flg_msi_concept_term   = nvl(l_flg_msi_concept_term(i), flg_msi_concept_term),
                       flg_other              = nvl(l_flg_other(i), flg_other),
                       flg_pos_birth          = nvl(l_flg_pos_birth(i), flg_pos_birth),
                       flg_select             = nvl(l_flg_select(i), flg_select),
                       concept_type_int_name  = nvl(l_concept_type_int_name(i), concept_type_int_name),
                       age_min                = nvl(l_age_min(i), age_min),
                       age_max                = nvl(l_age_max(i), age_max),
                       gender                 = nvl(l_gender(i), gender),
                       rank                   = nvl(l_rank(i), rank),
                       diagnosis_path         = nvl(l_diagnosis_path(i), diagnosis_path),
                       flg_is_diagnosis       = nvl(l_flg_is_diagnosis(i), flg_is_diagnosis),
                       code_death_event       = nvl(l_code_death_event(i), code_death_event)
                 WHERE id_cncpt_vrs_inst_owner = l_id_cncpt_vrs_inst_owner(i)
                   AND id_institution = l_id_institution(i)
                   AND id_professional = l_id_professional(i)
                   AND id_dep_clin_serv = l_id_dep_clin_serv(i)
                   AND id_concept_version = l_id_concept_version(i)
                   AND id_cncpt_trm_inst_owner = l_id_cncpt_trm_inst_owner(i)
                   AND id_concept_term = l_id_concept_term(i)
                   AND id_language = l_id_language(i)
                   AND id_software = l_id_software(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        ELSE
            FORALL i IN col_in.first .. col_in.last
                UPDATE diagnosis_ea
                   SET code_diagnosis         = l_code_diagnosis(i),
                       code_medical           = l_code_medical(i),
                       code_surgical          = l_code_surgical(i),
                       code_problems          = l_code_problems(i),
                       code_cong_anomalies    = l_code_cong_anomalies(i),
                       code_diagnosis_partial = l_code_diagnosis_partial(i),
                       concept_code           = l_concept_code(i),
                       mdm_coding             = l_mdm_coding(i),
                       flg_terminology        = l_flg_terminology(i),
                       flg_subtype            = l_flg_subtype(i),
                       flg_diag_type          = l_flg_diag_type(i),
                       flg_family             = l_flg_family(i),
                       flg_icd9               = l_flg_icd9(i),
                       flg_job                = l_flg_job(i),
                       flg_msi_concept_term   = l_flg_msi_concept_term(i),
                       flg_other              = l_flg_other(i),
                       flg_pos_birth          = l_flg_pos_birth(i),
                       flg_select             = l_flg_select(i),
                       concept_type_int_name  = l_concept_type_int_name(i),
                       age_min                = l_age_min(i),
                       age_max                = l_age_max(i),
                       gender                 = l_gender(i),
                       rank                   = l_rank(i),
                       diagnosis_path         = l_diagnosis_path(i),
                       flg_is_diagnosis       = l_flg_is_diagnosis(i),
                       code_death_event       = l_code_death_event(i)
                 WHERE id_cncpt_vrs_inst_owner = l_id_cncpt_vrs_inst_owner(i)
                   AND id_institution = l_id_institution(i)
                   AND id_professional = l_id_professional(i)
                   AND id_dep_clin_serv = l_id_dep_clin_serv(i)
                   AND id_concept_version = l_id_concept_version(i)
                   AND id_cncpt_trm_inst_owner = l_id_cncpt_trm_inst_owner(i)
                   AND id_concept_term = l_id_concept_term(i)
                   AND id_language = l_id_language(i)
                   AND id_software = l_id_software(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update with collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN diagnosis_ea_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(col_in, ignore_if_null_in, handle_error_in, rows_out);
    END upd;

    --Dynamic update string
    FUNCTION dynupdstr
    (
        colname_in IN all_tab_columns.column_name%TYPE,
        where_in   IN VARCHAR2 := NULL
    ) RETURN VARCHAR2 IS
    BEGIN
        RETURN 'BEGIN UPDATE diagnosis_ea
SET ' || colname_in || ' = :value
 WHERE ' || nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;';
    END dynupdstr;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (with rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN UPDATE diagnosis_ea
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    END increment_onecol;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (without rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        EXECUTE IMMEDIATE 'UPDATE diagnosis_ea
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1');
    END increment_onecol;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_cncpt_vrs_inst_owner_in IN diagnosis_ea.id_cncpt_vrs_inst_owner%TYPE,
        id_institution_in          IN diagnosis_ea.id_institution%TYPE,
        id_professional_in         IN diagnosis_ea.id_professional%TYPE,
        id_dep_clin_serv_in        IN diagnosis_ea.id_dep_clin_serv%TYPE,
        id_concept_version_in      IN diagnosis_ea.id_concept_version%TYPE,
        id_cncpt_trm_inst_owner_in IN diagnosis_ea.id_cncpt_trm_inst_owner%TYPE,
        id_concept_term_in         IN diagnosis_ea.id_concept_term%TYPE,
        id_language_in             IN diagnosis_ea.id_language%TYPE,
        id_software_in             IN diagnosis_ea.id_software%TYPE,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM diagnosis_ea
         WHERE id_cncpt_vrs_inst_owner = id_cncpt_vrs_inst_owner_in
           AND id_institution = id_institution_in
           AND id_professional = id_professional_in
           AND id_dep_clin_serv = id_dep_clin_serv_in
           AND id_concept_version = id_concept_version_in
           AND id_cncpt_trm_inst_owner = id_cncpt_trm_inst_owner_in
           AND id_concept_term = id_concept_term_in
           AND id_language = id_language_in
           AND id_software = id_software_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_cncpt_vrs_inst_owner_in IN diagnosis_ea.id_cncpt_vrs_inst_owner%TYPE,
        id_institution_in          IN diagnosis_ea.id_institution%TYPE,
        id_professional_in         IN diagnosis_ea.id_professional%TYPE,
        id_dep_clin_serv_in        IN diagnosis_ea.id_dep_clin_serv%TYPE,
        id_concept_version_in      IN diagnosis_ea.id_concept_version%TYPE,
        id_cncpt_trm_inst_owner_in IN diagnosis_ea.id_cncpt_trm_inst_owner%TYPE,
        id_concept_term_in         IN diagnosis_ea.id_concept_term%TYPE,
        id_language_in             IN diagnosis_ea.id_language%TYPE,
        id_software_in             IN diagnosis_ea.id_software%TYPE,
        handle_error_in            IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del(id_cncpt_vrs_inst_owner_in => id_cncpt_vrs_inst_owner_in,
            id_institution_in          => id_institution_in,
            id_professional_in         => id_professional_in,
            id_dep_clin_serv_in        => id_dep_clin_serv_in,
            id_concept_version_in      => id_concept_version_in,
            id_cncpt_trm_inst_owner_in => id_cncpt_trm_inst_owner_in,
            id_concept_term_in         => id_concept_term_in,
            id_language_in             => id_language_in,
            id_software_in             => id_software_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END del;

    -- Deletions using dynamic SQL
    FUNCTION dyndelstr(where_in IN VARCHAR2) RETURN VARCHAR2 IS
    BEGIN
        IF where_in IS NULL
        THEN
            RETURN 'DELETE FROM diagnosis_ea';
        ELSE
            RETURN 'DELETE FROM diagnosis_ea WHERE ' || where_in;
        END IF;
    END dyndelstr;
    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyndelstr(where_clause_in) ||
                          ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyndelstr(where_clause_in);
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(diagnosis_ea_inout IN OUT diagnosis_ea%ROWTYPE) IS
    BEGIN
        diagnosis_ea_inout.id_cncpt_vrs_inst_owner := NULL;
        diagnosis_ea_inout.id_institution          := NULL;
        diagnosis_ea_inout.id_professional         := NULL;
        diagnosis_ea_inout.id_dep_clin_serv        := NULL;
        diagnosis_ea_inout.id_concept_version      := NULL;
        diagnosis_ea_inout.id_cncpt_trm_inst_owner := NULL;
        diagnosis_ea_inout.id_concept_term         := NULL;
        diagnosis_ea_inout.id_language             := NULL;
        diagnosis_ea_inout.id_software             := NULL;
        diagnosis_ea_inout.code_diagnosis          := NULL;
        diagnosis_ea_inout.code_medical            := NULL;
        diagnosis_ea_inout.code_surgical           := NULL;
        diagnosis_ea_inout.code_problems           := NULL;
        diagnosis_ea_inout.code_cong_anomalies     := NULL;
        diagnosis_ea_inout.code_diagnosis_partial  := NULL;
        diagnosis_ea_inout.concept_code            := NULL;
        diagnosis_ea_inout.mdm_coding              := NULL;
        diagnosis_ea_inout.flg_terminology         := NULL;
        diagnosis_ea_inout.flg_subtype             := NULL;
        diagnosis_ea_inout.flg_diag_type           := NULL;
        diagnosis_ea_inout.flg_family              := NULL;
        diagnosis_ea_inout.flg_icd9                := NULL;
        diagnosis_ea_inout.flg_job                 := NULL;
        diagnosis_ea_inout.flg_msi_concept_term    := NULL;
        diagnosis_ea_inout.flg_other               := NULL;
        diagnosis_ea_inout.flg_pos_birth           := NULL;
        diagnosis_ea_inout.flg_select              := NULL;
        diagnosis_ea_inout.concept_type_int_name   := NULL;
        diagnosis_ea_inout.age_min                 := NULL;
        diagnosis_ea_inout.age_max                 := NULL;
        diagnosis_ea_inout.gender                  := NULL;
        diagnosis_ea_inout.rank                    := NULL;
        diagnosis_ea_inout.diagnosis_path          := NULL;
        diagnosis_ea_inout.flg_is_diagnosis        := NULL;
        diagnosis_ea_inout.code_death_event        := NULL;
    END initrec;

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN diagnosis_ea%ROWTYPE IS
        l_diagnosis_ea diagnosis_ea%ROWTYPE;
    BEGIN
        RETURN l_diagnosis_ea;
    END initrec;

    --get data from rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN diagnosis_ea_tc IS
        data diagnosis_ea_tc;
    BEGIN
        SELECT * BULK COLLECT
          INTO data
          FROM diagnosis_ea
         WHERE ROWID IN (SELECT /*+opt_estimate(table,t,scale_rows=0.0000001))*/
                          *
                           FROM TABLE(rows_in) t);
        RETURN data;
    END get_data_rowid;

    --get data from rowid (pragma autonomous transacion)
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN diagnosis_ea_tc IS
        data diagnosis_ea_tc;
        PRAGMA AUTONOMOUS_TRANSACTION;
    BEGIN
        data := get_data_rowid(rows_in);
        COMMIT;
        RETURN data;
    
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'get_data_rowid_pat');
            ROLLBACK;
        
    END get_data_rowid_pat;

BEGIN
    NULL;
END ts_diagnosis_ea;
/
