/*-- Last Change Revision: $Rev: 2028022 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:43:58 +0100 (ter, 02 ago 2022) $*/
CREATE OR REPLACE PACKAGE BODY ts_drug_presc_det
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {7A44F965-7C77-42EE-9A04-269EF006213B}
| Created On: Maio 20, 2014 20:26:22
| Created By: ALERT
*/
 IS

    e_null_column_value EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_null_column_value, -1400);
    --
    e_existing_fky_reference EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_existing_fky_reference, -2266);
    --
    e_check_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_check_constraint_failure, -2290);
    --
    e_no_parent_key EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_no_parent_key, -2291);
    --
    e_child_record_found EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_child_record_found, -2292);
    --
    e_forall_error EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_forall_error, -24381);
    --
    -- Defined for backward compatibilty.
    e_integ_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_integ_constraint_failure, -2291);

    -- Private utilities
    PROCEDURE get_constraint_info
    (
        owner_out OUT all_constraints.owner%TYPE,
        name_out  OUT all_constraints.constraint_name%TYPE
    ) IS
        l_errm  VARCHAR2(2000) := dbms_utility.format_error_stack;
        dotloc  PLS_INTEGER;
        leftloc PLS_INTEGER;
    BEGIN
        dotloc    := instr(l_errm, '.');
        leftloc   := instr(l_errm, '(');
        owner_out := substr(l_errm, leftloc + 1, dotloc - leftloc - 1);
        name_out  := substr(l_errm, dotloc + 1, instr(l_errm, ')') - dotloc - 1);
    END get_constraint_info;
    -- Public programs

    PROCEDURE ins
    (
        id_drug_presc_det_in       IN drug_presc_det.id_drug_presc_det%TYPE,
        id_drug_prescription_in    IN drug_presc_det.id_drug_prescription%TYPE DEFAULT NULL,
        notes_in                   IN drug_presc_det.notes%TYPE DEFAULT NULL,
        flg_take_type_in           IN drug_presc_det.flg_take_type%TYPE DEFAULT NULL,
        qty_in                     IN drug_presc_det.qty%TYPE DEFAULT NULL,
        rate_in                    IN drug_presc_det.rate%TYPE DEFAULT NULL,
        flg_status_in              IN drug_presc_det.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in          IN drug_presc_det.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in            IN drug_presc_det.notes_cancel%TYPE DEFAULT NULL,
        notes_justif_in            IN drug_presc_det.notes_justif%TYPE DEFAULT NULL,
        interval_in                IN drug_presc_det.interval%TYPE DEFAULT NULL,
        takes_in                   IN drug_presc_det.takes%TYPE DEFAULT NULL,
        dosage_in                  IN drug_presc_det.dosage%TYPE DEFAULT NULL,
        flg_ci_in                  IN drug_presc_det.flg_ci%TYPE DEFAULT 'N',
        flg_cheaper_in             IN drug_presc_det.flg_cheaper%TYPE DEFAULT 'N',
        flg_justif_in              IN drug_presc_det.flg_justif%TYPE DEFAULT 'N',
        flg_attention_in           IN drug_presc_det.flg_attention%TYPE DEFAULT NULL,
        flg_attention_print_in     IN drug_presc_det.flg_attention_print%TYPE DEFAULT NULL,
        id_drug_despachos_in       IN drug_presc_det.id_drug_despachos%TYPE DEFAULT NULL,
        dosage_description_in      IN drug_presc_det.dosage_description%TYPE DEFAULT NULL,
        value_bolus_in             IN drug_presc_det.value_bolus%TYPE DEFAULT NULL,
        value_drip_in              IN drug_presc_det.value_drip%TYPE DEFAULT NULL,
        id_unit_measure_in         IN drug_presc_det.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_bolus_in   IN drug_presc_det.id_unit_measure_bolus%TYPE DEFAULT NULL,
        id_unit_measure_drip_in    IN drug_presc_det.id_unit_measure_drip%TYPE DEFAULT NULL,
        dt_begin_tstz_in           IN drug_presc_det.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in             IN drug_presc_det.dt_end_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in          IN drug_presc_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_end_presc_tstz_in       IN drug_presc_det.dt_end_presc_tstz%TYPE DEFAULT NULL,
        dt_end_bottle_tstz_in      IN drug_presc_det.dt_end_bottle_tstz%TYPE DEFAULT NULL,
        dt_order_in                IN drug_presc_det.dt_order%TYPE DEFAULT NULL,
        id_prof_order_in           IN drug_presc_det.id_prof_order%TYPE DEFAULT NULL,
        id_order_type_in           IN drug_presc_det.id_order_type%TYPE DEFAULT NULL,
        flg_co_sign_in             IN drug_presc_det.flg_co_sign%TYPE DEFAULT 'N',
        dt_co_sign_in              IN drug_presc_det.dt_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_in           IN drug_presc_det.notes_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_in         IN drug_presc_det.id_prof_co_sign%TYPE DEFAULT NULL,
        duration_in                IN drug_presc_det.duration%TYPE DEFAULT NULL,
        id_unit_measure_dur_in     IN drug_presc_det.id_unit_measure_dur%TYPE DEFAULT NULL,
        frequency_in               IN drug_presc_det.frequency%TYPE DEFAULT NULL,
        id_unit_measure_freq_in    IN drug_presc_det.id_unit_measure_freq%TYPE DEFAULT NULL,
        dt_start_presc_tstz_in     IN drug_presc_det.dt_start_presc_tstz%TYPE DEFAULT NULL,
        refill_in                  IN drug_presc_det.refill%TYPE DEFAULT NULL,
        qty_inst_in                IN drug_presc_det.qty_inst%TYPE DEFAULT NULL,
        unit_measure_inst_in       IN drug_presc_det.unit_measure_inst%TYPE DEFAULT NULL,
        id_pat_medication_list_in  IN drug_presc_det.id_pat_medication_list%TYPE DEFAULT NULL,
        dt_last_change_in          IN drug_presc_det.dt_last_change%TYPE DEFAULT NULL,
        route_id_in                IN drug_presc_det.route_id%TYPE DEFAULT NULL,
        id_justification_in        IN drug_presc_det.id_justification%TYPE DEFAULT NULL,
        vers_in                    IN drug_presc_det.vers%TYPE DEFAULT NULL,
        flg_interac_med_in         IN drug_presc_det.flg_interac_med%TYPE DEFAULT 'N',
        flg_interac_allergy_in     IN drug_presc_det.flg_interac_allergy%TYPE DEFAULT 'N',
        id_drug_in                 IN drug_presc_det.id_drug%TYPE DEFAULT NULL,
        id_other_product_in        IN drug_presc_det.id_other_product%TYPE DEFAULT NULL,
        desc_other_product_in      IN drug_presc_det.desc_other_product%TYPE DEFAULT NULL,
        dt_hold_begin_in           IN drug_presc_det.dt_hold_begin%TYPE DEFAULT NULL,
        dt_hold_end_in             IN drug_presc_det.dt_hold_end%TYPE DEFAULT NULL,
        flg_modified_in            IN drug_presc_det.flg_modified%TYPE DEFAULT 'N',
        status_flg_in              IN drug_presc_det.status_flg%TYPE DEFAULT NULL,
        status_icon_in             IN drug_presc_det.status_icon%TYPE DEFAULT NULL,
        status_msg_in              IN drug_presc_det.status_msg%TYPE DEFAULT NULL,
        status_str_in              IN drug_presc_det.status_str%TYPE DEFAULT NULL,
        dispense_in                IN drug_presc_det.dispense%TYPE DEFAULT NULL,
        unit_measure_dispense_in   IN drug_presc_det.unit_measure_dispense%TYPE DEFAULT NULL,
        flg_dosage_check_in        IN drug_presc_det.flg_dosage_check%TYPE DEFAULT NULL,
        id_combination_compound_in IN drug_presc_det.id_combination_compound%TYPE DEFAULT NULL,
        id_irregular_directions_in IN drug_presc_det.id_irregular_directions%TYPE DEFAULT NULL,
        create_user_in             IN drug_presc_det.create_user%TYPE DEFAULT NULL,
        create_time_in             IN drug_presc_det.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN drug_presc_det.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN drug_presc_det.update_user%TYPE DEFAULT NULL,
        update_time_in             IN drug_presc_det.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN drug_presc_det.update_institution%TYPE DEFAULT NULL,
        flg_mix_instr_in           IN drug_presc_det.flg_mix_instr%TYPE DEFAULT NULL,
        mix_instr_in               IN drug_presc_det.mix_instr%TYPE DEFAULT NULL,
        id_presc_instr_det_in      IN drug_presc_det.id_presc_instr_det%TYPE DEFAULT NULL,
        num_schemes_in             IN drug_presc_det.num_schemes%TYPE DEFAULT NULL,
        id_justify_reason_in       IN drug_presc_det.id_justify_reason%TYPE DEFAULT NULL,
        justify_reason_in          IN drug_presc_det.justify_reason%TYPE DEFAULT NULL,
        id_presc_directions_in     IN drug_presc_det.id_presc_directions%TYPE DEFAULT NULL,
        flg_free_text_in           IN drug_presc_det.flg_free_text%TYPE DEFAULT NULL,
        id_task_dependency_in      IN drug_presc_det.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in   IN drug_presc_det.flg_req_origin_module%TYPE DEFAULT 'D',
        take_in_case_in            IN drug_presc_det.take_in_case%TYPE DEFAULT NULL,
        id_vacc_manufacturer_in    IN drug_presc_det.id_vacc_manufacturer%TYPE DEFAULT NULL,
        code_mvx_in                IN drug_presc_det.code_mvx%TYPE DEFAULT NULL,
        id_cdr_call_in             IN drug_presc_det.id_cdr_call%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT table_varchar
    ) IS
    BEGIN
    
        INSERT INTO drug_presc_det
            (id_drug_presc_det,
             id_drug_prescription,
             notes,
             flg_take_type,
             qty,
             rate,
             flg_status,
             id_prof_cancel,
             notes_cancel,
             notes_justif,
             INTERVAL,
             takes,
             dosage,
             flg_ci,
             flg_cheaper,
             flg_justif,
             flg_attention,
             flg_attention_print,
             id_drug_despachos,
             dosage_description,
             value_bolus,
             value_drip,
             id_unit_measure,
             id_unit_measure_bolus,
             id_unit_measure_drip,
             dt_begin_tstz,
             dt_end_tstz,
             dt_cancel_tstz,
             dt_end_presc_tstz,
             dt_end_bottle_tstz,
             dt_order,
             id_prof_order,
             id_order_type,
             flg_co_sign,
             dt_co_sign,
             notes_co_sign,
             id_prof_co_sign,
             duration,
             id_unit_measure_dur,
             frequency,
             id_unit_measure_freq,
             dt_start_presc_tstz,
             refill,
             qty_inst,
             unit_measure_inst,
             id_pat_medication_list,
             dt_last_change,
             route_id,
             id_justification,
             vers,
             flg_interac_med,
             flg_interac_allergy,
             id_drug,
             id_other_product,
             desc_other_product,
             dt_hold_begin,
             dt_hold_end,
             flg_modified,
             status_flg,
             status_icon,
             status_msg,
             status_str,
             dispense,
             unit_measure_dispense,
             flg_dosage_check,
             id_combination_compound,
             id_irregular_directions,
             create_user,
             create_time,
             create_institution,
             update_user,
             update_time,
             update_institution,
             flg_mix_instr,
             mix_instr,
             id_presc_instr_det,
             num_schemes,
             id_justify_reason,
             justify_reason,
             id_presc_directions,
             flg_free_text,
             id_task_dependency,
             flg_req_origin_module,
             take_in_case,
             id_vacc_manufacturer,
             code_mvx,
             id_cdr_call)
        VALUES
            (id_drug_presc_det_in,
             id_drug_prescription_in,
             notes_in,
             flg_take_type_in,
             qty_in,
             rate_in,
             flg_status_in,
             id_prof_cancel_in,
             notes_cancel_in,
             notes_justif_in,
             interval_in,
             takes_in,
             dosage_in,
             flg_ci_in,
             flg_cheaper_in,
             flg_justif_in,
             flg_attention_in,
             flg_attention_print_in,
             id_drug_despachos_in,
             dosage_description_in,
             value_bolus_in,
             value_drip_in,
             id_unit_measure_in,
             id_unit_measure_bolus_in,
             id_unit_measure_drip_in,
             dt_begin_tstz_in,
             dt_end_tstz_in,
             dt_cancel_tstz_in,
             dt_end_presc_tstz_in,
             dt_end_bottle_tstz_in,
             dt_order_in,
             id_prof_order_in,
             id_order_type_in,
             flg_co_sign_in,
             dt_co_sign_in,
             notes_co_sign_in,
             id_prof_co_sign_in,
             duration_in,
             id_unit_measure_dur_in,
             frequency_in,
             id_unit_measure_freq_in,
             dt_start_presc_tstz_in,
             refill_in,
             qty_inst_in,
             unit_measure_inst_in,
             id_pat_medication_list_in,
             dt_last_change_in,
             route_id_in,
             id_justification_in,
             vers_in,
             flg_interac_med_in,
             flg_interac_allergy_in,
             id_drug_in,
             id_other_product_in,
             desc_other_product_in,
             dt_hold_begin_in,
             dt_hold_end_in,
             flg_modified_in,
             status_flg_in,
             status_icon_in,
             status_msg_in,
             status_str_in,
             dispense_in,
             unit_measure_dispense_in,
             flg_dosage_check_in,
             id_combination_compound_in,
             id_irregular_directions_in,
             create_user_in,
             create_time_in,
             create_institution_in,
             update_user_in,
             update_time_in,
             update_institution_in,
             flg_mix_instr_in,
             mix_instr_in,
             id_presc_instr_det_in,
             num_schemes_in,
             id_justify_reason_in,
             justify_reason_in,
             id_presc_directions_in,
             flg_free_text_in,
             id_task_dependency_in,
             flg_req_origin_module_in,
             take_in_case_in,
             id_vacc_manufacturer_in,
             code_mvx_in,
             id_cdr_call_in)
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN dup_val_on_index THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner           all_constraints.owner%TYPE;
                    l_name            all_constraints.constraint_name%TYPE;
                    l_err_instance_id PLS_INTEGER;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF FALSE
                    THEN
                        NULL; -- Placeholder in case no unique indexes
                    ELSIF l_name = 'DPD_IDDPD_IDDP_IDD_FLGST_IDX'
                    THEN
                        pk_alert_exceptions.register_error(error_name_in       => 'DUPLICATE-VALUE',
                                                           err_instance_id_out => l_err_instance_id,
                                                           text_in             => 'Violation of unique index "DPD_IDDPD_IDDP_IDD_FLGST_IDX"');
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'OWNER',
                                                        value_in           => l_owner,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'CONSTRAINT_NAME',
                                                        value_in           => l_name,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'TABLE_NAME',
                                                        value_in           => 'DRUG_PRESC_DET',
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_DRUG_PRESC_DET',
                                                        value_in           => id_drug_presc_det_in,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_DRUG_PRESCRIPTION',
                                                        value_in           => id_drug_prescription_in,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_DRUG',
                                                        value_in           => id_drug_in,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_STATUS',
                                                        value_in           => flg_status_in,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_err_instance_id);
                    ELSIF l_name = 'DPD_PDIR_IDX'
                    THEN
                        pk_alert_exceptions.register_error(error_name_in       => 'DUPLICATE-VALUE',
                                                           err_instance_id_out => l_err_instance_id,
                                                           text_in             => 'Violation of unique index "DPD_PDIR_IDX"');
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'OWNER',
                                                        value_in           => l_owner,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'CONSTRAINT_NAME',
                                                        value_in           => l_name,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'TABLE_NAME',
                                                        value_in           => 'DRUG_PRESC_DET',
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PRESC_DIRECTIONS',
                                                        value_in           => id_presc_directions_in,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_err_instance_id);
                    ELSE
                        pk_alert_exceptions.raise_error(error_name_in => 'DUPLICATE-VALUE',
                                                        name1_in      => 'OWNER',
                                                        value1_in     => l_owner,
                                                        name2_in      => 'CONSTRAINT_NAME',
                                                        value2_in     => l_name,
                                                        name3_in      => 'TABLE_NAME',
                                                        value3_in     => 'DRUG_PRESC_DET');
                    END IF;
                END;
            END IF;
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    IF l_name = 'DPD_CC_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_CDR_CALL',
                                                        value_in           => id_cdr_call_in);
                    END IF;
                    IF l_name = 'DPD_ID_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_IRREGULAR_DIRECTIONS',
                                                        value_in           => id_irregular_directions_in);
                    END IF;
                    IF l_name = 'DPD_IPML_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PAT_MEDICATION_LIST',
                                                        value_in           => id_pat_medication_list_in);
                    END IF;
                    IF l_name = 'DPD_JINT_IDJ_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_JUSTIFICATION',
                                                        value_in           => id_justification_in);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'VERS',
                                                        value_in           => vers_in);
                    END IF;
                    IF l_name = 'DPD_JRS_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_JUSTIFY_REASON',
                                                        value_in           => id_justify_reason_in);
                    END IF;
                    IF l_name = 'DPD_MED_INT_ID_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_DRUG',
                                                        value_in           => id_drug_in);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'VERS',
                                                        value_in           => vers_in);
                    END IF;
                    IF l_name = 'DPD_PDIR_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PRESC_DIRECTIONS',
                                                        value_in           => id_presc_directions_in);
                    END IF;
                    IF l_name = 'DPD_RINT_IDR_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ROUTE_ID',
                                                        value_in           => route_id_in);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'VERS',
                                                        value_in           => vers_in);
                    END IF;
                    IF l_name = 'DPDT_DPN_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_DRUG_PRESCRIPTION',
                                                        value_in           => id_drug_prescription_in);
                    END IF;
                    IF l_name = 'DPDT_DRDP_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_DRUG_DESPACHOS',
                                                        value_in           => id_drug_despachos_in);
                    END IF;
                    IF l_name = 'DPDT_PIST_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PRESC_INSTR_DET',
                                                        value_in           => id_presc_instr_det_in);
                    END IF;
                    IF l_name = 'DPDT_PROF_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_CANCEL',
                                                        value_in           => id_prof_cancel_in);
                    END IF;
                    IF l_name = 'DPDT_TDETD_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_TASK_DEPENDENCY',
                                                        value_in           => id_task_dependency_in);
                    END IF;
                    IF l_name = 'DPDT_UM_BOLUS_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_UNIT_MEASURE_BOLUS',
                                                        value_in           => id_unit_measure_bolus_in);
                    END IF;
                    IF l_name = 'DPDT_UM_DRIP'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_UNIT_MEASURE_DRIP',
                                                        value_in           => id_unit_measure_drip_in);
                    END IF;
                    IF l_name = 'DPDT_UM_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_UNIT_MEASURE',
                                                        value_in           => id_unit_measure_in);
                    END IF;
                    IF l_name = 'DPD_UME_DISP_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'UNIT_MEASURE_DISPENSE',
                                                        value_in           => unit_measure_dispense_in);
                    END IF;
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
        WHEN e_null_column_value THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    v_errm    VARCHAR2(2000) := dbms_utility.format_error_stack;
                    dot1loc   INTEGER;
                    dot2loc   INTEGER;
                    parenloc  INTEGER;
                    c_owner   all_constraints.owner%TYPE;
                    c_tabname all_tables.table_name%TYPE;
                    c_colname all_tab_columns.column_name%TYPE;
                BEGIN
                    dot1loc   := instr(v_errm, '.', 1, 1);
                    dot2loc   := instr(v_errm, '.', 1, 2);
                    parenloc  := instr(v_errm, '(');
                    c_owner   := substr(v_errm, parenloc + 1, dot1loc - parenloc - 1);
                    c_tabname := substr(v_errm, dot1loc + 1, dot2loc - dot1loc - 1);
                    c_colname := substr(v_errm, dot2loc + 1, instr(v_errm, ')') - dot2loc - 1);
                
                    pk_alert_exceptions.raise_error(error_name_in => 'COLUMN-CANNOT-BE-NULL',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => c_owner,
                                                    name2_in      => 'TABLE_NAME',
                                                    value2_in     => c_tabname,
                                                    name3_in      => 'COLUMN_NAME',
                                                    value3_in     => c_colname);
                END;
            END IF;
    END ins;

    PROCEDURE ins
    (
        id_drug_presc_det_in       IN drug_presc_det.id_drug_presc_det%TYPE,
        id_drug_prescription_in    IN drug_presc_det.id_drug_prescription%TYPE DEFAULT NULL,
        notes_in                   IN drug_presc_det.notes%TYPE DEFAULT NULL,
        flg_take_type_in           IN drug_presc_det.flg_take_type%TYPE DEFAULT NULL,
        qty_in                     IN drug_presc_det.qty%TYPE DEFAULT NULL,
        rate_in                    IN drug_presc_det.rate%TYPE DEFAULT NULL,
        flg_status_in              IN drug_presc_det.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in          IN drug_presc_det.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in            IN drug_presc_det.notes_cancel%TYPE DEFAULT NULL,
        notes_justif_in            IN drug_presc_det.notes_justif%TYPE DEFAULT NULL,
        interval_in                IN drug_presc_det.interval%TYPE DEFAULT NULL,
        takes_in                   IN drug_presc_det.takes%TYPE DEFAULT NULL,
        dosage_in                  IN drug_presc_det.dosage%TYPE DEFAULT NULL,
        flg_ci_in                  IN drug_presc_det.flg_ci%TYPE DEFAULT 'N',
        flg_cheaper_in             IN drug_presc_det.flg_cheaper%TYPE DEFAULT 'N',
        flg_justif_in              IN drug_presc_det.flg_justif%TYPE DEFAULT 'N',
        flg_attention_in           IN drug_presc_det.flg_attention%TYPE DEFAULT NULL,
        flg_attention_print_in     IN drug_presc_det.flg_attention_print%TYPE DEFAULT NULL,
        id_drug_despachos_in       IN drug_presc_det.id_drug_despachos%TYPE DEFAULT NULL,
        dosage_description_in      IN drug_presc_det.dosage_description%TYPE DEFAULT NULL,
        value_bolus_in             IN drug_presc_det.value_bolus%TYPE DEFAULT NULL,
        value_drip_in              IN drug_presc_det.value_drip%TYPE DEFAULT NULL,
        id_unit_measure_in         IN drug_presc_det.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_bolus_in   IN drug_presc_det.id_unit_measure_bolus%TYPE DEFAULT NULL,
        id_unit_measure_drip_in    IN drug_presc_det.id_unit_measure_drip%TYPE DEFAULT NULL,
        dt_begin_tstz_in           IN drug_presc_det.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in             IN drug_presc_det.dt_end_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in          IN drug_presc_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_end_presc_tstz_in       IN drug_presc_det.dt_end_presc_tstz%TYPE DEFAULT NULL,
        dt_end_bottle_tstz_in      IN drug_presc_det.dt_end_bottle_tstz%TYPE DEFAULT NULL,
        dt_order_in                IN drug_presc_det.dt_order%TYPE DEFAULT NULL,
        id_prof_order_in           IN drug_presc_det.id_prof_order%TYPE DEFAULT NULL,
        id_order_type_in           IN drug_presc_det.id_order_type%TYPE DEFAULT NULL,
        flg_co_sign_in             IN drug_presc_det.flg_co_sign%TYPE DEFAULT 'N',
        dt_co_sign_in              IN drug_presc_det.dt_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_in           IN drug_presc_det.notes_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_in         IN drug_presc_det.id_prof_co_sign%TYPE DEFAULT NULL,
        duration_in                IN drug_presc_det.duration%TYPE DEFAULT NULL,
        id_unit_measure_dur_in     IN drug_presc_det.id_unit_measure_dur%TYPE DEFAULT NULL,
        frequency_in               IN drug_presc_det.frequency%TYPE DEFAULT NULL,
        id_unit_measure_freq_in    IN drug_presc_det.id_unit_measure_freq%TYPE DEFAULT NULL,
        dt_start_presc_tstz_in     IN drug_presc_det.dt_start_presc_tstz%TYPE DEFAULT NULL,
        refill_in                  IN drug_presc_det.refill%TYPE DEFAULT NULL,
        qty_inst_in                IN drug_presc_det.qty_inst%TYPE DEFAULT NULL,
        unit_measure_inst_in       IN drug_presc_det.unit_measure_inst%TYPE DEFAULT NULL,
        id_pat_medication_list_in  IN drug_presc_det.id_pat_medication_list%TYPE DEFAULT NULL,
        dt_last_change_in          IN drug_presc_det.dt_last_change%TYPE DEFAULT NULL,
        route_id_in                IN drug_presc_det.route_id%TYPE DEFAULT NULL,
        id_justification_in        IN drug_presc_det.id_justification%TYPE DEFAULT NULL,
        vers_in                    IN drug_presc_det.vers%TYPE DEFAULT NULL,
        flg_interac_med_in         IN drug_presc_det.flg_interac_med%TYPE DEFAULT 'N',
        flg_interac_allergy_in     IN drug_presc_det.flg_interac_allergy%TYPE DEFAULT 'N',
        id_drug_in                 IN drug_presc_det.id_drug%TYPE DEFAULT NULL,
        id_other_product_in        IN drug_presc_det.id_other_product%TYPE DEFAULT NULL,
        desc_other_product_in      IN drug_presc_det.desc_other_product%TYPE DEFAULT NULL,
        dt_hold_begin_in           IN drug_presc_det.dt_hold_begin%TYPE DEFAULT NULL,
        dt_hold_end_in             IN drug_presc_det.dt_hold_end%TYPE DEFAULT NULL,
        flg_modified_in            IN drug_presc_det.flg_modified%TYPE DEFAULT 'N',
        status_flg_in              IN drug_presc_det.status_flg%TYPE DEFAULT NULL,
        status_icon_in             IN drug_presc_det.status_icon%TYPE DEFAULT NULL,
        status_msg_in              IN drug_presc_det.status_msg%TYPE DEFAULT NULL,
        status_str_in              IN drug_presc_det.status_str%TYPE DEFAULT NULL,
        dispense_in                IN drug_presc_det.dispense%TYPE DEFAULT NULL,
        unit_measure_dispense_in   IN drug_presc_det.unit_measure_dispense%TYPE DEFAULT NULL,
        flg_dosage_check_in        IN drug_presc_det.flg_dosage_check%TYPE DEFAULT NULL,
        id_combination_compound_in IN drug_presc_det.id_combination_compound%TYPE DEFAULT NULL,
        id_irregular_directions_in IN drug_presc_det.id_irregular_directions%TYPE DEFAULT NULL,
        create_user_in             IN drug_presc_det.create_user%TYPE DEFAULT NULL,
        create_time_in             IN drug_presc_det.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN drug_presc_det.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN drug_presc_det.update_user%TYPE DEFAULT NULL,
        update_time_in             IN drug_presc_det.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN drug_presc_det.update_institution%TYPE DEFAULT NULL,
        flg_mix_instr_in           IN drug_presc_det.flg_mix_instr%TYPE DEFAULT NULL,
        mix_instr_in               IN drug_presc_det.mix_instr%TYPE DEFAULT NULL,
        id_presc_instr_det_in      IN drug_presc_det.id_presc_instr_det%TYPE DEFAULT NULL,
        num_schemes_in             IN drug_presc_det.num_schemes%TYPE DEFAULT NULL,
        id_justify_reason_in       IN drug_presc_det.id_justify_reason%TYPE DEFAULT NULL,
        justify_reason_in          IN drug_presc_det.justify_reason%TYPE DEFAULT NULL,
        id_presc_directions_in     IN drug_presc_det.id_presc_directions%TYPE DEFAULT NULL,
        flg_free_text_in           IN drug_presc_det.flg_free_text%TYPE DEFAULT NULL,
        id_task_dependency_in      IN drug_presc_det.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in   IN drug_presc_det.flg_req_origin_module%TYPE DEFAULT 'D',
        take_in_case_in            IN drug_presc_det.take_in_case%TYPE DEFAULT NULL,
        id_vacc_manufacturer_in    IN drug_presc_det.id_vacc_manufacturer%TYPE DEFAULT NULL,
        code_mvx_in                IN drug_presc_det.code_mvx%TYPE DEFAULT NULL,
        id_cdr_call_in             IN drug_presc_det.id_cdr_call%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
    
        ins(id_drug_presc_det_in       => id_drug_presc_det_in,
            id_drug_prescription_in    => id_drug_prescription_in,
            notes_in                   => notes_in,
            flg_take_type_in           => flg_take_type_in,
            qty_in                     => qty_in,
            rate_in                    => rate_in,
            flg_status_in              => flg_status_in,
            id_prof_cancel_in          => id_prof_cancel_in,
            notes_cancel_in            => notes_cancel_in,
            notes_justif_in            => notes_justif_in,
            interval_in                => interval_in,
            takes_in                   => takes_in,
            dosage_in                  => dosage_in,
            flg_ci_in                  => flg_ci_in,
            flg_cheaper_in             => flg_cheaper_in,
            flg_justif_in              => flg_justif_in,
            flg_attention_in           => flg_attention_in,
            flg_attention_print_in     => flg_attention_print_in,
            id_drug_despachos_in       => id_drug_despachos_in,
            dosage_description_in      => dosage_description_in,
            value_bolus_in             => value_bolus_in,
            value_drip_in              => value_drip_in,
            id_unit_measure_in         => id_unit_measure_in,
            id_unit_measure_bolus_in   => id_unit_measure_bolus_in,
            id_unit_measure_drip_in    => id_unit_measure_drip_in,
            dt_begin_tstz_in           => dt_begin_tstz_in,
            dt_end_tstz_in             => dt_end_tstz_in,
            dt_cancel_tstz_in          => dt_cancel_tstz_in,
            dt_end_presc_tstz_in       => dt_end_presc_tstz_in,
            dt_end_bottle_tstz_in      => dt_end_bottle_tstz_in,
            dt_order_in                => dt_order_in,
            id_prof_order_in           => id_prof_order_in,
            id_order_type_in           => id_order_type_in,
            flg_co_sign_in             => flg_co_sign_in,
            dt_co_sign_in              => dt_co_sign_in,
            notes_co_sign_in           => notes_co_sign_in,
            id_prof_co_sign_in         => id_prof_co_sign_in,
            duration_in                => duration_in,
            id_unit_measure_dur_in     => id_unit_measure_dur_in,
            frequency_in               => frequency_in,
            id_unit_measure_freq_in    => id_unit_measure_freq_in,
            dt_start_presc_tstz_in     => dt_start_presc_tstz_in,
            refill_in                  => refill_in,
            qty_inst_in                => qty_inst_in,
            unit_measure_inst_in       => unit_measure_inst_in,
            id_pat_medication_list_in  => id_pat_medication_list_in,
            dt_last_change_in          => dt_last_change_in,
            route_id_in                => route_id_in,
            id_justification_in        => id_justification_in,
            vers_in                    => vers_in,
            flg_interac_med_in         => flg_interac_med_in,
            flg_interac_allergy_in     => flg_interac_allergy_in,
            id_drug_in                 => id_drug_in,
            id_other_product_in        => id_other_product_in,
            desc_other_product_in      => desc_other_product_in,
            dt_hold_begin_in           => dt_hold_begin_in,
            dt_hold_end_in             => dt_hold_end_in,
            flg_modified_in            => flg_modified_in,
            status_flg_in              => status_flg_in,
            status_icon_in             => status_icon_in,
            status_msg_in              => status_msg_in,
            status_str_in              => status_str_in,
            dispense_in                => dispense_in,
            unit_measure_dispense_in   => unit_measure_dispense_in,
            flg_dosage_check_in        => flg_dosage_check_in,
            id_combination_compound_in => id_combination_compound_in,
            id_irregular_directions_in => id_irregular_directions_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            flg_mix_instr_in           => flg_mix_instr_in,
            mix_instr_in               => mix_instr_in,
            id_presc_instr_det_in      => id_presc_instr_det_in,
            num_schemes_in             => num_schemes_in,
            id_justify_reason_in       => id_justify_reason_in,
            justify_reason_in          => justify_reason_in,
            id_presc_directions_in     => id_presc_directions_in,
            flg_free_text_in           => flg_free_text_in,
            id_task_dependency_in      => id_task_dependency_in,
            flg_req_origin_module_in   => flg_req_origin_module_in,
            take_in_case_in            => take_in_case_in,
            id_vacc_manufacturer_in    => id_vacc_manufacturer_in,
            code_mvx_in                => code_mvx_in,
            id_cdr_call_in             => id_cdr_call_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN drug_presc_det%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_rec drug_presc_det%ROWTYPE := rec_in;
    BEGIN
        IF gen_pky_in
        THEN
            l_rec.id_drug_presc_det := next_key(sequence_in);
        END IF;
        ins(id_drug_presc_det_in       => l_rec.id_drug_presc_det,
            id_drug_prescription_in    => l_rec.id_drug_prescription,
            notes_in                   => l_rec.notes,
            flg_take_type_in           => l_rec.flg_take_type,
            qty_in                     => l_rec.qty,
            rate_in                    => l_rec.rate,
            flg_status_in              => l_rec.flg_status,
            id_prof_cancel_in          => l_rec.id_prof_cancel,
            notes_cancel_in            => l_rec.notes_cancel,
            notes_justif_in            => l_rec.notes_justif,
            interval_in                => l_rec.interval,
            takes_in                   => l_rec.takes,
            dosage_in                  => l_rec.dosage,
            flg_ci_in                  => l_rec.flg_ci,
            flg_cheaper_in             => l_rec.flg_cheaper,
            flg_justif_in              => l_rec.flg_justif,
            flg_attention_in           => l_rec.flg_attention,
            flg_attention_print_in     => l_rec.flg_attention_print,
            id_drug_despachos_in       => l_rec.id_drug_despachos,
            dosage_description_in      => l_rec.dosage_description,
            value_bolus_in             => l_rec.value_bolus,
            value_drip_in              => l_rec.value_drip,
            id_unit_measure_in         => l_rec.id_unit_measure,
            id_unit_measure_bolus_in   => l_rec.id_unit_measure_bolus,
            id_unit_measure_drip_in    => l_rec.id_unit_measure_drip,
            dt_begin_tstz_in           => l_rec.dt_begin_tstz,
            dt_end_tstz_in             => l_rec.dt_end_tstz,
            dt_cancel_tstz_in          => l_rec.dt_cancel_tstz,
            dt_end_presc_tstz_in       => l_rec.dt_end_presc_tstz,
            dt_end_bottle_tstz_in      => l_rec.dt_end_bottle_tstz,
            dt_order_in                => l_rec.dt_order,
            id_prof_order_in           => l_rec.id_prof_order,
            id_order_type_in           => l_rec.id_order_type,
            flg_co_sign_in             => l_rec.flg_co_sign,
            dt_co_sign_in              => l_rec.dt_co_sign,
            notes_co_sign_in           => l_rec.notes_co_sign,
            id_prof_co_sign_in         => l_rec.id_prof_co_sign,
            duration_in                => l_rec.duration,
            id_unit_measure_dur_in     => l_rec.id_unit_measure_dur,
            frequency_in               => l_rec.frequency,
            id_unit_measure_freq_in    => l_rec.id_unit_measure_freq,
            dt_start_presc_tstz_in     => l_rec.dt_start_presc_tstz,
            refill_in                  => l_rec.refill,
            qty_inst_in                => l_rec.qty_inst,
            unit_measure_inst_in       => l_rec.unit_measure_inst,
            id_pat_medication_list_in  => l_rec.id_pat_medication_list,
            dt_last_change_in          => l_rec.dt_last_change,
            route_id_in                => l_rec.route_id,
            id_justification_in        => l_rec.id_justification,
            vers_in                    => l_rec.vers,
            flg_interac_med_in         => l_rec.flg_interac_med,
            flg_interac_allergy_in     => l_rec.flg_interac_allergy,
            id_drug_in                 => l_rec.id_drug,
            id_other_product_in        => l_rec.id_other_product,
            desc_other_product_in      => l_rec.desc_other_product,
            dt_hold_begin_in           => l_rec.dt_hold_begin,
            dt_hold_end_in             => l_rec.dt_hold_end,
            flg_modified_in            => l_rec.flg_modified,
            status_flg_in              => l_rec.status_flg,
            status_icon_in             => l_rec.status_icon,
            status_msg_in              => l_rec.status_msg,
            status_str_in              => l_rec.status_str,
            dispense_in                => l_rec.dispense,
            unit_measure_dispense_in   => l_rec.unit_measure_dispense,
            flg_dosage_check_in        => l_rec.flg_dosage_check,
            id_combination_compound_in => l_rec.id_combination_compound,
            id_irregular_directions_in => l_rec.id_irregular_directions,
            create_user_in             => l_rec.create_user,
            create_time_in             => l_rec.create_time,
            create_institution_in      => l_rec.create_institution,
            update_user_in             => l_rec.update_user,
            update_time_in             => l_rec.update_time,
            update_institution_in      => l_rec.update_institution,
            flg_mix_instr_in           => l_rec.flg_mix_instr,
            mix_instr_in               => l_rec.mix_instr,
            id_presc_instr_det_in      => l_rec.id_presc_instr_det,
            num_schemes_in             => l_rec.num_schemes,
            id_justify_reason_in       => l_rec.id_justify_reason,
            justify_reason_in          => l_rec.justify_reason,
            id_presc_directions_in     => l_rec.id_presc_directions,
            flg_free_text_in           => l_rec.flg_free_text,
            id_task_dependency_in      => l_rec.id_task_dependency,
            flg_req_origin_module_in   => l_rec.flg_req_origin_module,
            take_in_case_in            => l_rec.take_in_case,
            id_vacc_manufacturer_in    => l_rec.id_vacc_manufacturer,
            code_mvx_in                => l_rec.code_mvx,
            id_cdr_call_in             => l_rec.id_cdr_call,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN drug_presc_det%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
    
        ins(rec_in          => rec_in,
            gen_pky_in      => gen_pky_in,
            sequence_in     => sequence_in,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    
    END ins;

    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN drug_presc_det.id_drug_presc_det%TYPE
    
     IS
        retval drug_presc_det.id_drug_presc_det%TYPE;
    
    BEGIN
        IF sequence_in IS NULL
        THEN
            SELECT seq_drug_presc_det.nextval
              INTO retval
              FROM dual;
        ELSE
            EXECUTE IMMEDIATE 'SELECT ' || sequence_in || '.NEXTVAL FROM dual'
                INTO retval;
        END IF;
        RETURN retval;
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'SEQUENCE-GENERATION-FAILURE',
                                            name1_in      => 'SEQUENCE',
                                            value1_in     => nvl(sequence_in, 'seq_DRUG_PRESC_DET'));
    END next_key;

    PROCEDURE ins
    (
        id_drug_prescription_in    IN drug_presc_det.id_drug_prescription%TYPE DEFAULT NULL,
        notes_in                   IN drug_presc_det.notes%TYPE DEFAULT NULL,
        flg_take_type_in           IN drug_presc_det.flg_take_type%TYPE DEFAULT NULL,
        qty_in                     IN drug_presc_det.qty%TYPE DEFAULT NULL,
        rate_in                    IN drug_presc_det.rate%TYPE DEFAULT NULL,
        flg_status_in              IN drug_presc_det.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in          IN drug_presc_det.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in            IN drug_presc_det.notes_cancel%TYPE DEFAULT NULL,
        notes_justif_in            IN drug_presc_det.notes_justif%TYPE DEFAULT NULL,
        interval_in                IN drug_presc_det.interval%TYPE DEFAULT NULL,
        takes_in                   IN drug_presc_det.takes%TYPE DEFAULT NULL,
        dosage_in                  IN drug_presc_det.dosage%TYPE DEFAULT NULL,
        flg_ci_in                  IN drug_presc_det.flg_ci%TYPE DEFAULT 'N',
        flg_cheaper_in             IN drug_presc_det.flg_cheaper%TYPE DEFAULT 'N',
        flg_justif_in              IN drug_presc_det.flg_justif%TYPE DEFAULT 'N',
        flg_attention_in           IN drug_presc_det.flg_attention%TYPE DEFAULT NULL,
        flg_attention_print_in     IN drug_presc_det.flg_attention_print%TYPE DEFAULT NULL,
        id_drug_despachos_in       IN drug_presc_det.id_drug_despachos%TYPE DEFAULT NULL,
        dosage_description_in      IN drug_presc_det.dosage_description%TYPE DEFAULT NULL,
        value_bolus_in             IN drug_presc_det.value_bolus%TYPE DEFAULT NULL,
        value_drip_in              IN drug_presc_det.value_drip%TYPE DEFAULT NULL,
        id_unit_measure_in         IN drug_presc_det.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_bolus_in   IN drug_presc_det.id_unit_measure_bolus%TYPE DEFAULT NULL,
        id_unit_measure_drip_in    IN drug_presc_det.id_unit_measure_drip%TYPE DEFAULT NULL,
        dt_begin_tstz_in           IN drug_presc_det.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in             IN drug_presc_det.dt_end_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in          IN drug_presc_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_end_presc_tstz_in       IN drug_presc_det.dt_end_presc_tstz%TYPE DEFAULT NULL,
        dt_end_bottle_tstz_in      IN drug_presc_det.dt_end_bottle_tstz%TYPE DEFAULT NULL,
        dt_order_in                IN drug_presc_det.dt_order%TYPE DEFAULT NULL,
        id_prof_order_in           IN drug_presc_det.id_prof_order%TYPE DEFAULT NULL,
        id_order_type_in           IN drug_presc_det.id_order_type%TYPE DEFAULT NULL,
        flg_co_sign_in             IN drug_presc_det.flg_co_sign%TYPE DEFAULT 'N',
        dt_co_sign_in              IN drug_presc_det.dt_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_in           IN drug_presc_det.notes_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_in         IN drug_presc_det.id_prof_co_sign%TYPE DEFAULT NULL,
        duration_in                IN drug_presc_det.duration%TYPE DEFAULT NULL,
        id_unit_measure_dur_in     IN drug_presc_det.id_unit_measure_dur%TYPE DEFAULT NULL,
        frequency_in               IN drug_presc_det.frequency%TYPE DEFAULT NULL,
        id_unit_measure_freq_in    IN drug_presc_det.id_unit_measure_freq%TYPE DEFAULT NULL,
        dt_start_presc_tstz_in     IN drug_presc_det.dt_start_presc_tstz%TYPE DEFAULT NULL,
        refill_in                  IN drug_presc_det.refill%TYPE DEFAULT NULL,
        qty_inst_in                IN drug_presc_det.qty_inst%TYPE DEFAULT NULL,
        unit_measure_inst_in       IN drug_presc_det.unit_measure_inst%TYPE DEFAULT NULL,
        id_pat_medication_list_in  IN drug_presc_det.id_pat_medication_list%TYPE DEFAULT NULL,
        dt_last_change_in          IN drug_presc_det.dt_last_change%TYPE DEFAULT NULL,
        route_id_in                IN drug_presc_det.route_id%TYPE DEFAULT NULL,
        id_justification_in        IN drug_presc_det.id_justification%TYPE DEFAULT NULL,
        vers_in                    IN drug_presc_det.vers%TYPE DEFAULT NULL,
        flg_interac_med_in         IN drug_presc_det.flg_interac_med%TYPE DEFAULT 'N',
        flg_interac_allergy_in     IN drug_presc_det.flg_interac_allergy%TYPE DEFAULT 'N',
        id_drug_in                 IN drug_presc_det.id_drug%TYPE DEFAULT NULL,
        id_other_product_in        IN drug_presc_det.id_other_product%TYPE DEFAULT NULL,
        desc_other_product_in      IN drug_presc_det.desc_other_product%TYPE DEFAULT NULL,
        dt_hold_begin_in           IN drug_presc_det.dt_hold_begin%TYPE DEFAULT NULL,
        dt_hold_end_in             IN drug_presc_det.dt_hold_end%TYPE DEFAULT NULL,
        flg_modified_in            IN drug_presc_det.flg_modified%TYPE DEFAULT 'N',
        status_flg_in              IN drug_presc_det.status_flg%TYPE DEFAULT NULL,
        status_icon_in             IN drug_presc_det.status_icon%TYPE DEFAULT NULL,
        status_msg_in              IN drug_presc_det.status_msg%TYPE DEFAULT NULL,
        status_str_in              IN drug_presc_det.status_str%TYPE DEFAULT NULL,
        dispense_in                IN drug_presc_det.dispense%TYPE DEFAULT NULL,
        unit_measure_dispense_in   IN drug_presc_det.unit_measure_dispense%TYPE DEFAULT NULL,
        flg_dosage_check_in        IN drug_presc_det.flg_dosage_check%TYPE DEFAULT NULL,
        id_combination_compound_in IN drug_presc_det.id_combination_compound%TYPE DEFAULT NULL,
        id_irregular_directions_in IN drug_presc_det.id_irregular_directions%TYPE DEFAULT NULL,
        create_user_in             IN drug_presc_det.create_user%TYPE DEFAULT NULL,
        create_time_in             IN drug_presc_det.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN drug_presc_det.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN drug_presc_det.update_user%TYPE DEFAULT NULL,
        update_time_in             IN drug_presc_det.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN drug_presc_det.update_institution%TYPE DEFAULT NULL,
        flg_mix_instr_in           IN drug_presc_det.flg_mix_instr%TYPE DEFAULT NULL,
        mix_instr_in               IN drug_presc_det.mix_instr%TYPE DEFAULT NULL,
        id_presc_instr_det_in      IN drug_presc_det.id_presc_instr_det%TYPE DEFAULT NULL,
        num_schemes_in             IN drug_presc_det.num_schemes%TYPE DEFAULT NULL,
        id_justify_reason_in       IN drug_presc_det.id_justify_reason%TYPE DEFAULT NULL,
        justify_reason_in          IN drug_presc_det.justify_reason%TYPE DEFAULT NULL,
        id_presc_directions_in     IN drug_presc_det.id_presc_directions%TYPE DEFAULT NULL,
        flg_free_text_in           IN drug_presc_det.flg_free_text%TYPE DEFAULT NULL,
        id_task_dependency_in      IN drug_presc_det.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in   IN drug_presc_det.flg_req_origin_module%TYPE DEFAULT 'D',
        take_in_case_in            IN drug_presc_det.take_in_case%TYPE DEFAULT NULL,
        id_vacc_manufacturer_in    IN drug_presc_det.id_vacc_manufacturer%TYPE DEFAULT NULL,
        code_mvx_in                IN drug_presc_det.code_mvx%TYPE DEFAULT NULL,
        id_cdr_call_in             IN drug_presc_det.id_cdr_call%TYPE DEFAULT NULL,
        id_drug_presc_det_out      IN OUT drug_presc_det.id_drug_presc_det%TYPE,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT table_varchar
    ) IS
        l_pky drug_presc_det.id_drug_presc_det%TYPE := next_key;
    BEGIN
        ins(id_drug_presc_det_in       => l_pky,
            id_drug_prescription_in    => id_drug_prescription_in,
            notes_in                   => notes_in,
            flg_take_type_in           => flg_take_type_in,
            qty_in                     => qty_in,
            rate_in                    => rate_in,
            flg_status_in              => flg_status_in,
            id_prof_cancel_in          => id_prof_cancel_in,
            notes_cancel_in            => notes_cancel_in,
            notes_justif_in            => notes_justif_in,
            interval_in                => interval_in,
            takes_in                   => takes_in,
            dosage_in                  => dosage_in,
            flg_ci_in                  => flg_ci_in,
            flg_cheaper_in             => flg_cheaper_in,
            flg_justif_in              => flg_justif_in,
            flg_attention_in           => flg_attention_in,
            flg_attention_print_in     => flg_attention_print_in,
            id_drug_despachos_in       => id_drug_despachos_in,
            dosage_description_in      => dosage_description_in,
            value_bolus_in             => value_bolus_in,
            value_drip_in              => value_drip_in,
            id_unit_measure_in         => id_unit_measure_in,
            id_unit_measure_bolus_in   => id_unit_measure_bolus_in,
            id_unit_measure_drip_in    => id_unit_measure_drip_in,
            dt_begin_tstz_in           => dt_begin_tstz_in,
            dt_end_tstz_in             => dt_end_tstz_in,
            dt_cancel_tstz_in          => dt_cancel_tstz_in,
            dt_end_presc_tstz_in       => dt_end_presc_tstz_in,
            dt_end_bottle_tstz_in      => dt_end_bottle_tstz_in,
            dt_order_in                => dt_order_in,
            id_prof_order_in           => id_prof_order_in,
            id_order_type_in           => id_order_type_in,
            flg_co_sign_in             => flg_co_sign_in,
            dt_co_sign_in              => dt_co_sign_in,
            notes_co_sign_in           => notes_co_sign_in,
            id_prof_co_sign_in         => id_prof_co_sign_in,
            duration_in                => duration_in,
            id_unit_measure_dur_in     => id_unit_measure_dur_in,
            frequency_in               => frequency_in,
            id_unit_measure_freq_in    => id_unit_measure_freq_in,
            dt_start_presc_tstz_in     => dt_start_presc_tstz_in,
            refill_in                  => refill_in,
            qty_inst_in                => qty_inst_in,
            unit_measure_inst_in       => unit_measure_inst_in,
            id_pat_medication_list_in  => id_pat_medication_list_in,
            dt_last_change_in          => dt_last_change_in,
            route_id_in                => route_id_in,
            id_justification_in        => id_justification_in,
            vers_in                    => vers_in,
            flg_interac_med_in         => flg_interac_med_in,
            flg_interac_allergy_in     => flg_interac_allergy_in,
            id_drug_in                 => id_drug_in,
            id_other_product_in        => id_other_product_in,
            desc_other_product_in      => desc_other_product_in,
            dt_hold_begin_in           => dt_hold_begin_in,
            dt_hold_end_in             => dt_hold_end_in,
            flg_modified_in            => flg_modified_in,
            status_flg_in              => status_flg_in,
            status_icon_in             => status_icon_in,
            status_msg_in              => status_msg_in,
            status_str_in              => status_str_in,
            dispense_in                => dispense_in,
            unit_measure_dispense_in   => unit_measure_dispense_in,
            flg_dosage_check_in        => flg_dosage_check_in,
            id_combination_compound_in => id_combination_compound_in,
            id_irregular_directions_in => id_irregular_directions_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            flg_mix_instr_in           => flg_mix_instr_in,
            mix_instr_in               => mix_instr_in,
            id_presc_instr_det_in      => id_presc_instr_det_in,
            num_schemes_in             => num_schemes_in,
            id_justify_reason_in       => id_justify_reason_in,
            justify_reason_in          => justify_reason_in,
            id_presc_directions_in     => id_presc_directions_in,
            flg_free_text_in           => flg_free_text_in,
            id_task_dependency_in      => id_task_dependency_in,
            flg_req_origin_module_in   => flg_req_origin_module_in,
            take_in_case_in            => take_in_case_in,
            id_vacc_manufacturer_in    => id_vacc_manufacturer_in,
            code_mvx_in                => code_mvx_in,
            id_cdr_call_in             => id_cdr_call_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
        id_drug_presc_det_out := l_pky;
    END ins;

    PROCEDURE ins
    (
        id_drug_prescription_in    IN drug_presc_det.id_drug_prescription%TYPE DEFAULT NULL,
        notes_in                   IN drug_presc_det.notes%TYPE DEFAULT NULL,
        flg_take_type_in           IN drug_presc_det.flg_take_type%TYPE DEFAULT NULL,
        qty_in                     IN drug_presc_det.qty%TYPE DEFAULT NULL,
        rate_in                    IN drug_presc_det.rate%TYPE DEFAULT NULL,
        flg_status_in              IN drug_presc_det.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in          IN drug_presc_det.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in            IN drug_presc_det.notes_cancel%TYPE DEFAULT NULL,
        notes_justif_in            IN drug_presc_det.notes_justif%TYPE DEFAULT NULL,
        interval_in                IN drug_presc_det.interval%TYPE DEFAULT NULL,
        takes_in                   IN drug_presc_det.takes%TYPE DEFAULT NULL,
        dosage_in                  IN drug_presc_det.dosage%TYPE DEFAULT NULL,
        flg_ci_in                  IN drug_presc_det.flg_ci%TYPE DEFAULT 'N',
        flg_cheaper_in             IN drug_presc_det.flg_cheaper%TYPE DEFAULT 'N',
        flg_justif_in              IN drug_presc_det.flg_justif%TYPE DEFAULT 'N',
        flg_attention_in           IN drug_presc_det.flg_attention%TYPE DEFAULT NULL,
        flg_attention_print_in     IN drug_presc_det.flg_attention_print%TYPE DEFAULT NULL,
        id_drug_despachos_in       IN drug_presc_det.id_drug_despachos%TYPE DEFAULT NULL,
        dosage_description_in      IN drug_presc_det.dosage_description%TYPE DEFAULT NULL,
        value_bolus_in             IN drug_presc_det.value_bolus%TYPE DEFAULT NULL,
        value_drip_in              IN drug_presc_det.value_drip%TYPE DEFAULT NULL,
        id_unit_measure_in         IN drug_presc_det.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_bolus_in   IN drug_presc_det.id_unit_measure_bolus%TYPE DEFAULT NULL,
        id_unit_measure_drip_in    IN drug_presc_det.id_unit_measure_drip%TYPE DEFAULT NULL,
        dt_begin_tstz_in           IN drug_presc_det.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in             IN drug_presc_det.dt_end_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in          IN drug_presc_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_end_presc_tstz_in       IN drug_presc_det.dt_end_presc_tstz%TYPE DEFAULT NULL,
        dt_end_bottle_tstz_in      IN drug_presc_det.dt_end_bottle_tstz%TYPE DEFAULT NULL,
        dt_order_in                IN drug_presc_det.dt_order%TYPE DEFAULT NULL,
        id_prof_order_in           IN drug_presc_det.id_prof_order%TYPE DEFAULT NULL,
        id_order_type_in           IN drug_presc_det.id_order_type%TYPE DEFAULT NULL,
        flg_co_sign_in             IN drug_presc_det.flg_co_sign%TYPE DEFAULT 'N',
        dt_co_sign_in              IN drug_presc_det.dt_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_in           IN drug_presc_det.notes_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_in         IN drug_presc_det.id_prof_co_sign%TYPE DEFAULT NULL,
        duration_in                IN drug_presc_det.duration%TYPE DEFAULT NULL,
        id_unit_measure_dur_in     IN drug_presc_det.id_unit_measure_dur%TYPE DEFAULT NULL,
        frequency_in               IN drug_presc_det.frequency%TYPE DEFAULT NULL,
        id_unit_measure_freq_in    IN drug_presc_det.id_unit_measure_freq%TYPE DEFAULT NULL,
        dt_start_presc_tstz_in     IN drug_presc_det.dt_start_presc_tstz%TYPE DEFAULT NULL,
        refill_in                  IN drug_presc_det.refill%TYPE DEFAULT NULL,
        qty_inst_in                IN drug_presc_det.qty_inst%TYPE DEFAULT NULL,
        unit_measure_inst_in       IN drug_presc_det.unit_measure_inst%TYPE DEFAULT NULL,
        id_pat_medication_list_in  IN drug_presc_det.id_pat_medication_list%TYPE DEFAULT NULL,
        dt_last_change_in          IN drug_presc_det.dt_last_change%TYPE DEFAULT NULL,
        route_id_in                IN drug_presc_det.route_id%TYPE DEFAULT NULL,
        id_justification_in        IN drug_presc_det.id_justification%TYPE DEFAULT NULL,
        vers_in                    IN drug_presc_det.vers%TYPE DEFAULT NULL,
        flg_interac_med_in         IN drug_presc_det.flg_interac_med%TYPE DEFAULT 'N',
        flg_interac_allergy_in     IN drug_presc_det.flg_interac_allergy%TYPE DEFAULT 'N',
        id_drug_in                 IN drug_presc_det.id_drug%TYPE DEFAULT NULL,
        id_other_product_in        IN drug_presc_det.id_other_product%TYPE DEFAULT NULL,
        desc_other_product_in      IN drug_presc_det.desc_other_product%TYPE DEFAULT NULL,
        dt_hold_begin_in           IN drug_presc_det.dt_hold_begin%TYPE DEFAULT NULL,
        dt_hold_end_in             IN drug_presc_det.dt_hold_end%TYPE DEFAULT NULL,
        flg_modified_in            IN drug_presc_det.flg_modified%TYPE DEFAULT 'N',
        status_flg_in              IN drug_presc_det.status_flg%TYPE DEFAULT NULL,
        status_icon_in             IN drug_presc_det.status_icon%TYPE DEFAULT NULL,
        status_msg_in              IN drug_presc_det.status_msg%TYPE DEFAULT NULL,
        status_str_in              IN drug_presc_det.status_str%TYPE DEFAULT NULL,
        dispense_in                IN drug_presc_det.dispense%TYPE DEFAULT NULL,
        unit_measure_dispense_in   IN drug_presc_det.unit_measure_dispense%TYPE DEFAULT NULL,
        flg_dosage_check_in        IN drug_presc_det.flg_dosage_check%TYPE DEFAULT NULL,
        id_combination_compound_in IN drug_presc_det.id_combination_compound%TYPE DEFAULT NULL,
        id_irregular_directions_in IN drug_presc_det.id_irregular_directions%TYPE DEFAULT NULL,
        create_user_in             IN drug_presc_det.create_user%TYPE DEFAULT NULL,
        create_time_in             IN drug_presc_det.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN drug_presc_det.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN drug_presc_det.update_user%TYPE DEFAULT NULL,
        update_time_in             IN drug_presc_det.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN drug_presc_det.update_institution%TYPE DEFAULT NULL,
        flg_mix_instr_in           IN drug_presc_det.flg_mix_instr%TYPE DEFAULT NULL,
        mix_instr_in               IN drug_presc_det.mix_instr%TYPE DEFAULT NULL,
        id_presc_instr_det_in      IN drug_presc_det.id_presc_instr_det%TYPE DEFAULT NULL,
        num_schemes_in             IN drug_presc_det.num_schemes%TYPE DEFAULT NULL,
        id_justify_reason_in       IN drug_presc_det.id_justify_reason%TYPE DEFAULT NULL,
        justify_reason_in          IN drug_presc_det.justify_reason%TYPE DEFAULT NULL,
        id_presc_directions_in     IN drug_presc_det.id_presc_directions%TYPE DEFAULT NULL,
        flg_free_text_in           IN drug_presc_det.flg_free_text%TYPE DEFAULT NULL,
        id_task_dependency_in      IN drug_presc_det.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in   IN drug_presc_det.flg_req_origin_module%TYPE DEFAULT 'D',
        take_in_case_in            IN drug_presc_det.take_in_case%TYPE DEFAULT NULL,
        id_vacc_manufacturer_in    IN drug_presc_det.id_vacc_manufacturer%TYPE DEFAULT NULL,
        code_mvx_in                IN drug_presc_det.code_mvx%TYPE DEFAULT NULL,
        id_cdr_call_in             IN drug_presc_det.id_cdr_call%TYPE DEFAULT NULL,
        id_drug_presc_det_out      IN OUT drug_presc_det.id_drug_presc_det%TYPE,
        handle_error_in            IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_drug_prescription_in    => id_drug_prescription_in,
            notes_in                   => notes_in,
            flg_take_type_in           => flg_take_type_in,
            qty_in                     => qty_in,
            rate_in                    => rate_in,
            flg_status_in              => flg_status_in,
            id_prof_cancel_in          => id_prof_cancel_in,
            notes_cancel_in            => notes_cancel_in,
            notes_justif_in            => notes_justif_in,
            interval_in                => interval_in,
            takes_in                   => takes_in,
            dosage_in                  => dosage_in,
            flg_ci_in                  => flg_ci_in,
            flg_cheaper_in             => flg_cheaper_in,
            flg_justif_in              => flg_justif_in,
            flg_attention_in           => flg_attention_in,
            flg_attention_print_in     => flg_attention_print_in,
            id_drug_despachos_in       => id_drug_despachos_in,
            dosage_description_in      => dosage_description_in,
            value_bolus_in             => value_bolus_in,
            value_drip_in              => value_drip_in,
            id_unit_measure_in         => id_unit_measure_in,
            id_unit_measure_bolus_in   => id_unit_measure_bolus_in,
            id_unit_measure_drip_in    => id_unit_measure_drip_in,
            dt_begin_tstz_in           => dt_begin_tstz_in,
            dt_end_tstz_in             => dt_end_tstz_in,
            dt_cancel_tstz_in          => dt_cancel_tstz_in,
            dt_end_presc_tstz_in       => dt_end_presc_tstz_in,
            dt_end_bottle_tstz_in      => dt_end_bottle_tstz_in,
            dt_order_in                => dt_order_in,
            id_prof_order_in           => id_prof_order_in,
            id_order_type_in           => id_order_type_in,
            flg_co_sign_in             => flg_co_sign_in,
            dt_co_sign_in              => dt_co_sign_in,
            notes_co_sign_in           => notes_co_sign_in,
            id_prof_co_sign_in         => id_prof_co_sign_in,
            duration_in                => duration_in,
            id_unit_measure_dur_in     => id_unit_measure_dur_in,
            frequency_in               => frequency_in,
            id_unit_measure_freq_in    => id_unit_measure_freq_in,
            dt_start_presc_tstz_in     => dt_start_presc_tstz_in,
            refill_in                  => refill_in,
            qty_inst_in                => qty_inst_in,
            unit_measure_inst_in       => unit_measure_inst_in,
            id_pat_medication_list_in  => id_pat_medication_list_in,
            dt_last_change_in          => dt_last_change_in,
            route_id_in                => route_id_in,
            id_justification_in        => id_justification_in,
            vers_in                    => vers_in,
            flg_interac_med_in         => flg_interac_med_in,
            flg_interac_allergy_in     => flg_interac_allergy_in,
            id_drug_in                 => id_drug_in,
            id_other_product_in        => id_other_product_in,
            desc_other_product_in      => desc_other_product_in,
            dt_hold_begin_in           => dt_hold_begin_in,
            dt_hold_end_in             => dt_hold_end_in,
            flg_modified_in            => flg_modified_in,
            status_flg_in              => status_flg_in,
            status_icon_in             => status_icon_in,
            status_msg_in              => status_msg_in,
            status_str_in              => status_str_in,
            dispense_in                => dispense_in,
            unit_measure_dispense_in   => unit_measure_dispense_in,
            flg_dosage_check_in        => flg_dosage_check_in,
            id_combination_compound_in => id_combination_compound_in,
            id_irregular_directions_in => id_irregular_directions_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            flg_mix_instr_in           => flg_mix_instr_in,
            mix_instr_in               => mix_instr_in,
            id_presc_instr_det_in      => id_presc_instr_det_in,
            num_schemes_in             => num_schemes_in,
            id_justify_reason_in       => id_justify_reason_in,
            justify_reason_in          => justify_reason_in,
            id_presc_directions_in     => id_presc_directions_in,
            flg_free_text_in           => flg_free_text_in,
            id_task_dependency_in      => id_task_dependency_in,
            flg_req_origin_module_in   => flg_req_origin_module_in,
            take_in_case_in            => take_in_case_in,
            id_vacc_manufacturer_in    => id_vacc_manufacturer_in,
            code_mvx_in                => code_mvx_in,
            id_cdr_call_in             => id_cdr_call_in,
            id_drug_presc_det_out      => id_drug_presc_det_out,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END ins;

    FUNCTION ins
    (
        id_drug_prescription_in    IN drug_presc_det.id_drug_prescription%TYPE DEFAULT NULL,
        notes_in                   IN drug_presc_det.notes%TYPE DEFAULT NULL,
        flg_take_type_in           IN drug_presc_det.flg_take_type%TYPE DEFAULT NULL,
        qty_in                     IN drug_presc_det.qty%TYPE DEFAULT NULL,
        rate_in                    IN drug_presc_det.rate%TYPE DEFAULT NULL,
        flg_status_in              IN drug_presc_det.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in          IN drug_presc_det.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in            IN drug_presc_det.notes_cancel%TYPE DEFAULT NULL,
        notes_justif_in            IN drug_presc_det.notes_justif%TYPE DEFAULT NULL,
        interval_in                IN drug_presc_det.interval%TYPE DEFAULT NULL,
        takes_in                   IN drug_presc_det.takes%TYPE DEFAULT NULL,
        dosage_in                  IN drug_presc_det.dosage%TYPE DEFAULT NULL,
        flg_ci_in                  IN drug_presc_det.flg_ci%TYPE DEFAULT 'N',
        flg_cheaper_in             IN drug_presc_det.flg_cheaper%TYPE DEFAULT 'N',
        flg_justif_in              IN drug_presc_det.flg_justif%TYPE DEFAULT 'N',
        flg_attention_in           IN drug_presc_det.flg_attention%TYPE DEFAULT NULL,
        flg_attention_print_in     IN drug_presc_det.flg_attention_print%TYPE DEFAULT NULL,
        id_drug_despachos_in       IN drug_presc_det.id_drug_despachos%TYPE DEFAULT NULL,
        dosage_description_in      IN drug_presc_det.dosage_description%TYPE DEFAULT NULL,
        value_bolus_in             IN drug_presc_det.value_bolus%TYPE DEFAULT NULL,
        value_drip_in              IN drug_presc_det.value_drip%TYPE DEFAULT NULL,
        id_unit_measure_in         IN drug_presc_det.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_bolus_in   IN drug_presc_det.id_unit_measure_bolus%TYPE DEFAULT NULL,
        id_unit_measure_drip_in    IN drug_presc_det.id_unit_measure_drip%TYPE DEFAULT NULL,
        dt_begin_tstz_in           IN drug_presc_det.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in             IN drug_presc_det.dt_end_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in          IN drug_presc_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_end_presc_tstz_in       IN drug_presc_det.dt_end_presc_tstz%TYPE DEFAULT NULL,
        dt_end_bottle_tstz_in      IN drug_presc_det.dt_end_bottle_tstz%TYPE DEFAULT NULL,
        dt_order_in                IN drug_presc_det.dt_order%TYPE DEFAULT NULL,
        id_prof_order_in           IN drug_presc_det.id_prof_order%TYPE DEFAULT NULL,
        id_order_type_in           IN drug_presc_det.id_order_type%TYPE DEFAULT NULL,
        flg_co_sign_in             IN drug_presc_det.flg_co_sign%TYPE DEFAULT 'N',
        dt_co_sign_in              IN drug_presc_det.dt_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_in           IN drug_presc_det.notes_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_in         IN drug_presc_det.id_prof_co_sign%TYPE DEFAULT NULL,
        duration_in                IN drug_presc_det.duration%TYPE DEFAULT NULL,
        id_unit_measure_dur_in     IN drug_presc_det.id_unit_measure_dur%TYPE DEFAULT NULL,
        frequency_in               IN drug_presc_det.frequency%TYPE DEFAULT NULL,
        id_unit_measure_freq_in    IN drug_presc_det.id_unit_measure_freq%TYPE DEFAULT NULL,
        dt_start_presc_tstz_in     IN drug_presc_det.dt_start_presc_tstz%TYPE DEFAULT NULL,
        refill_in                  IN drug_presc_det.refill%TYPE DEFAULT NULL,
        qty_inst_in                IN drug_presc_det.qty_inst%TYPE DEFAULT NULL,
        unit_measure_inst_in       IN drug_presc_det.unit_measure_inst%TYPE DEFAULT NULL,
        id_pat_medication_list_in  IN drug_presc_det.id_pat_medication_list%TYPE DEFAULT NULL,
        dt_last_change_in          IN drug_presc_det.dt_last_change%TYPE DEFAULT NULL,
        route_id_in                IN drug_presc_det.route_id%TYPE DEFAULT NULL,
        id_justification_in        IN drug_presc_det.id_justification%TYPE DEFAULT NULL,
        vers_in                    IN drug_presc_det.vers%TYPE DEFAULT NULL,
        flg_interac_med_in         IN drug_presc_det.flg_interac_med%TYPE DEFAULT 'N',
        flg_interac_allergy_in     IN drug_presc_det.flg_interac_allergy%TYPE DEFAULT 'N',
        id_drug_in                 IN drug_presc_det.id_drug%TYPE DEFAULT NULL,
        id_other_product_in        IN drug_presc_det.id_other_product%TYPE DEFAULT NULL,
        desc_other_product_in      IN drug_presc_det.desc_other_product%TYPE DEFAULT NULL,
        dt_hold_begin_in           IN drug_presc_det.dt_hold_begin%TYPE DEFAULT NULL,
        dt_hold_end_in             IN drug_presc_det.dt_hold_end%TYPE DEFAULT NULL,
        flg_modified_in            IN drug_presc_det.flg_modified%TYPE DEFAULT 'N',
        status_flg_in              IN drug_presc_det.status_flg%TYPE DEFAULT NULL,
        status_icon_in             IN drug_presc_det.status_icon%TYPE DEFAULT NULL,
        status_msg_in              IN drug_presc_det.status_msg%TYPE DEFAULT NULL,
        status_str_in              IN drug_presc_det.status_str%TYPE DEFAULT NULL,
        dispense_in                IN drug_presc_det.dispense%TYPE DEFAULT NULL,
        unit_measure_dispense_in   IN drug_presc_det.unit_measure_dispense%TYPE DEFAULT NULL,
        flg_dosage_check_in        IN drug_presc_det.flg_dosage_check%TYPE DEFAULT NULL,
        id_combination_compound_in IN drug_presc_det.id_combination_compound%TYPE DEFAULT NULL,
        id_irregular_directions_in IN drug_presc_det.id_irregular_directions%TYPE DEFAULT NULL,
        create_user_in             IN drug_presc_det.create_user%TYPE DEFAULT NULL,
        create_time_in             IN drug_presc_det.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN drug_presc_det.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN drug_presc_det.update_user%TYPE DEFAULT NULL,
        update_time_in             IN drug_presc_det.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN drug_presc_det.update_institution%TYPE DEFAULT NULL,
        flg_mix_instr_in           IN drug_presc_det.flg_mix_instr%TYPE DEFAULT NULL,
        mix_instr_in               IN drug_presc_det.mix_instr%TYPE DEFAULT NULL,
        id_presc_instr_det_in      IN drug_presc_det.id_presc_instr_det%TYPE DEFAULT NULL,
        num_schemes_in             IN drug_presc_det.num_schemes%TYPE DEFAULT NULL,
        id_justify_reason_in       IN drug_presc_det.id_justify_reason%TYPE DEFAULT NULL,
        justify_reason_in          IN drug_presc_det.justify_reason%TYPE DEFAULT NULL,
        id_presc_directions_in     IN drug_presc_det.id_presc_directions%TYPE DEFAULT NULL,
        flg_free_text_in           IN drug_presc_det.flg_free_text%TYPE DEFAULT NULL,
        id_task_dependency_in      IN drug_presc_det.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in   IN drug_presc_det.flg_req_origin_module%TYPE DEFAULT 'D',
        take_in_case_in            IN drug_presc_det.take_in_case%TYPE DEFAULT NULL,
        id_vacc_manufacturer_in    IN drug_presc_det.id_vacc_manufacturer%TYPE DEFAULT NULL,
        code_mvx_in                IN drug_presc_det.code_mvx%TYPE DEFAULT NULL,
        id_cdr_call_in             IN drug_presc_det.id_cdr_call%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT table_varchar
    ) RETURN drug_presc_det.id_drug_presc_det%TYPE IS
        l_pky drug_presc_det.id_drug_presc_det%TYPE := next_key;
    BEGIN
        ins(id_drug_presc_det_in       => l_pky,
            id_drug_prescription_in    => id_drug_prescription_in,
            notes_in                   => notes_in,
            flg_take_type_in           => flg_take_type_in,
            qty_in                     => qty_in,
            rate_in                    => rate_in,
            flg_status_in              => flg_status_in,
            id_prof_cancel_in          => id_prof_cancel_in,
            notes_cancel_in            => notes_cancel_in,
            notes_justif_in            => notes_justif_in,
            interval_in                => interval_in,
            takes_in                   => takes_in,
            dosage_in                  => dosage_in,
            flg_ci_in                  => flg_ci_in,
            flg_cheaper_in             => flg_cheaper_in,
            flg_justif_in              => flg_justif_in,
            flg_attention_in           => flg_attention_in,
            flg_attention_print_in     => flg_attention_print_in,
            id_drug_despachos_in       => id_drug_despachos_in,
            dosage_description_in      => dosage_description_in,
            value_bolus_in             => value_bolus_in,
            value_drip_in              => value_drip_in,
            id_unit_measure_in         => id_unit_measure_in,
            id_unit_measure_bolus_in   => id_unit_measure_bolus_in,
            id_unit_measure_drip_in    => id_unit_measure_drip_in,
            dt_begin_tstz_in           => dt_begin_tstz_in,
            dt_end_tstz_in             => dt_end_tstz_in,
            dt_cancel_tstz_in          => dt_cancel_tstz_in,
            dt_end_presc_tstz_in       => dt_end_presc_tstz_in,
            dt_end_bottle_tstz_in      => dt_end_bottle_tstz_in,
            dt_order_in                => dt_order_in,
            id_prof_order_in           => id_prof_order_in,
            id_order_type_in           => id_order_type_in,
            flg_co_sign_in             => flg_co_sign_in,
            dt_co_sign_in              => dt_co_sign_in,
            notes_co_sign_in           => notes_co_sign_in,
            id_prof_co_sign_in         => id_prof_co_sign_in,
            duration_in                => duration_in,
            id_unit_measure_dur_in     => id_unit_measure_dur_in,
            frequency_in               => frequency_in,
            id_unit_measure_freq_in    => id_unit_measure_freq_in,
            dt_start_presc_tstz_in     => dt_start_presc_tstz_in,
            refill_in                  => refill_in,
            qty_inst_in                => qty_inst_in,
            unit_measure_inst_in       => unit_measure_inst_in,
            id_pat_medication_list_in  => id_pat_medication_list_in,
            dt_last_change_in          => dt_last_change_in,
            route_id_in                => route_id_in,
            id_justification_in        => id_justification_in,
            vers_in                    => vers_in,
            flg_interac_med_in         => flg_interac_med_in,
            flg_interac_allergy_in     => flg_interac_allergy_in,
            id_drug_in                 => id_drug_in,
            id_other_product_in        => id_other_product_in,
            desc_other_product_in      => desc_other_product_in,
            dt_hold_begin_in           => dt_hold_begin_in,
            dt_hold_end_in             => dt_hold_end_in,
            flg_modified_in            => flg_modified_in,
            status_flg_in              => status_flg_in,
            status_icon_in             => status_icon_in,
            status_msg_in              => status_msg_in,
            status_str_in              => status_str_in,
            dispense_in                => dispense_in,
            unit_measure_dispense_in   => unit_measure_dispense_in,
            flg_dosage_check_in        => flg_dosage_check_in,
            id_combination_compound_in => id_combination_compound_in,
            id_irregular_directions_in => id_irregular_directions_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            flg_mix_instr_in           => flg_mix_instr_in,
            mix_instr_in               => mix_instr_in,
            id_presc_instr_det_in      => id_presc_instr_det_in,
            num_schemes_in             => num_schemes_in,
            id_justify_reason_in       => id_justify_reason_in,
            justify_reason_in          => justify_reason_in,
            id_presc_directions_in     => id_presc_directions_in,
            flg_free_text_in           => flg_free_text_in,
            id_task_dependency_in      => id_task_dependency_in,
            flg_req_origin_module_in   => flg_req_origin_module_in,
            take_in_case_in            => take_in_case_in,
            id_vacc_manufacturer_in    => id_vacc_manufacturer_in,
            code_mvx_in                => code_mvx_in,
            id_cdr_call_in             => id_cdr_call_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
        RETURN l_pky;
    END ins;

    FUNCTION ins
    (
        id_drug_prescription_in    IN drug_presc_det.id_drug_prescription%TYPE DEFAULT NULL,
        notes_in                   IN drug_presc_det.notes%TYPE DEFAULT NULL,
        flg_take_type_in           IN drug_presc_det.flg_take_type%TYPE DEFAULT NULL,
        qty_in                     IN drug_presc_det.qty%TYPE DEFAULT NULL,
        rate_in                    IN drug_presc_det.rate%TYPE DEFAULT NULL,
        flg_status_in              IN drug_presc_det.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in          IN drug_presc_det.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in            IN drug_presc_det.notes_cancel%TYPE DEFAULT NULL,
        notes_justif_in            IN drug_presc_det.notes_justif%TYPE DEFAULT NULL,
        interval_in                IN drug_presc_det.interval%TYPE DEFAULT NULL,
        takes_in                   IN drug_presc_det.takes%TYPE DEFAULT NULL,
        dosage_in                  IN drug_presc_det.dosage%TYPE DEFAULT NULL,
        flg_ci_in                  IN drug_presc_det.flg_ci%TYPE DEFAULT 'N',
        flg_cheaper_in             IN drug_presc_det.flg_cheaper%TYPE DEFAULT 'N',
        flg_justif_in              IN drug_presc_det.flg_justif%TYPE DEFAULT 'N',
        flg_attention_in           IN drug_presc_det.flg_attention%TYPE DEFAULT NULL,
        flg_attention_print_in     IN drug_presc_det.flg_attention_print%TYPE DEFAULT NULL,
        id_drug_despachos_in       IN drug_presc_det.id_drug_despachos%TYPE DEFAULT NULL,
        dosage_description_in      IN drug_presc_det.dosage_description%TYPE DEFAULT NULL,
        value_bolus_in             IN drug_presc_det.value_bolus%TYPE DEFAULT NULL,
        value_drip_in              IN drug_presc_det.value_drip%TYPE DEFAULT NULL,
        id_unit_measure_in         IN drug_presc_det.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_bolus_in   IN drug_presc_det.id_unit_measure_bolus%TYPE DEFAULT NULL,
        id_unit_measure_drip_in    IN drug_presc_det.id_unit_measure_drip%TYPE DEFAULT NULL,
        dt_begin_tstz_in           IN drug_presc_det.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in             IN drug_presc_det.dt_end_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in          IN drug_presc_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_end_presc_tstz_in       IN drug_presc_det.dt_end_presc_tstz%TYPE DEFAULT NULL,
        dt_end_bottle_tstz_in      IN drug_presc_det.dt_end_bottle_tstz%TYPE DEFAULT NULL,
        dt_order_in                IN drug_presc_det.dt_order%TYPE DEFAULT NULL,
        id_prof_order_in           IN drug_presc_det.id_prof_order%TYPE DEFAULT NULL,
        id_order_type_in           IN drug_presc_det.id_order_type%TYPE DEFAULT NULL,
        flg_co_sign_in             IN drug_presc_det.flg_co_sign%TYPE DEFAULT 'N',
        dt_co_sign_in              IN drug_presc_det.dt_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_in           IN drug_presc_det.notes_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_in         IN drug_presc_det.id_prof_co_sign%TYPE DEFAULT NULL,
        duration_in                IN drug_presc_det.duration%TYPE DEFAULT NULL,
        id_unit_measure_dur_in     IN drug_presc_det.id_unit_measure_dur%TYPE DEFAULT NULL,
        frequency_in               IN drug_presc_det.frequency%TYPE DEFAULT NULL,
        id_unit_measure_freq_in    IN drug_presc_det.id_unit_measure_freq%TYPE DEFAULT NULL,
        dt_start_presc_tstz_in     IN drug_presc_det.dt_start_presc_tstz%TYPE DEFAULT NULL,
        refill_in                  IN drug_presc_det.refill%TYPE DEFAULT NULL,
        qty_inst_in                IN drug_presc_det.qty_inst%TYPE DEFAULT NULL,
        unit_measure_inst_in       IN drug_presc_det.unit_measure_inst%TYPE DEFAULT NULL,
        id_pat_medication_list_in  IN drug_presc_det.id_pat_medication_list%TYPE DEFAULT NULL,
        dt_last_change_in          IN drug_presc_det.dt_last_change%TYPE DEFAULT NULL,
        route_id_in                IN drug_presc_det.route_id%TYPE DEFAULT NULL,
        id_justification_in        IN drug_presc_det.id_justification%TYPE DEFAULT NULL,
        vers_in                    IN drug_presc_det.vers%TYPE DEFAULT NULL,
        flg_interac_med_in         IN drug_presc_det.flg_interac_med%TYPE DEFAULT 'N',
        flg_interac_allergy_in     IN drug_presc_det.flg_interac_allergy%TYPE DEFAULT 'N',
        id_drug_in                 IN drug_presc_det.id_drug%TYPE DEFAULT NULL,
        id_other_product_in        IN drug_presc_det.id_other_product%TYPE DEFAULT NULL,
        desc_other_product_in      IN drug_presc_det.desc_other_product%TYPE DEFAULT NULL,
        dt_hold_begin_in           IN drug_presc_det.dt_hold_begin%TYPE DEFAULT NULL,
        dt_hold_end_in             IN drug_presc_det.dt_hold_end%TYPE DEFAULT NULL,
        flg_modified_in            IN drug_presc_det.flg_modified%TYPE DEFAULT 'N',
        status_flg_in              IN drug_presc_det.status_flg%TYPE DEFAULT NULL,
        status_icon_in             IN drug_presc_det.status_icon%TYPE DEFAULT NULL,
        status_msg_in              IN drug_presc_det.status_msg%TYPE DEFAULT NULL,
        status_str_in              IN drug_presc_det.status_str%TYPE DEFAULT NULL,
        dispense_in                IN drug_presc_det.dispense%TYPE DEFAULT NULL,
        unit_measure_dispense_in   IN drug_presc_det.unit_measure_dispense%TYPE DEFAULT NULL,
        flg_dosage_check_in        IN drug_presc_det.flg_dosage_check%TYPE DEFAULT NULL,
        id_combination_compound_in IN drug_presc_det.id_combination_compound%TYPE DEFAULT NULL,
        id_irregular_directions_in IN drug_presc_det.id_irregular_directions%TYPE DEFAULT NULL,
        create_user_in             IN drug_presc_det.create_user%TYPE DEFAULT NULL,
        create_time_in             IN drug_presc_det.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN drug_presc_det.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN drug_presc_det.update_user%TYPE DEFAULT NULL,
        update_time_in             IN drug_presc_det.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN drug_presc_det.update_institution%TYPE DEFAULT NULL,
        flg_mix_instr_in           IN drug_presc_det.flg_mix_instr%TYPE DEFAULT NULL,
        mix_instr_in               IN drug_presc_det.mix_instr%TYPE DEFAULT NULL,
        id_presc_instr_det_in      IN drug_presc_det.id_presc_instr_det%TYPE DEFAULT NULL,
        num_schemes_in             IN drug_presc_det.num_schemes%TYPE DEFAULT NULL,
        id_justify_reason_in       IN drug_presc_det.id_justify_reason%TYPE DEFAULT NULL,
        justify_reason_in          IN drug_presc_det.justify_reason%TYPE DEFAULT NULL,
        id_presc_directions_in     IN drug_presc_det.id_presc_directions%TYPE DEFAULT NULL,
        flg_free_text_in           IN drug_presc_det.flg_free_text%TYPE DEFAULT NULL,
        id_task_dependency_in      IN drug_presc_det.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in   IN drug_presc_det.flg_req_origin_module%TYPE DEFAULT 'D',
        take_in_case_in            IN drug_presc_det.take_in_case%TYPE DEFAULT NULL,
        id_vacc_manufacturer_in    IN drug_presc_det.id_vacc_manufacturer%TYPE DEFAULT NULL,
        code_mvx_in                IN drug_presc_det.code_mvx%TYPE DEFAULT NULL,
        id_cdr_call_in             IN drug_presc_det.id_cdr_call%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE
    ) RETURN drug_presc_det.id_drug_presc_det%TYPE IS
        l_pky    drug_presc_det.id_drug_presc_det%TYPE := next_key;
        rows_out table_varchar;
    BEGIN
        ins(id_drug_presc_det_in       => l_pky,
            id_drug_prescription_in    => id_drug_prescription_in,
            notes_in                   => notes_in,
            flg_take_type_in           => flg_take_type_in,
            qty_in                     => qty_in,
            rate_in                    => rate_in,
            flg_status_in              => flg_status_in,
            id_prof_cancel_in          => id_prof_cancel_in,
            notes_cancel_in            => notes_cancel_in,
            notes_justif_in            => notes_justif_in,
            interval_in                => interval_in,
            takes_in                   => takes_in,
            dosage_in                  => dosage_in,
            flg_ci_in                  => flg_ci_in,
            flg_cheaper_in             => flg_cheaper_in,
            flg_justif_in              => flg_justif_in,
            flg_attention_in           => flg_attention_in,
            flg_attention_print_in     => flg_attention_print_in,
            id_drug_despachos_in       => id_drug_despachos_in,
            dosage_description_in      => dosage_description_in,
            value_bolus_in             => value_bolus_in,
            value_drip_in              => value_drip_in,
            id_unit_measure_in         => id_unit_measure_in,
            id_unit_measure_bolus_in   => id_unit_measure_bolus_in,
            id_unit_measure_drip_in    => id_unit_measure_drip_in,
            dt_begin_tstz_in           => dt_begin_tstz_in,
            dt_end_tstz_in             => dt_end_tstz_in,
            dt_cancel_tstz_in          => dt_cancel_tstz_in,
            dt_end_presc_tstz_in       => dt_end_presc_tstz_in,
            dt_end_bottle_tstz_in      => dt_end_bottle_tstz_in,
            dt_order_in                => dt_order_in,
            id_prof_order_in           => id_prof_order_in,
            id_order_type_in           => id_order_type_in,
            flg_co_sign_in             => flg_co_sign_in,
            dt_co_sign_in              => dt_co_sign_in,
            notes_co_sign_in           => notes_co_sign_in,
            id_prof_co_sign_in         => id_prof_co_sign_in,
            duration_in                => duration_in,
            id_unit_measure_dur_in     => id_unit_measure_dur_in,
            frequency_in               => frequency_in,
            id_unit_measure_freq_in    => id_unit_measure_freq_in,
            dt_start_presc_tstz_in     => dt_start_presc_tstz_in,
            refill_in                  => refill_in,
            qty_inst_in                => qty_inst_in,
            unit_measure_inst_in       => unit_measure_inst_in,
            id_pat_medication_list_in  => id_pat_medication_list_in,
            dt_last_change_in          => dt_last_change_in,
            route_id_in                => route_id_in,
            id_justification_in        => id_justification_in,
            vers_in                    => vers_in,
            flg_interac_med_in         => flg_interac_med_in,
            flg_interac_allergy_in     => flg_interac_allergy_in,
            id_drug_in                 => id_drug_in,
            id_other_product_in        => id_other_product_in,
            desc_other_product_in      => desc_other_product_in,
            dt_hold_begin_in           => dt_hold_begin_in,
            dt_hold_end_in             => dt_hold_end_in,
            flg_modified_in            => flg_modified_in,
            status_flg_in              => status_flg_in,
            status_icon_in             => status_icon_in,
            status_msg_in              => status_msg_in,
            status_str_in              => status_str_in,
            dispense_in                => dispense_in,
            unit_measure_dispense_in   => unit_measure_dispense_in,
            flg_dosage_check_in        => flg_dosage_check_in,
            id_combination_compound_in => id_combination_compound_in,
            id_irregular_directions_in => id_irregular_directions_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            flg_mix_instr_in           => flg_mix_instr_in,
            mix_instr_in               => mix_instr_in,
            id_presc_instr_det_in      => id_presc_instr_det_in,
            num_schemes_in             => num_schemes_in,
            id_justify_reason_in       => id_justify_reason_in,
            justify_reason_in          => justify_reason_in,
            id_presc_directions_in     => id_presc_directions_in,
            flg_free_text_in           => flg_free_text_in,
            id_task_dependency_in      => id_task_dependency_in,
            flg_req_origin_module_in   => flg_req_origin_module_in,
            take_in_case_in            => take_in_case_in,
            id_vacc_manufacturer_in    => id_vacc_manufacturer_in,
            code_mvx_in                => code_mvx_in,
            id_cdr_call_in             => id_cdr_call_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
        RETURN l_pky;
    END ins;

    PROCEDURE ins
    (
        id_drug_prescription_in    IN drug_presc_det.id_drug_prescription%TYPE DEFAULT NULL,
        notes_in                   IN drug_presc_det.notes%TYPE DEFAULT NULL,
        flg_take_type_in           IN drug_presc_det.flg_take_type%TYPE DEFAULT NULL,
        qty_in                     IN drug_presc_det.qty%TYPE DEFAULT NULL,
        rate_in                    IN drug_presc_det.rate%TYPE DEFAULT NULL,
        flg_status_in              IN drug_presc_det.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in          IN drug_presc_det.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in            IN drug_presc_det.notes_cancel%TYPE DEFAULT NULL,
        notes_justif_in            IN drug_presc_det.notes_justif%TYPE DEFAULT NULL,
        interval_in                IN drug_presc_det.interval%TYPE DEFAULT NULL,
        takes_in                   IN drug_presc_det.takes%TYPE DEFAULT NULL,
        dosage_in                  IN drug_presc_det.dosage%TYPE DEFAULT NULL,
        flg_ci_in                  IN drug_presc_det.flg_ci%TYPE DEFAULT 'N',
        flg_cheaper_in             IN drug_presc_det.flg_cheaper%TYPE DEFAULT 'N',
        flg_justif_in              IN drug_presc_det.flg_justif%TYPE DEFAULT 'N',
        flg_attention_in           IN drug_presc_det.flg_attention%TYPE DEFAULT NULL,
        flg_attention_print_in     IN drug_presc_det.flg_attention_print%TYPE DEFAULT NULL,
        id_drug_despachos_in       IN drug_presc_det.id_drug_despachos%TYPE DEFAULT NULL,
        dosage_description_in      IN drug_presc_det.dosage_description%TYPE DEFAULT NULL,
        value_bolus_in             IN drug_presc_det.value_bolus%TYPE DEFAULT NULL,
        value_drip_in              IN drug_presc_det.value_drip%TYPE DEFAULT NULL,
        id_unit_measure_in         IN drug_presc_det.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_bolus_in   IN drug_presc_det.id_unit_measure_bolus%TYPE DEFAULT NULL,
        id_unit_measure_drip_in    IN drug_presc_det.id_unit_measure_drip%TYPE DEFAULT NULL,
        dt_begin_tstz_in           IN drug_presc_det.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in             IN drug_presc_det.dt_end_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in          IN drug_presc_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_end_presc_tstz_in       IN drug_presc_det.dt_end_presc_tstz%TYPE DEFAULT NULL,
        dt_end_bottle_tstz_in      IN drug_presc_det.dt_end_bottle_tstz%TYPE DEFAULT NULL,
        dt_order_in                IN drug_presc_det.dt_order%TYPE DEFAULT NULL,
        id_prof_order_in           IN drug_presc_det.id_prof_order%TYPE DEFAULT NULL,
        id_order_type_in           IN drug_presc_det.id_order_type%TYPE DEFAULT NULL,
        flg_co_sign_in             IN drug_presc_det.flg_co_sign%TYPE DEFAULT 'N',
        dt_co_sign_in              IN drug_presc_det.dt_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_in           IN drug_presc_det.notes_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_in         IN drug_presc_det.id_prof_co_sign%TYPE DEFAULT NULL,
        duration_in                IN drug_presc_det.duration%TYPE DEFAULT NULL,
        id_unit_measure_dur_in     IN drug_presc_det.id_unit_measure_dur%TYPE DEFAULT NULL,
        frequency_in               IN drug_presc_det.frequency%TYPE DEFAULT NULL,
        id_unit_measure_freq_in    IN drug_presc_det.id_unit_measure_freq%TYPE DEFAULT NULL,
        dt_start_presc_tstz_in     IN drug_presc_det.dt_start_presc_tstz%TYPE DEFAULT NULL,
        refill_in                  IN drug_presc_det.refill%TYPE DEFAULT NULL,
        qty_inst_in                IN drug_presc_det.qty_inst%TYPE DEFAULT NULL,
        unit_measure_inst_in       IN drug_presc_det.unit_measure_inst%TYPE DEFAULT NULL,
        id_pat_medication_list_in  IN drug_presc_det.id_pat_medication_list%TYPE DEFAULT NULL,
        dt_last_change_in          IN drug_presc_det.dt_last_change%TYPE DEFAULT NULL,
        route_id_in                IN drug_presc_det.route_id%TYPE DEFAULT NULL,
        id_justification_in        IN drug_presc_det.id_justification%TYPE DEFAULT NULL,
        vers_in                    IN drug_presc_det.vers%TYPE DEFAULT NULL,
        flg_interac_med_in         IN drug_presc_det.flg_interac_med%TYPE DEFAULT 'N',
        flg_interac_allergy_in     IN drug_presc_det.flg_interac_allergy%TYPE DEFAULT 'N',
        id_drug_in                 IN drug_presc_det.id_drug%TYPE DEFAULT NULL,
        id_other_product_in        IN drug_presc_det.id_other_product%TYPE DEFAULT NULL,
        desc_other_product_in      IN drug_presc_det.desc_other_product%TYPE DEFAULT NULL,
        dt_hold_begin_in           IN drug_presc_det.dt_hold_begin%TYPE DEFAULT NULL,
        dt_hold_end_in             IN drug_presc_det.dt_hold_end%TYPE DEFAULT NULL,
        flg_modified_in            IN drug_presc_det.flg_modified%TYPE DEFAULT 'N',
        status_flg_in              IN drug_presc_det.status_flg%TYPE DEFAULT NULL,
        status_icon_in             IN drug_presc_det.status_icon%TYPE DEFAULT NULL,
        status_msg_in              IN drug_presc_det.status_msg%TYPE DEFAULT NULL,
        status_str_in              IN drug_presc_det.status_str%TYPE DEFAULT NULL,
        dispense_in                IN drug_presc_det.dispense%TYPE DEFAULT NULL,
        unit_measure_dispense_in   IN drug_presc_det.unit_measure_dispense%TYPE DEFAULT NULL,
        flg_dosage_check_in        IN drug_presc_det.flg_dosage_check%TYPE DEFAULT NULL,
        id_combination_compound_in IN drug_presc_det.id_combination_compound%TYPE DEFAULT NULL,
        id_irregular_directions_in IN drug_presc_det.id_irregular_directions%TYPE DEFAULT NULL,
        create_user_in             IN drug_presc_det.create_user%TYPE DEFAULT NULL,
        create_time_in             IN drug_presc_det.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN drug_presc_det.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN drug_presc_det.update_user%TYPE DEFAULT NULL,
        update_time_in             IN drug_presc_det.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN drug_presc_det.update_institution%TYPE DEFAULT NULL,
        flg_mix_instr_in           IN drug_presc_det.flg_mix_instr%TYPE DEFAULT NULL,
        mix_instr_in               IN drug_presc_det.mix_instr%TYPE DEFAULT NULL,
        id_presc_instr_det_in      IN drug_presc_det.id_presc_instr_det%TYPE DEFAULT NULL,
        num_schemes_in             IN drug_presc_det.num_schemes%TYPE DEFAULT NULL,
        id_justify_reason_in       IN drug_presc_det.id_justify_reason%TYPE DEFAULT NULL,
        justify_reason_in          IN drug_presc_det.justify_reason%TYPE DEFAULT NULL,
        id_presc_directions_in     IN drug_presc_det.id_presc_directions%TYPE DEFAULT NULL,
        flg_free_text_in           IN drug_presc_det.flg_free_text%TYPE DEFAULT NULL,
        id_task_dependency_in      IN drug_presc_det.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in   IN drug_presc_det.flg_req_origin_module%TYPE DEFAULT 'D',
        take_in_case_in            IN drug_presc_det.take_in_case%TYPE DEFAULT NULL,
        id_vacc_manufacturer_in    IN drug_presc_det.id_vacc_manufacturer%TYPE DEFAULT NULL,
        code_mvx_in                IN drug_presc_det.code_mvx%TYPE DEFAULT NULL,
        id_cdr_call_in             IN drug_presc_det.id_cdr_call%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT table_varchar
    ) IS
        l_pky drug_presc_det.id_drug_presc_det%TYPE := next_key;
    BEGIN
        ins(id_drug_presc_det_in       => l_pky,
            id_drug_prescription_in    => id_drug_prescription_in,
            notes_in                   => notes_in,
            flg_take_type_in           => flg_take_type_in,
            qty_in                     => qty_in,
            rate_in                    => rate_in,
            flg_status_in              => flg_status_in,
            id_prof_cancel_in          => id_prof_cancel_in,
            notes_cancel_in            => notes_cancel_in,
            notes_justif_in            => notes_justif_in,
            interval_in                => interval_in,
            takes_in                   => takes_in,
            dosage_in                  => dosage_in,
            flg_ci_in                  => flg_ci_in,
            flg_cheaper_in             => flg_cheaper_in,
            flg_justif_in              => flg_justif_in,
            flg_attention_in           => flg_attention_in,
            flg_attention_print_in     => flg_attention_print_in,
            id_drug_despachos_in       => id_drug_despachos_in,
            dosage_description_in      => dosage_description_in,
            value_bolus_in             => value_bolus_in,
            value_drip_in              => value_drip_in,
            id_unit_measure_in         => id_unit_measure_in,
            id_unit_measure_bolus_in   => id_unit_measure_bolus_in,
            id_unit_measure_drip_in    => id_unit_measure_drip_in,
            dt_begin_tstz_in           => dt_begin_tstz_in,
            dt_end_tstz_in             => dt_end_tstz_in,
            dt_cancel_tstz_in          => dt_cancel_tstz_in,
            dt_end_presc_tstz_in       => dt_end_presc_tstz_in,
            dt_end_bottle_tstz_in      => dt_end_bottle_tstz_in,
            dt_order_in                => dt_order_in,
            id_prof_order_in           => id_prof_order_in,
            id_order_type_in           => id_order_type_in,
            flg_co_sign_in             => flg_co_sign_in,
            dt_co_sign_in              => dt_co_sign_in,
            notes_co_sign_in           => notes_co_sign_in,
            id_prof_co_sign_in         => id_prof_co_sign_in,
            duration_in                => duration_in,
            id_unit_measure_dur_in     => id_unit_measure_dur_in,
            frequency_in               => frequency_in,
            id_unit_measure_freq_in    => id_unit_measure_freq_in,
            dt_start_presc_tstz_in     => dt_start_presc_tstz_in,
            refill_in                  => refill_in,
            qty_inst_in                => qty_inst_in,
            unit_measure_inst_in       => unit_measure_inst_in,
            id_pat_medication_list_in  => id_pat_medication_list_in,
            dt_last_change_in          => dt_last_change_in,
            route_id_in                => route_id_in,
            id_justification_in        => id_justification_in,
            vers_in                    => vers_in,
            flg_interac_med_in         => flg_interac_med_in,
            flg_interac_allergy_in     => flg_interac_allergy_in,
            id_drug_in                 => id_drug_in,
            id_other_product_in        => id_other_product_in,
            desc_other_product_in      => desc_other_product_in,
            dt_hold_begin_in           => dt_hold_begin_in,
            dt_hold_end_in             => dt_hold_end_in,
            flg_modified_in            => flg_modified_in,
            status_flg_in              => status_flg_in,
            status_icon_in             => status_icon_in,
            status_msg_in              => status_msg_in,
            status_str_in              => status_str_in,
            dispense_in                => dispense_in,
            unit_measure_dispense_in   => unit_measure_dispense_in,
            flg_dosage_check_in        => flg_dosage_check_in,
            id_combination_compound_in => id_combination_compound_in,
            id_irregular_directions_in => id_irregular_directions_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            flg_mix_instr_in           => flg_mix_instr_in,
            mix_instr_in               => mix_instr_in,
            id_presc_instr_det_in      => id_presc_instr_det_in,
            num_schemes_in             => num_schemes_in,
            id_justify_reason_in       => id_justify_reason_in,
            justify_reason_in          => justify_reason_in,
            id_presc_directions_in     => id_presc_directions_in,
            flg_free_text_in           => flg_free_text_in,
            id_task_dependency_in      => id_task_dependency_in,
            flg_req_origin_module_in   => flg_req_origin_module_in,
            take_in_case_in            => take_in_case_in,
            id_vacc_manufacturer_in    => id_vacc_manufacturer_in,
            code_mvx_in                => code_mvx_in,
            id_cdr_call_in             => id_cdr_call_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END ins;

    PROCEDURE ins
    (
        id_drug_prescription_in    IN drug_presc_det.id_drug_prescription%TYPE DEFAULT NULL,
        notes_in                   IN drug_presc_det.notes%TYPE DEFAULT NULL,
        flg_take_type_in           IN drug_presc_det.flg_take_type%TYPE DEFAULT NULL,
        qty_in                     IN drug_presc_det.qty%TYPE DEFAULT NULL,
        rate_in                    IN drug_presc_det.rate%TYPE DEFAULT NULL,
        flg_status_in              IN drug_presc_det.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in          IN drug_presc_det.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in            IN drug_presc_det.notes_cancel%TYPE DEFAULT NULL,
        notes_justif_in            IN drug_presc_det.notes_justif%TYPE DEFAULT NULL,
        interval_in                IN drug_presc_det.interval%TYPE DEFAULT NULL,
        takes_in                   IN drug_presc_det.takes%TYPE DEFAULT NULL,
        dosage_in                  IN drug_presc_det.dosage%TYPE DEFAULT NULL,
        flg_ci_in                  IN drug_presc_det.flg_ci%TYPE DEFAULT 'N',
        flg_cheaper_in             IN drug_presc_det.flg_cheaper%TYPE DEFAULT 'N',
        flg_justif_in              IN drug_presc_det.flg_justif%TYPE DEFAULT 'N',
        flg_attention_in           IN drug_presc_det.flg_attention%TYPE DEFAULT NULL,
        flg_attention_print_in     IN drug_presc_det.flg_attention_print%TYPE DEFAULT NULL,
        id_drug_despachos_in       IN drug_presc_det.id_drug_despachos%TYPE DEFAULT NULL,
        dosage_description_in      IN drug_presc_det.dosage_description%TYPE DEFAULT NULL,
        value_bolus_in             IN drug_presc_det.value_bolus%TYPE DEFAULT NULL,
        value_drip_in              IN drug_presc_det.value_drip%TYPE DEFAULT NULL,
        id_unit_measure_in         IN drug_presc_det.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_bolus_in   IN drug_presc_det.id_unit_measure_bolus%TYPE DEFAULT NULL,
        id_unit_measure_drip_in    IN drug_presc_det.id_unit_measure_drip%TYPE DEFAULT NULL,
        dt_begin_tstz_in           IN drug_presc_det.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in             IN drug_presc_det.dt_end_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in          IN drug_presc_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_end_presc_tstz_in       IN drug_presc_det.dt_end_presc_tstz%TYPE DEFAULT NULL,
        dt_end_bottle_tstz_in      IN drug_presc_det.dt_end_bottle_tstz%TYPE DEFAULT NULL,
        dt_order_in                IN drug_presc_det.dt_order%TYPE DEFAULT NULL,
        id_prof_order_in           IN drug_presc_det.id_prof_order%TYPE DEFAULT NULL,
        id_order_type_in           IN drug_presc_det.id_order_type%TYPE DEFAULT NULL,
        flg_co_sign_in             IN drug_presc_det.flg_co_sign%TYPE DEFAULT 'N',
        dt_co_sign_in              IN drug_presc_det.dt_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_in           IN drug_presc_det.notes_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_in         IN drug_presc_det.id_prof_co_sign%TYPE DEFAULT NULL,
        duration_in                IN drug_presc_det.duration%TYPE DEFAULT NULL,
        id_unit_measure_dur_in     IN drug_presc_det.id_unit_measure_dur%TYPE DEFAULT NULL,
        frequency_in               IN drug_presc_det.frequency%TYPE DEFAULT NULL,
        id_unit_measure_freq_in    IN drug_presc_det.id_unit_measure_freq%TYPE DEFAULT NULL,
        dt_start_presc_tstz_in     IN drug_presc_det.dt_start_presc_tstz%TYPE DEFAULT NULL,
        refill_in                  IN drug_presc_det.refill%TYPE DEFAULT NULL,
        qty_inst_in                IN drug_presc_det.qty_inst%TYPE DEFAULT NULL,
        unit_measure_inst_in       IN drug_presc_det.unit_measure_inst%TYPE DEFAULT NULL,
        id_pat_medication_list_in  IN drug_presc_det.id_pat_medication_list%TYPE DEFAULT NULL,
        dt_last_change_in          IN drug_presc_det.dt_last_change%TYPE DEFAULT NULL,
        route_id_in                IN drug_presc_det.route_id%TYPE DEFAULT NULL,
        id_justification_in        IN drug_presc_det.id_justification%TYPE DEFAULT NULL,
        vers_in                    IN drug_presc_det.vers%TYPE DEFAULT NULL,
        flg_interac_med_in         IN drug_presc_det.flg_interac_med%TYPE DEFAULT 'N',
        flg_interac_allergy_in     IN drug_presc_det.flg_interac_allergy%TYPE DEFAULT 'N',
        id_drug_in                 IN drug_presc_det.id_drug%TYPE DEFAULT NULL,
        id_other_product_in        IN drug_presc_det.id_other_product%TYPE DEFAULT NULL,
        desc_other_product_in      IN drug_presc_det.desc_other_product%TYPE DEFAULT NULL,
        dt_hold_begin_in           IN drug_presc_det.dt_hold_begin%TYPE DEFAULT NULL,
        dt_hold_end_in             IN drug_presc_det.dt_hold_end%TYPE DEFAULT NULL,
        flg_modified_in            IN drug_presc_det.flg_modified%TYPE DEFAULT 'N',
        status_flg_in              IN drug_presc_det.status_flg%TYPE DEFAULT NULL,
        status_icon_in             IN drug_presc_det.status_icon%TYPE DEFAULT NULL,
        status_msg_in              IN drug_presc_det.status_msg%TYPE DEFAULT NULL,
        status_str_in              IN drug_presc_det.status_str%TYPE DEFAULT NULL,
        dispense_in                IN drug_presc_det.dispense%TYPE DEFAULT NULL,
        unit_measure_dispense_in   IN drug_presc_det.unit_measure_dispense%TYPE DEFAULT NULL,
        flg_dosage_check_in        IN drug_presc_det.flg_dosage_check%TYPE DEFAULT NULL,
        id_combination_compound_in IN drug_presc_det.id_combination_compound%TYPE DEFAULT NULL,
        id_irregular_directions_in IN drug_presc_det.id_irregular_directions%TYPE DEFAULT NULL,
        create_user_in             IN drug_presc_det.create_user%TYPE DEFAULT NULL,
        create_time_in             IN drug_presc_det.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN drug_presc_det.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN drug_presc_det.update_user%TYPE DEFAULT NULL,
        update_time_in             IN drug_presc_det.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN drug_presc_det.update_institution%TYPE DEFAULT NULL,
        flg_mix_instr_in           IN drug_presc_det.flg_mix_instr%TYPE DEFAULT NULL,
        mix_instr_in               IN drug_presc_det.mix_instr%TYPE DEFAULT NULL,
        id_presc_instr_det_in      IN drug_presc_det.id_presc_instr_det%TYPE DEFAULT NULL,
        num_schemes_in             IN drug_presc_det.num_schemes%TYPE DEFAULT NULL,
        id_justify_reason_in       IN drug_presc_det.id_justify_reason%TYPE DEFAULT NULL,
        justify_reason_in          IN drug_presc_det.justify_reason%TYPE DEFAULT NULL,
        id_presc_directions_in     IN drug_presc_det.id_presc_directions%TYPE DEFAULT NULL,
        flg_free_text_in           IN drug_presc_det.flg_free_text%TYPE DEFAULT NULL,
        id_task_dependency_in      IN drug_presc_det.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in   IN drug_presc_det.flg_req_origin_module%TYPE DEFAULT 'D',
        take_in_case_in            IN drug_presc_det.take_in_case%TYPE DEFAULT NULL,
        id_vacc_manufacturer_in    IN drug_presc_det.id_vacc_manufacturer%TYPE DEFAULT NULL,
        code_mvx_in                IN drug_presc_det.code_mvx%TYPE DEFAULT NULL,
        id_cdr_call_in             IN drug_presc_det.id_cdr_call%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE
    ) IS
        l_pky    drug_presc_det.id_drug_presc_det%TYPE := next_key;
        rows_out table_varchar;
    BEGIN
        ins(id_drug_presc_det_in       => l_pky,
            id_drug_prescription_in    => id_drug_prescription_in,
            notes_in                   => notes_in,
            flg_take_type_in           => flg_take_type_in,
            qty_in                     => qty_in,
            rate_in                    => rate_in,
            flg_status_in              => flg_status_in,
            id_prof_cancel_in          => id_prof_cancel_in,
            notes_cancel_in            => notes_cancel_in,
            notes_justif_in            => notes_justif_in,
            interval_in                => interval_in,
            takes_in                   => takes_in,
            dosage_in                  => dosage_in,
            flg_ci_in                  => flg_ci_in,
            flg_cheaper_in             => flg_cheaper_in,
            flg_justif_in              => flg_justif_in,
            flg_attention_in           => flg_attention_in,
            flg_attention_print_in     => flg_attention_print_in,
            id_drug_despachos_in       => id_drug_despachos_in,
            dosage_description_in      => dosage_description_in,
            value_bolus_in             => value_bolus_in,
            value_drip_in              => value_drip_in,
            id_unit_measure_in         => id_unit_measure_in,
            id_unit_measure_bolus_in   => id_unit_measure_bolus_in,
            id_unit_measure_drip_in    => id_unit_measure_drip_in,
            dt_begin_tstz_in           => dt_begin_tstz_in,
            dt_end_tstz_in             => dt_end_tstz_in,
            dt_cancel_tstz_in          => dt_cancel_tstz_in,
            dt_end_presc_tstz_in       => dt_end_presc_tstz_in,
            dt_end_bottle_tstz_in      => dt_end_bottle_tstz_in,
            dt_order_in                => dt_order_in,
            id_prof_order_in           => id_prof_order_in,
            id_order_type_in           => id_order_type_in,
            flg_co_sign_in             => flg_co_sign_in,
            dt_co_sign_in              => dt_co_sign_in,
            notes_co_sign_in           => notes_co_sign_in,
            id_prof_co_sign_in         => id_prof_co_sign_in,
            duration_in                => duration_in,
            id_unit_measure_dur_in     => id_unit_measure_dur_in,
            frequency_in               => frequency_in,
            id_unit_measure_freq_in    => id_unit_measure_freq_in,
            dt_start_presc_tstz_in     => dt_start_presc_tstz_in,
            refill_in                  => refill_in,
            qty_inst_in                => qty_inst_in,
            unit_measure_inst_in       => unit_measure_inst_in,
            id_pat_medication_list_in  => id_pat_medication_list_in,
            dt_last_change_in          => dt_last_change_in,
            route_id_in                => route_id_in,
            id_justification_in        => id_justification_in,
            vers_in                    => vers_in,
            flg_interac_med_in         => flg_interac_med_in,
            flg_interac_allergy_in     => flg_interac_allergy_in,
            id_drug_in                 => id_drug_in,
            id_other_product_in        => id_other_product_in,
            desc_other_product_in      => desc_other_product_in,
            dt_hold_begin_in           => dt_hold_begin_in,
            dt_hold_end_in             => dt_hold_end_in,
            flg_modified_in            => flg_modified_in,
            status_flg_in              => status_flg_in,
            status_icon_in             => status_icon_in,
            status_msg_in              => status_msg_in,
            status_str_in              => status_str_in,
            dispense_in                => dispense_in,
            unit_measure_dispense_in   => unit_measure_dispense_in,
            flg_dosage_check_in        => flg_dosage_check_in,
            id_combination_compound_in => id_combination_compound_in,
            id_irregular_directions_in => id_irregular_directions_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            flg_mix_instr_in           => flg_mix_instr_in,
            mix_instr_in               => mix_instr_in,
            id_presc_instr_det_in      => id_presc_instr_det_in,
            num_schemes_in             => num_schemes_in,
            id_justify_reason_in       => id_justify_reason_in,
            justify_reason_in          => justify_reason_in,
            id_presc_directions_in     => id_presc_directions_in,
            flg_free_text_in           => flg_free_text_in,
            id_task_dependency_in      => id_task_dependency_in,
            flg_req_origin_module_in   => flg_req_origin_module_in,
            take_in_case_in            => take_in_case_in,
            id_vacc_manufacturer_in    => id_vacc_manufacturer_in,
            code_mvx_in                => code_mvx_in,
            id_cdr_call_in             => id_cdr_call_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END ins;

    PROCEDURE ins
    (
        rows_in         IN drug_presc_det_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        IF rows_in.count = 0
        THEN
            NULL;
        ELSE
            FORALL indx IN rows_in.first .. rows_in.last SAVE EXCEPTIONS
                INSERT INTO drug_presc_det
                    (id_drug_presc_det,
                     id_drug_prescription,
                     notes,
                     flg_take_type,
                     qty,
                     rate,
                     flg_status,
                     id_prof_cancel,
                     notes_cancel,
                     notes_justif,
                     INTERVAL,
                     takes,
                     dosage,
                     flg_ci,
                     flg_cheaper,
                     flg_justif,
                     flg_attention,
                     flg_attention_print,
                     id_drug_despachos,
                     dosage_description,
                     value_bolus,
                     value_drip,
                     id_unit_measure,
                     id_unit_measure_bolus,
                     id_unit_measure_drip,
                     dt_begin_tstz,
                     dt_end_tstz,
                     dt_cancel_tstz,
                     dt_end_presc_tstz,
                     dt_end_bottle_tstz,
                     dt_order,
                     id_prof_order,
                     id_order_type,
                     flg_co_sign,
                     dt_co_sign,
                     notes_co_sign,
                     id_prof_co_sign,
                     duration,
                     id_unit_measure_dur,
                     frequency,
                     id_unit_measure_freq,
                     dt_start_presc_tstz,
                     refill,
                     qty_inst,
                     unit_measure_inst,
                     id_pat_medication_list,
                     dt_last_change,
                     route_id,
                     id_justification,
                     vers,
                     flg_interac_med,
                     flg_interac_allergy,
                     id_drug,
                     id_other_product,
                     desc_other_product,
                     dt_hold_begin,
                     dt_hold_end,
                     flg_modified,
                     status_flg,
                     status_icon,
                     status_msg,
                     status_str,
                     dispense,
                     unit_measure_dispense,
                     flg_dosage_check,
                     id_combination_compound,
                     id_irregular_directions,
                     create_user,
                     create_time,
                     create_institution,
                     update_user,
                     update_time,
                     update_institution,
                     flg_mix_instr,
                     mix_instr,
                     id_presc_instr_det,
                     num_schemes,
                     id_justify_reason,
                     justify_reason,
                     id_presc_directions,
                     flg_free_text,
                     id_task_dependency,
                     flg_req_origin_module,
                     take_in_case,
                     id_vacc_manufacturer,
                     code_mvx,
                     id_cdr_call)
                VALUES
                    (rows_in(indx).id_drug_presc_det,
                     rows_in(indx).id_drug_prescription,
                     rows_in(indx).notes,
                     rows_in(indx).flg_take_type,
                     rows_in(indx).qty,
                     rows_in(indx).rate,
                     rows_in(indx).flg_status,
                     rows_in(indx).id_prof_cancel,
                     rows_in(indx).notes_cancel,
                     rows_in(indx).notes_justif,
                     rows_in(indx).interval,
                     rows_in(indx).takes,
                     rows_in(indx).dosage,
                     rows_in(indx).flg_ci,
                     rows_in(indx).flg_cheaper,
                     rows_in(indx).flg_justif,
                     rows_in(indx).flg_attention,
                     rows_in(indx).flg_attention_print,
                     rows_in(indx).id_drug_despachos,
                     rows_in(indx).dosage_description,
                     rows_in(indx).value_bolus,
                     rows_in(indx).value_drip,
                     rows_in(indx).id_unit_measure,
                     rows_in(indx).id_unit_measure_bolus,
                     rows_in(indx).id_unit_measure_drip,
                     rows_in(indx).dt_begin_tstz,
                     rows_in(indx).dt_end_tstz,
                     rows_in(indx).dt_cancel_tstz,
                     rows_in(indx).dt_end_presc_tstz,
                     rows_in(indx).dt_end_bottle_tstz,
                     rows_in(indx).dt_order,
                     rows_in(indx).id_prof_order,
                     rows_in(indx).id_order_type,
                     rows_in(indx).flg_co_sign,
                     rows_in(indx).dt_co_sign,
                     rows_in(indx).notes_co_sign,
                     rows_in(indx).id_prof_co_sign,
                     rows_in(indx).duration,
                     rows_in(indx).id_unit_measure_dur,
                     rows_in(indx).frequency,
                     rows_in(indx).id_unit_measure_freq,
                     rows_in(indx).dt_start_presc_tstz,
                     rows_in(indx).refill,
                     rows_in(indx).qty_inst,
                     rows_in(indx).unit_measure_inst,
                     rows_in(indx).id_pat_medication_list,
                     rows_in(indx).dt_last_change,
                     rows_in(indx).route_id,
                     rows_in(indx).id_justification,
                     rows_in(indx).vers,
                     rows_in(indx).flg_interac_med,
                     rows_in(indx).flg_interac_allergy,
                     rows_in(indx).id_drug,
                     rows_in(indx).id_other_product,
                     rows_in(indx).desc_other_product,
                     rows_in(indx).dt_hold_begin,
                     rows_in(indx).dt_hold_end,
                     rows_in(indx).flg_modified,
                     rows_in(indx).status_flg,
                     rows_in(indx).status_icon,
                     rows_in(indx).status_msg,
                     rows_in(indx).status_str,
                     rows_in(indx).dispense,
                     rows_in(indx).unit_measure_dispense,
                     rows_in(indx).flg_dosage_check,
                     rows_in(indx).id_combination_compound,
                     rows_in(indx).id_irregular_directions,
                     rows_in(indx).create_user,
                     rows_in(indx).create_time,
                     rows_in(indx).create_institution,
                     rows_in(indx).update_user,
                     rows_in(indx).update_time,
                     rows_in(indx).update_institution,
                     rows_in(indx).flg_mix_instr,
                     rows_in(indx).mix_instr,
                     rows_in(indx).id_presc_instr_det,
                     rows_in(indx).num_schemes,
                     rows_in(indx).id_justify_reason,
                     rows_in(indx).justify_reason,
                     rows_in(indx).id_presc_directions,
                     rows_in(indx).flg_free_text,
                     rows_in(indx).id_task_dependency,
                     rows_in(indx).flg_req_origin_module,
                     rows_in(indx).take_in_case,
                     rows_in(indx).id_vacc_manufacturer,
                     rows_in(indx).code_mvx,
                     rows_in(indx).id_cdr_call)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        
        END IF;
    EXCEPTION
        WHEN e_forall_error THEN
            -- In Oracle9i and above, SAVE EXCEPTIONS will direct control
            -- here if any error occurs. We can then save all the error
            -- information out to the error instance.
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                <<bulk_handler>>
                DECLARE
                    l_err_instance_id NUMBER;
                BEGIN
                    -- For each error, write to the log.
                    FOR indx IN 1 .. SQL%bulk_exceptions.count
                    LOOP
                        pk_alert_exceptions.register_error(error_name_in       => 'FORALL-INSERT-FAILURE',
                                                           err_instance_id_out => l_err_instance_id);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'BINDING_ROW_' || indx,
                                                        value_in           => SQL%BULK_EXCEPTIONS(indx).error_index,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ERROR_AT_ROW_' || indx,
                                                        value_in           => SQLERRM(-sql%BULK_EXCEPTIONS(indx)
                                                                                      .error_code),
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_DRUG_PRESC_DET _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_drug_presc_det,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_DRUG_PRESCRIPTION _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_drug_prescription,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'NOTES _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .notes,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_TAKE_TYPE _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .flg_take_type,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'QTY _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index).qty,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'RATE _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index).rate,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_STATUS _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .flg_status,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PROF_CANCEL _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_prof_cancel,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'NOTES_CANCEL _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .notes_cancel,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'NOTES_JUSTIF _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .notes_justif,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'INTERVAL _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .interval,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'TAKES _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .takes,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DOSAGE _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .dosage,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_CI _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .flg_ci,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_CHEAPER _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .flg_cheaper,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_JUSTIF _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .flg_justif,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_ATTENTION _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .flg_attention,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_ATTENTION_PRINT _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .flg_attention_print,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_DRUG_DESPACHOS _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_drug_despachos,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DOSAGE_DESCRIPTION _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .dosage_description,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'VALUE_BOLUS _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .value_bolus,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'VALUE_DRIP _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .value_drip,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_UNIT_MEASURE _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_unit_measure,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_UNIT_MEASURE_BOLUS _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_unit_measure_bolus,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_UNIT_MEASURE_DRIP _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_unit_measure_drip,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_BEGIN_TSTZ _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .dt_begin_tstz,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_END_TSTZ _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .dt_end_tstz,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_CANCEL_TSTZ _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .dt_cancel_tstz,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_END_PRESC_TSTZ _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .dt_end_presc_tstz,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_END_BOTTLE_TSTZ _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .dt_end_bottle_tstz,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_ORDER _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .dt_order,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PROF_ORDER _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_prof_order,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_ORDER_TYPE _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_order_type,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_CO_SIGN _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .flg_co_sign,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_CO_SIGN _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .dt_co_sign,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'NOTES_CO_SIGN _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .notes_co_sign,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PROF_CO_SIGN _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_prof_co_sign,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DURATION _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .duration,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_UNIT_MEASURE_DUR _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_unit_measure_dur,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FREQUENCY _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .frequency,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_UNIT_MEASURE_FREQ _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_unit_measure_freq,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_START_PRESC_TSTZ _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .dt_start_presc_tstz,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'REFILL _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .refill,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'QTY_INST _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .qty_inst,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'UNIT_MEASURE_INST _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .unit_measure_inst,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PAT_MEDICATION_LIST _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_pat_medication_list,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_LAST_CHANGE _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .dt_last_change,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ROUTE_ID _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .route_id,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_JUSTIFICATION _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_justification,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'VERS _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index).vers,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_INTERAC_MED _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .flg_interac_med,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_INTERAC_ALLERGY _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .flg_interac_allergy,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_DRUG _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_drug,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_OTHER_PRODUCT _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_other_product,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DESC_OTHER_PRODUCT _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .desc_other_product,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_HOLD_BEGIN _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .dt_hold_begin,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_HOLD_END _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .dt_hold_end,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_MODIFIED _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .flg_modified,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'STATUS_FLG _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .status_flg,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'STATUS_ICON _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .status_icon,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'STATUS_MSG _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .status_msg,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'STATUS_STR _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .status_str,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DISPENSE _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .dispense,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'UNIT_MEASURE_DISPENSE _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .unit_measure_dispense,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_DOSAGE_CHECK _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .flg_dosage_check,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_COMBINATION_COMPOUND _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_combination_compound,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_IRREGULAR_DIRECTIONS _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_irregular_directions,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'CREATE_USER _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .create_user,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'CREATE_TIME _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .create_time,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'CREATE_INSTITUTION _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .create_institution,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'UPDATE_USER _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .update_user,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'UPDATE_TIME _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .update_time,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'UPDATE_INSTITUTION _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .update_institution,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_MIX_INSTR _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .flg_mix_instr,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'MIX_INSTR _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .mix_instr,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PRESC_INSTR_DET _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_presc_instr_det,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'NUM_SCHEMES _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .num_schemes,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_JUSTIFY_REASON _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_justify_reason,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'JUSTIFY_REASON _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .justify_reason,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PRESC_DIRECTIONS _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_presc_directions,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_FREE_TEXT _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .flg_free_text,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_TASK_DEPENDENCY _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_task_dependency,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_REQ_ORIGIN_MODULE _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .flg_req_origin_module,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'TAKE_IN_CASE _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .take_in_case,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_VACC_MANUFACTURER _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_vacc_manufacturer,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'CODE_MVX _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .code_mvx,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_CDR_CALL _' || indx,
                                                        value_in           => rows_in(SQL%BULK_EXCEPTIONS(indx).error_index)
                                                                              .id_cdr_call,
                                                        validate_in        => FALSE);
                    
                        pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_err_instance_id);
                    END LOOP;
                END bulk_handler;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alert_exceptions.raise_error(error_name_in => 'FORALL-INSERT-FAILURE',
                                                name1_in      => 'TABLE_NAME',
                                                value1_in     => 'DRUG_PRESC_DET',
                                                name2_in      => 'ROW_COUNT',
                                                value2_in     => rows_in.count);
            END IF;
    END ins;

    PROCEDURE ins
    (
        rows_in         IN drug_presc_det_tc,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rows_in => rows_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END ins;

    PROCEDURE upd
    (
        id_drug_presc_det_in        IN drug_presc_det.id_drug_presc_det%TYPE,
        id_drug_prescription_in     IN drug_presc_det.id_drug_prescription%TYPE DEFAULT NULL,
        id_drug_prescription_nin    IN BOOLEAN := TRUE,
        notes_in                    IN drug_presc_det.notes%TYPE DEFAULT NULL,
        notes_nin                   IN BOOLEAN := TRUE,
        flg_take_type_in            IN drug_presc_det.flg_take_type%TYPE DEFAULT NULL,
        flg_take_type_nin           IN BOOLEAN := TRUE,
        qty_in                      IN drug_presc_det.qty%TYPE DEFAULT NULL,
        qty_nin                     IN BOOLEAN := TRUE,
        rate_in                     IN drug_presc_det.rate%TYPE DEFAULT NULL,
        rate_nin                    IN BOOLEAN := TRUE,
        flg_status_in               IN drug_presc_det.flg_status%TYPE DEFAULT NULL,
        flg_status_nin              IN BOOLEAN := TRUE,
        id_prof_cancel_in           IN drug_presc_det.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin          IN BOOLEAN := TRUE,
        notes_cancel_in             IN drug_presc_det.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin            IN BOOLEAN := TRUE,
        notes_justif_in             IN drug_presc_det.notes_justif%TYPE DEFAULT NULL,
        notes_justif_nin            IN BOOLEAN := TRUE,
        interval_in                 IN drug_presc_det.interval%TYPE DEFAULT NULL,
        interval_nin                IN BOOLEAN := TRUE,
        takes_in                    IN drug_presc_det.takes%TYPE DEFAULT NULL,
        takes_nin                   IN BOOLEAN := TRUE,
        dosage_in                   IN drug_presc_det.dosage%TYPE DEFAULT NULL,
        dosage_nin                  IN BOOLEAN := TRUE,
        flg_ci_in                   IN drug_presc_det.flg_ci%TYPE DEFAULT NULL,
        flg_ci_nin                  IN BOOLEAN := TRUE,
        flg_cheaper_in              IN drug_presc_det.flg_cheaper%TYPE DEFAULT NULL,
        flg_cheaper_nin             IN BOOLEAN := TRUE,
        flg_justif_in               IN drug_presc_det.flg_justif%TYPE DEFAULT NULL,
        flg_justif_nin              IN BOOLEAN := TRUE,
        flg_attention_in            IN drug_presc_det.flg_attention%TYPE DEFAULT NULL,
        flg_attention_nin           IN BOOLEAN := TRUE,
        flg_attention_print_in      IN drug_presc_det.flg_attention_print%TYPE DEFAULT NULL,
        flg_attention_print_nin     IN BOOLEAN := TRUE,
        id_drug_despachos_in        IN drug_presc_det.id_drug_despachos%TYPE DEFAULT NULL,
        id_drug_despachos_nin       IN BOOLEAN := TRUE,
        dosage_description_in       IN drug_presc_det.dosage_description%TYPE DEFAULT NULL,
        dosage_description_nin      IN BOOLEAN := TRUE,
        value_bolus_in              IN drug_presc_det.value_bolus%TYPE DEFAULT NULL,
        value_bolus_nin             IN BOOLEAN := TRUE,
        value_drip_in               IN drug_presc_det.value_drip%TYPE DEFAULT NULL,
        value_drip_nin              IN BOOLEAN := TRUE,
        id_unit_measure_in          IN drug_presc_det.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_nin         IN BOOLEAN := TRUE,
        id_unit_measure_bolus_in    IN drug_presc_det.id_unit_measure_bolus%TYPE DEFAULT NULL,
        id_unit_measure_bolus_nin   IN BOOLEAN := TRUE,
        id_unit_measure_drip_in     IN drug_presc_det.id_unit_measure_drip%TYPE DEFAULT NULL,
        id_unit_measure_drip_nin    IN BOOLEAN := TRUE,
        dt_begin_tstz_in            IN drug_presc_det.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_nin           IN BOOLEAN := TRUE,
        dt_end_tstz_in              IN drug_presc_det.dt_end_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_nin             IN BOOLEAN := TRUE,
        dt_cancel_tstz_in           IN drug_presc_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin          IN BOOLEAN := TRUE,
        dt_end_presc_tstz_in        IN drug_presc_det.dt_end_presc_tstz%TYPE DEFAULT NULL,
        dt_end_presc_tstz_nin       IN BOOLEAN := TRUE,
        dt_end_bottle_tstz_in       IN drug_presc_det.dt_end_bottle_tstz%TYPE DEFAULT NULL,
        dt_end_bottle_tstz_nin      IN BOOLEAN := TRUE,
        dt_order_in                 IN drug_presc_det.dt_order%TYPE DEFAULT NULL,
        dt_order_nin                IN BOOLEAN := TRUE,
        id_prof_order_in            IN drug_presc_det.id_prof_order%TYPE DEFAULT NULL,
        id_prof_order_nin           IN BOOLEAN := TRUE,
        id_order_type_in            IN drug_presc_det.id_order_type%TYPE DEFAULT NULL,
        id_order_type_nin           IN BOOLEAN := TRUE,
        flg_co_sign_in              IN drug_presc_det.flg_co_sign%TYPE DEFAULT NULL,
        flg_co_sign_nin             IN BOOLEAN := TRUE,
        dt_co_sign_in               IN drug_presc_det.dt_co_sign%TYPE DEFAULT NULL,
        dt_co_sign_nin              IN BOOLEAN := TRUE,
        notes_co_sign_in            IN drug_presc_det.notes_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_nin           IN BOOLEAN := TRUE,
        id_prof_co_sign_in          IN drug_presc_det.id_prof_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_nin         IN BOOLEAN := TRUE,
        duration_in                 IN drug_presc_det.duration%TYPE DEFAULT NULL,
        duration_nin                IN BOOLEAN := TRUE,
        id_unit_measure_dur_in      IN drug_presc_det.id_unit_measure_dur%TYPE DEFAULT NULL,
        id_unit_measure_dur_nin     IN BOOLEAN := TRUE,
        frequency_in                IN drug_presc_det.frequency%TYPE DEFAULT NULL,
        frequency_nin               IN BOOLEAN := TRUE,
        id_unit_measure_freq_in     IN drug_presc_det.id_unit_measure_freq%TYPE DEFAULT NULL,
        id_unit_measure_freq_nin    IN BOOLEAN := TRUE,
        dt_start_presc_tstz_in      IN drug_presc_det.dt_start_presc_tstz%TYPE DEFAULT NULL,
        dt_start_presc_tstz_nin     IN BOOLEAN := TRUE,
        refill_in                   IN drug_presc_det.refill%TYPE DEFAULT NULL,
        refill_nin                  IN BOOLEAN := TRUE,
        qty_inst_in                 IN drug_presc_det.qty_inst%TYPE DEFAULT NULL,
        qty_inst_nin                IN BOOLEAN := TRUE,
        unit_measure_inst_in        IN drug_presc_det.unit_measure_inst%TYPE DEFAULT NULL,
        unit_measure_inst_nin       IN BOOLEAN := TRUE,
        id_pat_medication_list_in   IN drug_presc_det.id_pat_medication_list%TYPE DEFAULT NULL,
        id_pat_medication_list_nin  IN BOOLEAN := TRUE,
        dt_last_change_in           IN drug_presc_det.dt_last_change%TYPE DEFAULT NULL,
        dt_last_change_nin          IN BOOLEAN := TRUE,
        route_id_in                 IN drug_presc_det.route_id%TYPE DEFAULT NULL,
        route_id_nin                IN BOOLEAN := TRUE,
        id_justification_in         IN drug_presc_det.id_justification%TYPE DEFAULT NULL,
        id_justification_nin        IN BOOLEAN := TRUE,
        vers_in                     IN drug_presc_det.vers%TYPE DEFAULT NULL,
        vers_nin                    IN BOOLEAN := TRUE,
        flg_interac_med_in          IN drug_presc_det.flg_interac_med%TYPE DEFAULT NULL,
        flg_interac_med_nin         IN BOOLEAN := TRUE,
        flg_interac_allergy_in      IN drug_presc_det.flg_interac_allergy%TYPE DEFAULT NULL,
        flg_interac_allergy_nin     IN BOOLEAN := TRUE,
        id_drug_in                  IN drug_presc_det.id_drug%TYPE DEFAULT NULL,
        id_drug_nin                 IN BOOLEAN := TRUE,
        id_other_product_in         IN drug_presc_det.id_other_product%TYPE DEFAULT NULL,
        id_other_product_nin        IN BOOLEAN := TRUE,
        desc_other_product_in       IN drug_presc_det.desc_other_product%TYPE DEFAULT NULL,
        desc_other_product_nin      IN BOOLEAN := TRUE,
        dt_hold_begin_in            IN drug_presc_det.dt_hold_begin%TYPE DEFAULT NULL,
        dt_hold_begin_nin           IN BOOLEAN := TRUE,
        dt_hold_end_in              IN drug_presc_det.dt_hold_end%TYPE DEFAULT NULL,
        dt_hold_end_nin             IN BOOLEAN := TRUE,
        flg_modified_in             IN drug_presc_det.flg_modified%TYPE DEFAULT NULL,
        flg_modified_nin            IN BOOLEAN := TRUE,
        status_flg_in               IN drug_presc_det.status_flg%TYPE DEFAULT NULL,
        status_flg_nin              IN BOOLEAN := TRUE,
        status_icon_in              IN drug_presc_det.status_icon%TYPE DEFAULT NULL,
        status_icon_nin             IN BOOLEAN := TRUE,
        status_msg_in               IN drug_presc_det.status_msg%TYPE DEFAULT NULL,
        status_msg_nin              IN BOOLEAN := TRUE,
        status_str_in               IN drug_presc_det.status_str%TYPE DEFAULT NULL,
        status_str_nin              IN BOOLEAN := TRUE,
        dispense_in                 IN drug_presc_det.dispense%TYPE DEFAULT NULL,
        dispense_nin                IN BOOLEAN := TRUE,
        unit_measure_dispense_in    IN drug_presc_det.unit_measure_dispense%TYPE DEFAULT NULL,
        unit_measure_dispense_nin   IN BOOLEAN := TRUE,
        flg_dosage_check_in         IN drug_presc_det.flg_dosage_check%TYPE DEFAULT NULL,
        flg_dosage_check_nin        IN BOOLEAN := TRUE,
        id_combination_compound_in  IN drug_presc_det.id_combination_compound%TYPE DEFAULT NULL,
        id_combination_compound_nin IN BOOLEAN := TRUE,
        id_irregular_directions_in  IN drug_presc_det.id_irregular_directions%TYPE DEFAULT NULL,
        id_irregular_directions_nin IN BOOLEAN := TRUE,
        create_user_in              IN drug_presc_det.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN drug_presc_det.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN drug_presc_det.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN drug_presc_det.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN drug_presc_det.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN drug_presc_det.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        flg_mix_instr_in            IN drug_presc_det.flg_mix_instr%TYPE DEFAULT NULL,
        flg_mix_instr_nin           IN BOOLEAN := TRUE,
        mix_instr_in                IN drug_presc_det.mix_instr%TYPE DEFAULT NULL,
        mix_instr_nin               IN BOOLEAN := TRUE,
        id_presc_instr_det_in       IN drug_presc_det.id_presc_instr_det%TYPE DEFAULT NULL,
        id_presc_instr_det_nin      IN BOOLEAN := TRUE,
        num_schemes_in              IN drug_presc_det.num_schemes%TYPE DEFAULT NULL,
        num_schemes_nin             IN BOOLEAN := TRUE,
        id_justify_reason_in        IN drug_presc_det.id_justify_reason%TYPE DEFAULT NULL,
        id_justify_reason_nin       IN BOOLEAN := TRUE,
        justify_reason_in           IN drug_presc_det.justify_reason%TYPE DEFAULT NULL,
        justify_reason_nin          IN BOOLEAN := TRUE,
        id_presc_directions_in      IN drug_presc_det.id_presc_directions%TYPE DEFAULT NULL,
        id_presc_directions_nin     IN BOOLEAN := TRUE,
        flg_free_text_in            IN drug_presc_det.flg_free_text%TYPE DEFAULT NULL,
        flg_free_text_nin           IN BOOLEAN := TRUE,
        id_task_dependency_in       IN drug_presc_det.id_task_dependency%TYPE DEFAULT NULL,
        id_task_dependency_nin      IN BOOLEAN := TRUE,
        flg_req_origin_module_in    IN drug_presc_det.flg_req_origin_module%TYPE DEFAULT NULL,
        flg_req_origin_module_nin   IN BOOLEAN := TRUE,
        take_in_case_in             IN drug_presc_det.take_in_case%TYPE DEFAULT NULL,
        take_in_case_nin            IN BOOLEAN := TRUE,
        id_vacc_manufacturer_in     IN drug_presc_det.id_vacc_manufacturer%TYPE DEFAULT NULL,
        id_vacc_manufacturer_nin    IN BOOLEAN := TRUE,
        code_mvx_in                 IN drug_presc_det.code_mvx%TYPE DEFAULT NULL,
        code_mvx_nin                IN BOOLEAN := TRUE,
        id_cdr_call_in              IN drug_presc_det.id_cdr_call%TYPE DEFAULT NULL,
        id_cdr_call_nin             IN BOOLEAN := TRUE,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    IN OUT table_varchar
    ) IS
        l_rows_out                  table_varchar;
        l_id_drug_prescription_n    NUMBER(1);
        l_notes_n                   NUMBER(1);
        l_flg_take_type_n           NUMBER(1);
        l_qty_n                     NUMBER(1);
        l_rate_n                    NUMBER(1);
        l_flg_status_n              NUMBER(1);
        l_id_prof_cancel_n          NUMBER(1);
        l_notes_cancel_n            NUMBER(1);
        l_notes_justif_n            NUMBER(1);
        l_interval_n                NUMBER(1);
        l_takes_n                   NUMBER(1);
        l_dosage_n                  NUMBER(1);
        l_flg_ci_n                  NUMBER(1);
        l_flg_cheaper_n             NUMBER(1);
        l_flg_justif_n              NUMBER(1);
        l_flg_attention_n           NUMBER(1);
        l_flg_attention_print_n     NUMBER(1);
        l_id_drug_despachos_n       NUMBER(1);
        l_dosage_description_n      NUMBER(1);
        l_value_bolus_n             NUMBER(1);
        l_value_drip_n              NUMBER(1);
        l_id_unit_measure_n         NUMBER(1);
        l_id_unit_measure_bolus_n   NUMBER(1);
        l_id_unit_measure_drip_n    NUMBER(1);
        l_dt_begin_tstz_n           NUMBER(1);
        l_dt_end_tstz_n             NUMBER(1);
        l_dt_cancel_tstz_n          NUMBER(1);
        l_dt_end_presc_tstz_n       NUMBER(1);
        l_dt_end_bottle_tstz_n      NUMBER(1);
        l_dt_order_n                NUMBER(1);
        l_id_prof_order_n           NUMBER(1);
        l_id_order_type_n           NUMBER(1);
        l_flg_co_sign_n             NUMBER(1);
        l_dt_co_sign_n              NUMBER(1);
        l_notes_co_sign_n           NUMBER(1);
        l_id_prof_co_sign_n         NUMBER(1);
        l_duration_n                NUMBER(1);
        l_id_unit_measure_dur_n     NUMBER(1);
        l_frequency_n               NUMBER(1);
        l_id_unit_measure_freq_n    NUMBER(1);
        l_dt_start_presc_tstz_n     NUMBER(1);
        l_refill_n                  NUMBER(1);
        l_qty_inst_n                NUMBER(1);
        l_unit_measure_inst_n       NUMBER(1);
        l_id_pat_medication_list_n  NUMBER(1);
        l_dt_last_change_n          NUMBER(1);
        l_route_id_n                NUMBER(1);
        l_id_justification_n        NUMBER(1);
        l_vers_n                    NUMBER(1);
        l_flg_interac_med_n         NUMBER(1);
        l_flg_interac_allergy_n     NUMBER(1);
        l_id_drug_n                 NUMBER(1);
        l_id_other_product_n        NUMBER(1);
        l_desc_other_product_n      NUMBER(1);
        l_dt_hold_begin_n           NUMBER(1);
        l_dt_hold_end_n             NUMBER(1);
        l_flg_modified_n            NUMBER(1);
        l_status_flg_n              NUMBER(1);
        l_status_icon_n             NUMBER(1);
        l_status_msg_n              NUMBER(1);
        l_status_str_n              NUMBER(1);
        l_dispense_n                NUMBER(1);
        l_unit_measure_dispense_n   NUMBER(1);
        l_flg_dosage_check_n        NUMBER(1);
        l_id_combination_compound_n NUMBER(1);
        l_id_irregular_directions_n NUMBER(1);
        l_create_user_n             NUMBER(1);
        l_create_time_n             NUMBER(1);
        l_create_institution_n      NUMBER(1);
        l_update_user_n             NUMBER(1);
        l_update_time_n             NUMBER(1);
        l_update_institution_n      NUMBER(1);
        l_flg_mix_instr_n           NUMBER(1);
        l_mix_instr_n               NUMBER(1);
        l_id_presc_instr_det_n      NUMBER(1);
        l_num_schemes_n             NUMBER(1);
        l_id_justify_reason_n       NUMBER(1);
        l_justify_reason_n          NUMBER(1);
        l_id_presc_directions_n     NUMBER(1);
        l_flg_free_text_n           NUMBER(1);
        l_id_task_dependency_n      NUMBER(1);
        l_flg_req_origin_module_n   NUMBER(1);
        l_take_in_case_n            NUMBER(1);
        l_id_vacc_manufacturer_n    NUMBER(1);
        l_code_mvx_n                NUMBER(1);
        l_id_cdr_call_n             NUMBER(1);
    BEGIN
    
        l_id_drug_prescription_n    := sys.diutil.bool_to_int(id_drug_prescription_nin);
        l_notes_n                   := sys.diutil.bool_to_int(notes_nin);
        l_flg_take_type_n           := sys.diutil.bool_to_int(flg_take_type_nin);
        l_qty_n                     := sys.diutil.bool_to_int(qty_nin);
        l_rate_n                    := sys.diutil.bool_to_int(rate_nin);
        l_flg_status_n              := sys.diutil.bool_to_int(flg_status_nin);
        l_id_prof_cancel_n          := sys.diutil.bool_to_int(id_prof_cancel_nin);
        l_notes_cancel_n            := sys.diutil.bool_to_int(notes_cancel_nin);
        l_notes_justif_n            := sys.diutil.bool_to_int(notes_justif_nin);
        l_interval_n                := sys.diutil.bool_to_int(interval_nin);
        l_takes_n                   := sys.diutil.bool_to_int(takes_nin);
        l_dosage_n                  := sys.diutil.bool_to_int(dosage_nin);
        l_flg_ci_n                  := sys.diutil.bool_to_int(flg_ci_nin);
        l_flg_cheaper_n             := sys.diutil.bool_to_int(flg_cheaper_nin);
        l_flg_justif_n              := sys.diutil.bool_to_int(flg_justif_nin);
        l_flg_attention_n           := sys.diutil.bool_to_int(flg_attention_nin);
        l_flg_attention_print_n     := sys.diutil.bool_to_int(flg_attention_print_nin);
        l_id_drug_despachos_n       := sys.diutil.bool_to_int(id_drug_despachos_nin);
        l_dosage_description_n      := sys.diutil.bool_to_int(dosage_description_nin);
        l_value_bolus_n             := sys.diutil.bool_to_int(value_bolus_nin);
        l_value_drip_n              := sys.diutil.bool_to_int(value_drip_nin);
        l_id_unit_measure_n         := sys.diutil.bool_to_int(id_unit_measure_nin);
        l_id_unit_measure_bolus_n   := sys.diutil.bool_to_int(id_unit_measure_bolus_nin);
        l_id_unit_measure_drip_n    := sys.diutil.bool_to_int(id_unit_measure_drip_nin);
        l_dt_begin_tstz_n           := sys.diutil.bool_to_int(dt_begin_tstz_nin);
        l_dt_end_tstz_n             := sys.diutil.bool_to_int(dt_end_tstz_nin);
        l_dt_cancel_tstz_n          := sys.diutil.bool_to_int(dt_cancel_tstz_nin);
        l_dt_end_presc_tstz_n       := sys.diutil.bool_to_int(dt_end_presc_tstz_nin);
        l_dt_end_bottle_tstz_n      := sys.diutil.bool_to_int(dt_end_bottle_tstz_nin);
        l_dt_order_n                := sys.diutil.bool_to_int(dt_order_nin);
        l_id_prof_order_n           := sys.diutil.bool_to_int(id_prof_order_nin);
        l_id_order_type_n           := sys.diutil.bool_to_int(id_order_type_nin);
        l_flg_co_sign_n             := sys.diutil.bool_to_int(flg_co_sign_nin);
        l_dt_co_sign_n              := sys.diutil.bool_to_int(dt_co_sign_nin);
        l_notes_co_sign_n           := sys.diutil.bool_to_int(notes_co_sign_nin);
        l_id_prof_co_sign_n         := sys.diutil.bool_to_int(id_prof_co_sign_nin);
        l_duration_n                := sys.diutil.bool_to_int(duration_nin);
        l_id_unit_measure_dur_n     := sys.diutil.bool_to_int(id_unit_measure_dur_nin);
        l_frequency_n               := sys.diutil.bool_to_int(frequency_nin);
        l_id_unit_measure_freq_n    := sys.diutil.bool_to_int(id_unit_measure_freq_nin);
        l_dt_start_presc_tstz_n     := sys.diutil.bool_to_int(dt_start_presc_tstz_nin);
        l_refill_n                  := sys.diutil.bool_to_int(refill_nin);
        l_qty_inst_n                := sys.diutil.bool_to_int(qty_inst_nin);
        l_unit_measure_inst_n       := sys.diutil.bool_to_int(unit_measure_inst_nin);
        l_id_pat_medication_list_n  := sys.diutil.bool_to_int(id_pat_medication_list_nin);
        l_dt_last_change_n          := sys.diutil.bool_to_int(dt_last_change_nin);
        l_route_id_n                := sys.diutil.bool_to_int(route_id_nin);
        l_id_justification_n        := sys.diutil.bool_to_int(id_justification_nin);
        l_vers_n                    := sys.diutil.bool_to_int(vers_nin);
        l_flg_interac_med_n         := sys.diutil.bool_to_int(flg_interac_med_nin);
        l_flg_interac_allergy_n     := sys.diutil.bool_to_int(flg_interac_allergy_nin);
        l_id_drug_n                 := sys.diutil.bool_to_int(id_drug_nin);
        l_id_other_product_n        := sys.diutil.bool_to_int(id_other_product_nin);
        l_desc_other_product_n      := sys.diutil.bool_to_int(desc_other_product_nin);
        l_dt_hold_begin_n           := sys.diutil.bool_to_int(dt_hold_begin_nin);
        l_dt_hold_end_n             := sys.diutil.bool_to_int(dt_hold_end_nin);
        l_flg_modified_n            := sys.diutil.bool_to_int(flg_modified_nin);
        l_status_flg_n              := sys.diutil.bool_to_int(status_flg_nin);
        l_status_icon_n             := sys.diutil.bool_to_int(status_icon_nin);
        l_status_msg_n              := sys.diutil.bool_to_int(status_msg_nin);
        l_status_str_n              := sys.diutil.bool_to_int(status_str_nin);
        l_dispense_n                := sys.diutil.bool_to_int(dispense_nin);
        l_unit_measure_dispense_n   := sys.diutil.bool_to_int(unit_measure_dispense_nin);
        l_flg_dosage_check_n        := sys.diutil.bool_to_int(flg_dosage_check_nin);
        l_id_combination_compound_n := sys.diutil.bool_to_int(id_combination_compound_nin);
        l_id_irregular_directions_n := sys.diutil.bool_to_int(id_irregular_directions_nin);
        l_create_user_n             := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n             := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n      := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n             := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n             := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n      := sys.diutil.bool_to_int(update_institution_nin);
        l_flg_mix_instr_n           := sys.diutil.bool_to_int(flg_mix_instr_nin);
        l_mix_instr_n               := sys.diutil.bool_to_int(mix_instr_nin);
        l_id_presc_instr_det_n      := sys.diutil.bool_to_int(id_presc_instr_det_nin);
        l_num_schemes_n             := sys.diutil.bool_to_int(num_schemes_nin);
        l_id_justify_reason_n       := sys.diutil.bool_to_int(id_justify_reason_nin);
        l_justify_reason_n          := sys.diutil.bool_to_int(justify_reason_nin);
        l_id_presc_directions_n     := sys.diutil.bool_to_int(id_presc_directions_nin);
        l_flg_free_text_n           := sys.diutil.bool_to_int(flg_free_text_nin);
        l_id_task_dependency_n      := sys.diutil.bool_to_int(id_task_dependency_nin);
        l_flg_req_origin_module_n   := sys.diutil.bool_to_int(flg_req_origin_module_nin);
        l_take_in_case_n            := sys.diutil.bool_to_int(take_in_case_nin);
        l_id_vacc_manufacturer_n    := sys.diutil.bool_to_int(id_vacc_manufacturer_nin);
        l_code_mvx_n                := sys.diutil.bool_to_int(code_mvx_nin);
        l_id_cdr_call_n             := sys.diutil.bool_to_int(id_cdr_call_nin);
    
        UPDATE drug_presc_det
           SET id_drug_prescription    = decode(l_id_drug_prescription_n,
                                                0,
                                                id_drug_prescription_in,
                                                nvl(id_drug_prescription_in, id_drug_prescription)),
               notes                   = decode(l_notes_n, 0, notes_in, nvl(notes_in, notes)),
               flg_take_type           = decode(l_flg_take_type_n,
                                                0,
                                                flg_take_type_in,
                                                nvl(flg_take_type_in, flg_take_type)),
               qty                     = decode(l_qty_n, 0, qty_in, nvl(qty_in, qty)),
               rate                    = decode(l_rate_n, 0, rate_in, nvl(rate_in, rate)),
               flg_status              = decode(l_flg_status_n, 0, flg_status_in, nvl(flg_status_in, flg_status)),
               id_prof_cancel          = decode(l_id_prof_cancel_n,
                                                0,
                                                id_prof_cancel_in,
                                                nvl(id_prof_cancel_in, id_prof_cancel)),
               notes_cancel            = decode(l_notes_cancel_n, 0, notes_cancel_in, nvl(notes_cancel_in, notes_cancel)),
               notes_justif            = decode(l_notes_justif_n, 0, notes_justif_in, nvl(notes_justif_in, notes_justif)),
               INTERVAL                = decode(l_interval_n, 0, interval_in, nvl(interval_in, INTERVAL)),
               takes                   = decode(l_takes_n, 0, takes_in, nvl(takes_in, takes)),
               dosage                  = decode(l_dosage_n, 0, dosage_in, nvl(dosage_in, dosage)),
               flg_ci                  = decode(l_flg_ci_n, 0, flg_ci_in, nvl(flg_ci_in, flg_ci)),
               flg_cheaper             = decode(l_flg_cheaper_n, 0, flg_cheaper_in, nvl(flg_cheaper_in, flg_cheaper)),
               flg_justif              = decode(l_flg_justif_n, 0, flg_justif_in, nvl(flg_justif_in, flg_justif)),
               flg_attention           = decode(l_flg_attention_n,
                                                0,
                                                flg_attention_in,
                                                nvl(flg_attention_in, flg_attention)),
               flg_attention_print     = decode(l_flg_attention_print_n,
                                                0,
                                                flg_attention_print_in,
                                                nvl(flg_attention_print_in, flg_attention_print)),
               id_drug_despachos       = decode(l_id_drug_despachos_n,
                                                0,
                                                id_drug_despachos_in,
                                                nvl(id_drug_despachos_in, id_drug_despachos)),
               dosage_description      = decode(l_dosage_description_n,
                                                0,
                                                dosage_description_in,
                                                nvl(dosage_description_in, dosage_description)),
               value_bolus             = decode(l_value_bolus_n, 0, value_bolus_in, nvl(value_bolus_in, value_bolus)),
               value_drip              = decode(l_value_drip_n, 0, value_drip_in, nvl(value_drip_in, value_drip)),
               id_unit_measure         = decode(l_id_unit_measure_n,
                                                0,
                                                id_unit_measure_in,
                                                nvl(id_unit_measure_in, id_unit_measure)),
               id_unit_measure_bolus   = decode(l_id_unit_measure_bolus_n,
                                                0,
                                                id_unit_measure_bolus_in,
                                                nvl(id_unit_measure_bolus_in, id_unit_measure_bolus)),
               id_unit_measure_drip    = decode(l_id_unit_measure_drip_n,
                                                0,
                                                id_unit_measure_drip_in,
                                                nvl(id_unit_measure_drip_in, id_unit_measure_drip)),
               dt_begin_tstz           = decode(l_dt_begin_tstz_n,
                                                0,
                                                dt_begin_tstz_in,
                                                nvl(dt_begin_tstz_in, dt_begin_tstz)),
               dt_end_tstz             = decode(l_dt_end_tstz_n, 0, dt_end_tstz_in, nvl(dt_end_tstz_in, dt_end_tstz)),
               dt_cancel_tstz          = decode(l_dt_cancel_tstz_n,
                                                0,
                                                dt_cancel_tstz_in,
                                                nvl(dt_cancel_tstz_in, dt_cancel_tstz)),
               dt_end_presc_tstz       = decode(l_dt_end_presc_tstz_n,
                                                0,
                                                dt_end_presc_tstz_in,
                                                nvl(dt_end_presc_tstz_in, dt_end_presc_tstz)),
               dt_end_bottle_tstz      = decode(l_dt_end_bottle_tstz_n,
                                                0,
                                                dt_end_bottle_tstz_in,
                                                nvl(dt_end_bottle_tstz_in, dt_end_bottle_tstz)),
               dt_order                = decode(l_dt_order_n, 0, dt_order_in, nvl(dt_order_in, dt_order)),
               id_prof_order           = decode(l_id_prof_order_n,
                                                0,
                                                id_prof_order_in,
                                                nvl(id_prof_order_in, id_prof_order)),
               id_order_type           = decode(l_id_order_type_n,
                                                0,
                                                id_order_type_in,
                                                nvl(id_order_type_in, id_order_type)),
               flg_co_sign             = decode(l_flg_co_sign_n, 0, flg_co_sign_in, nvl(flg_co_sign_in, flg_co_sign)),
               dt_co_sign              = decode(l_dt_co_sign_n, 0, dt_co_sign_in, nvl(dt_co_sign_in, dt_co_sign)),
               notes_co_sign           = decode(l_notes_co_sign_n,
                                                0,
                                                notes_co_sign_in,
                                                nvl(notes_co_sign_in, notes_co_sign)),
               id_prof_co_sign         = decode(l_id_prof_co_sign_n,
                                                0,
                                                id_prof_co_sign_in,
                                                nvl(id_prof_co_sign_in, id_prof_co_sign)),
               duration                = decode(l_duration_n, 0, duration_in, nvl(duration_in, duration)),
               id_unit_measure_dur     = decode(l_id_unit_measure_dur_n,
                                                0,
                                                id_unit_measure_dur_in,
                                                nvl(id_unit_measure_dur_in, id_unit_measure_dur)),
               frequency               = decode(l_frequency_n, 0, frequency_in, nvl(frequency_in, frequency)),
               id_unit_measure_freq    = decode(l_id_unit_measure_freq_n,
                                                0,
                                                id_unit_measure_freq_in,
                                                nvl(id_unit_measure_freq_in, id_unit_measure_freq)),
               dt_start_presc_tstz     = decode(l_dt_start_presc_tstz_n,
                                                0,
                                                dt_start_presc_tstz_in,
                                                nvl(dt_start_presc_tstz_in, dt_start_presc_tstz)),
               refill                  = decode(l_refill_n, 0, refill_in, nvl(refill_in, refill)),
               qty_inst                = decode(l_qty_inst_n, 0, qty_inst_in, nvl(qty_inst_in, qty_inst)),
               unit_measure_inst       = decode(l_unit_measure_inst_n,
                                                0,
                                                unit_measure_inst_in,
                                                nvl(unit_measure_inst_in, unit_measure_inst)),
               id_pat_medication_list  = decode(l_id_pat_medication_list_n,
                                                0,
                                                id_pat_medication_list_in,
                                                nvl(id_pat_medication_list_in, id_pat_medication_list)),
               dt_last_change          = decode(l_dt_last_change_n,
                                                0,
                                                dt_last_change_in,
                                                nvl(dt_last_change_in, dt_last_change)),
               route_id                = decode(l_route_id_n, 0, route_id_in, nvl(route_id_in, route_id)),
               id_justification        = decode(l_id_justification_n,
                                                0,
                                                id_justification_in,
                                                nvl(id_justification_in, id_justification)),
               vers                    = decode(l_vers_n, 0, vers_in, nvl(vers_in, vers)),
               flg_interac_med         = decode(l_flg_interac_med_n,
                                                0,
                                                flg_interac_med_in,
                                                nvl(flg_interac_med_in, flg_interac_med)),
               flg_interac_allergy     = decode(l_flg_interac_allergy_n,
                                                0,
                                                flg_interac_allergy_in,
                                                nvl(flg_interac_allergy_in, flg_interac_allergy)),
               id_drug                 = decode(l_id_drug_n, 0, id_drug_in, nvl(id_drug_in, id_drug)),
               id_other_product        = decode(l_id_other_product_n,
                                                0,
                                                id_other_product_in,
                                                nvl(id_other_product_in, id_other_product)),
               desc_other_product      = decode(l_desc_other_product_n,
                                                0,
                                                desc_other_product_in,
                                                nvl(desc_other_product_in, desc_other_product)),
               dt_hold_begin           = decode(l_dt_hold_begin_n,
                                                0,
                                                dt_hold_begin_in,
                                                nvl(dt_hold_begin_in, dt_hold_begin)),
               dt_hold_end             = decode(l_dt_hold_end_n, 0, dt_hold_end_in, nvl(dt_hold_end_in, dt_hold_end)),
               flg_modified            = decode(l_flg_modified_n, 0, flg_modified_in, nvl(flg_modified_in, flg_modified)),
               status_flg              = decode(l_status_flg_n, 0, status_flg_in, nvl(status_flg_in, status_flg)),
               status_icon             = decode(l_status_icon_n, 0, status_icon_in, nvl(status_icon_in, status_icon)),
               status_msg              = decode(l_status_msg_n, 0, status_msg_in, nvl(status_msg_in, status_msg)),
               status_str              = decode(l_status_str_n, 0, status_str_in, nvl(status_str_in, status_str)),
               dispense                = decode(l_dispense_n, 0, dispense_in, nvl(dispense_in, dispense)),
               unit_measure_dispense   = decode(l_unit_measure_dispense_n,
                                                0,
                                                unit_measure_dispense_in,
                                                nvl(unit_measure_dispense_in, unit_measure_dispense)),
               flg_dosage_check        = decode(l_flg_dosage_check_n,
                                                0,
                                                flg_dosage_check_in,
                                                nvl(flg_dosage_check_in, flg_dosage_check)),
               id_combination_compound = decode(l_id_combination_compound_n,
                                                0,
                                                id_combination_compound_in,
                                                nvl(id_combination_compound_in, id_combination_compound)),
               id_irregular_directions = decode(l_id_irregular_directions_n,
                                                0,
                                                id_irregular_directions_in,
                                                nvl(id_irregular_directions_in, id_irregular_directions)),
               create_user             = decode(l_create_user_n, 0, create_user_in, nvl(create_user_in, create_user)),
               create_time             = decode(l_create_time_n, 0, create_time_in, nvl(create_time_in, create_time)),
               create_institution      = decode(l_create_institution_n,
                                                0,
                                                create_institution_in,
                                                nvl(create_institution_in, create_institution)),
               update_user             = decode(l_update_user_n, 0, update_user_in, nvl(update_user_in, update_user)),
               update_time             = decode(l_update_time_n, 0, update_time_in, nvl(update_time_in, update_time)),
               update_institution      = decode(l_update_institution_n,
                                                0,
                                                update_institution_in,
                                                nvl(update_institution_in, update_institution)),
               flg_mix_instr           = decode(l_flg_mix_instr_n,
                                                0,
                                                flg_mix_instr_in,
                                                nvl(flg_mix_instr_in, flg_mix_instr)),
               mix_instr               = decode(l_mix_instr_n, 0, mix_instr_in, nvl(mix_instr_in, mix_instr)),
               id_presc_instr_det      = decode(l_id_presc_instr_det_n,
                                                0,
                                                id_presc_instr_det_in,
                                                nvl(id_presc_instr_det_in, id_presc_instr_det)),
               num_schemes             = decode(l_num_schemes_n, 0, num_schemes_in, nvl(num_schemes_in, num_schemes)),
               id_justify_reason       = decode(l_id_justify_reason_n,
                                                0,
                                                id_justify_reason_in,
                                                nvl(id_justify_reason_in, id_justify_reason)),
               justify_reason          = decode(l_justify_reason_n,
                                                0,
                                                justify_reason_in,
                                                nvl(justify_reason_in, justify_reason)),
               id_presc_directions     = decode(l_id_presc_directions_n,
                                                0,
                                                id_presc_directions_in,
                                                nvl(id_presc_directions_in, id_presc_directions)),
               flg_free_text           = decode(l_flg_free_text_n,
                                                0,
                                                flg_free_text_in,
                                                nvl(flg_free_text_in, flg_free_text)),
               id_task_dependency      = decode(l_id_task_dependency_n,
                                                0,
                                                id_task_dependency_in,
                                                nvl(id_task_dependency_in, id_task_dependency)),
               flg_req_origin_module   = decode(l_flg_req_origin_module_n,
                                                0,
                                                flg_req_origin_module_in,
                                                nvl(flg_req_origin_module_in, flg_req_origin_module)),
               take_in_case            = decode(l_take_in_case_n, 0, take_in_case_in, nvl(take_in_case_in, take_in_case)),
               id_vacc_manufacturer    = decode(l_id_vacc_manufacturer_n,
                                                0,
                                                id_vacc_manufacturer_in,
                                                nvl(id_vacc_manufacturer_in, id_vacc_manufacturer)),
               code_mvx                = decode(l_code_mvx_n, 0, code_mvx_in, nvl(code_mvx_in, code_mvx)),
               id_cdr_call             = decode(l_id_cdr_call_n, 0, id_cdr_call_in, nvl(id_cdr_call_in, id_cdr_call))
         WHERE id_drug_presc_det = id_drug_presc_det_in
        RETURNING ROWID BULK COLLECT INTO l_rows_out;
    
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
    
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN dup_val_on_index THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner           all_constraints.owner%TYPE;
                    l_name            all_constraints.constraint_name%TYPE;
                    l_err_instance_id PLS_INTEGER;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF FALSE
                    THEN
                        NULL; -- Placeholder in case no unique indexes
                    ELSIF l_name = 'DPD_IDDPD_IDDP_IDD_FLGST_IDX'
                    THEN
                        pk_alert_exceptions.register_error(error_name_in       => 'DUPLICATE-VALUE',
                                                           err_instance_id_out => l_err_instance_id,
                                                           text_in             => 'Violation of unique index "DPD_IDDPD_IDDP_IDD_FLGST_IDX"');
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'OWNER',
                                                        value_in           => l_owner,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'CONSTRAINT_NAME',
                                                        value_in           => l_name,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'TABLE_NAME',
                                                        value_in           => 'DRUG_PRESC_DET',
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_DRUG_PRESC_DET',
                                                        value_in           => id_drug_presc_det_in,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_DRUG_PRESCRIPTION',
                                                        value_in           => id_drug_prescription_in,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_DRUG',
                                                        value_in           => id_drug_in,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_STATUS',
                                                        value_in           => flg_status_in,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_err_instance_id);
                    ELSIF l_name = 'DPD_PDIR_IDX'
                    THEN
                        pk_alert_exceptions.register_error(error_name_in       => 'DUPLICATE-VALUE',
                                                           err_instance_id_out => l_err_instance_id,
                                                           text_in             => 'Violation of unique index "DPD_PDIR_IDX"');
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'OWNER',
                                                        value_in           => l_owner,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'CONSTRAINT_NAME',
                                                        value_in           => l_name,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'TABLE_NAME',
                                                        value_in           => 'DRUG_PRESC_DET',
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PRESC_DIRECTIONS',
                                                        value_in           => id_presc_directions_in,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_err_instance_id);
                    ELSE
                        pk_alert_exceptions.raise_error(error_name_in => 'DUPLICATE-VALUE',
                                                        name1_in      => 'OWNER',
                                                        value1_in     => l_owner,
                                                        name2_in      => 'CONSTRAINT_NAME',
                                                        value2_in     => l_name,
                                                        name3_in      => 'TABLE_NAME',
                                                        value3_in     => 'DRUG_PRESC_DET');
                    END IF;
                END;
            END IF;
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    IF l_name = 'DPD_CC_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_CDR_CALL',
                                                        value_in           => id_cdr_call_in);
                    END IF;
                    IF l_name = 'DPD_ID_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_IRREGULAR_DIRECTIONS',
                                                        value_in           => id_irregular_directions_in);
                    END IF;
                    IF l_name = 'DPD_IPML_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PAT_MEDICATION_LIST',
                                                        value_in           => id_pat_medication_list_in);
                    END IF;
                    IF l_name = 'DPD_JINT_IDJ_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_JUSTIFICATION',
                                                        value_in           => id_justification_in);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'VERS',
                                                        value_in           => vers_in);
                    END IF;
                    IF l_name = 'DPD_JRS_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_JUSTIFY_REASON',
                                                        value_in           => id_justify_reason_in);
                    END IF;
                    IF l_name = 'DPD_MED_INT_ID_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_DRUG',
                                                        value_in           => id_drug_in);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'VERS',
                                                        value_in           => vers_in);
                    END IF;
                    IF l_name = 'DPD_PDIR_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PRESC_DIRECTIONS',
                                                        value_in           => id_presc_directions_in);
                    END IF;
                    IF l_name = 'DPD_RINT_IDR_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ROUTE_ID',
                                                        value_in           => route_id_in);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'VERS',
                                                        value_in           => vers_in);
                    END IF;
                    IF l_name = 'DPDT_DPN_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_DRUG_PRESCRIPTION',
                                                        value_in           => id_drug_prescription_in);
                    END IF;
                    IF l_name = 'DPDT_DRDP_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_DRUG_DESPACHOS',
                                                        value_in           => id_drug_despachos_in);
                    END IF;
                    IF l_name = 'DPDT_PIST_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PRESC_INSTR_DET',
                                                        value_in           => id_presc_instr_det_in);
                    END IF;
                    IF l_name = 'DPDT_PROF_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_CANCEL',
                                                        value_in           => id_prof_cancel_in);
                    END IF;
                    IF l_name = 'DPDT_TDETD_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_TASK_DEPENDENCY',
                                                        value_in           => id_task_dependency_in);
                    END IF;
                    IF l_name = 'DPDT_UM_BOLUS_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_UNIT_MEASURE_BOLUS',
                                                        value_in           => id_unit_measure_bolus_in);
                    END IF;
                    IF l_name = 'DPDT_UM_DRIP'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_UNIT_MEASURE_DRIP',
                                                        value_in           => id_unit_measure_drip_in);
                    END IF;
                    IF l_name = 'DPDT_UM_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_UNIT_MEASURE',
                                                        value_in           => id_unit_measure_in);
                    END IF;
                    IF l_name = 'DPD_UME_DISP_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'UNIT_MEASURE_DISPENSE',
                                                        value_in           => unit_measure_dispense_in);
                    END IF;
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
        WHEN e_null_column_value THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    v_errm    VARCHAR2(2000) := dbms_utility.format_error_stack;
                    dot1loc   INTEGER;
                    dot2loc   INTEGER;
                    parenloc  INTEGER;
                    c_owner   all_constraints.owner%TYPE;
                    c_tabname all_tables.table_name%TYPE;
                    c_colname all_tab_columns.column_name%TYPE;
                BEGIN
                    dot1loc   := instr(v_errm, '.', 1, 1);
                    dot2loc   := instr(v_errm, '.', 1, 2);
                    parenloc  := instr(v_errm, '(');
                    c_owner   := substr(v_errm, parenloc + 1, dot1loc - parenloc - 1);
                    c_tabname := substr(v_errm, dot1loc + 1, dot2loc - dot1loc - 1);
                    c_colname := substr(v_errm, dot2loc + 1, instr(v_errm, ')') - dot2loc - 1);
                
                    pk_alert_exceptions.raise_error(error_name_in => 'COLUMN-CANNOT-BE-NULL',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => c_owner,
                                                    name2_in      => 'TABLE_NAME',
                                                    value2_in     => c_tabname,
                                                    name3_in      => 'COLUMN_NAME',
                                                    value3_in     => c_colname);
                END;
            END IF;
    END upd;

    PROCEDURE upd
    (
        id_drug_presc_det_in        IN drug_presc_det.id_drug_presc_det%TYPE,
        id_drug_prescription_in     IN drug_presc_det.id_drug_prescription%TYPE DEFAULT NULL,
        id_drug_prescription_nin    IN BOOLEAN := TRUE,
        notes_in                    IN drug_presc_det.notes%TYPE DEFAULT NULL,
        notes_nin                   IN BOOLEAN := TRUE,
        flg_take_type_in            IN drug_presc_det.flg_take_type%TYPE DEFAULT NULL,
        flg_take_type_nin           IN BOOLEAN := TRUE,
        qty_in                      IN drug_presc_det.qty%TYPE DEFAULT NULL,
        qty_nin                     IN BOOLEAN := TRUE,
        rate_in                     IN drug_presc_det.rate%TYPE DEFAULT NULL,
        rate_nin                    IN BOOLEAN := TRUE,
        flg_status_in               IN drug_presc_det.flg_status%TYPE DEFAULT NULL,
        flg_status_nin              IN BOOLEAN := TRUE,
        id_prof_cancel_in           IN drug_presc_det.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin          IN BOOLEAN := TRUE,
        notes_cancel_in             IN drug_presc_det.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin            IN BOOLEAN := TRUE,
        notes_justif_in             IN drug_presc_det.notes_justif%TYPE DEFAULT NULL,
        notes_justif_nin            IN BOOLEAN := TRUE,
        interval_in                 IN drug_presc_det.interval%TYPE DEFAULT NULL,
        interval_nin                IN BOOLEAN := TRUE,
        takes_in                    IN drug_presc_det.takes%TYPE DEFAULT NULL,
        takes_nin                   IN BOOLEAN := TRUE,
        dosage_in                   IN drug_presc_det.dosage%TYPE DEFAULT NULL,
        dosage_nin                  IN BOOLEAN := TRUE,
        flg_ci_in                   IN drug_presc_det.flg_ci%TYPE DEFAULT NULL,
        flg_ci_nin                  IN BOOLEAN := TRUE,
        flg_cheaper_in              IN drug_presc_det.flg_cheaper%TYPE DEFAULT NULL,
        flg_cheaper_nin             IN BOOLEAN := TRUE,
        flg_justif_in               IN drug_presc_det.flg_justif%TYPE DEFAULT NULL,
        flg_justif_nin              IN BOOLEAN := TRUE,
        flg_attention_in            IN drug_presc_det.flg_attention%TYPE DEFAULT NULL,
        flg_attention_nin           IN BOOLEAN := TRUE,
        flg_attention_print_in      IN drug_presc_det.flg_attention_print%TYPE DEFAULT NULL,
        flg_attention_print_nin     IN BOOLEAN := TRUE,
        id_drug_despachos_in        IN drug_presc_det.id_drug_despachos%TYPE DEFAULT NULL,
        id_drug_despachos_nin       IN BOOLEAN := TRUE,
        dosage_description_in       IN drug_presc_det.dosage_description%TYPE DEFAULT NULL,
        dosage_description_nin      IN BOOLEAN := TRUE,
        value_bolus_in              IN drug_presc_det.value_bolus%TYPE DEFAULT NULL,
        value_bolus_nin             IN BOOLEAN := TRUE,
        value_drip_in               IN drug_presc_det.value_drip%TYPE DEFAULT NULL,
        value_drip_nin              IN BOOLEAN := TRUE,
        id_unit_measure_in          IN drug_presc_det.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_nin         IN BOOLEAN := TRUE,
        id_unit_measure_bolus_in    IN drug_presc_det.id_unit_measure_bolus%TYPE DEFAULT NULL,
        id_unit_measure_bolus_nin   IN BOOLEAN := TRUE,
        id_unit_measure_drip_in     IN drug_presc_det.id_unit_measure_drip%TYPE DEFAULT NULL,
        id_unit_measure_drip_nin    IN BOOLEAN := TRUE,
        dt_begin_tstz_in            IN drug_presc_det.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_nin           IN BOOLEAN := TRUE,
        dt_end_tstz_in              IN drug_presc_det.dt_end_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_nin             IN BOOLEAN := TRUE,
        dt_cancel_tstz_in           IN drug_presc_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin          IN BOOLEAN := TRUE,
        dt_end_presc_tstz_in        IN drug_presc_det.dt_end_presc_tstz%TYPE DEFAULT NULL,
        dt_end_presc_tstz_nin       IN BOOLEAN := TRUE,
        dt_end_bottle_tstz_in       IN drug_presc_det.dt_end_bottle_tstz%TYPE DEFAULT NULL,
        dt_end_bottle_tstz_nin      IN BOOLEAN := TRUE,
        dt_order_in                 IN drug_presc_det.dt_order%TYPE DEFAULT NULL,
        dt_order_nin                IN BOOLEAN := TRUE,
        id_prof_order_in            IN drug_presc_det.id_prof_order%TYPE DEFAULT NULL,
        id_prof_order_nin           IN BOOLEAN := TRUE,
        id_order_type_in            IN drug_presc_det.id_order_type%TYPE DEFAULT NULL,
        id_order_type_nin           IN BOOLEAN := TRUE,
        flg_co_sign_in              IN drug_presc_det.flg_co_sign%TYPE DEFAULT NULL,
        flg_co_sign_nin             IN BOOLEAN := TRUE,
        dt_co_sign_in               IN drug_presc_det.dt_co_sign%TYPE DEFAULT NULL,
        dt_co_sign_nin              IN BOOLEAN := TRUE,
        notes_co_sign_in            IN drug_presc_det.notes_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_nin           IN BOOLEAN := TRUE,
        id_prof_co_sign_in          IN drug_presc_det.id_prof_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_nin         IN BOOLEAN := TRUE,
        duration_in                 IN drug_presc_det.duration%TYPE DEFAULT NULL,
        duration_nin                IN BOOLEAN := TRUE,
        id_unit_measure_dur_in      IN drug_presc_det.id_unit_measure_dur%TYPE DEFAULT NULL,
        id_unit_measure_dur_nin     IN BOOLEAN := TRUE,
        frequency_in                IN drug_presc_det.frequency%TYPE DEFAULT NULL,
        frequency_nin               IN BOOLEAN := TRUE,
        id_unit_measure_freq_in     IN drug_presc_det.id_unit_measure_freq%TYPE DEFAULT NULL,
        id_unit_measure_freq_nin    IN BOOLEAN := TRUE,
        dt_start_presc_tstz_in      IN drug_presc_det.dt_start_presc_tstz%TYPE DEFAULT NULL,
        dt_start_presc_tstz_nin     IN BOOLEAN := TRUE,
        refill_in                   IN drug_presc_det.refill%TYPE DEFAULT NULL,
        refill_nin                  IN BOOLEAN := TRUE,
        qty_inst_in                 IN drug_presc_det.qty_inst%TYPE DEFAULT NULL,
        qty_inst_nin                IN BOOLEAN := TRUE,
        unit_measure_inst_in        IN drug_presc_det.unit_measure_inst%TYPE DEFAULT NULL,
        unit_measure_inst_nin       IN BOOLEAN := TRUE,
        id_pat_medication_list_in   IN drug_presc_det.id_pat_medication_list%TYPE DEFAULT NULL,
        id_pat_medication_list_nin  IN BOOLEAN := TRUE,
        dt_last_change_in           IN drug_presc_det.dt_last_change%TYPE DEFAULT NULL,
        dt_last_change_nin          IN BOOLEAN := TRUE,
        route_id_in                 IN drug_presc_det.route_id%TYPE DEFAULT NULL,
        route_id_nin                IN BOOLEAN := TRUE,
        id_justification_in         IN drug_presc_det.id_justification%TYPE DEFAULT NULL,
        id_justification_nin        IN BOOLEAN := TRUE,
        vers_in                     IN drug_presc_det.vers%TYPE DEFAULT NULL,
        vers_nin                    IN BOOLEAN := TRUE,
        flg_interac_med_in          IN drug_presc_det.flg_interac_med%TYPE DEFAULT NULL,
        flg_interac_med_nin         IN BOOLEAN := TRUE,
        flg_interac_allergy_in      IN drug_presc_det.flg_interac_allergy%TYPE DEFAULT NULL,
        flg_interac_allergy_nin     IN BOOLEAN := TRUE,
        id_drug_in                  IN drug_presc_det.id_drug%TYPE DEFAULT NULL,
        id_drug_nin                 IN BOOLEAN := TRUE,
        id_other_product_in         IN drug_presc_det.id_other_product%TYPE DEFAULT NULL,
        id_other_product_nin        IN BOOLEAN := TRUE,
        desc_other_product_in       IN drug_presc_det.desc_other_product%TYPE DEFAULT NULL,
        desc_other_product_nin      IN BOOLEAN := TRUE,
        dt_hold_begin_in            IN drug_presc_det.dt_hold_begin%TYPE DEFAULT NULL,
        dt_hold_begin_nin           IN BOOLEAN := TRUE,
        dt_hold_end_in              IN drug_presc_det.dt_hold_end%TYPE DEFAULT NULL,
        dt_hold_end_nin             IN BOOLEAN := TRUE,
        flg_modified_in             IN drug_presc_det.flg_modified%TYPE DEFAULT NULL,
        flg_modified_nin            IN BOOLEAN := TRUE,
        status_flg_in               IN drug_presc_det.status_flg%TYPE DEFAULT NULL,
        status_flg_nin              IN BOOLEAN := TRUE,
        status_icon_in              IN drug_presc_det.status_icon%TYPE DEFAULT NULL,
        status_icon_nin             IN BOOLEAN := TRUE,
        status_msg_in               IN drug_presc_det.status_msg%TYPE DEFAULT NULL,
        status_msg_nin              IN BOOLEAN := TRUE,
        status_str_in               IN drug_presc_det.status_str%TYPE DEFAULT NULL,
        status_str_nin              IN BOOLEAN := TRUE,
        dispense_in                 IN drug_presc_det.dispense%TYPE DEFAULT NULL,
        dispense_nin                IN BOOLEAN := TRUE,
        unit_measure_dispense_in    IN drug_presc_det.unit_measure_dispense%TYPE DEFAULT NULL,
        unit_measure_dispense_nin   IN BOOLEAN := TRUE,
        flg_dosage_check_in         IN drug_presc_det.flg_dosage_check%TYPE DEFAULT NULL,
        flg_dosage_check_nin        IN BOOLEAN := TRUE,
        id_combination_compound_in  IN drug_presc_det.id_combination_compound%TYPE DEFAULT NULL,
        id_combination_compound_nin IN BOOLEAN := TRUE,
        id_irregular_directions_in  IN drug_presc_det.id_irregular_directions%TYPE DEFAULT NULL,
        id_irregular_directions_nin IN BOOLEAN := TRUE,
        create_user_in              IN drug_presc_det.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN drug_presc_det.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN drug_presc_det.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN drug_presc_det.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN drug_presc_det.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN drug_presc_det.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        flg_mix_instr_in            IN drug_presc_det.flg_mix_instr%TYPE DEFAULT NULL,
        flg_mix_instr_nin           IN BOOLEAN := TRUE,
        mix_instr_in                IN drug_presc_det.mix_instr%TYPE DEFAULT NULL,
        mix_instr_nin               IN BOOLEAN := TRUE,
        id_presc_instr_det_in       IN drug_presc_det.id_presc_instr_det%TYPE DEFAULT NULL,
        id_presc_instr_det_nin      IN BOOLEAN := TRUE,
        num_schemes_in              IN drug_presc_det.num_schemes%TYPE DEFAULT NULL,
        num_schemes_nin             IN BOOLEAN := TRUE,
        id_justify_reason_in        IN drug_presc_det.id_justify_reason%TYPE DEFAULT NULL,
        id_justify_reason_nin       IN BOOLEAN := TRUE,
        justify_reason_in           IN drug_presc_det.justify_reason%TYPE DEFAULT NULL,
        justify_reason_nin          IN BOOLEAN := TRUE,
        id_presc_directions_in      IN drug_presc_det.id_presc_directions%TYPE DEFAULT NULL,
        id_presc_directions_nin     IN BOOLEAN := TRUE,
        flg_free_text_in            IN drug_presc_det.flg_free_text%TYPE DEFAULT NULL,
        flg_free_text_nin           IN BOOLEAN := TRUE,
        id_task_dependency_in       IN drug_presc_det.id_task_dependency%TYPE DEFAULT NULL,
        id_task_dependency_nin      IN BOOLEAN := TRUE,
        flg_req_origin_module_in    IN drug_presc_det.flg_req_origin_module%TYPE DEFAULT NULL,
        flg_req_origin_module_nin   IN BOOLEAN := TRUE,
        take_in_case_in             IN drug_presc_det.take_in_case%TYPE DEFAULT NULL,
        take_in_case_nin            IN BOOLEAN := TRUE,
        id_vacc_manufacturer_in     IN drug_presc_det.id_vacc_manufacturer%TYPE DEFAULT NULL,
        id_vacc_manufacturer_nin    IN BOOLEAN := TRUE,
        code_mvx_in                 IN drug_presc_det.code_mvx%TYPE DEFAULT NULL,
        code_mvx_nin                IN BOOLEAN := TRUE,
        id_cdr_call_in              IN drug_presc_det.id_cdr_call%TYPE DEFAULT NULL,
        id_cdr_call_nin             IN BOOLEAN := TRUE,
        handle_error_in             IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_drug_presc_det_in        => id_drug_presc_det_in,
            id_drug_prescription_in     => id_drug_prescription_in,
            id_drug_prescription_nin    => id_drug_prescription_nin,
            notes_in                    => notes_in,
            notes_nin                   => notes_nin,
            flg_take_type_in            => flg_take_type_in,
            flg_take_type_nin           => flg_take_type_nin,
            qty_in                      => qty_in,
            qty_nin                     => qty_nin,
            rate_in                     => rate_in,
            rate_nin                    => rate_nin,
            flg_status_in               => flg_status_in,
            flg_status_nin              => flg_status_nin,
            id_prof_cancel_in           => id_prof_cancel_in,
            id_prof_cancel_nin          => id_prof_cancel_nin,
            notes_cancel_in             => notes_cancel_in,
            notes_cancel_nin            => notes_cancel_nin,
            notes_justif_in             => notes_justif_in,
            notes_justif_nin            => notes_justif_nin,
            interval_in                 => interval_in,
            interval_nin                => interval_nin,
            takes_in                    => takes_in,
            takes_nin                   => takes_nin,
            dosage_in                   => dosage_in,
            dosage_nin                  => dosage_nin,
            flg_ci_in                   => flg_ci_in,
            flg_ci_nin                  => flg_ci_nin,
            flg_cheaper_in              => flg_cheaper_in,
            flg_cheaper_nin             => flg_cheaper_nin,
            flg_justif_in               => flg_justif_in,
            flg_justif_nin              => flg_justif_nin,
            flg_attention_in            => flg_attention_in,
            flg_attention_nin           => flg_attention_nin,
            flg_attention_print_in      => flg_attention_print_in,
            flg_attention_print_nin     => flg_attention_print_nin,
            id_drug_despachos_in        => id_drug_despachos_in,
            id_drug_despachos_nin       => id_drug_despachos_nin,
            dosage_description_in       => dosage_description_in,
            dosage_description_nin      => dosage_description_nin,
            value_bolus_in              => value_bolus_in,
            value_bolus_nin             => value_bolus_nin,
            value_drip_in               => value_drip_in,
            value_drip_nin              => value_drip_nin,
            id_unit_measure_in          => id_unit_measure_in,
            id_unit_measure_nin         => id_unit_measure_nin,
            id_unit_measure_bolus_in    => id_unit_measure_bolus_in,
            id_unit_measure_bolus_nin   => id_unit_measure_bolus_nin,
            id_unit_measure_drip_in     => id_unit_measure_drip_in,
            id_unit_measure_drip_nin    => id_unit_measure_drip_nin,
            dt_begin_tstz_in            => dt_begin_tstz_in,
            dt_begin_tstz_nin           => dt_begin_tstz_nin,
            dt_end_tstz_in              => dt_end_tstz_in,
            dt_end_tstz_nin             => dt_end_tstz_nin,
            dt_cancel_tstz_in           => dt_cancel_tstz_in,
            dt_cancel_tstz_nin          => dt_cancel_tstz_nin,
            dt_end_presc_tstz_in        => dt_end_presc_tstz_in,
            dt_end_presc_tstz_nin       => dt_end_presc_tstz_nin,
            dt_end_bottle_tstz_in       => dt_end_bottle_tstz_in,
            dt_end_bottle_tstz_nin      => dt_end_bottle_tstz_nin,
            dt_order_in                 => dt_order_in,
            dt_order_nin                => dt_order_nin,
            id_prof_order_in            => id_prof_order_in,
            id_prof_order_nin           => id_prof_order_nin,
            id_order_type_in            => id_order_type_in,
            id_order_type_nin           => id_order_type_nin,
            flg_co_sign_in              => flg_co_sign_in,
            flg_co_sign_nin             => flg_co_sign_nin,
            dt_co_sign_in               => dt_co_sign_in,
            dt_co_sign_nin              => dt_co_sign_nin,
            notes_co_sign_in            => notes_co_sign_in,
            notes_co_sign_nin           => notes_co_sign_nin,
            id_prof_co_sign_in          => id_prof_co_sign_in,
            id_prof_co_sign_nin         => id_prof_co_sign_nin,
            duration_in                 => duration_in,
            duration_nin                => duration_nin,
            id_unit_measure_dur_in      => id_unit_measure_dur_in,
            id_unit_measure_dur_nin     => id_unit_measure_dur_nin,
            frequency_in                => frequency_in,
            frequency_nin               => frequency_nin,
            id_unit_measure_freq_in     => id_unit_measure_freq_in,
            id_unit_measure_freq_nin    => id_unit_measure_freq_nin,
            dt_start_presc_tstz_in      => dt_start_presc_tstz_in,
            dt_start_presc_tstz_nin     => dt_start_presc_tstz_nin,
            refill_in                   => refill_in,
            refill_nin                  => refill_nin,
            qty_inst_in                 => qty_inst_in,
            qty_inst_nin                => qty_inst_nin,
            unit_measure_inst_in        => unit_measure_inst_in,
            unit_measure_inst_nin       => unit_measure_inst_nin,
            id_pat_medication_list_in   => id_pat_medication_list_in,
            id_pat_medication_list_nin  => id_pat_medication_list_nin,
            dt_last_change_in           => dt_last_change_in,
            dt_last_change_nin          => dt_last_change_nin,
            route_id_in                 => route_id_in,
            route_id_nin                => route_id_nin,
            id_justification_in         => id_justification_in,
            id_justification_nin        => id_justification_nin,
            vers_in                     => vers_in,
            vers_nin                    => vers_nin,
            flg_interac_med_in          => flg_interac_med_in,
            flg_interac_med_nin         => flg_interac_med_nin,
            flg_interac_allergy_in      => flg_interac_allergy_in,
            flg_interac_allergy_nin     => flg_interac_allergy_nin,
            id_drug_in                  => id_drug_in,
            id_drug_nin                 => id_drug_nin,
            id_other_product_in         => id_other_product_in,
            id_other_product_nin        => id_other_product_nin,
            desc_other_product_in       => desc_other_product_in,
            desc_other_product_nin      => desc_other_product_nin,
            dt_hold_begin_in            => dt_hold_begin_in,
            dt_hold_begin_nin           => dt_hold_begin_nin,
            dt_hold_end_in              => dt_hold_end_in,
            dt_hold_end_nin             => dt_hold_end_nin,
            flg_modified_in             => flg_modified_in,
            flg_modified_nin            => flg_modified_nin,
            status_flg_in               => status_flg_in,
            status_flg_nin              => status_flg_nin,
            status_icon_in              => status_icon_in,
            status_icon_nin             => status_icon_nin,
            status_msg_in               => status_msg_in,
            status_msg_nin              => status_msg_nin,
            status_str_in               => status_str_in,
            status_str_nin              => status_str_nin,
            dispense_in                 => dispense_in,
            dispense_nin                => dispense_nin,
            unit_measure_dispense_in    => unit_measure_dispense_in,
            unit_measure_dispense_nin   => unit_measure_dispense_nin,
            flg_dosage_check_in         => flg_dosage_check_in,
            flg_dosage_check_nin        => flg_dosage_check_nin,
            id_combination_compound_in  => id_combination_compound_in,
            id_combination_compound_nin => id_combination_compound_nin,
            id_irregular_directions_in  => id_irregular_directions_in,
            id_irregular_directions_nin => id_irregular_directions_nin,
            create_user_in              => create_user_in,
            create_user_nin             => create_user_nin,
            create_time_in              => create_time_in,
            create_time_nin             => create_time_nin,
            create_institution_in       => create_institution_in,
            create_institution_nin      => create_institution_nin,
            update_user_in              => update_user_in,
            update_user_nin             => update_user_nin,
            update_time_in              => update_time_in,
            update_time_nin             => update_time_nin,
            update_institution_in       => update_institution_in,
            update_institution_nin      => update_institution_nin,
            flg_mix_instr_in            => flg_mix_instr_in,
            flg_mix_instr_nin           => flg_mix_instr_nin,
            mix_instr_in                => mix_instr_in,
            mix_instr_nin               => mix_instr_nin,
            id_presc_instr_det_in       => id_presc_instr_det_in,
            id_presc_instr_det_nin      => id_presc_instr_det_nin,
            num_schemes_in              => num_schemes_in,
            num_schemes_nin             => num_schemes_nin,
            id_justify_reason_in        => id_justify_reason_in,
            id_justify_reason_nin       => id_justify_reason_nin,
            justify_reason_in           => justify_reason_in,
            justify_reason_nin          => justify_reason_nin,
            id_presc_directions_in      => id_presc_directions_in,
            id_presc_directions_nin     => id_presc_directions_nin,
            flg_free_text_in            => flg_free_text_in,
            flg_free_text_nin           => flg_free_text_nin,
            id_task_dependency_in       => id_task_dependency_in,
            id_task_dependency_nin      => id_task_dependency_nin,
            flg_req_origin_module_in    => flg_req_origin_module_in,
            flg_req_origin_module_nin   => flg_req_origin_module_nin,
            take_in_case_in             => take_in_case_in,
            take_in_case_nin            => take_in_case_nin,
            id_vacc_manufacturer_in     => id_vacc_manufacturer_in,
            id_vacc_manufacturer_nin    => id_vacc_manufacturer_nin,
            code_mvx_in                 => code_mvx_in,
            code_mvx_nin                => code_mvx_nin,
            id_cdr_call_in              => id_cdr_call_in,
            id_cdr_call_nin             => id_cdr_call_nin,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END upd;

    PROCEDURE upd
    (
        id_drug_prescription_in     IN drug_presc_det.id_drug_prescription%TYPE DEFAULT NULL,
        id_drug_prescription_nin    IN BOOLEAN := TRUE,
        notes_in                    IN drug_presc_det.notes%TYPE DEFAULT NULL,
        notes_nin                   IN BOOLEAN := TRUE,
        flg_take_type_in            IN drug_presc_det.flg_take_type%TYPE DEFAULT NULL,
        flg_take_type_nin           IN BOOLEAN := TRUE,
        qty_in                      IN drug_presc_det.qty%TYPE DEFAULT NULL,
        qty_nin                     IN BOOLEAN := TRUE,
        rate_in                     IN drug_presc_det.rate%TYPE DEFAULT NULL,
        rate_nin                    IN BOOLEAN := TRUE,
        flg_status_in               IN drug_presc_det.flg_status%TYPE DEFAULT NULL,
        flg_status_nin              IN BOOLEAN := TRUE,
        id_prof_cancel_in           IN drug_presc_det.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin          IN BOOLEAN := TRUE,
        notes_cancel_in             IN drug_presc_det.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin            IN BOOLEAN := TRUE,
        notes_justif_in             IN drug_presc_det.notes_justif%TYPE DEFAULT NULL,
        notes_justif_nin            IN BOOLEAN := TRUE,
        interval_in                 IN drug_presc_det.interval%TYPE DEFAULT NULL,
        interval_nin                IN BOOLEAN := TRUE,
        takes_in                    IN drug_presc_det.takes%TYPE DEFAULT NULL,
        takes_nin                   IN BOOLEAN := TRUE,
        dosage_in                   IN drug_presc_det.dosage%TYPE DEFAULT NULL,
        dosage_nin                  IN BOOLEAN := TRUE,
        flg_ci_in                   IN drug_presc_det.flg_ci%TYPE DEFAULT NULL,
        flg_ci_nin                  IN BOOLEAN := TRUE,
        flg_cheaper_in              IN drug_presc_det.flg_cheaper%TYPE DEFAULT NULL,
        flg_cheaper_nin             IN BOOLEAN := TRUE,
        flg_justif_in               IN drug_presc_det.flg_justif%TYPE DEFAULT NULL,
        flg_justif_nin              IN BOOLEAN := TRUE,
        flg_attention_in            IN drug_presc_det.flg_attention%TYPE DEFAULT NULL,
        flg_attention_nin           IN BOOLEAN := TRUE,
        flg_attention_print_in      IN drug_presc_det.flg_attention_print%TYPE DEFAULT NULL,
        flg_attention_print_nin     IN BOOLEAN := TRUE,
        id_drug_despachos_in        IN drug_presc_det.id_drug_despachos%TYPE DEFAULT NULL,
        id_drug_despachos_nin       IN BOOLEAN := TRUE,
        dosage_description_in       IN drug_presc_det.dosage_description%TYPE DEFAULT NULL,
        dosage_description_nin      IN BOOLEAN := TRUE,
        value_bolus_in              IN drug_presc_det.value_bolus%TYPE DEFAULT NULL,
        value_bolus_nin             IN BOOLEAN := TRUE,
        value_drip_in               IN drug_presc_det.value_drip%TYPE DEFAULT NULL,
        value_drip_nin              IN BOOLEAN := TRUE,
        id_unit_measure_in          IN drug_presc_det.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_nin         IN BOOLEAN := TRUE,
        id_unit_measure_bolus_in    IN drug_presc_det.id_unit_measure_bolus%TYPE DEFAULT NULL,
        id_unit_measure_bolus_nin   IN BOOLEAN := TRUE,
        id_unit_measure_drip_in     IN drug_presc_det.id_unit_measure_drip%TYPE DEFAULT NULL,
        id_unit_measure_drip_nin    IN BOOLEAN := TRUE,
        dt_begin_tstz_in            IN drug_presc_det.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_nin           IN BOOLEAN := TRUE,
        dt_end_tstz_in              IN drug_presc_det.dt_end_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_nin             IN BOOLEAN := TRUE,
        dt_cancel_tstz_in           IN drug_presc_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin          IN BOOLEAN := TRUE,
        dt_end_presc_tstz_in        IN drug_presc_det.dt_end_presc_tstz%TYPE DEFAULT NULL,
        dt_end_presc_tstz_nin       IN BOOLEAN := TRUE,
        dt_end_bottle_tstz_in       IN drug_presc_det.dt_end_bottle_tstz%TYPE DEFAULT NULL,
        dt_end_bottle_tstz_nin      IN BOOLEAN := TRUE,
        dt_order_in                 IN drug_presc_det.dt_order%TYPE DEFAULT NULL,
        dt_order_nin                IN BOOLEAN := TRUE,
        id_prof_order_in            IN drug_presc_det.id_prof_order%TYPE DEFAULT NULL,
        id_prof_order_nin           IN BOOLEAN := TRUE,
        id_order_type_in            IN drug_presc_det.id_order_type%TYPE DEFAULT NULL,
        id_order_type_nin           IN BOOLEAN := TRUE,
        flg_co_sign_in              IN drug_presc_det.flg_co_sign%TYPE DEFAULT NULL,
        flg_co_sign_nin             IN BOOLEAN := TRUE,
        dt_co_sign_in               IN drug_presc_det.dt_co_sign%TYPE DEFAULT NULL,
        dt_co_sign_nin              IN BOOLEAN := TRUE,
        notes_co_sign_in            IN drug_presc_det.notes_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_nin           IN BOOLEAN := TRUE,
        id_prof_co_sign_in          IN drug_presc_det.id_prof_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_nin         IN BOOLEAN := TRUE,
        duration_in                 IN drug_presc_det.duration%TYPE DEFAULT NULL,
        duration_nin                IN BOOLEAN := TRUE,
        id_unit_measure_dur_in      IN drug_presc_det.id_unit_measure_dur%TYPE DEFAULT NULL,
        id_unit_measure_dur_nin     IN BOOLEAN := TRUE,
        frequency_in                IN drug_presc_det.frequency%TYPE DEFAULT NULL,
        frequency_nin               IN BOOLEAN := TRUE,
        id_unit_measure_freq_in     IN drug_presc_det.id_unit_measure_freq%TYPE DEFAULT NULL,
        id_unit_measure_freq_nin    IN BOOLEAN := TRUE,
        dt_start_presc_tstz_in      IN drug_presc_det.dt_start_presc_tstz%TYPE DEFAULT NULL,
        dt_start_presc_tstz_nin     IN BOOLEAN := TRUE,
        refill_in                   IN drug_presc_det.refill%TYPE DEFAULT NULL,
        refill_nin                  IN BOOLEAN := TRUE,
        qty_inst_in                 IN drug_presc_det.qty_inst%TYPE DEFAULT NULL,
        qty_inst_nin                IN BOOLEAN := TRUE,
        unit_measure_inst_in        IN drug_presc_det.unit_measure_inst%TYPE DEFAULT NULL,
        unit_measure_inst_nin       IN BOOLEAN := TRUE,
        id_pat_medication_list_in   IN drug_presc_det.id_pat_medication_list%TYPE DEFAULT NULL,
        id_pat_medication_list_nin  IN BOOLEAN := TRUE,
        dt_last_change_in           IN drug_presc_det.dt_last_change%TYPE DEFAULT NULL,
        dt_last_change_nin          IN BOOLEAN := TRUE,
        route_id_in                 IN drug_presc_det.route_id%TYPE DEFAULT NULL,
        route_id_nin                IN BOOLEAN := TRUE,
        id_justification_in         IN drug_presc_det.id_justification%TYPE DEFAULT NULL,
        id_justification_nin        IN BOOLEAN := TRUE,
        vers_in                     IN drug_presc_det.vers%TYPE DEFAULT NULL,
        vers_nin                    IN BOOLEAN := TRUE,
        flg_interac_med_in          IN drug_presc_det.flg_interac_med%TYPE DEFAULT NULL,
        flg_interac_med_nin         IN BOOLEAN := TRUE,
        flg_interac_allergy_in      IN drug_presc_det.flg_interac_allergy%TYPE DEFAULT NULL,
        flg_interac_allergy_nin     IN BOOLEAN := TRUE,
        id_drug_in                  IN drug_presc_det.id_drug%TYPE DEFAULT NULL,
        id_drug_nin                 IN BOOLEAN := TRUE,
        id_other_product_in         IN drug_presc_det.id_other_product%TYPE DEFAULT NULL,
        id_other_product_nin        IN BOOLEAN := TRUE,
        desc_other_product_in       IN drug_presc_det.desc_other_product%TYPE DEFAULT NULL,
        desc_other_product_nin      IN BOOLEAN := TRUE,
        dt_hold_begin_in            IN drug_presc_det.dt_hold_begin%TYPE DEFAULT NULL,
        dt_hold_begin_nin           IN BOOLEAN := TRUE,
        dt_hold_end_in              IN drug_presc_det.dt_hold_end%TYPE DEFAULT NULL,
        dt_hold_end_nin             IN BOOLEAN := TRUE,
        flg_modified_in             IN drug_presc_det.flg_modified%TYPE DEFAULT NULL,
        flg_modified_nin            IN BOOLEAN := TRUE,
        status_flg_in               IN drug_presc_det.status_flg%TYPE DEFAULT NULL,
        status_flg_nin              IN BOOLEAN := TRUE,
        status_icon_in              IN drug_presc_det.status_icon%TYPE DEFAULT NULL,
        status_icon_nin             IN BOOLEAN := TRUE,
        status_msg_in               IN drug_presc_det.status_msg%TYPE DEFAULT NULL,
        status_msg_nin              IN BOOLEAN := TRUE,
        status_str_in               IN drug_presc_det.status_str%TYPE DEFAULT NULL,
        status_str_nin              IN BOOLEAN := TRUE,
        dispense_in                 IN drug_presc_det.dispense%TYPE DEFAULT NULL,
        dispense_nin                IN BOOLEAN := TRUE,
        unit_measure_dispense_in    IN drug_presc_det.unit_measure_dispense%TYPE DEFAULT NULL,
        unit_measure_dispense_nin   IN BOOLEAN := TRUE,
        flg_dosage_check_in         IN drug_presc_det.flg_dosage_check%TYPE DEFAULT NULL,
        flg_dosage_check_nin        IN BOOLEAN := TRUE,
        id_combination_compound_in  IN drug_presc_det.id_combination_compound%TYPE DEFAULT NULL,
        id_combination_compound_nin IN BOOLEAN := TRUE,
        id_irregular_directions_in  IN drug_presc_det.id_irregular_directions%TYPE DEFAULT NULL,
        id_irregular_directions_nin IN BOOLEAN := TRUE,
        create_user_in              IN drug_presc_det.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN drug_presc_det.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN drug_presc_det.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN drug_presc_det.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN drug_presc_det.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN drug_presc_det.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        flg_mix_instr_in            IN drug_presc_det.flg_mix_instr%TYPE DEFAULT NULL,
        flg_mix_instr_nin           IN BOOLEAN := TRUE,
        mix_instr_in                IN drug_presc_det.mix_instr%TYPE DEFAULT NULL,
        mix_instr_nin               IN BOOLEAN := TRUE,
        id_presc_instr_det_in       IN drug_presc_det.id_presc_instr_det%TYPE DEFAULT NULL,
        id_presc_instr_det_nin      IN BOOLEAN := TRUE,
        num_schemes_in              IN drug_presc_det.num_schemes%TYPE DEFAULT NULL,
        num_schemes_nin             IN BOOLEAN := TRUE,
        id_justify_reason_in        IN drug_presc_det.id_justify_reason%TYPE DEFAULT NULL,
        id_justify_reason_nin       IN BOOLEAN := TRUE,
        justify_reason_in           IN drug_presc_det.justify_reason%TYPE DEFAULT NULL,
        justify_reason_nin          IN BOOLEAN := TRUE,
        id_presc_directions_in      IN drug_presc_det.id_presc_directions%TYPE DEFAULT NULL,
        id_presc_directions_nin     IN BOOLEAN := TRUE,
        flg_free_text_in            IN drug_presc_det.flg_free_text%TYPE DEFAULT NULL,
        flg_free_text_nin           IN BOOLEAN := TRUE,
        id_task_dependency_in       IN drug_presc_det.id_task_dependency%TYPE DEFAULT NULL,
        id_task_dependency_nin      IN BOOLEAN := TRUE,
        flg_req_origin_module_in    IN drug_presc_det.flg_req_origin_module%TYPE DEFAULT NULL,
        flg_req_origin_module_nin   IN BOOLEAN := TRUE,
        take_in_case_in             IN drug_presc_det.take_in_case%TYPE DEFAULT NULL,
        take_in_case_nin            IN BOOLEAN := TRUE,
        id_vacc_manufacturer_in     IN drug_presc_det.id_vacc_manufacturer%TYPE DEFAULT NULL,
        id_vacc_manufacturer_nin    IN BOOLEAN := TRUE,
        code_mvx_in                 IN drug_presc_det.code_mvx%TYPE DEFAULT NULL,
        code_mvx_nin                IN BOOLEAN := TRUE,
        id_cdr_call_in              IN drug_presc_det.id_cdr_call%TYPE DEFAULT NULL,
        id_cdr_call_nin             IN BOOLEAN := TRUE,
        where_in                    VARCHAR2,
        handle_error_in             IN BOOLEAN := TRUE,
        rows_out                    IN OUT table_varchar
    ) IS
        l_sql                       VARCHAR2(32767);
        l_rows_out                  table_varchar;
        l_id_drug_prescription_n    NUMBER(1);
        l_notes_n                   NUMBER(1);
        l_flg_take_type_n           NUMBER(1);
        l_qty_n                     NUMBER(1);
        l_rate_n                    NUMBER(1);
        l_flg_status_n              NUMBER(1);
        l_id_prof_cancel_n          NUMBER(1);
        l_notes_cancel_n            NUMBER(1);
        l_notes_justif_n            NUMBER(1);
        l_interval_n                NUMBER(1);
        l_takes_n                   NUMBER(1);
        l_dosage_n                  NUMBER(1);
        l_flg_ci_n                  NUMBER(1);
        l_flg_cheaper_n             NUMBER(1);
        l_flg_justif_n              NUMBER(1);
        l_flg_attention_n           NUMBER(1);
        l_flg_attention_print_n     NUMBER(1);
        l_id_drug_despachos_n       NUMBER(1);
        l_dosage_description_n      NUMBER(1);
        l_value_bolus_n             NUMBER(1);
        l_value_drip_n              NUMBER(1);
        l_id_unit_measure_n         NUMBER(1);
        l_id_unit_measure_bolus_n   NUMBER(1);
        l_id_unit_measure_drip_n    NUMBER(1);
        l_dt_begin_tstz_n           NUMBER(1);
        l_dt_end_tstz_n             NUMBER(1);
        l_dt_cancel_tstz_n          NUMBER(1);
        l_dt_end_presc_tstz_n       NUMBER(1);
        l_dt_end_bottle_tstz_n      NUMBER(1);
        l_dt_order_n                NUMBER(1);
        l_id_prof_order_n           NUMBER(1);
        l_id_order_type_n           NUMBER(1);
        l_flg_co_sign_n             NUMBER(1);
        l_dt_co_sign_n              NUMBER(1);
        l_notes_co_sign_n           NUMBER(1);
        l_id_prof_co_sign_n         NUMBER(1);
        l_duration_n                NUMBER(1);
        l_id_unit_measure_dur_n     NUMBER(1);
        l_frequency_n               NUMBER(1);
        l_id_unit_measure_freq_n    NUMBER(1);
        l_dt_start_presc_tstz_n     NUMBER(1);
        l_refill_n                  NUMBER(1);
        l_qty_inst_n                NUMBER(1);
        l_unit_measure_inst_n       NUMBER(1);
        l_id_pat_medication_list_n  NUMBER(1);
        l_dt_last_change_n          NUMBER(1);
        l_route_id_n                NUMBER(1);
        l_id_justification_n        NUMBER(1);
        l_vers_n                    NUMBER(1);
        l_flg_interac_med_n         NUMBER(1);
        l_flg_interac_allergy_n     NUMBER(1);
        l_id_drug_n                 NUMBER(1);
        l_id_other_product_n        NUMBER(1);
        l_desc_other_product_n      NUMBER(1);
        l_dt_hold_begin_n           NUMBER(1);
        l_dt_hold_end_n             NUMBER(1);
        l_flg_modified_n            NUMBER(1);
        l_status_flg_n              NUMBER(1);
        l_status_icon_n             NUMBER(1);
        l_status_msg_n              NUMBER(1);
        l_status_str_n              NUMBER(1);
        l_dispense_n                NUMBER(1);
        l_unit_measure_dispense_n   NUMBER(1);
        l_flg_dosage_check_n        NUMBER(1);
        l_id_combination_compound_n NUMBER(1);
        l_id_irregular_directions_n NUMBER(1);
        l_create_user_n             NUMBER(1);
        l_create_time_n             NUMBER(1);
        l_create_institution_n      NUMBER(1);
        l_update_user_n             NUMBER(1);
        l_update_time_n             NUMBER(1);
        l_update_institution_n      NUMBER(1);
        l_flg_mix_instr_n           NUMBER(1);
        l_mix_instr_n               NUMBER(1);
        l_id_presc_instr_det_n      NUMBER(1);
        l_num_schemes_n             NUMBER(1);
        l_id_justify_reason_n       NUMBER(1);
        l_justify_reason_n          NUMBER(1);
        l_id_presc_directions_n     NUMBER(1);
        l_flg_free_text_n           NUMBER(1);
        l_id_task_dependency_n      NUMBER(1);
        l_flg_req_origin_module_n   NUMBER(1);
        l_take_in_case_n            NUMBER(1);
        l_id_vacc_manufacturer_n    NUMBER(1);
        l_code_mvx_n                NUMBER(1);
        l_id_cdr_call_n             NUMBER(1);
        id_drug_presc_det_in        drug_presc_det.id_drug_presc_det%TYPE;
    BEGIN
    
        l_id_drug_prescription_n    := sys.diutil.bool_to_int(id_drug_prescription_nin);
        l_notes_n                   := sys.diutil.bool_to_int(notes_nin);
        l_flg_take_type_n           := sys.diutil.bool_to_int(flg_take_type_nin);
        l_qty_n                     := sys.diutil.bool_to_int(qty_nin);
        l_rate_n                    := sys.diutil.bool_to_int(rate_nin);
        l_flg_status_n              := sys.diutil.bool_to_int(flg_status_nin);
        l_id_prof_cancel_n          := sys.diutil.bool_to_int(id_prof_cancel_nin);
        l_notes_cancel_n            := sys.diutil.bool_to_int(notes_cancel_nin);
        l_notes_justif_n            := sys.diutil.bool_to_int(notes_justif_nin);
        l_interval_n                := sys.diutil.bool_to_int(interval_nin);
        l_takes_n                   := sys.diutil.bool_to_int(takes_nin);
        l_dosage_n                  := sys.diutil.bool_to_int(dosage_nin);
        l_flg_ci_n                  := sys.diutil.bool_to_int(flg_ci_nin);
        l_flg_cheaper_n             := sys.diutil.bool_to_int(flg_cheaper_nin);
        l_flg_justif_n              := sys.diutil.bool_to_int(flg_justif_nin);
        l_flg_attention_n           := sys.diutil.bool_to_int(flg_attention_nin);
        l_flg_attention_print_n     := sys.diutil.bool_to_int(flg_attention_print_nin);
        l_id_drug_despachos_n       := sys.diutil.bool_to_int(id_drug_despachos_nin);
        l_dosage_description_n      := sys.diutil.bool_to_int(dosage_description_nin);
        l_value_bolus_n             := sys.diutil.bool_to_int(value_bolus_nin);
        l_value_drip_n              := sys.diutil.bool_to_int(value_drip_nin);
        l_id_unit_measure_n         := sys.diutil.bool_to_int(id_unit_measure_nin);
        l_id_unit_measure_bolus_n   := sys.diutil.bool_to_int(id_unit_measure_bolus_nin);
        l_id_unit_measure_drip_n    := sys.diutil.bool_to_int(id_unit_measure_drip_nin);
        l_dt_begin_tstz_n           := sys.diutil.bool_to_int(dt_begin_tstz_nin);
        l_dt_end_tstz_n             := sys.diutil.bool_to_int(dt_end_tstz_nin);
        l_dt_cancel_tstz_n          := sys.diutil.bool_to_int(dt_cancel_tstz_nin);
        l_dt_end_presc_tstz_n       := sys.diutil.bool_to_int(dt_end_presc_tstz_nin);
        l_dt_end_bottle_tstz_n      := sys.diutil.bool_to_int(dt_end_bottle_tstz_nin);
        l_dt_order_n                := sys.diutil.bool_to_int(dt_order_nin);
        l_id_prof_order_n           := sys.diutil.bool_to_int(id_prof_order_nin);
        l_id_order_type_n           := sys.diutil.bool_to_int(id_order_type_nin);
        l_flg_co_sign_n             := sys.diutil.bool_to_int(flg_co_sign_nin);
        l_dt_co_sign_n              := sys.diutil.bool_to_int(dt_co_sign_nin);
        l_notes_co_sign_n           := sys.diutil.bool_to_int(notes_co_sign_nin);
        l_id_prof_co_sign_n         := sys.diutil.bool_to_int(id_prof_co_sign_nin);
        l_duration_n                := sys.diutil.bool_to_int(duration_nin);
        l_id_unit_measure_dur_n     := sys.diutil.bool_to_int(id_unit_measure_dur_nin);
        l_frequency_n               := sys.diutil.bool_to_int(frequency_nin);
        l_id_unit_measure_freq_n    := sys.diutil.bool_to_int(id_unit_measure_freq_nin);
        l_dt_start_presc_tstz_n     := sys.diutil.bool_to_int(dt_start_presc_tstz_nin);
        l_refill_n                  := sys.diutil.bool_to_int(refill_nin);
        l_qty_inst_n                := sys.diutil.bool_to_int(qty_inst_nin);
        l_unit_measure_inst_n       := sys.diutil.bool_to_int(unit_measure_inst_nin);
        l_id_pat_medication_list_n  := sys.diutil.bool_to_int(id_pat_medication_list_nin);
        l_dt_last_change_n          := sys.diutil.bool_to_int(dt_last_change_nin);
        l_route_id_n                := sys.diutil.bool_to_int(route_id_nin);
        l_id_justification_n        := sys.diutil.bool_to_int(id_justification_nin);
        l_vers_n                    := sys.diutil.bool_to_int(vers_nin);
        l_flg_interac_med_n         := sys.diutil.bool_to_int(flg_interac_med_nin);
        l_flg_interac_allergy_n     := sys.diutil.bool_to_int(flg_interac_allergy_nin);
        l_id_drug_n                 := sys.diutil.bool_to_int(id_drug_nin);
        l_id_other_product_n        := sys.diutil.bool_to_int(id_other_product_nin);
        l_desc_other_product_n      := sys.diutil.bool_to_int(desc_other_product_nin);
        l_dt_hold_begin_n           := sys.diutil.bool_to_int(dt_hold_begin_nin);
        l_dt_hold_end_n             := sys.diutil.bool_to_int(dt_hold_end_nin);
        l_flg_modified_n            := sys.diutil.bool_to_int(flg_modified_nin);
        l_status_flg_n              := sys.diutil.bool_to_int(status_flg_nin);
        l_status_icon_n             := sys.diutil.bool_to_int(status_icon_nin);
        l_status_msg_n              := sys.diutil.bool_to_int(status_msg_nin);
        l_status_str_n              := sys.diutil.bool_to_int(status_str_nin);
        l_dispense_n                := sys.diutil.bool_to_int(dispense_nin);
        l_unit_measure_dispense_n   := sys.diutil.bool_to_int(unit_measure_dispense_nin);
        l_flg_dosage_check_n        := sys.diutil.bool_to_int(flg_dosage_check_nin);
        l_id_combination_compound_n := sys.diutil.bool_to_int(id_combination_compound_nin);
        l_id_irregular_directions_n := sys.diutil.bool_to_int(id_irregular_directions_nin);
        l_create_user_n             := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n             := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n      := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n             := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n             := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n      := sys.diutil.bool_to_int(update_institution_nin);
        l_flg_mix_instr_n           := sys.diutil.bool_to_int(flg_mix_instr_nin);
        l_mix_instr_n               := sys.diutil.bool_to_int(mix_instr_nin);
        l_id_presc_instr_det_n      := sys.diutil.bool_to_int(id_presc_instr_det_nin);
        l_num_schemes_n             := sys.diutil.bool_to_int(num_schemes_nin);
        l_id_justify_reason_n       := sys.diutil.bool_to_int(id_justify_reason_nin);
        l_justify_reason_n          := sys.diutil.bool_to_int(justify_reason_nin);
        l_id_presc_directions_n     := sys.diutil.bool_to_int(id_presc_directions_nin);
        l_flg_free_text_n           := sys.diutil.bool_to_int(flg_free_text_nin);
        l_id_task_dependency_n      := sys.diutil.bool_to_int(id_task_dependency_nin);
        l_flg_req_origin_module_n   := sys.diutil.bool_to_int(flg_req_origin_module_nin);
        l_take_in_case_n            := sys.diutil.bool_to_int(take_in_case_nin);
        l_id_vacc_manufacturer_n    := sys.diutil.bool_to_int(id_vacc_manufacturer_nin);
        l_code_mvx_n                := sys.diutil.bool_to_int(code_mvx_nin);
        l_id_cdr_call_n             := sys.diutil.bool_to_int(id_cdr_call_nin);
    
        l_sql := 'UPDATE DRUG_PRESC_DET SET ' || ' ID_DRUG_PRESCRIPTION = decode (' || l_id_drug_prescription_n ||
                 ',0,:id_drug_prescription_in, NVL (:id_drug_prescription_in, ID_DRUG_PRESCRIPTION)) ' || ',' ||
                 ' NOTES = decode (' || l_notes_n || ',0,:notes_in, NVL (:notes_in, NOTES)) ' || ',' ||
                 ' FLG_TAKE_TYPE = decode (' || l_flg_take_type_n ||
                 ',0,:flg_take_type_in, NVL (:flg_take_type_in, FLG_TAKE_TYPE)) ' || ',' || ' QTY = decode (' ||
                 l_qty_n || ',0,:qty_in, NVL (:qty_in, QTY)) ' || ',' || ' RATE = decode (' || l_rate_n ||
                 ',0,:rate_in, NVL (:rate_in, RATE)) ' || ',' || ' FLG_STATUS = decode (' || l_flg_status_n ||
                 ',0,:flg_status_in, NVL (:flg_status_in, FLG_STATUS)) ' || ',' || ' ID_PROF_CANCEL = decode (' ||
                 l_id_prof_cancel_n || ',0,:id_prof_cancel_in, NVL (:id_prof_cancel_in, ID_PROF_CANCEL)) ' || ',' ||
                 ' NOTES_CANCEL = decode (' || l_notes_cancel_n ||
                 ',0,:notes_cancel_in, NVL (:notes_cancel_in, NOTES_CANCEL)) ' || ',' || ' NOTES_JUSTIF = decode (' ||
                 l_notes_justif_n || ',0,:notes_justif_in, NVL (:notes_justif_in, NOTES_JUSTIF)) ' || ',' ||
                 ' INTERVAL = decode (' || l_interval_n || ',0,:interval_in, NVL (:interval_in, INTERVAL)) ' || ',' ||
                 ' TAKES = decode (' || l_takes_n || ',0,:takes_in, NVL (:takes_in, TAKES)) ' || ',' ||
                 ' DOSAGE = decode (' || l_dosage_n || ',0,:dosage_in, NVL (:dosage_in, DOSAGE)) ' || ',' ||
                 ' FLG_CI = decode (' || l_flg_ci_n || ',0,:flg_ci_in, NVL (:flg_ci_in, FLG_CI)) ' || ',' ||
                 ' FLG_CHEAPER = decode (' || l_flg_cheaper_n ||
                 ',0,:flg_cheaper_in, NVL (:flg_cheaper_in, FLG_CHEAPER)) ' || ',' || ' FLG_JUSTIF = decode (' ||
                 l_flg_justif_n || ',0,:flg_justif_in, NVL (:flg_justif_in, FLG_JUSTIF)) ' || ',' ||
                 ' FLG_ATTENTION = decode (' || l_flg_attention_n ||
                 ',0,:flg_attention_in, NVL (:flg_attention_in, FLG_ATTENTION)) ' || ',' ||
                 ' FLG_ATTENTION_PRINT = decode (' || l_flg_attention_print_n ||
                 ',0,:flg_attention_print_in, NVL (:flg_attention_print_in, FLG_ATTENTION_PRINT)) ' || ',' ||
                 ' ID_DRUG_DESPACHOS = decode (' || l_id_drug_despachos_n ||
                 ',0,:id_drug_despachos_in, NVL (:id_drug_despachos_in, ID_DRUG_DESPACHOS)) ' || ',' ||
                 ' DOSAGE_DESCRIPTION = decode (' || l_dosage_description_n ||
                 ',0,:dosage_description_in, NVL (:dosage_description_in, DOSAGE_DESCRIPTION)) ' || ',' ||
                 ' VALUE_BOLUS = decode (' || l_value_bolus_n ||
                 ',0,:value_bolus_in, NVL (:value_bolus_in, VALUE_BOLUS)) ' || ',' || ' VALUE_DRIP = decode (' ||
                 l_value_drip_n || ',0,:value_drip_in, NVL (:value_drip_in, VALUE_DRIP)) ' || ',' ||
                 ' ID_UNIT_MEASURE = decode (' || l_id_unit_measure_n ||
                 ',0,:id_unit_measure_in, NVL (:id_unit_measure_in, ID_UNIT_MEASURE)) ' || ',' ||
                 ' ID_UNIT_MEASURE_BOLUS = decode (' || l_id_unit_measure_bolus_n ||
                 ',0,:id_unit_measure_bolus_in, NVL (:id_unit_measure_bolus_in, ID_UNIT_MEASURE_BOLUS)) ' || ',' ||
                 ' ID_UNIT_MEASURE_DRIP = decode (' || l_id_unit_measure_drip_n ||
                 ',0,:id_unit_measure_drip_in, NVL (:id_unit_measure_drip_in, ID_UNIT_MEASURE_DRIP)) ' || ',' ||
                 ' DT_BEGIN_TSTZ = decode (' || l_dt_begin_tstz_n ||
                 ',0,:dt_begin_tstz_in, NVL (:dt_begin_tstz_in, DT_BEGIN_TSTZ)) ' || ',' || ' DT_END_TSTZ = decode (' ||
                 l_dt_end_tstz_n || ',0,:dt_end_tstz_in, NVL (:dt_end_tstz_in, DT_END_TSTZ)) ' || ',' ||
                 ' DT_CANCEL_TSTZ = decode (' || l_dt_cancel_tstz_n ||
                 ',0,:dt_cancel_tstz_in, NVL (:dt_cancel_tstz_in, DT_CANCEL_TSTZ)) ' || ',' ||
                 ' DT_END_PRESC_TSTZ = decode (' || l_dt_end_presc_tstz_n ||
                 ',0,:dt_end_presc_tstz_in, NVL (:dt_end_presc_tstz_in, DT_END_PRESC_TSTZ)) ' || ',' ||
                 ' DT_END_BOTTLE_TSTZ = decode (' || l_dt_end_bottle_tstz_n ||
                 ',0,:dt_end_bottle_tstz_in, NVL (:dt_end_bottle_tstz_in, DT_END_BOTTLE_TSTZ)) ' || ',' ||
                 ' DT_ORDER = decode (' || l_dt_order_n || ',0,:dt_order_in, NVL (:dt_order_in, DT_ORDER)) ' || ',' ||
                 ' ID_PROF_ORDER = decode (' || l_id_prof_order_n ||
                 ',0,:id_prof_order_in, NVL (:id_prof_order_in, ID_PROF_ORDER)) ' || ',' || ' ID_ORDER_TYPE = decode (' ||
                 l_id_order_type_n || ',0,:id_order_type_in, NVL (:id_order_type_in, ID_ORDER_TYPE)) ' || ',' ||
                 ' FLG_CO_SIGN = decode (' || l_flg_co_sign_n ||
                 ',0,:flg_co_sign_in, NVL (:flg_co_sign_in, FLG_CO_SIGN)) ' || ',' || ' DT_CO_SIGN = decode (' ||
                 l_dt_co_sign_n || ',0,:dt_co_sign_in, NVL (:dt_co_sign_in, DT_CO_SIGN)) ' || ',' ||
                 ' NOTES_CO_SIGN = decode (' || l_notes_co_sign_n ||
                 ',0,:notes_co_sign_in, NVL (:notes_co_sign_in, NOTES_CO_SIGN)) ' || ',' ||
                 ' ID_PROF_CO_SIGN = decode (' || l_id_prof_co_sign_n ||
                 ',0,:id_prof_co_sign_in, NVL (:id_prof_co_sign_in, ID_PROF_CO_SIGN)) ' || ',' ||
                 ' DURATION = decode (' || l_duration_n || ',0,:duration_in, NVL (:duration_in, DURATION)) ' || ',' ||
                 ' ID_UNIT_MEASURE_DUR = decode (' || l_id_unit_measure_dur_n ||
                 ',0,:id_unit_measure_dur_in, NVL (:id_unit_measure_dur_in, ID_UNIT_MEASURE_DUR)) ' || ',' ||
                 ' FREQUENCY = decode (' || l_frequency_n || ',0,:frequency_in, NVL (:frequency_in, FREQUENCY)) ' || ',' ||
                 ' ID_UNIT_MEASURE_FREQ = decode (' || l_id_unit_measure_freq_n ||
                 ',0,:id_unit_measure_freq_in, NVL (:id_unit_measure_freq_in, ID_UNIT_MEASURE_FREQ)) ' || ',' ||
                 ' DT_START_PRESC_TSTZ = decode (' || l_dt_start_presc_tstz_n ||
                 ',0,:dt_start_presc_tstz_in, NVL (:dt_start_presc_tstz_in, DT_START_PRESC_TSTZ)) ' || ',' ||
                 ' REFILL = decode (' || l_refill_n || ',0,:refill_in, NVL (:refill_in, REFILL)) ' || ',' ||
                 ' QTY_INST = decode (' || l_qty_inst_n || ',0,:qty_inst_in, NVL (:qty_inst_in, QTY_INST)) ' || ',' ||
                 ' UNIT_MEASURE_INST = decode (' || l_unit_measure_inst_n ||
                 ',0,:unit_measure_inst_in, NVL (:unit_measure_inst_in, UNIT_MEASURE_INST)) ' || ',' ||
                 ' ID_PAT_MEDICATION_LIST = decode (' || l_id_pat_medication_list_n ||
                 ',0,:id_pat_medication_list_in, NVL (:id_pat_medication_list_in, ID_PAT_MEDICATION_LIST)) ' || ',' ||
                 ' DT_LAST_CHANGE = decode (' || l_dt_last_change_n ||
                 ',0,:dt_last_change_in, NVL (:dt_last_change_in, DT_LAST_CHANGE)) ' || ',' || ' ROUTE_ID = decode (' ||
                 l_route_id_n || ',0,:route_id_in, NVL (:route_id_in, ROUTE_ID)) ' || ',' ||
                 ' ID_JUSTIFICATION = decode (' || l_id_justification_n ||
                 ',0,:id_justification_in, NVL (:id_justification_in, ID_JUSTIFICATION)) ' || ',' || ' VERS = decode (' ||
                 l_vers_n || ',0,:vers_in, NVL (:vers_in, VERS)) ' || ',' || ' FLG_INTERAC_MED = decode (' ||
                 l_flg_interac_med_n || ',0,:flg_interac_med_in, NVL (:flg_interac_med_in, FLG_INTERAC_MED)) ' || ',' ||
                 ' FLG_INTERAC_ALLERGY = decode (' || l_flg_interac_allergy_n ||
                 ',0,:flg_interac_allergy_in, NVL (:flg_interac_allergy_in, FLG_INTERAC_ALLERGY)) ' || ',' ||
                 ' ID_DRUG = decode (' || l_id_drug_n || ',0,:id_drug_in, NVL (:id_drug_in, ID_DRUG)) ' || ',' ||
                 ' ID_OTHER_PRODUCT = decode (' || l_id_other_product_n ||
                 ',0,:id_other_product_in, NVL (:id_other_product_in, ID_OTHER_PRODUCT)) ' || ',' ||
                 ' DESC_OTHER_PRODUCT = decode (' || l_desc_other_product_n ||
                 ',0,:desc_other_product_in, NVL (:desc_other_product_in, DESC_OTHER_PRODUCT)) ' || ',' ||
                 ' DT_HOLD_BEGIN = decode (' || l_dt_hold_begin_n ||
                 ',0,:dt_hold_begin_in, NVL (:dt_hold_begin_in, DT_HOLD_BEGIN)) ' || ',' || ' DT_HOLD_END = decode (' ||
                 l_dt_hold_end_n || ',0,:dt_hold_end_in, NVL (:dt_hold_end_in, DT_HOLD_END)) ' || ',' ||
                 ' FLG_MODIFIED = decode (' || l_flg_modified_n ||
                 ',0,:flg_modified_in, NVL (:flg_modified_in, FLG_MODIFIED)) ' || ',' || ' STATUS_FLG = decode (' ||
                 l_status_flg_n || ',0,:status_flg_in, NVL (:status_flg_in, STATUS_FLG)) ' || ',' ||
                 ' STATUS_ICON = decode (' || l_status_icon_n ||
                 ',0,:status_icon_in, NVL (:status_icon_in, STATUS_ICON)) ' || ',' || ' STATUS_MSG = decode (' ||
                 l_status_msg_n || ',0,:status_msg_in, NVL (:status_msg_in, STATUS_MSG)) ' || ',' ||
                 ' STATUS_STR = decode (' || l_status_str_n || ',0,:status_str_in, NVL (:status_str_in, STATUS_STR)) ' || ',' ||
                 ' DISPENSE = decode (' || l_dispense_n || ',0,:dispense_in, NVL (:dispense_in, DISPENSE)) ' || ',' ||
                 ' UNIT_MEASURE_DISPENSE = decode (' || l_unit_measure_dispense_n ||
                 ',0,:unit_measure_dispense_in, NVL (:unit_measure_dispense_in, UNIT_MEASURE_DISPENSE)) ' || ',' ||
                 ' FLG_DOSAGE_CHECK = decode (' || l_flg_dosage_check_n ||
                 ',0,:flg_dosage_check_in, NVL (:flg_dosage_check_in, FLG_DOSAGE_CHECK)) ' || ',' ||
                 ' ID_COMBINATION_COMPOUND = decode (' || l_id_combination_compound_n ||
                 ',0,:id_combination_compound_in, NVL (:id_combination_compound_in, ID_COMBINATION_COMPOUND)) ' || ',' ||
                 ' ID_IRREGULAR_DIRECTIONS = decode (' || l_id_irregular_directions_n ||
                 ',0,:id_irregular_directions_in, NVL (:id_irregular_directions_in, ID_IRREGULAR_DIRECTIONS)) ' || ',' ||
                 ' CREATE_USER = decode (' || l_create_user_n ||
                 ',0,:create_user_in, NVL (:create_user_in, CREATE_USER)) ' || ',' || ' CREATE_TIME = decode (' ||
                 l_create_time_n || ',0,:create_time_in, NVL (:create_time_in, CREATE_TIME)) ' || ',' ||
                 ' CREATE_INSTITUTION = decode (' || l_create_institution_n ||
                 ',0,:create_institution_in, NVL (:create_institution_in, CREATE_INSTITUTION)) ' || ',' ||
                 ' UPDATE_USER = decode (' || l_update_user_n ||
                 ',0,:update_user_in, NVL (:update_user_in, UPDATE_USER)) ' || ',' || ' UPDATE_TIME = decode (' ||
                 l_update_time_n || ',0,:update_time_in, NVL (:update_time_in, UPDATE_TIME)) ' || ',' ||
                 ' UPDATE_INSTITUTION = decode (' || l_update_institution_n ||
                 ',0,:update_institution_in, NVL (:update_institution_in, UPDATE_INSTITUTION)) ' || ',' ||
                 ' FLG_MIX_INSTR = decode (' || l_flg_mix_instr_n ||
                 ',0,:flg_mix_instr_in, NVL (:flg_mix_instr_in, FLG_MIX_INSTR)) ' || ',' || ' MIX_INSTR = decode (' ||
                 l_mix_instr_n || ',0,:mix_instr_in, NVL (:mix_instr_in, MIX_INSTR)) ' || ',' ||
                 ' ID_PRESC_INSTR_DET = decode (' || l_id_presc_instr_det_n ||
                 ',0,:id_presc_instr_det_in, NVL (:id_presc_instr_det_in, ID_PRESC_INSTR_DET)) ' || ',' ||
                 ' NUM_SCHEMES = decode (' || l_num_schemes_n ||
                 ',0,:num_schemes_in, NVL (:num_schemes_in, NUM_SCHEMES)) ' || ',' || ' ID_JUSTIFY_REASON = decode (' ||
                 l_id_justify_reason_n || ',0,:id_justify_reason_in, NVL (:id_justify_reason_in, ID_JUSTIFY_REASON)) ' || ',' ||
                 ' JUSTIFY_REASON = decode (' || l_justify_reason_n ||
                 ',0,:justify_reason_in, NVL (:justify_reason_in, JUSTIFY_REASON)) ' || ',' ||
                 ' ID_PRESC_DIRECTIONS = decode (' || l_id_presc_directions_n ||
                 ',0,:id_presc_directions_in, NVL (:id_presc_directions_in, ID_PRESC_DIRECTIONS)) ' || ',' ||
                 ' FLG_FREE_TEXT = decode (' || l_flg_free_text_n ||
                 ',0,:flg_free_text_in, NVL (:flg_free_text_in, FLG_FREE_TEXT)) ' || ',' ||
                 ' ID_TASK_DEPENDENCY = decode (' || l_id_task_dependency_n ||
                 ',0,:id_task_dependency_in, NVL (:id_task_dependency_in, ID_TASK_DEPENDENCY)) ' || ',' ||
                 ' FLG_REQ_ORIGIN_MODULE = decode (' || l_flg_req_origin_module_n ||
                 ',0,:flg_req_origin_module_in, NVL (:flg_req_origin_module_in, FLG_REQ_ORIGIN_MODULE)) ' || ',' ||
                 ' TAKE_IN_CASE = decode (' || l_take_in_case_n ||
                 ',0,:take_in_case_in, NVL (:take_in_case_in, TAKE_IN_CASE)) ' || ',' ||
                 ' ID_VACC_MANUFACTURER = decode (' || l_id_vacc_manufacturer_n ||
                 ',0,:id_vacc_manufacturer_in, NVL (:id_vacc_manufacturer_in, ID_VACC_MANUFACTURER)) ' || ',' ||
                 ' CODE_MVX = decode (' || l_code_mvx_n || ',0,:code_mvx_in, NVL (:code_mvx_in, CODE_MVX)) ' || ',' ||
                 ' ID_CDR_CALL = decode (' || l_id_cdr_call_n ||
                 ',0,:id_cdr_call_in, NVL (:id_cdr_call_in, ID_CDR_CALL)) ' || ' where ' || nvl(where_in, '(1=1)') ||
                 ' RETURNING ROWID BULK COLLECT INTO :l_rows_out';
    
        EXECUTE IMMEDIATE 'BEGIN ' || l_sql || '; END;'
            USING IN id_drug_prescription_in, notes_in, flg_take_type_in, qty_in, rate_in, flg_status_in, id_prof_cancel_in, notes_cancel_in, notes_justif_in, interval_in, takes_in, dosage_in, flg_ci_in, flg_cheaper_in, flg_justif_in, flg_attention_in, flg_attention_print_in, id_drug_despachos_in, dosage_description_in, value_bolus_in, value_drip_in, id_unit_measure_in, id_unit_measure_bolus_in, id_unit_measure_drip_in, dt_begin_tstz_in, dt_end_tstz_in, dt_cancel_tstz_in, dt_end_presc_tstz_in, dt_end_bottle_tstz_in, dt_order_in, id_prof_order_in, id_order_type_in, flg_co_sign_in, dt_co_sign_in, notes_co_sign_in, id_prof_co_sign_in, duration_in, id_unit_measure_dur_in, frequency_in, id_unit_measure_freq_in, dt_start_presc_tstz_in, refill_in, qty_inst_in, unit_measure_inst_in, id_pat_medication_list_in, dt_last_change_in, route_id_in, id_justification_in, vers_in, flg_interac_med_in, flg_interac_allergy_in, id_drug_in, id_other_product_in, desc_other_product_in, dt_hold_begin_in, dt_hold_end_in, flg_modified_in, status_flg_in, status_icon_in, status_msg_in, status_str_in, dispense_in, unit_measure_dispense_in, flg_dosage_check_in, id_combination_compound_in, id_irregular_directions_in, create_user_in, create_time_in, create_institution_in, update_user_in, update_time_in, update_institution_in, flg_mix_instr_in, mix_instr_in, id_presc_instr_det_in, num_schemes_in, id_justify_reason_in, justify_reason_in, id_presc_directions_in, flg_free_text_in, id_task_dependency_in, flg_req_origin_module_in, take_in_case_in, id_vacc_manufacturer_in, code_mvx_in, id_cdr_call_in, OUT l_rows_out;
    
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
    
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN dup_val_on_index THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner           all_constraints.owner%TYPE;
                    l_name            all_constraints.constraint_name%TYPE;
                    l_err_instance_id PLS_INTEGER;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF FALSE
                    THEN
                        NULL; -- Placeholder in case no unique indexes
                    ELSIF l_name = 'DPD_IDDPD_IDDP_IDD_FLGST_IDX'
                    THEN
                        pk_alert_exceptions.register_error(error_name_in       => 'DUPLICATE-VALUE',
                                                           err_instance_id_out => l_err_instance_id,
                                                           text_in             => 'Violation of unique index "DPD_IDDPD_IDDP_IDD_FLGST_IDX"');
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'OWNER',
                                                        value_in           => l_owner,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'CONSTRAINT_NAME',
                                                        value_in           => l_name,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'TABLE_NAME',
                                                        value_in           => 'DRUG_PRESC_DET',
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_DRUG_PRESC_DET',
                                                        value_in           => id_drug_presc_det_in,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_DRUG_PRESCRIPTION',
                                                        value_in           => id_drug_prescription_in,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_DRUG',
                                                        value_in           => id_drug_in,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_STATUS',
                                                        value_in           => flg_status_in,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_err_instance_id);
                    ELSIF l_name = 'DPD_PDIR_IDX'
                    THEN
                        pk_alert_exceptions.register_error(error_name_in       => 'DUPLICATE-VALUE',
                                                           err_instance_id_out => l_err_instance_id,
                                                           text_in             => 'Violation of unique index "DPD_PDIR_IDX"');
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'OWNER',
                                                        value_in           => l_owner,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'CONSTRAINT_NAME',
                                                        value_in           => l_name,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'TABLE_NAME',
                                                        value_in           => 'DRUG_PRESC_DET',
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PRESC_DIRECTIONS',
                                                        value_in           => id_presc_directions_in,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_err_instance_id);
                    ELSE
                        pk_alert_exceptions.raise_error(error_name_in => 'DUPLICATE-VALUE',
                                                        name1_in      => 'OWNER',
                                                        value1_in     => l_owner,
                                                        name2_in      => 'CONSTRAINT_NAME',
                                                        value2_in     => l_name,
                                                        name3_in      => 'TABLE_NAME',
                                                        value3_in     => 'DRUG_PRESC_DET');
                    END IF;
                END;
            END IF;
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    IF l_name = 'DPD_CC_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_CDR_CALL',
                                                        value_in           => id_cdr_call_in);
                    END IF;
                    IF l_name = 'DPD_ID_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_IRREGULAR_DIRECTIONS',
                                                        value_in           => id_irregular_directions_in);
                    END IF;
                    IF l_name = 'DPD_IPML_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PAT_MEDICATION_LIST',
                                                        value_in           => id_pat_medication_list_in);
                    END IF;
                    IF l_name = 'DPD_JINT_IDJ_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_JUSTIFICATION',
                                                        value_in           => id_justification_in);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'VERS',
                                                        value_in           => vers_in);
                    END IF;
                    IF l_name = 'DPD_JRS_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_JUSTIFY_REASON',
                                                        value_in           => id_justify_reason_in);
                    END IF;
                    IF l_name = 'DPD_MED_INT_ID_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_DRUG',
                                                        value_in           => id_drug_in);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'VERS',
                                                        value_in           => vers_in);
                    END IF;
                    IF l_name = 'DPD_PDIR_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PRESC_DIRECTIONS',
                                                        value_in           => id_presc_directions_in);
                    END IF;
                    IF l_name = 'DPD_RINT_IDR_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ROUTE_ID',
                                                        value_in           => route_id_in);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'VERS',
                                                        value_in           => vers_in);
                    END IF;
                    IF l_name = 'DPDT_DPN_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_DRUG_PRESCRIPTION',
                                                        value_in           => id_drug_prescription_in);
                    END IF;
                    IF l_name = 'DPDT_DRDP_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_DRUG_DESPACHOS',
                                                        value_in           => id_drug_despachos_in);
                    END IF;
                    IF l_name = 'DPDT_PIST_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PRESC_INSTR_DET',
                                                        value_in           => id_presc_instr_det_in);
                    END IF;
                    IF l_name = 'DPDT_PROF_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_CANCEL',
                                                        value_in           => id_prof_cancel_in);
                    END IF;
                    IF l_name = 'DPDT_TDETD_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_TASK_DEPENDENCY',
                                                        value_in           => id_task_dependency_in);
                    END IF;
                    IF l_name = 'DPDT_UM_BOLUS_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_UNIT_MEASURE_BOLUS',
                                                        value_in           => id_unit_measure_bolus_in);
                    END IF;
                    IF l_name = 'DPDT_UM_DRIP'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_UNIT_MEASURE_DRIP',
                                                        value_in           => id_unit_measure_drip_in);
                    END IF;
                    IF l_name = 'DPDT_UM_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_UNIT_MEASURE',
                                                        value_in           => id_unit_measure_in);
                    END IF;
                    IF l_name = 'DPD_UME_DISP_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'UNIT_MEASURE_DISPENSE',
                                                        value_in           => unit_measure_dispense_in);
                    END IF;
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
        WHEN e_null_column_value THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    v_errm    VARCHAR2(2000) := dbms_utility.format_error_stack;
                    dot1loc   INTEGER;
                    dot2loc   INTEGER;
                    parenloc  INTEGER;
                    c_owner   all_constraints.owner%TYPE;
                    c_tabname all_tables.table_name%TYPE;
                    c_colname all_tab_columns.column_name%TYPE;
                BEGIN
                    dot1loc   := instr(v_errm, '.', 1, 1);
                    dot2loc   := instr(v_errm, '.', 1, 2);
                    parenloc  := instr(v_errm, '(');
                    c_owner   := substr(v_errm, parenloc + 1, dot1loc - parenloc - 1);
                    c_tabname := substr(v_errm, dot1loc + 1, dot2loc - dot1loc - 1);
                    c_colname := substr(v_errm, dot2loc + 1, instr(v_errm, ')') - dot2loc - 1);
                
                    pk_alert_exceptions.raise_error(error_name_in => 'COLUMN-CANNOT-BE-NULL',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => c_owner,
                                                    name2_in      => 'TABLE_NAME',
                                                    value2_in     => c_tabname,
                                                    name3_in      => 'COLUMN_NAME',
                                                    value3_in     => c_colname);
                END;
            END IF;
    END upd;

    PROCEDURE upd
    (
        id_drug_prescription_in     IN drug_presc_det.id_drug_prescription%TYPE DEFAULT NULL,
        id_drug_prescription_nin    IN BOOLEAN := TRUE,
        notes_in                    IN drug_presc_det.notes%TYPE DEFAULT NULL,
        notes_nin                   IN BOOLEAN := TRUE,
        flg_take_type_in            IN drug_presc_det.flg_take_type%TYPE DEFAULT NULL,
        flg_take_type_nin           IN BOOLEAN := TRUE,
        qty_in                      IN drug_presc_det.qty%TYPE DEFAULT NULL,
        qty_nin                     IN BOOLEAN := TRUE,
        rate_in                     IN drug_presc_det.rate%TYPE DEFAULT NULL,
        rate_nin                    IN BOOLEAN := TRUE,
        flg_status_in               IN drug_presc_det.flg_status%TYPE DEFAULT NULL,
        flg_status_nin              IN BOOLEAN := TRUE,
        id_prof_cancel_in           IN drug_presc_det.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin          IN BOOLEAN := TRUE,
        notes_cancel_in             IN drug_presc_det.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin            IN BOOLEAN := TRUE,
        notes_justif_in             IN drug_presc_det.notes_justif%TYPE DEFAULT NULL,
        notes_justif_nin            IN BOOLEAN := TRUE,
        interval_in                 IN drug_presc_det.interval%TYPE DEFAULT NULL,
        interval_nin                IN BOOLEAN := TRUE,
        takes_in                    IN drug_presc_det.takes%TYPE DEFAULT NULL,
        takes_nin                   IN BOOLEAN := TRUE,
        dosage_in                   IN drug_presc_det.dosage%TYPE DEFAULT NULL,
        dosage_nin                  IN BOOLEAN := TRUE,
        flg_ci_in                   IN drug_presc_det.flg_ci%TYPE DEFAULT NULL,
        flg_ci_nin                  IN BOOLEAN := TRUE,
        flg_cheaper_in              IN drug_presc_det.flg_cheaper%TYPE DEFAULT NULL,
        flg_cheaper_nin             IN BOOLEAN := TRUE,
        flg_justif_in               IN drug_presc_det.flg_justif%TYPE DEFAULT NULL,
        flg_justif_nin              IN BOOLEAN := TRUE,
        flg_attention_in            IN drug_presc_det.flg_attention%TYPE DEFAULT NULL,
        flg_attention_nin           IN BOOLEAN := TRUE,
        flg_attention_print_in      IN drug_presc_det.flg_attention_print%TYPE DEFAULT NULL,
        flg_attention_print_nin     IN BOOLEAN := TRUE,
        id_drug_despachos_in        IN drug_presc_det.id_drug_despachos%TYPE DEFAULT NULL,
        id_drug_despachos_nin       IN BOOLEAN := TRUE,
        dosage_description_in       IN drug_presc_det.dosage_description%TYPE DEFAULT NULL,
        dosage_description_nin      IN BOOLEAN := TRUE,
        value_bolus_in              IN drug_presc_det.value_bolus%TYPE DEFAULT NULL,
        value_bolus_nin             IN BOOLEAN := TRUE,
        value_drip_in               IN drug_presc_det.value_drip%TYPE DEFAULT NULL,
        value_drip_nin              IN BOOLEAN := TRUE,
        id_unit_measure_in          IN drug_presc_det.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_nin         IN BOOLEAN := TRUE,
        id_unit_measure_bolus_in    IN drug_presc_det.id_unit_measure_bolus%TYPE DEFAULT NULL,
        id_unit_measure_bolus_nin   IN BOOLEAN := TRUE,
        id_unit_measure_drip_in     IN drug_presc_det.id_unit_measure_drip%TYPE DEFAULT NULL,
        id_unit_measure_drip_nin    IN BOOLEAN := TRUE,
        dt_begin_tstz_in            IN drug_presc_det.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_begin_tstz_nin           IN BOOLEAN := TRUE,
        dt_end_tstz_in              IN drug_presc_det.dt_end_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_nin             IN BOOLEAN := TRUE,
        dt_cancel_tstz_in           IN drug_presc_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin          IN BOOLEAN := TRUE,
        dt_end_presc_tstz_in        IN drug_presc_det.dt_end_presc_tstz%TYPE DEFAULT NULL,
        dt_end_presc_tstz_nin       IN BOOLEAN := TRUE,
        dt_end_bottle_tstz_in       IN drug_presc_det.dt_end_bottle_tstz%TYPE DEFAULT NULL,
        dt_end_bottle_tstz_nin      IN BOOLEAN := TRUE,
        dt_order_in                 IN drug_presc_det.dt_order%TYPE DEFAULT NULL,
        dt_order_nin                IN BOOLEAN := TRUE,
        id_prof_order_in            IN drug_presc_det.id_prof_order%TYPE DEFAULT NULL,
        id_prof_order_nin           IN BOOLEAN := TRUE,
        id_order_type_in            IN drug_presc_det.id_order_type%TYPE DEFAULT NULL,
        id_order_type_nin           IN BOOLEAN := TRUE,
        flg_co_sign_in              IN drug_presc_det.flg_co_sign%TYPE DEFAULT NULL,
        flg_co_sign_nin             IN BOOLEAN := TRUE,
        dt_co_sign_in               IN drug_presc_det.dt_co_sign%TYPE DEFAULT NULL,
        dt_co_sign_nin              IN BOOLEAN := TRUE,
        notes_co_sign_in            IN drug_presc_det.notes_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_nin           IN BOOLEAN := TRUE,
        id_prof_co_sign_in          IN drug_presc_det.id_prof_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_nin         IN BOOLEAN := TRUE,
        duration_in                 IN drug_presc_det.duration%TYPE DEFAULT NULL,
        duration_nin                IN BOOLEAN := TRUE,
        id_unit_measure_dur_in      IN drug_presc_det.id_unit_measure_dur%TYPE DEFAULT NULL,
        id_unit_measure_dur_nin     IN BOOLEAN := TRUE,
        frequency_in                IN drug_presc_det.frequency%TYPE DEFAULT NULL,
        frequency_nin               IN BOOLEAN := TRUE,
        id_unit_measure_freq_in     IN drug_presc_det.id_unit_measure_freq%TYPE DEFAULT NULL,
        id_unit_measure_freq_nin    IN BOOLEAN := TRUE,
        dt_start_presc_tstz_in      IN drug_presc_det.dt_start_presc_tstz%TYPE DEFAULT NULL,
        dt_start_presc_tstz_nin     IN BOOLEAN := TRUE,
        refill_in                   IN drug_presc_det.refill%TYPE DEFAULT NULL,
        refill_nin                  IN BOOLEAN := TRUE,
        qty_inst_in                 IN drug_presc_det.qty_inst%TYPE DEFAULT NULL,
        qty_inst_nin                IN BOOLEAN := TRUE,
        unit_measure_inst_in        IN drug_presc_det.unit_measure_inst%TYPE DEFAULT NULL,
        unit_measure_inst_nin       IN BOOLEAN := TRUE,
        id_pat_medication_list_in   IN drug_presc_det.id_pat_medication_list%TYPE DEFAULT NULL,
        id_pat_medication_list_nin  IN BOOLEAN := TRUE,
        dt_last_change_in           IN drug_presc_det.dt_last_change%TYPE DEFAULT NULL,
        dt_last_change_nin          IN BOOLEAN := TRUE,
        route_id_in                 IN drug_presc_det.route_id%TYPE DEFAULT NULL,
        route_id_nin                IN BOOLEAN := TRUE,
        id_justification_in         IN drug_presc_det.id_justification%TYPE DEFAULT NULL,
        id_justification_nin        IN BOOLEAN := TRUE,
        vers_in                     IN drug_presc_det.vers%TYPE DEFAULT NULL,
        vers_nin                    IN BOOLEAN := TRUE,
        flg_interac_med_in          IN drug_presc_det.flg_interac_med%TYPE DEFAULT NULL,
        flg_interac_med_nin         IN BOOLEAN := TRUE,
        flg_interac_allergy_in      IN drug_presc_det.flg_interac_allergy%TYPE DEFAULT NULL,
        flg_interac_allergy_nin     IN BOOLEAN := TRUE,
        id_drug_in                  IN drug_presc_det.id_drug%TYPE DEFAULT NULL,
        id_drug_nin                 IN BOOLEAN := TRUE,
        id_other_product_in         IN drug_presc_det.id_other_product%TYPE DEFAULT NULL,
        id_other_product_nin        IN BOOLEAN := TRUE,
        desc_other_product_in       IN drug_presc_det.desc_other_product%TYPE DEFAULT NULL,
        desc_other_product_nin      IN BOOLEAN := TRUE,
        dt_hold_begin_in            IN drug_presc_det.dt_hold_begin%TYPE DEFAULT NULL,
        dt_hold_begin_nin           IN BOOLEAN := TRUE,
        dt_hold_end_in              IN drug_presc_det.dt_hold_end%TYPE DEFAULT NULL,
        dt_hold_end_nin             IN BOOLEAN := TRUE,
        flg_modified_in             IN drug_presc_det.flg_modified%TYPE DEFAULT NULL,
        flg_modified_nin            IN BOOLEAN := TRUE,
        status_flg_in               IN drug_presc_det.status_flg%TYPE DEFAULT NULL,
        status_flg_nin              IN BOOLEAN := TRUE,
        status_icon_in              IN drug_presc_det.status_icon%TYPE DEFAULT NULL,
        status_icon_nin             IN BOOLEAN := TRUE,
        status_msg_in               IN drug_presc_det.status_msg%TYPE DEFAULT NULL,
        status_msg_nin              IN BOOLEAN := TRUE,
        status_str_in               IN drug_presc_det.status_str%TYPE DEFAULT NULL,
        status_str_nin              IN BOOLEAN := TRUE,
        dispense_in                 IN drug_presc_det.dispense%TYPE DEFAULT NULL,
        dispense_nin                IN BOOLEAN := TRUE,
        unit_measure_dispense_in    IN drug_presc_det.unit_measure_dispense%TYPE DEFAULT NULL,
        unit_measure_dispense_nin   IN BOOLEAN := TRUE,
        flg_dosage_check_in         IN drug_presc_det.flg_dosage_check%TYPE DEFAULT NULL,
        flg_dosage_check_nin        IN BOOLEAN := TRUE,
        id_combination_compound_in  IN drug_presc_det.id_combination_compound%TYPE DEFAULT NULL,
        id_combination_compound_nin IN BOOLEAN := TRUE,
        id_irregular_directions_in  IN drug_presc_det.id_irregular_directions%TYPE DEFAULT NULL,
        id_irregular_directions_nin IN BOOLEAN := TRUE,
        create_user_in              IN drug_presc_det.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN drug_presc_det.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN drug_presc_det.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN drug_presc_det.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN drug_presc_det.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN drug_presc_det.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        flg_mix_instr_in            IN drug_presc_det.flg_mix_instr%TYPE DEFAULT NULL,
        flg_mix_instr_nin           IN BOOLEAN := TRUE,
        mix_instr_in                IN drug_presc_det.mix_instr%TYPE DEFAULT NULL,
        mix_instr_nin               IN BOOLEAN := TRUE,
        id_presc_instr_det_in       IN drug_presc_det.id_presc_instr_det%TYPE DEFAULT NULL,
        id_presc_instr_det_nin      IN BOOLEAN := TRUE,
        num_schemes_in              IN drug_presc_det.num_schemes%TYPE DEFAULT NULL,
        num_schemes_nin             IN BOOLEAN := TRUE,
        id_justify_reason_in        IN drug_presc_det.id_justify_reason%TYPE DEFAULT NULL,
        id_justify_reason_nin       IN BOOLEAN := TRUE,
        justify_reason_in           IN drug_presc_det.justify_reason%TYPE DEFAULT NULL,
        justify_reason_nin          IN BOOLEAN := TRUE,
        id_presc_directions_in      IN drug_presc_det.id_presc_directions%TYPE DEFAULT NULL,
        id_presc_directions_nin     IN BOOLEAN := TRUE,
        flg_free_text_in            IN drug_presc_det.flg_free_text%TYPE DEFAULT NULL,
        flg_free_text_nin           IN BOOLEAN := TRUE,
        id_task_dependency_in       IN drug_presc_det.id_task_dependency%TYPE DEFAULT NULL,
        id_task_dependency_nin      IN BOOLEAN := TRUE,
        flg_req_origin_module_in    IN drug_presc_det.flg_req_origin_module%TYPE DEFAULT NULL,
        flg_req_origin_module_nin   IN BOOLEAN := TRUE,
        take_in_case_in             IN drug_presc_det.take_in_case%TYPE DEFAULT NULL,
        take_in_case_nin            IN BOOLEAN := TRUE,
        id_vacc_manufacturer_in     IN drug_presc_det.id_vacc_manufacturer%TYPE DEFAULT NULL,
        id_vacc_manufacturer_nin    IN BOOLEAN := TRUE,
        code_mvx_in                 IN drug_presc_det.code_mvx%TYPE DEFAULT NULL,
        code_mvx_nin                IN BOOLEAN := TRUE,
        id_cdr_call_in              IN drug_presc_det.id_cdr_call%TYPE DEFAULT NULL,
        id_cdr_call_nin             IN BOOLEAN := TRUE,
        where_in                    VARCHAR2,
        handle_error_in             IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_drug_prescription_in     => id_drug_prescription_in,
            id_drug_prescription_nin    => id_drug_prescription_nin,
            notes_in                    => notes_in,
            notes_nin                   => notes_nin,
            flg_take_type_in            => flg_take_type_in,
            flg_take_type_nin           => flg_take_type_nin,
            qty_in                      => qty_in,
            qty_nin                     => qty_nin,
            rate_in                     => rate_in,
            rate_nin                    => rate_nin,
            flg_status_in               => flg_status_in,
            flg_status_nin              => flg_status_nin,
            id_prof_cancel_in           => id_prof_cancel_in,
            id_prof_cancel_nin          => id_prof_cancel_nin,
            notes_cancel_in             => notes_cancel_in,
            notes_cancel_nin            => notes_cancel_nin,
            notes_justif_in             => notes_justif_in,
            notes_justif_nin            => notes_justif_nin,
            interval_in                 => interval_in,
            interval_nin                => interval_nin,
            takes_in                    => takes_in,
            takes_nin                   => takes_nin,
            dosage_in                   => dosage_in,
            dosage_nin                  => dosage_nin,
            flg_ci_in                   => flg_ci_in,
            flg_ci_nin                  => flg_ci_nin,
            flg_cheaper_in              => flg_cheaper_in,
            flg_cheaper_nin             => flg_cheaper_nin,
            flg_justif_in               => flg_justif_in,
            flg_justif_nin              => flg_justif_nin,
            flg_attention_in            => flg_attention_in,
            flg_attention_nin           => flg_attention_nin,
            flg_attention_print_in      => flg_attention_print_in,
            flg_attention_print_nin     => flg_attention_print_nin,
            id_drug_despachos_in        => id_drug_despachos_in,
            id_drug_despachos_nin       => id_drug_despachos_nin,
            dosage_description_in       => dosage_description_in,
            dosage_description_nin      => dosage_description_nin,
            value_bolus_in              => value_bolus_in,
            value_bolus_nin             => value_bolus_nin,
            value_drip_in               => value_drip_in,
            value_drip_nin              => value_drip_nin,
            id_unit_measure_in          => id_unit_measure_in,
            id_unit_measure_nin         => id_unit_measure_nin,
            id_unit_measure_bolus_in    => id_unit_measure_bolus_in,
            id_unit_measure_bolus_nin   => id_unit_measure_bolus_nin,
            id_unit_measure_drip_in     => id_unit_measure_drip_in,
            id_unit_measure_drip_nin    => id_unit_measure_drip_nin,
            dt_begin_tstz_in            => dt_begin_tstz_in,
            dt_begin_tstz_nin           => dt_begin_tstz_nin,
            dt_end_tstz_in              => dt_end_tstz_in,
            dt_end_tstz_nin             => dt_end_tstz_nin,
            dt_cancel_tstz_in           => dt_cancel_tstz_in,
            dt_cancel_tstz_nin          => dt_cancel_tstz_nin,
            dt_end_presc_tstz_in        => dt_end_presc_tstz_in,
            dt_end_presc_tstz_nin       => dt_end_presc_tstz_nin,
            dt_end_bottle_tstz_in       => dt_end_bottle_tstz_in,
            dt_end_bottle_tstz_nin      => dt_end_bottle_tstz_nin,
            dt_order_in                 => dt_order_in,
            dt_order_nin                => dt_order_nin,
            id_prof_order_in            => id_prof_order_in,
            id_prof_order_nin           => id_prof_order_nin,
            id_order_type_in            => id_order_type_in,
            id_order_type_nin           => id_order_type_nin,
            flg_co_sign_in              => flg_co_sign_in,
            flg_co_sign_nin             => flg_co_sign_nin,
            dt_co_sign_in               => dt_co_sign_in,
            dt_co_sign_nin              => dt_co_sign_nin,
            notes_co_sign_in            => notes_co_sign_in,
            notes_co_sign_nin           => notes_co_sign_nin,
            id_prof_co_sign_in          => id_prof_co_sign_in,
            id_prof_co_sign_nin         => id_prof_co_sign_nin,
            duration_in                 => duration_in,
            duration_nin                => duration_nin,
            id_unit_measure_dur_in      => id_unit_measure_dur_in,
            id_unit_measure_dur_nin     => id_unit_measure_dur_nin,
            frequency_in                => frequency_in,
            frequency_nin               => frequency_nin,
            id_unit_measure_freq_in     => id_unit_measure_freq_in,
            id_unit_measure_freq_nin    => id_unit_measure_freq_nin,
            dt_start_presc_tstz_in      => dt_start_presc_tstz_in,
            dt_start_presc_tstz_nin     => dt_start_presc_tstz_nin,
            refill_in                   => refill_in,
            refill_nin                  => refill_nin,
            qty_inst_in                 => qty_inst_in,
            qty_inst_nin                => qty_inst_nin,
            unit_measure_inst_in        => unit_measure_inst_in,
            unit_measure_inst_nin       => unit_measure_inst_nin,
            id_pat_medication_list_in   => id_pat_medication_list_in,
            id_pat_medication_list_nin  => id_pat_medication_list_nin,
            dt_last_change_in           => dt_last_change_in,
            dt_last_change_nin          => dt_last_change_nin,
            route_id_in                 => route_id_in,
            route_id_nin                => route_id_nin,
            id_justification_in         => id_justification_in,
            id_justification_nin        => id_justification_nin,
            vers_in                     => vers_in,
            vers_nin                    => vers_nin,
            flg_interac_med_in          => flg_interac_med_in,
            flg_interac_med_nin         => flg_interac_med_nin,
            flg_interac_allergy_in      => flg_interac_allergy_in,
            flg_interac_allergy_nin     => flg_interac_allergy_nin,
            id_drug_in                  => id_drug_in,
            id_drug_nin                 => id_drug_nin,
            id_other_product_in         => id_other_product_in,
            id_other_product_nin        => id_other_product_nin,
            desc_other_product_in       => desc_other_product_in,
            desc_other_product_nin      => desc_other_product_nin,
            dt_hold_begin_in            => dt_hold_begin_in,
            dt_hold_begin_nin           => dt_hold_begin_nin,
            dt_hold_end_in              => dt_hold_end_in,
            dt_hold_end_nin             => dt_hold_end_nin,
            flg_modified_in             => flg_modified_in,
            flg_modified_nin            => flg_modified_nin,
            status_flg_in               => status_flg_in,
            status_flg_nin              => status_flg_nin,
            status_icon_in              => status_icon_in,
            status_icon_nin             => status_icon_nin,
            status_msg_in               => status_msg_in,
            status_msg_nin              => status_msg_nin,
            status_str_in               => status_str_in,
            status_str_nin              => status_str_nin,
            dispense_in                 => dispense_in,
            dispense_nin                => dispense_nin,
            unit_measure_dispense_in    => unit_measure_dispense_in,
            unit_measure_dispense_nin   => unit_measure_dispense_nin,
            flg_dosage_check_in         => flg_dosage_check_in,
            flg_dosage_check_nin        => flg_dosage_check_nin,
            id_combination_compound_in  => id_combination_compound_in,
            id_combination_compound_nin => id_combination_compound_nin,
            id_irregular_directions_in  => id_irregular_directions_in,
            id_irregular_directions_nin => id_irregular_directions_nin,
            create_user_in              => create_user_in,
            create_user_nin             => create_user_nin,
            create_time_in              => create_time_in,
            create_time_nin             => create_time_nin,
            create_institution_in       => create_institution_in,
            create_institution_nin      => create_institution_nin,
            update_user_in              => update_user_in,
            update_user_nin             => update_user_nin,
            update_time_in              => update_time_in,
            update_time_nin             => update_time_nin,
            update_institution_in       => update_institution_in,
            update_institution_nin      => update_institution_nin,
            flg_mix_instr_in            => flg_mix_instr_in,
            flg_mix_instr_nin           => flg_mix_instr_nin,
            mix_instr_in                => mix_instr_in,
            mix_instr_nin               => mix_instr_nin,
            id_presc_instr_det_in       => id_presc_instr_det_in,
            id_presc_instr_det_nin      => id_presc_instr_det_nin,
            num_schemes_in              => num_schemes_in,
            num_schemes_nin             => num_schemes_nin,
            id_justify_reason_in        => id_justify_reason_in,
            id_justify_reason_nin       => id_justify_reason_nin,
            justify_reason_in           => justify_reason_in,
            justify_reason_nin          => justify_reason_nin,
            id_presc_directions_in      => id_presc_directions_in,
            id_presc_directions_nin     => id_presc_directions_nin,
            flg_free_text_in            => flg_free_text_in,
            flg_free_text_nin           => flg_free_text_nin,
            id_task_dependency_in       => id_task_dependency_in,
            id_task_dependency_nin      => id_task_dependency_nin,
            flg_req_origin_module_in    => flg_req_origin_module_in,
            flg_req_origin_module_nin   => flg_req_origin_module_nin,
            take_in_case_in             => take_in_case_in,
            take_in_case_nin            => take_in_case_nin,
            id_vacc_manufacturer_in     => id_vacc_manufacturer_in,
            id_vacc_manufacturer_nin    => id_vacc_manufacturer_nin,
            code_mvx_in                 => code_mvx_in,
            code_mvx_nin                => code_mvx_nin,
            id_cdr_call_in              => id_cdr_call_in,
            id_cdr_call_nin             => id_cdr_call_nin,
            where_in                    => where_in,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END upd;

    PROCEDURE upd
    (
        rec_in          IN drug_presc_det%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_drug_presc_det_in       => rec_in.id_drug_presc_det,
            id_drug_prescription_in    => rec_in.id_drug_prescription,
            notes_in                   => rec_in.notes,
            flg_take_type_in           => rec_in.flg_take_type,
            qty_in                     => rec_in.qty,
            rate_in                    => rec_in.rate,
            flg_status_in              => rec_in.flg_status,
            id_prof_cancel_in          => rec_in.id_prof_cancel,
            notes_cancel_in            => rec_in.notes_cancel,
            notes_justif_in            => rec_in.notes_justif,
            interval_in                => rec_in.interval,
            takes_in                   => rec_in.takes,
            dosage_in                  => rec_in.dosage,
            flg_ci_in                  => rec_in.flg_ci,
            flg_cheaper_in             => rec_in.flg_cheaper,
            flg_justif_in              => rec_in.flg_justif,
            flg_attention_in           => rec_in.flg_attention,
            flg_attention_print_in     => rec_in.flg_attention_print,
            id_drug_despachos_in       => rec_in.id_drug_despachos,
            dosage_description_in      => rec_in.dosage_description,
            value_bolus_in             => rec_in.value_bolus,
            value_drip_in              => rec_in.value_drip,
            id_unit_measure_in         => rec_in.id_unit_measure,
            id_unit_measure_bolus_in   => rec_in.id_unit_measure_bolus,
            id_unit_measure_drip_in    => rec_in.id_unit_measure_drip,
            dt_begin_tstz_in           => rec_in.dt_begin_tstz,
            dt_end_tstz_in             => rec_in.dt_end_tstz,
            dt_cancel_tstz_in          => rec_in.dt_cancel_tstz,
            dt_end_presc_tstz_in       => rec_in.dt_end_presc_tstz,
            dt_end_bottle_tstz_in      => rec_in.dt_end_bottle_tstz,
            dt_order_in                => rec_in.dt_order,
            id_prof_order_in           => rec_in.id_prof_order,
            id_order_type_in           => rec_in.id_order_type,
            flg_co_sign_in             => rec_in.flg_co_sign,
            dt_co_sign_in              => rec_in.dt_co_sign,
            notes_co_sign_in           => rec_in.notes_co_sign,
            id_prof_co_sign_in         => rec_in.id_prof_co_sign,
            duration_in                => rec_in.duration,
            id_unit_measure_dur_in     => rec_in.id_unit_measure_dur,
            frequency_in               => rec_in.frequency,
            id_unit_measure_freq_in    => rec_in.id_unit_measure_freq,
            dt_start_presc_tstz_in     => rec_in.dt_start_presc_tstz,
            refill_in                  => rec_in.refill,
            qty_inst_in                => rec_in.qty_inst,
            unit_measure_inst_in       => rec_in.unit_measure_inst,
            id_pat_medication_list_in  => rec_in.id_pat_medication_list,
            dt_last_change_in          => rec_in.dt_last_change,
            route_id_in                => rec_in.route_id,
            id_justification_in        => rec_in.id_justification,
            vers_in                    => rec_in.vers,
            flg_interac_med_in         => rec_in.flg_interac_med,
            flg_interac_allergy_in     => rec_in.flg_interac_allergy,
            id_drug_in                 => rec_in.id_drug,
            id_other_product_in        => rec_in.id_other_product,
            desc_other_product_in      => rec_in.desc_other_product,
            dt_hold_begin_in           => rec_in.dt_hold_begin,
            dt_hold_end_in             => rec_in.dt_hold_end,
            flg_modified_in            => rec_in.flg_modified,
            status_flg_in              => rec_in.status_flg,
            status_icon_in             => rec_in.status_icon,
            status_msg_in              => rec_in.status_msg,
            status_str_in              => rec_in.status_str,
            dispense_in                => rec_in.dispense,
            unit_measure_dispense_in   => rec_in.unit_measure_dispense,
            flg_dosage_check_in        => rec_in.flg_dosage_check,
            id_combination_compound_in => rec_in.id_combination_compound,
            id_irregular_directions_in => rec_in.id_irregular_directions,
            create_user_in             => rec_in.create_user,
            create_time_in             => rec_in.create_time,
            create_institution_in      => rec_in.create_institution,
            update_user_in             => rec_in.update_user,
            update_time_in             => rec_in.update_time,
            update_institution_in      => rec_in.update_institution,
            flg_mix_instr_in           => rec_in.flg_mix_instr,
            mix_instr_in               => rec_in.mix_instr,
            id_presc_instr_det_in      => rec_in.id_presc_instr_det,
            num_schemes_in             => rec_in.num_schemes,
            id_justify_reason_in       => rec_in.id_justify_reason,
            justify_reason_in          => rec_in.justify_reason,
            id_presc_directions_in     => rec_in.id_presc_directions,
            flg_free_text_in           => rec_in.flg_free_text,
            id_task_dependency_in      => rec_in.id_task_dependency,
            flg_req_origin_module_in   => rec_in.flg_req_origin_module,
            take_in_case_in            => rec_in.take_in_case,
            id_vacc_manufacturer_in    => rec_in.id_vacc_manufacturer,
            code_mvx_in                => rec_in.code_mvx,
            id_cdr_call_in             => rec_in.id_cdr_call
            
           ,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    END upd;

    PROCEDURE upd
    (
        rec_in          IN drug_presc_det%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_drug_presc_det_in       => rec_in.id_drug_presc_det,
            id_drug_prescription_in    => rec_in.id_drug_prescription,
            notes_in                   => rec_in.notes,
            flg_take_type_in           => rec_in.flg_take_type,
            qty_in                     => rec_in.qty,
            rate_in                    => rec_in.rate,
            flg_status_in              => rec_in.flg_status,
            id_prof_cancel_in          => rec_in.id_prof_cancel,
            notes_cancel_in            => rec_in.notes_cancel,
            notes_justif_in            => rec_in.notes_justif,
            interval_in                => rec_in.interval,
            takes_in                   => rec_in.takes,
            dosage_in                  => rec_in.dosage,
            flg_ci_in                  => rec_in.flg_ci,
            flg_cheaper_in             => rec_in.flg_cheaper,
            flg_justif_in              => rec_in.flg_justif,
            flg_attention_in           => rec_in.flg_attention,
            flg_attention_print_in     => rec_in.flg_attention_print,
            id_drug_despachos_in       => rec_in.id_drug_despachos,
            dosage_description_in      => rec_in.dosage_description,
            value_bolus_in             => rec_in.value_bolus,
            value_drip_in              => rec_in.value_drip,
            id_unit_measure_in         => rec_in.id_unit_measure,
            id_unit_measure_bolus_in   => rec_in.id_unit_measure_bolus,
            id_unit_measure_drip_in    => rec_in.id_unit_measure_drip,
            dt_begin_tstz_in           => rec_in.dt_begin_tstz,
            dt_end_tstz_in             => rec_in.dt_end_tstz,
            dt_cancel_tstz_in          => rec_in.dt_cancel_tstz,
            dt_end_presc_tstz_in       => rec_in.dt_end_presc_tstz,
            dt_end_bottle_tstz_in      => rec_in.dt_end_bottle_tstz,
            dt_order_in                => rec_in.dt_order,
            id_prof_order_in           => rec_in.id_prof_order,
            id_order_type_in           => rec_in.id_order_type,
            flg_co_sign_in             => rec_in.flg_co_sign,
            dt_co_sign_in              => rec_in.dt_co_sign,
            notes_co_sign_in           => rec_in.notes_co_sign,
            id_prof_co_sign_in         => rec_in.id_prof_co_sign,
            duration_in                => rec_in.duration,
            id_unit_measure_dur_in     => rec_in.id_unit_measure_dur,
            frequency_in               => rec_in.frequency,
            id_unit_measure_freq_in    => rec_in.id_unit_measure_freq,
            dt_start_presc_tstz_in     => rec_in.dt_start_presc_tstz,
            refill_in                  => rec_in.refill,
            qty_inst_in                => rec_in.qty_inst,
            unit_measure_inst_in       => rec_in.unit_measure_inst,
            id_pat_medication_list_in  => rec_in.id_pat_medication_list,
            dt_last_change_in          => rec_in.dt_last_change,
            route_id_in                => rec_in.route_id,
            id_justification_in        => rec_in.id_justification,
            vers_in                    => rec_in.vers,
            flg_interac_med_in         => rec_in.flg_interac_med,
            flg_interac_allergy_in     => rec_in.flg_interac_allergy,
            id_drug_in                 => rec_in.id_drug,
            id_other_product_in        => rec_in.id_other_product,
            desc_other_product_in      => rec_in.desc_other_product,
            dt_hold_begin_in           => rec_in.dt_hold_begin,
            dt_hold_end_in             => rec_in.dt_hold_end,
            flg_modified_in            => rec_in.flg_modified,
            status_flg_in              => rec_in.status_flg,
            status_icon_in             => rec_in.status_icon,
            status_msg_in              => rec_in.status_msg,
            status_str_in              => rec_in.status_str,
            dispense_in                => rec_in.dispense,
            unit_measure_dispense_in   => rec_in.unit_measure_dispense,
            flg_dosage_check_in        => rec_in.flg_dosage_check,
            id_combination_compound_in => rec_in.id_combination_compound,
            id_irregular_directions_in => rec_in.id_irregular_directions,
            create_user_in             => rec_in.create_user,
            create_time_in             => rec_in.create_time,
            create_institution_in      => rec_in.create_institution,
            update_user_in             => rec_in.update_user,
            update_time_in             => rec_in.update_time,
            update_institution_in      => rec_in.update_institution,
            flg_mix_instr_in           => rec_in.flg_mix_instr,
            mix_instr_in               => rec_in.mix_instr,
            id_presc_instr_det_in      => rec_in.id_presc_instr_det,
            num_schemes_in             => rec_in.num_schemes,
            id_justify_reason_in       => rec_in.id_justify_reason,
            justify_reason_in          => rec_in.justify_reason,
            id_presc_directions_in     => rec_in.id_presc_directions,
            flg_free_text_in           => rec_in.flg_free_text,
            id_task_dependency_in      => rec_in.id_task_dependency,
            flg_req_origin_module_in   => rec_in.flg_req_origin_module,
            take_in_case_in            => rec_in.take_in_case,
            id_vacc_manufacturer_in    => rec_in.id_vacc_manufacturer,
            code_mvx_in                => rec_in.code_mvx,
            id_cdr_call_in             => rec_in.id_cdr_call
            
           ,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    END upd;

    PROCEDURE upd_ins
    (
        id_drug_presc_det_in       IN drug_presc_det.id_drug_presc_det%TYPE,
        id_drug_prescription_in    IN drug_presc_det.id_drug_prescription%TYPE DEFAULT NULL,
        notes_in                   IN drug_presc_det.notes%TYPE DEFAULT NULL,
        flg_take_type_in           IN drug_presc_det.flg_take_type%TYPE DEFAULT NULL,
        qty_in                     IN drug_presc_det.qty%TYPE DEFAULT NULL,
        rate_in                    IN drug_presc_det.rate%TYPE DEFAULT NULL,
        flg_status_in              IN drug_presc_det.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in          IN drug_presc_det.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in            IN drug_presc_det.notes_cancel%TYPE DEFAULT NULL,
        notes_justif_in            IN drug_presc_det.notes_justif%TYPE DEFAULT NULL,
        interval_in                IN drug_presc_det.interval%TYPE DEFAULT NULL,
        takes_in                   IN drug_presc_det.takes%TYPE DEFAULT NULL,
        dosage_in                  IN drug_presc_det.dosage%TYPE DEFAULT NULL,
        flg_ci_in                  IN drug_presc_det.flg_ci%TYPE DEFAULT NULL,
        flg_cheaper_in             IN drug_presc_det.flg_cheaper%TYPE DEFAULT NULL,
        flg_justif_in              IN drug_presc_det.flg_justif%TYPE DEFAULT NULL,
        flg_attention_in           IN drug_presc_det.flg_attention%TYPE DEFAULT NULL,
        flg_attention_print_in     IN drug_presc_det.flg_attention_print%TYPE DEFAULT NULL,
        id_drug_despachos_in       IN drug_presc_det.id_drug_despachos%TYPE DEFAULT NULL,
        dosage_description_in      IN drug_presc_det.dosage_description%TYPE DEFAULT NULL,
        value_bolus_in             IN drug_presc_det.value_bolus%TYPE DEFAULT NULL,
        value_drip_in              IN drug_presc_det.value_drip%TYPE DEFAULT NULL,
        id_unit_measure_in         IN drug_presc_det.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_bolus_in   IN drug_presc_det.id_unit_measure_bolus%TYPE DEFAULT NULL,
        id_unit_measure_drip_in    IN drug_presc_det.id_unit_measure_drip%TYPE DEFAULT NULL,
        dt_begin_tstz_in           IN drug_presc_det.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in             IN drug_presc_det.dt_end_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in          IN drug_presc_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_end_presc_tstz_in       IN drug_presc_det.dt_end_presc_tstz%TYPE DEFAULT NULL,
        dt_end_bottle_tstz_in      IN drug_presc_det.dt_end_bottle_tstz%TYPE DEFAULT NULL,
        dt_order_in                IN drug_presc_det.dt_order%TYPE DEFAULT NULL,
        id_prof_order_in           IN drug_presc_det.id_prof_order%TYPE DEFAULT NULL,
        id_order_type_in           IN drug_presc_det.id_order_type%TYPE DEFAULT NULL,
        flg_co_sign_in             IN drug_presc_det.flg_co_sign%TYPE DEFAULT NULL,
        dt_co_sign_in              IN drug_presc_det.dt_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_in           IN drug_presc_det.notes_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_in         IN drug_presc_det.id_prof_co_sign%TYPE DEFAULT NULL,
        duration_in                IN drug_presc_det.duration%TYPE DEFAULT NULL,
        id_unit_measure_dur_in     IN drug_presc_det.id_unit_measure_dur%TYPE DEFAULT NULL,
        frequency_in               IN drug_presc_det.frequency%TYPE DEFAULT NULL,
        id_unit_measure_freq_in    IN drug_presc_det.id_unit_measure_freq%TYPE DEFAULT NULL,
        dt_start_presc_tstz_in     IN drug_presc_det.dt_start_presc_tstz%TYPE DEFAULT NULL,
        refill_in                  IN drug_presc_det.refill%TYPE DEFAULT NULL,
        qty_inst_in                IN drug_presc_det.qty_inst%TYPE DEFAULT NULL,
        unit_measure_inst_in       IN drug_presc_det.unit_measure_inst%TYPE DEFAULT NULL,
        id_pat_medication_list_in  IN drug_presc_det.id_pat_medication_list%TYPE DEFAULT NULL,
        dt_last_change_in          IN drug_presc_det.dt_last_change%TYPE DEFAULT NULL,
        route_id_in                IN drug_presc_det.route_id%TYPE DEFAULT NULL,
        id_justification_in        IN drug_presc_det.id_justification%TYPE DEFAULT NULL,
        vers_in                    IN drug_presc_det.vers%TYPE DEFAULT NULL,
        flg_interac_med_in         IN drug_presc_det.flg_interac_med%TYPE DEFAULT NULL,
        flg_interac_allergy_in     IN drug_presc_det.flg_interac_allergy%TYPE DEFAULT NULL,
        id_drug_in                 IN drug_presc_det.id_drug%TYPE DEFAULT NULL,
        id_other_product_in        IN drug_presc_det.id_other_product%TYPE DEFAULT NULL,
        desc_other_product_in      IN drug_presc_det.desc_other_product%TYPE DEFAULT NULL,
        dt_hold_begin_in           IN drug_presc_det.dt_hold_begin%TYPE DEFAULT NULL,
        dt_hold_end_in             IN drug_presc_det.dt_hold_end%TYPE DEFAULT NULL,
        flg_modified_in            IN drug_presc_det.flg_modified%TYPE DEFAULT NULL,
        status_flg_in              IN drug_presc_det.status_flg%TYPE DEFAULT NULL,
        status_icon_in             IN drug_presc_det.status_icon%TYPE DEFAULT NULL,
        status_msg_in              IN drug_presc_det.status_msg%TYPE DEFAULT NULL,
        status_str_in              IN drug_presc_det.status_str%TYPE DEFAULT NULL,
        dispense_in                IN drug_presc_det.dispense%TYPE DEFAULT NULL,
        unit_measure_dispense_in   IN drug_presc_det.unit_measure_dispense%TYPE DEFAULT NULL,
        flg_dosage_check_in        IN drug_presc_det.flg_dosage_check%TYPE DEFAULT NULL,
        id_combination_compound_in IN drug_presc_det.id_combination_compound%TYPE DEFAULT NULL,
        id_irregular_directions_in IN drug_presc_det.id_irregular_directions%TYPE DEFAULT NULL,
        create_user_in             IN drug_presc_det.create_user%TYPE DEFAULT NULL,
        create_time_in             IN drug_presc_det.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN drug_presc_det.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN drug_presc_det.update_user%TYPE DEFAULT NULL,
        update_time_in             IN drug_presc_det.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN drug_presc_det.update_institution%TYPE DEFAULT NULL,
        flg_mix_instr_in           IN drug_presc_det.flg_mix_instr%TYPE DEFAULT NULL,
        mix_instr_in               IN drug_presc_det.mix_instr%TYPE DEFAULT NULL,
        id_presc_instr_det_in      IN drug_presc_det.id_presc_instr_det%TYPE DEFAULT NULL,
        num_schemes_in             IN drug_presc_det.num_schemes%TYPE DEFAULT NULL,
        id_justify_reason_in       IN drug_presc_det.id_justify_reason%TYPE DEFAULT NULL,
        justify_reason_in          IN drug_presc_det.justify_reason%TYPE DEFAULT NULL,
        id_presc_directions_in     IN drug_presc_det.id_presc_directions%TYPE DEFAULT NULL,
        flg_free_text_in           IN drug_presc_det.flg_free_text%TYPE DEFAULT NULL,
        id_task_dependency_in      IN drug_presc_det.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in   IN drug_presc_det.flg_req_origin_module%TYPE DEFAULT NULL,
        take_in_case_in            IN drug_presc_det.take_in_case%TYPE DEFAULT NULL,
        id_vacc_manufacturer_in    IN drug_presc_det.id_vacc_manufacturer%TYPE DEFAULT NULL,
        code_mvx_in                IN drug_presc_det.code_mvx%TYPE DEFAULT NULL,
        id_cdr_call_in             IN drug_presc_det.id_cdr_call%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT table_varchar
    ) IS
    BEGIN
        upd(id_drug_presc_det_in       => id_drug_presc_det_in,
            id_drug_prescription_in    => id_drug_prescription_in,
            notes_in                   => notes_in,
            flg_take_type_in           => flg_take_type_in,
            qty_in                     => qty_in,
            rate_in                    => rate_in,
            flg_status_in              => flg_status_in,
            id_prof_cancel_in          => id_prof_cancel_in,
            notes_cancel_in            => notes_cancel_in,
            notes_justif_in            => notes_justif_in,
            interval_in                => interval_in,
            takes_in                   => takes_in,
            dosage_in                  => dosage_in,
            flg_ci_in                  => flg_ci_in,
            flg_cheaper_in             => flg_cheaper_in,
            flg_justif_in              => flg_justif_in,
            flg_attention_in           => flg_attention_in,
            flg_attention_print_in     => flg_attention_print_in,
            id_drug_despachos_in       => id_drug_despachos_in,
            dosage_description_in      => dosage_description_in,
            value_bolus_in             => value_bolus_in,
            value_drip_in              => value_drip_in,
            id_unit_measure_in         => id_unit_measure_in,
            id_unit_measure_bolus_in   => id_unit_measure_bolus_in,
            id_unit_measure_drip_in    => id_unit_measure_drip_in,
            dt_begin_tstz_in           => dt_begin_tstz_in,
            dt_end_tstz_in             => dt_end_tstz_in,
            dt_cancel_tstz_in          => dt_cancel_tstz_in,
            dt_end_presc_tstz_in       => dt_end_presc_tstz_in,
            dt_end_bottle_tstz_in      => dt_end_bottle_tstz_in,
            dt_order_in                => dt_order_in,
            id_prof_order_in           => id_prof_order_in,
            id_order_type_in           => id_order_type_in,
            flg_co_sign_in             => flg_co_sign_in,
            dt_co_sign_in              => dt_co_sign_in,
            notes_co_sign_in           => notes_co_sign_in,
            id_prof_co_sign_in         => id_prof_co_sign_in,
            duration_in                => duration_in,
            id_unit_measure_dur_in     => id_unit_measure_dur_in,
            frequency_in               => frequency_in,
            id_unit_measure_freq_in    => id_unit_measure_freq_in,
            dt_start_presc_tstz_in     => dt_start_presc_tstz_in,
            refill_in                  => refill_in,
            qty_inst_in                => qty_inst_in,
            unit_measure_inst_in       => unit_measure_inst_in,
            id_pat_medication_list_in  => id_pat_medication_list_in,
            dt_last_change_in          => dt_last_change_in,
            route_id_in                => route_id_in,
            id_justification_in        => id_justification_in,
            vers_in                    => vers_in,
            flg_interac_med_in         => flg_interac_med_in,
            flg_interac_allergy_in     => flg_interac_allergy_in,
            id_drug_in                 => id_drug_in,
            id_other_product_in        => id_other_product_in,
            desc_other_product_in      => desc_other_product_in,
            dt_hold_begin_in           => dt_hold_begin_in,
            dt_hold_end_in             => dt_hold_end_in,
            flg_modified_in            => flg_modified_in,
            status_flg_in              => status_flg_in,
            status_icon_in             => status_icon_in,
            status_msg_in              => status_msg_in,
            status_str_in              => status_str_in,
            dispense_in                => dispense_in,
            unit_measure_dispense_in   => unit_measure_dispense_in,
            flg_dosage_check_in        => flg_dosage_check_in,
            id_combination_compound_in => id_combination_compound_in,
            id_irregular_directions_in => id_irregular_directions_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            flg_mix_instr_in           => flg_mix_instr_in,
            mix_instr_in               => mix_instr_in,
            id_presc_instr_det_in      => id_presc_instr_det_in,
            num_schemes_in             => num_schemes_in,
            id_justify_reason_in       => id_justify_reason_in,
            justify_reason_in          => justify_reason_in,
            id_presc_directions_in     => id_presc_directions_in,
            flg_free_text_in           => flg_free_text_in,
            id_task_dependency_in      => id_task_dependency_in,
            flg_req_origin_module_in   => flg_req_origin_module_in,
            take_in_case_in            => take_in_case_in,
            id_vacc_manufacturer_in    => id_vacc_manufacturer_in,
            code_mvx_in                => code_mvx_in,
            id_cdr_call_in             => id_cdr_call_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
        IF SQL%ROWCOUNT = 0
        THEN
            ins(id_drug_presc_det_in       => id_drug_presc_det_in,
                id_drug_prescription_in    => id_drug_prescription_in,
                notes_in                   => notes_in,
                flg_take_type_in           => flg_take_type_in,
                qty_in                     => qty_in,
                rate_in                    => rate_in,
                flg_status_in              => flg_status_in,
                id_prof_cancel_in          => id_prof_cancel_in,
                notes_cancel_in            => notes_cancel_in,
                notes_justif_in            => notes_justif_in,
                interval_in                => interval_in,
                takes_in                   => takes_in,
                dosage_in                  => dosage_in,
                flg_ci_in                  => flg_ci_in,
                flg_cheaper_in             => flg_cheaper_in,
                flg_justif_in              => flg_justif_in,
                flg_attention_in           => flg_attention_in,
                flg_attention_print_in     => flg_attention_print_in,
                id_drug_despachos_in       => id_drug_despachos_in,
                dosage_description_in      => dosage_description_in,
                value_bolus_in             => value_bolus_in,
                value_drip_in              => value_drip_in,
                id_unit_measure_in         => id_unit_measure_in,
                id_unit_measure_bolus_in   => id_unit_measure_bolus_in,
                id_unit_measure_drip_in    => id_unit_measure_drip_in,
                dt_begin_tstz_in           => dt_begin_tstz_in,
                dt_end_tstz_in             => dt_end_tstz_in,
                dt_cancel_tstz_in          => dt_cancel_tstz_in,
                dt_end_presc_tstz_in       => dt_end_presc_tstz_in,
                dt_end_bottle_tstz_in      => dt_end_bottle_tstz_in,
                dt_order_in                => dt_order_in,
                id_prof_order_in           => id_prof_order_in,
                id_order_type_in           => id_order_type_in,
                flg_co_sign_in             => flg_co_sign_in,
                dt_co_sign_in              => dt_co_sign_in,
                notes_co_sign_in           => notes_co_sign_in,
                id_prof_co_sign_in         => id_prof_co_sign_in,
                duration_in                => duration_in,
                id_unit_measure_dur_in     => id_unit_measure_dur_in,
                frequency_in               => frequency_in,
                id_unit_measure_freq_in    => id_unit_measure_freq_in,
                dt_start_presc_tstz_in     => dt_start_presc_tstz_in,
                refill_in                  => refill_in,
                qty_inst_in                => qty_inst_in,
                unit_measure_inst_in       => unit_measure_inst_in,
                id_pat_medication_list_in  => id_pat_medication_list_in,
                dt_last_change_in          => dt_last_change_in,
                route_id_in                => route_id_in,
                id_justification_in        => id_justification_in,
                vers_in                    => vers_in,
                flg_interac_med_in         => flg_interac_med_in,
                flg_interac_allergy_in     => flg_interac_allergy_in,
                id_drug_in                 => id_drug_in,
                id_other_product_in        => id_other_product_in,
                desc_other_product_in      => desc_other_product_in,
                dt_hold_begin_in           => dt_hold_begin_in,
                dt_hold_end_in             => dt_hold_end_in,
                flg_modified_in            => flg_modified_in,
                status_flg_in              => status_flg_in,
                status_icon_in             => status_icon_in,
                status_msg_in              => status_msg_in,
                status_str_in              => status_str_in,
                dispense_in                => dispense_in,
                unit_measure_dispense_in   => unit_measure_dispense_in,
                flg_dosage_check_in        => flg_dosage_check_in,
                id_combination_compound_in => id_combination_compound_in,
                id_irregular_directions_in => id_irregular_directions_in,
                create_user_in             => create_user_in,
                create_time_in             => create_time_in,
                create_institution_in      => create_institution_in,
                update_user_in             => update_user_in,
                update_time_in             => update_time_in,
                update_institution_in      => update_institution_in,
                flg_mix_instr_in           => flg_mix_instr_in,
                mix_instr_in               => mix_instr_in,
                id_presc_instr_det_in      => id_presc_instr_det_in,
                num_schemes_in             => num_schemes_in,
                id_justify_reason_in       => id_justify_reason_in,
                justify_reason_in          => justify_reason_in,
                id_presc_directions_in     => id_presc_directions_in,
                flg_free_text_in           => flg_free_text_in,
                id_task_dependency_in      => id_task_dependency_in,
                flg_req_origin_module_in   => flg_req_origin_module_in,
                take_in_case_in            => take_in_case_in,
                id_vacc_manufacturer_in    => id_vacc_manufacturer_in,
                code_mvx_in                => code_mvx_in,
                id_cdr_call_in             => id_cdr_call_in,
                handle_error_in            => handle_error_in,
                rows_out                   => rows_out);
        END IF;
    END upd_ins;

    PROCEDURE upd_ins
    (
        id_drug_presc_det_in       IN drug_presc_det.id_drug_presc_det%TYPE,
        id_drug_prescription_in    IN drug_presc_det.id_drug_prescription%TYPE DEFAULT NULL,
        notes_in                   IN drug_presc_det.notes%TYPE DEFAULT NULL,
        flg_take_type_in           IN drug_presc_det.flg_take_type%TYPE DEFAULT NULL,
        qty_in                     IN drug_presc_det.qty%TYPE DEFAULT NULL,
        rate_in                    IN drug_presc_det.rate%TYPE DEFAULT NULL,
        flg_status_in              IN drug_presc_det.flg_status%TYPE DEFAULT NULL,
        id_prof_cancel_in          IN drug_presc_det.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in            IN drug_presc_det.notes_cancel%TYPE DEFAULT NULL,
        notes_justif_in            IN drug_presc_det.notes_justif%TYPE DEFAULT NULL,
        interval_in                IN drug_presc_det.interval%TYPE DEFAULT NULL,
        takes_in                   IN drug_presc_det.takes%TYPE DEFAULT NULL,
        dosage_in                  IN drug_presc_det.dosage%TYPE DEFAULT NULL,
        flg_ci_in                  IN drug_presc_det.flg_ci%TYPE DEFAULT NULL,
        flg_cheaper_in             IN drug_presc_det.flg_cheaper%TYPE DEFAULT NULL,
        flg_justif_in              IN drug_presc_det.flg_justif%TYPE DEFAULT NULL,
        flg_attention_in           IN drug_presc_det.flg_attention%TYPE DEFAULT NULL,
        flg_attention_print_in     IN drug_presc_det.flg_attention_print%TYPE DEFAULT NULL,
        id_drug_despachos_in       IN drug_presc_det.id_drug_despachos%TYPE DEFAULT NULL,
        dosage_description_in      IN drug_presc_det.dosage_description%TYPE DEFAULT NULL,
        value_bolus_in             IN drug_presc_det.value_bolus%TYPE DEFAULT NULL,
        value_drip_in              IN drug_presc_det.value_drip%TYPE DEFAULT NULL,
        id_unit_measure_in         IN drug_presc_det.id_unit_measure%TYPE DEFAULT NULL,
        id_unit_measure_bolus_in   IN drug_presc_det.id_unit_measure_bolus%TYPE DEFAULT NULL,
        id_unit_measure_drip_in    IN drug_presc_det.id_unit_measure_drip%TYPE DEFAULT NULL,
        dt_begin_tstz_in           IN drug_presc_det.dt_begin_tstz%TYPE DEFAULT NULL,
        dt_end_tstz_in             IN drug_presc_det.dt_end_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in          IN drug_presc_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_end_presc_tstz_in       IN drug_presc_det.dt_end_presc_tstz%TYPE DEFAULT NULL,
        dt_end_bottle_tstz_in      IN drug_presc_det.dt_end_bottle_tstz%TYPE DEFAULT NULL,
        dt_order_in                IN drug_presc_det.dt_order%TYPE DEFAULT NULL,
        id_prof_order_in           IN drug_presc_det.id_prof_order%TYPE DEFAULT NULL,
        id_order_type_in           IN drug_presc_det.id_order_type%TYPE DEFAULT NULL,
        flg_co_sign_in             IN drug_presc_det.flg_co_sign%TYPE DEFAULT NULL,
        dt_co_sign_in              IN drug_presc_det.dt_co_sign%TYPE DEFAULT NULL,
        notes_co_sign_in           IN drug_presc_det.notes_co_sign%TYPE DEFAULT NULL,
        id_prof_co_sign_in         IN drug_presc_det.id_prof_co_sign%TYPE DEFAULT NULL,
        duration_in                IN drug_presc_det.duration%TYPE DEFAULT NULL,
        id_unit_measure_dur_in     IN drug_presc_det.id_unit_measure_dur%TYPE DEFAULT NULL,
        frequency_in               IN drug_presc_det.frequency%TYPE DEFAULT NULL,
        id_unit_measure_freq_in    IN drug_presc_det.id_unit_measure_freq%TYPE DEFAULT NULL,
        dt_start_presc_tstz_in     IN drug_presc_det.dt_start_presc_tstz%TYPE DEFAULT NULL,
        refill_in                  IN drug_presc_det.refill%TYPE DEFAULT NULL,
        qty_inst_in                IN drug_presc_det.qty_inst%TYPE DEFAULT NULL,
        unit_measure_inst_in       IN drug_presc_det.unit_measure_inst%TYPE DEFAULT NULL,
        id_pat_medication_list_in  IN drug_presc_det.id_pat_medication_list%TYPE DEFAULT NULL,
        dt_last_change_in          IN drug_presc_det.dt_last_change%TYPE DEFAULT NULL,
        route_id_in                IN drug_presc_det.route_id%TYPE DEFAULT NULL,
        id_justification_in        IN drug_presc_det.id_justification%TYPE DEFAULT NULL,
        vers_in                    IN drug_presc_det.vers%TYPE DEFAULT NULL,
        flg_interac_med_in         IN drug_presc_det.flg_interac_med%TYPE DEFAULT NULL,
        flg_interac_allergy_in     IN drug_presc_det.flg_interac_allergy%TYPE DEFAULT NULL,
        id_drug_in                 IN drug_presc_det.id_drug%TYPE DEFAULT NULL,
        id_other_product_in        IN drug_presc_det.id_other_product%TYPE DEFAULT NULL,
        desc_other_product_in      IN drug_presc_det.desc_other_product%TYPE DEFAULT NULL,
        dt_hold_begin_in           IN drug_presc_det.dt_hold_begin%TYPE DEFAULT NULL,
        dt_hold_end_in             IN drug_presc_det.dt_hold_end%TYPE DEFAULT NULL,
        flg_modified_in            IN drug_presc_det.flg_modified%TYPE DEFAULT NULL,
        status_flg_in              IN drug_presc_det.status_flg%TYPE DEFAULT NULL,
        status_icon_in             IN drug_presc_det.status_icon%TYPE DEFAULT NULL,
        status_msg_in              IN drug_presc_det.status_msg%TYPE DEFAULT NULL,
        status_str_in              IN drug_presc_det.status_str%TYPE DEFAULT NULL,
        dispense_in                IN drug_presc_det.dispense%TYPE DEFAULT NULL,
        unit_measure_dispense_in   IN drug_presc_det.unit_measure_dispense%TYPE DEFAULT NULL,
        flg_dosage_check_in        IN drug_presc_det.flg_dosage_check%TYPE DEFAULT NULL,
        id_combination_compound_in IN drug_presc_det.id_combination_compound%TYPE DEFAULT NULL,
        id_irregular_directions_in IN drug_presc_det.id_irregular_directions%TYPE DEFAULT NULL,
        create_user_in             IN drug_presc_det.create_user%TYPE DEFAULT NULL,
        create_time_in             IN drug_presc_det.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN drug_presc_det.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN drug_presc_det.update_user%TYPE DEFAULT NULL,
        update_time_in             IN drug_presc_det.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN drug_presc_det.update_institution%TYPE DEFAULT NULL,
        flg_mix_instr_in           IN drug_presc_det.flg_mix_instr%TYPE DEFAULT NULL,
        mix_instr_in               IN drug_presc_det.mix_instr%TYPE DEFAULT NULL,
        id_presc_instr_det_in      IN drug_presc_det.id_presc_instr_det%TYPE DEFAULT NULL,
        num_schemes_in             IN drug_presc_det.num_schemes%TYPE DEFAULT NULL,
        id_justify_reason_in       IN drug_presc_det.id_justify_reason%TYPE DEFAULT NULL,
        justify_reason_in          IN drug_presc_det.justify_reason%TYPE DEFAULT NULL,
        id_presc_directions_in     IN drug_presc_det.id_presc_directions%TYPE DEFAULT NULL,
        flg_free_text_in           IN drug_presc_det.flg_free_text%TYPE DEFAULT NULL,
        id_task_dependency_in      IN drug_presc_det.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in   IN drug_presc_det.flg_req_origin_module%TYPE DEFAULT NULL,
        take_in_case_in            IN drug_presc_det.take_in_case%TYPE DEFAULT NULL,
        id_vacc_manufacturer_in    IN drug_presc_det.id_vacc_manufacturer%TYPE DEFAULT NULL,
        code_mvx_in                IN drug_presc_det.code_mvx%TYPE DEFAULT NULL,
        id_cdr_call_in             IN drug_presc_det.id_cdr_call%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd_ins(id_drug_presc_det_in,
                id_drug_prescription_in,
                notes_in,
                flg_take_type_in,
                qty_in,
                rate_in,
                flg_status_in,
                id_prof_cancel_in,
                notes_cancel_in,
                notes_justif_in,
                interval_in,
                takes_in,
                dosage_in,
                flg_ci_in,
                flg_cheaper_in,
                flg_justif_in,
                flg_attention_in,
                flg_attention_print_in,
                id_drug_despachos_in,
                dosage_description_in,
                value_bolus_in,
                value_drip_in,
                id_unit_measure_in,
                id_unit_measure_bolus_in,
                id_unit_measure_drip_in,
                dt_begin_tstz_in,
                dt_end_tstz_in,
                dt_cancel_tstz_in,
                dt_end_presc_tstz_in,
                dt_end_bottle_tstz_in,
                dt_order_in,
                id_prof_order_in,
                id_order_type_in,
                flg_co_sign_in,
                dt_co_sign_in,
                notes_co_sign_in,
                id_prof_co_sign_in,
                duration_in,
                id_unit_measure_dur_in,
                frequency_in,
                id_unit_measure_freq_in,
                dt_start_presc_tstz_in,
                refill_in,
                qty_inst_in,
                unit_measure_inst_in,
                id_pat_medication_list_in,
                dt_last_change_in,
                route_id_in,
                id_justification_in,
                vers_in,
                flg_interac_med_in,
                flg_interac_allergy_in,
                id_drug_in,
                id_other_product_in,
                desc_other_product_in,
                dt_hold_begin_in,
                dt_hold_end_in,
                flg_modified_in,
                status_flg_in,
                status_icon_in,
                status_msg_in,
                status_str_in,
                dispense_in,
                unit_measure_dispense_in,
                flg_dosage_check_in,
                id_combination_compound_in,
                id_irregular_directions_in,
                create_user_in,
                create_time_in,
                create_institution_in,
                update_user_in,
                update_time_in,
                update_institution_in,
                flg_mix_instr_in,
                mix_instr_in,
                id_presc_instr_det_in,
                num_schemes_in,
                id_justify_reason_in,
                justify_reason_in,
                id_presc_directions_in,
                flg_free_text_in,
                id_task_dependency_in,
                flg_req_origin_module_in,
                take_in_case_in,
                id_vacc_manufacturer_in,
                code_mvx_in,
                id_cdr_call_in,
                handle_error_in,
                rows_out);
    END upd_ins;

    PROCEDURE upd
    (
        col_in            IN drug_presc_det_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    ) IS
        l_id_drug_presc_det       id_drug_presc_det_cc;
        l_id_drug_prescription    id_drug_prescription_cc;
        l_notes                   notes_cc;
        l_flg_take_type           flg_take_type_cc;
        l_qty                     qty_cc;
        l_rate                    rate_cc;
        l_flg_status              flg_status_cc;
        l_id_prof_cancel          id_prof_cancel_cc;
        l_notes_cancel            notes_cancel_cc;
        l_notes_justif            notes_justif_cc;
        l_interval                interval_cc;
        l_takes                   takes_cc;
        l_dosage                  dosage_cc;
        l_flg_ci                  flg_ci_cc;
        l_flg_cheaper             flg_cheaper_cc;
        l_flg_justif              flg_justif_cc;
        l_flg_attention           flg_attention_cc;
        l_flg_attention_print     flg_attention_print_cc;
        l_id_drug_despachos       id_drug_despachos_cc;
        l_dosage_description      dosage_description_cc;
        l_value_bolus             value_bolus_cc;
        l_value_drip              value_drip_cc;
        l_id_unit_measure         id_unit_measure_cc;
        l_id_unit_measure_bolus   id_unit_measure_bolus_cc;
        l_id_unit_measure_drip    id_unit_measure_drip_cc;
        l_dt_begin_tstz           dt_begin_tstz_cc;
        l_dt_end_tstz             dt_end_tstz_cc;
        l_dt_cancel_tstz          dt_cancel_tstz_cc;
        l_dt_end_presc_tstz       dt_end_presc_tstz_cc;
        l_dt_end_bottle_tstz      dt_end_bottle_tstz_cc;
        l_dt_order                dt_order_cc;
        l_id_prof_order           id_prof_order_cc;
        l_id_order_type           id_order_type_cc;
        l_flg_co_sign             flg_co_sign_cc;
        l_dt_co_sign              dt_co_sign_cc;
        l_notes_co_sign           notes_co_sign_cc;
        l_id_prof_co_sign         id_prof_co_sign_cc;
        l_duration                duration_cc;
        l_id_unit_measure_dur     id_unit_measure_dur_cc;
        l_frequency               frequency_cc;
        l_id_unit_measure_freq    id_unit_measure_freq_cc;
        l_dt_start_presc_tstz     dt_start_presc_tstz_cc;
        l_refill                  refill_cc;
        l_qty_inst                qty_inst_cc;
        l_unit_measure_inst       unit_measure_inst_cc;
        l_id_pat_medication_list  id_pat_medication_list_cc;
        l_dt_last_change          dt_last_change_cc;
        l_route_id                route_id_cc;
        l_id_justification        id_justification_cc;
        l_vers                    vers_cc;
        l_flg_interac_med         flg_interac_med_cc;
        l_flg_interac_allergy     flg_interac_allergy_cc;
        l_id_drug                 id_drug_cc;
        l_id_other_product        id_other_product_cc;
        l_desc_other_product      desc_other_product_cc;
        l_dt_hold_begin           dt_hold_begin_cc;
        l_dt_hold_end             dt_hold_end_cc;
        l_flg_modified            flg_modified_cc;
        l_status_flg              status_flg_cc;
        l_status_icon             status_icon_cc;
        l_status_msg              status_msg_cc;
        l_status_str              status_str_cc;
        l_dispense                dispense_cc;
        l_unit_measure_dispense   unit_measure_dispense_cc;
        l_flg_dosage_check        flg_dosage_check_cc;
        l_id_combination_compound id_combination_compound_cc;
        l_id_irregular_directions id_irregular_directions_cc;
        l_create_user             create_user_cc;
        l_create_time             create_time_cc;
        l_create_institution      create_institution_cc;
        l_update_user             update_user_cc;
        l_update_time             update_time_cc;
        l_update_institution      update_institution_cc;
        l_flg_mix_instr           flg_mix_instr_cc;
        l_mix_instr               mix_instr_cc;
        l_id_presc_instr_det      id_presc_instr_det_cc;
        l_num_schemes             num_schemes_cc;
        l_id_justify_reason       id_justify_reason_cc;
        l_justify_reason          justify_reason_cc;
        l_id_presc_directions     id_presc_directions_cc;
        l_flg_free_text           flg_free_text_cc;
        l_id_task_dependency      id_task_dependency_cc;
        l_flg_req_origin_module   flg_req_origin_module_cc;
        l_take_in_case            take_in_case_cc;
        l_id_vacc_manufacturer    id_vacc_manufacturer_cc;
        l_code_mvx                code_mvx_cc;
        l_id_cdr_call             id_cdr_call_cc;
    BEGIN
        FOR i IN col_in.first .. col_in.last
        LOOP
            l_id_drug_presc_det(i) := col_in(i).id_drug_presc_det;
            l_id_drug_prescription(i) := col_in(i).id_drug_prescription;
            l_notes(i) := col_in(i).notes;
            l_flg_take_type(i) := col_in(i).flg_take_type;
            l_qty(i) := col_in(i).qty;
            l_rate(i) := col_in(i).rate;
            l_flg_status(i) := col_in(i).flg_status;
            l_id_prof_cancel(i) := col_in(i).id_prof_cancel;
            l_notes_cancel(i) := col_in(i).notes_cancel;
            l_notes_justif(i) := col_in(i).notes_justif;
            l_interval(i) := col_in(i).interval;
            l_takes(i) := col_in(i).takes;
            l_dosage(i) := col_in(i).dosage;
            l_flg_ci(i) := col_in(i).flg_ci;
            l_flg_cheaper(i) := col_in(i).flg_cheaper;
            l_flg_justif(i) := col_in(i).flg_justif;
            l_flg_attention(i) := col_in(i).flg_attention;
            l_flg_attention_print(i) := col_in(i).flg_attention_print;
            l_id_drug_despachos(i) := col_in(i).id_drug_despachos;
            l_dosage_description(i) := col_in(i).dosage_description;
            l_value_bolus(i) := col_in(i).value_bolus;
            l_value_drip(i) := col_in(i).value_drip;
            l_id_unit_measure(i) := col_in(i).id_unit_measure;
            l_id_unit_measure_bolus(i) := col_in(i).id_unit_measure_bolus;
            l_id_unit_measure_drip(i) := col_in(i).id_unit_measure_drip;
            l_dt_begin_tstz(i) := col_in(i).dt_begin_tstz;
            l_dt_end_tstz(i) := col_in(i).dt_end_tstz;
            l_dt_cancel_tstz(i) := col_in(i).dt_cancel_tstz;
            l_dt_end_presc_tstz(i) := col_in(i).dt_end_presc_tstz;
            l_dt_end_bottle_tstz(i) := col_in(i).dt_end_bottle_tstz;
            l_dt_order(i) := col_in(i).dt_order;
            l_id_prof_order(i) := col_in(i).id_prof_order;
            l_id_order_type(i) := col_in(i).id_order_type;
            l_flg_co_sign(i) := col_in(i).flg_co_sign;
            l_dt_co_sign(i) := col_in(i).dt_co_sign;
            l_notes_co_sign(i) := col_in(i).notes_co_sign;
            l_id_prof_co_sign(i) := col_in(i).id_prof_co_sign;
            l_duration(i) := col_in(i).duration;
            l_id_unit_measure_dur(i) := col_in(i).id_unit_measure_dur;
            l_frequency(i) := col_in(i).frequency;
            l_id_unit_measure_freq(i) := col_in(i).id_unit_measure_freq;
            l_dt_start_presc_tstz(i) := col_in(i).dt_start_presc_tstz;
            l_refill(i) := col_in(i).refill;
            l_qty_inst(i) := col_in(i).qty_inst;
            l_unit_measure_inst(i) := col_in(i).unit_measure_inst;
            l_id_pat_medication_list(i) := col_in(i).id_pat_medication_list;
            l_dt_last_change(i) := col_in(i).dt_last_change;
            l_route_id(i) := col_in(i).route_id;
            l_id_justification(i) := col_in(i).id_justification;
            l_vers(i) := col_in(i).vers;
            l_flg_interac_med(i) := col_in(i).flg_interac_med;
            l_flg_interac_allergy(i) := col_in(i).flg_interac_allergy;
            l_id_drug(i) := col_in(i).id_drug;
            l_id_other_product(i) := col_in(i).id_other_product;
            l_desc_other_product(i) := col_in(i).desc_other_product;
            l_dt_hold_begin(i) := col_in(i).dt_hold_begin;
            l_dt_hold_end(i) := col_in(i).dt_hold_end;
            l_flg_modified(i) := col_in(i).flg_modified;
            l_status_flg(i) := col_in(i).status_flg;
            l_status_icon(i) := col_in(i).status_icon;
            l_status_msg(i) := col_in(i).status_msg;
            l_status_str(i) := col_in(i).status_str;
            l_dispense(i) := col_in(i).dispense;
            l_unit_measure_dispense(i) := col_in(i).unit_measure_dispense;
            l_flg_dosage_check(i) := col_in(i).flg_dosage_check;
            l_id_combination_compound(i) := col_in(i).id_combination_compound;
            l_id_irregular_directions(i) := col_in(i).id_irregular_directions;
            l_create_user(i) := col_in(i).create_user;
            l_create_time(i) := col_in(i).create_time;
            l_create_institution(i) := col_in(i).create_institution;
            l_update_user(i) := col_in(i).update_user;
            l_update_time(i) := col_in(i).update_time;
            l_update_institution(i) := col_in(i).update_institution;
            l_flg_mix_instr(i) := col_in(i).flg_mix_instr;
            l_mix_instr(i) := col_in(i).mix_instr;
            l_id_presc_instr_det(i) := col_in(i).id_presc_instr_det;
            l_num_schemes(i) := col_in(i).num_schemes;
            l_id_justify_reason(i) := col_in(i).id_justify_reason;
            l_justify_reason(i) := col_in(i).justify_reason;
            l_id_presc_directions(i) := col_in(i).id_presc_directions;
            l_flg_free_text(i) := col_in(i).flg_free_text;
            l_id_task_dependency(i) := col_in(i).id_task_dependency;
            l_flg_req_origin_module(i) := col_in(i).flg_req_origin_module;
            l_take_in_case(i) := col_in(i).take_in_case;
            l_id_vacc_manufacturer(i) := col_in(i).id_vacc_manufacturer;
            l_code_mvx(i) := col_in(i).code_mvx;
            l_id_cdr_call(i) := col_in(i).id_cdr_call;
        END LOOP;
        IF nvl(ignore_if_null_in, FALSE)
        THEN
            -- Set any columns to their current values
            -- if incoming value is NULL.
            -- Put WHEN clause on column-level triggers!
            FORALL i IN col_in.first .. col_in.last
                UPDATE drug_presc_det
                   SET id_drug_prescription    = nvl(l_id_drug_prescription(i), id_drug_prescription),
                       notes                   = nvl(l_notes(i), notes),
                       flg_take_type           = nvl(l_flg_take_type(i), flg_take_type),
                       qty                     = nvl(l_qty(i), qty),
                       rate                    = nvl(l_rate(i), rate),
                       flg_status              = nvl(l_flg_status(i), flg_status),
                       id_prof_cancel          = nvl(l_id_prof_cancel(i), id_prof_cancel),
                       notes_cancel            = nvl(l_notes_cancel(i), notes_cancel),
                       notes_justif            = nvl(l_notes_justif(i), notes_justif),
                       INTERVAL                = nvl(l_interval(i), INTERVAL),
                       takes                   = nvl(l_takes(i), takes),
                       dosage                  = nvl(l_dosage(i), dosage),
                       flg_ci                  = nvl(l_flg_ci(i), flg_ci),
                       flg_cheaper             = nvl(l_flg_cheaper(i), flg_cheaper),
                       flg_justif              = nvl(l_flg_justif(i), flg_justif),
                       flg_attention           = nvl(l_flg_attention(i), flg_attention),
                       flg_attention_print     = nvl(l_flg_attention_print(i), flg_attention_print),
                       id_drug_despachos       = nvl(l_id_drug_despachos(i), id_drug_despachos),
                       dosage_description      = nvl(l_dosage_description(i), dosage_description),
                       value_bolus             = nvl(l_value_bolus(i), value_bolus),
                       value_drip              = nvl(l_value_drip(i), value_drip),
                       id_unit_measure         = nvl(l_id_unit_measure(i), id_unit_measure),
                       id_unit_measure_bolus   = nvl(l_id_unit_measure_bolus(i), id_unit_measure_bolus),
                       id_unit_measure_drip    = nvl(l_id_unit_measure_drip(i), id_unit_measure_drip),
                       dt_begin_tstz           = nvl(l_dt_begin_tstz(i), dt_begin_tstz),
                       dt_end_tstz             = nvl(l_dt_end_tstz(i), dt_end_tstz),
                       dt_cancel_tstz          = nvl(l_dt_cancel_tstz(i), dt_cancel_tstz),
                       dt_end_presc_tstz       = nvl(l_dt_end_presc_tstz(i), dt_end_presc_tstz),
                       dt_end_bottle_tstz      = nvl(l_dt_end_bottle_tstz(i), dt_end_bottle_tstz),
                       dt_order                = nvl(l_dt_order(i), dt_order),
                       id_prof_order           = nvl(l_id_prof_order(i), id_prof_order),
                       id_order_type           = nvl(l_id_order_type(i), id_order_type),
                       flg_co_sign             = nvl(l_flg_co_sign(i), flg_co_sign),
                       dt_co_sign              = nvl(l_dt_co_sign(i), dt_co_sign),
                       notes_co_sign           = nvl(l_notes_co_sign(i), notes_co_sign),
                       id_prof_co_sign         = nvl(l_id_prof_co_sign(i), id_prof_co_sign),
                       duration                = nvl(l_duration(i), duration),
                       id_unit_measure_dur     = nvl(l_id_unit_measure_dur(i), id_unit_measure_dur),
                       frequency               = nvl(l_frequency(i), frequency),
                       id_unit_measure_freq    = nvl(l_id_unit_measure_freq(i), id_unit_measure_freq),
                       dt_start_presc_tstz     = nvl(l_dt_start_presc_tstz(i), dt_start_presc_tstz),
                       refill                  = nvl(l_refill(i), refill),
                       qty_inst                = nvl(l_qty_inst(i), qty_inst),
                       unit_measure_inst       = nvl(l_unit_measure_inst(i), unit_measure_inst),
                       id_pat_medication_list  = nvl(l_id_pat_medication_list(i), id_pat_medication_list),
                       dt_last_change          = nvl(l_dt_last_change(i), dt_last_change),
                       route_id                = nvl(l_route_id(i), route_id),
                       id_justification        = nvl(l_id_justification(i), id_justification),
                       vers                    = nvl(l_vers(i), vers),
                       flg_interac_med         = nvl(l_flg_interac_med(i), flg_interac_med),
                       flg_interac_allergy     = nvl(l_flg_interac_allergy(i), flg_interac_allergy),
                       id_drug                 = nvl(l_id_drug(i), id_drug),
                       id_other_product        = nvl(l_id_other_product(i), id_other_product),
                       desc_other_product      = nvl(l_desc_other_product(i), desc_other_product),
                       dt_hold_begin           = nvl(l_dt_hold_begin(i), dt_hold_begin),
                       dt_hold_end             = nvl(l_dt_hold_end(i), dt_hold_end),
                       flg_modified            = nvl(l_flg_modified(i), flg_modified),
                       status_flg              = nvl(l_status_flg(i), status_flg),
                       status_icon             = nvl(l_status_icon(i), status_icon),
                       status_msg              = nvl(l_status_msg(i), status_msg),
                       status_str              = nvl(l_status_str(i), status_str),
                       dispense                = nvl(l_dispense(i), dispense),
                       unit_measure_dispense   = nvl(l_unit_measure_dispense(i), unit_measure_dispense),
                       flg_dosage_check        = nvl(l_flg_dosage_check(i), flg_dosage_check),
                       id_combination_compound = nvl(l_id_combination_compound(i), id_combination_compound),
                       id_irregular_directions = nvl(l_id_irregular_directions(i), id_irregular_directions),
                       create_user             = nvl(l_create_user(i), create_user),
                       create_time             = nvl(l_create_time(i), create_time),
                       create_institution      = nvl(l_create_institution(i), create_institution),
                       update_user             = nvl(l_update_user(i), update_user),
                       update_time             = nvl(l_update_time(i), update_time),
                       update_institution      = nvl(l_update_institution(i), update_institution),
                       flg_mix_instr           = nvl(l_flg_mix_instr(i), flg_mix_instr),
                       mix_instr               = nvl(l_mix_instr(i), mix_instr),
                       id_presc_instr_det      = nvl(l_id_presc_instr_det(i), id_presc_instr_det),
                       num_schemes             = nvl(l_num_schemes(i), num_schemes),
                       id_justify_reason       = nvl(l_id_justify_reason(i), id_justify_reason),
                       justify_reason          = nvl(l_justify_reason(i), justify_reason),
                       id_presc_directions     = nvl(l_id_presc_directions(i), id_presc_directions),
                       flg_free_text           = nvl(l_flg_free_text(i), flg_free_text),
                       id_task_dependency      = nvl(l_id_task_dependency(i), id_task_dependency),
                       flg_req_origin_module   = nvl(l_flg_req_origin_module(i), flg_req_origin_module),
                       take_in_case            = nvl(l_take_in_case(i), take_in_case),
                       id_vacc_manufacturer    = nvl(l_id_vacc_manufacturer(i), id_vacc_manufacturer),
                       code_mvx                = nvl(l_code_mvx(i), code_mvx),
                       id_cdr_call             = nvl(l_id_cdr_call(i), id_cdr_call)
                 WHERE id_drug_presc_det = l_id_drug_presc_det(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        ELSE
            FORALL i IN col_in.first .. col_in.last
                UPDATE drug_presc_det
                   SET id_drug_prescription    = l_id_drug_prescription(i),
                       notes                   = l_notes(i),
                       flg_take_type           = l_flg_take_type(i),
                       qty                     = l_qty(i),
                       rate                    = l_rate(i),
                       flg_status              = l_flg_status(i),
                       id_prof_cancel          = l_id_prof_cancel(i),
                       notes_cancel            = l_notes_cancel(i),
                       notes_justif            = l_notes_justif(i),
                       INTERVAL                = l_interval(i),
                       takes                   = l_takes(i),
                       dosage                  = l_dosage(i),
                       flg_ci                  = l_flg_ci(i),
                       flg_cheaper             = l_flg_cheaper(i),
                       flg_justif              = l_flg_justif(i),
                       flg_attention           = l_flg_attention(i),
                       flg_attention_print     = l_flg_attention_print(i),
                       id_drug_despachos       = l_id_drug_despachos(i),
                       dosage_description      = l_dosage_description(i),
                       value_bolus             = l_value_bolus(i),
                       value_drip              = l_value_drip(i),
                       id_unit_measure         = l_id_unit_measure(i),
                       id_unit_measure_bolus   = l_id_unit_measure_bolus(i),
                       id_unit_measure_drip    = l_id_unit_measure_drip(i),
                       dt_begin_tstz           = l_dt_begin_tstz(i),
                       dt_end_tstz             = l_dt_end_tstz(i),
                       dt_cancel_tstz          = l_dt_cancel_tstz(i),
                       dt_end_presc_tstz       = l_dt_end_presc_tstz(i),
                       dt_end_bottle_tstz      = l_dt_end_bottle_tstz(i),
                       dt_order                = l_dt_order(i),
                       id_prof_order           = l_id_prof_order(i),
                       id_order_type           = l_id_order_type(i),
                       flg_co_sign             = l_flg_co_sign(i),
                       dt_co_sign              = l_dt_co_sign(i),
                       notes_co_sign           = l_notes_co_sign(i),
                       id_prof_co_sign         = l_id_prof_co_sign(i),
                       duration                = l_duration(i),
                       id_unit_measure_dur     = l_id_unit_measure_dur(i),
                       frequency               = l_frequency(i),
                       id_unit_measure_freq    = l_id_unit_measure_freq(i),
                       dt_start_presc_tstz     = l_dt_start_presc_tstz(i),
                       refill                  = l_refill(i),
                       qty_inst                = l_qty_inst(i),
                       unit_measure_inst       = l_unit_measure_inst(i),
                       id_pat_medication_list  = l_id_pat_medication_list(i),
                       dt_last_change          = l_dt_last_change(i),
                       route_id                = l_route_id(i),
                       id_justification        = l_id_justification(i),
                       vers                    = l_vers(i),
                       flg_interac_med         = l_flg_interac_med(i),
                       flg_interac_allergy     = l_flg_interac_allergy(i),
                       id_drug                 = l_id_drug(i),
                       id_other_product        = l_id_other_product(i),
                       desc_other_product      = l_desc_other_product(i),
                       dt_hold_begin           = l_dt_hold_begin(i),
                       dt_hold_end             = l_dt_hold_end(i),
                       flg_modified            = l_flg_modified(i),
                       status_flg              = l_status_flg(i),
                       status_icon             = l_status_icon(i),
                       status_msg              = l_status_msg(i),
                       status_str              = l_status_str(i),
                       dispense                = l_dispense(i),
                       unit_measure_dispense   = l_unit_measure_dispense(i),
                       flg_dosage_check        = l_flg_dosage_check(i),
                       id_combination_compound = l_id_combination_compound(i),
                       id_irregular_directions = l_id_irregular_directions(i),
                       create_user             = l_create_user(i),
                       create_time             = l_create_time(i),
                       create_institution      = l_create_institution(i),
                       update_user             = l_update_user(i),
                       update_time             = l_update_time(i),
                       update_institution      = l_update_institution(i),
                       flg_mix_instr           = l_flg_mix_instr(i),
                       mix_instr               = l_mix_instr(i),
                       id_presc_instr_det      = l_id_presc_instr_det(i),
                       num_schemes             = l_num_schemes(i),
                       id_justify_reason       = l_id_justify_reason(i),
                       justify_reason          = l_justify_reason(i),
                       id_presc_directions     = l_id_presc_directions(i),
                       flg_free_text           = l_flg_free_text(i),
                       id_task_dependency      = l_id_task_dependency(i),
                       flg_req_origin_module   = l_flg_req_origin_module(i),
                       take_in_case            = l_take_in_case(i),
                       id_vacc_manufacturer    = l_id_vacc_manufacturer(i),
                       code_mvx                = l_code_mvx(i),
                       id_cdr_call             = l_id_cdr_call(i)
                 WHERE id_drug_presc_det = l_id_drug_presc_det(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    END upd;

    PROCEDURE upd
    (
        col_in            IN drug_presc_det_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(col_in, ignore_if_null_in, handle_error_in, rows_out);
    END upd;

    FUNCTION dynupdstr
    (
        colname_in IN all_tab_columns.column_name%TYPE,
        where_in   IN VARCHAR2 := NULL
    )
    
     RETURN VARCHAR2 IS
    BEGIN
        RETURN 'BEGIN UPDATE DRUG_PRESC_DET
             SET ' || colname_in || ' = :value
           WHERE ' || nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;';
    END dynupdstr;

    FUNCTION dynupdstr_no_rows_out
    (
        colname_in IN all_tab_columns.column_name%TYPE,
        where_in   IN VARCHAR2 := NULL
    )
    
     RETURN VARCHAR2 IS
    BEGIN
        RETURN 'UPDATE DRUG_PRESC_DET
             SET ' || colname_in || ' = :value
           WHERE ' || nvl(where_in, '1=1');
    END dynupdstr_no_rows_out;

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN UPDATE DRUG_PRESC_DET set ' || colname_in || '=' || colname_in || ' + ' ||
                          nvl(increment_value_in, 1) || ' WHERE ' || nvl(where_in, '1=1') ||
                          ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    EXCEPTION
        WHEN dup_val_on_index THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner           all_constraints.owner%TYPE;
                    l_name            all_constraints.constraint_name%TYPE;
                    l_err_instance_id PLS_INTEGER;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'DUPLICATE-VALUE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
        WHEN e_null_column_value THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    v_errm    VARCHAR2(2000) := dbms_utility.format_error_stack;
                    dot1loc   INTEGER;
                    dot2loc   INTEGER;
                    parenloc  INTEGER;
                    c_owner   all_constraints.owner%TYPE;
                    c_tabname all_tables.table_name%TYPE;
                    c_colname all_tab_columns.column_name%TYPE;
                BEGIN
                    dot1loc   := instr(v_errm, '.', 1, 1);
                    dot2loc   := instr(v_errm, '.', 1, 2);
                    parenloc  := instr(v_errm, '(');
                    c_owner   := substr(v_errm, parenloc + 1, dot1loc - parenloc - 1);
                    c_tabname := substr(v_errm, dot1loc + 1, dot2loc - dot1loc - 1);
                    c_colname := substr(v_errm, dot2loc + 1, instr(v_errm, ')') - dot2loc - 1);
                
                    pk_alert_exceptions.raise_error(error_name_in => 'COLUMN-CANNOT-BE-NULL',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => c_owner,
                                                    name2_in      => 'TABLE_NAME',
                                                    value2_in     => c_tabname,
                                                    name3_in      => 'COLUMN_NAME',
                                                    value3_in     => c_colname);
                END;
            END IF;
    END increment_onecol;

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        EXECUTE IMMEDIATE 'UPDATE DRUG_PRESC_DET set ' || colname_in || '=' || colname_in || ' + ' ||
                          nvl(increment_value_in, 1) || ' WHERE ' || nvl(where_in, '1=1');
    EXCEPTION
        WHEN dup_val_on_index THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner           all_constraints.owner%TYPE;
                    l_name            all_constraints.constraint_name%TYPE;
                    l_err_instance_id PLS_INTEGER;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'DUPLICATE-VALUE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
        WHEN e_null_column_value THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    v_errm    VARCHAR2(2000) := dbms_utility.format_error_stack;
                    dot1loc   INTEGER;
                    dot2loc   INTEGER;
                    parenloc  INTEGER;
                    c_owner   all_constraints.owner%TYPE;
                    c_tabname all_tables.table_name%TYPE;
                    c_colname all_tab_columns.column_name%TYPE;
                BEGIN
                    dot1loc   := instr(v_errm, '.', 1, 1);
                    dot2loc   := instr(v_errm, '.', 1, 2);
                    parenloc  := instr(v_errm, '(');
                    c_owner   := substr(v_errm, parenloc + 1, dot1loc - parenloc - 1);
                    c_tabname := substr(v_errm, dot1loc + 1, dot2loc - dot1loc - 1);
                    c_colname := substr(v_errm, dot2loc + 1, instr(v_errm, ')') - dot2loc - 1);
                
                    pk_alert_exceptions.raise_error(error_name_in => 'COLUMN-CANNOT-BE-NULL',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => c_owner,
                                                    name2_in      => 'TABLE_NAME',
                                                    value2_in     => c_tabname,
                                                    name3_in      => 'COLUMN_NAME',
                                                    value3_in     => c_colname);
                END;
            END IF;
    END increment_onecol;

    -- Delete functionality

    PROCEDURE del
    (
        id_drug_presc_det_in IN drug_presc_det.id_drug_presc_det%TYPE,
        handle_error_in      IN BOOLEAN := TRUE,
        rows_out             OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_presc_det
         WHERE id_drug_presc_det = id_drug_presc_det_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del;

    PROCEDURE del
    (
        id_drug_presc_det_in IN drug_presc_det.id_drug_presc_det%TYPE,
        handle_error_in      IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
    
        del(id_drug_presc_det_in => id_drug_presc_det_in, handle_error_in => handle_error_in, rows_out => rows_out);
    
    END del;

    -- Delete all rows for primary key column ID_DRUG_PRESC_DET
    PROCEDURE del_id_drug_presc_det
    (
        id_drug_presc_det_in IN drug_presc_det.id_drug_presc_det%TYPE,
        handle_error_in      IN BOOLEAN := TRUE,
        rows_out             OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_presc_det
         WHERE id_drug_presc_det = id_drug_presc_det_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_id_drug_presc_det;

    -- Delete all rows for primary key column ID_DRUG_PRESC_DET
    PROCEDURE del_id_drug_presc_det
    (
        id_drug_presc_det_in IN drug_presc_det.id_drug_presc_det%TYPE,
        handle_error_in      IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_id_drug_presc_det(id_drug_presc_det_in => id_drug_presc_det_in,
                              handle_error_in      => handle_error_in,
                              rows_out             => rows_out);
    END del_id_drug_presc_det;

    -- Delete for unique value of DPD_PDIR_IDX
    PROCEDURE del_dpd_pdir_idx
    (
        id_presc_directions_in IN drug_presc_det.id_presc_directions%TYPE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_presc_det
         WHERE id_presc_directions = id_presc_directions_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_dpd_pdir_idx;

    -- Delete for unique value of DPD_IDDPD_IDDP_IDD_FLGST_IDX
    -- Delete for unique value of DPD_PDIR_IDX
    PROCEDURE del_dpd_pdir_idx
    (
        id_presc_directions_in IN drug_presc_det.id_presc_directions%TYPE,
        handle_error_in        IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_dpd_pdir_idx(id_presc_directions_in => id_presc_directions_in,
                         handle_error_in        => handle_error_in,
                         rows_out               => rows_out);
    END del_dpd_pdir_idx;

    PROCEDURE del_dpd_cc_fk
    (
        id_cdr_call_in  IN drug_presc_det.id_cdr_call%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_presc_det
         WHERE id_cdr_call = del_dpd_cc_fk.id_cdr_call_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_dpd_cc_fk;

    PROCEDURE del_dpd_cc_fk
    (
        id_cdr_call_in  IN drug_presc_det.id_cdr_call%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_dpd_cc_fk(id_cdr_call_in => id_cdr_call_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_dpd_cc_fk;

    PROCEDURE del_dpd_id_fk
    (
        id_irregular_directions_in IN drug_presc_det.id_irregular_directions%TYPE,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_presc_det
         WHERE id_irregular_directions = del_dpd_id_fk.id_irregular_directions_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_dpd_id_fk;

    PROCEDURE del_dpd_id_fk
    (
        id_irregular_directions_in IN drug_presc_det.id_irregular_directions%TYPE,
        handle_error_in            IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_dpd_id_fk(id_irregular_directions_in => id_irregular_directions_in,
                      handle_error_in            => handle_error_in,
                      rows_out                   => rows_out);
    END del_dpd_id_fk;

    PROCEDURE del_dpd_ipml_fk
    (
        id_pat_medication_list_in IN drug_presc_det.id_pat_medication_list%TYPE,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_presc_det
         WHERE id_pat_medication_list = del_dpd_ipml_fk.id_pat_medication_list_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_dpd_ipml_fk;

    PROCEDURE del_dpd_ipml_fk
    (
        id_pat_medication_list_in IN drug_presc_det.id_pat_medication_list%TYPE,
        handle_error_in           IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_dpd_ipml_fk(id_pat_medication_list_in => id_pat_medication_list_in,
                        handle_error_in           => handle_error_in,
                        rows_out                  => rows_out);
    END del_dpd_ipml_fk;

    PROCEDURE del_dpd_jint_idj_fk
    (
        id_justification_in IN drug_presc_det.id_justification%TYPE,
        vers_in             IN drug_presc_det.vers%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_presc_det
         WHERE id_justification = del_dpd_jint_idj_fk.id_justification_in
           AND vers = del_dpd_jint_idj_fk.vers_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_dpd_jint_idj_fk;

    PROCEDURE del_dpd_jint_idj_fk
    (
        id_justification_in IN drug_presc_det.id_justification%TYPE,
        vers_in             IN drug_presc_det.vers%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_dpd_jint_idj_fk(id_justification_in => id_justification_in,
                            vers_in             => vers_in,
                            handle_error_in     => handle_error_in,
                            rows_out            => rows_out);
    END del_dpd_jint_idj_fk;

    PROCEDURE del_dpd_jrs_fk
    (
        id_justify_reason_in IN drug_presc_det.id_justify_reason%TYPE,
        handle_error_in      IN BOOLEAN := TRUE,
        rows_out             OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_presc_det
         WHERE id_justify_reason = del_dpd_jrs_fk.id_justify_reason_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_dpd_jrs_fk;

    PROCEDURE del_dpd_jrs_fk
    (
        id_justify_reason_in IN drug_presc_det.id_justify_reason%TYPE,
        handle_error_in      IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_dpd_jrs_fk(id_justify_reason_in => id_justify_reason_in,
                       handle_error_in      => handle_error_in,
                       rows_out             => rows_out);
    END del_dpd_jrs_fk;

    PROCEDURE del_dpd_med_int_id_fk
    (
        id_drug_in      IN drug_presc_det.id_drug%TYPE,
        vers_in         IN drug_presc_det.vers%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_presc_det
         WHERE id_drug = del_dpd_med_int_id_fk.id_drug_in
           AND vers = del_dpd_med_int_id_fk.vers_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_dpd_med_int_id_fk;

    PROCEDURE del_dpd_med_int_id_fk
    (
        id_drug_in      IN drug_presc_det.id_drug%TYPE,
        vers_in         IN drug_presc_det.vers%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_dpd_med_int_id_fk(id_drug_in      => id_drug_in,
                              vers_in         => vers_in,
                              handle_error_in => handle_error_in,
                              rows_out        => rows_out);
    END del_dpd_med_int_id_fk;

    PROCEDURE del_dpd_pdir_fk
    (
        id_presc_directions_in IN drug_presc_det.id_presc_directions%TYPE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_presc_det
         WHERE id_presc_directions = del_dpd_pdir_fk.id_presc_directions_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_dpd_pdir_fk;

    PROCEDURE del_dpd_pdir_fk
    (
        id_presc_directions_in IN drug_presc_det.id_presc_directions%TYPE,
        handle_error_in        IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_dpd_pdir_fk(id_presc_directions_in => id_presc_directions_in,
                        handle_error_in        => handle_error_in,
                        rows_out               => rows_out);
    END del_dpd_pdir_fk;

    PROCEDURE del_dpd_rint_idr_fk
    (
        route_id_in     IN drug_presc_det.route_id%TYPE,
        vers_in         IN drug_presc_det.vers%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_presc_det
         WHERE route_id = del_dpd_rint_idr_fk.route_id_in
           AND vers = del_dpd_rint_idr_fk.vers_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_dpd_rint_idr_fk;

    PROCEDURE del_dpd_rint_idr_fk
    (
        route_id_in     IN drug_presc_det.route_id%TYPE,
        vers_in         IN drug_presc_det.vers%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_dpd_rint_idr_fk(route_id_in     => route_id_in,
                            vers_in         => vers_in,
                            handle_error_in => handle_error_in,
                            rows_out        => rows_out);
    END del_dpd_rint_idr_fk;

    PROCEDURE del_dpdt_dpn_fk
    (
        id_drug_prescription_in IN drug_presc_det.id_drug_prescription%TYPE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_presc_det
         WHERE id_drug_prescription = del_dpdt_dpn_fk.id_drug_prescription_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_dpdt_dpn_fk;

    PROCEDURE del_dpdt_dpn_fk
    (
        id_drug_prescription_in IN drug_presc_det.id_drug_prescription%TYPE,
        handle_error_in         IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_dpdt_dpn_fk(id_drug_prescription_in => id_drug_prescription_in,
                        handle_error_in         => handle_error_in,
                        rows_out                => rows_out);
    END del_dpdt_dpn_fk;

    PROCEDURE del_dpdt_drdp_fk
    (
        id_drug_despachos_in IN drug_presc_det.id_drug_despachos%TYPE,
        handle_error_in      IN BOOLEAN := TRUE,
        rows_out             OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_presc_det
         WHERE id_drug_despachos = del_dpdt_drdp_fk.id_drug_despachos_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_dpdt_drdp_fk;

    PROCEDURE del_dpdt_drdp_fk
    (
        id_drug_despachos_in IN drug_presc_det.id_drug_despachos%TYPE,
        handle_error_in      IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_dpdt_drdp_fk(id_drug_despachos_in => id_drug_despachos_in,
                         handle_error_in      => handle_error_in,
                         rows_out             => rows_out);
    END del_dpdt_drdp_fk;

    PROCEDURE del_dpdt_pist_fk
    (
        id_presc_instr_det_in IN drug_presc_det.id_presc_instr_det%TYPE,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_presc_det
         WHERE id_presc_instr_det = del_dpdt_pist_fk.id_presc_instr_det_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_dpdt_pist_fk;

    PROCEDURE del_dpdt_pist_fk
    (
        id_presc_instr_det_in IN drug_presc_det.id_presc_instr_det%TYPE,
        handle_error_in       IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_dpdt_pist_fk(id_presc_instr_det_in => id_presc_instr_det_in,
                         handle_error_in       => handle_error_in,
                         rows_out              => rows_out);
    END del_dpdt_pist_fk;

    PROCEDURE del_dpdt_prof_fk
    (
        id_prof_cancel_in IN drug_presc_det.id_prof_cancel%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_presc_det
         WHERE id_prof_cancel = del_dpdt_prof_fk.id_prof_cancel_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_dpdt_prof_fk;

    PROCEDURE del_dpdt_prof_fk
    (
        id_prof_cancel_in IN drug_presc_det.id_prof_cancel%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_dpdt_prof_fk(id_prof_cancel_in => id_prof_cancel_in,
                         handle_error_in   => handle_error_in,
                         rows_out          => rows_out);
    END del_dpdt_prof_fk;

    PROCEDURE del_dpdt_tdetd_fk
    (
        id_task_dependency_in IN drug_presc_det.id_task_dependency%TYPE,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_presc_det
         WHERE id_task_dependency = del_dpdt_tdetd_fk.id_task_dependency_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_dpdt_tdetd_fk;

    PROCEDURE del_dpdt_tdetd_fk
    (
        id_task_dependency_in IN drug_presc_det.id_task_dependency%TYPE,
        handle_error_in       IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_dpdt_tdetd_fk(id_task_dependency_in => id_task_dependency_in,
                          handle_error_in       => handle_error_in,
                          rows_out              => rows_out);
    END del_dpdt_tdetd_fk;

    PROCEDURE del_dpdt_um_bolus_fk
    (
        id_unit_measure_bolus_in IN drug_presc_det.id_unit_measure_bolus%TYPE,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_presc_det
         WHERE id_unit_measure_bolus = del_dpdt_um_bolus_fk.id_unit_measure_bolus_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_dpdt_um_bolus_fk;

    PROCEDURE del_dpdt_um_bolus_fk
    (
        id_unit_measure_bolus_in IN drug_presc_det.id_unit_measure_bolus%TYPE,
        handle_error_in          IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_dpdt_um_bolus_fk(id_unit_measure_bolus_in => id_unit_measure_bolus_in,
                             handle_error_in          => handle_error_in,
                             rows_out                 => rows_out);
    END del_dpdt_um_bolus_fk;

    PROCEDURE del_dpdt_um_drip
    (
        id_unit_measure_drip_in IN drug_presc_det.id_unit_measure_drip%TYPE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_presc_det
         WHERE id_unit_measure_drip = del_dpdt_um_drip.id_unit_measure_drip_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_dpdt_um_drip;

    PROCEDURE del_dpdt_um_drip
    (
        id_unit_measure_drip_in IN drug_presc_det.id_unit_measure_drip%TYPE,
        handle_error_in         IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_dpdt_um_drip(id_unit_measure_drip_in => id_unit_measure_drip_in,
                         handle_error_in         => handle_error_in,
                         rows_out                => rows_out);
    END del_dpdt_um_drip;

    PROCEDURE del_dpdt_um_fk
    (
        id_unit_measure_in IN drug_presc_det.id_unit_measure%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_presc_det
         WHERE id_unit_measure = del_dpdt_um_fk.id_unit_measure_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_dpdt_um_fk;

    PROCEDURE del_dpdt_um_fk
    (
        id_unit_measure_in IN drug_presc_det.id_unit_measure%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_dpdt_um_fk(id_unit_measure_in => id_unit_measure_in,
                       handle_error_in    => handle_error_in,
                       rows_out           => rows_out);
    END del_dpdt_um_fk;

    PROCEDURE del_dpd_ume_disp_fk
    (
        unit_measure_dispense_in IN drug_presc_det.unit_measure_dispense%TYPE,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM drug_presc_det
         WHERE unit_measure_dispense = del_dpd_ume_disp_fk.unit_measure_dispense_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_dpd_ume_disp_fk;

    PROCEDURE del_dpd_ume_disp_fk
    (
        unit_measure_dispense_in IN drug_presc_det.unit_measure_dispense%TYPE,
        handle_error_in          IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_dpd_ume_disp_fk(unit_measure_dispense_in => unit_measure_dispense_in,
                            handle_error_in          => handle_error_in,
                            rows_out                 => rows_out);
    END del_dpd_ume_disp_fk;

    -- Deletions using dynamic SQL
    FUNCTION dyndelstr(where_in IN VARCHAR2) RETURN VARCHAR2 IS
    BEGIN
        IF where_in IS NULL
        THEN
            RETURN 'DELETE FROM DRUG_PRESC_DET';
        ELSE
            RETURN 'DELETE FROM DRUG_PRESC_DET WHERE ' || where_in;
        END IF;
    END dyndelstr;

    FUNCTION dyncoldelstr(colname_in IN all_tab_columns.column_name%TYPE) RETURN VARCHAR2 IS
    BEGIN
        RETURN dyndelstr(colname_in || ' = :value');
    END;

    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyndelstr(where_clause_in);
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by;

    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyndelstr(where_clause_in) ||
                          ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyncoldelstr(colname_in)
            USING colvalue_in;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyncoldelstr(colname_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING IN colvalue_in, OUT rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyncoldelstr(colname_in)
            USING colvalue_in;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyncoldelstr(colname_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING IN colvalue_in, OUT rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyncoldelstr(colname_in)
            USING colvalue_in;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyncoldelstr(colname_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING IN colvalue_in, OUT rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyncoldelstr(colname_in)
            USING colvalue_in;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyncoldelstr(colname_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING IN colvalue_in, OUT rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'DRUG_PRESC_DET');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'DRUG_PRESC_DET');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(drug_presc_det_inout IN OUT drug_presc_det%ROWTYPE) IS
    BEGIN
        drug_presc_det_inout.id_drug_presc_det       := NULL;
        drug_presc_det_inout.id_drug_prescription    := NULL;
        drug_presc_det_inout.notes                   := NULL;
        drug_presc_det_inout.flg_take_type           := NULL;
        drug_presc_det_inout.qty                     := NULL;
        drug_presc_det_inout.rate                    := NULL;
        drug_presc_det_inout.flg_status              := NULL;
        drug_presc_det_inout.id_prof_cancel          := NULL;
        drug_presc_det_inout.notes_cancel            := NULL;
        drug_presc_det_inout.notes_justif            := NULL;
        drug_presc_det_inout.interval                := NULL;
        drug_presc_det_inout.takes                   := NULL;
        drug_presc_det_inout.dosage                  := NULL;
        drug_presc_det_inout.flg_ci                  := 'N';
        drug_presc_det_inout.flg_cheaper             := 'N';
        drug_presc_det_inout.flg_justif              := 'N';
        drug_presc_det_inout.flg_attention           := NULL;
        drug_presc_det_inout.flg_attention_print     := NULL;
        drug_presc_det_inout.id_drug_despachos       := NULL;
        drug_presc_det_inout.dosage_description      := NULL;
        drug_presc_det_inout.value_bolus             := NULL;
        drug_presc_det_inout.value_drip              := NULL;
        drug_presc_det_inout.id_unit_measure         := NULL;
        drug_presc_det_inout.id_unit_measure_bolus   := NULL;
        drug_presc_det_inout.id_unit_measure_drip    := NULL;
        drug_presc_det_inout.dt_begin_tstz           := NULL;
        drug_presc_det_inout.dt_end_tstz             := NULL;
        drug_presc_det_inout.dt_cancel_tstz          := NULL;
        drug_presc_det_inout.dt_end_presc_tstz       := NULL;
        drug_presc_det_inout.dt_end_bottle_tstz      := NULL;
        drug_presc_det_inout.dt_order                := NULL;
        drug_presc_det_inout.id_prof_order           := NULL;
        drug_presc_det_inout.id_order_type           := NULL;
        drug_presc_det_inout.flg_co_sign             := 'N';
        drug_presc_det_inout.dt_co_sign              := NULL;
        drug_presc_det_inout.notes_co_sign           := NULL;
        drug_presc_det_inout.id_prof_co_sign         := NULL;
        drug_presc_det_inout.duration                := NULL;
        drug_presc_det_inout.id_unit_measure_dur     := NULL;
        drug_presc_det_inout.frequency               := NULL;
        drug_presc_det_inout.id_unit_measure_freq    := NULL;
        drug_presc_det_inout.dt_start_presc_tstz     := NULL;
        drug_presc_det_inout.refill                  := NULL;
        drug_presc_det_inout.qty_inst                := NULL;
        drug_presc_det_inout.unit_measure_inst       := NULL;
        drug_presc_det_inout.id_pat_medication_list  := NULL;
        drug_presc_det_inout.dt_last_change          := NULL;
        drug_presc_det_inout.route_id                := NULL;
        drug_presc_det_inout.id_justification        := NULL;
        drug_presc_det_inout.vers                    := NULL;
        drug_presc_det_inout.flg_interac_med         := 'N';
        drug_presc_det_inout.flg_interac_allergy     := 'N';
        drug_presc_det_inout.id_drug                 := NULL;
        drug_presc_det_inout.id_other_product        := NULL;
        drug_presc_det_inout.desc_other_product      := NULL;
        drug_presc_det_inout.dt_hold_begin           := NULL;
        drug_presc_det_inout.dt_hold_end             := NULL;
        drug_presc_det_inout.flg_modified            := 'N';
        drug_presc_det_inout.status_flg              := NULL;
        drug_presc_det_inout.status_icon             := NULL;
        drug_presc_det_inout.status_msg              := NULL;
        drug_presc_det_inout.status_str              := NULL;
        drug_presc_det_inout.dispense                := NULL;
        drug_presc_det_inout.unit_measure_dispense   := NULL;
        drug_presc_det_inout.flg_dosage_check        := NULL;
        drug_presc_det_inout.id_combination_compound := NULL;
        drug_presc_det_inout.id_irregular_directions := NULL;
        drug_presc_det_inout.create_user             := NULL;
        drug_presc_det_inout.create_time             := NULL;
        drug_presc_det_inout.create_institution      := NULL;
        drug_presc_det_inout.update_user             := NULL;
        drug_presc_det_inout.update_time             := NULL;
        drug_presc_det_inout.update_institution      := NULL;
        drug_presc_det_inout.flg_mix_instr           := NULL;
        drug_presc_det_inout.mix_instr               := NULL;
        drug_presc_det_inout.id_presc_instr_det      := NULL;
        drug_presc_det_inout.num_schemes             := NULL;
        drug_presc_det_inout.id_justify_reason       := NULL;
        drug_presc_det_inout.justify_reason          := NULL;
        drug_presc_det_inout.id_presc_directions     := NULL;
        drug_presc_det_inout.flg_free_text           := NULL;
        drug_presc_det_inout.id_task_dependency      := NULL;
        drug_presc_det_inout.flg_req_origin_module   := 'D';
        drug_presc_det_inout.take_in_case            := NULL;
        drug_presc_det_inout.id_vacc_manufacturer    := NULL;
        drug_presc_det_inout.code_mvx                := NULL;
        drug_presc_det_inout.id_cdr_call             := NULL;
    END initrec;

    FUNCTION initrec RETURN drug_presc_det%ROWTYPE IS
        l_drug_presc_det drug_presc_det%ROWTYPE;
    BEGIN
        l_drug_presc_det.flg_ci                := 'N';
        l_drug_presc_det.flg_cheaper           := 'N';
        l_drug_presc_det.flg_justif            := 'N';
        l_drug_presc_det.flg_co_sign           := 'N';
        l_drug_presc_det.flg_interac_med       := 'N';
        l_drug_presc_det.flg_interac_allergy   := 'N';
        l_drug_presc_det.flg_modified          := 'N';
        l_drug_presc_det.flg_req_origin_module := 'D';
        RETURN l_drug_presc_det;
    END initrec;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN drug_presc_det_tc IS
        data drug_presc_det_tc;
    BEGIN
        SELECT * BULK COLLECT
          INTO data
          FROM drug_presc_det
         WHERE ROWID IN (SELECT /*+opt_estimate(table,t,scale_rows=0.0000001))*/
                          *
                           FROM TABLE(rows_in) t);
        RETURN data;
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'get_data_rowid');
    END get_data_rowid;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN drug_presc_det_tc IS
        PRAGMA AUTONOMOUS_TRANSACTION;
        data drug_presc_det_tc;
    BEGIN
        data := get_data_rowid(rows_in);
        COMMIT;
        RETURN data;
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'get_data_rowid');
            ROLLBACK;
    END get_data_rowid_pat;

BEGIN
    NULL;
END ts_drug_presc_det;
/
