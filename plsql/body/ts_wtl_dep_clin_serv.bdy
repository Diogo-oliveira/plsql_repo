/*-- Last Change Revision: $Rev: 1861243 $*/
/*-- Last Change by: $Author: pedro.henriques $*/
/*-- Date of last change: $Date: 2018-08-30 11:38:02 +0100 (qui, 30 ago 2018) $*/
CREATE OR REPLACE PACKAGE ts_wtl_dep_clin_serv
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2018-08-24 14:56:26
| Created By: ALERT
*/
 IS

    -- Collection of %ROWTYPE records based on wtl_dep_clin_serv
    TYPE wtl_dep_clin_serv_tc IS TABLE OF wtl_dep_clin_serv%ROWTYPE INDEX BY BINARY_INTEGER;
    TYPE wtl_dep_clin_serv_ntt IS TABLE OF wtl_dep_clin_serv%ROWTYPE;
    TYPE wtl_dep_clin_serv_vat IS VARRAY(100) OF wtl_dep_clin_serv%ROWTYPE;

    -- Column Collection based on column ID_WTL_DCS
    TYPE id_wtl_dcs_cc IS TABLE OF wtl_dep_clin_serv.id_wtl_dcs%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_DEP_CLIN_SERV
    TYPE id_dep_clin_serv_cc IS TABLE OF wtl_dep_clin_serv.id_dep_clin_serv%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_WAITING_LIST
    TYPE id_waiting_list_cc IS TABLE OF wtl_dep_clin_serv.id_waiting_list%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_EPISODE
    TYPE id_episode_cc IS TABLE OF wtl_dep_clin_serv.id_episode%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column FLG_TYPE
    TYPE flg_type_cc IS TABLE OF wtl_dep_clin_serv.flg_type%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column FLG_STATUS
    TYPE flg_status_cc IS TABLE OF wtl_dep_clin_serv.flg_status%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_USER
    TYPE create_user_cc IS TABLE OF wtl_dep_clin_serv.create_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_TIME
    TYPE create_time_cc IS TABLE OF wtl_dep_clin_serv.create_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column CREATE_INSTITUTION
    TYPE create_institution_cc IS TABLE OF wtl_dep_clin_serv.create_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_USER
    TYPE update_user_cc IS TABLE OF wtl_dep_clin_serv.update_user%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_TIME
    TYPE update_time_cc IS TABLE OF wtl_dep_clin_serv.update_time%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column UPDATE_INSTITUTION
    TYPE update_institution_cc IS TABLE OF wtl_dep_clin_serv.update_institution%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_PROF_SPECIALITY
    TYPE id_prof_speciality_cc IS TABLE OF wtl_dep_clin_serv.id_prof_speciality%TYPE INDEX BY BINARY_INTEGER;
    -- Column Collection based on column ID_WARD
    TYPE id_ward_cc IS TABLE OF wtl_dep_clin_serv.id_ward%TYPE INDEX BY BINARY_INTEGER;

    -- Insert one row, providing primary key if present (with rows_out)
    PROCEDURE ins
    (
        id_wtl_dcs_in         IN wtl_dep_clin_serv.id_wtl_dcs%TYPE,
        id_dep_clin_serv_in   IN wtl_dep_clin_serv.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_waiting_list_in    IN wtl_dep_clin_serv.id_waiting_list%TYPE DEFAULT NULL,
        id_episode_in         IN wtl_dep_clin_serv.id_episode%TYPE DEFAULT NULL,
        flg_type_in           IN wtl_dep_clin_serv.flg_type%TYPE DEFAULT NULL,
        flg_status_in         IN wtl_dep_clin_serv.flg_status%TYPE DEFAULT NULL,
        create_user_in        IN wtl_dep_clin_serv.create_user%TYPE DEFAULT NULL,
        create_time_in        IN wtl_dep_clin_serv.create_time%TYPE DEFAULT NULL,
        create_institution_in IN wtl_dep_clin_serv.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN wtl_dep_clin_serv.update_user%TYPE DEFAULT NULL,
        update_time_in        IN wtl_dep_clin_serv.update_time%TYPE DEFAULT NULL,
        update_institution_in IN wtl_dep_clin_serv.update_institution%TYPE DEFAULT NULL,
        id_prof_speciality_in IN wtl_dep_clin_serv.id_prof_speciality%TYPE DEFAULT NULL,
        id_ward_in            IN wtl_dep_clin_serv.id_ward%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    );

    -- Insert one row, providing primary key if present (without rows_out)
    PROCEDURE ins
    (
        id_wtl_dcs_in         IN wtl_dep_clin_serv.id_wtl_dcs%TYPE,
        id_dep_clin_serv_in   IN wtl_dep_clin_serv.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_waiting_list_in    IN wtl_dep_clin_serv.id_waiting_list%TYPE DEFAULT NULL,
        id_episode_in         IN wtl_dep_clin_serv.id_episode%TYPE DEFAULT NULL,
        flg_type_in           IN wtl_dep_clin_serv.flg_type%TYPE DEFAULT NULL,
        flg_status_in         IN wtl_dep_clin_serv.flg_status%TYPE DEFAULT NULL,
        create_user_in        IN wtl_dep_clin_serv.create_user%TYPE DEFAULT NULL,
        create_time_in        IN wtl_dep_clin_serv.create_time%TYPE DEFAULT NULL,
        create_institution_in IN wtl_dep_clin_serv.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN wtl_dep_clin_serv.update_user%TYPE DEFAULT NULL,
        update_time_in        IN wtl_dep_clin_serv.update_time%TYPE DEFAULT NULL,
        update_institution_in IN wtl_dep_clin_serv.update_institution%TYPE DEFAULT NULL,
        id_prof_speciality_in IN wtl_dep_clin_serv.id_prof_speciality%TYPE DEFAULT NULL,
        id_ward_in            IN wtl_dep_clin_serv.id_ward%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN wtl_dep_clin_serv%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert a row based on a record
    -- Specify whether or not a primary key value should be generated
    PROCEDURE ins
    (
        rec_in          IN wtl_dep_clin_serv%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN wtl_dep_clin_serv_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN wtl_dep_clin_serv_tc,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Return next primary key value using the named sequence
    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN wtl_dep_clin_serv.id_wtl_dcs%TYPE;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_dep_clin_serv_in   IN wtl_dep_clin_serv.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_waiting_list_in    IN wtl_dep_clin_serv.id_waiting_list%TYPE DEFAULT NULL,
        id_episode_in         IN wtl_dep_clin_serv.id_episode%TYPE DEFAULT NULL,
        flg_type_in           IN wtl_dep_clin_serv.flg_type%TYPE DEFAULT NULL,
        flg_status_in         IN wtl_dep_clin_serv.flg_status%TYPE DEFAULT NULL,
        create_user_in        IN wtl_dep_clin_serv.create_user%TYPE DEFAULT NULL,
        create_time_in        IN wtl_dep_clin_serv.create_time%TYPE DEFAULT NULL,
        create_institution_in IN wtl_dep_clin_serv.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN wtl_dep_clin_serv.update_user%TYPE DEFAULT NULL,
        update_time_in        IN wtl_dep_clin_serv.update_time%TYPE DEFAULT NULL,
        update_institution_in IN wtl_dep_clin_serv.update_institution%TYPE DEFAULT NULL,
        id_prof_speciality_in IN wtl_dep_clin_serv.id_prof_speciality%TYPE DEFAULT NULL,
        id_ward_in            IN wtl_dep_clin_serv.id_ward%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_dep_clin_serv_in   IN wtl_dep_clin_serv.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_waiting_list_in    IN wtl_dep_clin_serv.id_waiting_list%TYPE DEFAULT NULL,
        id_episode_in         IN wtl_dep_clin_serv.id_episode%TYPE DEFAULT NULL,
        flg_type_in           IN wtl_dep_clin_serv.flg_type%TYPE DEFAULT NULL,
        flg_status_in         IN wtl_dep_clin_serv.flg_status%TYPE DEFAULT NULL,
        create_user_in        IN wtl_dep_clin_serv.create_user%TYPE DEFAULT NULL,
        create_time_in        IN wtl_dep_clin_serv.create_time%TYPE DEFAULT NULL,
        create_institution_in IN wtl_dep_clin_serv.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN wtl_dep_clin_serv.update_user%TYPE DEFAULT NULL,
        update_time_in        IN wtl_dep_clin_serv.update_time%TYPE DEFAULT NULL,
        update_institution_in IN wtl_dep_clin_serv.update_institution%TYPE DEFAULT NULL,
        id_prof_speciality_in IN wtl_dep_clin_serv.id_prof_speciality%TYPE DEFAULT NULL,
        id_ward_in            IN wtl_dep_clin_serv.id_ward%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_dep_clin_serv_in   IN wtl_dep_clin_serv.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_waiting_list_in    IN wtl_dep_clin_serv.id_waiting_list%TYPE DEFAULT NULL,
        id_episode_in         IN wtl_dep_clin_serv.id_episode%TYPE DEFAULT NULL,
        flg_type_in           IN wtl_dep_clin_serv.flg_type%TYPE DEFAULT NULL,
        flg_status_in         IN wtl_dep_clin_serv.flg_status%TYPE DEFAULT NULL,
        create_user_in        IN wtl_dep_clin_serv.create_user%TYPE DEFAULT NULL,
        create_time_in        IN wtl_dep_clin_serv.create_time%TYPE DEFAULT NULL,
        create_institution_in IN wtl_dep_clin_serv.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN wtl_dep_clin_serv.update_user%TYPE DEFAULT NULL,
        update_time_in        IN wtl_dep_clin_serv.update_time%TYPE DEFAULT NULL,
        update_institution_in IN wtl_dep_clin_serv.update_institution%TYPE DEFAULT NULL,
        id_prof_speciality_in IN wtl_dep_clin_serv.id_prof_speciality%TYPE DEFAULT NULL,
        id_ward_in            IN wtl_dep_clin_serv.id_ward%TYPE DEFAULT NULL,
        id_wtl_dcs_out        IN OUT wtl_dep_clin_serv.id_wtl_dcs%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_dep_clin_serv_in   IN wtl_dep_clin_serv.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_waiting_list_in    IN wtl_dep_clin_serv.id_waiting_list%TYPE DEFAULT NULL,
        id_episode_in         IN wtl_dep_clin_serv.id_episode%TYPE DEFAULT NULL,
        flg_type_in           IN wtl_dep_clin_serv.flg_type%TYPE DEFAULT NULL,
        flg_status_in         IN wtl_dep_clin_serv.flg_status%TYPE DEFAULT NULL,
        create_user_in        IN wtl_dep_clin_serv.create_user%TYPE DEFAULT NULL,
        create_time_in        IN wtl_dep_clin_serv.create_time%TYPE DEFAULT NULL,
        create_institution_in IN wtl_dep_clin_serv.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN wtl_dep_clin_serv.update_user%TYPE DEFAULT NULL,
        update_time_in        IN wtl_dep_clin_serv.update_time%TYPE DEFAULT NULL,
        update_institution_in IN wtl_dep_clin_serv.update_institution%TYPE DEFAULT NULL,
        id_prof_speciality_in IN wtl_dep_clin_serv.id_prof_speciality%TYPE DEFAULT NULL,
        id_ward_in            IN wtl_dep_clin_serv.id_ward%TYPE DEFAULT NULL,
        id_wtl_dcs_out        IN OUT wtl_dep_clin_serv.id_wtl_dcs%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_dep_clin_serv_in   IN wtl_dep_clin_serv.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_waiting_list_in    IN wtl_dep_clin_serv.id_waiting_list%TYPE DEFAULT NULL,
        id_episode_in         IN wtl_dep_clin_serv.id_episode%TYPE DEFAULT NULL,
        flg_type_in           IN wtl_dep_clin_serv.flg_type%TYPE DEFAULT NULL,
        flg_status_in         IN wtl_dep_clin_serv.flg_status%TYPE DEFAULT NULL,
        create_user_in        IN wtl_dep_clin_serv.create_user%TYPE DEFAULT NULL,
        create_time_in        IN wtl_dep_clin_serv.create_time%TYPE DEFAULT NULL,
        create_institution_in IN wtl_dep_clin_serv.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN wtl_dep_clin_serv.update_user%TYPE DEFAULT NULL,
        update_time_in        IN wtl_dep_clin_serv.update_time%TYPE DEFAULT NULL,
        update_institution_in IN wtl_dep_clin_serv.update_institution%TYPE DEFAULT NULL,
        id_prof_speciality_in IN wtl_dep_clin_serv.id_prof_speciality%TYPE DEFAULT NULL,
        id_ward_in            IN wtl_dep_clin_serv.id_ward%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN wtl_dep_clin_serv.id_wtl_dcs%TYPE;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_dep_clin_serv_in   IN wtl_dep_clin_serv.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_waiting_list_in    IN wtl_dep_clin_serv.id_waiting_list%TYPE DEFAULT NULL,
        id_episode_in         IN wtl_dep_clin_serv.id_episode%TYPE DEFAULT NULL,
        flg_type_in           IN wtl_dep_clin_serv.flg_type%TYPE DEFAULT NULL,
        flg_status_in         IN wtl_dep_clin_serv.flg_status%TYPE DEFAULT NULL,
        create_user_in        IN wtl_dep_clin_serv.create_user%TYPE DEFAULT NULL,
        create_time_in        IN wtl_dep_clin_serv.create_time%TYPE DEFAULT NULL,
        create_institution_in IN wtl_dep_clin_serv.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN wtl_dep_clin_serv.update_user%TYPE DEFAULT NULL,
        update_time_in        IN wtl_dep_clin_serv.update_time%TYPE DEFAULT NULL,
        update_institution_in IN wtl_dep_clin_serv.update_institution%TYPE DEFAULT NULL,
        id_prof_speciality_in IN wtl_dep_clin_serv.id_prof_speciality%TYPE DEFAULT NULL,
        id_ward_in            IN wtl_dep_clin_serv.id_ward%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN wtl_dep_clin_serv.id_wtl_dcs%TYPE;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_wtl_dcs_in          IN wtl_dep_clin_serv.id_wtl_dcs%TYPE,
        id_dep_clin_serv_in    IN wtl_dep_clin_serv.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_dep_clin_serv_nin   IN BOOLEAN := TRUE,
        id_waiting_list_in     IN wtl_dep_clin_serv.id_waiting_list%TYPE DEFAULT NULL,
        id_waiting_list_nin    IN BOOLEAN := TRUE,
        id_episode_in          IN wtl_dep_clin_serv.id_episode%TYPE DEFAULT NULL,
        id_episode_nin         IN BOOLEAN := TRUE,
        flg_type_in            IN wtl_dep_clin_serv.flg_type%TYPE DEFAULT NULL,
        flg_type_nin           IN BOOLEAN := TRUE,
        flg_status_in          IN wtl_dep_clin_serv.flg_status%TYPE DEFAULT NULL,
        flg_status_nin         IN BOOLEAN := TRUE,
        create_user_in         IN wtl_dep_clin_serv.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN wtl_dep_clin_serv.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN wtl_dep_clin_serv.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN wtl_dep_clin_serv.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN wtl_dep_clin_serv.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN wtl_dep_clin_serv.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        id_prof_speciality_in  IN wtl_dep_clin_serv.id_prof_speciality%TYPE DEFAULT NULL,
        id_prof_speciality_nin IN BOOLEAN := TRUE,
        id_ward_in             IN wtl_dep_clin_serv.id_ward%TYPE DEFAULT NULL,
        id_ward_nin            IN BOOLEAN := TRUE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               IN OUT table_varchar
    );

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_wtl_dcs_in          IN wtl_dep_clin_serv.id_wtl_dcs%TYPE,
        id_dep_clin_serv_in    IN wtl_dep_clin_serv.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_dep_clin_serv_nin   IN BOOLEAN := TRUE,
        id_waiting_list_in     IN wtl_dep_clin_serv.id_waiting_list%TYPE DEFAULT NULL,
        id_waiting_list_nin    IN BOOLEAN := TRUE,
        id_episode_in          IN wtl_dep_clin_serv.id_episode%TYPE DEFAULT NULL,
        id_episode_nin         IN BOOLEAN := TRUE,
        flg_type_in            IN wtl_dep_clin_serv.flg_type%TYPE DEFAULT NULL,
        flg_type_nin           IN BOOLEAN := TRUE,
        flg_status_in          IN wtl_dep_clin_serv.flg_status%TYPE DEFAULT NULL,
        flg_status_nin         IN BOOLEAN := TRUE,
        create_user_in         IN wtl_dep_clin_serv.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN wtl_dep_clin_serv.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN wtl_dep_clin_serv.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN wtl_dep_clin_serv.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN wtl_dep_clin_serv.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN wtl_dep_clin_serv.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        id_prof_speciality_in  IN wtl_dep_clin_serv.id_prof_speciality%TYPE DEFAULT NULL,
        id_prof_speciality_nin IN BOOLEAN := TRUE,
        id_ward_in             IN wtl_dep_clin_serv.id_ward%TYPE DEFAULT NULL,
        id_ward_nin            IN BOOLEAN := TRUE,
        handle_error_in        IN BOOLEAN := TRUE
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_dep_clin_serv_in    IN wtl_dep_clin_serv.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_dep_clin_serv_nin   IN BOOLEAN := TRUE,
        id_waiting_list_in     IN wtl_dep_clin_serv.id_waiting_list%TYPE DEFAULT NULL,
        id_waiting_list_nin    IN BOOLEAN := TRUE,
        id_episode_in          IN wtl_dep_clin_serv.id_episode%TYPE DEFAULT NULL,
        id_episode_nin         IN BOOLEAN := TRUE,
        flg_type_in            IN wtl_dep_clin_serv.flg_type%TYPE DEFAULT NULL,
        flg_type_nin           IN BOOLEAN := TRUE,
        flg_status_in          IN wtl_dep_clin_serv.flg_status%TYPE DEFAULT NULL,
        flg_status_nin         IN BOOLEAN := TRUE,
        create_user_in         IN wtl_dep_clin_serv.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN wtl_dep_clin_serv.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN wtl_dep_clin_serv.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN wtl_dep_clin_serv.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN wtl_dep_clin_serv.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN wtl_dep_clin_serv.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        id_prof_speciality_in  IN wtl_dep_clin_serv.id_prof_speciality%TYPE DEFAULT NULL,
        id_prof_speciality_nin IN BOOLEAN := TRUE,
        id_ward_in             IN wtl_dep_clin_serv.id_ward%TYPE DEFAULT NULL,
        id_ward_nin            IN BOOLEAN := TRUE,
        where_in               IN VARCHAR2,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               IN OUT table_varchar
    );

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_dep_clin_serv_in    IN wtl_dep_clin_serv.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_dep_clin_serv_nin   IN BOOLEAN := TRUE,
        id_waiting_list_in     IN wtl_dep_clin_serv.id_waiting_list%TYPE DEFAULT NULL,
        id_waiting_list_nin    IN BOOLEAN := TRUE,
        id_episode_in          IN wtl_dep_clin_serv.id_episode%TYPE DEFAULT NULL,
        id_episode_nin         IN BOOLEAN := TRUE,
        flg_type_in            IN wtl_dep_clin_serv.flg_type%TYPE DEFAULT NULL,
        flg_type_nin           IN BOOLEAN := TRUE,
        flg_status_in          IN wtl_dep_clin_serv.flg_status%TYPE DEFAULT NULL,
        flg_status_nin         IN BOOLEAN := TRUE,
        create_user_in         IN wtl_dep_clin_serv.create_user%TYPE DEFAULT NULL,
        create_user_nin        IN BOOLEAN := TRUE,
        create_time_in         IN wtl_dep_clin_serv.create_time%TYPE DEFAULT NULL,
        create_time_nin        IN BOOLEAN := TRUE,
        create_institution_in  IN wtl_dep_clin_serv.create_institution%TYPE DEFAULT NULL,
        create_institution_nin IN BOOLEAN := TRUE,
        update_user_in         IN wtl_dep_clin_serv.update_user%TYPE DEFAULT NULL,
        update_user_nin        IN BOOLEAN := TRUE,
        update_time_in         IN wtl_dep_clin_serv.update_time%TYPE DEFAULT NULL,
        update_time_nin        IN BOOLEAN := TRUE,
        update_institution_in  IN wtl_dep_clin_serv.update_institution%TYPE DEFAULT NULL,
        update_institution_nin IN BOOLEAN := TRUE,
        id_prof_speciality_in  IN wtl_dep_clin_serv.id_prof_speciality%TYPE DEFAULT NULL,
        id_prof_speciality_nin IN BOOLEAN := TRUE,
        id_ward_in             IN wtl_dep_clin_serv.id_ward%TYPE DEFAULT NULL,
        id_ward_nin            IN BOOLEAN := TRUE,
        where_in               IN VARCHAR2,
        handle_error_in        IN BOOLEAN := TRUE
    );

    --Update/insert with columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_wtl_dcs_in         IN wtl_dep_clin_serv.id_wtl_dcs%TYPE,
        id_dep_clin_serv_in   IN wtl_dep_clin_serv.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_waiting_list_in    IN wtl_dep_clin_serv.id_waiting_list%TYPE DEFAULT NULL,
        id_episode_in         IN wtl_dep_clin_serv.id_episode%TYPE DEFAULT NULL,
        flg_type_in           IN wtl_dep_clin_serv.flg_type%TYPE DEFAULT NULL,
        flg_status_in         IN wtl_dep_clin_serv.flg_status%TYPE DEFAULT NULL,
        create_user_in        IN wtl_dep_clin_serv.create_user%TYPE DEFAULT NULL,
        create_time_in        IN wtl_dep_clin_serv.create_time%TYPE DEFAULT NULL,
        create_institution_in IN wtl_dep_clin_serv.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN wtl_dep_clin_serv.update_user%TYPE DEFAULT NULL,
        update_time_in        IN wtl_dep_clin_serv.update_time%TYPE DEFAULT NULL,
        update_institution_in IN wtl_dep_clin_serv.update_institution%TYPE DEFAULT NULL,
        id_prof_speciality_in IN wtl_dep_clin_serv.id_prof_speciality%TYPE DEFAULT NULL,
        id_ward_in            IN wtl_dep_clin_serv.id_ward%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              IN OUT table_varchar
    );

    --Update/insert with columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_wtl_dcs_in         IN wtl_dep_clin_serv.id_wtl_dcs%TYPE,
        id_dep_clin_serv_in   IN wtl_dep_clin_serv.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_waiting_list_in    IN wtl_dep_clin_serv.id_waiting_list%TYPE DEFAULT NULL,
        id_episode_in         IN wtl_dep_clin_serv.id_episode%TYPE DEFAULT NULL,
        flg_type_in           IN wtl_dep_clin_serv.flg_type%TYPE DEFAULT NULL,
        flg_status_in         IN wtl_dep_clin_serv.flg_status%TYPE DEFAULT NULL,
        create_user_in        IN wtl_dep_clin_serv.create_user%TYPE DEFAULT NULL,
        create_time_in        IN wtl_dep_clin_serv.create_time%TYPE DEFAULT NULL,
        create_institution_in IN wtl_dep_clin_serv.create_institution%TYPE DEFAULT NULL,
        update_user_in        IN wtl_dep_clin_serv.update_user%TYPE DEFAULT NULL,
        update_time_in        IN wtl_dep_clin_serv.update_time%TYPE DEFAULT NULL,
        update_institution_in IN wtl_dep_clin_serv.update_institution%TYPE DEFAULT NULL,
        id_prof_speciality_in IN wtl_dep_clin_serv.id_prof_speciality%TYPE DEFAULT NULL,
        id_ward_in            IN wtl_dep_clin_serv.id_ward%TYPE DEFAULT NULL,
        handle_error_in       IN BOOLEAN := TRUE
    );

    --Update record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN wtl_dep_clin_serv%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    );

    --Update record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN wtl_dep_clin_serv%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    --Update collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN wtl_dep_clin_serv_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    );

    --Update collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN wtl_dep_clin_serv_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    );

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    --increment column value
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_wtl_dcs_in   IN wtl_dep_clin_serv.id_wtl_dcs%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_wtl_dcs_in   IN wtl_dep_clin_serv.id_wtl_dcs%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this WDCS_DCS_FK foreign key value
    PROCEDURE del_wdcs_dcs_fk
    (
        id_dep_clin_serv_in IN wtl_dep_clin_serv.id_dep_clin_serv%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    );

    -- Delete all rows for this WDCS_EPIS_FK foreign key value
    PROCEDURE del_wdcs_epis_fk
    (
        id_episode_in   IN wtl_dep_clin_serv.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    );

    -- Delete all rows for this WDCS_WGLT_FK foreign key value
    PROCEDURE del_wdcs_wglt_fk
    (
        id_waiting_list_in IN wtl_dep_clin_serv.id_waiting_list%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    );

    -- Delete all rows for this WDCS_DCS_FK foreign key value
    PROCEDURE del_wdcs_dcs_fk
    (
        id_dep_clin_serv_in IN wtl_dep_clin_serv.id_dep_clin_serv%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    );

    -- Delete all rows for this WDCS_EPIS_FK foreign key value
    PROCEDURE del_wdcs_epis_fk
    (
        id_episode_in   IN wtl_dep_clin_serv.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    );

    -- Delete all rows for this WDCS_WGLT_FK foreign key value
    PROCEDURE del_wdcs_wglt_fk
    (
        id_waiting_list_in IN wtl_dep_clin_serv.id_waiting_list%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    );

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(wtl_dep_clin_serv_inout IN OUT wtl_dep_clin_serv%ROWTYPE);

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN wtl_dep_clin_serv%ROWTYPE;

    -- Get data rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN wtl_dep_clin_serv_tc;

    -- Get data rowid pragma autonomous transaccion
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN wtl_dep_clin_serv_tc;

END ts_wtl_dep_clin_serv;
/
