/*-- Last Change Revision: $Rev: 558924 $*/
/*-- Last Change by: $Author: sergio.santos $*/
/*-- Date of last change: $Date: 2010-07-03 19:16:22 +0100 (s√°b, 03 jul 2010) $*/

CREATE OR REPLACE PACKAGE BODY ts_consult_req
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {657BD35E-2E48-4CD4-B14E-41420B8433B3}
| Created On: July 3, 2010 12:54:18
| Created By: ALERT
*/
 IS

    e_null_column_value EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_null_column_value, -1400);
    --
    e_existing_fky_reference EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_existing_fky_reference, -2266);
    --
    e_check_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_check_constraint_failure, -2290);
    --
    e_no_parent_key EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_no_parent_key, -2291);
    --
    e_child_record_found EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_child_record_found, -2292);
    --
    e_forall_error EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_forall_error, -24381);
    --
    -- Defined for backward compatibilty.
    e_integ_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_integ_constraint_failure, -2291);

    -- Private utilities
    PROCEDURE get_constraint_info
    (
        owner_out OUT all_constraints.owner%TYPE,
        name_out  OUT all_constraints.constraint_name%TYPE
    ) IS
        l_errm  VARCHAR2(2000) := dbms_utility.format_error_stack;
        dotloc  PLS_INTEGER;
        leftloc PLS_INTEGER;
    BEGIN
        dotloc    := instr(l_errm, '.');
        leftloc   := instr(l_errm, '(');
        owner_out := substr(l_errm, leftloc + 1, dotloc - leftloc - 1);
        name_out  := substr(l_errm, dotloc + 1, instr(l_errm, ')') - dotloc - 1);
    END get_constraint_info;
    -- Public programs

    PROCEDURE ins
    (
        id_consult_req_in         IN consult_req.id_consult_req%TYPE,
        consult_type_in           IN consult_req.consult_type%TYPE DEFAULT NULL,
        id_clinical_service_in    IN consult_req.id_clinical_service%TYPE DEFAULT NULL,
        id_patient_in             IN consult_req.id_patient%TYPE DEFAULT NULL,
        id_instit_requests_in     IN consult_req.id_instit_requests%TYPE DEFAULT NULL,
        id_inst_requested_in      IN consult_req.id_inst_requested%TYPE DEFAULT NULL,
        id_episode_in             IN consult_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in            IN consult_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_auth_in           IN consult_req.id_prof_auth%TYPE DEFAULT NULL,
        id_prof_appr_in           IN consult_req.id_prof_appr%TYPE DEFAULT NULL,
        id_prof_proc_in           IN consult_req.id_prof_proc%TYPE DEFAULT NULL,
        notes_in                  IN consult_req.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN consult_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN consult_req.notes_cancel%TYPE DEFAULT NULL,
        id_dep_clin_serv_in       IN consult_req.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_prof_requested_in      IN consult_req.id_prof_requested%TYPE DEFAULT NULL,
        flg_status_in             IN consult_req.flg_status%TYPE DEFAULT NULL,
        notes_admin_in            IN consult_req.notes_admin%TYPE DEFAULT NULL,
        id_schedule_in            IN consult_req.id_schedule%TYPE DEFAULT NULL,
        dt_consult_req_tstz_in    IN consult_req.dt_consult_req_tstz%TYPE DEFAULT NULL,
        dt_scheduled_tstz_in      IN consult_req.dt_scheduled_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN consult_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        next_visit_in_notes_in    IN consult_req.next_visit_in_notes%TYPE DEFAULT NULL,
        flg_instructions_in       IN consult_req.flg_instructions%TYPE DEFAULT NULL,
        id_complaint_in           IN consult_req.id_complaint%TYPE DEFAULT NULL,
        flg_type_date_in          IN consult_req.flg_type_date%TYPE DEFAULT NULL,
        status_flg_in             IN consult_req.status_flg%TYPE DEFAULT NULL,
        status_icon_in            IN consult_req.status_icon%TYPE DEFAULT NULL,
        status_msg_in             IN consult_req.status_msg%TYPE DEFAULT NULL,
        status_str_in             IN consult_req.status_str%TYPE DEFAULT NULL,
        reason_for_visit_in       IN consult_req.reason_for_visit%TYPE DEFAULT NULL,
        create_user_in            IN consult_req.create_user%TYPE DEFAULT NULL,
        create_time_in            IN consult_req.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN consult_req.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN consult_req.update_user%TYPE DEFAULT NULL,
        update_time_in            IN consult_req.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN consult_req.update_institution%TYPE DEFAULT NULL,
        flg_type_in               IN consult_req.flg_type%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN consult_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_epis_documentation_in  IN consult_req.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_type_in           IN consult_req.id_epis_type%TYPE DEFAULT NULL,
        dt_last_update_in         IN consult_req.dt_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN consult_req.id_prof_last_update%TYPE DEFAULT NULL,
        id_inst_last_update_in    IN consult_req.id_inst_last_update%TYPE DEFAULT NULL,
        id_sch_event_in           IN consult_req.id_sch_event%TYPE DEFAULT NULL,
        dt_begin_event_in         IN consult_req.dt_begin_event%TYPE DEFAULT NULL,
        dt_end_event_in           IN consult_req.dt_end_event%TYPE DEFAULT NULL,
        flg_priority_in           IN consult_req.flg_priority%TYPE DEFAULT NULL,
        flg_contact_type_in       IN consult_req.flg_contact_type%TYPE DEFAULT NULL,
        instructions_in           IN consult_req.instructions%TYPE DEFAULT NULL,
        id_room_in                IN consult_req.id_room%TYPE DEFAULT NULL,
        flg_request_type_in       IN consult_req.flg_request_type%TYPE DEFAULT NULL,
        flg_req_resp_in           IN consult_req.flg_req_resp%TYPE DEFAULT NULL,
        request_reason_in         IN consult_req.request_reason%TYPE DEFAULT NULL,
        id_language_in            IN consult_req.id_language%TYPE DEFAULT NULL,
        flg_recurrence_in         IN consult_req.flg_recurrence%TYPE DEFAULT NULL,
        frequency_in              IN consult_req.frequency%TYPE DEFAULT NULL,
        dt_rec_begin_in           IN consult_req.dt_rec_begin%TYPE DEFAULT NULL,
        dt_rec_end_in             IN consult_req.dt_rec_end%TYPE DEFAULT NULL,
        nr_events_in              IN consult_req.nr_events%TYPE DEFAULT NULL,
        week_day_in               IN consult_req.week_day%TYPE DEFAULT NULL,
        week_nr_in                IN consult_req.week_nr%TYPE DEFAULT NULL,
        month_day_in              IN consult_req.month_day%TYPE DEFAULT NULL,
        month_nr_in               IN consult_req.month_nr%TYPE DEFAULT NULL,
        id_task_dependency_in     IN consult_req.id_task_dependency%TYPE DEFAULT NULL,
        flg_freq_origin_module_in IN consult_req.flg_freq_origin_module%TYPE DEFAULT NULL,
        id_episode_to_exec_in     IN consult_req.id_episode_to_exec%TYPE DEFAULT NULL,
        id_soft_reg_by_in         IN consult_req.id_soft_reg_by%TYPE DEFAULT NULL,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  OUT table_varchar
    ) IS
    BEGIN

        INSERT INTO consult_req
            (id_consult_req,
             consult_type,
             id_clinical_service,
             id_patient,
             id_instit_requests,
             id_inst_requested,
             id_episode,
             id_prof_req,
             id_prof_auth,
             id_prof_appr,
             id_prof_proc,
             notes,
             id_prof_cancel,
             notes_cancel,
             id_dep_clin_serv,
             id_prof_requested,
             flg_status,
             notes_admin,
             id_schedule,
             dt_consult_req_tstz,
             dt_scheduled_tstz,
             dt_cancel_tstz,
             next_visit_in_notes,
             flg_instructions,
             id_complaint,
             flg_type_date,
             status_flg,
             status_icon,
             status_msg,
             status_str,
             reason_for_visit,
             create_user,
             create_time,
             create_institution,
             update_user,
             update_time,
             update_institution,
             flg_type,
             id_cancel_reason,
             id_epis_documentation,
             id_epis_type,
             dt_last_update,
             id_prof_last_update,
             id_inst_last_update,
             id_sch_event,
             dt_begin_event,
             dt_end_event,
             flg_priority,
             flg_contact_type,
             instructions,
             id_room,
             flg_request_type,
             flg_req_resp,
             request_reason,
             id_language,
             flg_recurrence,
             frequency,
             dt_rec_begin,
             dt_rec_end,
             nr_events,
             week_day,
             week_nr,
             month_day,
             month_nr,
             id_task_dependency,
             flg_freq_origin_module,
             id_episode_to_exec,
             id_soft_reg_by)
        VALUES
            (id_consult_req_in,
             consult_type_in,
             id_clinical_service_in,
             id_patient_in,
             id_instit_requests_in,
             id_inst_requested_in,
             id_episode_in,
             id_prof_req_in,
             id_prof_auth_in,
             id_prof_appr_in,
             id_prof_proc_in,
             notes_in,
             id_prof_cancel_in,
             notes_cancel_in,
             id_dep_clin_serv_in,
             id_prof_requested_in,
             flg_status_in,
             notes_admin_in,
             id_schedule_in,
             dt_consult_req_tstz_in,
             dt_scheduled_tstz_in,
             dt_cancel_tstz_in,
             next_visit_in_notes_in,
             flg_instructions_in,
             id_complaint_in,
             flg_type_date_in,
             status_flg_in,
             status_icon_in,
             status_msg_in,
             status_str_in,
             reason_for_visit_in,
             create_user_in,
             create_time_in,
             create_institution_in,
             update_user_in,
             update_time_in,
             update_institution_in,
             flg_type_in,
             id_cancel_reason_in,
             id_epis_documentation_in,
             id_epis_type_in,
             dt_last_update_in,
             id_prof_last_update_in,
             id_inst_last_update_in,
             id_sch_event_in,
             dt_begin_event_in,
             dt_end_event_in,
             flg_priority_in,
             flg_contact_type_in,
             instructions_in,
             id_room_in,
             flg_request_type_in,
             flg_req_resp_in,
             request_reason_in,
             id_language_in,
             flg_recurrence_in,
             frequency_in,
             dt_rec_begin_in,
             dt_rec_end_in,
             nr_events_in,
             week_day_in,
             week_nr_in,
             month_day_in,
             month_nr_in,
             id_task_dependency_in,
             flg_freq_origin_module_in,
             id_episode_to_exec_in,
             id_soft_reg_by_in)
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN dup_val_on_index THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner           all_constraints.owner%TYPE;
                    l_name            all_constraints.constraint_name%TYPE;
                    l_err_instance_id PLS_INTEGER;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF FALSE
                    THEN
                        NULL; -- Placeholder in case no unique indexes
                    ELSE
                        pk_alert_exceptions.raise_error(error_name_in => 'DUPLICATE-VALUE',
                                                        name1_in      => 'OWNER',
                                                        value1_in     => l_owner,
                                                        name2_in      => 'CONSTRAINT_NAME',
                                                        value2_in     => l_name,
                                                        name3_in      => 'TABLE_NAME',
                                                        value3_in     => 'CONSULT_REQ');
                    END IF;
                END;
            END IF;
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    IF l_name = 'CRQ_COMPLAINT_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_COMPLAINT',
                                                        value_in           => id_complaint_in);
                    END IF;
                    IF l_name = 'CRQ_CSE_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_CLINICAL_SERVICE',
                                                        value_in           => id_clinical_service_in);
                    END IF;
                    IF l_name = 'CRQ_DCS_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_DEP_CLIN_SERV',
                                                        value_in           => id_dep_clin_serv_in);
                    END IF;
                    IF l_name = 'CRQ_EPD_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_EPIS_DOCUMENTATION',
                                                        value_in           => id_epis_documentation_in);
                    END IF;
                    IF l_name = 'CRQ_EPIS_EXEC_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_EPISODE_TO_EXEC',
                                                        value_in           => id_episode_to_exec_in);
                    END IF;
                    IF l_name = 'CRQ_EPIS_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_EPISODE',
                                                        value_in           => id_episode_in);
                    END IF;
                    IF l_name = 'CRQ_EPIS_TYPE_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_EPIS_TYPE',
                                                        value_in           => id_epis_type_in);
                    END IF;
                    IF l_name = 'CRQ_INST_REQUESTED_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_INST_REQUESTED',
                                                        value_in           => id_inst_requested_in);
                    END IF;
                    IF l_name = 'CRQ_INST_REQUESTS_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_INSTIT_REQUESTS',
                                                        value_in           => id_instit_requests_in);
                    END IF;
                    IF l_name = 'CRQ_LANGUAGE_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_LANGUAGE',
                                                        value_in           => id_language_in);
                    END IF;
                    IF l_name = 'CRQ_LAST_UPDATE_BY_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_LAST_UPDATE',
                                                        value_in           => id_prof_last_update_in);
                    END IF;
                    IF l_name = 'CRQ_LAST_UPDATE_INST_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_INST_LAST_UPDATE',
                                                        value_in           => id_inst_last_update_in);
                    END IF;
                    IF l_name = 'CRQ_PAT_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PATIENT',
                                                        value_in           => id_patient_in);
                    END IF;
                    IF l_name = 'CRQ_PROF_APPR_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_APPR',
                                                        value_in           => id_prof_appr_in);
                    END IF;
                    IF l_name = 'CRQ_PROF_AUTH_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_AUTH',
                                                        value_in           => id_prof_auth_in);
                    END IF;
                    IF l_name = 'CRQ_PROF_CANCEL_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_CANCEL',
                                                        value_in           => id_prof_cancel_in);
                    END IF;
                    IF l_name = 'CRQ_PROF_PROC_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_PROC',
                                                        value_in           => id_prof_proc_in);
                    END IF;
                    IF l_name = 'CRQ_PROF_REQUESTED_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_REQUESTED',
                                                        value_in           => id_prof_requested_in);
                    END IF;
                    IF l_name = 'CRQ_PROF_REQ_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_REQ',
                                                        value_in           => id_prof_req_in);
                    END IF;
                    IF l_name = 'CRQ_ROOM_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_ROOM',
                                                        value_in           => id_room_in);
                    END IF;
                    IF l_name = 'CRQ_SCHEDULE_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_SCHEDULE',
                                                        value_in           => id_schedule_in);
                    END IF;
                    IF l_name = 'CRQ_SCH_EVENT_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_SCH_EVENT',
                                                        value_in           => id_sch_event_in);
                    END IF;
                    IF l_name = 'CRQ_TASK_DEP_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_TASK_DEPENDENCY',
                                                        value_in           => id_task_dependency_in);
                    END IF;
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
        WHEN e_null_column_value THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    v_errm    VARCHAR2(2000) := dbms_utility.format_error_stack;
                    dot1loc   INTEGER;
                    dot2loc   INTEGER;
                    parenloc  INTEGER;
                    c_owner   all_constraints.owner%TYPE;
                    c_tabname all_tables.table_name%TYPE;
                    c_colname all_tab_columns.column_name%TYPE;
                BEGIN
                    dot1loc   := instr(v_errm, '.', 1, 1);
                    dot2loc   := instr(v_errm, '.', 1, 2);
                    parenloc  := instr(v_errm, '(');
                    c_owner   := substr(v_errm, parenloc + 1, dot1loc - parenloc - 1);
                    c_tabname := substr(v_errm, dot1loc + 1, dot2loc - dot1loc - 1);
                    c_colname := substr(v_errm, dot2loc + 1, instr(v_errm, ')') - dot2loc - 1);

                    pk_alert_exceptions.raise_error(error_name_in => 'COLUMN-CANNOT-BE-NULL',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => c_owner,
                                                    name2_in      => 'TABLE_NAME',
                                                    value2_in     => c_tabname,
                                                    name3_in      => 'COLUMN_NAME',
                                                    value3_in     => c_colname);
                END;
            END IF;
    END ins;

    PROCEDURE ins
    (
        id_consult_req_in         IN consult_req.id_consult_req%TYPE,
        consult_type_in           IN consult_req.consult_type%TYPE DEFAULT NULL,
        id_clinical_service_in    IN consult_req.id_clinical_service%TYPE DEFAULT NULL,
        id_patient_in             IN consult_req.id_patient%TYPE DEFAULT NULL,
        id_instit_requests_in     IN consult_req.id_instit_requests%TYPE DEFAULT NULL,
        id_inst_requested_in      IN consult_req.id_inst_requested%TYPE DEFAULT NULL,
        id_episode_in             IN consult_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in            IN consult_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_auth_in           IN consult_req.id_prof_auth%TYPE DEFAULT NULL,
        id_prof_appr_in           IN consult_req.id_prof_appr%TYPE DEFAULT NULL,
        id_prof_proc_in           IN consult_req.id_prof_proc%TYPE DEFAULT NULL,
        notes_in                  IN consult_req.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN consult_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN consult_req.notes_cancel%TYPE DEFAULT NULL,
        id_dep_clin_serv_in       IN consult_req.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_prof_requested_in      IN consult_req.id_prof_requested%TYPE DEFAULT NULL,
        flg_status_in             IN consult_req.flg_status%TYPE DEFAULT NULL,
        notes_admin_in            IN consult_req.notes_admin%TYPE DEFAULT NULL,
        id_schedule_in            IN consult_req.id_schedule%TYPE DEFAULT NULL,
        dt_consult_req_tstz_in    IN consult_req.dt_consult_req_tstz%TYPE DEFAULT NULL,
        dt_scheduled_tstz_in      IN consult_req.dt_scheduled_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN consult_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        next_visit_in_notes_in    IN consult_req.next_visit_in_notes%TYPE DEFAULT NULL,
        flg_instructions_in       IN consult_req.flg_instructions%TYPE DEFAULT NULL,
        id_complaint_in           IN consult_req.id_complaint%TYPE DEFAULT NULL,
        flg_type_date_in          IN consult_req.flg_type_date%TYPE DEFAULT NULL,
        status_flg_in             IN consult_req.status_flg%TYPE DEFAULT NULL,
        status_icon_in            IN consult_req.status_icon%TYPE DEFAULT NULL,
        status_msg_in             IN consult_req.status_msg%TYPE DEFAULT NULL,
        status_str_in             IN consult_req.status_str%TYPE DEFAULT NULL,
        reason_for_visit_in       IN consult_req.reason_for_visit%TYPE DEFAULT NULL,
        create_user_in            IN consult_req.create_user%TYPE DEFAULT NULL,
        create_time_in            IN consult_req.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN consult_req.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN consult_req.update_user%TYPE DEFAULT NULL,
        update_time_in            IN consult_req.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN consult_req.update_institution%TYPE DEFAULT NULL,
        flg_type_in               IN consult_req.flg_type%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN consult_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_epis_documentation_in  IN consult_req.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_type_in           IN consult_req.id_epis_type%TYPE DEFAULT NULL,
        dt_last_update_in         IN consult_req.dt_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN consult_req.id_prof_last_update%TYPE DEFAULT NULL,
        id_inst_last_update_in    IN consult_req.id_inst_last_update%TYPE DEFAULT NULL,
        id_sch_event_in           IN consult_req.id_sch_event%TYPE DEFAULT NULL,
        dt_begin_event_in         IN consult_req.dt_begin_event%TYPE DEFAULT NULL,
        dt_end_event_in           IN consult_req.dt_end_event%TYPE DEFAULT NULL,
        flg_priority_in           IN consult_req.flg_priority%TYPE DEFAULT NULL,
        flg_contact_type_in       IN consult_req.flg_contact_type%TYPE DEFAULT NULL,
        instructions_in           IN consult_req.instructions%TYPE DEFAULT NULL,
        id_room_in                IN consult_req.id_room%TYPE DEFAULT NULL,
        flg_request_type_in       IN consult_req.flg_request_type%TYPE DEFAULT NULL,
        flg_req_resp_in           IN consult_req.flg_req_resp%TYPE DEFAULT NULL,
        request_reason_in         IN consult_req.request_reason%TYPE DEFAULT NULL,
        id_language_in            IN consult_req.id_language%TYPE DEFAULT NULL,
        flg_recurrence_in         IN consult_req.flg_recurrence%TYPE DEFAULT NULL,
        frequency_in              IN consult_req.frequency%TYPE DEFAULT NULL,
        dt_rec_begin_in           IN consult_req.dt_rec_begin%TYPE DEFAULT NULL,
        dt_rec_end_in             IN consult_req.dt_rec_end%TYPE DEFAULT NULL,
        nr_events_in              IN consult_req.nr_events%TYPE DEFAULT NULL,
        week_day_in               IN consult_req.week_day%TYPE DEFAULT NULL,
        week_nr_in                IN consult_req.week_nr%TYPE DEFAULT NULL,
        month_day_in              IN consult_req.month_day%TYPE DEFAULT NULL,
        month_nr_in               IN consult_req.month_nr%TYPE DEFAULT NULL,
        id_task_dependency_in     IN consult_req.id_task_dependency%TYPE DEFAULT NULL,
        flg_freq_origin_module_in IN consult_req.flg_freq_origin_module%TYPE DEFAULT NULL,
        id_episode_to_exec_in     IN consult_req.id_episode_to_exec%TYPE DEFAULT NULL,
        id_soft_reg_by_in         IN consult_req.id_soft_reg_by%TYPE DEFAULT NULL,
        handle_error_in           IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN

        ins(id_consult_req_in         => id_consult_req_in,
            consult_type_in           => consult_type_in,
            id_clinical_service_in    => id_clinical_service_in,
            id_patient_in             => id_patient_in,
            id_instit_requests_in     => id_instit_requests_in,
            id_inst_requested_in      => id_inst_requested_in,
            id_episode_in             => id_episode_in,
            id_prof_req_in            => id_prof_req_in,
            id_prof_auth_in           => id_prof_auth_in,
            id_prof_appr_in           => id_prof_appr_in,
            id_prof_proc_in           => id_prof_proc_in,
            notes_in                  => notes_in,
            id_prof_cancel_in         => id_prof_cancel_in,
            notes_cancel_in           => notes_cancel_in,
            id_dep_clin_serv_in       => id_dep_clin_serv_in,
            id_prof_requested_in      => id_prof_requested_in,
            flg_status_in             => flg_status_in,
            notes_admin_in            => notes_admin_in,
            id_schedule_in            => id_schedule_in,
            dt_consult_req_tstz_in    => dt_consult_req_tstz_in,
            dt_scheduled_tstz_in      => dt_scheduled_tstz_in,
            dt_cancel_tstz_in         => dt_cancel_tstz_in,
            next_visit_in_notes_in    => next_visit_in_notes_in,
            flg_instructions_in       => flg_instructions_in,
            id_complaint_in           => id_complaint_in,
            flg_type_date_in          => flg_type_date_in,
            status_flg_in             => status_flg_in,
            status_icon_in            => status_icon_in,
            status_msg_in             => status_msg_in,
            status_str_in             => status_str_in,
            reason_for_visit_in       => reason_for_visit_in,
            create_user_in            => create_user_in,
            create_time_in            => create_time_in,
            create_institution_in     => create_institution_in,
            update_user_in            => update_user_in,
            update_time_in            => update_time_in,
            update_institution_in     => update_institution_in,
            flg_type_in               => flg_type_in,
            id_cancel_reason_in       => id_cancel_reason_in,
            id_epis_documentation_in  => id_epis_documentation_in,
            id_epis_type_in           => id_epis_type_in,
            dt_last_update_in         => dt_last_update_in,
            id_prof_last_update_in    => id_prof_last_update_in,
            id_inst_last_update_in    => id_inst_last_update_in,
            id_sch_event_in           => id_sch_event_in,
            dt_begin_event_in         => dt_begin_event_in,
            dt_end_event_in           => dt_end_event_in,
            flg_priority_in           => flg_priority_in,
            flg_contact_type_in       => flg_contact_type_in,
            instructions_in           => instructions_in,
            id_room_in                => id_room_in,
            flg_request_type_in       => flg_request_type_in,
            flg_req_resp_in           => flg_req_resp_in,
            request_reason_in         => request_reason_in,
            id_language_in            => id_language_in,
            flg_recurrence_in         => flg_recurrence_in,
            frequency_in              => frequency_in,
            dt_rec_begin_in           => dt_rec_begin_in,
            dt_rec_end_in             => dt_rec_end_in,
            nr_events_in              => nr_events_in,
            week_day_in               => week_day_in,
            week_nr_in                => week_nr_in,
            month_day_in              => month_day_in,
            month_nr_in               => month_nr_in,
            id_task_dependency_in     => id_task_dependency_in,
            flg_freq_origin_module_in => flg_freq_origin_module_in,
            id_episode_to_exec_in     => id_episode_to_exec_in,
            id_soft_reg_by_in         => id_soft_reg_by_in,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
    END ins;

    /*
    START Special logic for handling LOB columns....
    */

    PROCEDURE n_ins_clobs_in_chunks
    (
        id_consult_req_in         IN consult_req.id_consult_req%TYPE,
        consult_type_in           IN consult_req.consult_type%TYPE DEFAULT NULL,
        id_clinical_service_in    IN consult_req.id_clinical_service%TYPE DEFAULT NULL,
        id_patient_in             IN consult_req.id_patient%TYPE DEFAULT NULL,
        id_instit_requests_in     IN consult_req.id_instit_requests%TYPE DEFAULT NULL,
        id_inst_requested_in      IN consult_req.id_inst_requested%TYPE DEFAULT NULL,
        id_episode_in             IN consult_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in            IN consult_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_auth_in           IN consult_req.id_prof_auth%TYPE DEFAULT NULL,
        id_prof_appr_in           IN consult_req.id_prof_appr%TYPE DEFAULT NULL,
        id_prof_proc_in           IN consult_req.id_prof_proc%TYPE DEFAULT NULL,
        notes_in                  IN consult_req.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN consult_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN consult_req.notes_cancel%TYPE DEFAULT NULL,
        id_dep_clin_serv_in       IN consult_req.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_prof_requested_in      IN consult_req.id_prof_requested%TYPE DEFAULT NULL,
        flg_status_in             IN consult_req.flg_status%TYPE DEFAULT NULL,
        notes_admin_in            IN consult_req.notes_admin%TYPE DEFAULT NULL,
        id_schedule_in            IN consult_req.id_schedule%TYPE DEFAULT NULL,
        dt_consult_req_tstz_in    IN consult_req.dt_consult_req_tstz%TYPE DEFAULT NULL,
        dt_scheduled_tstz_in      IN consult_req.dt_scheduled_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN consult_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        next_visit_in_notes_in    IN consult_req.next_visit_in_notes%TYPE DEFAULT NULL,
        flg_instructions_in       IN consult_req.flg_instructions%TYPE DEFAULT NULL,
        id_complaint_in           IN consult_req.id_complaint%TYPE DEFAULT NULL,
        flg_type_date_in          IN consult_req.flg_type_date%TYPE DEFAULT NULL,
        status_flg_in             IN consult_req.status_flg%TYPE DEFAULT NULL,
        status_icon_in            IN consult_req.status_icon%TYPE DEFAULT NULL,
        status_msg_in             IN consult_req.status_msg%TYPE DEFAULT NULL,
        status_str_in             IN consult_req.status_str%TYPE DEFAULT NULL,
        reason_for_visit_in       IN consult_req.reason_for_visit%TYPE DEFAULT NULL,
        create_user_in            IN consult_req.create_user%TYPE DEFAULT NULL,
        create_time_in            IN consult_req.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN consult_req.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN consult_req.update_user%TYPE DEFAULT NULL,
        update_time_in            IN consult_req.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN consult_req.update_institution%TYPE DEFAULT NULL,
        flg_type_in               IN consult_req.flg_type%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN consult_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_epis_documentation_in  IN consult_req.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_type_in           IN consult_req.id_epis_type%TYPE DEFAULT NULL,
        dt_last_update_in         IN consult_req.dt_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN consult_req.id_prof_last_update%TYPE DEFAULT NULL,
        id_inst_last_update_in    IN consult_req.id_inst_last_update%TYPE DEFAULT NULL,
        id_sch_event_in           IN consult_req.id_sch_event%TYPE DEFAULT NULL,
        dt_begin_event_in         IN consult_req.dt_begin_event%TYPE DEFAULT NULL,
        dt_end_event_in           IN consult_req.dt_end_event%TYPE DEFAULT NULL,
        flg_priority_in           IN consult_req.flg_priority%TYPE DEFAULT NULL,
        flg_contact_type_in       IN consult_req.flg_contact_type%TYPE DEFAULT NULL,
        id_room_in                IN consult_req.id_room%TYPE DEFAULT NULL,
        flg_request_type_in       IN consult_req.flg_request_type%TYPE DEFAULT NULL,
        flg_req_resp_in           IN consult_req.flg_req_resp%TYPE DEFAULT NULL,
        id_language_in            IN consult_req.id_language%TYPE DEFAULT NULL,
        flg_recurrence_in         IN consult_req.flg_recurrence%TYPE DEFAULT NULL,
        frequency_in              IN consult_req.frequency%TYPE DEFAULT NULL,
        dt_rec_begin_in           IN consult_req.dt_rec_begin%TYPE DEFAULT NULL,
        dt_rec_end_in             IN consult_req.dt_rec_end%TYPE DEFAULT NULL,
        nr_events_in              IN consult_req.nr_events%TYPE DEFAULT NULL,
        week_day_in               IN consult_req.week_day%TYPE DEFAULT NULL,
        week_nr_in                IN consult_req.week_nr%TYPE DEFAULT NULL,
        month_day_in              IN consult_req.month_day%TYPE DEFAULT NULL,
        month_nr_in               IN consult_req.month_nr%TYPE DEFAULT NULL,
        id_task_dependency_in     IN consult_req.id_task_dependency%TYPE DEFAULT NULL,
        flg_freq_origin_module_in IN consult_req.flg_freq_origin_module%TYPE DEFAULT NULL,
        id_episode_to_exec_in     IN consult_req.id_episode_to_exec%TYPE DEFAULT NULL,
        id_soft_reg_by_in         IN consult_req.id_soft_reg_by%TYPE DEFAULT NULL,
        handle_error_in           IN BOOLEAN := TRUE,
        clob_columns_in           IN varchar2_t,
        clob_pieces_in            IN varchar2_t
    ) IS
        l_instructions   CLOB;
        l_request_reason CLOB;
        i                PLS_INTEGER;
        current_column   VARCHAR2(30) := '';
    BEGIN
        /* Be aware, PLSQL limitations on temporary clobs prevent multiple CLOB
        variables from pointing to the same temporary CLOB (it creates copies).
        Otherwise, the code could have been written a bit more compactly. */

        FOR i IN clob_columns_in.FIRST .. clob_columns_in.LAST
        LOOP
            /* Even when all clobs are null, DOA must send 1 row so skip it. */
            IF clob_columns_in(i) IS NOT NULL
            THEN
                IF current_column <> clob_columns_in(i)
                   OR current_column IS NULL
                THEN
                    current_column := lower(clob_columns_in(i));

                    CASE current_column
                        WHEN 'instructions_in' THEN
                            IF l_instructions IS NULL
                            THEN
                                dbms_lob.createtemporary(l_instructions, TRUE, dbms_lob.CALL);
                            END IF;
                        WHEN 'request_reason_in' THEN
                            IF l_request_reason IS NULL
                            THEN
                                dbms_lob.createtemporary(l_request_reason, TRUE, dbms_lob.CALL);
                            END IF;
                    END CASE; END IF;

                CASE current_column
                    WHEN 'instructions_in' THEN
                        dbms_lob.writeappend(l_instructions, length(clob_pieces_in(i)), clob_pieces_in(i));
                    WHEN 'request_reason_in' THEN
                        dbms_lob.writeappend(l_request_reason, length(clob_pieces_in(i)), clob_pieces_in(i));
                END CASE; END IF;
        END LOOP;

        ins(id_consult_req_in         => id_consult_req_in,
            consult_type_in           => consult_type_in,
            id_clinical_service_in    => id_clinical_service_in,
            id_patient_in             => id_patient_in,
            id_instit_requests_in     => id_instit_requests_in,
            id_inst_requested_in      => id_inst_requested_in,
            id_episode_in             => id_episode_in,
            id_prof_req_in            => id_prof_req_in,
            id_prof_auth_in           => id_prof_auth_in,
            id_prof_appr_in           => id_prof_appr_in,
            id_prof_proc_in           => id_prof_proc_in,
            notes_in                  => notes_in,
            id_prof_cancel_in         => id_prof_cancel_in,
            notes_cancel_in           => notes_cancel_in,
            id_dep_clin_serv_in       => id_dep_clin_serv_in,
            id_prof_requested_in      => id_prof_requested_in,
            flg_status_in             => flg_status_in,
            notes_admin_in            => notes_admin_in,
            id_schedule_in            => id_schedule_in,
            dt_consult_req_tstz_in    => dt_consult_req_tstz_in,
            dt_scheduled_tstz_in      => dt_scheduled_tstz_in,
            dt_cancel_tstz_in         => dt_cancel_tstz_in,
            next_visit_in_notes_in    => next_visit_in_notes_in,
            flg_instructions_in       => flg_instructions_in,
            id_complaint_in           => id_complaint_in,
            flg_type_date_in          => flg_type_date_in,
            status_flg_in             => status_flg_in,
            status_icon_in            => status_icon_in,
            status_msg_in             => status_msg_in,
            status_str_in             => status_str_in,
            reason_for_visit_in       => reason_for_visit_in,
            create_user_in            => create_user_in,
            create_time_in            => create_time_in,
            create_institution_in     => create_institution_in,
            update_user_in            => update_user_in,
            update_time_in            => update_time_in,
            update_institution_in     => update_institution_in,
            flg_type_in               => flg_type_in,
            id_cancel_reason_in       => id_cancel_reason_in,
            id_epis_documentation_in  => id_epis_documentation_in,
            id_epis_type_in           => id_epis_type_in,
            dt_last_update_in         => dt_last_update_in,
            id_prof_last_update_in    => id_prof_last_update_in,
            id_inst_last_update_in    => id_inst_last_update_in,
            id_sch_event_in           => id_sch_event_in,
            dt_begin_event_in         => dt_begin_event_in,
            dt_end_event_in           => dt_end_event_in,
            flg_priority_in           => flg_priority_in,
            flg_contact_type_in       => flg_contact_type_in,
            instructions_in           => l_instructions,
            id_room_in                => id_room_in,
            flg_request_type_in       => flg_request_type_in,
            flg_req_resp_in           => flg_req_resp_in,
            request_reason_in         => l_request_reason,
            id_language_in            => id_language_in,
            flg_recurrence_in         => flg_recurrence_in,
            frequency_in              => frequency_in,
            dt_rec_begin_in           => dt_rec_begin_in,
            dt_rec_end_in             => dt_rec_end_in,
            nr_events_in              => nr_events_in,
            week_day_in               => week_day_in,
            week_nr_in                => week_nr_in,
            month_day_in              => month_day_in,
            month_nr_in               => month_nr_in,
            id_task_dependency_in     => id_task_dependency_in,
            flg_freq_origin_module_in => flg_freq_origin_module_in,
            id_episode_to_exec_in     => id_episode_to_exec_in,
            id_soft_reg_by_in         => id_soft_reg_by_in,
            handle_error_in           => handle_error_in);

    END n_ins_clobs_in_chunks;

    PROCEDURE n_upd_clobs_in_chunks
    (
        id_consult_req_in         IN consult_req.id_consult_req%TYPE,
        consult_type_in           IN consult_req.consult_type%TYPE DEFAULT NULL,
        id_clinical_service_in    IN consult_req.id_clinical_service%TYPE DEFAULT NULL,
        id_patient_in             IN consult_req.id_patient%TYPE DEFAULT NULL,
        id_instit_requests_in     IN consult_req.id_instit_requests%TYPE DEFAULT NULL,
        id_inst_requested_in      IN consult_req.id_inst_requested%TYPE DEFAULT NULL,
        id_episode_in             IN consult_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in            IN consult_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_auth_in           IN consult_req.id_prof_auth%TYPE DEFAULT NULL,
        id_prof_appr_in           IN consult_req.id_prof_appr%TYPE DEFAULT NULL,
        id_prof_proc_in           IN consult_req.id_prof_proc%TYPE DEFAULT NULL,
        notes_in                  IN consult_req.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN consult_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN consult_req.notes_cancel%TYPE DEFAULT NULL,
        id_dep_clin_serv_in       IN consult_req.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_prof_requested_in      IN consult_req.id_prof_requested%TYPE DEFAULT NULL,
        flg_status_in             IN consult_req.flg_status%TYPE DEFAULT NULL,
        notes_admin_in            IN consult_req.notes_admin%TYPE DEFAULT NULL,
        id_schedule_in            IN consult_req.id_schedule%TYPE DEFAULT NULL,
        dt_consult_req_tstz_in    IN consult_req.dt_consult_req_tstz%TYPE DEFAULT NULL,
        dt_scheduled_tstz_in      IN consult_req.dt_scheduled_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN consult_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        next_visit_in_notes_in    IN consult_req.next_visit_in_notes%TYPE DEFAULT NULL,
        flg_instructions_in       IN consult_req.flg_instructions%TYPE DEFAULT NULL,
        id_complaint_in           IN consult_req.id_complaint%TYPE DEFAULT NULL,
        flg_type_date_in          IN consult_req.flg_type_date%TYPE DEFAULT NULL,
        status_flg_in             IN consult_req.status_flg%TYPE DEFAULT NULL,
        status_icon_in            IN consult_req.status_icon%TYPE DEFAULT NULL,
        status_msg_in             IN consult_req.status_msg%TYPE DEFAULT NULL,
        status_str_in             IN consult_req.status_str%TYPE DEFAULT NULL,
        reason_for_visit_in       IN consult_req.reason_for_visit%TYPE DEFAULT NULL,
        create_user_in            IN consult_req.create_user%TYPE DEFAULT NULL,
        create_time_in            IN consult_req.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN consult_req.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN consult_req.update_user%TYPE DEFAULT NULL,
        update_time_in            IN consult_req.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN consult_req.update_institution%TYPE DEFAULT NULL,
        flg_type_in               IN consult_req.flg_type%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN consult_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_epis_documentation_in  IN consult_req.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_type_in           IN consult_req.id_epis_type%TYPE DEFAULT NULL,
        dt_last_update_in         IN consult_req.dt_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN consult_req.id_prof_last_update%TYPE DEFAULT NULL,
        id_inst_last_update_in    IN consult_req.id_inst_last_update%TYPE DEFAULT NULL,
        id_sch_event_in           IN consult_req.id_sch_event%TYPE DEFAULT NULL,
        dt_begin_event_in         IN consult_req.dt_begin_event%TYPE DEFAULT NULL,
        dt_end_event_in           IN consult_req.dt_end_event%TYPE DEFAULT NULL,
        flg_priority_in           IN consult_req.flg_priority%TYPE DEFAULT NULL,
        flg_contact_type_in       IN consult_req.flg_contact_type%TYPE DEFAULT NULL,
        id_room_in                IN consult_req.id_room%TYPE DEFAULT NULL,
        flg_request_type_in       IN consult_req.flg_request_type%TYPE DEFAULT NULL,
        flg_req_resp_in           IN consult_req.flg_req_resp%TYPE DEFAULT NULL,
        id_language_in            IN consult_req.id_language%TYPE DEFAULT NULL,
        flg_recurrence_in         IN consult_req.flg_recurrence%TYPE DEFAULT NULL,
        frequency_in              IN consult_req.frequency%TYPE DEFAULT NULL,
        dt_rec_begin_in           IN consult_req.dt_rec_begin%TYPE DEFAULT NULL,
        dt_rec_end_in             IN consult_req.dt_rec_end%TYPE DEFAULT NULL,
        nr_events_in              IN consult_req.nr_events%TYPE DEFAULT NULL,
        week_day_in               IN consult_req.week_day%TYPE DEFAULT NULL,
        week_nr_in                IN consult_req.week_nr%TYPE DEFAULT NULL,
        month_day_in              IN consult_req.month_day%TYPE DEFAULT NULL,
        month_nr_in               IN consult_req.month_nr%TYPE DEFAULT NULL,
        id_task_dependency_in     IN consult_req.id_task_dependency%TYPE DEFAULT NULL,
        flg_freq_origin_module_in IN consult_req.flg_freq_origin_module%TYPE DEFAULT NULL,
        id_episode_to_exec_in     IN consult_req.id_episode_to_exec%TYPE DEFAULT NULL,
        id_soft_reg_by_in         IN consult_req.id_soft_reg_by%TYPE DEFAULT NULL,
        ignore_if_null_in         IN BOOLEAN := TRUE,
        handle_error_in           IN BOOLEAN := TRUE,
        clob_columns_in           IN varchar2_t,
        clob_pieces_in            IN varchar2_t
    ) IS
        l_instructions   CLOB;
        l_request_reason CLOB;
        i                PLS_INTEGER;
        current_column   VARCHAR2(30) := '';
        l_rows           PLS_INTEGER;
    BEGIN

        /* Be aware, PLSQL limitations on temporary clobs prevent multiple CLOB
        variables from pointing to the same temporary CLOB (it creates copies).
        Otherwise, the code could have been written a bit more compactly. */

        FOR i IN clob_columns_in.FIRST .. clob_columns_in.LAST
        LOOP
            /* Even when all clobs are null, DOA must send 1 row so skip it. */
            IF clob_columns_in(i) IS NOT NULL
            THEN
                IF current_column <> clob_columns_in(i)
                   OR current_column IS NULL
                THEN
                    current_column := lower(clob_columns_in(i));

                    CASE current_column
                        WHEN 'instructions_in' THEN
                            IF l_instructions IS NULL
                            THEN
                                dbms_lob.createtemporary(l_instructions, TRUE, dbms_lob.CALL);
                            END IF;
                        WHEN 'request_reason_in' THEN
                            IF l_request_reason IS NULL
                            THEN
                                dbms_lob.createtemporary(l_request_reason, TRUE, dbms_lob.CALL);
                            END IF;
                    END CASE; END IF;

                CASE current_column
                    WHEN 'instructions_in' THEN
                        dbms_lob.writeappend(l_instructions, length(clob_pieces_in(i)), clob_pieces_in(i));
                    WHEN 'request_reason_in' THEN
                        dbms_lob.writeappend(l_request_reason, length(clob_pieces_in(i)), clob_pieces_in(i));
                END CASE; END IF;
        END LOOP;

        upd(id_consult_req_in         => id_consult_req_in,
            consult_type_in           => consult_type_in,
            id_clinical_service_in    => id_clinical_service_in,
            id_patient_in             => id_patient_in,
            id_instit_requests_in     => id_instit_requests_in,
            id_inst_requested_in      => id_inst_requested_in,
            id_episode_in             => id_episode_in,
            id_prof_req_in            => id_prof_req_in,
            id_prof_auth_in           => id_prof_auth_in,
            id_prof_appr_in           => id_prof_appr_in,
            id_prof_proc_in           => id_prof_proc_in,
            notes_in                  => notes_in,
            id_prof_cancel_in         => id_prof_cancel_in,
            notes_cancel_in           => notes_cancel_in,
            id_dep_clin_serv_in       => id_dep_clin_serv_in,
            id_prof_requested_in      => id_prof_requested_in,
            flg_status_in             => flg_status_in,
            notes_admin_in            => notes_admin_in,
            id_schedule_in            => id_schedule_in,
            dt_consult_req_tstz_in    => dt_consult_req_tstz_in,
            dt_scheduled_tstz_in      => dt_scheduled_tstz_in,
            dt_cancel_tstz_in         => dt_cancel_tstz_in,
            next_visit_in_notes_in    => next_visit_in_notes_in,
            flg_instructions_in       => flg_instructions_in,
            id_complaint_in           => id_complaint_in,
            flg_type_date_in          => flg_type_date_in,
            status_flg_in             => status_flg_in,
            status_icon_in            => status_icon_in,
            status_msg_in             => status_msg_in,
            status_str_in             => status_str_in,
            reason_for_visit_in       => reason_for_visit_in,
            create_user_in            => create_user_in,
            create_time_in            => create_time_in,
            create_institution_in     => create_institution_in,
            update_user_in            => update_user_in,
            update_time_in            => update_time_in,
            update_institution_in     => update_institution_in,
            flg_type_in               => flg_type_in,
            id_cancel_reason_in       => id_cancel_reason_in,
            id_epis_documentation_in  => id_epis_documentation_in,
            id_epis_type_in           => id_epis_type_in,
            dt_last_update_in         => dt_last_update_in,
            id_prof_last_update_in    => id_prof_last_update_in,
            id_inst_last_update_in    => id_inst_last_update_in,
            id_sch_event_in           => id_sch_event_in,
            dt_begin_event_in         => dt_begin_event_in,
            dt_end_event_in           => dt_end_event_in,
            flg_priority_in           => flg_priority_in,
            flg_contact_type_in       => flg_contact_type_in,
            instructions_in           => l_instructions,
            id_room_in                => id_room_in,
            flg_request_type_in       => flg_request_type_in,
            flg_req_resp_in           => flg_req_resp_in,
            request_reason_in         => l_request_reason,
            id_language_in            => id_language_in,
            flg_recurrence_in         => flg_recurrence_in,
            frequency_in              => frequency_in,
            dt_rec_begin_in           => dt_rec_begin_in,
            dt_rec_end_in             => dt_rec_end_in,
            nr_events_in              => nr_events_in,
            week_day_in               => week_day_in,
            week_nr_in                => week_nr_in,
            month_day_in              => month_day_in,
            month_nr_in               => month_nr_in,
            id_task_dependency_in     => id_task_dependency_in,
            flg_freq_origin_module_in => flg_freq_origin_module_in,
            id_episode_to_exec_in     => id_episode_to_exec_in,
            id_soft_reg_by_in         => id_soft_reg_by_in,
            handle_error_in           => handle_error_in);
    END n_upd_clobs_in_chunks;

    PROCEDURE n_upd_ins_clobs_in_chunks
    (
        id_consult_req_in         IN consult_req.id_consult_req%TYPE,
        consult_type_in           IN consult_req.consult_type%TYPE DEFAULT NULL,
        id_clinical_service_in    IN consult_req.id_clinical_service%TYPE DEFAULT NULL,
        id_patient_in             IN consult_req.id_patient%TYPE DEFAULT NULL,
        id_instit_requests_in     IN consult_req.id_instit_requests%TYPE DEFAULT NULL,
        id_inst_requested_in      IN consult_req.id_inst_requested%TYPE DEFAULT NULL,
        id_episode_in             IN consult_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in            IN consult_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_auth_in           IN consult_req.id_prof_auth%TYPE DEFAULT NULL,
        id_prof_appr_in           IN consult_req.id_prof_appr%TYPE DEFAULT NULL,
        id_prof_proc_in           IN consult_req.id_prof_proc%TYPE DEFAULT NULL,
        notes_in                  IN consult_req.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN consult_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN consult_req.notes_cancel%TYPE DEFAULT NULL,
        id_dep_clin_serv_in       IN consult_req.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_prof_requested_in      IN consult_req.id_prof_requested%TYPE DEFAULT NULL,
        flg_status_in             IN consult_req.flg_status%TYPE DEFAULT NULL,
        notes_admin_in            IN consult_req.notes_admin%TYPE DEFAULT NULL,
        id_schedule_in            IN consult_req.id_schedule%TYPE DEFAULT NULL,
        dt_consult_req_tstz_in    IN consult_req.dt_consult_req_tstz%TYPE DEFAULT NULL,
        dt_scheduled_tstz_in      IN consult_req.dt_scheduled_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN consult_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        next_visit_in_notes_in    IN consult_req.next_visit_in_notes%TYPE DEFAULT NULL,
        flg_instructions_in       IN consult_req.flg_instructions%TYPE DEFAULT NULL,
        id_complaint_in           IN consult_req.id_complaint%TYPE DEFAULT NULL,
        flg_type_date_in          IN consult_req.flg_type_date%TYPE DEFAULT NULL,
        status_flg_in             IN consult_req.status_flg%TYPE DEFAULT NULL,
        status_icon_in            IN consult_req.status_icon%TYPE DEFAULT NULL,
        status_msg_in             IN consult_req.status_msg%TYPE DEFAULT NULL,
        status_str_in             IN consult_req.status_str%TYPE DEFAULT NULL,
        reason_for_visit_in       IN consult_req.reason_for_visit%TYPE DEFAULT NULL,
        create_user_in            IN consult_req.create_user%TYPE DEFAULT NULL,
        create_time_in            IN consult_req.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN consult_req.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN consult_req.update_user%TYPE DEFAULT NULL,
        update_time_in            IN consult_req.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN consult_req.update_institution%TYPE DEFAULT NULL,
        flg_type_in               IN consult_req.flg_type%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN consult_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_epis_documentation_in  IN consult_req.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_type_in           IN consult_req.id_epis_type%TYPE DEFAULT NULL,
        dt_last_update_in         IN consult_req.dt_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN consult_req.id_prof_last_update%TYPE DEFAULT NULL,
        id_inst_last_update_in    IN consult_req.id_inst_last_update%TYPE DEFAULT NULL,
        id_sch_event_in           IN consult_req.id_sch_event%TYPE DEFAULT NULL,
        dt_begin_event_in         IN consult_req.dt_begin_event%TYPE DEFAULT NULL,
        dt_end_event_in           IN consult_req.dt_end_event%TYPE DEFAULT NULL,
        flg_priority_in           IN consult_req.flg_priority%TYPE DEFAULT NULL,
        flg_contact_type_in       IN consult_req.flg_contact_type%TYPE DEFAULT NULL,
        id_room_in                IN consult_req.id_room%TYPE DEFAULT NULL,
        flg_request_type_in       IN consult_req.flg_request_type%TYPE DEFAULT NULL,
        flg_req_resp_in           IN consult_req.flg_req_resp%TYPE DEFAULT NULL,
        id_language_in            IN consult_req.id_language%TYPE DEFAULT NULL,
        flg_recurrence_in         IN consult_req.flg_recurrence%TYPE DEFAULT NULL,
        frequency_in              IN consult_req.frequency%TYPE DEFAULT NULL,
        dt_rec_begin_in           IN consult_req.dt_rec_begin%TYPE DEFAULT NULL,
        dt_rec_end_in             IN consult_req.dt_rec_end%TYPE DEFAULT NULL,
        nr_events_in              IN consult_req.nr_events%TYPE DEFAULT NULL,
        week_day_in               IN consult_req.week_day%TYPE DEFAULT NULL,
        week_nr_in                IN consult_req.week_nr%TYPE DEFAULT NULL,
        month_day_in              IN consult_req.month_day%TYPE DEFAULT NULL,
        month_nr_in               IN consult_req.month_nr%TYPE DEFAULT NULL,
        id_task_dependency_in     IN consult_req.id_task_dependency%TYPE DEFAULT NULL,
        flg_freq_origin_module_in IN consult_req.flg_freq_origin_module%TYPE DEFAULT NULL,
        id_episode_to_exec_in     IN consult_req.id_episode_to_exec%TYPE DEFAULT NULL,
        id_soft_reg_by_in         IN consult_req.id_soft_reg_by%TYPE DEFAULT NULL,
        ignore_if_null_in         IN BOOLEAN DEFAULT TRUE,
        handle_error_in           IN BOOLEAN DEFAULT TRUE,
        clob_columns_in           IN varchar2_t,
        clob_pieces_in            IN varchar2_t
    ) IS
    BEGIN
        n_upd_clobs_in_chunks(id_consult_req_in         => id_consult_req_in,
                              consult_type_in           => consult_type_in,
                              id_clinical_service_in    => id_clinical_service_in,
                              id_patient_in             => id_patient_in,
                              id_instit_requests_in     => id_instit_requests_in,
                              id_inst_requested_in      => id_inst_requested_in,
                              id_episode_in             => id_episode_in,
                              id_prof_req_in            => id_prof_req_in,
                              id_prof_auth_in           => id_prof_auth_in,
                              id_prof_appr_in           => id_prof_appr_in,
                              id_prof_proc_in           => id_prof_proc_in,
                              notes_in                  => notes_in,
                              id_prof_cancel_in         => id_prof_cancel_in,
                              notes_cancel_in           => notes_cancel_in,
                              id_dep_clin_serv_in       => id_dep_clin_serv_in,
                              id_prof_requested_in      => id_prof_requested_in,
                              flg_status_in             => flg_status_in,
                              notes_admin_in            => notes_admin_in,
                              id_schedule_in            => id_schedule_in,
                              dt_consult_req_tstz_in    => dt_consult_req_tstz_in,
                              dt_scheduled_tstz_in      => dt_scheduled_tstz_in,
                              dt_cancel_tstz_in         => dt_cancel_tstz_in,
                              next_visit_in_notes_in    => next_visit_in_notes_in,
                              flg_instructions_in       => flg_instructions_in,
                              id_complaint_in           => id_complaint_in,
                              flg_type_date_in          => flg_type_date_in,
                              status_flg_in             => status_flg_in,
                              status_icon_in            => status_icon_in,
                              status_msg_in             => status_msg_in,
                              status_str_in             => status_str_in,
                              reason_for_visit_in       => reason_for_visit_in,
                              create_user_in            => create_user_in,
                              create_time_in            => create_time_in,
                              create_institution_in     => create_institution_in,
                              update_user_in            => update_user_in,
                              update_time_in            => update_time_in,
                              update_institution_in     => update_institution_in,
                              flg_type_in               => flg_type_in,
                              id_cancel_reason_in       => id_cancel_reason_in,
                              id_epis_documentation_in  => id_epis_documentation_in,
                              id_epis_type_in           => id_epis_type_in,
                              dt_last_update_in         => dt_last_update_in,
                              id_prof_last_update_in    => id_prof_last_update_in,
                              id_inst_last_update_in    => id_inst_last_update_in,
                              id_sch_event_in           => id_sch_event_in,
                              dt_begin_event_in         => dt_begin_event_in,
                              dt_end_event_in           => dt_end_event_in,
                              flg_priority_in           => flg_priority_in,
                              flg_contact_type_in       => flg_contact_type_in,
                              id_room_in                => id_room_in,
                              flg_request_type_in       => flg_request_type_in,
                              flg_req_resp_in           => flg_req_resp_in,
                              id_language_in            => id_language_in,
                              flg_recurrence_in         => flg_recurrence_in,
                              frequency_in              => frequency_in,
                              dt_rec_begin_in           => dt_rec_begin_in,
                              dt_rec_end_in             => dt_rec_end_in,
                              nr_events_in              => nr_events_in,
                              week_day_in               => week_day_in,
                              week_nr_in                => week_nr_in,
                              month_day_in              => month_day_in,
                              month_nr_in               => month_nr_in,
                              id_task_dependency_in     => id_task_dependency_in,
                              flg_freq_origin_module_in => flg_freq_origin_module_in,
                              id_episode_to_exec_in     => id_episode_to_exec_in,
                              id_soft_reg_by_in         => id_soft_reg_by_in,
                              clob_columns_in           => clob_columns_in,
                              clob_pieces_in            => clob_pieces_in,
                              ignore_if_null_in         => ignore_if_null_in,
                              handle_error_in           => handle_error_in);

        IF SQL%ROWCOUNT = 0
        THEN
            n_ins_clobs_in_chunks(id_consult_req_in         => id_consult_req_in,
                                  consult_type_in           => consult_type_in,
                                  id_clinical_service_in    => id_clinical_service_in,
                                  id_patient_in             => id_patient_in,
                                  id_instit_requests_in     => id_instit_requests_in,
                                  id_inst_requested_in      => id_inst_requested_in,
                                  id_episode_in             => id_episode_in,
                                  id_prof_req_in            => id_prof_req_in,
                                  id_prof_auth_in           => id_prof_auth_in,
                                  id_prof_appr_in           => id_prof_appr_in,
                                  id_prof_proc_in           => id_prof_proc_in,
                                  notes_in                  => notes_in,
                                  id_prof_cancel_in         => id_prof_cancel_in,
                                  notes_cancel_in           => notes_cancel_in,
                                  id_dep_clin_serv_in       => id_dep_clin_serv_in,
                                  id_prof_requested_in      => id_prof_requested_in,
                                  flg_status_in             => flg_status_in,
                                  notes_admin_in            => notes_admin_in,
                                  id_schedule_in            => id_schedule_in,
                                  dt_consult_req_tstz_in    => dt_consult_req_tstz_in,
                                  dt_scheduled_tstz_in      => dt_scheduled_tstz_in,
                                  dt_cancel_tstz_in         => dt_cancel_tstz_in,
                                  next_visit_in_notes_in    => next_visit_in_notes_in,
                                  flg_instructions_in       => flg_instructions_in,
                                  id_complaint_in           => id_complaint_in,
                                  flg_type_date_in          => flg_type_date_in,
                                  status_flg_in             => status_flg_in,
                                  status_icon_in            => status_icon_in,
                                  status_msg_in             => status_msg_in,
                                  status_str_in             => status_str_in,
                                  reason_for_visit_in       => reason_for_visit_in,
                                  create_user_in            => create_user_in,
                                  create_time_in            => create_time_in,
                                  create_institution_in     => create_institution_in,
                                  update_user_in            => update_user_in,
                                  update_time_in            => update_time_in,
                                  update_institution_in     => update_institution_in,
                                  flg_type_in               => flg_type_in,
                                  id_cancel_reason_in       => id_cancel_reason_in,
                                  id_epis_documentation_in  => id_epis_documentation_in,
                                  id_epis_type_in           => id_epis_type_in,
                                  dt_last_update_in         => dt_last_update_in,
                                  id_prof_last_update_in    => id_prof_last_update_in,
                                  id_inst_last_update_in    => id_inst_last_update_in,
                                  id_sch_event_in           => id_sch_event_in,
                                  dt_begin_event_in         => dt_begin_event_in,
                                  dt_end_event_in           => dt_end_event_in,
                                  flg_priority_in           => flg_priority_in,
                                  flg_contact_type_in       => flg_contact_type_in,
                                  id_room_in                => id_room_in,
                                  flg_request_type_in       => flg_request_type_in,
                                  flg_req_resp_in           => flg_req_resp_in,
                                  id_language_in            => id_language_in,
                                  flg_recurrence_in         => flg_recurrence_in,
                                  frequency_in              => frequency_in,
                                  dt_rec_begin_in           => dt_rec_begin_in,
                                  dt_rec_end_in             => dt_rec_end_in,
                                  nr_events_in              => nr_events_in,
                                  week_day_in               => week_day_in,
                                  week_nr_in                => week_nr_in,
                                  month_day_in              => month_day_in,
                                  month_nr_in               => month_nr_in,
                                  id_task_dependency_in     => id_task_dependency_in,
                                  flg_freq_origin_module_in => flg_freq_origin_module_in,
                                  id_episode_to_exec_in     => id_episode_to_exec_in,
                                  id_soft_reg_by_in         => id_soft_reg_by_in,
                                  clob_columns_in           => clob_columns_in,
                                  clob_pieces_in            => clob_pieces_in,
                                  handle_error_in           => handle_error_in);
        END IF;
    END n_upd_ins_clobs_in_chunks;

    /*
    END Special logic for handling LOB columns.
    */

    PROCEDURE ins
    (
        rec_in          IN consult_req%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_rec consult_req%ROWTYPE := rec_in;
    BEGIN
        IF gen_pky_in
        THEN
            l_rec.id_consult_req := next_key(sequence_in);
        END IF;
        ins(id_consult_req_in         => l_rec.id_consult_req,
            consult_type_in           => l_rec.consult_type,
            id_clinical_service_in    => l_rec.id_clinical_service,
            id_patient_in             => l_rec.id_patient,
            id_instit_requests_in     => l_rec.id_instit_requests,
            id_inst_requested_in      => l_rec.id_inst_requested,
            id_episode_in             => l_rec.id_episode,
            id_prof_req_in            => l_rec.id_prof_req,
            id_prof_auth_in           => l_rec.id_prof_auth,
            id_prof_appr_in           => l_rec.id_prof_appr,
            id_prof_proc_in           => l_rec.id_prof_proc,
            notes_in                  => l_rec.notes,
            id_prof_cancel_in         => l_rec.id_prof_cancel,
            notes_cancel_in           => l_rec.notes_cancel,
            id_dep_clin_serv_in       => l_rec.id_dep_clin_serv,
            id_prof_requested_in      => l_rec.id_prof_requested,
            flg_status_in             => l_rec.flg_status,
            notes_admin_in            => l_rec.notes_admin,
            id_schedule_in            => l_rec.id_schedule,
            dt_consult_req_tstz_in    => l_rec.dt_consult_req_tstz,
            dt_scheduled_tstz_in      => l_rec.dt_scheduled_tstz,
            dt_cancel_tstz_in         => l_rec.dt_cancel_tstz,
            next_visit_in_notes_in    => l_rec.next_visit_in_notes,
            flg_instructions_in       => l_rec.flg_instructions,
            id_complaint_in           => l_rec.id_complaint,
            flg_type_date_in          => l_rec.flg_type_date,
            status_flg_in             => l_rec.status_flg,
            status_icon_in            => l_rec.status_icon,
            status_msg_in             => l_rec.status_msg,
            status_str_in             => l_rec.status_str,
            reason_for_visit_in       => l_rec.reason_for_visit,
            create_user_in            => l_rec.create_user,
            create_time_in            => l_rec.create_time,
            create_institution_in     => l_rec.create_institution,
            update_user_in            => l_rec.update_user,
            update_time_in            => l_rec.update_time,
            update_institution_in     => l_rec.update_institution,
            flg_type_in               => l_rec.flg_type,
            id_cancel_reason_in       => l_rec.id_cancel_reason,
            id_epis_documentation_in  => l_rec.id_epis_documentation,
            id_epis_type_in           => l_rec.id_epis_type,
            dt_last_update_in         => l_rec.dt_last_update,
            id_prof_last_update_in    => l_rec.id_prof_last_update,
            id_inst_last_update_in    => l_rec.id_inst_last_update,
            id_sch_event_in           => l_rec.id_sch_event,
            dt_begin_event_in         => l_rec.dt_begin_event,
            dt_end_event_in           => l_rec.dt_end_event,
            flg_priority_in           => l_rec.flg_priority,
            flg_contact_type_in       => l_rec.flg_contact_type,
            instructions_in           => l_rec.instructions,
            id_room_in                => l_rec.id_room,
            flg_request_type_in       => l_rec.flg_request_type,
            flg_req_resp_in           => l_rec.flg_req_resp,
            request_reason_in         => l_rec.request_reason,
            id_language_in            => l_rec.id_language,
            flg_recurrence_in         => l_rec.flg_recurrence,
            frequency_in              => l_rec.frequency,
            dt_rec_begin_in           => l_rec.dt_rec_begin,
            dt_rec_end_in             => l_rec.dt_rec_end,
            nr_events_in              => l_rec.nr_events,
            week_day_in               => l_rec.week_day,
            week_nr_in                => l_rec.week_nr,
            month_day_in              => l_rec.month_day,
            month_nr_in               => l_rec.month_nr,
            id_task_dependency_in     => l_rec.id_task_dependency,
            flg_freq_origin_module_in => l_rec.flg_freq_origin_module,
            id_episode_to_exec_in     => l_rec.id_episode_to_exec,
            id_soft_reg_by_in         => l_rec.id_soft_reg_by,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN consult_req%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN

        ins(rec_in          => rec_in,
            gen_pky_in      => gen_pky_in,
            sequence_in     => sequence_in,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);

    END ins;

    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN consult_req.id_consult_req%TYPE

     IS
        retval consult_req.id_consult_req%TYPE;

    BEGIN
        IF sequence_in IS NULL
        THEN
            SELECT seq_consult_req.NEXTVAL
              INTO retval
              FROM dual;
        ELSE
            EXECUTE IMMEDIATE 'SELECT ' || sequence_in || '.NEXTVAL FROM dual'
                INTO retval;
        END IF;
        RETURN retval;
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'SEQUENCE-GENERATION-FAILURE',
                                            name1_in      => 'SEQUENCE',
                                            value1_in     => nvl(sequence_in, 'seq_CONSULT_REQ'));
    END next_key;

    PROCEDURE ins
    (
        consult_type_in           IN consult_req.consult_type%TYPE DEFAULT NULL,
        id_clinical_service_in    IN consult_req.id_clinical_service%TYPE DEFAULT NULL,
        id_patient_in             IN consult_req.id_patient%TYPE DEFAULT NULL,
        id_instit_requests_in     IN consult_req.id_instit_requests%TYPE DEFAULT NULL,
        id_inst_requested_in      IN consult_req.id_inst_requested%TYPE DEFAULT NULL,
        id_episode_in             IN consult_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in            IN consult_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_auth_in           IN consult_req.id_prof_auth%TYPE DEFAULT NULL,
        id_prof_appr_in           IN consult_req.id_prof_appr%TYPE DEFAULT NULL,
        id_prof_proc_in           IN consult_req.id_prof_proc%TYPE DEFAULT NULL,
        notes_in                  IN consult_req.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN consult_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN consult_req.notes_cancel%TYPE DEFAULT NULL,
        id_dep_clin_serv_in       IN consult_req.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_prof_requested_in      IN consult_req.id_prof_requested%TYPE DEFAULT NULL,
        flg_status_in             IN consult_req.flg_status%TYPE DEFAULT NULL,
        notes_admin_in            IN consult_req.notes_admin%TYPE DEFAULT NULL,
        id_schedule_in            IN consult_req.id_schedule%TYPE DEFAULT NULL,
        dt_consult_req_tstz_in    IN consult_req.dt_consult_req_tstz%TYPE DEFAULT NULL,
        dt_scheduled_tstz_in      IN consult_req.dt_scheduled_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN consult_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        next_visit_in_notes_in    IN consult_req.next_visit_in_notes%TYPE DEFAULT NULL,
        flg_instructions_in       IN consult_req.flg_instructions%TYPE DEFAULT NULL,
        id_complaint_in           IN consult_req.id_complaint%TYPE DEFAULT NULL,
        flg_type_date_in          IN consult_req.flg_type_date%TYPE DEFAULT NULL,
        status_flg_in             IN consult_req.status_flg%TYPE DEFAULT NULL,
        status_icon_in            IN consult_req.status_icon%TYPE DEFAULT NULL,
        status_msg_in             IN consult_req.status_msg%TYPE DEFAULT NULL,
        status_str_in             IN consult_req.status_str%TYPE DEFAULT NULL,
        reason_for_visit_in       IN consult_req.reason_for_visit%TYPE DEFAULT NULL,
        create_user_in            IN consult_req.create_user%TYPE DEFAULT NULL,
        create_time_in            IN consult_req.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN consult_req.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN consult_req.update_user%TYPE DEFAULT NULL,
        update_time_in            IN consult_req.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN consult_req.update_institution%TYPE DEFAULT NULL,
        flg_type_in               IN consult_req.flg_type%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN consult_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_epis_documentation_in  IN consult_req.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_type_in           IN consult_req.id_epis_type%TYPE DEFAULT NULL,
        dt_last_update_in         IN consult_req.dt_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN consult_req.id_prof_last_update%TYPE DEFAULT NULL,
        id_inst_last_update_in    IN consult_req.id_inst_last_update%TYPE DEFAULT NULL,
        id_sch_event_in           IN consult_req.id_sch_event%TYPE DEFAULT NULL,
        dt_begin_event_in         IN consult_req.dt_begin_event%TYPE DEFAULT NULL,
        dt_end_event_in           IN consult_req.dt_end_event%TYPE DEFAULT NULL,
        flg_priority_in           IN consult_req.flg_priority%TYPE DEFAULT NULL,
        flg_contact_type_in       IN consult_req.flg_contact_type%TYPE DEFAULT NULL,
        instructions_in           IN consult_req.instructions%TYPE DEFAULT NULL,
        id_room_in                IN consult_req.id_room%TYPE DEFAULT NULL,
        flg_request_type_in       IN consult_req.flg_request_type%TYPE DEFAULT NULL,
        flg_req_resp_in           IN consult_req.flg_req_resp%TYPE DEFAULT NULL,
        request_reason_in         IN consult_req.request_reason%TYPE DEFAULT NULL,
        id_language_in            IN consult_req.id_language%TYPE DEFAULT NULL,
        flg_recurrence_in         IN consult_req.flg_recurrence%TYPE DEFAULT NULL,
        frequency_in              IN consult_req.frequency%TYPE DEFAULT NULL,
        dt_rec_begin_in           IN consult_req.dt_rec_begin%TYPE DEFAULT NULL,
        dt_rec_end_in             IN consult_req.dt_rec_end%TYPE DEFAULT NULL,
        nr_events_in              IN consult_req.nr_events%TYPE DEFAULT NULL,
        week_day_in               IN consult_req.week_day%TYPE DEFAULT NULL,
        week_nr_in                IN consult_req.week_nr%TYPE DEFAULT NULL,
        month_day_in              IN consult_req.month_day%TYPE DEFAULT NULL,
        month_nr_in               IN consult_req.month_nr%TYPE DEFAULT NULL,
        id_task_dependency_in     IN consult_req.id_task_dependency%TYPE DEFAULT NULL,
        flg_freq_origin_module_in IN consult_req.flg_freq_origin_module%TYPE DEFAULT NULL,
        id_episode_to_exec_in     IN consult_req.id_episode_to_exec%TYPE DEFAULT NULL,
        id_soft_reg_by_in         IN consult_req.id_soft_reg_by%TYPE DEFAULT NULL,
        id_consult_req_out        IN OUT consult_req.id_consult_req%TYPE,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  OUT table_varchar
    ) IS
        l_pky consult_req.id_consult_req%TYPE := next_key;
    BEGIN
        ins(id_consult_req_in         => l_pky,
            consult_type_in           => consult_type_in,
            id_clinical_service_in    => id_clinical_service_in,
            id_patient_in             => id_patient_in,
            id_instit_requests_in     => id_instit_requests_in,
            id_inst_requested_in      => id_inst_requested_in,
            id_episode_in             => id_episode_in,
            id_prof_req_in            => id_prof_req_in,
            id_prof_auth_in           => id_prof_auth_in,
            id_prof_appr_in           => id_prof_appr_in,
            id_prof_proc_in           => id_prof_proc_in,
            notes_in                  => notes_in,
            id_prof_cancel_in         => id_prof_cancel_in,
            notes_cancel_in           => notes_cancel_in,
            id_dep_clin_serv_in       => id_dep_clin_serv_in,
            id_prof_requested_in      => id_prof_requested_in,
            flg_status_in             => flg_status_in,
            notes_admin_in            => notes_admin_in,
            id_schedule_in            => id_schedule_in,
            dt_consult_req_tstz_in    => dt_consult_req_tstz_in,
            dt_scheduled_tstz_in      => dt_scheduled_tstz_in,
            dt_cancel_tstz_in         => dt_cancel_tstz_in,
            next_visit_in_notes_in    => next_visit_in_notes_in,
            flg_instructions_in       => flg_instructions_in,
            id_complaint_in           => id_complaint_in,
            flg_type_date_in          => flg_type_date_in,
            status_flg_in             => status_flg_in,
            status_icon_in            => status_icon_in,
            status_msg_in             => status_msg_in,
            status_str_in             => status_str_in,
            reason_for_visit_in       => reason_for_visit_in,
            create_user_in            => create_user_in,
            create_time_in            => create_time_in,
            create_institution_in     => create_institution_in,
            update_user_in            => update_user_in,
            update_time_in            => update_time_in,
            update_institution_in     => update_institution_in,
            flg_type_in               => flg_type_in,
            id_cancel_reason_in       => id_cancel_reason_in,
            id_epis_documentation_in  => id_epis_documentation_in,
            id_epis_type_in           => id_epis_type_in,
            dt_last_update_in         => dt_last_update_in,
            id_prof_last_update_in    => id_prof_last_update_in,
            id_inst_last_update_in    => id_inst_last_update_in,
            id_sch_event_in           => id_sch_event_in,
            dt_begin_event_in         => dt_begin_event_in,
            dt_end_event_in           => dt_end_event_in,
            flg_priority_in           => flg_priority_in,
            flg_contact_type_in       => flg_contact_type_in,
            instructions_in           => instructions_in,
            id_room_in                => id_room_in,
            flg_request_type_in       => flg_request_type_in,
            flg_req_resp_in           => flg_req_resp_in,
            request_reason_in         => request_reason_in,
            id_language_in            => id_language_in,
            flg_recurrence_in         => flg_recurrence_in,
            frequency_in              => frequency_in,
            dt_rec_begin_in           => dt_rec_begin_in,
            dt_rec_end_in             => dt_rec_end_in,
            nr_events_in              => nr_events_in,
            week_day_in               => week_day_in,
            week_nr_in                => week_nr_in,
            month_day_in              => month_day_in,
            month_nr_in               => month_nr_in,
            id_task_dependency_in     => id_task_dependency_in,
            flg_freq_origin_module_in => flg_freq_origin_module_in,
            id_episode_to_exec_in     => id_episode_to_exec_in,
            id_soft_reg_by_in         => id_soft_reg_by_in,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
        id_consult_req_out := l_pky;
    END ins;

    PROCEDURE ins
    (
        consult_type_in           IN consult_req.consult_type%TYPE DEFAULT NULL,
        id_clinical_service_in    IN consult_req.id_clinical_service%TYPE DEFAULT NULL,
        id_patient_in             IN consult_req.id_patient%TYPE DEFAULT NULL,
        id_instit_requests_in     IN consult_req.id_instit_requests%TYPE DEFAULT NULL,
        id_inst_requested_in      IN consult_req.id_inst_requested%TYPE DEFAULT NULL,
        id_episode_in             IN consult_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in            IN consult_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_auth_in           IN consult_req.id_prof_auth%TYPE DEFAULT NULL,
        id_prof_appr_in           IN consult_req.id_prof_appr%TYPE DEFAULT NULL,
        id_prof_proc_in           IN consult_req.id_prof_proc%TYPE DEFAULT NULL,
        notes_in                  IN consult_req.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN consult_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN consult_req.notes_cancel%TYPE DEFAULT NULL,
        id_dep_clin_serv_in       IN consult_req.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_prof_requested_in      IN consult_req.id_prof_requested%TYPE DEFAULT NULL,
        flg_status_in             IN consult_req.flg_status%TYPE DEFAULT NULL,
        notes_admin_in            IN consult_req.notes_admin%TYPE DEFAULT NULL,
        id_schedule_in            IN consult_req.id_schedule%TYPE DEFAULT NULL,
        dt_consult_req_tstz_in    IN consult_req.dt_consult_req_tstz%TYPE DEFAULT NULL,
        dt_scheduled_tstz_in      IN consult_req.dt_scheduled_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN consult_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        next_visit_in_notes_in    IN consult_req.next_visit_in_notes%TYPE DEFAULT NULL,
        flg_instructions_in       IN consult_req.flg_instructions%TYPE DEFAULT NULL,
        id_complaint_in           IN consult_req.id_complaint%TYPE DEFAULT NULL,
        flg_type_date_in          IN consult_req.flg_type_date%TYPE DEFAULT NULL,
        status_flg_in             IN consult_req.status_flg%TYPE DEFAULT NULL,
        status_icon_in            IN consult_req.status_icon%TYPE DEFAULT NULL,
        status_msg_in             IN consult_req.status_msg%TYPE DEFAULT NULL,
        status_str_in             IN consult_req.status_str%TYPE DEFAULT NULL,
        reason_for_visit_in       IN consult_req.reason_for_visit%TYPE DEFAULT NULL,
        create_user_in            IN consult_req.create_user%TYPE DEFAULT NULL,
        create_time_in            IN consult_req.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN consult_req.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN consult_req.update_user%TYPE DEFAULT NULL,
        update_time_in            IN consult_req.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN consult_req.update_institution%TYPE DEFAULT NULL,
        flg_type_in               IN consult_req.flg_type%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN consult_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_epis_documentation_in  IN consult_req.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_type_in           IN consult_req.id_epis_type%TYPE DEFAULT NULL,
        dt_last_update_in         IN consult_req.dt_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN consult_req.id_prof_last_update%TYPE DEFAULT NULL,
        id_inst_last_update_in    IN consult_req.id_inst_last_update%TYPE DEFAULT NULL,
        id_sch_event_in           IN consult_req.id_sch_event%TYPE DEFAULT NULL,
        dt_begin_event_in         IN consult_req.dt_begin_event%TYPE DEFAULT NULL,
        dt_end_event_in           IN consult_req.dt_end_event%TYPE DEFAULT NULL,
        flg_priority_in           IN consult_req.flg_priority%TYPE DEFAULT NULL,
        flg_contact_type_in       IN consult_req.flg_contact_type%TYPE DEFAULT NULL,
        instructions_in           IN consult_req.instructions%TYPE DEFAULT NULL,
        id_room_in                IN consult_req.id_room%TYPE DEFAULT NULL,
        flg_request_type_in       IN consult_req.flg_request_type%TYPE DEFAULT NULL,
        flg_req_resp_in           IN consult_req.flg_req_resp%TYPE DEFAULT NULL,
        request_reason_in         IN consult_req.request_reason%TYPE DEFAULT NULL,
        id_language_in            IN consult_req.id_language%TYPE DEFAULT NULL,
        flg_recurrence_in         IN consult_req.flg_recurrence%TYPE DEFAULT NULL,
        frequency_in              IN consult_req.frequency%TYPE DEFAULT NULL,
        dt_rec_begin_in           IN consult_req.dt_rec_begin%TYPE DEFAULT NULL,
        dt_rec_end_in             IN consult_req.dt_rec_end%TYPE DEFAULT NULL,
        nr_events_in              IN consult_req.nr_events%TYPE DEFAULT NULL,
        week_day_in               IN consult_req.week_day%TYPE DEFAULT NULL,
        week_nr_in                IN consult_req.week_nr%TYPE DEFAULT NULL,
        month_day_in              IN consult_req.month_day%TYPE DEFAULT NULL,
        month_nr_in               IN consult_req.month_nr%TYPE DEFAULT NULL,
        id_task_dependency_in     IN consult_req.id_task_dependency%TYPE DEFAULT NULL,
        flg_freq_origin_module_in IN consult_req.flg_freq_origin_module%TYPE DEFAULT NULL,
        id_episode_to_exec_in     IN consult_req.id_episode_to_exec%TYPE DEFAULT NULL,
        id_soft_reg_by_in         IN consult_req.id_soft_reg_by%TYPE DEFAULT NULL,
        id_consult_req_out        IN OUT consult_req.id_consult_req%TYPE,
        handle_error_in           IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(consult_type_in           => consult_type_in,
            id_clinical_service_in    => id_clinical_service_in,
            id_patient_in             => id_patient_in,
            id_instit_requests_in     => id_instit_requests_in,
            id_inst_requested_in      => id_inst_requested_in,
            id_episode_in             => id_episode_in,
            id_prof_req_in            => id_prof_req_in,
            id_prof_auth_in           => id_prof_auth_in,
            id_prof_appr_in           => id_prof_appr_in,
            id_prof_proc_in           => id_prof_proc_in,
            notes_in                  => notes_in,
            id_prof_cancel_in         => id_prof_cancel_in,
            notes_cancel_in           => notes_cancel_in,
            id_dep_clin_serv_in       => id_dep_clin_serv_in,
            id_prof_requested_in      => id_prof_requested_in,
            flg_status_in             => flg_status_in,
            notes_admin_in            => notes_admin_in,
            id_schedule_in            => id_schedule_in,
            dt_consult_req_tstz_in    => dt_consult_req_tstz_in,
            dt_scheduled_tstz_in      => dt_scheduled_tstz_in,
            dt_cancel_tstz_in         => dt_cancel_tstz_in,
            next_visit_in_notes_in    => next_visit_in_notes_in,
            flg_instructions_in       => flg_instructions_in,
            id_complaint_in           => id_complaint_in,
            flg_type_date_in          => flg_type_date_in,
            status_flg_in             => status_flg_in,
            status_icon_in            => status_icon_in,
            status_msg_in             => status_msg_in,
            status_str_in             => status_str_in,
            reason_for_visit_in       => reason_for_visit_in,
            create_user_in            => create_user_in,
            create_time_in            => create_time_in,
            create_institution_in     => create_institution_in,
            update_user_in            => update_user_in,
            update_time_in            => update_time_in,
            update_institution_in     => update_institution_in,
            flg_type_in               => flg_type_in,
            id_cancel_reason_in       => id_cancel_reason_in,
            id_epis_documentation_in  => id_epis_documentation_in,
            id_epis_type_in           => id_epis_type_in,
            dt_last_update_in         => dt_last_update_in,
            id_prof_last_update_in    => id_prof_last_update_in,
            id_inst_last_update_in    => id_inst_last_update_in,
            id_sch_event_in           => id_sch_event_in,
            dt_begin_event_in         => dt_begin_event_in,
            dt_end_event_in           => dt_end_event_in,
            flg_priority_in           => flg_priority_in,
            flg_contact_type_in       => flg_contact_type_in,
            instructions_in           => instructions_in,
            id_room_in                => id_room_in,
            flg_request_type_in       => flg_request_type_in,
            flg_req_resp_in           => flg_req_resp_in,
            request_reason_in         => request_reason_in,
            id_language_in            => id_language_in,
            flg_recurrence_in         => flg_recurrence_in,
            frequency_in              => frequency_in,
            dt_rec_begin_in           => dt_rec_begin_in,
            dt_rec_end_in             => dt_rec_end_in,
            nr_events_in              => nr_events_in,
            week_day_in               => week_day_in,
            week_nr_in                => week_nr_in,
            month_day_in              => month_day_in,
            month_nr_in               => month_nr_in,
            id_task_dependency_in     => id_task_dependency_in,
            flg_freq_origin_module_in => flg_freq_origin_module_in,
            id_episode_to_exec_in     => id_episode_to_exec_in,
            id_soft_reg_by_in         => id_soft_reg_by_in,
            id_consult_req_out        => id_consult_req_out,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
    END ins;

    FUNCTION ins
    (
        consult_type_in           IN consult_req.consult_type%TYPE DEFAULT NULL,
        id_clinical_service_in    IN consult_req.id_clinical_service%TYPE DEFAULT NULL,
        id_patient_in             IN consult_req.id_patient%TYPE DEFAULT NULL,
        id_instit_requests_in     IN consult_req.id_instit_requests%TYPE DEFAULT NULL,
        id_inst_requested_in      IN consult_req.id_inst_requested%TYPE DEFAULT NULL,
        id_episode_in             IN consult_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in            IN consult_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_auth_in           IN consult_req.id_prof_auth%TYPE DEFAULT NULL,
        id_prof_appr_in           IN consult_req.id_prof_appr%TYPE DEFAULT NULL,
        id_prof_proc_in           IN consult_req.id_prof_proc%TYPE DEFAULT NULL,
        notes_in                  IN consult_req.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN consult_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN consult_req.notes_cancel%TYPE DEFAULT NULL,
        id_dep_clin_serv_in       IN consult_req.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_prof_requested_in      IN consult_req.id_prof_requested%TYPE DEFAULT NULL,
        flg_status_in             IN consult_req.flg_status%TYPE DEFAULT NULL,
        notes_admin_in            IN consult_req.notes_admin%TYPE DEFAULT NULL,
        id_schedule_in            IN consult_req.id_schedule%TYPE DEFAULT NULL,
        dt_consult_req_tstz_in    IN consult_req.dt_consult_req_tstz%TYPE DEFAULT NULL,
        dt_scheduled_tstz_in      IN consult_req.dt_scheduled_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN consult_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        next_visit_in_notes_in    IN consult_req.next_visit_in_notes%TYPE DEFAULT NULL,
        flg_instructions_in       IN consult_req.flg_instructions%TYPE DEFAULT NULL,
        id_complaint_in           IN consult_req.id_complaint%TYPE DEFAULT NULL,
        flg_type_date_in          IN consult_req.flg_type_date%TYPE DEFAULT NULL,
        status_flg_in             IN consult_req.status_flg%TYPE DEFAULT NULL,
        status_icon_in            IN consult_req.status_icon%TYPE DEFAULT NULL,
        status_msg_in             IN consult_req.status_msg%TYPE DEFAULT NULL,
        status_str_in             IN consult_req.status_str%TYPE DEFAULT NULL,
        reason_for_visit_in       IN consult_req.reason_for_visit%TYPE DEFAULT NULL,
        create_user_in            IN consult_req.create_user%TYPE DEFAULT NULL,
        create_time_in            IN consult_req.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN consult_req.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN consult_req.update_user%TYPE DEFAULT NULL,
        update_time_in            IN consult_req.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN consult_req.update_institution%TYPE DEFAULT NULL,
        flg_type_in               IN consult_req.flg_type%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN consult_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_epis_documentation_in  IN consult_req.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_type_in           IN consult_req.id_epis_type%TYPE DEFAULT NULL,
        dt_last_update_in         IN consult_req.dt_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN consult_req.id_prof_last_update%TYPE DEFAULT NULL,
        id_inst_last_update_in    IN consult_req.id_inst_last_update%TYPE DEFAULT NULL,
        id_sch_event_in           IN consult_req.id_sch_event%TYPE DEFAULT NULL,
        dt_begin_event_in         IN consult_req.dt_begin_event%TYPE DEFAULT NULL,
        dt_end_event_in           IN consult_req.dt_end_event%TYPE DEFAULT NULL,
        flg_priority_in           IN consult_req.flg_priority%TYPE DEFAULT NULL,
        flg_contact_type_in       IN consult_req.flg_contact_type%TYPE DEFAULT NULL,
        instructions_in           IN consult_req.instructions%TYPE DEFAULT NULL,
        id_room_in                IN consult_req.id_room%TYPE DEFAULT NULL,
        flg_request_type_in       IN consult_req.flg_request_type%TYPE DEFAULT NULL,
        flg_req_resp_in           IN consult_req.flg_req_resp%TYPE DEFAULT NULL,
        request_reason_in         IN consult_req.request_reason%TYPE DEFAULT NULL,
        id_language_in            IN consult_req.id_language%TYPE DEFAULT NULL,
        flg_recurrence_in         IN consult_req.flg_recurrence%TYPE DEFAULT NULL,
        frequency_in              IN consult_req.frequency%TYPE DEFAULT NULL,
        dt_rec_begin_in           IN consult_req.dt_rec_begin%TYPE DEFAULT NULL,
        dt_rec_end_in             IN consult_req.dt_rec_end%TYPE DEFAULT NULL,
        nr_events_in              IN consult_req.nr_events%TYPE DEFAULT NULL,
        week_day_in               IN consult_req.week_day%TYPE DEFAULT NULL,
        week_nr_in                IN consult_req.week_nr%TYPE DEFAULT NULL,
        month_day_in              IN consult_req.month_day%TYPE DEFAULT NULL,
        month_nr_in               IN consult_req.month_nr%TYPE DEFAULT NULL,
        id_task_dependency_in     IN consult_req.id_task_dependency%TYPE DEFAULT NULL,
        flg_freq_origin_module_in IN consult_req.flg_freq_origin_module%TYPE DEFAULT NULL,
        id_episode_to_exec_in     IN consult_req.id_episode_to_exec%TYPE DEFAULT NULL,
        id_soft_reg_by_in         IN consult_req.id_soft_reg_by%TYPE DEFAULT NULL,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  OUT table_varchar
    ) RETURN consult_req.id_consult_req%TYPE IS
        l_pky consult_req.id_consult_req%TYPE := next_key;
    BEGIN
        ins(id_consult_req_in         => l_pky,
            consult_type_in           => consult_type_in,
            id_clinical_service_in    => id_clinical_service_in,
            id_patient_in             => id_patient_in,
            id_instit_requests_in     => id_instit_requests_in,
            id_inst_requested_in      => id_inst_requested_in,
            id_episode_in             => id_episode_in,
            id_prof_req_in            => id_prof_req_in,
            id_prof_auth_in           => id_prof_auth_in,
            id_prof_appr_in           => id_prof_appr_in,
            id_prof_proc_in           => id_prof_proc_in,
            notes_in                  => notes_in,
            id_prof_cancel_in         => id_prof_cancel_in,
            notes_cancel_in           => notes_cancel_in,
            id_dep_clin_serv_in       => id_dep_clin_serv_in,
            id_prof_requested_in      => id_prof_requested_in,
            flg_status_in             => flg_status_in,
            notes_admin_in            => notes_admin_in,
            id_schedule_in            => id_schedule_in,
            dt_consult_req_tstz_in    => dt_consult_req_tstz_in,
            dt_scheduled_tstz_in      => dt_scheduled_tstz_in,
            dt_cancel_tstz_in         => dt_cancel_tstz_in,
            next_visit_in_notes_in    => next_visit_in_notes_in,
            flg_instructions_in       => flg_instructions_in,
            id_complaint_in           => id_complaint_in,
            flg_type_date_in          => flg_type_date_in,
            status_flg_in             => status_flg_in,
            status_icon_in            => status_icon_in,
            status_msg_in             => status_msg_in,
            status_str_in             => status_str_in,
            reason_for_visit_in       => reason_for_visit_in,
            create_user_in            => create_user_in,
            create_time_in            => create_time_in,
            create_institution_in     => create_institution_in,
            update_user_in            => update_user_in,
            update_time_in            => update_time_in,
            update_institution_in     => update_institution_in,
            flg_type_in               => flg_type_in,
            id_cancel_reason_in       => id_cancel_reason_in,
            id_epis_documentation_in  => id_epis_documentation_in,
            id_epis_type_in           => id_epis_type_in,
            dt_last_update_in         => dt_last_update_in,
            id_prof_last_update_in    => id_prof_last_update_in,
            id_inst_last_update_in    => id_inst_last_update_in,
            id_sch_event_in           => id_sch_event_in,
            dt_begin_event_in         => dt_begin_event_in,
            dt_end_event_in           => dt_end_event_in,
            flg_priority_in           => flg_priority_in,
            flg_contact_type_in       => flg_contact_type_in,
            instructions_in           => instructions_in,
            id_room_in                => id_room_in,
            flg_request_type_in       => flg_request_type_in,
            flg_req_resp_in           => flg_req_resp_in,
            request_reason_in         => request_reason_in,
            id_language_in            => id_language_in,
            flg_recurrence_in         => flg_recurrence_in,
            frequency_in              => frequency_in,
            dt_rec_begin_in           => dt_rec_begin_in,
            dt_rec_end_in             => dt_rec_end_in,
            nr_events_in              => nr_events_in,
            week_day_in               => week_day_in,
            week_nr_in                => week_nr_in,
            month_day_in              => month_day_in,
            month_nr_in               => month_nr_in,
            id_task_dependency_in     => id_task_dependency_in,
            flg_freq_origin_module_in => flg_freq_origin_module_in,
            id_episode_to_exec_in     => id_episode_to_exec_in,
            id_soft_reg_by_in         => id_soft_reg_by_in,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
        RETURN l_pky;
    END ins;

    FUNCTION ins
    (
        consult_type_in           IN consult_req.consult_type%TYPE DEFAULT NULL,
        id_clinical_service_in    IN consult_req.id_clinical_service%TYPE DEFAULT NULL,
        id_patient_in             IN consult_req.id_patient%TYPE DEFAULT NULL,
        id_instit_requests_in     IN consult_req.id_instit_requests%TYPE DEFAULT NULL,
        id_inst_requested_in      IN consult_req.id_inst_requested%TYPE DEFAULT NULL,
        id_episode_in             IN consult_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in            IN consult_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_auth_in           IN consult_req.id_prof_auth%TYPE DEFAULT NULL,
        id_prof_appr_in           IN consult_req.id_prof_appr%TYPE DEFAULT NULL,
        id_prof_proc_in           IN consult_req.id_prof_proc%TYPE DEFAULT NULL,
        notes_in                  IN consult_req.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN consult_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN consult_req.notes_cancel%TYPE DEFAULT NULL,
        id_dep_clin_serv_in       IN consult_req.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_prof_requested_in      IN consult_req.id_prof_requested%TYPE DEFAULT NULL,
        flg_status_in             IN consult_req.flg_status%TYPE DEFAULT NULL,
        notes_admin_in            IN consult_req.notes_admin%TYPE DEFAULT NULL,
        id_schedule_in            IN consult_req.id_schedule%TYPE DEFAULT NULL,
        dt_consult_req_tstz_in    IN consult_req.dt_consult_req_tstz%TYPE DEFAULT NULL,
        dt_scheduled_tstz_in      IN consult_req.dt_scheduled_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN consult_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        next_visit_in_notes_in    IN consult_req.next_visit_in_notes%TYPE DEFAULT NULL,
        flg_instructions_in       IN consult_req.flg_instructions%TYPE DEFAULT NULL,
        id_complaint_in           IN consult_req.id_complaint%TYPE DEFAULT NULL,
        flg_type_date_in          IN consult_req.flg_type_date%TYPE DEFAULT NULL,
        status_flg_in             IN consult_req.status_flg%TYPE DEFAULT NULL,
        status_icon_in            IN consult_req.status_icon%TYPE DEFAULT NULL,
        status_msg_in             IN consult_req.status_msg%TYPE DEFAULT NULL,
        status_str_in             IN consult_req.status_str%TYPE DEFAULT NULL,
        reason_for_visit_in       IN consult_req.reason_for_visit%TYPE DEFAULT NULL,
        create_user_in            IN consult_req.create_user%TYPE DEFAULT NULL,
        create_time_in            IN consult_req.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN consult_req.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN consult_req.update_user%TYPE DEFAULT NULL,
        update_time_in            IN consult_req.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN consult_req.update_institution%TYPE DEFAULT NULL,
        flg_type_in               IN consult_req.flg_type%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN consult_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_epis_documentation_in  IN consult_req.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_type_in           IN consult_req.id_epis_type%TYPE DEFAULT NULL,
        dt_last_update_in         IN consult_req.dt_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN consult_req.id_prof_last_update%TYPE DEFAULT NULL,
        id_inst_last_update_in    IN consult_req.id_inst_last_update%TYPE DEFAULT NULL,
        id_sch_event_in           IN consult_req.id_sch_event%TYPE DEFAULT NULL,
        dt_begin_event_in         IN consult_req.dt_begin_event%TYPE DEFAULT NULL,
        dt_end_event_in           IN consult_req.dt_end_event%TYPE DEFAULT NULL,
        flg_priority_in           IN consult_req.flg_priority%TYPE DEFAULT NULL,
        flg_contact_type_in       IN consult_req.flg_contact_type%TYPE DEFAULT NULL,
        instructions_in           IN consult_req.instructions%TYPE DEFAULT NULL,
        id_room_in                IN consult_req.id_room%TYPE DEFAULT NULL,
        flg_request_type_in       IN consult_req.flg_request_type%TYPE DEFAULT NULL,
        flg_req_resp_in           IN consult_req.flg_req_resp%TYPE DEFAULT NULL,
        request_reason_in         IN consult_req.request_reason%TYPE DEFAULT NULL,
        id_language_in            IN consult_req.id_language%TYPE DEFAULT NULL,
        flg_recurrence_in         IN consult_req.flg_recurrence%TYPE DEFAULT NULL,
        frequency_in              IN consult_req.frequency%TYPE DEFAULT NULL,
        dt_rec_begin_in           IN consult_req.dt_rec_begin%TYPE DEFAULT NULL,
        dt_rec_end_in             IN consult_req.dt_rec_end%TYPE DEFAULT NULL,
        nr_events_in              IN consult_req.nr_events%TYPE DEFAULT NULL,
        week_day_in               IN consult_req.week_day%TYPE DEFAULT NULL,
        week_nr_in                IN consult_req.week_nr%TYPE DEFAULT NULL,
        month_day_in              IN consult_req.month_day%TYPE DEFAULT NULL,
        month_nr_in               IN consult_req.month_nr%TYPE DEFAULT NULL,
        id_task_dependency_in     IN consult_req.id_task_dependency%TYPE DEFAULT NULL,
        flg_freq_origin_module_in IN consult_req.flg_freq_origin_module%TYPE DEFAULT NULL,
        id_episode_to_exec_in     IN consult_req.id_episode_to_exec%TYPE DEFAULT NULL,
        id_soft_reg_by_in         IN consult_req.id_soft_reg_by%TYPE DEFAULT NULL,
        handle_error_in           IN BOOLEAN := TRUE
    ) RETURN consult_req.id_consult_req%TYPE IS
        l_pky    consult_req.id_consult_req%TYPE := next_key;
        rows_out table_varchar;
    BEGIN
        ins(id_consult_req_in         => l_pky,
            consult_type_in           => consult_type_in,
            id_clinical_service_in    => id_clinical_service_in,
            id_patient_in             => id_patient_in,
            id_instit_requests_in     => id_instit_requests_in,
            id_inst_requested_in      => id_inst_requested_in,
            id_episode_in             => id_episode_in,
            id_prof_req_in            => id_prof_req_in,
            id_prof_auth_in           => id_prof_auth_in,
            id_prof_appr_in           => id_prof_appr_in,
            id_prof_proc_in           => id_prof_proc_in,
            notes_in                  => notes_in,
            id_prof_cancel_in         => id_prof_cancel_in,
            notes_cancel_in           => notes_cancel_in,
            id_dep_clin_serv_in       => id_dep_clin_serv_in,
            id_prof_requested_in      => id_prof_requested_in,
            flg_status_in             => flg_status_in,
            notes_admin_in            => notes_admin_in,
            id_schedule_in            => id_schedule_in,
            dt_consult_req_tstz_in    => dt_consult_req_tstz_in,
            dt_scheduled_tstz_in      => dt_scheduled_tstz_in,
            dt_cancel_tstz_in         => dt_cancel_tstz_in,
            next_visit_in_notes_in    => next_visit_in_notes_in,
            flg_instructions_in       => flg_instructions_in,
            id_complaint_in           => id_complaint_in,
            flg_type_date_in          => flg_type_date_in,
            status_flg_in             => status_flg_in,
            status_icon_in            => status_icon_in,
            status_msg_in             => status_msg_in,
            status_str_in             => status_str_in,
            reason_for_visit_in       => reason_for_visit_in,
            create_user_in            => create_user_in,
            create_time_in            => create_time_in,
            create_institution_in     => create_institution_in,
            update_user_in            => update_user_in,
            update_time_in            => update_time_in,
            update_institution_in     => update_institution_in,
            flg_type_in               => flg_type_in,
            id_cancel_reason_in       => id_cancel_reason_in,
            id_epis_documentation_in  => id_epis_documentation_in,
            id_epis_type_in           => id_epis_type_in,
            dt_last_update_in         => dt_last_update_in,
            id_prof_last_update_in    => id_prof_last_update_in,
            id_inst_last_update_in    => id_inst_last_update_in,
            id_sch_event_in           => id_sch_event_in,
            dt_begin_event_in         => dt_begin_event_in,
            dt_end_event_in           => dt_end_event_in,
            flg_priority_in           => flg_priority_in,
            flg_contact_type_in       => flg_contact_type_in,
            instructions_in           => instructions_in,
            id_room_in                => id_room_in,
            flg_request_type_in       => flg_request_type_in,
            flg_req_resp_in           => flg_req_resp_in,
            request_reason_in         => request_reason_in,
            id_language_in            => id_language_in,
            flg_recurrence_in         => flg_recurrence_in,
            frequency_in              => frequency_in,
            dt_rec_begin_in           => dt_rec_begin_in,
            dt_rec_end_in             => dt_rec_end_in,
            nr_events_in              => nr_events_in,
            week_day_in               => week_day_in,
            week_nr_in                => week_nr_in,
            month_day_in              => month_day_in,
            month_nr_in               => month_nr_in,
            id_task_dependency_in     => id_task_dependency_in,
            flg_freq_origin_module_in => flg_freq_origin_module_in,
            id_episode_to_exec_in     => id_episode_to_exec_in,
            id_soft_reg_by_in         => id_soft_reg_by_in,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
        RETURN l_pky;
    END ins;

    PROCEDURE ins
    (
        consult_type_in           IN consult_req.consult_type%TYPE DEFAULT NULL,
        id_clinical_service_in    IN consult_req.id_clinical_service%TYPE DEFAULT NULL,
        id_patient_in             IN consult_req.id_patient%TYPE DEFAULT NULL,
        id_instit_requests_in     IN consult_req.id_instit_requests%TYPE DEFAULT NULL,
        id_inst_requested_in      IN consult_req.id_inst_requested%TYPE DEFAULT NULL,
        id_episode_in             IN consult_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in            IN consult_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_auth_in           IN consult_req.id_prof_auth%TYPE DEFAULT NULL,
        id_prof_appr_in           IN consult_req.id_prof_appr%TYPE DEFAULT NULL,
        id_prof_proc_in           IN consult_req.id_prof_proc%TYPE DEFAULT NULL,
        notes_in                  IN consult_req.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN consult_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN consult_req.notes_cancel%TYPE DEFAULT NULL,
        id_dep_clin_serv_in       IN consult_req.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_prof_requested_in      IN consult_req.id_prof_requested%TYPE DEFAULT NULL,
        flg_status_in             IN consult_req.flg_status%TYPE DEFAULT NULL,
        notes_admin_in            IN consult_req.notes_admin%TYPE DEFAULT NULL,
        id_schedule_in            IN consult_req.id_schedule%TYPE DEFAULT NULL,
        dt_consult_req_tstz_in    IN consult_req.dt_consult_req_tstz%TYPE DEFAULT NULL,
        dt_scheduled_tstz_in      IN consult_req.dt_scheduled_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN consult_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        next_visit_in_notes_in    IN consult_req.next_visit_in_notes%TYPE DEFAULT NULL,
        flg_instructions_in       IN consult_req.flg_instructions%TYPE DEFAULT NULL,
        id_complaint_in           IN consult_req.id_complaint%TYPE DEFAULT NULL,
        flg_type_date_in          IN consult_req.flg_type_date%TYPE DEFAULT NULL,
        status_flg_in             IN consult_req.status_flg%TYPE DEFAULT NULL,
        status_icon_in            IN consult_req.status_icon%TYPE DEFAULT NULL,
        status_msg_in             IN consult_req.status_msg%TYPE DEFAULT NULL,
        status_str_in             IN consult_req.status_str%TYPE DEFAULT NULL,
        reason_for_visit_in       IN consult_req.reason_for_visit%TYPE DEFAULT NULL,
        create_user_in            IN consult_req.create_user%TYPE DEFAULT NULL,
        create_time_in            IN consult_req.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN consult_req.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN consult_req.update_user%TYPE DEFAULT NULL,
        update_time_in            IN consult_req.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN consult_req.update_institution%TYPE DEFAULT NULL,
        flg_type_in               IN consult_req.flg_type%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN consult_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_epis_documentation_in  IN consult_req.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_type_in           IN consult_req.id_epis_type%TYPE DEFAULT NULL,
        dt_last_update_in         IN consult_req.dt_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN consult_req.id_prof_last_update%TYPE DEFAULT NULL,
        id_inst_last_update_in    IN consult_req.id_inst_last_update%TYPE DEFAULT NULL,
        id_sch_event_in           IN consult_req.id_sch_event%TYPE DEFAULT NULL,
        dt_begin_event_in         IN consult_req.dt_begin_event%TYPE DEFAULT NULL,
        dt_end_event_in           IN consult_req.dt_end_event%TYPE DEFAULT NULL,
        flg_priority_in           IN consult_req.flg_priority%TYPE DEFAULT NULL,
        flg_contact_type_in       IN consult_req.flg_contact_type%TYPE DEFAULT NULL,
        instructions_in           IN consult_req.instructions%TYPE DEFAULT NULL,
        id_room_in                IN consult_req.id_room%TYPE DEFAULT NULL,
        flg_request_type_in       IN consult_req.flg_request_type%TYPE DEFAULT NULL,
        flg_req_resp_in           IN consult_req.flg_req_resp%TYPE DEFAULT NULL,
        request_reason_in         IN consult_req.request_reason%TYPE DEFAULT NULL,
        id_language_in            IN consult_req.id_language%TYPE DEFAULT NULL,
        flg_recurrence_in         IN consult_req.flg_recurrence%TYPE DEFAULT NULL,
        frequency_in              IN consult_req.frequency%TYPE DEFAULT NULL,
        dt_rec_begin_in           IN consult_req.dt_rec_begin%TYPE DEFAULT NULL,
        dt_rec_end_in             IN consult_req.dt_rec_end%TYPE DEFAULT NULL,
        nr_events_in              IN consult_req.nr_events%TYPE DEFAULT NULL,
        week_day_in               IN consult_req.week_day%TYPE DEFAULT NULL,
        week_nr_in                IN consult_req.week_nr%TYPE DEFAULT NULL,
        month_day_in              IN consult_req.month_day%TYPE DEFAULT NULL,
        month_nr_in               IN consult_req.month_nr%TYPE DEFAULT NULL,
        id_task_dependency_in     IN consult_req.id_task_dependency%TYPE DEFAULT NULL,
        flg_freq_origin_module_in IN consult_req.flg_freq_origin_module%TYPE DEFAULT NULL,
        id_episode_to_exec_in     IN consult_req.id_episode_to_exec%TYPE DEFAULT NULL,
        id_soft_reg_by_in         IN consult_req.id_soft_reg_by%TYPE DEFAULT NULL,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  OUT table_varchar
    ) IS
        l_pky consult_req.id_consult_req%TYPE := next_key;
    BEGIN
        ins(id_consult_req_in         => l_pky,
            consult_type_in           => consult_type_in,
            id_clinical_service_in    => id_clinical_service_in,
            id_patient_in             => id_patient_in,
            id_instit_requests_in     => id_instit_requests_in,
            id_inst_requested_in      => id_inst_requested_in,
            id_episode_in             => id_episode_in,
            id_prof_req_in            => id_prof_req_in,
            id_prof_auth_in           => id_prof_auth_in,
            id_prof_appr_in           => id_prof_appr_in,
            id_prof_proc_in           => id_prof_proc_in,
            notes_in                  => notes_in,
            id_prof_cancel_in         => id_prof_cancel_in,
            notes_cancel_in           => notes_cancel_in,
            id_dep_clin_serv_in       => id_dep_clin_serv_in,
            id_prof_requested_in      => id_prof_requested_in,
            flg_status_in             => flg_status_in,
            notes_admin_in            => notes_admin_in,
            id_schedule_in            => id_schedule_in,
            dt_consult_req_tstz_in    => dt_consult_req_tstz_in,
            dt_scheduled_tstz_in      => dt_scheduled_tstz_in,
            dt_cancel_tstz_in         => dt_cancel_tstz_in,
            next_visit_in_notes_in    => next_visit_in_notes_in,
            flg_instructions_in       => flg_instructions_in,
            id_complaint_in           => id_complaint_in,
            flg_type_date_in          => flg_type_date_in,
            status_flg_in             => status_flg_in,
            status_icon_in            => status_icon_in,
            status_msg_in             => status_msg_in,
            status_str_in             => status_str_in,
            reason_for_visit_in       => reason_for_visit_in,
            create_user_in            => create_user_in,
            create_time_in            => create_time_in,
            create_institution_in     => create_institution_in,
            update_user_in            => update_user_in,
            update_time_in            => update_time_in,
            update_institution_in     => update_institution_in,
            flg_type_in               => flg_type_in,
            id_cancel_reason_in       => id_cancel_reason_in,
            id_epis_documentation_in  => id_epis_documentation_in,
            id_epis_type_in           => id_epis_type_in,
            dt_last_update_in         => dt_last_update_in,
            id_prof_last_update_in    => id_prof_last_update_in,
            id_inst_last_update_in    => id_inst_last_update_in,
            id_sch_event_in           => id_sch_event_in,
            dt_begin_event_in         => dt_begin_event_in,
            dt_end_event_in           => dt_end_event_in,
            flg_priority_in           => flg_priority_in,
            flg_contact_type_in       => flg_contact_type_in,
            instructions_in           => instructions_in,
            id_room_in                => id_room_in,
            flg_request_type_in       => flg_request_type_in,
            flg_req_resp_in           => flg_req_resp_in,
            request_reason_in         => request_reason_in,
            id_language_in            => id_language_in,
            flg_recurrence_in         => flg_recurrence_in,
            frequency_in              => frequency_in,
            dt_rec_begin_in           => dt_rec_begin_in,
            dt_rec_end_in             => dt_rec_end_in,
            nr_events_in              => nr_events_in,
            week_day_in               => week_day_in,
            week_nr_in                => week_nr_in,
            month_day_in              => month_day_in,
            month_nr_in               => month_nr_in,
            id_task_dependency_in     => id_task_dependency_in,
            flg_freq_origin_module_in => flg_freq_origin_module_in,
            id_episode_to_exec_in     => id_episode_to_exec_in,
            id_soft_reg_by_in         => id_soft_reg_by_in,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
    END ins;

    PROCEDURE ins
    (
        consult_type_in           IN consult_req.consult_type%TYPE DEFAULT NULL,
        id_clinical_service_in    IN consult_req.id_clinical_service%TYPE DEFAULT NULL,
        id_patient_in             IN consult_req.id_patient%TYPE DEFAULT NULL,
        id_instit_requests_in     IN consult_req.id_instit_requests%TYPE DEFAULT NULL,
        id_inst_requested_in      IN consult_req.id_inst_requested%TYPE DEFAULT NULL,
        id_episode_in             IN consult_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in            IN consult_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_auth_in           IN consult_req.id_prof_auth%TYPE DEFAULT NULL,
        id_prof_appr_in           IN consult_req.id_prof_appr%TYPE DEFAULT NULL,
        id_prof_proc_in           IN consult_req.id_prof_proc%TYPE DEFAULT NULL,
        notes_in                  IN consult_req.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN consult_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN consult_req.notes_cancel%TYPE DEFAULT NULL,
        id_dep_clin_serv_in       IN consult_req.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_prof_requested_in      IN consult_req.id_prof_requested%TYPE DEFAULT NULL,
        flg_status_in             IN consult_req.flg_status%TYPE DEFAULT NULL,
        notes_admin_in            IN consult_req.notes_admin%TYPE DEFAULT NULL,
        id_schedule_in            IN consult_req.id_schedule%TYPE DEFAULT NULL,
        dt_consult_req_tstz_in    IN consult_req.dt_consult_req_tstz%TYPE DEFAULT NULL,
        dt_scheduled_tstz_in      IN consult_req.dt_scheduled_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN consult_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        next_visit_in_notes_in    IN consult_req.next_visit_in_notes%TYPE DEFAULT NULL,
        flg_instructions_in       IN consult_req.flg_instructions%TYPE DEFAULT NULL,
        id_complaint_in           IN consult_req.id_complaint%TYPE DEFAULT NULL,
        flg_type_date_in          IN consult_req.flg_type_date%TYPE DEFAULT NULL,
        status_flg_in             IN consult_req.status_flg%TYPE DEFAULT NULL,
        status_icon_in            IN consult_req.status_icon%TYPE DEFAULT NULL,
        status_msg_in             IN consult_req.status_msg%TYPE DEFAULT NULL,
        status_str_in             IN consult_req.status_str%TYPE DEFAULT NULL,
        reason_for_visit_in       IN consult_req.reason_for_visit%TYPE DEFAULT NULL,
        create_user_in            IN consult_req.create_user%TYPE DEFAULT NULL,
        create_time_in            IN consult_req.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN consult_req.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN consult_req.update_user%TYPE DEFAULT NULL,
        update_time_in            IN consult_req.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN consult_req.update_institution%TYPE DEFAULT NULL,
        flg_type_in               IN consult_req.flg_type%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN consult_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_epis_documentation_in  IN consult_req.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_type_in           IN consult_req.id_epis_type%TYPE DEFAULT NULL,
        dt_last_update_in         IN consult_req.dt_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN consult_req.id_prof_last_update%TYPE DEFAULT NULL,
        id_inst_last_update_in    IN consult_req.id_inst_last_update%TYPE DEFAULT NULL,
        id_sch_event_in           IN consult_req.id_sch_event%TYPE DEFAULT NULL,
        dt_begin_event_in         IN consult_req.dt_begin_event%TYPE DEFAULT NULL,
        dt_end_event_in           IN consult_req.dt_end_event%TYPE DEFAULT NULL,
        flg_priority_in           IN consult_req.flg_priority%TYPE DEFAULT NULL,
        flg_contact_type_in       IN consult_req.flg_contact_type%TYPE DEFAULT NULL,
        instructions_in           IN consult_req.instructions%TYPE DEFAULT NULL,
        id_room_in                IN consult_req.id_room%TYPE DEFAULT NULL,
        flg_request_type_in       IN consult_req.flg_request_type%TYPE DEFAULT NULL,
        flg_req_resp_in           IN consult_req.flg_req_resp%TYPE DEFAULT NULL,
        request_reason_in         IN consult_req.request_reason%TYPE DEFAULT NULL,
        id_language_in            IN consult_req.id_language%TYPE DEFAULT NULL,
        flg_recurrence_in         IN consult_req.flg_recurrence%TYPE DEFAULT NULL,
        frequency_in              IN consult_req.frequency%TYPE DEFAULT NULL,
        dt_rec_begin_in           IN consult_req.dt_rec_begin%TYPE DEFAULT NULL,
        dt_rec_end_in             IN consult_req.dt_rec_end%TYPE DEFAULT NULL,
        nr_events_in              IN consult_req.nr_events%TYPE DEFAULT NULL,
        week_day_in               IN consult_req.week_day%TYPE DEFAULT NULL,
        week_nr_in                IN consult_req.week_nr%TYPE DEFAULT NULL,
        month_day_in              IN consult_req.month_day%TYPE DEFAULT NULL,
        month_nr_in               IN consult_req.month_nr%TYPE DEFAULT NULL,
        id_task_dependency_in     IN consult_req.id_task_dependency%TYPE DEFAULT NULL,
        flg_freq_origin_module_in IN consult_req.flg_freq_origin_module%TYPE DEFAULT NULL,
        id_episode_to_exec_in     IN consult_req.id_episode_to_exec%TYPE DEFAULT NULL,
        id_soft_reg_by_in         IN consult_req.id_soft_reg_by%TYPE DEFAULT NULL,
        handle_error_in           IN BOOLEAN := TRUE
    ) IS
        l_pky    consult_req.id_consult_req%TYPE := next_key;
        rows_out table_varchar;
    BEGIN
        ins(id_consult_req_in         => l_pky,
            consult_type_in           => consult_type_in,
            id_clinical_service_in    => id_clinical_service_in,
            id_patient_in             => id_patient_in,
            id_instit_requests_in     => id_instit_requests_in,
            id_inst_requested_in      => id_inst_requested_in,
            id_episode_in             => id_episode_in,
            id_prof_req_in            => id_prof_req_in,
            id_prof_auth_in           => id_prof_auth_in,
            id_prof_appr_in           => id_prof_appr_in,
            id_prof_proc_in           => id_prof_proc_in,
            notes_in                  => notes_in,
            id_prof_cancel_in         => id_prof_cancel_in,
            notes_cancel_in           => notes_cancel_in,
            id_dep_clin_serv_in       => id_dep_clin_serv_in,
            id_prof_requested_in      => id_prof_requested_in,
            flg_status_in             => flg_status_in,
            notes_admin_in            => notes_admin_in,
            id_schedule_in            => id_schedule_in,
            dt_consult_req_tstz_in    => dt_consult_req_tstz_in,
            dt_scheduled_tstz_in      => dt_scheduled_tstz_in,
            dt_cancel_tstz_in         => dt_cancel_tstz_in,
            next_visit_in_notes_in    => next_visit_in_notes_in,
            flg_instructions_in       => flg_instructions_in,
            id_complaint_in           => id_complaint_in,
            flg_type_date_in          => flg_type_date_in,
            status_flg_in             => status_flg_in,
            status_icon_in            => status_icon_in,
            status_msg_in             => status_msg_in,
            status_str_in             => status_str_in,
            reason_for_visit_in       => reason_for_visit_in,
            create_user_in            => create_user_in,
            create_time_in            => create_time_in,
            create_institution_in     => create_institution_in,
            update_user_in            => update_user_in,
            update_time_in            => update_time_in,
            update_institution_in     => update_institution_in,
            flg_type_in               => flg_type_in,
            id_cancel_reason_in       => id_cancel_reason_in,
            id_epis_documentation_in  => id_epis_documentation_in,
            id_epis_type_in           => id_epis_type_in,
            dt_last_update_in         => dt_last_update_in,
            id_prof_last_update_in    => id_prof_last_update_in,
            id_inst_last_update_in    => id_inst_last_update_in,
            id_sch_event_in           => id_sch_event_in,
            dt_begin_event_in         => dt_begin_event_in,
            dt_end_event_in           => dt_end_event_in,
            flg_priority_in           => flg_priority_in,
            flg_contact_type_in       => flg_contact_type_in,
            instructions_in           => instructions_in,
            id_room_in                => id_room_in,
            flg_request_type_in       => flg_request_type_in,
            flg_req_resp_in           => flg_req_resp_in,
            request_reason_in         => request_reason_in,
            id_language_in            => id_language_in,
            flg_recurrence_in         => flg_recurrence_in,
            frequency_in              => frequency_in,
            dt_rec_begin_in           => dt_rec_begin_in,
            dt_rec_end_in             => dt_rec_end_in,
            nr_events_in              => nr_events_in,
            week_day_in               => week_day_in,
            week_nr_in                => week_nr_in,
            month_day_in              => month_day_in,
            month_nr_in               => month_nr_in,
            id_task_dependency_in     => id_task_dependency_in,
            flg_freq_origin_module_in => flg_freq_origin_module_in,
            id_episode_to_exec_in     => id_episode_to_exec_in,
            id_soft_reg_by_in         => id_soft_reg_by_in,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
    END ins;

    PROCEDURE ins
    (
        rows_in         IN consult_req_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        IF rows_in.COUNT = 0
        THEN
            NULL;
        ELSE
            FORALL indx IN rows_in.FIRST .. rows_in.LAST SAVE EXCEPTIONS
                INSERT INTO consult_req
                VALUES rows_in
                    (indx)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    EXCEPTION
        WHEN e_forall_error THEN
            -- In Oracle9i and above, SAVE EXCEPTIONS will direct control
            -- here if any error occurs. We can then save all the error
            -- information out to the error instance.
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                <<bulk_handler>>
                DECLARE
                    l_err_instance_id NUMBER;
                BEGIN
                    -- For each error, write to the log.
                    FOR indx IN 1 .. SQL%BULK_EXCEPTIONS.COUNT
                    LOOP
                        pk_alert_exceptions.register_error(error_name_in       => 'FORALL-INSERT-FAILURE',
                                                           err_instance_id_out => l_err_instance_id);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'BINDING_ROW_' || indx,
                                                        value_in           => SQL%BULK_EXCEPTIONS(indx).ERROR_INDEX,
                                                        validate_in        => FALSE);
                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ERROR_AT_ROW_' || indx,
                                                        value_in           => SQL%BULK_EXCEPTIONS(indx).ERROR_CODE,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_CONSULT_REQ _' || indx,
                                                        value_in           => rows_in(indx).id_consult_req,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'CONSULT_TYPE _' || indx,
                                                        value_in           => rows_in(indx).consult_type,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_CLINICAL_SERVICE _' || indx,
                                                        value_in           => rows_in(indx).id_clinical_service,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PATIENT _' || indx,
                                                        value_in           => rows_in(indx).id_patient,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_INSTIT_REQUESTS _' || indx,
                                                        value_in           => rows_in(indx).id_instit_requests,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_INST_REQUESTED _' || indx,
                                                        value_in           => rows_in(indx).id_inst_requested,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_EPISODE _' || indx,
                                                        value_in           => rows_in(indx).id_episode,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PROF_REQ _' || indx,
                                                        value_in           => rows_in(indx).id_prof_req,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PROF_AUTH _' || indx,
                                                        value_in           => rows_in(indx).id_prof_auth,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PROF_APPR _' || indx,
                                                        value_in           => rows_in(indx).id_prof_appr,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PROF_PROC _' || indx,
                                                        value_in           => rows_in(indx).id_prof_proc,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'NOTES _' || indx,
                                                        value_in           => rows_in(indx).notes,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PROF_CANCEL _' || indx,
                                                        value_in           => rows_in(indx).id_prof_cancel,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'NOTES_CANCEL _' || indx,
                                                        value_in           => rows_in(indx).notes_cancel,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_DEP_CLIN_SERV _' || indx,
                                                        value_in           => rows_in(indx).id_dep_clin_serv,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PROF_REQUESTED _' || indx,
                                                        value_in           => rows_in(indx).id_prof_requested,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_STATUS _' || indx,
                                                        value_in           => rows_in(indx).flg_status,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'NOTES_ADMIN _' || indx,
                                                        value_in           => rows_in(indx).notes_admin,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_SCHEDULE _' || indx,
                                                        value_in           => rows_in(indx).id_schedule,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_CONSULT_REQ_TSTZ _' || indx,
                                                        value_in           => rows_in(indx).dt_consult_req_tstz,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_SCHEDULED_TSTZ _' || indx,
                                                        value_in           => rows_in(indx).dt_scheduled_tstz,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_CANCEL_TSTZ _' || indx,
                                                        value_in           => rows_in(indx).dt_cancel_tstz,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'NEXT_VISIT_IN_NOTES _' || indx,
                                                        value_in           => rows_in(indx).next_visit_in_notes,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_INSTRUCTIONS _' || indx,
                                                        value_in           => rows_in(indx).flg_instructions,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_COMPLAINT _' || indx,
                                                        value_in           => rows_in(indx).id_complaint,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_TYPE_DATE _' || indx,
                                                        value_in           => rows_in(indx).flg_type_date,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'STATUS_FLG _' || indx,
                                                        value_in           => rows_in(indx).status_flg,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'STATUS_ICON _' || indx,
                                                        value_in           => rows_in(indx).status_icon,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'STATUS_MSG _' || indx,
                                                        value_in           => rows_in(indx).status_msg,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'STATUS_STR _' || indx,
                                                        value_in           => rows_in(indx).status_str,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'REASON_FOR_VISIT _' || indx,
                                                        value_in           => rows_in(indx).reason_for_visit,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'CREATE_USER _' || indx,
                                                        value_in           => rows_in(indx).create_user,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'CREATE_TIME _' || indx,
                                                        value_in           => rows_in(indx).create_time,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'CREATE_INSTITUTION _' || indx,
                                                        value_in           => rows_in(indx).create_institution,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'UPDATE_USER _' || indx,
                                                        value_in           => rows_in(indx).update_user,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'UPDATE_TIME _' || indx,
                                                        value_in           => rows_in(indx).update_time,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'UPDATE_INSTITUTION _' || indx,
                                                        value_in           => rows_in(indx).update_institution,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_TYPE _' || indx,
                                                        value_in           => rows_in(indx).flg_type,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_CANCEL_REASON _' || indx,
                                                        value_in           => rows_in(indx).id_cancel_reason,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_EPIS_DOCUMENTATION _' || indx,
                                                        value_in           => rows_in(indx).id_epis_documentation,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_EPIS_TYPE _' || indx,
                                                        value_in           => rows_in(indx).id_epis_type,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_LAST_UPDATE _' || indx,
                                                        value_in           => rows_in(indx).dt_last_update,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_PROF_LAST_UPDATE _' || indx,
                                                        value_in           => rows_in(indx).id_prof_last_update,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_INST_LAST_UPDATE _' || indx,
                                                        value_in           => rows_in(indx).id_inst_last_update,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_SCH_EVENT _' || indx,
                                                        value_in           => rows_in(indx).id_sch_event,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_BEGIN_EVENT _' || indx,
                                                        value_in           => rows_in(indx).dt_begin_event,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_END_EVENT _' || indx,
                                                        value_in           => rows_in(indx).dt_end_event,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_PRIORITY _' || indx,
                                                        value_in           => rows_in(indx).flg_priority,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_CONTACT_TYPE _' || indx,
                                                        value_in           => rows_in(indx).flg_contact_type,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_ROOM _' || indx,
                                                        value_in           => rows_in(indx).id_room,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_REQUEST_TYPE _' || indx,
                                                        value_in           => rows_in(indx).flg_request_type,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_REQ_RESP _' || indx,
                                                        value_in           => rows_in(indx).flg_req_resp,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_LANGUAGE _' || indx,
                                                        value_in           => rows_in(indx).id_language,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_RECURRENCE _' || indx,
                                                        value_in           => rows_in(indx).flg_recurrence,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FREQUENCY _' || indx,
                                                        value_in           => rows_in(indx).frequency,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_REC_BEGIN _' || indx,
                                                        value_in           => rows_in(indx).dt_rec_begin,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'DT_REC_END _' || indx,
                                                        value_in           => rows_in(indx).dt_rec_end,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'NR_EVENTS _' || indx,
                                                        value_in           => rows_in(indx).nr_events,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'WEEK_DAY _' || indx,
                                                        value_in           => rows_in(indx).week_day,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'WEEK_NR _' || indx,
                                                        value_in           => rows_in(indx).week_nr,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'MONTH_DAY _' || indx,
                                                        value_in           => rows_in(indx).month_day,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'MONTH_NR _' || indx,
                                                        value_in           => rows_in(indx).month_nr,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_TASK_DEPENDENCY _' || indx,
                                                        value_in           => rows_in(indx).id_task_dependency,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'FLG_FREQ_ORIGIN_MODULE _' || indx,
                                                        value_in           => rows_in(indx).flg_freq_origin_module,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_EPISODE_TO_EXEC _' || indx,
                                                        value_in           => rows_in(indx).id_episode_to_exec,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.add_context(err_instance_id_in => l_err_instance_id,
                                                        name_in            => 'ID_SOFT_REG_BY _' || indx,
                                                        value_in           => rows_in(indx).id_soft_reg_by,
                                                        validate_in        => FALSE);

                        pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_err_instance_id);
                    END LOOP;
                END bulk_handler;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alert_exceptions.raise_error(error_name_in => 'FORALL-INSERT-FAILURE',
                                                name1_in      => 'TABLE_NAME',
                                                value1_in     => 'CONSULT_REQ',
                                                name2_in      => 'ROW_COUNT',
                                                value2_in     => rows_in.COUNT);
            END IF;
    END ins;

    PROCEDURE ins
    (
        rows_in         IN consult_req_tc,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rows_in => rows_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END ins;

    PROCEDURE upd
    (
        id_consult_req_in          IN consult_req.id_consult_req%TYPE,
        consult_type_in            IN consult_req.consult_type%TYPE DEFAULT NULL,
        consult_type_nin           IN BOOLEAN := TRUE,
        id_clinical_service_in     IN consult_req.id_clinical_service%TYPE DEFAULT NULL,
        id_clinical_service_nin    IN BOOLEAN := TRUE,
        id_patient_in              IN consult_req.id_patient%TYPE DEFAULT NULL,
        id_patient_nin             IN BOOLEAN := TRUE,
        id_instit_requests_in      IN consult_req.id_instit_requests%TYPE DEFAULT NULL,
        id_instit_requests_nin     IN BOOLEAN := TRUE,
        id_inst_requested_in       IN consult_req.id_inst_requested%TYPE DEFAULT NULL,
        id_inst_requested_nin      IN BOOLEAN := TRUE,
        id_episode_in              IN consult_req.id_episode%TYPE DEFAULT NULL,
        id_episode_nin             IN BOOLEAN := TRUE,
        id_prof_req_in             IN consult_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_req_nin            IN BOOLEAN := TRUE,
        id_prof_auth_in            IN consult_req.id_prof_auth%TYPE DEFAULT NULL,
        id_prof_auth_nin           IN BOOLEAN := TRUE,
        id_prof_appr_in            IN consult_req.id_prof_appr%TYPE DEFAULT NULL,
        id_prof_appr_nin           IN BOOLEAN := TRUE,
        id_prof_proc_in            IN consult_req.id_prof_proc%TYPE DEFAULT NULL,
        id_prof_proc_nin           IN BOOLEAN := TRUE,
        notes_in                   IN consult_req.notes%TYPE DEFAULT NULL,
        notes_nin                  IN BOOLEAN := TRUE,
        id_prof_cancel_in          IN consult_req.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin         IN BOOLEAN := TRUE,
        notes_cancel_in            IN consult_req.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin           IN BOOLEAN := TRUE,
        id_dep_clin_serv_in        IN consult_req.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_dep_clin_serv_nin       IN BOOLEAN := TRUE,
        id_prof_requested_in       IN consult_req.id_prof_requested%TYPE DEFAULT NULL,
        id_prof_requested_nin      IN BOOLEAN := TRUE,
        flg_status_in              IN consult_req.flg_status%TYPE DEFAULT NULL,
        flg_status_nin             IN BOOLEAN := TRUE,
        notes_admin_in             IN consult_req.notes_admin%TYPE DEFAULT NULL,
        notes_admin_nin            IN BOOLEAN := TRUE,
        id_schedule_in             IN consult_req.id_schedule%TYPE DEFAULT NULL,
        id_schedule_nin            IN BOOLEAN := TRUE,
        dt_consult_req_tstz_in     IN consult_req.dt_consult_req_tstz%TYPE DEFAULT NULL,
        dt_consult_req_tstz_nin    IN BOOLEAN := TRUE,
        dt_scheduled_tstz_in       IN consult_req.dt_scheduled_tstz%TYPE DEFAULT NULL,
        dt_scheduled_tstz_nin      IN BOOLEAN := TRUE,
        dt_cancel_tstz_in          IN consult_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin         IN BOOLEAN := TRUE,
        next_visit_in_notes_in     IN consult_req.next_visit_in_notes%TYPE DEFAULT NULL,
        next_visit_in_notes_nin    IN BOOLEAN := TRUE,
        flg_instructions_in        IN consult_req.flg_instructions%TYPE DEFAULT NULL,
        flg_instructions_nin       IN BOOLEAN := TRUE,
        id_complaint_in            IN consult_req.id_complaint%TYPE DEFAULT NULL,
        id_complaint_nin           IN BOOLEAN := TRUE,
        flg_type_date_in           IN consult_req.flg_type_date%TYPE DEFAULT NULL,
        flg_type_date_nin          IN BOOLEAN := TRUE,
        status_flg_in              IN consult_req.status_flg%TYPE DEFAULT NULL,
        status_flg_nin             IN BOOLEAN := TRUE,
        status_icon_in             IN consult_req.status_icon%TYPE DEFAULT NULL,
        status_icon_nin            IN BOOLEAN := TRUE,
        status_msg_in              IN consult_req.status_msg%TYPE DEFAULT NULL,
        status_msg_nin             IN BOOLEAN := TRUE,
        status_str_in              IN consult_req.status_str%TYPE DEFAULT NULL,
        status_str_nin             IN BOOLEAN := TRUE,
        reason_for_visit_in        IN consult_req.reason_for_visit%TYPE DEFAULT NULL,
        reason_for_visit_nin       IN BOOLEAN := TRUE,
        create_user_in             IN consult_req.create_user%TYPE DEFAULT NULL,
        create_user_nin            IN BOOLEAN := TRUE,
        create_time_in             IN consult_req.create_time%TYPE DEFAULT NULL,
        create_time_nin            IN BOOLEAN := TRUE,
        create_institution_in      IN consult_req.create_institution%TYPE DEFAULT NULL,
        create_institution_nin     IN BOOLEAN := TRUE,
        update_user_in             IN consult_req.update_user%TYPE DEFAULT NULL,
        update_user_nin            IN BOOLEAN := TRUE,
        update_time_in             IN consult_req.update_time%TYPE DEFAULT NULL,
        update_time_nin            IN BOOLEAN := TRUE,
        update_institution_in      IN consult_req.update_institution%TYPE DEFAULT NULL,
        update_institution_nin     IN BOOLEAN := TRUE,
        flg_type_in                IN consult_req.flg_type%TYPE DEFAULT NULL,
        flg_type_nin               IN BOOLEAN := TRUE,
        id_cancel_reason_in        IN consult_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin       IN BOOLEAN := TRUE,
        id_epis_documentation_in   IN consult_req.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_documentation_nin  IN BOOLEAN := TRUE,
        id_epis_type_in            IN consult_req.id_epis_type%TYPE DEFAULT NULL,
        id_epis_type_nin           IN BOOLEAN := TRUE,
        dt_last_update_in          IN consult_req.dt_last_update%TYPE DEFAULT NULL,
        dt_last_update_nin         IN BOOLEAN := TRUE,
        id_prof_last_update_in     IN consult_req.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin    IN BOOLEAN := TRUE,
        id_inst_last_update_in     IN consult_req.id_inst_last_update%TYPE DEFAULT NULL,
        id_inst_last_update_nin    IN BOOLEAN := TRUE,
        id_sch_event_in            IN consult_req.id_sch_event%TYPE DEFAULT NULL,
        id_sch_event_nin           IN BOOLEAN := TRUE,
        dt_begin_event_in          IN consult_req.dt_begin_event%TYPE DEFAULT NULL,
        dt_begin_event_nin         IN BOOLEAN := TRUE,
        dt_end_event_in            IN consult_req.dt_end_event%TYPE DEFAULT NULL,
        dt_end_event_nin           IN BOOLEAN := TRUE,
        flg_priority_in            IN consult_req.flg_priority%TYPE DEFAULT NULL,
        flg_priority_nin           IN BOOLEAN := TRUE,
        flg_contact_type_in        IN consult_req.flg_contact_type%TYPE DEFAULT NULL,
        flg_contact_type_nin       IN BOOLEAN := TRUE,
        instructions_in            IN consult_req.instructions%TYPE DEFAULT NULL,
        instructions_nin           IN BOOLEAN := TRUE,
        id_room_in                 IN consult_req.id_room%TYPE DEFAULT NULL,
        id_room_nin                IN BOOLEAN := TRUE,
        flg_request_type_in        IN consult_req.flg_request_type%TYPE DEFAULT NULL,
        flg_request_type_nin       IN BOOLEAN := TRUE,
        flg_req_resp_in            IN consult_req.flg_req_resp%TYPE DEFAULT NULL,
        flg_req_resp_nin           IN BOOLEAN := TRUE,
        request_reason_in          IN consult_req.request_reason%TYPE DEFAULT NULL,
        request_reason_nin         IN BOOLEAN := TRUE,
        id_language_in             IN consult_req.id_language%TYPE DEFAULT NULL,
        id_language_nin            IN BOOLEAN := TRUE,
        flg_recurrence_in          IN consult_req.flg_recurrence%TYPE DEFAULT NULL,
        flg_recurrence_nin         IN BOOLEAN := TRUE,
        frequency_in               IN consult_req.frequency%TYPE DEFAULT NULL,
        frequency_nin              IN BOOLEAN := TRUE,
        dt_rec_begin_in            IN consult_req.dt_rec_begin%TYPE DEFAULT NULL,
        dt_rec_begin_nin           IN BOOLEAN := TRUE,
        dt_rec_end_in              IN consult_req.dt_rec_end%TYPE DEFAULT NULL,
        dt_rec_end_nin             IN BOOLEAN := TRUE,
        nr_events_in               IN consult_req.nr_events%TYPE DEFAULT NULL,
        nr_events_nin              IN BOOLEAN := TRUE,
        week_day_in                IN consult_req.week_day%TYPE DEFAULT NULL,
        week_day_nin               IN BOOLEAN := TRUE,
        week_nr_in                 IN consult_req.week_nr%TYPE DEFAULT NULL,
        week_nr_nin                IN BOOLEAN := TRUE,
        month_day_in               IN consult_req.month_day%TYPE DEFAULT NULL,
        month_day_nin              IN BOOLEAN := TRUE,
        month_nr_in                IN consult_req.month_nr%TYPE DEFAULT NULL,
        month_nr_nin               IN BOOLEAN := TRUE,
        id_task_dependency_in      IN consult_req.id_task_dependency%TYPE DEFAULT NULL,
        id_task_dependency_nin     IN BOOLEAN := TRUE,
        flg_freq_origin_module_in  IN consult_req.flg_freq_origin_module%TYPE DEFAULT NULL,
        flg_freq_origin_module_nin IN BOOLEAN := TRUE,
        id_episode_to_exec_in      IN consult_req.id_episode_to_exec%TYPE DEFAULT NULL,
        id_episode_to_exec_nin     IN BOOLEAN := TRUE,
        id_soft_reg_by_in          IN consult_req.id_soft_reg_by%TYPE DEFAULT NULL,
        id_soft_reg_by_nin         IN BOOLEAN := TRUE,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   IN OUT table_varchar
    ) IS
        l_rows_out                 table_varchar;
        l_consult_type_n           NUMBER(1);
        l_id_clinical_service_n    NUMBER(1);
        l_id_patient_n             NUMBER(1);
        l_id_instit_requests_n     NUMBER(1);
        l_id_inst_requested_n      NUMBER(1);
        l_id_episode_n             NUMBER(1);
        l_id_prof_req_n            NUMBER(1);
        l_id_prof_auth_n           NUMBER(1);
        l_id_prof_appr_n           NUMBER(1);
        l_id_prof_proc_n           NUMBER(1);
        l_notes_n                  NUMBER(1);
        l_id_prof_cancel_n         NUMBER(1);
        l_notes_cancel_n           NUMBER(1);
        l_id_dep_clin_serv_n       NUMBER(1);
        l_id_prof_requested_n      NUMBER(1);
        l_flg_status_n             NUMBER(1);
        l_notes_admin_n            NUMBER(1);
        l_id_schedule_n            NUMBER(1);
        l_dt_consult_req_tstz_n    NUMBER(1);
        l_dt_scheduled_tstz_n      NUMBER(1);
        l_dt_cancel_tstz_n         NUMBER(1);
        l_next_visit_in_notes_n    NUMBER(1);
        l_flg_instructions_n       NUMBER(1);
        l_id_complaint_n           NUMBER(1);
        l_flg_type_date_n          NUMBER(1);
        l_status_flg_n             NUMBER(1);
        l_status_icon_n            NUMBER(1);
        l_status_msg_n             NUMBER(1);
        l_status_str_n             NUMBER(1);
        l_reason_for_visit_n       NUMBER(1);
        l_create_user_n            NUMBER(1);
        l_create_time_n            NUMBER(1);
        l_create_institution_n     NUMBER(1);
        l_update_user_n            NUMBER(1);
        l_update_time_n            NUMBER(1);
        l_update_institution_n     NUMBER(1);
        l_flg_type_n               NUMBER(1);
        l_id_cancel_reason_n       NUMBER(1);
        l_id_epis_documentation_n  NUMBER(1);
        l_id_epis_type_n           NUMBER(1);
        l_dt_last_update_n         NUMBER(1);
        l_id_prof_last_update_n    NUMBER(1);
        l_id_inst_last_update_n    NUMBER(1);
        l_id_sch_event_n           NUMBER(1);
        l_dt_begin_event_n         NUMBER(1);
        l_dt_end_event_n           NUMBER(1);
        l_flg_priority_n           NUMBER(1);
        l_flg_contact_type_n       NUMBER(1);
        l_instructions_n           NUMBER(1);
        l_id_room_n                NUMBER(1);
        l_flg_request_type_n       NUMBER(1);
        l_flg_req_resp_n           NUMBER(1);
        l_request_reason_n         NUMBER(1);
        l_id_language_n            NUMBER(1);
        l_flg_recurrence_n         NUMBER(1);
        l_frequency_n              NUMBER(1);
        l_dt_rec_begin_n           NUMBER(1);
        l_dt_rec_end_n             NUMBER(1);
        l_nr_events_n              NUMBER(1);
        l_week_day_n               NUMBER(1);
        l_week_nr_n                NUMBER(1);
        l_month_day_n              NUMBER(1);
        l_month_nr_n               NUMBER(1);
        l_id_task_dependency_n     NUMBER(1);
        l_flg_freq_origin_module_n NUMBER(1);
        l_id_episode_to_exec_n     NUMBER(1);
        l_id_soft_reg_by_n         NUMBER(1);
    BEGIN

        l_consult_type_n           := sys.diutil.bool_to_int(consult_type_nin);
        l_id_clinical_service_n    := sys.diutil.bool_to_int(id_clinical_service_nin);
        l_id_patient_n             := sys.diutil.bool_to_int(id_patient_nin);
        l_id_instit_requests_n     := sys.diutil.bool_to_int(id_instit_requests_nin);
        l_id_inst_requested_n      := sys.diutil.bool_to_int(id_inst_requested_nin);
        l_id_episode_n             := sys.diutil.bool_to_int(id_episode_nin);
        l_id_prof_req_n            := sys.diutil.bool_to_int(id_prof_req_nin);
        l_id_prof_auth_n           := sys.diutil.bool_to_int(id_prof_auth_nin);
        l_id_prof_appr_n           := sys.diutil.bool_to_int(id_prof_appr_nin);
        l_id_prof_proc_n           := sys.diutil.bool_to_int(id_prof_proc_nin);
        l_notes_n                  := sys.diutil.bool_to_int(notes_nin);
        l_id_prof_cancel_n         := sys.diutil.bool_to_int(id_prof_cancel_nin);
        l_notes_cancel_n           := sys.diutil.bool_to_int(notes_cancel_nin);
        l_id_dep_clin_serv_n       := sys.diutil.bool_to_int(id_dep_clin_serv_nin);
        l_id_prof_requested_n      := sys.diutil.bool_to_int(id_prof_requested_nin);
        l_flg_status_n             := sys.diutil.bool_to_int(flg_status_nin);
        l_notes_admin_n            := sys.diutil.bool_to_int(notes_admin_nin);
        l_id_schedule_n            := sys.diutil.bool_to_int(id_schedule_nin);
        l_dt_consult_req_tstz_n    := sys.diutil.bool_to_int(dt_consult_req_tstz_nin);
        l_dt_scheduled_tstz_n      := sys.diutil.bool_to_int(dt_scheduled_tstz_nin);
        l_dt_cancel_tstz_n         := sys.diutil.bool_to_int(dt_cancel_tstz_nin);
        l_next_visit_in_notes_n    := sys.diutil.bool_to_int(next_visit_in_notes_nin);
        l_flg_instructions_n       := sys.diutil.bool_to_int(flg_instructions_nin);
        l_id_complaint_n           := sys.diutil.bool_to_int(id_complaint_nin);
        l_flg_type_date_n          := sys.diutil.bool_to_int(flg_type_date_nin);
        l_status_flg_n             := sys.diutil.bool_to_int(status_flg_nin);
        l_status_icon_n            := sys.diutil.bool_to_int(status_icon_nin);
        l_status_msg_n             := sys.diutil.bool_to_int(status_msg_nin);
        l_status_str_n             := sys.diutil.bool_to_int(status_str_nin);
        l_reason_for_visit_n       := sys.diutil.bool_to_int(reason_for_visit_nin);
        l_create_user_n            := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n            := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n     := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n            := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n            := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n     := sys.diutil.bool_to_int(update_institution_nin);
        l_flg_type_n               := sys.diutil.bool_to_int(flg_type_nin);
        l_id_cancel_reason_n       := sys.diutil.bool_to_int(id_cancel_reason_nin);
        l_id_epis_documentation_n  := sys.diutil.bool_to_int(id_epis_documentation_nin);
        l_id_epis_type_n           := sys.diutil.bool_to_int(id_epis_type_nin);
        l_dt_last_update_n         := sys.diutil.bool_to_int(dt_last_update_nin);
        l_id_prof_last_update_n    := sys.diutil.bool_to_int(id_prof_last_update_nin);
        l_id_inst_last_update_n    := sys.diutil.bool_to_int(id_inst_last_update_nin);
        l_id_sch_event_n           := sys.diutil.bool_to_int(id_sch_event_nin);
        l_dt_begin_event_n         := sys.diutil.bool_to_int(dt_begin_event_nin);
        l_dt_end_event_n           := sys.diutil.bool_to_int(dt_end_event_nin);
        l_flg_priority_n           := sys.diutil.bool_to_int(flg_priority_nin);
        l_flg_contact_type_n       := sys.diutil.bool_to_int(flg_contact_type_nin);
        l_instructions_n           := sys.diutil.bool_to_int(instructions_nin);
        l_id_room_n                := sys.diutil.bool_to_int(id_room_nin);
        l_flg_request_type_n       := sys.diutil.bool_to_int(flg_request_type_nin);
        l_flg_req_resp_n           := sys.diutil.bool_to_int(flg_req_resp_nin);
        l_request_reason_n         := sys.diutil.bool_to_int(request_reason_nin);
        l_id_language_n            := sys.diutil.bool_to_int(id_language_nin);
        l_flg_recurrence_n         := sys.diutil.bool_to_int(flg_recurrence_nin);
        l_frequency_n              := sys.diutil.bool_to_int(frequency_nin);
        l_dt_rec_begin_n           := sys.diutil.bool_to_int(dt_rec_begin_nin);
        l_dt_rec_end_n             := sys.diutil.bool_to_int(dt_rec_end_nin);
        l_nr_events_n              := sys.diutil.bool_to_int(nr_events_nin);
        l_week_day_n               := sys.diutil.bool_to_int(week_day_nin);
        l_week_nr_n                := sys.diutil.bool_to_int(week_nr_nin);
        l_month_day_n              := sys.diutil.bool_to_int(month_day_nin);
        l_month_nr_n               := sys.diutil.bool_to_int(month_nr_nin);
        l_id_task_dependency_n     := sys.diutil.bool_to_int(id_task_dependency_nin);
        l_flg_freq_origin_module_n := sys.diutil.bool_to_int(flg_freq_origin_module_nin);
        l_id_episode_to_exec_n     := sys.diutil.bool_to_int(id_episode_to_exec_nin);
        l_id_soft_reg_by_n         := sys.diutil.bool_to_int(id_soft_reg_by_nin);

        UPDATE consult_req
           SET consult_type           = decode(l_consult_type_n, 0, consult_type_in, nvl(consult_type_in, consult_type)),
               id_clinical_service    = decode(l_id_clinical_service_n,
                                               0,
                                               id_clinical_service_in,
                                               nvl(id_clinical_service_in, id_clinical_service)),
               id_patient             = decode(l_id_patient_n, 0, id_patient_in, nvl(id_patient_in, id_patient)),
               id_instit_requests     = decode(l_id_instit_requests_n,
                                               0,
                                               id_instit_requests_in,
                                               nvl(id_instit_requests_in, id_instit_requests)),
               id_inst_requested      = decode(l_id_inst_requested_n,
                                               0,
                                               id_inst_requested_in,
                                               nvl(id_inst_requested_in, id_inst_requested)),
               id_episode             = decode(l_id_episode_n, 0, id_episode_in, nvl(id_episode_in, id_episode)),
               id_prof_req            = decode(l_id_prof_req_n, 0, id_prof_req_in, nvl(id_prof_req_in, id_prof_req)),
               id_prof_auth           = decode(l_id_prof_auth_n, 0, id_prof_auth_in, nvl(id_prof_auth_in, id_prof_auth)),
               id_prof_appr           = decode(l_id_prof_appr_n, 0, id_prof_appr_in, nvl(id_prof_appr_in, id_prof_appr)),
               id_prof_proc           = decode(l_id_prof_proc_n, 0, id_prof_proc_in, nvl(id_prof_proc_in, id_prof_proc)),
               notes                  = decode(l_notes_n, 0, notes_in, nvl(notes_in, notes)),
               id_prof_cancel         = decode(l_id_prof_cancel_n,
                                               0,
                                               id_prof_cancel_in,
                                               nvl(id_prof_cancel_in, id_prof_cancel)),
               notes_cancel           = decode(l_notes_cancel_n, 0, notes_cancel_in, nvl(notes_cancel_in, notes_cancel)),
               id_dep_clin_serv       = decode(l_id_dep_clin_serv_n,
                                               0,
                                               id_dep_clin_serv_in,
                                               nvl(id_dep_clin_serv_in, id_dep_clin_serv)),
               id_prof_requested      = decode(l_id_prof_requested_n,
                                               0,
                                               id_prof_requested_in,
                                               nvl(id_prof_requested_in, id_prof_requested)),
               flg_status             = decode(l_flg_status_n, 0, flg_status_in, nvl(flg_status_in, flg_status)),
               notes_admin            = decode(l_notes_admin_n, 0, notes_admin_in, nvl(notes_admin_in, notes_admin)),
               id_schedule            = decode(l_id_schedule_n, 0, id_schedule_in, nvl(id_schedule_in, id_schedule)),
               dt_consult_req_tstz    = decode(l_dt_consult_req_tstz_n,
                                               0,
                                               dt_consult_req_tstz_in,
                                               nvl(dt_consult_req_tstz_in, dt_consult_req_tstz)),
               dt_scheduled_tstz      = decode(l_dt_scheduled_tstz_n,
                                               0,
                                               dt_scheduled_tstz_in,
                                               nvl(dt_scheduled_tstz_in, dt_scheduled_tstz)),
               dt_cancel_tstz         = decode(l_dt_cancel_tstz_n,
                                               0,
                                               dt_cancel_tstz_in,
                                               nvl(dt_cancel_tstz_in, dt_cancel_tstz)),
               next_visit_in_notes    = decode(l_next_visit_in_notes_n,
                                               0,
                                               next_visit_in_notes_in,
                                               nvl(next_visit_in_notes_in, next_visit_in_notes)),
               flg_instructions       = decode(l_flg_instructions_n,
                                               0,
                                               flg_instructions_in,
                                               nvl(flg_instructions_in, flg_instructions)),
               id_complaint           = decode(l_id_complaint_n, 0, id_complaint_in, nvl(id_complaint_in, id_complaint)),
               flg_type_date          = decode(l_flg_type_date_n,
                                               0,
                                               flg_type_date_in,
                                               nvl(flg_type_date_in, flg_type_date)),
               status_flg             = decode(l_status_flg_n, 0, status_flg_in, nvl(status_flg_in, status_flg)),
               status_icon            = decode(l_status_icon_n, 0, status_icon_in, nvl(status_icon_in, status_icon)),
               status_msg             = decode(l_status_msg_n, 0, status_msg_in, nvl(status_msg_in, status_msg)),
               status_str             = decode(l_status_str_n, 0, status_str_in, nvl(status_str_in, status_str)),
               reason_for_visit       = decode(l_reason_for_visit_n,
                                               0,
                                               reason_for_visit_in,
                                               nvl(reason_for_visit_in, reason_for_visit)),
               create_user            = decode(l_create_user_n, 0, create_user_in, nvl(create_user_in, create_user)),
               create_time            = decode(l_create_time_n, 0, create_time_in, nvl(create_time_in, create_time)),
               create_institution     = decode(l_create_institution_n,
                                               0,
                                               create_institution_in,
                                               nvl(create_institution_in, create_institution)),
               update_user            = decode(l_update_user_n, 0, update_user_in, nvl(update_user_in, update_user)),
               update_time            = decode(l_update_time_n, 0, update_time_in, nvl(update_time_in, update_time)),
               update_institution     = decode(l_update_institution_n,
                                               0,
                                               update_institution_in,
                                               nvl(update_institution_in, update_institution)),
               flg_type               = decode(l_flg_type_n, 0, flg_type_in, nvl(flg_type_in, flg_type)),
               id_cancel_reason       = decode(l_id_cancel_reason_n,
                                               0,
                                               id_cancel_reason_in,
                                               nvl(id_cancel_reason_in, id_cancel_reason)),
               id_epis_documentation  = decode(l_id_epis_documentation_n,
                                               0,
                                               id_epis_documentation_in,
                                               nvl(id_epis_documentation_in, id_epis_documentation)),
               id_epis_type           = decode(l_id_epis_type_n, 0, id_epis_type_in, nvl(id_epis_type_in, id_epis_type)),
               dt_last_update         = decode(l_dt_last_update_n,
                                               0,
                                               dt_last_update_in,
                                               nvl(dt_last_update_in, dt_last_update)),
               id_prof_last_update    = decode(l_id_prof_last_update_n,
                                               0,
                                               id_prof_last_update_in,
                                               nvl(id_prof_last_update_in, id_prof_last_update)),
               id_inst_last_update    = decode(l_id_inst_last_update_n,
                                               0,
                                               id_inst_last_update_in,
                                               nvl(id_inst_last_update_in, id_inst_last_update)),
               id_sch_event           = decode(l_id_sch_event_n, 0, id_sch_event_in, nvl(id_sch_event_in, id_sch_event)),
               dt_begin_event         = decode(l_dt_begin_event_n,
                                               0,
                                               dt_begin_event_in,
                                               nvl(dt_begin_event_in, dt_begin_event)),
               dt_end_event           = decode(l_dt_end_event_n, 0, dt_end_event_in, nvl(dt_end_event_in, dt_end_event)),
               flg_priority           = decode(l_flg_priority_n, 0, flg_priority_in, nvl(flg_priority_in, flg_priority)),
               flg_contact_type       = decode(l_flg_contact_type_n,
                                               0,
                                               flg_contact_type_in,
                                               nvl(flg_contact_type_in, flg_contact_type)),
               instructions           = decode(l_instructions_n, 0, instructions_in, nvl(instructions_in, instructions)),
               id_room                = decode(l_id_room_n, 0, id_room_in, nvl(id_room_in, id_room)),
               flg_request_type       = decode(l_flg_request_type_n,
                                               0,
                                               flg_request_type_in,
                                               nvl(flg_request_type_in, flg_request_type)),
               flg_req_resp           = decode(l_flg_req_resp_n, 0, flg_req_resp_in, nvl(flg_req_resp_in, flg_req_resp)),
               request_reason         = decode(l_request_reason_n,
                                               0,
                                               request_reason_in,
                                               nvl(request_reason_in, request_reason)),
               id_language            = decode(l_id_language_n, 0, id_language_in, nvl(id_language_in, id_language)),
               flg_recurrence         = decode(l_flg_recurrence_n,
                                               0,
                                               flg_recurrence_in,
                                               nvl(flg_recurrence_in, flg_recurrence)),
               frequency              = decode(l_frequency_n, 0, frequency_in, nvl(frequency_in, frequency)),
               dt_rec_begin           = decode(l_dt_rec_begin_n, 0, dt_rec_begin_in, nvl(dt_rec_begin_in, dt_rec_begin)),
               dt_rec_end             = decode(l_dt_rec_end_n, 0, dt_rec_end_in, nvl(dt_rec_end_in, dt_rec_end)),
               nr_events              = decode(l_nr_events_n, 0, nr_events_in, nvl(nr_events_in, nr_events)),
               week_day               = decode(l_week_day_n, 0, week_day_in, nvl(week_day_in, week_day)),
               week_nr                = decode(l_week_nr_n, 0, week_nr_in, nvl(week_nr_in, week_nr)),
               month_day              = decode(l_month_day_n, 0, month_day_in, nvl(month_day_in, month_day)),
               month_nr               = decode(l_month_nr_n, 0, month_nr_in, nvl(month_nr_in, month_nr)),
               id_task_dependency     = decode(l_id_task_dependency_n,
                                               0,
                                               id_task_dependency_in,
                                               nvl(id_task_dependency_in, id_task_dependency)),
               flg_freq_origin_module = decode(l_flg_freq_origin_module_n,
                                               0,
                                               flg_freq_origin_module_in,
                                               nvl(flg_freq_origin_module_in, flg_freq_origin_module)),
               id_episode_to_exec     = decode(l_id_episode_to_exec_n,
                                               0,
                                               id_episode_to_exec_in,
                                               nvl(id_episode_to_exec_in, id_episode_to_exec)),
               id_soft_reg_by         = decode(l_id_soft_reg_by_n,
                                               0,
                                               id_soft_reg_by_in,
                                               nvl(id_soft_reg_by_in, id_soft_reg_by))
         WHERE id_consult_req = id_consult_req_in
        RETURNING ROWID BULK COLLECT INTO l_rows_out;

        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;

        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;

    EXCEPTION
        WHEN dup_val_on_index THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner           all_constraints.owner%TYPE;
                    l_name            all_constraints.constraint_name%TYPE;
                    l_err_instance_id PLS_INTEGER;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF FALSE
                    THEN
                        NULL; -- Placeholder in case no unique indexes
                    ELSE
                        pk_alert_exceptions.raise_error(error_name_in => 'DUPLICATE-VALUE',
                                                        name1_in      => 'OWNER',
                                                        value1_in     => l_owner,
                                                        name2_in      => 'CONSTRAINT_NAME',
                                                        value2_in     => l_name,
                                                        name3_in      => 'TABLE_NAME',
                                                        value3_in     => 'CONSULT_REQ');
                    END IF;
                END;
            END IF;
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    IF l_name = 'CRQ_COMPLAINT_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_COMPLAINT',
                                                        value_in           => id_complaint_in);
                    END IF;
                    IF l_name = 'CRQ_CSE_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_CLINICAL_SERVICE',
                                                        value_in           => id_clinical_service_in);
                    END IF;
                    IF l_name = 'CRQ_DCS_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_DEP_CLIN_SERV',
                                                        value_in           => id_dep_clin_serv_in);
                    END IF;
                    IF l_name = 'CRQ_EPD_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_EPIS_DOCUMENTATION',
                                                        value_in           => id_epis_documentation_in);
                    END IF;
                    IF l_name = 'CRQ_EPIS_EXEC_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_EPISODE_TO_EXEC',
                                                        value_in           => id_episode_to_exec_in);
                    END IF;
                    IF l_name = 'CRQ_EPIS_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_EPISODE',
                                                        value_in           => id_episode_in);
                    END IF;
                    IF l_name = 'CRQ_EPIS_TYPE_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_EPIS_TYPE',
                                                        value_in           => id_epis_type_in);
                    END IF;
                    IF l_name = 'CRQ_INST_REQUESTED_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_INST_REQUESTED',
                                                        value_in           => id_inst_requested_in);
                    END IF;
                    IF l_name = 'CRQ_INST_REQUESTS_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_INSTIT_REQUESTS',
                                                        value_in           => id_instit_requests_in);
                    END IF;
                    IF l_name = 'CRQ_LANGUAGE_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_LANGUAGE',
                                                        value_in           => id_language_in);
                    END IF;
                    IF l_name = 'CRQ_LAST_UPDATE_BY_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_LAST_UPDATE',
                                                        value_in           => id_prof_last_update_in);
                    END IF;
                    IF l_name = 'CRQ_LAST_UPDATE_INST_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_INST_LAST_UPDATE',
                                                        value_in           => id_inst_last_update_in);
                    END IF;
                    IF l_name = 'CRQ_PAT_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PATIENT',
                                                        value_in           => id_patient_in);
                    END IF;
                    IF l_name = 'CRQ_PROF_APPR_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_APPR',
                                                        value_in           => id_prof_appr_in);
                    END IF;
                    IF l_name = 'CRQ_PROF_AUTH_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_AUTH',
                                                        value_in           => id_prof_auth_in);
                    END IF;
                    IF l_name = 'CRQ_PROF_CANCEL_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_CANCEL',
                                                        value_in           => id_prof_cancel_in);
                    END IF;
                    IF l_name = 'CRQ_PROF_PROC_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_PROC',
                                                        value_in           => id_prof_proc_in);
                    END IF;
                    IF l_name = 'CRQ_PROF_REQUESTED_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_REQUESTED',
                                                        value_in           => id_prof_requested_in);
                    END IF;
                    IF l_name = 'CRQ_PROF_REQ_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_REQ',
                                                        value_in           => id_prof_req_in);
                    END IF;
                    IF l_name = 'CRQ_ROOM_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_ROOM',
                                                        value_in           => id_room_in);
                    END IF;
                    IF l_name = 'CRQ_SCHEDULE_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_SCHEDULE',
                                                        value_in           => id_schedule_in);
                    END IF;
                    IF l_name = 'CRQ_SCH_EVENT_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_SCH_EVENT',
                                                        value_in           => id_sch_event_in);
                    END IF;
                    IF l_name = 'CRQ_TASK_DEP_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_TASK_DEPENDENCY',
                                                        value_in           => id_task_dependency_in);
                    END IF;
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
        WHEN e_null_column_value THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    v_errm    VARCHAR2(2000) := dbms_utility.format_error_stack;
                    dot1loc   INTEGER;
                    dot2loc   INTEGER;
                    parenloc  INTEGER;
                    c_owner   all_constraints.owner%TYPE;
                    c_tabname all_tables.table_name%TYPE;
                    c_colname all_tab_columns.column_name%TYPE;
                BEGIN
                    dot1loc   := instr(v_errm, '.', 1, 1);
                    dot2loc   := instr(v_errm, '.', 1, 2);
                    parenloc  := instr(v_errm, '(');
                    c_owner   := substr(v_errm, parenloc + 1, dot1loc - parenloc - 1);
                    c_tabname := substr(v_errm, dot1loc + 1, dot2loc - dot1loc - 1);
                    c_colname := substr(v_errm, dot2loc + 1, instr(v_errm, ')') - dot2loc - 1);

                    pk_alert_exceptions.raise_error(error_name_in => 'COLUMN-CANNOT-BE-NULL',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => c_owner,
                                                    name2_in      => 'TABLE_NAME',
                                                    value2_in     => c_tabname,
                                                    name3_in      => 'COLUMN_NAME',
                                                    value3_in     => c_colname);
                END;
            END IF;
    END upd;

    PROCEDURE upd
    (
        id_consult_req_in          IN consult_req.id_consult_req%TYPE,
        consult_type_in            IN consult_req.consult_type%TYPE DEFAULT NULL,
        consult_type_nin           IN BOOLEAN := TRUE,
        id_clinical_service_in     IN consult_req.id_clinical_service%TYPE DEFAULT NULL,
        id_clinical_service_nin    IN BOOLEAN := TRUE,
        id_patient_in              IN consult_req.id_patient%TYPE DEFAULT NULL,
        id_patient_nin             IN BOOLEAN := TRUE,
        id_instit_requests_in      IN consult_req.id_instit_requests%TYPE DEFAULT NULL,
        id_instit_requests_nin     IN BOOLEAN := TRUE,
        id_inst_requested_in       IN consult_req.id_inst_requested%TYPE DEFAULT NULL,
        id_inst_requested_nin      IN BOOLEAN := TRUE,
        id_episode_in              IN consult_req.id_episode%TYPE DEFAULT NULL,
        id_episode_nin             IN BOOLEAN := TRUE,
        id_prof_req_in             IN consult_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_req_nin            IN BOOLEAN := TRUE,
        id_prof_auth_in            IN consult_req.id_prof_auth%TYPE DEFAULT NULL,
        id_prof_auth_nin           IN BOOLEAN := TRUE,
        id_prof_appr_in            IN consult_req.id_prof_appr%TYPE DEFAULT NULL,
        id_prof_appr_nin           IN BOOLEAN := TRUE,
        id_prof_proc_in            IN consult_req.id_prof_proc%TYPE DEFAULT NULL,
        id_prof_proc_nin           IN BOOLEAN := TRUE,
        notes_in                   IN consult_req.notes%TYPE DEFAULT NULL,
        notes_nin                  IN BOOLEAN := TRUE,
        id_prof_cancel_in          IN consult_req.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin         IN BOOLEAN := TRUE,
        notes_cancel_in            IN consult_req.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin           IN BOOLEAN := TRUE,
        id_dep_clin_serv_in        IN consult_req.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_dep_clin_serv_nin       IN BOOLEAN := TRUE,
        id_prof_requested_in       IN consult_req.id_prof_requested%TYPE DEFAULT NULL,
        id_prof_requested_nin      IN BOOLEAN := TRUE,
        flg_status_in              IN consult_req.flg_status%TYPE DEFAULT NULL,
        flg_status_nin             IN BOOLEAN := TRUE,
        notes_admin_in             IN consult_req.notes_admin%TYPE DEFAULT NULL,
        notes_admin_nin            IN BOOLEAN := TRUE,
        id_schedule_in             IN consult_req.id_schedule%TYPE DEFAULT NULL,
        id_schedule_nin            IN BOOLEAN := TRUE,
        dt_consult_req_tstz_in     IN consult_req.dt_consult_req_tstz%TYPE DEFAULT NULL,
        dt_consult_req_tstz_nin    IN BOOLEAN := TRUE,
        dt_scheduled_tstz_in       IN consult_req.dt_scheduled_tstz%TYPE DEFAULT NULL,
        dt_scheduled_tstz_nin      IN BOOLEAN := TRUE,
        dt_cancel_tstz_in          IN consult_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin         IN BOOLEAN := TRUE,
        next_visit_in_notes_in     IN consult_req.next_visit_in_notes%TYPE DEFAULT NULL,
        next_visit_in_notes_nin    IN BOOLEAN := TRUE,
        flg_instructions_in        IN consult_req.flg_instructions%TYPE DEFAULT NULL,
        flg_instructions_nin       IN BOOLEAN := TRUE,
        id_complaint_in            IN consult_req.id_complaint%TYPE DEFAULT NULL,
        id_complaint_nin           IN BOOLEAN := TRUE,
        flg_type_date_in           IN consult_req.flg_type_date%TYPE DEFAULT NULL,
        flg_type_date_nin          IN BOOLEAN := TRUE,
        status_flg_in              IN consult_req.status_flg%TYPE DEFAULT NULL,
        status_flg_nin             IN BOOLEAN := TRUE,
        status_icon_in             IN consult_req.status_icon%TYPE DEFAULT NULL,
        status_icon_nin            IN BOOLEAN := TRUE,
        status_msg_in              IN consult_req.status_msg%TYPE DEFAULT NULL,
        status_msg_nin             IN BOOLEAN := TRUE,
        status_str_in              IN consult_req.status_str%TYPE DEFAULT NULL,
        status_str_nin             IN BOOLEAN := TRUE,
        reason_for_visit_in        IN consult_req.reason_for_visit%TYPE DEFAULT NULL,
        reason_for_visit_nin       IN BOOLEAN := TRUE,
        create_user_in             IN consult_req.create_user%TYPE DEFAULT NULL,
        create_user_nin            IN BOOLEAN := TRUE,
        create_time_in             IN consult_req.create_time%TYPE DEFAULT NULL,
        create_time_nin            IN BOOLEAN := TRUE,
        create_institution_in      IN consult_req.create_institution%TYPE DEFAULT NULL,
        create_institution_nin     IN BOOLEAN := TRUE,
        update_user_in             IN consult_req.update_user%TYPE DEFAULT NULL,
        update_user_nin            IN BOOLEAN := TRUE,
        update_time_in             IN consult_req.update_time%TYPE DEFAULT NULL,
        update_time_nin            IN BOOLEAN := TRUE,
        update_institution_in      IN consult_req.update_institution%TYPE DEFAULT NULL,
        update_institution_nin     IN BOOLEAN := TRUE,
        flg_type_in                IN consult_req.flg_type%TYPE DEFAULT NULL,
        flg_type_nin               IN BOOLEAN := TRUE,
        id_cancel_reason_in        IN consult_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin       IN BOOLEAN := TRUE,
        id_epis_documentation_in   IN consult_req.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_documentation_nin  IN BOOLEAN := TRUE,
        id_epis_type_in            IN consult_req.id_epis_type%TYPE DEFAULT NULL,
        id_epis_type_nin           IN BOOLEAN := TRUE,
        dt_last_update_in          IN consult_req.dt_last_update%TYPE DEFAULT NULL,
        dt_last_update_nin         IN BOOLEAN := TRUE,
        id_prof_last_update_in     IN consult_req.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin    IN BOOLEAN := TRUE,
        id_inst_last_update_in     IN consult_req.id_inst_last_update%TYPE DEFAULT NULL,
        id_inst_last_update_nin    IN BOOLEAN := TRUE,
        id_sch_event_in            IN consult_req.id_sch_event%TYPE DEFAULT NULL,
        id_sch_event_nin           IN BOOLEAN := TRUE,
        dt_begin_event_in          IN consult_req.dt_begin_event%TYPE DEFAULT NULL,
        dt_begin_event_nin         IN BOOLEAN := TRUE,
        dt_end_event_in            IN consult_req.dt_end_event%TYPE DEFAULT NULL,
        dt_end_event_nin           IN BOOLEAN := TRUE,
        flg_priority_in            IN consult_req.flg_priority%TYPE DEFAULT NULL,
        flg_priority_nin           IN BOOLEAN := TRUE,
        flg_contact_type_in        IN consult_req.flg_contact_type%TYPE DEFAULT NULL,
        flg_contact_type_nin       IN BOOLEAN := TRUE,
        instructions_in            IN consult_req.instructions%TYPE DEFAULT NULL,
        instructions_nin           IN BOOLEAN := TRUE,
        id_room_in                 IN consult_req.id_room%TYPE DEFAULT NULL,
        id_room_nin                IN BOOLEAN := TRUE,
        flg_request_type_in        IN consult_req.flg_request_type%TYPE DEFAULT NULL,
        flg_request_type_nin       IN BOOLEAN := TRUE,
        flg_req_resp_in            IN consult_req.flg_req_resp%TYPE DEFAULT NULL,
        flg_req_resp_nin           IN BOOLEAN := TRUE,
        request_reason_in          IN consult_req.request_reason%TYPE DEFAULT NULL,
        request_reason_nin         IN BOOLEAN := TRUE,
        id_language_in             IN consult_req.id_language%TYPE DEFAULT NULL,
        id_language_nin            IN BOOLEAN := TRUE,
        flg_recurrence_in          IN consult_req.flg_recurrence%TYPE DEFAULT NULL,
        flg_recurrence_nin         IN BOOLEAN := TRUE,
        frequency_in               IN consult_req.frequency%TYPE DEFAULT NULL,
        frequency_nin              IN BOOLEAN := TRUE,
        dt_rec_begin_in            IN consult_req.dt_rec_begin%TYPE DEFAULT NULL,
        dt_rec_begin_nin           IN BOOLEAN := TRUE,
        dt_rec_end_in              IN consult_req.dt_rec_end%TYPE DEFAULT NULL,
        dt_rec_end_nin             IN BOOLEAN := TRUE,
        nr_events_in               IN consult_req.nr_events%TYPE DEFAULT NULL,
        nr_events_nin              IN BOOLEAN := TRUE,
        week_day_in                IN consult_req.week_day%TYPE DEFAULT NULL,
        week_day_nin               IN BOOLEAN := TRUE,
        week_nr_in                 IN consult_req.week_nr%TYPE DEFAULT NULL,
        week_nr_nin                IN BOOLEAN := TRUE,
        month_day_in               IN consult_req.month_day%TYPE DEFAULT NULL,
        month_day_nin              IN BOOLEAN := TRUE,
        month_nr_in                IN consult_req.month_nr%TYPE DEFAULT NULL,
        month_nr_nin               IN BOOLEAN := TRUE,
        id_task_dependency_in      IN consult_req.id_task_dependency%TYPE DEFAULT NULL,
        id_task_dependency_nin     IN BOOLEAN := TRUE,
        flg_freq_origin_module_in  IN consult_req.flg_freq_origin_module%TYPE DEFAULT NULL,
        flg_freq_origin_module_nin IN BOOLEAN := TRUE,
        id_episode_to_exec_in      IN consult_req.id_episode_to_exec%TYPE DEFAULT NULL,
        id_episode_to_exec_nin     IN BOOLEAN := TRUE,
        id_soft_reg_by_in          IN consult_req.id_soft_reg_by%TYPE DEFAULT NULL,
        id_soft_reg_by_nin         IN BOOLEAN := TRUE,
        handle_error_in            IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_consult_req_in          => id_consult_req_in,
            consult_type_in            => consult_type_in,
            consult_type_nin           => consult_type_nin,
            id_clinical_service_in     => id_clinical_service_in,
            id_clinical_service_nin    => id_clinical_service_nin,
            id_patient_in              => id_patient_in,
            id_patient_nin             => id_patient_nin,
            id_instit_requests_in      => id_instit_requests_in,
            id_instit_requests_nin     => id_instit_requests_nin,
            id_inst_requested_in       => id_inst_requested_in,
            id_inst_requested_nin      => id_inst_requested_nin,
            id_episode_in              => id_episode_in,
            id_episode_nin             => id_episode_nin,
            id_prof_req_in             => id_prof_req_in,
            id_prof_req_nin            => id_prof_req_nin,
            id_prof_auth_in            => id_prof_auth_in,
            id_prof_auth_nin           => id_prof_auth_nin,
            id_prof_appr_in            => id_prof_appr_in,
            id_prof_appr_nin           => id_prof_appr_nin,
            id_prof_proc_in            => id_prof_proc_in,
            id_prof_proc_nin           => id_prof_proc_nin,
            notes_in                   => notes_in,
            notes_nin                  => notes_nin,
            id_prof_cancel_in          => id_prof_cancel_in,
            id_prof_cancel_nin         => id_prof_cancel_nin,
            notes_cancel_in            => notes_cancel_in,
            notes_cancel_nin           => notes_cancel_nin,
            id_dep_clin_serv_in        => id_dep_clin_serv_in,
            id_dep_clin_serv_nin       => id_dep_clin_serv_nin,
            id_prof_requested_in       => id_prof_requested_in,
            id_prof_requested_nin      => id_prof_requested_nin,
            flg_status_in              => flg_status_in,
            flg_status_nin             => flg_status_nin,
            notes_admin_in             => notes_admin_in,
            notes_admin_nin            => notes_admin_nin,
            id_schedule_in             => id_schedule_in,
            id_schedule_nin            => id_schedule_nin,
            dt_consult_req_tstz_in     => dt_consult_req_tstz_in,
            dt_consult_req_tstz_nin    => dt_consult_req_tstz_nin,
            dt_scheduled_tstz_in       => dt_scheduled_tstz_in,
            dt_scheduled_tstz_nin      => dt_scheduled_tstz_nin,
            dt_cancel_tstz_in          => dt_cancel_tstz_in,
            dt_cancel_tstz_nin         => dt_cancel_tstz_nin,
            next_visit_in_notes_in     => next_visit_in_notes_in,
            next_visit_in_notes_nin    => next_visit_in_notes_nin,
            flg_instructions_in        => flg_instructions_in,
            flg_instructions_nin       => flg_instructions_nin,
            id_complaint_in            => id_complaint_in,
            id_complaint_nin           => id_complaint_nin,
            flg_type_date_in           => flg_type_date_in,
            flg_type_date_nin          => flg_type_date_nin,
            status_flg_in              => status_flg_in,
            status_flg_nin             => status_flg_nin,
            status_icon_in             => status_icon_in,
            status_icon_nin            => status_icon_nin,
            status_msg_in              => status_msg_in,
            status_msg_nin             => status_msg_nin,
            status_str_in              => status_str_in,
            status_str_nin             => status_str_nin,
            reason_for_visit_in        => reason_for_visit_in,
            reason_for_visit_nin       => reason_for_visit_nin,
            create_user_in             => create_user_in,
            create_user_nin            => create_user_nin,
            create_time_in             => create_time_in,
            create_time_nin            => create_time_nin,
            create_institution_in      => create_institution_in,
            create_institution_nin     => create_institution_nin,
            update_user_in             => update_user_in,
            update_user_nin            => update_user_nin,
            update_time_in             => update_time_in,
            update_time_nin            => update_time_nin,
            update_institution_in      => update_institution_in,
            update_institution_nin     => update_institution_nin,
            flg_type_in                => flg_type_in,
            flg_type_nin               => flg_type_nin,
            id_cancel_reason_in        => id_cancel_reason_in,
            id_cancel_reason_nin       => id_cancel_reason_nin,
            id_epis_documentation_in   => id_epis_documentation_in,
            id_epis_documentation_nin  => id_epis_documentation_nin,
            id_epis_type_in            => id_epis_type_in,
            id_epis_type_nin           => id_epis_type_nin,
            dt_last_update_in          => dt_last_update_in,
            dt_last_update_nin         => dt_last_update_nin,
            id_prof_last_update_in     => id_prof_last_update_in,
            id_prof_last_update_nin    => id_prof_last_update_nin,
            id_inst_last_update_in     => id_inst_last_update_in,
            id_inst_last_update_nin    => id_inst_last_update_nin,
            id_sch_event_in            => id_sch_event_in,
            id_sch_event_nin           => id_sch_event_nin,
            dt_begin_event_in          => dt_begin_event_in,
            dt_begin_event_nin         => dt_begin_event_nin,
            dt_end_event_in            => dt_end_event_in,
            dt_end_event_nin           => dt_end_event_nin,
            flg_priority_in            => flg_priority_in,
            flg_priority_nin           => flg_priority_nin,
            flg_contact_type_in        => flg_contact_type_in,
            flg_contact_type_nin       => flg_contact_type_nin,
            instructions_in            => instructions_in,
            instructions_nin           => instructions_nin,
            id_room_in                 => id_room_in,
            id_room_nin                => id_room_nin,
            flg_request_type_in        => flg_request_type_in,
            flg_request_type_nin       => flg_request_type_nin,
            flg_req_resp_in            => flg_req_resp_in,
            flg_req_resp_nin           => flg_req_resp_nin,
            request_reason_in          => request_reason_in,
            request_reason_nin         => request_reason_nin,
            id_language_in             => id_language_in,
            id_language_nin            => id_language_nin,
            flg_recurrence_in          => flg_recurrence_in,
            flg_recurrence_nin         => flg_recurrence_nin,
            frequency_in               => frequency_in,
            frequency_nin              => frequency_nin,
            dt_rec_begin_in            => dt_rec_begin_in,
            dt_rec_begin_nin           => dt_rec_begin_nin,
            dt_rec_end_in              => dt_rec_end_in,
            dt_rec_end_nin             => dt_rec_end_nin,
            nr_events_in               => nr_events_in,
            nr_events_nin              => nr_events_nin,
            week_day_in                => week_day_in,
            week_day_nin               => week_day_nin,
            week_nr_in                 => week_nr_in,
            week_nr_nin                => week_nr_nin,
            month_day_in               => month_day_in,
            month_day_nin              => month_day_nin,
            month_nr_in                => month_nr_in,
            month_nr_nin               => month_nr_nin,
            id_task_dependency_in      => id_task_dependency_in,
            id_task_dependency_nin     => id_task_dependency_nin,
            flg_freq_origin_module_in  => flg_freq_origin_module_in,
            flg_freq_origin_module_nin => flg_freq_origin_module_nin,
            id_episode_to_exec_in      => id_episode_to_exec_in,
            id_episode_to_exec_nin     => id_episode_to_exec_nin,
            id_soft_reg_by_in          => id_soft_reg_by_in,
            id_soft_reg_by_nin         => id_soft_reg_by_nin,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END upd;

    PROCEDURE upd
    (
        consult_type_in            IN consult_req.consult_type%TYPE DEFAULT NULL,
        consult_type_nin           IN BOOLEAN := TRUE,
        id_clinical_service_in     IN consult_req.id_clinical_service%TYPE DEFAULT NULL,
        id_clinical_service_nin    IN BOOLEAN := TRUE,
        id_patient_in              IN consult_req.id_patient%TYPE DEFAULT NULL,
        id_patient_nin             IN BOOLEAN := TRUE,
        id_instit_requests_in      IN consult_req.id_instit_requests%TYPE DEFAULT NULL,
        id_instit_requests_nin     IN BOOLEAN := TRUE,
        id_inst_requested_in       IN consult_req.id_inst_requested%TYPE DEFAULT NULL,
        id_inst_requested_nin      IN BOOLEAN := TRUE,
        id_episode_in              IN consult_req.id_episode%TYPE DEFAULT NULL,
        id_episode_nin             IN BOOLEAN := TRUE,
        id_prof_req_in             IN consult_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_req_nin            IN BOOLEAN := TRUE,
        id_prof_auth_in            IN consult_req.id_prof_auth%TYPE DEFAULT NULL,
        id_prof_auth_nin           IN BOOLEAN := TRUE,
        id_prof_appr_in            IN consult_req.id_prof_appr%TYPE DEFAULT NULL,
        id_prof_appr_nin           IN BOOLEAN := TRUE,
        id_prof_proc_in            IN consult_req.id_prof_proc%TYPE DEFAULT NULL,
        id_prof_proc_nin           IN BOOLEAN := TRUE,
        notes_in                   IN consult_req.notes%TYPE DEFAULT NULL,
        notes_nin                  IN BOOLEAN := TRUE,
        id_prof_cancel_in          IN consult_req.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin         IN BOOLEAN := TRUE,
        notes_cancel_in            IN consult_req.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin           IN BOOLEAN := TRUE,
        id_dep_clin_serv_in        IN consult_req.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_dep_clin_serv_nin       IN BOOLEAN := TRUE,
        id_prof_requested_in       IN consult_req.id_prof_requested%TYPE DEFAULT NULL,
        id_prof_requested_nin      IN BOOLEAN := TRUE,
        flg_status_in              IN consult_req.flg_status%TYPE DEFAULT NULL,
        flg_status_nin             IN BOOLEAN := TRUE,
        notes_admin_in             IN consult_req.notes_admin%TYPE DEFAULT NULL,
        notes_admin_nin            IN BOOLEAN := TRUE,
        id_schedule_in             IN consult_req.id_schedule%TYPE DEFAULT NULL,
        id_schedule_nin            IN BOOLEAN := TRUE,
        dt_consult_req_tstz_in     IN consult_req.dt_consult_req_tstz%TYPE DEFAULT NULL,
        dt_consult_req_tstz_nin    IN BOOLEAN := TRUE,
        dt_scheduled_tstz_in       IN consult_req.dt_scheduled_tstz%TYPE DEFAULT NULL,
        dt_scheduled_tstz_nin      IN BOOLEAN := TRUE,
        dt_cancel_tstz_in          IN consult_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin         IN BOOLEAN := TRUE,
        next_visit_in_notes_in     IN consult_req.next_visit_in_notes%TYPE DEFAULT NULL,
        next_visit_in_notes_nin    IN BOOLEAN := TRUE,
        flg_instructions_in        IN consult_req.flg_instructions%TYPE DEFAULT NULL,
        flg_instructions_nin       IN BOOLEAN := TRUE,
        id_complaint_in            IN consult_req.id_complaint%TYPE DEFAULT NULL,
        id_complaint_nin           IN BOOLEAN := TRUE,
        flg_type_date_in           IN consult_req.flg_type_date%TYPE DEFAULT NULL,
        flg_type_date_nin          IN BOOLEAN := TRUE,
        status_flg_in              IN consult_req.status_flg%TYPE DEFAULT NULL,
        status_flg_nin             IN BOOLEAN := TRUE,
        status_icon_in             IN consult_req.status_icon%TYPE DEFAULT NULL,
        status_icon_nin            IN BOOLEAN := TRUE,
        status_msg_in              IN consult_req.status_msg%TYPE DEFAULT NULL,
        status_msg_nin             IN BOOLEAN := TRUE,
        status_str_in              IN consult_req.status_str%TYPE DEFAULT NULL,
        status_str_nin             IN BOOLEAN := TRUE,
        reason_for_visit_in        IN consult_req.reason_for_visit%TYPE DEFAULT NULL,
        reason_for_visit_nin       IN BOOLEAN := TRUE,
        create_user_in             IN consult_req.create_user%TYPE DEFAULT NULL,
        create_user_nin            IN BOOLEAN := TRUE,
        create_time_in             IN consult_req.create_time%TYPE DEFAULT NULL,
        create_time_nin            IN BOOLEAN := TRUE,
        create_institution_in      IN consult_req.create_institution%TYPE DEFAULT NULL,
        create_institution_nin     IN BOOLEAN := TRUE,
        update_user_in             IN consult_req.update_user%TYPE DEFAULT NULL,
        update_user_nin            IN BOOLEAN := TRUE,
        update_time_in             IN consult_req.update_time%TYPE DEFAULT NULL,
        update_time_nin            IN BOOLEAN := TRUE,
        update_institution_in      IN consult_req.update_institution%TYPE DEFAULT NULL,
        update_institution_nin     IN BOOLEAN := TRUE,
        flg_type_in                IN consult_req.flg_type%TYPE DEFAULT NULL,
        flg_type_nin               IN BOOLEAN := TRUE,
        id_cancel_reason_in        IN consult_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin       IN BOOLEAN := TRUE,
        id_epis_documentation_in   IN consult_req.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_documentation_nin  IN BOOLEAN := TRUE,
        id_epis_type_in            IN consult_req.id_epis_type%TYPE DEFAULT NULL,
        id_epis_type_nin           IN BOOLEAN := TRUE,
        dt_last_update_in          IN consult_req.dt_last_update%TYPE DEFAULT NULL,
        dt_last_update_nin         IN BOOLEAN := TRUE,
        id_prof_last_update_in     IN consult_req.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin    IN BOOLEAN := TRUE,
        id_inst_last_update_in     IN consult_req.id_inst_last_update%TYPE DEFAULT NULL,
        id_inst_last_update_nin    IN BOOLEAN := TRUE,
        id_sch_event_in            IN consult_req.id_sch_event%TYPE DEFAULT NULL,
        id_sch_event_nin           IN BOOLEAN := TRUE,
        dt_begin_event_in          IN consult_req.dt_begin_event%TYPE DEFAULT NULL,
        dt_begin_event_nin         IN BOOLEAN := TRUE,
        dt_end_event_in            IN consult_req.dt_end_event%TYPE DEFAULT NULL,
        dt_end_event_nin           IN BOOLEAN := TRUE,
        flg_priority_in            IN consult_req.flg_priority%TYPE DEFAULT NULL,
        flg_priority_nin           IN BOOLEAN := TRUE,
        flg_contact_type_in        IN consult_req.flg_contact_type%TYPE DEFAULT NULL,
        flg_contact_type_nin       IN BOOLEAN := TRUE,
        instructions_in            IN consult_req.instructions%TYPE DEFAULT NULL,
        instructions_nin           IN BOOLEAN := TRUE,
        id_room_in                 IN consult_req.id_room%TYPE DEFAULT NULL,
        id_room_nin                IN BOOLEAN := TRUE,
        flg_request_type_in        IN consult_req.flg_request_type%TYPE DEFAULT NULL,
        flg_request_type_nin       IN BOOLEAN := TRUE,
        flg_req_resp_in            IN consult_req.flg_req_resp%TYPE DEFAULT NULL,
        flg_req_resp_nin           IN BOOLEAN := TRUE,
        request_reason_in          IN consult_req.request_reason%TYPE DEFAULT NULL,
        request_reason_nin         IN BOOLEAN := TRUE,
        id_language_in             IN consult_req.id_language%TYPE DEFAULT NULL,
        id_language_nin            IN BOOLEAN := TRUE,
        flg_recurrence_in          IN consult_req.flg_recurrence%TYPE DEFAULT NULL,
        flg_recurrence_nin         IN BOOLEAN := TRUE,
        frequency_in               IN consult_req.frequency%TYPE DEFAULT NULL,
        frequency_nin              IN BOOLEAN := TRUE,
        dt_rec_begin_in            IN consult_req.dt_rec_begin%TYPE DEFAULT NULL,
        dt_rec_begin_nin           IN BOOLEAN := TRUE,
        dt_rec_end_in              IN consult_req.dt_rec_end%TYPE DEFAULT NULL,
        dt_rec_end_nin             IN BOOLEAN := TRUE,
        nr_events_in               IN consult_req.nr_events%TYPE DEFAULT NULL,
        nr_events_nin              IN BOOLEAN := TRUE,
        week_day_in                IN consult_req.week_day%TYPE DEFAULT NULL,
        week_day_nin               IN BOOLEAN := TRUE,
        week_nr_in                 IN consult_req.week_nr%TYPE DEFAULT NULL,
        week_nr_nin                IN BOOLEAN := TRUE,
        month_day_in               IN consult_req.month_day%TYPE DEFAULT NULL,
        month_day_nin              IN BOOLEAN := TRUE,
        month_nr_in                IN consult_req.month_nr%TYPE DEFAULT NULL,
        month_nr_nin               IN BOOLEAN := TRUE,
        id_task_dependency_in      IN consult_req.id_task_dependency%TYPE DEFAULT NULL,
        id_task_dependency_nin     IN BOOLEAN := TRUE,
        flg_freq_origin_module_in  IN consult_req.flg_freq_origin_module%TYPE DEFAULT NULL,
        flg_freq_origin_module_nin IN BOOLEAN := TRUE,
        id_episode_to_exec_in      IN consult_req.id_episode_to_exec%TYPE DEFAULT NULL,
        id_episode_to_exec_nin     IN BOOLEAN := TRUE,
        id_soft_reg_by_in          IN consult_req.id_soft_reg_by%TYPE DEFAULT NULL,
        id_soft_reg_by_nin         IN BOOLEAN := TRUE,
        where_in                   VARCHAR2 DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   IN OUT table_varchar
    ) IS
        l_sql                      VARCHAR2(32767);
        l_rows_out                 table_varchar;
        l_consult_type_n           NUMBER(1);
        l_id_clinical_service_n    NUMBER(1);
        l_id_patient_n             NUMBER(1);
        l_id_instit_requests_n     NUMBER(1);
        l_id_inst_requested_n      NUMBER(1);
        l_id_episode_n             NUMBER(1);
        l_id_prof_req_n            NUMBER(1);
        l_id_prof_auth_n           NUMBER(1);
        l_id_prof_appr_n           NUMBER(1);
        l_id_prof_proc_n           NUMBER(1);
        l_notes_n                  NUMBER(1);
        l_id_prof_cancel_n         NUMBER(1);
        l_notes_cancel_n           NUMBER(1);
        l_id_dep_clin_serv_n       NUMBER(1);
        l_id_prof_requested_n      NUMBER(1);
        l_flg_status_n             NUMBER(1);
        l_notes_admin_n            NUMBER(1);
        l_id_schedule_n            NUMBER(1);
        l_dt_consult_req_tstz_n    NUMBER(1);
        l_dt_scheduled_tstz_n      NUMBER(1);
        l_dt_cancel_tstz_n         NUMBER(1);
        l_next_visit_in_notes_n    NUMBER(1);
        l_flg_instructions_n       NUMBER(1);
        l_id_complaint_n           NUMBER(1);
        l_flg_type_date_n          NUMBER(1);
        l_status_flg_n             NUMBER(1);
        l_status_icon_n            NUMBER(1);
        l_status_msg_n             NUMBER(1);
        l_status_str_n             NUMBER(1);
        l_reason_for_visit_n       NUMBER(1);
        l_create_user_n            NUMBER(1);
        l_create_time_n            NUMBER(1);
        l_create_institution_n     NUMBER(1);
        l_update_user_n            NUMBER(1);
        l_update_time_n            NUMBER(1);
        l_update_institution_n     NUMBER(1);
        l_flg_type_n               NUMBER(1);
        l_id_cancel_reason_n       NUMBER(1);
        l_id_epis_documentation_n  NUMBER(1);
        l_id_epis_type_n           NUMBER(1);
        l_dt_last_update_n         NUMBER(1);
        l_id_prof_last_update_n    NUMBER(1);
        l_id_inst_last_update_n    NUMBER(1);
        l_id_sch_event_n           NUMBER(1);
        l_dt_begin_event_n         NUMBER(1);
        l_dt_end_event_n           NUMBER(1);
        l_flg_priority_n           NUMBER(1);
        l_flg_contact_type_n       NUMBER(1);
        l_instructions_n           NUMBER(1);
        l_id_room_n                NUMBER(1);
        l_flg_request_type_n       NUMBER(1);
        l_flg_req_resp_n           NUMBER(1);
        l_request_reason_n         NUMBER(1);
        l_id_language_n            NUMBER(1);
        l_flg_recurrence_n         NUMBER(1);
        l_frequency_n              NUMBER(1);
        l_dt_rec_begin_n           NUMBER(1);
        l_dt_rec_end_n             NUMBER(1);
        l_nr_events_n              NUMBER(1);
        l_week_day_n               NUMBER(1);
        l_week_nr_n                NUMBER(1);
        l_month_day_n              NUMBER(1);
        l_month_nr_n               NUMBER(1);
        l_id_task_dependency_n     NUMBER(1);
        l_flg_freq_origin_module_n NUMBER(1);
        l_id_episode_to_exec_n     NUMBER(1);
        l_id_soft_reg_by_n         NUMBER(1);
        id_consult_req_in          consult_req.id_consult_req%TYPE;
    BEGIN

        l_consult_type_n           := sys.diutil.bool_to_int(consult_type_nin);
        l_id_clinical_service_n    := sys.diutil.bool_to_int(id_clinical_service_nin);
        l_id_patient_n             := sys.diutil.bool_to_int(id_patient_nin);
        l_id_instit_requests_n     := sys.diutil.bool_to_int(id_instit_requests_nin);
        l_id_inst_requested_n      := sys.diutil.bool_to_int(id_inst_requested_nin);
        l_id_episode_n             := sys.diutil.bool_to_int(id_episode_nin);
        l_id_prof_req_n            := sys.diutil.bool_to_int(id_prof_req_nin);
        l_id_prof_auth_n           := sys.diutil.bool_to_int(id_prof_auth_nin);
        l_id_prof_appr_n           := sys.diutil.bool_to_int(id_prof_appr_nin);
        l_id_prof_proc_n           := sys.diutil.bool_to_int(id_prof_proc_nin);
        l_notes_n                  := sys.diutil.bool_to_int(notes_nin);
        l_id_prof_cancel_n         := sys.diutil.bool_to_int(id_prof_cancel_nin);
        l_notes_cancel_n           := sys.diutil.bool_to_int(notes_cancel_nin);
        l_id_dep_clin_serv_n       := sys.diutil.bool_to_int(id_dep_clin_serv_nin);
        l_id_prof_requested_n      := sys.diutil.bool_to_int(id_prof_requested_nin);
        l_flg_status_n             := sys.diutil.bool_to_int(flg_status_nin);
        l_notes_admin_n            := sys.diutil.bool_to_int(notes_admin_nin);
        l_id_schedule_n            := sys.diutil.bool_to_int(id_schedule_nin);
        l_dt_consult_req_tstz_n    := sys.diutil.bool_to_int(dt_consult_req_tstz_nin);
        l_dt_scheduled_tstz_n      := sys.diutil.bool_to_int(dt_scheduled_tstz_nin);
        l_dt_cancel_tstz_n         := sys.diutil.bool_to_int(dt_cancel_tstz_nin);
        l_next_visit_in_notes_n    := sys.diutil.bool_to_int(next_visit_in_notes_nin);
        l_flg_instructions_n       := sys.diutil.bool_to_int(flg_instructions_nin);
        l_id_complaint_n           := sys.diutil.bool_to_int(id_complaint_nin);
        l_flg_type_date_n          := sys.diutil.bool_to_int(flg_type_date_nin);
        l_status_flg_n             := sys.diutil.bool_to_int(status_flg_nin);
        l_status_icon_n            := sys.diutil.bool_to_int(status_icon_nin);
        l_status_msg_n             := sys.diutil.bool_to_int(status_msg_nin);
        l_status_str_n             := sys.diutil.bool_to_int(status_str_nin);
        l_reason_for_visit_n       := sys.diutil.bool_to_int(reason_for_visit_nin);
        l_create_user_n            := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n            := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n     := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n            := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n            := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n     := sys.diutil.bool_to_int(update_institution_nin);
        l_flg_type_n               := sys.diutil.bool_to_int(flg_type_nin);
        l_id_cancel_reason_n       := sys.diutil.bool_to_int(id_cancel_reason_nin);
        l_id_epis_documentation_n  := sys.diutil.bool_to_int(id_epis_documentation_nin);
        l_id_epis_type_n           := sys.diutil.bool_to_int(id_epis_type_nin);
        l_dt_last_update_n         := sys.diutil.bool_to_int(dt_last_update_nin);
        l_id_prof_last_update_n    := sys.diutil.bool_to_int(id_prof_last_update_nin);
        l_id_inst_last_update_n    := sys.diutil.bool_to_int(id_inst_last_update_nin);
        l_id_sch_event_n           := sys.diutil.bool_to_int(id_sch_event_nin);
        l_dt_begin_event_n         := sys.diutil.bool_to_int(dt_begin_event_nin);
        l_dt_end_event_n           := sys.diutil.bool_to_int(dt_end_event_nin);
        l_flg_priority_n           := sys.diutil.bool_to_int(flg_priority_nin);
        l_flg_contact_type_n       := sys.diutil.bool_to_int(flg_contact_type_nin);
        l_instructions_n           := sys.diutil.bool_to_int(instructions_nin);
        l_id_room_n                := sys.diutil.bool_to_int(id_room_nin);
        l_flg_request_type_n       := sys.diutil.bool_to_int(flg_request_type_nin);
        l_flg_req_resp_n           := sys.diutil.bool_to_int(flg_req_resp_nin);
        l_request_reason_n         := sys.diutil.bool_to_int(request_reason_nin);
        l_id_language_n            := sys.diutil.bool_to_int(id_language_nin);
        l_flg_recurrence_n         := sys.diutil.bool_to_int(flg_recurrence_nin);
        l_frequency_n              := sys.diutil.bool_to_int(frequency_nin);
        l_dt_rec_begin_n           := sys.diutil.bool_to_int(dt_rec_begin_nin);
        l_dt_rec_end_n             := sys.diutil.bool_to_int(dt_rec_end_nin);
        l_nr_events_n              := sys.diutil.bool_to_int(nr_events_nin);
        l_week_day_n               := sys.diutil.bool_to_int(week_day_nin);
        l_week_nr_n                := sys.diutil.bool_to_int(week_nr_nin);
        l_month_day_n              := sys.diutil.bool_to_int(month_day_nin);
        l_month_nr_n               := sys.diutil.bool_to_int(month_nr_nin);
        l_id_task_dependency_n     := sys.diutil.bool_to_int(id_task_dependency_nin);
        l_flg_freq_origin_module_n := sys.diutil.bool_to_int(flg_freq_origin_module_nin);
        l_id_episode_to_exec_n     := sys.diutil.bool_to_int(id_episode_to_exec_nin);
        l_id_soft_reg_by_n         := sys.diutil.bool_to_int(id_soft_reg_by_nin);

        l_sql := 'UPDATE CONSULT_REQ SET ' || ' CONSULT_TYPE = decode (' || l_consult_type_n ||
                 ',0,:consult_type_in, NVL (:consult_type_in, CONSULT_TYPE)) ' || ',' ||
                 ' ID_CLINICAL_SERVICE = decode (' || l_id_clinical_service_n ||
                 ',0,:id_clinical_service_in, NVL (:id_clinical_service_in, ID_CLINICAL_SERVICE)) ' || ',' ||
                 ' ID_PATIENT = decode (' || l_id_patient_n || ',0,:id_patient_in, NVL (:id_patient_in, ID_PATIENT)) ' || ',' ||
                 ' ID_INSTIT_REQUESTS = decode (' || l_id_instit_requests_n ||
                 ',0,:id_instit_requests_in, NVL (:id_instit_requests_in, ID_INSTIT_REQUESTS)) ' || ',' ||
                 ' ID_INST_REQUESTED = decode (' || l_id_inst_requested_n ||
                 ',0,:id_inst_requested_in, NVL (:id_inst_requested_in, ID_INST_REQUESTED)) ' || ',' ||
                 ' ID_EPISODE = decode (' || l_id_episode_n || ',0,:id_episode_in, NVL (:id_episode_in, ID_EPISODE)) ' || ',' ||
                 ' ID_PROF_REQ = decode (' || l_id_prof_req_n ||
                 ',0,:id_prof_req_in, NVL (:id_prof_req_in, ID_PROF_REQ)) ' || ',' || ' ID_PROF_AUTH = decode (' ||
                 l_id_prof_auth_n || ',0,:id_prof_auth_in, NVL (:id_prof_auth_in, ID_PROF_AUTH)) ' || ',' ||
                 ' ID_PROF_APPR = decode (' || l_id_prof_appr_n ||
                 ',0,:id_prof_appr_in, NVL (:id_prof_appr_in, ID_PROF_APPR)) ' || ',' || ' ID_PROF_PROC = decode (' ||
                 l_id_prof_proc_n || ',0,:id_prof_proc_in, NVL (:id_prof_proc_in, ID_PROF_PROC)) ' || ',' ||
                 ' NOTES = decode (' || l_notes_n || ',0,:notes_in, NVL (:notes_in, NOTES)) ' || ',' ||
                 ' ID_PROF_CANCEL = decode (' || l_id_prof_cancel_n ||
                 ',0,:id_prof_cancel_in, NVL (:id_prof_cancel_in, ID_PROF_CANCEL)) ' || ',' ||
                 ' NOTES_CANCEL = decode (' || l_notes_cancel_n ||
                 ',0,:notes_cancel_in, NVL (:notes_cancel_in, NOTES_CANCEL)) ' || ',' || ' ID_DEP_CLIN_SERV = decode (' ||
                 l_id_dep_clin_serv_n || ',0,:id_dep_clin_serv_in, NVL (:id_dep_clin_serv_in, ID_DEP_CLIN_SERV)) ' || ',' ||
                 ' ID_PROF_REQUESTED = decode (' || l_id_prof_requested_n ||
                 ',0,:id_prof_requested_in, NVL (:id_prof_requested_in, ID_PROF_REQUESTED)) ' || ',' ||
                 ' FLG_STATUS = decode (' || l_flg_status_n || ',0,:flg_status_in, NVL (:flg_status_in, FLG_STATUS)) ' || ',' ||
                 ' NOTES_ADMIN = decode (' || l_notes_admin_n ||
                 ',0,:notes_admin_in, NVL (:notes_admin_in, NOTES_ADMIN)) ' || ',' || ' ID_SCHEDULE = decode (' ||
                 l_id_schedule_n || ',0,:id_schedule_in, NVL (:id_schedule_in, ID_SCHEDULE)) ' || ',' ||
                 ' DT_CONSULT_REQ_TSTZ = decode (' || l_dt_consult_req_tstz_n ||
                 ',0,:dt_consult_req_tstz_in, NVL (:dt_consult_req_tstz_in, DT_CONSULT_REQ_TSTZ)) ' || ',' ||
                 ' DT_SCHEDULED_TSTZ = decode (' || l_dt_scheduled_tstz_n ||
                 ',0,:dt_scheduled_tstz_in, NVL (:dt_scheduled_tstz_in, DT_SCHEDULED_TSTZ)) ' || ',' ||
                 ' DT_CANCEL_TSTZ = decode (' || l_dt_cancel_tstz_n ||
                 ',0,:dt_cancel_tstz_in, NVL (:dt_cancel_tstz_in, DT_CANCEL_TSTZ)) ' || ',' ||
                 ' NEXT_VISIT_IN_NOTES = decode (' || l_next_visit_in_notes_n ||
                 ',0,:next_visit_in_notes_in, NVL (:next_visit_in_notes_in, NEXT_VISIT_IN_NOTES)) ' || ',' ||
                 ' FLG_INSTRUCTIONS = decode (' || l_flg_instructions_n ||
                 ',0,:flg_instructions_in, NVL (:flg_instructions_in, FLG_INSTRUCTIONS)) ' || ',' ||
                 ' ID_COMPLAINT = decode (' || l_id_complaint_n ||
                 ',0,:id_complaint_in, NVL (:id_complaint_in, ID_COMPLAINT)) ' || ',' || ' FLG_TYPE_DATE = decode (' ||
                 l_flg_type_date_n || ',0,:flg_type_date_in, NVL (:flg_type_date_in, FLG_TYPE_DATE)) ' || ',' ||
                 ' STATUS_FLG = decode (' || l_status_flg_n || ',0,:status_flg_in, NVL (:status_flg_in, STATUS_FLG)) ' || ',' ||
                 ' STATUS_ICON = decode (' || l_status_icon_n ||
                 ',0,:status_icon_in, NVL (:status_icon_in, STATUS_ICON)) ' || ',' || ' STATUS_MSG = decode (' ||
                 l_status_msg_n || ',0,:status_msg_in, NVL (:status_msg_in, STATUS_MSG)) ' || ',' ||
                 ' STATUS_STR = decode (' || l_status_str_n || ',0,:status_str_in, NVL (:status_str_in, STATUS_STR)) ' || ',' ||
                 ' REASON_FOR_VISIT = decode (' || l_reason_for_visit_n ||
                 ',0,:reason_for_visit_in, NVL (:reason_for_visit_in, REASON_FOR_VISIT)) ' || ',' ||
                 ' CREATE_USER = decode (' || l_create_user_n ||
                 ',0,:create_user_in, NVL (:create_user_in, CREATE_USER)) ' || ',' || ' CREATE_TIME = decode (' ||
                 l_create_time_n || ',0,:create_time_in, NVL (:create_time_in, CREATE_TIME)) ' || ',' ||
                 ' CREATE_INSTITUTION = decode (' || l_create_institution_n ||
                 ',0,:create_institution_in, NVL (:create_institution_in, CREATE_INSTITUTION)) ' || ',' ||
                 ' UPDATE_USER = decode (' || l_update_user_n ||
                 ',0,:update_user_in, NVL (:update_user_in, UPDATE_USER)) ' || ',' || ' UPDATE_TIME = decode (' ||
                 l_update_time_n || ',0,:update_time_in, NVL (:update_time_in, UPDATE_TIME)) ' || ',' ||
                 ' UPDATE_INSTITUTION = decode (' || l_update_institution_n ||
                 ',0,:update_institution_in, NVL (:update_institution_in, UPDATE_INSTITUTION)) ' || ',' ||
                 ' FLG_TYPE = decode (' || l_flg_type_n || ',0,:flg_type_in, NVL (:flg_type_in, FLG_TYPE)) ' || ',' ||
                 ' ID_CANCEL_REASON = decode (' || l_id_cancel_reason_n ||
                 ',0,:id_cancel_reason_in, NVL (:id_cancel_reason_in, ID_CANCEL_REASON)) ' || ',' ||
                 ' ID_EPIS_DOCUMENTATION = decode (' || l_id_epis_documentation_n ||
                 ',0,:id_epis_documentation_in, NVL (:id_epis_documentation_in, ID_EPIS_DOCUMENTATION)) ' || ',' ||
                 ' ID_EPIS_TYPE = decode (' || l_id_epis_type_n ||
                 ',0,:id_epis_type_in, NVL (:id_epis_type_in, ID_EPIS_TYPE)) ' || ',' || ' DT_LAST_UPDATE = decode (' ||
                 l_dt_last_update_n || ',0,:dt_last_update_in, NVL (:dt_last_update_in, DT_LAST_UPDATE)) ' || ',' ||
                 ' ID_PROF_LAST_UPDATE = decode (' || l_id_prof_last_update_n ||
                 ',0,:id_prof_last_update_in, NVL (:id_prof_last_update_in, ID_PROF_LAST_UPDATE)) ' || ',' ||
                 ' ID_INST_LAST_UPDATE = decode (' || l_id_inst_last_update_n ||
                 ',0,:id_inst_last_update_in, NVL (:id_inst_last_update_in, ID_INST_LAST_UPDATE)) ' || ',' ||
                 ' ID_SCH_EVENT = decode (' || l_id_sch_event_n ||
                 ',0,:id_sch_event_in, NVL (:id_sch_event_in, ID_SCH_EVENT)) ' || ',' || ' DT_BEGIN_EVENT = decode (' ||
                 l_dt_begin_event_n || ',0,:dt_begin_event_in, NVL (:dt_begin_event_in, DT_BEGIN_EVENT)) ' || ',' ||
                 ' DT_END_EVENT = decode (' || l_dt_end_event_n ||
                 ',0,:dt_end_event_in, NVL (:dt_end_event_in, DT_END_EVENT)) ' || ',' || ' FLG_PRIORITY = decode (' ||
                 l_flg_priority_n || ',0,:flg_priority_in, NVL (:flg_priority_in, FLG_PRIORITY)) ' || ',' ||
                 ' FLG_CONTACT_TYPE = decode (' || l_flg_contact_type_n ||
                 ',0,:flg_contact_type_in, NVL (:flg_contact_type_in, FLG_CONTACT_TYPE)) ' || ',' ||
                 ' INSTRUCTIONS = decode (' || l_instructions_n ||
                 ',0,:instructions_in, NVL (:instructions_in, INSTRUCTIONS)) ' || ',' || ' ID_ROOM = decode (' ||
                 l_id_room_n || ',0,:id_room_in, NVL (:id_room_in, ID_ROOM)) ' || ',' || ' FLG_REQUEST_TYPE = decode (' ||
                 l_flg_request_type_n || ',0,:flg_request_type_in, NVL (:flg_request_type_in, FLG_REQUEST_TYPE)) ' || ',' ||
                 ' FLG_REQ_RESP = decode (' || l_flg_req_resp_n ||
                 ',0,:flg_req_resp_in, NVL (:flg_req_resp_in, FLG_REQ_RESP)) ' || ',' || ' REQUEST_REASON = decode (' ||
                 l_request_reason_n || ',0,:request_reason_in, NVL (:request_reason_in, REQUEST_REASON)) ' || ',' ||
                 ' ID_LANGUAGE = decode (' || l_id_language_n ||
                 ',0,:id_language_in, NVL (:id_language_in, ID_LANGUAGE)) ' || ',' || ' FLG_RECURRENCE = decode (' ||
                 l_flg_recurrence_n || ',0,:flg_recurrence_in, NVL (:flg_recurrence_in, FLG_RECURRENCE)) ' || ',' ||
                 ' FREQUENCY = decode (' || l_frequency_n || ',0,:frequency_in, NVL (:frequency_in, FREQUENCY)) ' || ',' ||
                 ' DT_REC_BEGIN = decode (' || l_dt_rec_begin_n ||
                 ',0,:dt_rec_begin_in, NVL (:dt_rec_begin_in, DT_REC_BEGIN)) ' || ',' || ' DT_REC_END = decode (' ||
                 l_dt_rec_end_n || ',0,:dt_rec_end_in, NVL (:dt_rec_end_in, DT_REC_END)) ' || ',' ||
                 ' NR_EVENTS = decode (' || l_nr_events_n || ',0,:nr_events_in, NVL (:nr_events_in, NR_EVENTS)) ' || ',' ||
                 ' WEEK_DAY = decode (' || l_week_day_n || ',0,:week_day_in, NVL (:week_day_in, WEEK_DAY)) ' || ',' ||
                 ' WEEK_NR = decode (' || l_week_nr_n || ',0,:week_nr_in, NVL (:week_nr_in, WEEK_NR)) ' || ',' ||
                 ' MONTH_DAY = decode (' || l_month_day_n || ',0,:month_day_in, NVL (:month_day_in, MONTH_DAY)) ' || ',' ||
                 ' MONTH_NR = decode (' || l_month_nr_n || ',0,:month_nr_in, NVL (:month_nr_in, MONTH_NR)) ' || ',' ||
                 ' ID_TASK_DEPENDENCY = decode (' || l_id_task_dependency_n ||
                 ',0,:id_task_dependency_in, NVL (:id_task_dependency_in, ID_TASK_DEPENDENCY)) ' || ',' ||
                 ' FLG_FREQ_ORIGIN_MODULE = decode (' || l_flg_freq_origin_module_n ||
                 ',0,:flg_freq_origin_module_in, NVL (:flg_freq_origin_module_in, FLG_FREQ_ORIGIN_MODULE)) ' || ',' ||
                 ' ID_EPISODE_TO_EXEC = decode (' || l_id_episode_to_exec_n ||
                 ',0,:id_episode_to_exec_in, NVL (:id_episode_to_exec_in, ID_EPISODE_TO_EXEC)) ' || ',' ||
                 ' ID_SOFT_REG_BY = decode (' || l_id_soft_reg_by_n ||
                 ',0,:id_soft_reg_by_in, NVL (:id_soft_reg_by_in, ID_SOFT_REG_BY)) ' || ' where ' ||
                 nvl(where_in, '(1=1)') || ' RETURNING ROWID BULK COLLECT INTO :l_rows_out';

        EXECUTE IMMEDIATE 'BEGIN ' || l_sql || '; END;'
            USING IN consult_type_in, id_clinical_service_in, id_patient_in, id_instit_requests_in, id_inst_requested_in, id_episode_in, id_prof_req_in, id_prof_auth_in, id_prof_appr_in, id_prof_proc_in, notes_in, id_prof_cancel_in, notes_cancel_in, id_dep_clin_serv_in, id_prof_requested_in, flg_status_in, notes_admin_in, id_schedule_in, dt_consult_req_tstz_in, dt_scheduled_tstz_in, dt_cancel_tstz_in, next_visit_in_notes_in, flg_instructions_in, id_complaint_in, flg_type_date_in, status_flg_in, status_icon_in, status_msg_in, status_str_in, reason_for_visit_in, create_user_in, create_time_in, create_institution_in, update_user_in, update_time_in, update_institution_in, flg_type_in, id_cancel_reason_in, id_epis_documentation_in, id_epis_type_in, dt_last_update_in, id_prof_last_update_in, id_inst_last_update_in, id_sch_event_in, dt_begin_event_in, dt_end_event_in, flg_priority_in, flg_contact_type_in, instructions_in, id_room_in, flg_request_type_in, flg_req_resp_in, request_reason_in, id_language_in, flg_recurrence_in, frequency_in, dt_rec_begin_in, dt_rec_end_in, nr_events_in, week_day_in, week_nr_in, month_day_in, month_nr_in, id_task_dependency_in, flg_freq_origin_module_in, id_episode_to_exec_in, id_soft_reg_by_in, OUT l_rows_out;

        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;

        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;

    EXCEPTION
        WHEN dup_val_on_index THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner           all_constraints.owner%TYPE;
                    l_name            all_constraints.constraint_name%TYPE;
                    l_err_instance_id PLS_INTEGER;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF FALSE
                    THEN
                        NULL; -- Placeholder in case no unique indexes
                    ELSE
                        pk_alert_exceptions.raise_error(error_name_in => 'DUPLICATE-VALUE',
                                                        name1_in      => 'OWNER',
                                                        value1_in     => l_owner,
                                                        name2_in      => 'CONSTRAINT_NAME',
                                                        value2_in     => l_name,
                                                        name3_in      => 'TABLE_NAME',
                                                        value3_in     => 'CONSULT_REQ');
                    END IF;
                END;
            END IF;
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    IF l_name = 'CRQ_COMPLAINT_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_COMPLAINT',
                                                        value_in           => id_complaint_in);
                    END IF;
                    IF l_name = 'CRQ_CSE_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_CLINICAL_SERVICE',
                                                        value_in           => id_clinical_service_in);
                    END IF;
                    IF l_name = 'CRQ_DCS_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_DEP_CLIN_SERV',
                                                        value_in           => id_dep_clin_serv_in);
                    END IF;
                    IF l_name = 'CRQ_EPD_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_EPIS_DOCUMENTATION',
                                                        value_in           => id_epis_documentation_in);
                    END IF;
                    IF l_name = 'CRQ_EPIS_EXEC_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_EPISODE_TO_EXEC',
                                                        value_in           => id_episode_to_exec_in);
                    END IF;
                    IF l_name = 'CRQ_EPIS_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_EPISODE',
                                                        value_in           => id_episode_in);
                    END IF;
                    IF l_name = 'CRQ_EPIS_TYPE_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_EPIS_TYPE',
                                                        value_in           => id_epis_type_in);
                    END IF;
                    IF l_name = 'CRQ_INST_REQUESTED_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_INST_REQUESTED',
                                                        value_in           => id_inst_requested_in);
                    END IF;
                    IF l_name = 'CRQ_INST_REQUESTS_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_INSTIT_REQUESTS',
                                                        value_in           => id_instit_requests_in);
                    END IF;
                    IF l_name = 'CRQ_LANGUAGE_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_LANGUAGE',
                                                        value_in           => id_language_in);
                    END IF;
                    IF l_name = 'CRQ_LAST_UPDATE_BY_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_LAST_UPDATE',
                                                        value_in           => id_prof_last_update_in);
                    END IF;
                    IF l_name = 'CRQ_LAST_UPDATE_INST_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_INST_LAST_UPDATE',
                                                        value_in           => id_inst_last_update_in);
                    END IF;
                    IF l_name = 'CRQ_PAT_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PATIENT',
                                                        value_in           => id_patient_in);
                    END IF;
                    IF l_name = 'CRQ_PROF_APPR_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_APPR',
                                                        value_in           => id_prof_appr_in);
                    END IF;
                    IF l_name = 'CRQ_PROF_AUTH_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_AUTH',
                                                        value_in           => id_prof_auth_in);
                    END IF;
                    IF l_name = 'CRQ_PROF_CANCEL_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_CANCEL',
                                                        value_in           => id_prof_cancel_in);
                    END IF;
                    IF l_name = 'CRQ_PROF_PROC_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_PROC',
                                                        value_in           => id_prof_proc_in);
                    END IF;
                    IF l_name = 'CRQ_PROF_REQUESTED_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_REQUESTED',
                                                        value_in           => id_prof_requested_in);
                    END IF;
                    IF l_name = 'CRQ_PROF_REQ_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_PROF_REQ',
                                                        value_in           => id_prof_req_in);
                    END IF;
                    IF l_name = 'CRQ_ROOM_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_ROOM',
                                                        value_in           => id_room_in);
                    END IF;
                    IF l_name = 'CRQ_SCHEDULE_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_SCHEDULE',
                                                        value_in           => id_schedule_in);
                    END IF;
                    IF l_name = 'CRQ_SCH_EVENT_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_SCH_EVENT',
                                                        value_in           => id_sch_event_in);
                    END IF;
                    IF l_name = 'CRQ_TASK_DEP_FK'
                    THEN
                        -- Add a context value for each column
                        pk_alert_exceptions.add_context(err_instance_id_in => l_id,
                                                        name_in            => 'ID_TASK_DEPENDENCY',
                                                        value_in           => id_task_dependency_in);
                    END IF;
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
        WHEN e_null_column_value THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    v_errm    VARCHAR2(2000) := dbms_utility.format_error_stack;
                    dot1loc   INTEGER;
                    dot2loc   INTEGER;
                    parenloc  INTEGER;
                    c_owner   all_constraints.owner%TYPE;
                    c_tabname all_tables.table_name%TYPE;
                    c_colname all_tab_columns.column_name%TYPE;
                BEGIN
                    dot1loc   := instr(v_errm, '.', 1, 1);
                    dot2loc   := instr(v_errm, '.', 1, 2);
                    parenloc  := instr(v_errm, '(');
                    c_owner   := substr(v_errm, parenloc + 1, dot1loc - parenloc - 1);
                    c_tabname := substr(v_errm, dot1loc + 1, dot2loc - dot1loc - 1);
                    c_colname := substr(v_errm, dot2loc + 1, instr(v_errm, ')') - dot2loc - 1);

                    pk_alert_exceptions.raise_error(error_name_in => 'COLUMN-CANNOT-BE-NULL',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => c_owner,
                                                    name2_in      => 'TABLE_NAME',
                                                    value2_in     => c_tabname,
                                                    name3_in      => 'COLUMN_NAME',
                                                    value3_in     => c_colname);
                END;
            END IF;
    END upd;

    PROCEDURE upd
    (
        consult_type_in            IN consult_req.consult_type%TYPE DEFAULT NULL,
        consult_type_nin           IN BOOLEAN := TRUE,
        id_clinical_service_in     IN consult_req.id_clinical_service%TYPE DEFAULT NULL,
        id_clinical_service_nin    IN BOOLEAN := TRUE,
        id_patient_in              IN consult_req.id_patient%TYPE DEFAULT NULL,
        id_patient_nin             IN BOOLEAN := TRUE,
        id_instit_requests_in      IN consult_req.id_instit_requests%TYPE DEFAULT NULL,
        id_instit_requests_nin     IN BOOLEAN := TRUE,
        id_inst_requested_in       IN consult_req.id_inst_requested%TYPE DEFAULT NULL,
        id_inst_requested_nin      IN BOOLEAN := TRUE,
        id_episode_in              IN consult_req.id_episode%TYPE DEFAULT NULL,
        id_episode_nin             IN BOOLEAN := TRUE,
        id_prof_req_in             IN consult_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_req_nin            IN BOOLEAN := TRUE,
        id_prof_auth_in            IN consult_req.id_prof_auth%TYPE DEFAULT NULL,
        id_prof_auth_nin           IN BOOLEAN := TRUE,
        id_prof_appr_in            IN consult_req.id_prof_appr%TYPE DEFAULT NULL,
        id_prof_appr_nin           IN BOOLEAN := TRUE,
        id_prof_proc_in            IN consult_req.id_prof_proc%TYPE DEFAULT NULL,
        id_prof_proc_nin           IN BOOLEAN := TRUE,
        notes_in                   IN consult_req.notes%TYPE DEFAULT NULL,
        notes_nin                  IN BOOLEAN := TRUE,
        id_prof_cancel_in          IN consult_req.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin         IN BOOLEAN := TRUE,
        notes_cancel_in            IN consult_req.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin           IN BOOLEAN := TRUE,
        id_dep_clin_serv_in        IN consult_req.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_dep_clin_serv_nin       IN BOOLEAN := TRUE,
        id_prof_requested_in       IN consult_req.id_prof_requested%TYPE DEFAULT NULL,
        id_prof_requested_nin      IN BOOLEAN := TRUE,
        flg_status_in              IN consult_req.flg_status%TYPE DEFAULT NULL,
        flg_status_nin             IN BOOLEAN := TRUE,
        notes_admin_in             IN consult_req.notes_admin%TYPE DEFAULT NULL,
        notes_admin_nin            IN BOOLEAN := TRUE,
        id_schedule_in             IN consult_req.id_schedule%TYPE DEFAULT NULL,
        id_schedule_nin            IN BOOLEAN := TRUE,
        dt_consult_req_tstz_in     IN consult_req.dt_consult_req_tstz%TYPE DEFAULT NULL,
        dt_consult_req_tstz_nin    IN BOOLEAN := TRUE,
        dt_scheduled_tstz_in       IN consult_req.dt_scheduled_tstz%TYPE DEFAULT NULL,
        dt_scheduled_tstz_nin      IN BOOLEAN := TRUE,
        dt_cancel_tstz_in          IN consult_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin         IN BOOLEAN := TRUE,
        next_visit_in_notes_in     IN consult_req.next_visit_in_notes%TYPE DEFAULT NULL,
        next_visit_in_notes_nin    IN BOOLEAN := TRUE,
        flg_instructions_in        IN consult_req.flg_instructions%TYPE DEFAULT NULL,
        flg_instructions_nin       IN BOOLEAN := TRUE,
        id_complaint_in            IN consult_req.id_complaint%TYPE DEFAULT NULL,
        id_complaint_nin           IN BOOLEAN := TRUE,
        flg_type_date_in           IN consult_req.flg_type_date%TYPE DEFAULT NULL,
        flg_type_date_nin          IN BOOLEAN := TRUE,
        status_flg_in              IN consult_req.status_flg%TYPE DEFAULT NULL,
        status_flg_nin             IN BOOLEAN := TRUE,
        status_icon_in             IN consult_req.status_icon%TYPE DEFAULT NULL,
        status_icon_nin            IN BOOLEAN := TRUE,
        status_msg_in              IN consult_req.status_msg%TYPE DEFAULT NULL,
        status_msg_nin             IN BOOLEAN := TRUE,
        status_str_in              IN consult_req.status_str%TYPE DEFAULT NULL,
        status_str_nin             IN BOOLEAN := TRUE,
        reason_for_visit_in        IN consult_req.reason_for_visit%TYPE DEFAULT NULL,
        reason_for_visit_nin       IN BOOLEAN := TRUE,
        create_user_in             IN consult_req.create_user%TYPE DEFAULT NULL,
        create_user_nin            IN BOOLEAN := TRUE,
        create_time_in             IN consult_req.create_time%TYPE DEFAULT NULL,
        create_time_nin            IN BOOLEAN := TRUE,
        create_institution_in      IN consult_req.create_institution%TYPE DEFAULT NULL,
        create_institution_nin     IN BOOLEAN := TRUE,
        update_user_in             IN consult_req.update_user%TYPE DEFAULT NULL,
        update_user_nin            IN BOOLEAN := TRUE,
        update_time_in             IN consult_req.update_time%TYPE DEFAULT NULL,
        update_time_nin            IN BOOLEAN := TRUE,
        update_institution_in      IN consult_req.update_institution%TYPE DEFAULT NULL,
        update_institution_nin     IN BOOLEAN := TRUE,
        flg_type_in                IN consult_req.flg_type%TYPE DEFAULT NULL,
        flg_type_nin               IN BOOLEAN := TRUE,
        id_cancel_reason_in        IN consult_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin       IN BOOLEAN := TRUE,
        id_epis_documentation_in   IN consult_req.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_documentation_nin  IN BOOLEAN := TRUE,
        id_epis_type_in            IN consult_req.id_epis_type%TYPE DEFAULT NULL,
        id_epis_type_nin           IN BOOLEAN := TRUE,
        dt_last_update_in          IN consult_req.dt_last_update%TYPE DEFAULT NULL,
        dt_last_update_nin         IN BOOLEAN := TRUE,
        id_prof_last_update_in     IN consult_req.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin    IN BOOLEAN := TRUE,
        id_inst_last_update_in     IN consult_req.id_inst_last_update%TYPE DEFAULT NULL,
        id_inst_last_update_nin    IN BOOLEAN := TRUE,
        id_sch_event_in            IN consult_req.id_sch_event%TYPE DEFAULT NULL,
        id_sch_event_nin           IN BOOLEAN := TRUE,
        dt_begin_event_in          IN consult_req.dt_begin_event%TYPE DEFAULT NULL,
        dt_begin_event_nin         IN BOOLEAN := TRUE,
        dt_end_event_in            IN consult_req.dt_end_event%TYPE DEFAULT NULL,
        dt_end_event_nin           IN BOOLEAN := TRUE,
        flg_priority_in            IN consult_req.flg_priority%TYPE DEFAULT NULL,
        flg_priority_nin           IN BOOLEAN := TRUE,
        flg_contact_type_in        IN consult_req.flg_contact_type%TYPE DEFAULT NULL,
        flg_contact_type_nin       IN BOOLEAN := TRUE,
        instructions_in            IN consult_req.instructions%TYPE DEFAULT NULL,
        instructions_nin           IN BOOLEAN := TRUE,
        id_room_in                 IN consult_req.id_room%TYPE DEFAULT NULL,
        id_room_nin                IN BOOLEAN := TRUE,
        flg_request_type_in        IN consult_req.flg_request_type%TYPE DEFAULT NULL,
        flg_request_type_nin       IN BOOLEAN := TRUE,
        flg_req_resp_in            IN consult_req.flg_req_resp%TYPE DEFAULT NULL,
        flg_req_resp_nin           IN BOOLEAN := TRUE,
        request_reason_in          IN consult_req.request_reason%TYPE DEFAULT NULL,
        request_reason_nin         IN BOOLEAN := TRUE,
        id_language_in             IN consult_req.id_language%TYPE DEFAULT NULL,
        id_language_nin            IN BOOLEAN := TRUE,
        flg_recurrence_in          IN consult_req.flg_recurrence%TYPE DEFAULT NULL,
        flg_recurrence_nin         IN BOOLEAN := TRUE,
        frequency_in               IN consult_req.frequency%TYPE DEFAULT NULL,
        frequency_nin              IN BOOLEAN := TRUE,
        dt_rec_begin_in            IN consult_req.dt_rec_begin%TYPE DEFAULT NULL,
        dt_rec_begin_nin           IN BOOLEAN := TRUE,
        dt_rec_end_in              IN consult_req.dt_rec_end%TYPE DEFAULT NULL,
        dt_rec_end_nin             IN BOOLEAN := TRUE,
        nr_events_in               IN consult_req.nr_events%TYPE DEFAULT NULL,
        nr_events_nin              IN BOOLEAN := TRUE,
        week_day_in                IN consult_req.week_day%TYPE DEFAULT NULL,
        week_day_nin               IN BOOLEAN := TRUE,
        week_nr_in                 IN consult_req.week_nr%TYPE DEFAULT NULL,
        week_nr_nin                IN BOOLEAN := TRUE,
        month_day_in               IN consult_req.month_day%TYPE DEFAULT NULL,
        month_day_nin              IN BOOLEAN := TRUE,
        month_nr_in                IN consult_req.month_nr%TYPE DEFAULT NULL,
        month_nr_nin               IN BOOLEAN := TRUE,
        id_task_dependency_in      IN consult_req.id_task_dependency%TYPE DEFAULT NULL,
        id_task_dependency_nin     IN BOOLEAN := TRUE,
        flg_freq_origin_module_in  IN consult_req.flg_freq_origin_module%TYPE DEFAULT NULL,
        flg_freq_origin_module_nin IN BOOLEAN := TRUE,
        id_episode_to_exec_in      IN consult_req.id_episode_to_exec%TYPE DEFAULT NULL,
        id_episode_to_exec_nin     IN BOOLEAN := TRUE,
        id_soft_reg_by_in          IN consult_req.id_soft_reg_by%TYPE DEFAULT NULL,
        id_soft_reg_by_nin         IN BOOLEAN := TRUE,
        where_in                   VARCHAR2 DEFAULT NULL,
        handle_error_in            IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(consult_type_in            => consult_type_in,
            consult_type_nin           => consult_type_nin,
            id_clinical_service_in     => id_clinical_service_in,
            id_clinical_service_nin    => id_clinical_service_nin,
            id_patient_in              => id_patient_in,
            id_patient_nin             => id_patient_nin,
            id_instit_requests_in      => id_instit_requests_in,
            id_instit_requests_nin     => id_instit_requests_nin,
            id_inst_requested_in       => id_inst_requested_in,
            id_inst_requested_nin      => id_inst_requested_nin,
            id_episode_in              => id_episode_in,
            id_episode_nin             => id_episode_nin,
            id_prof_req_in             => id_prof_req_in,
            id_prof_req_nin            => id_prof_req_nin,
            id_prof_auth_in            => id_prof_auth_in,
            id_prof_auth_nin           => id_prof_auth_nin,
            id_prof_appr_in            => id_prof_appr_in,
            id_prof_appr_nin           => id_prof_appr_nin,
            id_prof_proc_in            => id_prof_proc_in,
            id_prof_proc_nin           => id_prof_proc_nin,
            notes_in                   => notes_in,
            notes_nin                  => notes_nin,
            id_prof_cancel_in          => id_prof_cancel_in,
            id_prof_cancel_nin         => id_prof_cancel_nin,
            notes_cancel_in            => notes_cancel_in,
            notes_cancel_nin           => notes_cancel_nin,
            id_dep_clin_serv_in        => id_dep_clin_serv_in,
            id_dep_clin_serv_nin       => id_dep_clin_serv_nin,
            id_prof_requested_in       => id_prof_requested_in,
            id_prof_requested_nin      => id_prof_requested_nin,
            flg_status_in              => flg_status_in,
            flg_status_nin             => flg_status_nin,
            notes_admin_in             => notes_admin_in,
            notes_admin_nin            => notes_admin_nin,
            id_schedule_in             => id_schedule_in,
            id_schedule_nin            => id_schedule_nin,
            dt_consult_req_tstz_in     => dt_consult_req_tstz_in,
            dt_consult_req_tstz_nin    => dt_consult_req_tstz_nin,
            dt_scheduled_tstz_in       => dt_scheduled_tstz_in,
            dt_scheduled_tstz_nin      => dt_scheduled_tstz_nin,
            dt_cancel_tstz_in          => dt_cancel_tstz_in,
            dt_cancel_tstz_nin         => dt_cancel_tstz_nin,
            next_visit_in_notes_in     => next_visit_in_notes_in,
            next_visit_in_notes_nin    => next_visit_in_notes_nin,
            flg_instructions_in        => flg_instructions_in,
            flg_instructions_nin       => flg_instructions_nin,
            id_complaint_in            => id_complaint_in,
            id_complaint_nin           => id_complaint_nin,
            flg_type_date_in           => flg_type_date_in,
            flg_type_date_nin          => flg_type_date_nin,
            status_flg_in              => status_flg_in,
            status_flg_nin             => status_flg_nin,
            status_icon_in             => status_icon_in,
            status_icon_nin            => status_icon_nin,
            status_msg_in              => status_msg_in,
            status_msg_nin             => status_msg_nin,
            status_str_in              => status_str_in,
            status_str_nin             => status_str_nin,
            reason_for_visit_in        => reason_for_visit_in,
            reason_for_visit_nin       => reason_for_visit_nin,
            create_user_in             => create_user_in,
            create_user_nin            => create_user_nin,
            create_time_in             => create_time_in,
            create_time_nin            => create_time_nin,
            create_institution_in      => create_institution_in,
            create_institution_nin     => create_institution_nin,
            update_user_in             => update_user_in,
            update_user_nin            => update_user_nin,
            update_time_in             => update_time_in,
            update_time_nin            => update_time_nin,
            update_institution_in      => update_institution_in,
            update_institution_nin     => update_institution_nin,
            flg_type_in                => flg_type_in,
            flg_type_nin               => flg_type_nin,
            id_cancel_reason_in        => id_cancel_reason_in,
            id_cancel_reason_nin       => id_cancel_reason_nin,
            id_epis_documentation_in   => id_epis_documentation_in,
            id_epis_documentation_nin  => id_epis_documentation_nin,
            id_epis_type_in            => id_epis_type_in,
            id_epis_type_nin           => id_epis_type_nin,
            dt_last_update_in          => dt_last_update_in,
            dt_last_update_nin         => dt_last_update_nin,
            id_prof_last_update_in     => id_prof_last_update_in,
            id_prof_last_update_nin    => id_prof_last_update_nin,
            id_inst_last_update_in     => id_inst_last_update_in,
            id_inst_last_update_nin    => id_inst_last_update_nin,
            id_sch_event_in            => id_sch_event_in,
            id_sch_event_nin           => id_sch_event_nin,
            dt_begin_event_in          => dt_begin_event_in,
            dt_begin_event_nin         => dt_begin_event_nin,
            dt_end_event_in            => dt_end_event_in,
            dt_end_event_nin           => dt_end_event_nin,
            flg_priority_in            => flg_priority_in,
            flg_priority_nin           => flg_priority_nin,
            flg_contact_type_in        => flg_contact_type_in,
            flg_contact_type_nin       => flg_contact_type_nin,
            instructions_in            => instructions_in,
            instructions_nin           => instructions_nin,
            id_room_in                 => id_room_in,
            id_room_nin                => id_room_nin,
            flg_request_type_in        => flg_request_type_in,
            flg_request_type_nin       => flg_request_type_nin,
            flg_req_resp_in            => flg_req_resp_in,
            flg_req_resp_nin           => flg_req_resp_nin,
            request_reason_in          => request_reason_in,
            request_reason_nin         => request_reason_nin,
            id_language_in             => id_language_in,
            id_language_nin            => id_language_nin,
            flg_recurrence_in          => flg_recurrence_in,
            flg_recurrence_nin         => flg_recurrence_nin,
            frequency_in               => frequency_in,
            frequency_nin              => frequency_nin,
            dt_rec_begin_in            => dt_rec_begin_in,
            dt_rec_begin_nin           => dt_rec_begin_nin,
            dt_rec_end_in              => dt_rec_end_in,
            dt_rec_end_nin             => dt_rec_end_nin,
            nr_events_in               => nr_events_in,
            nr_events_nin              => nr_events_nin,
            week_day_in                => week_day_in,
            week_day_nin               => week_day_nin,
            week_nr_in                 => week_nr_in,
            week_nr_nin                => week_nr_nin,
            month_day_in               => month_day_in,
            month_day_nin              => month_day_nin,
            month_nr_in                => month_nr_in,
            month_nr_nin               => month_nr_nin,
            id_task_dependency_in      => id_task_dependency_in,
            id_task_dependency_nin     => id_task_dependency_nin,
            flg_freq_origin_module_in  => flg_freq_origin_module_in,
            flg_freq_origin_module_nin => flg_freq_origin_module_nin,
            id_episode_to_exec_in      => id_episode_to_exec_in,
            id_episode_to_exec_nin     => id_episode_to_exec_nin,
            id_soft_reg_by_in          => id_soft_reg_by_in,
            id_soft_reg_by_nin         => id_soft_reg_by_nin,
            where_in                   => where_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END upd;

    PROCEDURE upd
    (
        rec_in          IN consult_req%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_consult_req_in         => rec_in.id_consult_req,
            consult_type_in           => rec_in.consult_type,
            id_clinical_service_in    => rec_in.id_clinical_service,
            id_patient_in             => rec_in.id_patient,
            id_instit_requests_in     => rec_in.id_instit_requests,
            id_inst_requested_in      => rec_in.id_inst_requested,
            id_episode_in             => rec_in.id_episode,
            id_prof_req_in            => rec_in.id_prof_req,
            id_prof_auth_in           => rec_in.id_prof_auth,
            id_prof_appr_in           => rec_in.id_prof_appr,
            id_prof_proc_in           => rec_in.id_prof_proc,
            notes_in                  => rec_in.notes,
            id_prof_cancel_in         => rec_in.id_prof_cancel,
            notes_cancel_in           => rec_in.notes_cancel,
            id_dep_clin_serv_in       => rec_in.id_dep_clin_serv,
            id_prof_requested_in      => rec_in.id_prof_requested,
            flg_status_in             => rec_in.flg_status,
            notes_admin_in            => rec_in.notes_admin,
            id_schedule_in            => rec_in.id_schedule,
            dt_consult_req_tstz_in    => rec_in.dt_consult_req_tstz,
            dt_scheduled_tstz_in      => rec_in.dt_scheduled_tstz,
            dt_cancel_tstz_in         => rec_in.dt_cancel_tstz,
            next_visit_in_notes_in    => rec_in.next_visit_in_notes,
            flg_instructions_in       => rec_in.flg_instructions,
            id_complaint_in           => rec_in.id_complaint,
            flg_type_date_in          => rec_in.flg_type_date,
            status_flg_in             => rec_in.status_flg,
            status_icon_in            => rec_in.status_icon,
            status_msg_in             => rec_in.status_msg,
            status_str_in             => rec_in.status_str,
            reason_for_visit_in       => rec_in.reason_for_visit,
            create_user_in            => rec_in.create_user,
            create_time_in            => rec_in.create_time,
            create_institution_in     => rec_in.create_institution,
            update_user_in            => rec_in.update_user,
            update_time_in            => rec_in.update_time,
            update_institution_in     => rec_in.update_institution,
            flg_type_in               => rec_in.flg_type,
            id_cancel_reason_in       => rec_in.id_cancel_reason,
            id_epis_documentation_in  => rec_in.id_epis_documentation,
            id_epis_type_in           => rec_in.id_epis_type,
            dt_last_update_in         => rec_in.dt_last_update,
            id_prof_last_update_in    => rec_in.id_prof_last_update,
            id_inst_last_update_in    => rec_in.id_inst_last_update,
            id_sch_event_in           => rec_in.id_sch_event,
            dt_begin_event_in         => rec_in.dt_begin_event,
            dt_end_event_in           => rec_in.dt_end_event,
            flg_priority_in           => rec_in.flg_priority,
            flg_contact_type_in       => rec_in.flg_contact_type,
            instructions_in           => rec_in.instructions,
            id_room_in                => rec_in.id_room,
            flg_request_type_in       => rec_in.flg_request_type,
            flg_req_resp_in           => rec_in.flg_req_resp,
            request_reason_in         => rec_in.request_reason,
            id_language_in            => rec_in.id_language,
            flg_recurrence_in         => rec_in.flg_recurrence,
            frequency_in              => rec_in.frequency,
            dt_rec_begin_in           => rec_in.dt_rec_begin,
            dt_rec_end_in             => rec_in.dt_rec_end,
            nr_events_in              => rec_in.nr_events,
            week_day_in               => rec_in.week_day,
            week_nr_in                => rec_in.week_nr,
            month_day_in              => rec_in.month_day,
            month_nr_in               => rec_in.month_nr,
            id_task_dependency_in     => rec_in.id_task_dependency,
            flg_freq_origin_module_in => rec_in.flg_freq_origin_module,
            id_episode_to_exec_in     => rec_in.id_episode_to_exec,
            id_soft_reg_by_in         => rec_in.id_soft_reg_by

           ,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    END upd;

    PROCEDURE upd
    (
        rec_in          IN consult_req%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_consult_req_in         => rec_in.id_consult_req,
            consult_type_in           => rec_in.consult_type,
            id_clinical_service_in    => rec_in.id_clinical_service,
            id_patient_in             => rec_in.id_patient,
            id_instit_requests_in     => rec_in.id_instit_requests,
            id_inst_requested_in      => rec_in.id_inst_requested,
            id_episode_in             => rec_in.id_episode,
            id_prof_req_in            => rec_in.id_prof_req,
            id_prof_auth_in           => rec_in.id_prof_auth,
            id_prof_appr_in           => rec_in.id_prof_appr,
            id_prof_proc_in           => rec_in.id_prof_proc,
            notes_in                  => rec_in.notes,
            id_prof_cancel_in         => rec_in.id_prof_cancel,
            notes_cancel_in           => rec_in.notes_cancel,
            id_dep_clin_serv_in       => rec_in.id_dep_clin_serv,
            id_prof_requested_in      => rec_in.id_prof_requested,
            flg_status_in             => rec_in.flg_status,
            notes_admin_in            => rec_in.notes_admin,
            id_schedule_in            => rec_in.id_schedule,
            dt_consult_req_tstz_in    => rec_in.dt_consult_req_tstz,
            dt_scheduled_tstz_in      => rec_in.dt_scheduled_tstz,
            dt_cancel_tstz_in         => rec_in.dt_cancel_tstz,
            next_visit_in_notes_in    => rec_in.next_visit_in_notes,
            flg_instructions_in       => rec_in.flg_instructions,
            id_complaint_in           => rec_in.id_complaint,
            flg_type_date_in          => rec_in.flg_type_date,
            status_flg_in             => rec_in.status_flg,
            status_icon_in            => rec_in.status_icon,
            status_msg_in             => rec_in.status_msg,
            status_str_in             => rec_in.status_str,
            reason_for_visit_in       => rec_in.reason_for_visit,
            create_user_in            => rec_in.create_user,
            create_time_in            => rec_in.create_time,
            create_institution_in     => rec_in.create_institution,
            update_user_in            => rec_in.update_user,
            update_time_in            => rec_in.update_time,
            update_institution_in     => rec_in.update_institution,
            flg_type_in               => rec_in.flg_type,
            id_cancel_reason_in       => rec_in.id_cancel_reason,
            id_epis_documentation_in  => rec_in.id_epis_documentation,
            id_epis_type_in           => rec_in.id_epis_type,
            dt_last_update_in         => rec_in.dt_last_update,
            id_prof_last_update_in    => rec_in.id_prof_last_update,
            id_inst_last_update_in    => rec_in.id_inst_last_update,
            id_sch_event_in           => rec_in.id_sch_event,
            dt_begin_event_in         => rec_in.dt_begin_event,
            dt_end_event_in           => rec_in.dt_end_event,
            flg_priority_in           => rec_in.flg_priority,
            flg_contact_type_in       => rec_in.flg_contact_type,
            instructions_in           => rec_in.instructions,
            id_room_in                => rec_in.id_room,
            flg_request_type_in       => rec_in.flg_request_type,
            flg_req_resp_in           => rec_in.flg_req_resp,
            request_reason_in         => rec_in.request_reason,
            id_language_in            => rec_in.id_language,
            flg_recurrence_in         => rec_in.flg_recurrence,
            frequency_in              => rec_in.frequency,
            dt_rec_begin_in           => rec_in.dt_rec_begin,
            dt_rec_end_in             => rec_in.dt_rec_end,
            nr_events_in              => rec_in.nr_events,
            week_day_in               => rec_in.week_day,
            week_nr_in                => rec_in.week_nr,
            month_day_in              => rec_in.month_day,
            month_nr_in               => rec_in.month_nr,
            id_task_dependency_in     => rec_in.id_task_dependency,
            flg_freq_origin_module_in => rec_in.flg_freq_origin_module,
            id_episode_to_exec_in     => rec_in.id_episode_to_exec,
            id_soft_reg_by_in         => rec_in.id_soft_reg_by

           ,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    END upd;

    PROCEDURE upd_ins
    (
        id_consult_req_in         IN consult_req.id_consult_req%TYPE,
        consult_type_in           IN consult_req.consult_type%TYPE DEFAULT NULL,
        id_clinical_service_in    IN consult_req.id_clinical_service%TYPE DEFAULT NULL,
        id_patient_in             IN consult_req.id_patient%TYPE DEFAULT NULL,
        id_instit_requests_in     IN consult_req.id_instit_requests%TYPE DEFAULT NULL,
        id_inst_requested_in      IN consult_req.id_inst_requested%TYPE DEFAULT NULL,
        id_episode_in             IN consult_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in            IN consult_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_auth_in           IN consult_req.id_prof_auth%TYPE DEFAULT NULL,
        id_prof_appr_in           IN consult_req.id_prof_appr%TYPE DEFAULT NULL,
        id_prof_proc_in           IN consult_req.id_prof_proc%TYPE DEFAULT NULL,
        notes_in                  IN consult_req.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN consult_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN consult_req.notes_cancel%TYPE DEFAULT NULL,
        id_dep_clin_serv_in       IN consult_req.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_prof_requested_in      IN consult_req.id_prof_requested%TYPE DEFAULT NULL,
        flg_status_in             IN consult_req.flg_status%TYPE DEFAULT NULL,
        notes_admin_in            IN consult_req.notes_admin%TYPE DEFAULT NULL,
        id_schedule_in            IN consult_req.id_schedule%TYPE DEFAULT NULL,
        dt_consult_req_tstz_in    IN consult_req.dt_consult_req_tstz%TYPE DEFAULT NULL,
        dt_scheduled_tstz_in      IN consult_req.dt_scheduled_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN consult_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        next_visit_in_notes_in    IN consult_req.next_visit_in_notes%TYPE DEFAULT NULL,
        flg_instructions_in       IN consult_req.flg_instructions%TYPE DEFAULT NULL,
        id_complaint_in           IN consult_req.id_complaint%TYPE DEFAULT NULL,
        flg_type_date_in          IN consult_req.flg_type_date%TYPE DEFAULT NULL,
        status_flg_in             IN consult_req.status_flg%TYPE DEFAULT NULL,
        status_icon_in            IN consult_req.status_icon%TYPE DEFAULT NULL,
        status_msg_in             IN consult_req.status_msg%TYPE DEFAULT NULL,
        status_str_in             IN consult_req.status_str%TYPE DEFAULT NULL,
        reason_for_visit_in       IN consult_req.reason_for_visit%TYPE DEFAULT NULL,
        create_user_in            IN consult_req.create_user%TYPE DEFAULT NULL,
        create_time_in            IN consult_req.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN consult_req.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN consult_req.update_user%TYPE DEFAULT NULL,
        update_time_in            IN consult_req.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN consult_req.update_institution%TYPE DEFAULT NULL,
        flg_type_in               IN consult_req.flg_type%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN consult_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_epis_documentation_in  IN consult_req.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_type_in           IN consult_req.id_epis_type%TYPE DEFAULT NULL,
        dt_last_update_in         IN consult_req.dt_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN consult_req.id_prof_last_update%TYPE DEFAULT NULL,
        id_inst_last_update_in    IN consult_req.id_inst_last_update%TYPE DEFAULT NULL,
        id_sch_event_in           IN consult_req.id_sch_event%TYPE DEFAULT NULL,
        dt_begin_event_in         IN consult_req.dt_begin_event%TYPE DEFAULT NULL,
        dt_end_event_in           IN consult_req.dt_end_event%TYPE DEFAULT NULL,
        flg_priority_in           IN consult_req.flg_priority%TYPE DEFAULT NULL,
        flg_contact_type_in       IN consult_req.flg_contact_type%TYPE DEFAULT NULL,
        instructions_in           IN consult_req.instructions%TYPE DEFAULT NULL,
        id_room_in                IN consult_req.id_room%TYPE DEFAULT NULL,
        flg_request_type_in       IN consult_req.flg_request_type%TYPE DEFAULT NULL,
        flg_req_resp_in           IN consult_req.flg_req_resp%TYPE DEFAULT NULL,
        request_reason_in         IN consult_req.request_reason%TYPE DEFAULT NULL,
        id_language_in            IN consult_req.id_language%TYPE DEFAULT NULL,
        flg_recurrence_in         IN consult_req.flg_recurrence%TYPE DEFAULT NULL,
        frequency_in              IN consult_req.frequency%TYPE DEFAULT NULL,
        dt_rec_begin_in           IN consult_req.dt_rec_begin%TYPE DEFAULT NULL,
        dt_rec_end_in             IN consult_req.dt_rec_end%TYPE DEFAULT NULL,
        nr_events_in              IN consult_req.nr_events%TYPE DEFAULT NULL,
        week_day_in               IN consult_req.week_day%TYPE DEFAULT NULL,
        week_nr_in                IN consult_req.week_nr%TYPE DEFAULT NULL,
        month_day_in              IN consult_req.month_day%TYPE DEFAULT NULL,
        month_nr_in               IN consult_req.month_nr%TYPE DEFAULT NULL,
        id_task_dependency_in     IN consult_req.id_task_dependency%TYPE DEFAULT NULL,
        flg_freq_origin_module_in IN consult_req.flg_freq_origin_module%TYPE DEFAULT NULL,
        id_episode_to_exec_in     IN consult_req.id_episode_to_exec%TYPE DEFAULT NULL,
        id_soft_reg_by_in         IN consult_req.id_soft_reg_by%TYPE DEFAULT NULL,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  OUT table_varchar
    ) IS
    BEGIN
        upd(id_consult_req_in         => id_consult_req_in,
            consult_type_in           => consult_type_in,
            id_clinical_service_in    => id_clinical_service_in,
            id_patient_in             => id_patient_in,
            id_instit_requests_in     => id_instit_requests_in,
            id_inst_requested_in      => id_inst_requested_in,
            id_episode_in             => id_episode_in,
            id_prof_req_in            => id_prof_req_in,
            id_prof_auth_in           => id_prof_auth_in,
            id_prof_appr_in           => id_prof_appr_in,
            id_prof_proc_in           => id_prof_proc_in,
            notes_in                  => notes_in,
            id_prof_cancel_in         => id_prof_cancel_in,
            notes_cancel_in           => notes_cancel_in,
            id_dep_clin_serv_in       => id_dep_clin_serv_in,
            id_prof_requested_in      => id_prof_requested_in,
            flg_status_in             => flg_status_in,
            notes_admin_in            => notes_admin_in,
            id_schedule_in            => id_schedule_in,
            dt_consult_req_tstz_in    => dt_consult_req_tstz_in,
            dt_scheduled_tstz_in      => dt_scheduled_tstz_in,
            dt_cancel_tstz_in         => dt_cancel_tstz_in,
            next_visit_in_notes_in    => next_visit_in_notes_in,
            flg_instructions_in       => flg_instructions_in,
            id_complaint_in           => id_complaint_in,
            flg_type_date_in          => flg_type_date_in,
            status_flg_in             => status_flg_in,
            status_icon_in            => status_icon_in,
            status_msg_in             => status_msg_in,
            status_str_in             => status_str_in,
            reason_for_visit_in       => reason_for_visit_in,
            create_user_in            => create_user_in,
            create_time_in            => create_time_in,
            create_institution_in     => create_institution_in,
            update_user_in            => update_user_in,
            update_time_in            => update_time_in,
            update_institution_in     => update_institution_in,
            flg_type_in               => flg_type_in,
            id_cancel_reason_in       => id_cancel_reason_in,
            id_epis_documentation_in  => id_epis_documentation_in,
            id_epis_type_in           => id_epis_type_in,
            dt_last_update_in         => dt_last_update_in,
            id_prof_last_update_in    => id_prof_last_update_in,
            id_inst_last_update_in    => id_inst_last_update_in,
            id_sch_event_in           => id_sch_event_in,
            dt_begin_event_in         => dt_begin_event_in,
            dt_end_event_in           => dt_end_event_in,
            flg_priority_in           => flg_priority_in,
            flg_contact_type_in       => flg_contact_type_in,
            instructions_in           => instructions_in,
            id_room_in                => id_room_in,
            flg_request_type_in       => flg_request_type_in,
            flg_req_resp_in           => flg_req_resp_in,
            request_reason_in         => request_reason_in,
            id_language_in            => id_language_in,
            flg_recurrence_in         => flg_recurrence_in,
            frequency_in              => frequency_in,
            dt_rec_begin_in           => dt_rec_begin_in,
            dt_rec_end_in             => dt_rec_end_in,
            nr_events_in              => nr_events_in,
            week_day_in               => week_day_in,
            week_nr_in                => week_nr_in,
            month_day_in              => month_day_in,
            month_nr_in               => month_nr_in,
            id_task_dependency_in     => id_task_dependency_in,
            flg_freq_origin_module_in => flg_freq_origin_module_in,
            id_episode_to_exec_in     => id_episode_to_exec_in,
            id_soft_reg_by_in         => id_soft_reg_by_in,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
        IF SQL%ROWCOUNT = 0
        THEN
            ins(id_consult_req_in         => id_consult_req_in,
                consult_type_in           => consult_type_in,
                id_clinical_service_in    => id_clinical_service_in,
                id_patient_in             => id_patient_in,
                id_instit_requests_in     => id_instit_requests_in,
                id_inst_requested_in      => id_inst_requested_in,
                id_episode_in             => id_episode_in,
                id_prof_req_in            => id_prof_req_in,
                id_prof_auth_in           => id_prof_auth_in,
                id_prof_appr_in           => id_prof_appr_in,
                id_prof_proc_in           => id_prof_proc_in,
                notes_in                  => notes_in,
                id_prof_cancel_in         => id_prof_cancel_in,
                notes_cancel_in           => notes_cancel_in,
                id_dep_clin_serv_in       => id_dep_clin_serv_in,
                id_prof_requested_in      => id_prof_requested_in,
                flg_status_in             => flg_status_in,
                notes_admin_in            => notes_admin_in,
                id_schedule_in            => id_schedule_in,
                dt_consult_req_tstz_in    => dt_consult_req_tstz_in,
                dt_scheduled_tstz_in      => dt_scheduled_tstz_in,
                dt_cancel_tstz_in         => dt_cancel_tstz_in,
                next_visit_in_notes_in    => next_visit_in_notes_in,
                flg_instructions_in       => flg_instructions_in,
                id_complaint_in           => id_complaint_in,
                flg_type_date_in          => flg_type_date_in,
                status_flg_in             => status_flg_in,
                status_icon_in            => status_icon_in,
                status_msg_in             => status_msg_in,
                status_str_in             => status_str_in,
                reason_for_visit_in       => reason_for_visit_in,
                create_user_in            => create_user_in,
                create_time_in            => create_time_in,
                create_institution_in     => create_institution_in,
                update_user_in            => update_user_in,
                update_time_in            => update_time_in,
                update_institution_in     => update_institution_in,
                flg_type_in               => flg_type_in,
                id_cancel_reason_in       => id_cancel_reason_in,
                id_epis_documentation_in  => id_epis_documentation_in,
                id_epis_type_in           => id_epis_type_in,
                dt_last_update_in         => dt_last_update_in,
                id_prof_last_update_in    => id_prof_last_update_in,
                id_inst_last_update_in    => id_inst_last_update_in,
                id_sch_event_in           => id_sch_event_in,
                dt_begin_event_in         => dt_begin_event_in,
                dt_end_event_in           => dt_end_event_in,
                flg_priority_in           => flg_priority_in,
                flg_contact_type_in       => flg_contact_type_in,
                instructions_in           => instructions_in,
                id_room_in                => id_room_in,
                flg_request_type_in       => flg_request_type_in,
                flg_req_resp_in           => flg_req_resp_in,
                request_reason_in         => request_reason_in,
                id_language_in            => id_language_in,
                flg_recurrence_in         => flg_recurrence_in,
                frequency_in              => frequency_in,
                dt_rec_begin_in           => dt_rec_begin_in,
                dt_rec_end_in             => dt_rec_end_in,
                nr_events_in              => nr_events_in,
                week_day_in               => week_day_in,
                week_nr_in                => week_nr_in,
                month_day_in              => month_day_in,
                month_nr_in               => month_nr_in,
                id_task_dependency_in     => id_task_dependency_in,
                flg_freq_origin_module_in => flg_freq_origin_module_in,
                id_episode_to_exec_in     => id_episode_to_exec_in,
                id_soft_reg_by_in         => id_soft_reg_by_in,
                handle_error_in           => handle_error_in,
                rows_out                  => rows_out);
        END IF;
    END upd_ins;

    PROCEDURE upd_ins
    (
        id_consult_req_in         IN consult_req.id_consult_req%TYPE,
        consult_type_in           IN consult_req.consult_type%TYPE DEFAULT NULL,
        id_clinical_service_in    IN consult_req.id_clinical_service%TYPE DEFAULT NULL,
        id_patient_in             IN consult_req.id_patient%TYPE DEFAULT NULL,
        id_instit_requests_in     IN consult_req.id_instit_requests%TYPE DEFAULT NULL,
        id_inst_requested_in      IN consult_req.id_inst_requested%TYPE DEFAULT NULL,
        id_episode_in             IN consult_req.id_episode%TYPE DEFAULT NULL,
        id_prof_req_in            IN consult_req.id_prof_req%TYPE DEFAULT NULL,
        id_prof_auth_in           IN consult_req.id_prof_auth%TYPE DEFAULT NULL,
        id_prof_appr_in           IN consult_req.id_prof_appr%TYPE DEFAULT NULL,
        id_prof_proc_in           IN consult_req.id_prof_proc%TYPE DEFAULT NULL,
        notes_in                  IN consult_req.notes%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN consult_req.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN consult_req.notes_cancel%TYPE DEFAULT NULL,
        id_dep_clin_serv_in       IN consult_req.id_dep_clin_serv%TYPE DEFAULT NULL,
        id_prof_requested_in      IN consult_req.id_prof_requested%TYPE DEFAULT NULL,
        flg_status_in             IN consult_req.flg_status%TYPE DEFAULT NULL,
        notes_admin_in            IN consult_req.notes_admin%TYPE DEFAULT NULL,
        id_schedule_in            IN consult_req.id_schedule%TYPE DEFAULT NULL,
        dt_consult_req_tstz_in    IN consult_req.dt_consult_req_tstz%TYPE DEFAULT NULL,
        dt_scheduled_tstz_in      IN consult_req.dt_scheduled_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN consult_req.dt_cancel_tstz%TYPE DEFAULT NULL,
        next_visit_in_notes_in    IN consult_req.next_visit_in_notes%TYPE DEFAULT NULL,
        flg_instructions_in       IN consult_req.flg_instructions%TYPE DEFAULT NULL,
        id_complaint_in           IN consult_req.id_complaint%TYPE DEFAULT NULL,
        flg_type_date_in          IN consult_req.flg_type_date%TYPE DEFAULT NULL,
        status_flg_in             IN consult_req.status_flg%TYPE DEFAULT NULL,
        status_icon_in            IN consult_req.status_icon%TYPE DEFAULT NULL,
        status_msg_in             IN consult_req.status_msg%TYPE DEFAULT NULL,
        status_str_in             IN consult_req.status_str%TYPE DEFAULT NULL,
        reason_for_visit_in       IN consult_req.reason_for_visit%TYPE DEFAULT NULL,
        create_user_in            IN consult_req.create_user%TYPE DEFAULT NULL,
        create_time_in            IN consult_req.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN consult_req.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN consult_req.update_user%TYPE DEFAULT NULL,
        update_time_in            IN consult_req.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN consult_req.update_institution%TYPE DEFAULT NULL,
        flg_type_in               IN consult_req.flg_type%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN consult_req.id_cancel_reason%TYPE DEFAULT NULL,
        id_epis_documentation_in  IN consult_req.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_type_in           IN consult_req.id_epis_type%TYPE DEFAULT NULL,
        dt_last_update_in         IN consult_req.dt_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN consult_req.id_prof_last_update%TYPE DEFAULT NULL,
        id_inst_last_update_in    IN consult_req.id_inst_last_update%TYPE DEFAULT NULL,
        id_sch_event_in           IN consult_req.id_sch_event%TYPE DEFAULT NULL,
        dt_begin_event_in         IN consult_req.dt_begin_event%TYPE DEFAULT NULL,
        dt_end_event_in           IN consult_req.dt_end_event%TYPE DEFAULT NULL,
        flg_priority_in           IN consult_req.flg_priority%TYPE DEFAULT NULL,
        flg_contact_type_in       IN consult_req.flg_contact_type%TYPE DEFAULT NULL,
        instructions_in           IN consult_req.instructions%TYPE DEFAULT NULL,
        id_room_in                IN consult_req.id_room%TYPE DEFAULT NULL,
        flg_request_type_in       IN consult_req.flg_request_type%TYPE DEFAULT NULL,
        flg_req_resp_in           IN consult_req.flg_req_resp%TYPE DEFAULT NULL,
        request_reason_in         IN consult_req.request_reason%TYPE DEFAULT NULL,
        id_language_in            IN consult_req.id_language%TYPE DEFAULT NULL,
        flg_recurrence_in         IN consult_req.flg_recurrence%TYPE DEFAULT NULL,
        frequency_in              IN consult_req.frequency%TYPE DEFAULT NULL,
        dt_rec_begin_in           IN consult_req.dt_rec_begin%TYPE DEFAULT NULL,
        dt_rec_end_in             IN consult_req.dt_rec_end%TYPE DEFAULT NULL,
        nr_events_in              IN consult_req.nr_events%TYPE DEFAULT NULL,
        week_day_in               IN consult_req.week_day%TYPE DEFAULT NULL,
        week_nr_in                IN consult_req.week_nr%TYPE DEFAULT NULL,
        month_day_in              IN consult_req.month_day%TYPE DEFAULT NULL,
        month_nr_in               IN consult_req.month_nr%TYPE DEFAULT NULL,
        id_task_dependency_in     IN consult_req.id_task_dependency%TYPE DEFAULT NULL,
        flg_freq_origin_module_in IN consult_req.flg_freq_origin_module%TYPE DEFAULT NULL,
        id_episode_to_exec_in     IN consult_req.id_episode_to_exec%TYPE DEFAULT NULL,
        id_soft_reg_by_in         IN consult_req.id_soft_reg_by%TYPE DEFAULT NULL,
        handle_error_in           IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd_ins(id_consult_req_in,
                consult_type_in,
                id_clinical_service_in,
                id_patient_in,
                id_instit_requests_in,
                id_inst_requested_in,
                id_episode_in,
                id_prof_req_in,
                id_prof_auth_in,
                id_prof_appr_in,
                id_prof_proc_in,
                notes_in,
                id_prof_cancel_in,
                notes_cancel_in,
                id_dep_clin_serv_in,
                id_prof_requested_in,
                flg_status_in,
                notes_admin_in,
                id_schedule_in,
                dt_consult_req_tstz_in,
                dt_scheduled_tstz_in,
                dt_cancel_tstz_in,
                next_visit_in_notes_in,
                flg_instructions_in,
                id_complaint_in,
                flg_type_date_in,
                status_flg_in,
                status_icon_in,
                status_msg_in,
                status_str_in,
                reason_for_visit_in,
                create_user_in,
                create_time_in,
                create_institution_in,
                update_user_in,
                update_time_in,
                update_institution_in,
                flg_type_in,
                id_cancel_reason_in,
                id_epis_documentation_in,
                id_epis_type_in,
                dt_last_update_in,
                id_prof_last_update_in,
                id_inst_last_update_in,
                id_sch_event_in,
                dt_begin_event_in,
                dt_end_event_in,
                flg_priority_in,
                flg_contact_type_in,
                instructions_in,
                id_room_in,
                flg_request_type_in,
                flg_req_resp_in,
                request_reason_in,
                id_language_in,
                flg_recurrence_in,
                frequency_in,
                dt_rec_begin_in,
                dt_rec_end_in,
                nr_events_in,
                week_day_in,
                week_nr_in,
                month_day_in,
                month_nr_in,
                id_task_dependency_in,
                flg_freq_origin_module_in,
                id_episode_to_exec_in,
                id_soft_reg_by_in,
                handle_error_in,
                rows_out);
    END upd_ins;

    PROCEDURE upd
    (
        col_in            IN consult_req_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    ) IS
        l_id_consult_req         id_consult_req_cc;
        l_consult_type           consult_type_cc;
        l_id_clinical_service    id_clinical_service_cc;
        l_id_patient             id_patient_cc;
        l_id_instit_requests     id_instit_requests_cc;
        l_id_inst_requested      id_inst_requested_cc;
        l_id_episode             id_episode_cc;
        l_id_prof_req            id_prof_req_cc;
        l_id_prof_auth           id_prof_auth_cc;
        l_id_prof_appr           id_prof_appr_cc;
        l_id_prof_proc           id_prof_proc_cc;
        l_notes                  notes_cc;
        l_id_prof_cancel         id_prof_cancel_cc;
        l_notes_cancel           notes_cancel_cc;
        l_id_dep_clin_serv       id_dep_clin_serv_cc;
        l_id_prof_requested      id_prof_requested_cc;
        l_flg_status             flg_status_cc;
        l_notes_admin            notes_admin_cc;
        l_id_schedule            id_schedule_cc;
        l_dt_consult_req_tstz    dt_consult_req_tstz_cc;
        l_dt_scheduled_tstz      dt_scheduled_tstz_cc;
        l_dt_cancel_tstz         dt_cancel_tstz_cc;
        l_next_visit_in_notes    next_visit_in_notes_cc;
        l_flg_instructions       flg_instructions_cc;
        l_id_complaint           id_complaint_cc;
        l_flg_type_date          flg_type_date_cc;
        l_status_flg             status_flg_cc;
        l_status_icon            status_icon_cc;
        l_status_msg             status_msg_cc;
        l_status_str             status_str_cc;
        l_reason_for_visit       reason_for_visit_cc;
        l_create_user            create_user_cc;
        l_create_time            create_time_cc;
        l_create_institution     create_institution_cc;
        l_update_user            update_user_cc;
        l_update_time            update_time_cc;
        l_update_institution     update_institution_cc;
        l_flg_type               flg_type_cc;
        l_id_cancel_reason       id_cancel_reason_cc;
        l_id_epis_documentation  id_epis_documentation_cc;
        l_id_epis_type           id_epis_type_cc;
        l_dt_last_update         dt_last_update_cc;
        l_id_prof_last_update    id_prof_last_update_cc;
        l_id_inst_last_update    id_inst_last_update_cc;
        l_id_sch_event           id_sch_event_cc;
        l_dt_begin_event         dt_begin_event_cc;
        l_dt_end_event           dt_end_event_cc;
        l_flg_priority           flg_priority_cc;
        l_flg_contact_type       flg_contact_type_cc;
        l_instructions           instructions_cc;
        l_id_room                id_room_cc;
        l_flg_request_type       flg_request_type_cc;
        l_flg_req_resp           flg_req_resp_cc;
        l_request_reason         request_reason_cc;
        l_id_language            id_language_cc;
        l_flg_recurrence         flg_recurrence_cc;
        l_frequency              frequency_cc;
        l_dt_rec_begin           dt_rec_begin_cc;
        l_dt_rec_end             dt_rec_end_cc;
        l_nr_events              nr_events_cc;
        l_week_day               week_day_cc;
        l_week_nr                week_nr_cc;
        l_month_day              month_day_cc;
        l_month_nr               month_nr_cc;
        l_id_task_dependency     id_task_dependency_cc;
        l_flg_freq_origin_module flg_freq_origin_module_cc;
        l_id_episode_to_exec     id_episode_to_exec_cc;
        l_id_soft_reg_by         id_soft_reg_by_cc;
    BEGIN
        FOR i IN col_in.FIRST .. col_in.LAST
        LOOP
            l_id_consult_req(i) := col_in(i).id_consult_req;
            l_consult_type(i) := col_in(i).consult_type;
            l_id_clinical_service(i) := col_in(i).id_clinical_service;
            l_id_patient(i) := col_in(i).id_patient;
            l_id_instit_requests(i) := col_in(i).id_instit_requests;
            l_id_inst_requested(i) := col_in(i).id_inst_requested;
            l_id_episode(i) := col_in(i).id_episode;
            l_id_prof_req(i) := col_in(i).id_prof_req;
            l_id_prof_auth(i) := col_in(i).id_prof_auth;
            l_id_prof_appr(i) := col_in(i).id_prof_appr;
            l_id_prof_proc(i) := col_in(i).id_prof_proc;
            l_notes(i) := col_in(i).notes;
            l_id_prof_cancel(i) := col_in(i).id_prof_cancel;
            l_notes_cancel(i) := col_in(i).notes_cancel;
            l_id_dep_clin_serv(i) := col_in(i).id_dep_clin_serv;
            l_id_prof_requested(i) := col_in(i).id_prof_requested;
            l_flg_status(i) := col_in(i).flg_status;
            l_notes_admin(i) := col_in(i).notes_admin;
            l_id_schedule(i) := col_in(i).id_schedule;
            l_dt_consult_req_tstz(i) := col_in(i).dt_consult_req_tstz;
            l_dt_scheduled_tstz(i) := col_in(i).dt_scheduled_tstz;
            l_dt_cancel_tstz(i) := col_in(i).dt_cancel_tstz;
            l_next_visit_in_notes(i) := col_in(i).next_visit_in_notes;
            l_flg_instructions(i) := col_in(i).flg_instructions;
            l_id_complaint(i) := col_in(i).id_complaint;
            l_flg_type_date(i) := col_in(i).flg_type_date;
            l_status_flg(i) := col_in(i).status_flg;
            l_status_icon(i) := col_in(i).status_icon;
            l_status_msg(i) := col_in(i).status_msg;
            l_status_str(i) := col_in(i).status_str;
            l_reason_for_visit(i) := col_in(i).reason_for_visit;
            l_create_user(i) := col_in(i).create_user;
            l_create_time(i) := col_in(i).create_time;
            l_create_institution(i) := col_in(i).create_institution;
            l_update_user(i) := col_in(i).update_user;
            l_update_time(i) := col_in(i).update_time;
            l_update_institution(i) := col_in(i).update_institution;
            l_flg_type(i) := col_in(i).flg_type;
            l_id_cancel_reason(i) := col_in(i).id_cancel_reason;
            l_id_epis_documentation(i) := col_in(i).id_epis_documentation;
            l_id_epis_type(i) := col_in(i).id_epis_type;
            l_dt_last_update(i) := col_in(i).dt_last_update;
            l_id_prof_last_update(i) := col_in(i).id_prof_last_update;
            l_id_inst_last_update(i) := col_in(i).id_inst_last_update;
            l_id_sch_event(i) := col_in(i).id_sch_event;
            l_dt_begin_event(i) := col_in(i).dt_begin_event;
            l_dt_end_event(i) := col_in(i).dt_end_event;
            l_flg_priority(i) := col_in(i).flg_priority;
            l_flg_contact_type(i) := col_in(i).flg_contact_type;
            l_instructions(i) := col_in(i).instructions;
            l_id_room(i) := col_in(i).id_room;
            l_flg_request_type(i) := col_in(i).flg_request_type;
            l_flg_req_resp(i) := col_in(i).flg_req_resp;
            l_request_reason(i) := col_in(i).request_reason;
            l_id_language(i) := col_in(i).id_language;
            l_flg_recurrence(i) := col_in(i).flg_recurrence;
            l_frequency(i) := col_in(i).frequency;
            l_dt_rec_begin(i) := col_in(i).dt_rec_begin;
            l_dt_rec_end(i) := col_in(i).dt_rec_end;
            l_nr_events(i) := col_in(i).nr_events;
            l_week_day(i) := col_in(i).week_day;
            l_week_nr(i) := col_in(i).week_nr;
            l_month_day(i) := col_in(i).month_day;
            l_month_nr(i) := col_in(i).month_nr;
            l_id_task_dependency(i) := col_in(i).id_task_dependency;
            l_flg_freq_origin_module(i) := col_in(i).flg_freq_origin_module;
            l_id_episode_to_exec(i) := col_in(i).id_episode_to_exec;
            l_id_soft_reg_by(i) := col_in(i).id_soft_reg_by;
        END LOOP;
        IF nvl(ignore_if_null_in, FALSE)
        THEN
            -- Set any columns to their current values
            -- if incoming value is NULL.
            -- Put WHEN clause on column-level triggers!
            FORALL i IN col_in.FIRST .. col_in.LAST
                UPDATE consult_req
                   SET consult_type           = nvl(l_consult_type(i), consult_type),
                       id_clinical_service    = nvl(l_id_clinical_service(i), id_clinical_service),
                       id_patient             = nvl(l_id_patient(i), id_patient),
                       id_instit_requests     = nvl(l_id_instit_requests(i), id_instit_requests),
                       id_inst_requested      = nvl(l_id_inst_requested(i), id_inst_requested),
                       id_episode             = nvl(l_id_episode(i), id_episode),
                       id_prof_req            = nvl(l_id_prof_req(i), id_prof_req),
                       id_prof_auth           = nvl(l_id_prof_auth(i), id_prof_auth),
                       id_prof_appr           = nvl(l_id_prof_appr(i), id_prof_appr),
                       id_prof_proc           = nvl(l_id_prof_proc(i), id_prof_proc),
                       notes                  = nvl(l_notes(i), notes),
                       id_prof_cancel         = nvl(l_id_prof_cancel(i), id_prof_cancel),
                       notes_cancel           = nvl(l_notes_cancel(i), notes_cancel),
                       id_dep_clin_serv       = nvl(l_id_dep_clin_serv(i), id_dep_clin_serv),
                       id_prof_requested      = nvl(l_id_prof_requested(i), id_prof_requested),
                       flg_status             = nvl(l_flg_status(i), flg_status),
                       notes_admin            = nvl(l_notes_admin(i), notes_admin),
                       id_schedule            = nvl(l_id_schedule(i), id_schedule),
                       dt_consult_req_tstz    = nvl(l_dt_consult_req_tstz(i), dt_consult_req_tstz),
                       dt_scheduled_tstz      = nvl(l_dt_scheduled_tstz(i), dt_scheduled_tstz),
                       dt_cancel_tstz         = nvl(l_dt_cancel_tstz(i), dt_cancel_tstz),
                       next_visit_in_notes    = nvl(l_next_visit_in_notes(i), next_visit_in_notes),
                       flg_instructions       = nvl(l_flg_instructions(i), flg_instructions),
                       id_complaint           = nvl(l_id_complaint(i), id_complaint),
                       flg_type_date          = nvl(l_flg_type_date(i), flg_type_date),
                       status_flg             = nvl(l_status_flg(i), status_flg),
                       status_icon            = nvl(l_status_icon(i), status_icon),
                       status_msg             = nvl(l_status_msg(i), status_msg),
                       status_str             = nvl(l_status_str(i), status_str),
                       reason_for_visit       = nvl(l_reason_for_visit(i), reason_for_visit),
                       create_user            = nvl(l_create_user(i), create_user),
                       create_time            = nvl(l_create_time(i), create_time),
                       create_institution     = nvl(l_create_institution(i), create_institution),
                       update_user            = nvl(l_update_user(i), update_user),
                       update_time            = nvl(l_update_time(i), update_time),
                       update_institution     = nvl(l_update_institution(i), update_institution),
                       flg_type               = nvl(l_flg_type(i), flg_type),
                       id_cancel_reason       = nvl(l_id_cancel_reason(i), id_cancel_reason),
                       id_epis_documentation  = nvl(l_id_epis_documentation(i), id_epis_documentation),
                       id_epis_type           = nvl(l_id_epis_type(i), id_epis_type),
                       dt_last_update         = nvl(l_dt_last_update(i), dt_last_update),
                       id_prof_last_update    = nvl(l_id_prof_last_update(i), id_prof_last_update),
                       id_inst_last_update    = nvl(l_id_inst_last_update(i), id_inst_last_update),
                       id_sch_event           = nvl(l_id_sch_event(i), id_sch_event),
                       dt_begin_event         = nvl(l_dt_begin_event(i), dt_begin_event),
                       dt_end_event           = nvl(l_dt_end_event(i), dt_end_event),
                       flg_priority           = nvl(l_flg_priority(i), flg_priority),
                       flg_contact_type       = nvl(l_flg_contact_type(i), flg_contact_type),
                       instructions           = nvl(l_instructions(i), instructions),
                       id_room                = nvl(l_id_room(i), id_room),
                       flg_request_type       = nvl(l_flg_request_type(i), flg_request_type),
                       flg_req_resp           = nvl(l_flg_req_resp(i), flg_req_resp),
                       request_reason         = nvl(l_request_reason(i), request_reason),
                       id_language            = nvl(l_id_language(i), id_language),
                       flg_recurrence         = nvl(l_flg_recurrence(i), flg_recurrence),
                       frequency              = nvl(l_frequency(i), frequency),
                       dt_rec_begin           = nvl(l_dt_rec_begin(i), dt_rec_begin),
                       dt_rec_end             = nvl(l_dt_rec_end(i), dt_rec_end),
                       nr_events              = nvl(l_nr_events(i), nr_events),
                       week_day               = nvl(l_week_day(i), week_day),
                       week_nr                = nvl(l_week_nr(i), week_nr),
                       month_day              = nvl(l_month_day(i), month_day),
                       month_nr               = nvl(l_month_nr(i), month_nr),
                       id_task_dependency     = nvl(l_id_task_dependency(i), id_task_dependency),
                       flg_freq_origin_module = nvl(l_flg_freq_origin_module(i), flg_freq_origin_module),
                       id_episode_to_exec     = nvl(l_id_episode_to_exec(i), id_episode_to_exec),
                       id_soft_reg_by         = nvl(l_id_soft_reg_by(i), id_soft_reg_by)
                 WHERE id_consult_req = l_id_consult_req(i);
        ELSE
            FORALL i IN col_in.FIRST .. col_in.LAST
                UPDATE consult_req
                   SET consult_type           = l_consult_type(i),
                       id_clinical_service    = l_id_clinical_service(i),
                       id_patient             = l_id_patient(i),
                       id_instit_requests     = l_id_instit_requests(i),
                       id_inst_requested      = l_id_inst_requested(i),
                       id_episode             = l_id_episode(i),
                       id_prof_req            = l_id_prof_req(i),
                       id_prof_auth           = l_id_prof_auth(i),
                       id_prof_appr           = l_id_prof_appr(i),
                       id_prof_proc           = l_id_prof_proc(i),
                       notes                  = l_notes(i),
                       id_prof_cancel         = l_id_prof_cancel(i),
                       notes_cancel           = l_notes_cancel(i),
                       id_dep_clin_serv       = l_id_dep_clin_serv(i),
                       id_prof_requested      = l_id_prof_requested(i),
                       flg_status             = l_flg_status(i),
                       notes_admin            = l_notes_admin(i),
                       id_schedule            = l_id_schedule(i),
                       dt_consult_req_tstz    = l_dt_consult_req_tstz(i),
                       dt_scheduled_tstz      = l_dt_scheduled_tstz(i),
                       dt_cancel_tstz         = l_dt_cancel_tstz(i),
                       next_visit_in_notes    = l_next_visit_in_notes(i),
                       flg_instructions       = l_flg_instructions(i),
                       id_complaint           = l_id_complaint(i),
                       flg_type_date          = l_flg_type_date(i),
                       status_flg             = l_status_flg(i),
                       status_icon            = l_status_icon(i),
                       status_msg             = l_status_msg(i),
                       status_str             = l_status_str(i),
                       reason_for_visit       = l_reason_for_visit(i),
                       create_user            = l_create_user(i),
                       create_time            = l_create_time(i),
                       create_institution     = l_create_institution(i),
                       update_user            = l_update_user(i),
                       update_time            = l_update_time(i),
                       update_institution     = l_update_institution(i),
                       flg_type               = l_flg_type(i),
                       id_cancel_reason       = l_id_cancel_reason(i),
                       id_epis_documentation  = l_id_epis_documentation(i),
                       id_epis_type           = l_id_epis_type(i),
                       dt_last_update         = l_dt_last_update(i),
                       id_prof_last_update    = l_id_prof_last_update(i),
                       id_inst_last_update    = l_id_inst_last_update(i),
                       id_sch_event           = l_id_sch_event(i),
                       dt_begin_event         = l_dt_begin_event(i),
                       dt_end_event           = l_dt_end_event(i),
                       flg_priority           = l_flg_priority(i),
                       flg_contact_type       = l_flg_contact_type(i),
                       instructions           = l_instructions(i),
                       id_room                = l_id_room(i),
                       flg_request_type       = l_flg_request_type(i),
                       flg_req_resp           = l_flg_req_resp(i),
                       request_reason         = l_request_reason(i),
                       id_language            = l_id_language(i),
                       flg_recurrence         = l_flg_recurrence(i),
                       frequency              = l_frequency(i),
                       dt_rec_begin           = l_dt_rec_begin(i),
                       dt_rec_end             = l_dt_rec_end(i),
                       nr_events              = l_nr_events(i),
                       week_day               = l_week_day(i),
                       week_nr                = l_week_nr(i),
                       month_day              = l_month_day(i),
                       month_nr               = l_month_nr(i),
                       id_task_dependency     = l_id_task_dependency(i),
                       flg_freq_origin_module = l_flg_freq_origin_module(i),
                       id_episode_to_exec     = l_id_episode_to_exec(i),
                       id_soft_reg_by         = l_id_soft_reg_by(i)
                 WHERE id_consult_req = l_id_consult_req(i);
        END IF;
    END upd;

    PROCEDURE upd
    (
        col_in            IN consult_req_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(col_in, ignore_if_null_in, handle_error_in, rows_out);
    END upd;

    FUNCTION dynupdstr
    (
        colname_in IN all_tab_columns.column_name%TYPE,
        where_in   IN VARCHAR2 := NULL
    )

     RETURN VARCHAR2 IS
    BEGIN
        RETURN 'BEGIN UPDATE CONSULT_REQ
             SET ' || colname_in || ' = :value
           WHERE ' || nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;';
    END dynupdstr;

    FUNCTION dynupdstr_no_rows_out
    (
        colname_in IN all_tab_columns.column_name%TYPE,
        where_in   IN VARCHAR2 := NULL
    )

     RETURN VARCHAR2 IS
    BEGIN
        RETURN 'UPDATE CONSULT_REQ
             SET ' || colname_in || ' = :value
           WHERE ' || nvl(where_in, '1=1');
    END dynupdstr_no_rows_out;

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN UPDATE CONSULT_REQ set ' || colname_in || '=' || colname_in || ' + ' ||
                          nvl(increment_value_in, 1) || ' WHERE ' || nvl(where_in, '1=1') ||
                          ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    EXCEPTION
        WHEN dup_val_on_index THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner           all_constraints.owner%TYPE;
                    l_name            all_constraints.constraint_name%TYPE;
                    l_err_instance_id PLS_INTEGER;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'DUPLICATE-VALUE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
        WHEN e_null_column_value THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    v_errm    VARCHAR2(2000) := dbms_utility.format_error_stack;
                    dot1loc   INTEGER;
                    dot2loc   INTEGER;
                    parenloc  INTEGER;
                    c_owner   all_constraints.owner%TYPE;
                    c_tabname all_tables.table_name%TYPE;
                    c_colname all_tab_columns.column_name%TYPE;
                BEGIN
                    dot1loc   := instr(v_errm, '.', 1, 1);
                    dot2loc   := instr(v_errm, '.', 1, 2);
                    parenloc  := instr(v_errm, '(');
                    c_owner   := substr(v_errm, parenloc + 1, dot1loc - parenloc - 1);
                    c_tabname := substr(v_errm, dot1loc + 1, dot2loc - dot1loc - 1);
                    c_colname := substr(v_errm, dot2loc + 1, instr(v_errm, ')') - dot2loc - 1);

                    pk_alert_exceptions.raise_error(error_name_in => 'COLUMN-CANNOT-BE-NULL',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => c_owner,
                                                    name2_in      => 'TABLE_NAME',
                                                    value2_in     => c_tabname,
                                                    name3_in      => 'COLUMN_NAME',
                                                    value3_in     => c_colname);
                END;
            END IF;
    END increment_onecol;

    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2 := NULL,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        EXECUTE IMMEDIATE 'UPDATE CONSULT_REQ set ' || colname_in || '=' || colname_in || ' + ' ||
                          nvl(increment_value_in, 1) || ' WHERE ' || nvl(where_in, '1=1');
    EXCEPTION
        WHEN dup_val_on_index THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner           all_constraints.owner%TYPE;
                    l_name            all_constraints.constraint_name%TYPE;
                    l_err_instance_id PLS_INTEGER;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'DUPLICATE-VALUE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
        WHEN e_null_column_value THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    v_errm    VARCHAR2(2000) := dbms_utility.format_error_stack;
                    dot1loc   INTEGER;
                    dot2loc   INTEGER;
                    parenloc  INTEGER;
                    c_owner   all_constraints.owner%TYPE;
                    c_tabname all_tables.table_name%TYPE;
                    c_colname all_tab_columns.column_name%TYPE;
                BEGIN
                    dot1loc   := instr(v_errm, '.', 1, 1);
                    dot2loc   := instr(v_errm, '.', 1, 2);
                    parenloc  := instr(v_errm, '(');
                    c_owner   := substr(v_errm, parenloc + 1, dot1loc - parenloc - 1);
                    c_tabname := substr(v_errm, dot1loc + 1, dot2loc - dot1loc - 1);
                    c_colname := substr(v_errm, dot2loc + 1, instr(v_errm, ')') - dot2loc - 1);

                    pk_alert_exceptions.raise_error(error_name_in => 'COLUMN-CANNOT-BE-NULL',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => c_owner,
                                                    name2_in      => 'TABLE_NAME',
                                                    value2_in     => c_tabname,
                                                    name3_in      => 'COLUMN_NAME',
                                                    value3_in     => c_colname);
                END;
            END IF;
    END increment_onecol;

    -- Delete functionality

    PROCEDURE del
    (
        id_consult_req_in IN consult_req.id_consult_req%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_consult_req = id_consult_req_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del;

    PROCEDURE del
    (
        id_consult_req_in IN consult_req.id_consult_req%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN

        del(id_consult_req_in => id_consult_req_in, handle_error_in => handle_error_in, rows_out => rows_out);

    END del;

    -- Delete all rows for primary key column ID_CONSULT_REQ
    PROCEDURE del_id_consult_req
    (
        id_consult_req_in IN consult_req.id_consult_req%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_consult_req = id_consult_req_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_id_consult_req;

    -- Delete all rows for primary key column ID_CONSULT_REQ
    PROCEDURE del_id_consult_req
    (
        id_consult_req_in IN consult_req.id_consult_req%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_id_consult_req(id_consult_req_in => id_consult_req_in,
                           handle_error_in   => handle_error_in,
                           rows_out          => rows_out);
    END del_id_consult_req;

    PROCEDURE del_crq_complaint_fk
    (
        id_complaint_in IN consult_req.id_complaint%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_complaint = del_crq_complaint_fk.id_complaint_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_complaint_fk;

    PROCEDURE del_crq_complaint_fk
    (
        id_complaint_in IN consult_req.id_complaint%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_complaint_fk(id_complaint_in => id_complaint_in,
                             handle_error_in => handle_error_in,
                             rows_out        => rows_out);
    END del_crq_complaint_fk;

    PROCEDURE del_crq_cse_fk
    (
        id_clinical_service_in IN consult_req.id_clinical_service%TYPE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_clinical_service = del_crq_cse_fk.id_clinical_service_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_cse_fk;

    PROCEDURE del_crq_cse_fk
    (
        id_clinical_service_in IN consult_req.id_clinical_service%TYPE,
        handle_error_in        IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_cse_fk(id_clinical_service_in => id_clinical_service_in,
                       handle_error_in        => handle_error_in,
                       rows_out               => rows_out);
    END del_crq_cse_fk;

    PROCEDURE del_crq_dcs_fk
    (
        id_dep_clin_serv_in IN consult_req.id_dep_clin_serv%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_dep_clin_serv = del_crq_dcs_fk.id_dep_clin_serv_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_dcs_fk;

    PROCEDURE del_crq_dcs_fk
    (
        id_dep_clin_serv_in IN consult_req.id_dep_clin_serv%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_dcs_fk(id_dep_clin_serv_in => id_dep_clin_serv_in,
                       handle_error_in     => handle_error_in,
                       rows_out            => rows_out);
    END del_crq_dcs_fk;

    PROCEDURE del_crq_epd_fk
    (
        id_epis_documentation_in IN consult_req.id_epis_documentation%TYPE,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_epis_documentation = del_crq_epd_fk.id_epis_documentation_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_epd_fk;

    PROCEDURE del_crq_epd_fk
    (
        id_epis_documentation_in IN consult_req.id_epis_documentation%TYPE,
        handle_error_in          IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_epd_fk(id_epis_documentation_in => id_epis_documentation_in,
                       handle_error_in          => handle_error_in,
                       rows_out                 => rows_out);
    END del_crq_epd_fk;

    PROCEDURE del_crq_epis_exec_fk
    (
        id_episode_to_exec_in IN consult_req.id_episode_to_exec%TYPE,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_episode_to_exec = del_crq_epis_exec_fk.id_episode_to_exec_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_epis_exec_fk;

    PROCEDURE del_crq_epis_exec_fk
    (
        id_episode_to_exec_in IN consult_req.id_episode_to_exec%TYPE,
        handle_error_in       IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_epis_exec_fk(id_episode_to_exec_in => id_episode_to_exec_in,
                             handle_error_in       => handle_error_in,
                             rows_out              => rows_out);
    END del_crq_epis_exec_fk;

    PROCEDURE del_crq_epis_fk
    (
        id_episode_in   IN consult_req.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_episode = del_crq_epis_fk.id_episode_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_epis_fk;

    PROCEDURE del_crq_epis_fk
    (
        id_episode_in   IN consult_req.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_epis_fk(id_episode_in => id_episode_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_crq_epis_fk;

    PROCEDURE del_crq_epis_type_fk
    (
        id_epis_type_in IN consult_req.id_epis_type%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_epis_type = del_crq_epis_type_fk.id_epis_type_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_epis_type_fk;

    PROCEDURE del_crq_epis_type_fk
    (
        id_epis_type_in IN consult_req.id_epis_type%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_epis_type_fk(id_epis_type_in => id_epis_type_in,
                             handle_error_in => handle_error_in,
                             rows_out        => rows_out);
    END del_crq_epis_type_fk;

    PROCEDURE del_crq_inst_requested_fk
    (
        id_inst_requested_in IN consult_req.id_inst_requested%TYPE,
        handle_error_in      IN BOOLEAN := TRUE,
        rows_out             OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_inst_requested = del_crq_inst_requested_fk.id_inst_requested_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_inst_requested_fk;

    PROCEDURE del_crq_inst_requested_fk
    (
        id_inst_requested_in IN consult_req.id_inst_requested%TYPE,
        handle_error_in      IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_inst_requested_fk(id_inst_requested_in => id_inst_requested_in,
                                  handle_error_in      => handle_error_in,
                                  rows_out             => rows_out);
    END del_crq_inst_requested_fk;

    PROCEDURE del_crq_inst_requests_fk
    (
        id_instit_requests_in IN consult_req.id_instit_requests%TYPE,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_instit_requests = del_crq_inst_requests_fk.id_instit_requests_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_inst_requests_fk;

    PROCEDURE del_crq_inst_requests_fk
    (
        id_instit_requests_in IN consult_req.id_instit_requests%TYPE,
        handle_error_in       IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_inst_requests_fk(id_instit_requests_in => id_instit_requests_in,
                                 handle_error_in       => handle_error_in,
                                 rows_out              => rows_out);
    END del_crq_inst_requests_fk;

    PROCEDURE del_crq_language_fk
    (
        id_language_in  IN consult_req.id_language%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_language = del_crq_language_fk.id_language_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_language_fk;

    PROCEDURE del_crq_language_fk
    (
        id_language_in  IN consult_req.id_language%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_language_fk(id_language_in => id_language_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_crq_language_fk;

    PROCEDURE del_crq_last_update_by_fk
    (
        id_prof_last_update_in IN consult_req.id_prof_last_update%TYPE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_prof_last_update = del_crq_last_update_by_fk.id_prof_last_update_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_last_update_by_fk;

    PROCEDURE del_crq_last_update_by_fk
    (
        id_prof_last_update_in IN consult_req.id_prof_last_update%TYPE,
        handle_error_in        IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_last_update_by_fk(id_prof_last_update_in => id_prof_last_update_in,
                                  handle_error_in        => handle_error_in,
                                  rows_out               => rows_out);
    END del_crq_last_update_by_fk;

    PROCEDURE del_crq_last_update_inst_fk
    (
        id_inst_last_update_in IN consult_req.id_inst_last_update%TYPE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_inst_last_update = del_crq_last_update_inst_fk.id_inst_last_update_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_last_update_inst_fk;

    PROCEDURE del_crq_last_update_inst_fk
    (
        id_inst_last_update_in IN consult_req.id_inst_last_update%TYPE,
        handle_error_in        IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_last_update_inst_fk(id_inst_last_update_in => id_inst_last_update_in,
                                    handle_error_in        => handle_error_in,
                                    rows_out               => rows_out);
    END del_crq_last_update_inst_fk;

    PROCEDURE del_crq_pat_fk
    (
        id_patient_in   IN consult_req.id_patient%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_patient = del_crq_pat_fk.id_patient_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_pat_fk;

    PROCEDURE del_crq_pat_fk
    (
        id_patient_in   IN consult_req.id_patient%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_pat_fk(id_patient_in => id_patient_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_crq_pat_fk;

    PROCEDURE del_crq_prof_appr_fk
    (
        id_prof_appr_in IN consult_req.id_prof_appr%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_prof_appr = del_crq_prof_appr_fk.id_prof_appr_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_prof_appr_fk;

    PROCEDURE del_crq_prof_appr_fk
    (
        id_prof_appr_in IN consult_req.id_prof_appr%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_prof_appr_fk(id_prof_appr_in => id_prof_appr_in,
                             handle_error_in => handle_error_in,
                             rows_out        => rows_out);
    END del_crq_prof_appr_fk;

    PROCEDURE del_crq_prof_auth_fk
    (
        id_prof_auth_in IN consult_req.id_prof_auth%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_prof_auth = del_crq_prof_auth_fk.id_prof_auth_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_prof_auth_fk;

    PROCEDURE del_crq_prof_auth_fk
    (
        id_prof_auth_in IN consult_req.id_prof_auth%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_prof_auth_fk(id_prof_auth_in => id_prof_auth_in,
                             handle_error_in => handle_error_in,
                             rows_out        => rows_out);
    END del_crq_prof_auth_fk;

    PROCEDURE del_crq_prof_cancel_fk
    (
        id_prof_cancel_in IN consult_req.id_prof_cancel%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_prof_cancel = del_crq_prof_cancel_fk.id_prof_cancel_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_prof_cancel_fk;

    PROCEDURE del_crq_prof_cancel_fk
    (
        id_prof_cancel_in IN consult_req.id_prof_cancel%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_prof_cancel_fk(id_prof_cancel_in => id_prof_cancel_in,
                               handle_error_in   => handle_error_in,
                               rows_out          => rows_out);
    END del_crq_prof_cancel_fk;

    PROCEDURE del_crq_prof_proc_fk
    (
        id_prof_proc_in IN consult_req.id_prof_proc%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_prof_proc = del_crq_prof_proc_fk.id_prof_proc_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_prof_proc_fk;

    PROCEDURE del_crq_prof_proc_fk
    (
        id_prof_proc_in IN consult_req.id_prof_proc%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_prof_proc_fk(id_prof_proc_in => id_prof_proc_in,
                             handle_error_in => handle_error_in,
                             rows_out        => rows_out);
    END del_crq_prof_proc_fk;

    PROCEDURE del_crq_prof_requested_fk
    (
        id_prof_requested_in IN consult_req.id_prof_requested%TYPE,
        handle_error_in      IN BOOLEAN := TRUE,
        rows_out             OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_prof_requested = del_crq_prof_requested_fk.id_prof_requested_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_prof_requested_fk;

    PROCEDURE del_crq_prof_requested_fk
    (
        id_prof_requested_in IN consult_req.id_prof_requested%TYPE,
        handle_error_in      IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_prof_requested_fk(id_prof_requested_in => id_prof_requested_in,
                                  handle_error_in      => handle_error_in,
                                  rows_out             => rows_out);
    END del_crq_prof_requested_fk;

    PROCEDURE del_crq_prof_req_fk
    (
        id_prof_req_in  IN consult_req.id_prof_req%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_prof_req = del_crq_prof_req_fk.id_prof_req_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_prof_req_fk;

    PROCEDURE del_crq_prof_req_fk
    (
        id_prof_req_in  IN consult_req.id_prof_req%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_prof_req_fk(id_prof_req_in => id_prof_req_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_crq_prof_req_fk;

    PROCEDURE del_crq_room_fk
    (
        id_room_in      IN consult_req.id_room%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_room = del_crq_room_fk.id_room_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_room_fk;

    PROCEDURE del_crq_room_fk
    (
        id_room_in      IN consult_req.id_room%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_room_fk(id_room_in => id_room_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_crq_room_fk;

    PROCEDURE del_crq_schedule_fk
    (
        id_schedule_in  IN consult_req.id_schedule%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_schedule = del_crq_schedule_fk.id_schedule_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_schedule_fk;

    PROCEDURE del_crq_schedule_fk
    (
        id_schedule_in  IN consult_req.id_schedule%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_schedule_fk(id_schedule_in => id_schedule_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_crq_schedule_fk;

    PROCEDURE del_crq_sch_event_fk
    (
        id_sch_event_in IN consult_req.id_sch_event%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_sch_event = del_crq_sch_event_fk.id_sch_event_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_sch_event_fk;

    PROCEDURE del_crq_sch_event_fk
    (
        id_sch_event_in IN consult_req.id_sch_event%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_sch_event_fk(id_sch_event_in => id_sch_event_in,
                             handle_error_in => handle_error_in,
                             rows_out        => rows_out);
    END del_crq_sch_event_fk;

    PROCEDURE del_crq_task_dep_fk
    (
        id_task_dependency_in IN consult_req.id_task_dependency%TYPE,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM consult_req
         WHERE id_task_dependency = del_crq_task_dep_fk.id_task_dependency_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_crq_task_dep_fk;

    PROCEDURE del_crq_task_dep_fk
    (
        id_task_dependency_in IN consult_req.id_task_dependency%TYPE,
        handle_error_in       IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_crq_task_dep_fk(id_task_dependency_in => id_task_dependency_in,
                            handle_error_in       => handle_error_in,
                            rows_out              => rows_out);
    END del_crq_task_dep_fk;

    -- Deletions using dynamic SQL
    FUNCTION dyndelstr(where_in IN VARCHAR2) RETURN VARCHAR2 IS
    BEGIN
        IF where_in IS NULL
        THEN
            RETURN 'DELETE FROM CONSULT_REQ';
        ELSE
            RETURN 'DELETE FROM CONSULT_REQ WHERE ' || where_in;
        END IF;
    END dyndelstr;

    FUNCTION dyncoldelstr(colname_in IN all_tab_columns.column_name%TYPE) RETURN VARCHAR2 IS
    BEGIN
        RETURN dyndelstr(colname_in || ' = :value');
    END;

    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyndelstr(where_clause_in);
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by;

    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyndelstr(where_clause_in) ||
                          ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyncoldelstr(colname_in)
            USING colvalue_in;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyncoldelstr(colname_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING IN colvalue_in, OUT rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyncoldelstr(colname_in)
            USING colvalue_in;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN DATE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyncoldelstr(colname_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING IN colvalue_in, OUT rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyncoldelstr(colname_in)
            USING colvalue_in;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN TIMESTAMP WITH LOCAL TIME ZONE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyncoldelstr(colname_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING IN colvalue_in, OUT rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyncoldelstr(colname_in)
            USING colvalue_in;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    PROCEDURE del_by_col
    (
        colname_in      IN VARCHAR2,
        colvalue_in     IN NUMBER,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyncoldelstr(colname_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING IN colvalue_in, OUT rows_out;
    EXCEPTION
        WHEN e_check_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner all_constraints.owner%TYPE;
                    l_name  all_constraints.constraint_name%TYPE;
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    pk_alert_exceptions.raise_error(error_name_in => 'CHECK-CONSTRAINT-FAILURE',
                                                    name1_in      => 'OWNER',
                                                    value1_in     => l_owner,
                                                    name2_in      => 'CONSTRAINT_NAME',
                                                    value2_in     => l_name,
                                                    name3_in      => 'TABLE_NAME',
                                                    value3_in     => 'CONSULT_REQ');
                END;
            END IF;
        WHEN e_integ_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                DECLARE
                    l_owner    all_constraints.owner%TYPE;
                    l_name     all_constraints.constraint_name%TYPE;
                    l_id       PLS_INTEGER;
                    l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
                BEGIN
                    get_constraint_info(l_owner, l_name);
                    IF SQLCODE = -2292 -- Child record found
                    THEN
                        l_err_name := 'CHILD-RECORD-FOUND';
                    END IF;
                    pk_alert_exceptions.register_error(error_name_in       => l_err_name,
                                                       err_instance_id_out => l_id,
                                                       name1_in            => 'OWNER',
                                                       value1_in           => l_owner,
                                                       name2_in            => 'CONSTRAINT_NAME',
                                                       value2_in           => l_name,
                                                       name3_in            => 'TABLE_NAME',
                                                       value3_in           => 'CONSULT_REQ');
                    pk_alert_exceptions.raise_error_instance(err_instance_id_in => l_id);
                END;
            END IF;
    END del_by_col;

    -- Initialize a record with default values for columns in the table.
    PROCEDURE initrec(consult_req_inout IN OUT consult_req%ROWTYPE) IS
    BEGIN
        consult_req_inout.id_consult_req         := NULL;
        consult_req_inout.consult_type           := NULL;
        consult_req_inout.id_clinical_service    := NULL;
        consult_req_inout.id_patient             := NULL;
        consult_req_inout.id_instit_requests     := NULL;
        consult_req_inout.id_inst_requested      := NULL;
        consult_req_inout.id_episode             := NULL;
        consult_req_inout.id_prof_req            := NULL;
        consult_req_inout.id_prof_auth           := NULL;
        consult_req_inout.id_prof_appr           := NULL;
        consult_req_inout.id_prof_proc           := NULL;
        consult_req_inout.notes                  := NULL;
        consult_req_inout.id_prof_cancel         := NULL;
        consult_req_inout.notes_cancel           := NULL;
        consult_req_inout.id_dep_clin_serv       := NULL;
        consult_req_inout.id_prof_requested      := NULL;
        consult_req_inout.flg_status             := NULL;
        consult_req_inout.notes_admin            := NULL;
        consult_req_inout.id_schedule            := NULL;
        consult_req_inout.dt_consult_req_tstz    := NULL;
        consult_req_inout.dt_scheduled_tstz      := NULL;
        consult_req_inout.dt_cancel_tstz         := NULL;
        consult_req_inout.next_visit_in_notes    := NULL;
        consult_req_inout.flg_instructions       := NULL;
        consult_req_inout.id_complaint           := NULL;
        consult_req_inout.flg_type_date          := NULL;
        consult_req_inout.status_flg             := NULL;
        consult_req_inout.status_icon            := NULL;
        consult_req_inout.status_msg             := NULL;
        consult_req_inout.status_str             := NULL;
        consult_req_inout.reason_for_visit       := NULL;
        consult_req_inout.create_user            := NULL;
        consult_req_inout.create_time            := NULL;
        consult_req_inout.create_institution     := NULL;
        consult_req_inout.update_user            := NULL;
        consult_req_inout.update_time            := NULL;
        consult_req_inout.update_institution     := NULL;
        consult_req_inout.flg_type               := NULL;
        consult_req_inout.id_cancel_reason       := NULL;
        consult_req_inout.id_epis_documentation  := NULL;
        consult_req_inout.id_epis_type           := NULL;
        consult_req_inout.dt_last_update         := NULL;
        consult_req_inout.id_prof_last_update    := NULL;
        consult_req_inout.id_inst_last_update    := NULL;
        consult_req_inout.id_sch_event           := NULL;
        consult_req_inout.dt_begin_event         := NULL;
        consult_req_inout.dt_end_event           := NULL;
        consult_req_inout.flg_priority           := NULL;
        consult_req_inout.flg_contact_type       := NULL;
        consult_req_inout.instructions           := NULL;
        consult_req_inout.id_room                := NULL;
        consult_req_inout.flg_request_type       := NULL;
        consult_req_inout.flg_req_resp           := NULL;
        consult_req_inout.request_reason         := NULL;
        consult_req_inout.id_language            := NULL;
        consult_req_inout.flg_recurrence         := NULL;
        consult_req_inout.frequency              := NULL;
        consult_req_inout.dt_rec_begin           := NULL;
        consult_req_inout.dt_rec_end             := NULL;
        consult_req_inout.nr_events              := NULL;
        consult_req_inout.week_day               := NULL;
        consult_req_inout.week_nr                := NULL;
        consult_req_inout.month_day              := NULL;
        consult_req_inout.month_nr               := NULL;
        consult_req_inout.id_task_dependency     := NULL;
        consult_req_inout.flg_freq_origin_module := NULL;
        consult_req_inout.id_episode_to_exec     := NULL;
        consult_req_inout.id_soft_reg_by         := NULL;
    END initrec;

    FUNCTION initrec RETURN consult_req%ROWTYPE IS
        l_consult_req consult_req%ROWTYPE;
    BEGIN
        RETURN l_consult_req;
    END initrec;

    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN consult_req_tc IS
        data consult_req_tc;
    BEGIN
        SELECT * BULK COLLECT
          INTO data
          FROM consult_req
         WHERE ROWID IN (SELECT /*+opt_estimate(table,t,scale_rows=0.0000001))*/
                          *
                           FROM TABLE(rows_in) t);
        RETURN data;
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'get_data_rowid');
    END get_data_rowid;

    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN consult_req_tc IS
        PRAGMA AUTONOMOUS_TRANSACTION;
        data consult_req_tc;
    BEGIN
        data := get_data_rowid(rows_in);
        COMMIT;
        RETURN data;
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'get_data_rowid');
            ROLLBACK;
    END get_data_rowid_pat;

BEGIN
    NULL;
END ts_consult_req;
/
