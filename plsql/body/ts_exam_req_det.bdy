/*-- Last Change Revision: $Rev: 2028171 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:44:23 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE BODY ts_exam_req_det
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2021-03-02 12:21:22
| Created By: ALERT
*/
 IS

    e_null_column_value EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_null_column_value, -1400);

    e_existing_fky_reference EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_existing_fky_reference, -2266);

    e_check_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_check_constraint_failure, -2290);

    e_no_parent_key EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_no_parent_key, -2291);

    e_child_record_found EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_child_record_found, -2292);

    e_forall_error EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_forall_error, -24381);

    -- Defined for backward compatibilty.
    e_integ_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_integ_constraint_failure, -2291);

    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN exam_req_det.id_exam_req_det%TYPE IS
        retval exam_req_det.id_exam_req_det%TYPE;
    BEGIN
        IF sequence_in IS NULL
        THEN
            retval := seq_exam_req_det.nextval;
        ELSE
            EXECUTE IMMEDIATE 'SELECT ' || sequence_in || '.NEXTVAL FROM dual'
                INTO retval;
        END IF;
        RETURN retval;
    END next_key;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_erd_parent_in          IN exam_req_det.id_erd_parent%TYPE DEFAULT NULL,
        id_exam_req_in            IN exam_req_det.id_exam_req%TYPE DEFAULT NULL,
        id_exam_in                IN exam_req_det.id_exam%TYPE DEFAULT NULL,
        flg_status_in             IN exam_req_det.flg_status%TYPE DEFAULT NULL,
        notes_in                  IN exam_req_det.notes%TYPE DEFAULT NULL,
        flg_pre_req_in            IN exam_req_det.flg_pre_req%TYPE DEFAULT NULL,
        id_movement_in            IN exam_req_det.id_movement%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN exam_req_det.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN exam_req_det.notes_cancel%TYPE DEFAULT NULL,
        barcode_in                IN exam_req_det.barcode%TYPE DEFAULT NULL,
        id_room_in                IN exam_req_det.id_room%TYPE DEFAULT NULL,
        notes_tech_in             IN exam_req_det.notes_tech%TYPE DEFAULT NULL,
        id_pat_pregnancy_in       IN exam_req_det.id_pat_pregnancy%TYPE DEFAULT NULL,
        dt_target_tstz_in         IN exam_req_det.dt_target_tstz%TYPE DEFAULT NULL,
        dt_final_target_tstz_in   IN exam_req_det.dt_final_target_tstz%TYPE DEFAULT NULL,
        dt_final_result_tstz_in   IN exam_req_det.dt_final_result_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN exam_req_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        id_prof_performed_in      IN exam_req_det.id_prof_performed%TYPE DEFAULT NULL,
        start_time_in             IN exam_req_det.start_time%TYPE DEFAULT NULL,
        end_time_in               IN exam_req_det.end_time%TYPE DEFAULT NULL,
        flg_referral_in           IN exam_req_det.flg_referral%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN exam_req_det.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in            IN exam_req_det.create_user%TYPE DEFAULT NULL,
        create_time_in            IN exam_req_det.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN exam_req_det.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN exam_req_det.update_user%TYPE DEFAULT NULL,
        update_time_in            IN exam_req_det.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN exam_req_det.update_institution%TYPE DEFAULT NULL,
        flg_clinical_purpose_in   IN exam_req_det.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_location_in           IN exam_req_det.flg_location%TYPE DEFAULT NULL,
        id_exec_institution_in    IN exam_req_det.id_exec_institution%TYPE DEFAULT NULL,
        id_exam_codification_in   IN exam_req_det.id_exam_codification%TYPE DEFAULT NULL,
        id_task_dependency_in     IN exam_req_det.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in  IN exam_req_det.flg_req_origin_module%TYPE DEFAULT 'D',
        id_prof_performed_reg_in  IN exam_req_det.id_prof_performed_reg%TYPE DEFAULT NULL,
        dt_performed_reg_in       IN exam_req_det.dt_performed_reg%TYPE DEFAULT NULL,
        id_order_recurrence_in    IN exam_req_det.id_order_recurrence%TYPE DEFAULT NULL,
        flg_fasting_in            IN exam_req_det.flg_fasting%TYPE DEFAULT NULL,
        flg_prn_in                IN exam_req_det.flg_prn%TYPE DEFAULT NULL,
        prn_notes_in              IN exam_req_det.prn_notes%TYPE DEFAULT NULL,
        id_pat_health_plan_in     IN exam_req_det.id_pat_health_plan%TYPE DEFAULT NULL,
        id_cdr_in                 IN exam_req_det.id_cdr%TYPE DEFAULT NULL,
        prof_dep_clin_serv_in     IN exam_req_det.prof_dep_clin_serv%TYPE DEFAULT NULL,
        flg_laterality_in         IN exam_req_det.flg_laterality%TYPE DEFAULT NULL,
        clinical_purpose_notes_in IN exam_req_det.clinical_purpose_notes%TYPE DEFAULT NULL,
        id_exam_group_in          IN exam_req_det.id_exam_group%TYPE DEFAULT NULL,
        flg_priority_in           IN exam_req_det.flg_priority%TYPE DEFAULT NULL,
        notes_patient_in          IN exam_req_det.notes_patient%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN exam_req_det.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_tstz_in    IN exam_req_det.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_pat_exemption_in       IN exam_req_det.id_pat_exemption%TYPE DEFAULT NULL,
        id_epis_doc_perform_in    IN exam_req_det.id_epis_doc_perform%TYPE DEFAULT NULL,
        id_co_sign_order_in       IN exam_req_det.id_co_sign_order%TYPE DEFAULT NULL,
        id_co_sign_cancel_in      IN exam_req_det.id_co_sign_cancel%TYPE DEFAULT NULL,
        notes_scheduler_in        IN exam_req_det.notes_scheduler%TYPE DEFAULT NULL,
        id_clinical_purpose_in    IN exam_req_det.id_clinical_purpose%TYPE DEFAULT NULL,
        diagnosis_notes_in        IN exam_req_det.diagnosis_notes%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_pky exam_req_det.id_exam_req_det%TYPE := next_key;
    BEGIN
        ins(id_exam_req_det_in        => l_pky,
            id_erd_parent_in          => id_erd_parent_in,
            id_exam_req_in            => id_exam_req_in,
            id_exam_in                => id_exam_in,
            flg_status_in             => flg_status_in,
            notes_in                  => notes_in,
            flg_pre_req_in            => flg_pre_req_in,
            id_movement_in            => id_movement_in,
            id_prof_cancel_in         => id_prof_cancel_in,
            notes_cancel_in           => notes_cancel_in,
            barcode_in                => barcode_in,
            id_room_in                => id_room_in,
            notes_tech_in             => notes_tech_in,
            id_pat_pregnancy_in       => id_pat_pregnancy_in,
            dt_target_tstz_in         => dt_target_tstz_in,
            dt_final_target_tstz_in   => dt_final_target_tstz_in,
            dt_final_result_tstz_in   => dt_final_result_tstz_in,
            dt_cancel_tstz_in         => dt_cancel_tstz_in,
            id_prof_performed_in      => id_prof_performed_in,
            start_time_in             => start_time_in,
            end_time_in               => end_time_in,
            flg_referral_in           => flg_referral_in,
            id_cancel_reason_in       => id_cancel_reason_in,
            create_user_in            => create_user_in,
            create_time_in            => create_time_in,
            create_institution_in     => create_institution_in,
            update_user_in            => update_user_in,
            update_time_in            => update_time_in,
            update_institution_in     => update_institution_in,
            flg_clinical_purpose_in   => flg_clinical_purpose_in,
            flg_location_in           => flg_location_in,
            id_exec_institution_in    => id_exec_institution_in,
            id_exam_codification_in   => id_exam_codification_in,
            id_task_dependency_in     => id_task_dependency_in,
            flg_req_origin_module_in  => flg_req_origin_module_in,
            id_prof_performed_reg_in  => id_prof_performed_reg_in,
            dt_performed_reg_in       => dt_performed_reg_in,
            id_order_recurrence_in    => id_order_recurrence_in,
            flg_fasting_in            => flg_fasting_in,
            flg_prn_in                => flg_prn_in,
            prn_notes_in              => prn_notes_in,
            id_pat_health_plan_in     => id_pat_health_plan_in,
            id_cdr_in                 => id_cdr_in,
            prof_dep_clin_serv_in     => prof_dep_clin_serv_in,
            flg_laterality_in         => flg_laterality_in,
            clinical_purpose_notes_in => clinical_purpose_notes_in,
            id_exam_group_in          => id_exam_group_in,
            flg_priority_in           => flg_priority_in,
            notes_patient_in          => notes_patient_in,
            id_prof_last_update_in    => id_prof_last_update_in,
            dt_last_update_tstz_in    => dt_last_update_tstz_in,
            id_pat_exemption_in       => id_pat_exemption_in,
            id_epis_doc_perform_in    => id_epis_doc_perform_in,
            id_co_sign_order_in       => id_co_sign_order_in,
            id_co_sign_cancel_in      => id_co_sign_cancel_in,
            notes_scheduler_in        => notes_scheduler_in,
            id_clinical_purpose_in    => id_clinical_purpose_in,
            diagnosis_notes_in        => diagnosis_notes_in,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
    END ins;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_erd_parent_in          IN exam_req_det.id_erd_parent%TYPE DEFAULT NULL,
        id_exam_req_in            IN exam_req_det.id_exam_req%TYPE DEFAULT NULL,
        id_exam_in                IN exam_req_det.id_exam%TYPE DEFAULT NULL,
        flg_status_in             IN exam_req_det.flg_status%TYPE DEFAULT NULL,
        notes_in                  IN exam_req_det.notes%TYPE DEFAULT NULL,
        flg_pre_req_in            IN exam_req_det.flg_pre_req%TYPE DEFAULT NULL,
        id_movement_in            IN exam_req_det.id_movement%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN exam_req_det.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN exam_req_det.notes_cancel%TYPE DEFAULT NULL,
        barcode_in                IN exam_req_det.barcode%TYPE DEFAULT NULL,
        id_room_in                IN exam_req_det.id_room%TYPE DEFAULT NULL,
        notes_tech_in             IN exam_req_det.notes_tech%TYPE DEFAULT NULL,
        id_pat_pregnancy_in       IN exam_req_det.id_pat_pregnancy%TYPE DEFAULT NULL,
        dt_target_tstz_in         IN exam_req_det.dt_target_tstz%TYPE DEFAULT NULL,
        dt_final_target_tstz_in   IN exam_req_det.dt_final_target_tstz%TYPE DEFAULT NULL,
        dt_final_result_tstz_in   IN exam_req_det.dt_final_result_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN exam_req_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        id_prof_performed_in      IN exam_req_det.id_prof_performed%TYPE DEFAULT NULL,
        start_time_in             IN exam_req_det.start_time%TYPE DEFAULT NULL,
        end_time_in               IN exam_req_det.end_time%TYPE DEFAULT NULL,
        flg_referral_in           IN exam_req_det.flg_referral%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN exam_req_det.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in            IN exam_req_det.create_user%TYPE DEFAULT NULL,
        create_time_in            IN exam_req_det.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN exam_req_det.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN exam_req_det.update_user%TYPE DEFAULT NULL,
        update_time_in            IN exam_req_det.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN exam_req_det.update_institution%TYPE DEFAULT NULL,
        flg_clinical_purpose_in   IN exam_req_det.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_location_in           IN exam_req_det.flg_location%TYPE DEFAULT NULL,
        id_exec_institution_in    IN exam_req_det.id_exec_institution%TYPE DEFAULT NULL,
        id_exam_codification_in   IN exam_req_det.id_exam_codification%TYPE DEFAULT NULL,
        id_task_dependency_in     IN exam_req_det.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in  IN exam_req_det.flg_req_origin_module%TYPE DEFAULT 'D',
        id_prof_performed_reg_in  IN exam_req_det.id_prof_performed_reg%TYPE DEFAULT NULL,
        dt_performed_reg_in       IN exam_req_det.dt_performed_reg%TYPE DEFAULT NULL,
        id_order_recurrence_in    IN exam_req_det.id_order_recurrence%TYPE DEFAULT NULL,
        flg_fasting_in            IN exam_req_det.flg_fasting%TYPE DEFAULT NULL,
        flg_prn_in                IN exam_req_det.flg_prn%TYPE DEFAULT NULL,
        prn_notes_in              IN exam_req_det.prn_notes%TYPE DEFAULT NULL,
        id_pat_health_plan_in     IN exam_req_det.id_pat_health_plan%TYPE DEFAULT NULL,
        id_cdr_in                 IN exam_req_det.id_cdr%TYPE DEFAULT NULL,
        prof_dep_clin_serv_in     IN exam_req_det.prof_dep_clin_serv%TYPE DEFAULT NULL,
        flg_laterality_in         IN exam_req_det.flg_laterality%TYPE DEFAULT NULL,
        clinical_purpose_notes_in IN exam_req_det.clinical_purpose_notes%TYPE DEFAULT NULL,
        id_exam_group_in          IN exam_req_det.id_exam_group%TYPE DEFAULT NULL,
        flg_priority_in           IN exam_req_det.flg_priority%TYPE DEFAULT NULL,
        notes_patient_in          IN exam_req_det.notes_patient%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN exam_req_det.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_tstz_in    IN exam_req_det.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_pat_exemption_in       IN exam_req_det.id_pat_exemption%TYPE DEFAULT NULL,
        id_epis_doc_perform_in    IN exam_req_det.id_epis_doc_perform%TYPE DEFAULT NULL,
        id_co_sign_order_in       IN exam_req_det.id_co_sign_order%TYPE DEFAULT NULL,
        id_co_sign_cancel_in      IN exam_req_det.id_co_sign_cancel%TYPE DEFAULT NULL,
        notes_scheduler_in        IN exam_req_det.notes_scheduler%TYPE DEFAULT NULL,
        id_clinical_purpose_in    IN exam_req_det.id_clinical_purpose%TYPE DEFAULT NULL,
        diagnosis_notes_in        IN exam_req_det.diagnosis_notes%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_erd_parent_in          => id_erd_parent_in,
            id_exam_req_in            => id_exam_req_in,
            id_exam_in                => id_exam_in,
            flg_status_in             => flg_status_in,
            notes_in                  => notes_in,
            flg_pre_req_in            => flg_pre_req_in,
            id_movement_in            => id_movement_in,
            id_prof_cancel_in         => id_prof_cancel_in,
            notes_cancel_in           => notes_cancel_in,
            barcode_in                => barcode_in,
            id_room_in                => id_room_in,
            notes_tech_in             => notes_tech_in,
            id_pat_pregnancy_in       => id_pat_pregnancy_in,
            dt_target_tstz_in         => dt_target_tstz_in,
            dt_final_target_tstz_in   => dt_final_target_tstz_in,
            dt_final_result_tstz_in   => dt_final_result_tstz_in,
            dt_cancel_tstz_in         => dt_cancel_tstz_in,
            id_prof_performed_in      => id_prof_performed_in,
            start_time_in             => start_time_in,
            end_time_in               => end_time_in,
            flg_referral_in           => flg_referral_in,
            id_cancel_reason_in       => id_cancel_reason_in,
            create_user_in            => create_user_in,
            create_time_in            => create_time_in,
            create_institution_in     => create_institution_in,
            update_user_in            => update_user_in,
            update_time_in            => update_time_in,
            update_institution_in     => update_institution_in,
            flg_clinical_purpose_in   => flg_clinical_purpose_in,
            flg_location_in           => flg_location_in,
            id_exec_institution_in    => id_exec_institution_in,
            id_exam_codification_in   => id_exam_codification_in,
            id_task_dependency_in     => id_task_dependency_in,
            flg_req_origin_module_in  => flg_req_origin_module_in,
            id_prof_performed_reg_in  => id_prof_performed_reg_in,
            dt_performed_reg_in       => dt_performed_reg_in,
            id_order_recurrence_in    => id_order_recurrence_in,
            flg_fasting_in            => flg_fasting_in,
            flg_prn_in                => flg_prn_in,
            prn_notes_in              => prn_notes_in,
            id_pat_health_plan_in     => id_pat_health_plan_in,
            id_cdr_in                 => id_cdr_in,
            prof_dep_clin_serv_in     => prof_dep_clin_serv_in,
            flg_laterality_in         => flg_laterality_in,
            clinical_purpose_notes_in => clinical_purpose_notes_in,
            id_exam_group_in          => id_exam_group_in,
            flg_priority_in           => flg_priority_in,
            notes_patient_in          => notes_patient_in,
            id_prof_last_update_in    => id_prof_last_update_in,
            dt_last_update_tstz_in    => dt_last_update_tstz_in,
            id_pat_exemption_in       => id_pat_exemption_in,
            id_epis_doc_perform_in    => id_epis_doc_perform_in,
            id_co_sign_order_in       => id_co_sign_order_in,
            id_co_sign_cancel_in      => id_co_sign_cancel_in,
            notes_scheduler_in        => notes_scheduler_in,
            id_clinical_purpose_in    => id_clinical_purpose_in,
            diagnosis_notes_in        => diagnosis_notes_in,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
    END ins;

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_erd_parent_in          IN exam_req_det.id_erd_parent%TYPE DEFAULT NULL,
        id_exam_req_in            IN exam_req_det.id_exam_req%TYPE DEFAULT NULL,
        id_exam_in                IN exam_req_det.id_exam%TYPE DEFAULT NULL,
        flg_status_in             IN exam_req_det.flg_status%TYPE DEFAULT NULL,
        notes_in                  IN exam_req_det.notes%TYPE DEFAULT NULL,
        flg_pre_req_in            IN exam_req_det.flg_pre_req%TYPE DEFAULT NULL,
        id_movement_in            IN exam_req_det.id_movement%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN exam_req_det.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN exam_req_det.notes_cancel%TYPE DEFAULT NULL,
        barcode_in                IN exam_req_det.barcode%TYPE DEFAULT NULL,
        id_room_in                IN exam_req_det.id_room%TYPE DEFAULT NULL,
        notes_tech_in             IN exam_req_det.notes_tech%TYPE DEFAULT NULL,
        id_pat_pregnancy_in       IN exam_req_det.id_pat_pregnancy%TYPE DEFAULT NULL,
        dt_target_tstz_in         IN exam_req_det.dt_target_tstz%TYPE DEFAULT NULL,
        dt_final_target_tstz_in   IN exam_req_det.dt_final_target_tstz%TYPE DEFAULT NULL,
        dt_final_result_tstz_in   IN exam_req_det.dt_final_result_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN exam_req_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        id_prof_performed_in      IN exam_req_det.id_prof_performed%TYPE DEFAULT NULL,
        start_time_in             IN exam_req_det.start_time%TYPE DEFAULT NULL,
        end_time_in               IN exam_req_det.end_time%TYPE DEFAULT NULL,
        flg_referral_in           IN exam_req_det.flg_referral%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN exam_req_det.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in            IN exam_req_det.create_user%TYPE DEFAULT NULL,
        create_time_in            IN exam_req_det.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN exam_req_det.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN exam_req_det.update_user%TYPE DEFAULT NULL,
        update_time_in            IN exam_req_det.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN exam_req_det.update_institution%TYPE DEFAULT NULL,
        flg_clinical_purpose_in   IN exam_req_det.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_location_in           IN exam_req_det.flg_location%TYPE DEFAULT NULL,
        id_exec_institution_in    IN exam_req_det.id_exec_institution%TYPE DEFAULT NULL,
        id_exam_codification_in   IN exam_req_det.id_exam_codification%TYPE DEFAULT NULL,
        id_task_dependency_in     IN exam_req_det.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in  IN exam_req_det.flg_req_origin_module%TYPE DEFAULT 'D',
        id_prof_performed_reg_in  IN exam_req_det.id_prof_performed_reg%TYPE DEFAULT NULL,
        dt_performed_reg_in       IN exam_req_det.dt_performed_reg%TYPE DEFAULT NULL,
        id_order_recurrence_in    IN exam_req_det.id_order_recurrence%TYPE DEFAULT NULL,
        flg_fasting_in            IN exam_req_det.flg_fasting%TYPE DEFAULT NULL,
        flg_prn_in                IN exam_req_det.flg_prn%TYPE DEFAULT NULL,
        prn_notes_in              IN exam_req_det.prn_notes%TYPE DEFAULT NULL,
        id_pat_health_plan_in     IN exam_req_det.id_pat_health_plan%TYPE DEFAULT NULL,
        id_cdr_in                 IN exam_req_det.id_cdr%TYPE DEFAULT NULL,
        prof_dep_clin_serv_in     IN exam_req_det.prof_dep_clin_serv%TYPE DEFAULT NULL,
        flg_laterality_in         IN exam_req_det.flg_laterality%TYPE DEFAULT NULL,
        clinical_purpose_notes_in IN exam_req_det.clinical_purpose_notes%TYPE DEFAULT NULL,
        id_exam_group_in          IN exam_req_det.id_exam_group%TYPE DEFAULT NULL,
        flg_priority_in           IN exam_req_det.flg_priority%TYPE DEFAULT NULL,
        notes_patient_in          IN exam_req_det.notes_patient%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN exam_req_det.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_tstz_in    IN exam_req_det.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_pat_exemption_in       IN exam_req_det.id_pat_exemption%TYPE DEFAULT NULL,
        id_epis_doc_perform_in    IN exam_req_det.id_epis_doc_perform%TYPE DEFAULT NULL,
        id_co_sign_order_in       IN exam_req_det.id_co_sign_order%TYPE DEFAULT NULL,
        id_co_sign_cancel_in      IN exam_req_det.id_co_sign_cancel%TYPE DEFAULT NULL,
        notes_scheduler_in        IN exam_req_det.notes_scheduler%TYPE DEFAULT NULL,
        id_clinical_purpose_in    IN exam_req_det.id_clinical_purpose%TYPE DEFAULT NULL,
        diagnosis_notes_in        IN exam_req_det.diagnosis_notes%TYPE DEFAULT NULL,
        id_exam_req_det_out       IN OUT exam_req_det.id_exam_req_det%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_pky exam_req_det.id_exam_req_det%TYPE := next_key;
    BEGIN
        ins(id_exam_req_det_in        => l_pky,
            id_erd_parent_in          => id_erd_parent_in,
            id_exam_req_in            => id_exam_req_in,
            id_exam_in                => id_exam_in,
            flg_status_in             => flg_status_in,
            notes_in                  => notes_in,
            flg_pre_req_in            => flg_pre_req_in,
            id_movement_in            => id_movement_in,
            id_prof_cancel_in         => id_prof_cancel_in,
            notes_cancel_in           => notes_cancel_in,
            barcode_in                => barcode_in,
            id_room_in                => id_room_in,
            notes_tech_in             => notes_tech_in,
            id_pat_pregnancy_in       => id_pat_pregnancy_in,
            dt_target_tstz_in         => dt_target_tstz_in,
            dt_final_target_tstz_in   => dt_final_target_tstz_in,
            dt_final_result_tstz_in   => dt_final_result_tstz_in,
            dt_cancel_tstz_in         => dt_cancel_tstz_in,
            id_prof_performed_in      => id_prof_performed_in,
            start_time_in             => start_time_in,
            end_time_in               => end_time_in,
            flg_referral_in           => flg_referral_in,
            id_cancel_reason_in       => id_cancel_reason_in,
            create_user_in            => create_user_in,
            create_time_in            => create_time_in,
            create_institution_in     => create_institution_in,
            update_user_in            => update_user_in,
            update_time_in            => update_time_in,
            update_institution_in     => update_institution_in,
            flg_clinical_purpose_in   => flg_clinical_purpose_in,
            flg_location_in           => flg_location_in,
            id_exec_institution_in    => id_exec_institution_in,
            id_exam_codification_in   => id_exam_codification_in,
            id_task_dependency_in     => id_task_dependency_in,
            flg_req_origin_module_in  => flg_req_origin_module_in,
            id_prof_performed_reg_in  => id_prof_performed_reg_in,
            dt_performed_reg_in       => dt_performed_reg_in,
            id_order_recurrence_in    => id_order_recurrence_in,
            flg_fasting_in            => flg_fasting_in,
            flg_prn_in                => flg_prn_in,
            prn_notes_in              => prn_notes_in,
            id_pat_health_plan_in     => id_pat_health_plan_in,
            id_cdr_in                 => id_cdr_in,
            prof_dep_clin_serv_in     => prof_dep_clin_serv_in,
            flg_laterality_in         => flg_laterality_in,
            clinical_purpose_notes_in => clinical_purpose_notes_in,
            id_exam_group_in          => id_exam_group_in,
            flg_priority_in           => flg_priority_in,
            notes_patient_in          => notes_patient_in,
            id_prof_last_update_in    => id_prof_last_update_in,
            dt_last_update_tstz_in    => dt_last_update_tstz_in,
            id_pat_exemption_in       => id_pat_exemption_in,
            id_epis_doc_perform_in    => id_epis_doc_perform_in,
            id_co_sign_order_in       => id_co_sign_order_in,
            id_co_sign_cancel_in      => id_co_sign_cancel_in,
            notes_scheduler_in        => notes_scheduler_in,
            id_clinical_purpose_in    => id_clinical_purpose_in,
            diagnosis_notes_in        => diagnosis_notes_in,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
        id_exam_req_det_out := l_pky;
    END ins;

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_erd_parent_in          IN exam_req_det.id_erd_parent%TYPE DEFAULT NULL,
        id_exam_req_in            IN exam_req_det.id_exam_req%TYPE DEFAULT NULL,
        id_exam_in                IN exam_req_det.id_exam%TYPE DEFAULT NULL,
        flg_status_in             IN exam_req_det.flg_status%TYPE DEFAULT NULL,
        notes_in                  IN exam_req_det.notes%TYPE DEFAULT NULL,
        flg_pre_req_in            IN exam_req_det.flg_pre_req%TYPE DEFAULT NULL,
        id_movement_in            IN exam_req_det.id_movement%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN exam_req_det.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN exam_req_det.notes_cancel%TYPE DEFAULT NULL,
        barcode_in                IN exam_req_det.barcode%TYPE DEFAULT NULL,
        id_room_in                IN exam_req_det.id_room%TYPE DEFAULT NULL,
        notes_tech_in             IN exam_req_det.notes_tech%TYPE DEFAULT NULL,
        id_pat_pregnancy_in       IN exam_req_det.id_pat_pregnancy%TYPE DEFAULT NULL,
        dt_target_tstz_in         IN exam_req_det.dt_target_tstz%TYPE DEFAULT NULL,
        dt_final_target_tstz_in   IN exam_req_det.dt_final_target_tstz%TYPE DEFAULT NULL,
        dt_final_result_tstz_in   IN exam_req_det.dt_final_result_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN exam_req_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        id_prof_performed_in      IN exam_req_det.id_prof_performed%TYPE DEFAULT NULL,
        start_time_in             IN exam_req_det.start_time%TYPE DEFAULT NULL,
        end_time_in               IN exam_req_det.end_time%TYPE DEFAULT NULL,
        flg_referral_in           IN exam_req_det.flg_referral%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN exam_req_det.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in            IN exam_req_det.create_user%TYPE DEFAULT NULL,
        create_time_in            IN exam_req_det.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN exam_req_det.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN exam_req_det.update_user%TYPE DEFAULT NULL,
        update_time_in            IN exam_req_det.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN exam_req_det.update_institution%TYPE DEFAULT NULL,
        flg_clinical_purpose_in   IN exam_req_det.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_location_in           IN exam_req_det.flg_location%TYPE DEFAULT NULL,
        id_exec_institution_in    IN exam_req_det.id_exec_institution%TYPE DEFAULT NULL,
        id_exam_codification_in   IN exam_req_det.id_exam_codification%TYPE DEFAULT NULL,
        id_task_dependency_in     IN exam_req_det.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in  IN exam_req_det.flg_req_origin_module%TYPE DEFAULT 'D',
        id_prof_performed_reg_in  IN exam_req_det.id_prof_performed_reg%TYPE DEFAULT NULL,
        dt_performed_reg_in       IN exam_req_det.dt_performed_reg%TYPE DEFAULT NULL,
        id_order_recurrence_in    IN exam_req_det.id_order_recurrence%TYPE DEFAULT NULL,
        flg_fasting_in            IN exam_req_det.flg_fasting%TYPE DEFAULT NULL,
        flg_prn_in                IN exam_req_det.flg_prn%TYPE DEFAULT NULL,
        prn_notes_in              IN exam_req_det.prn_notes%TYPE DEFAULT NULL,
        id_pat_health_plan_in     IN exam_req_det.id_pat_health_plan%TYPE DEFAULT NULL,
        id_cdr_in                 IN exam_req_det.id_cdr%TYPE DEFAULT NULL,
        prof_dep_clin_serv_in     IN exam_req_det.prof_dep_clin_serv%TYPE DEFAULT NULL,
        flg_laterality_in         IN exam_req_det.flg_laterality%TYPE DEFAULT NULL,
        clinical_purpose_notes_in IN exam_req_det.clinical_purpose_notes%TYPE DEFAULT NULL,
        id_exam_group_in          IN exam_req_det.id_exam_group%TYPE DEFAULT NULL,
        flg_priority_in           IN exam_req_det.flg_priority%TYPE DEFAULT NULL,
        notes_patient_in          IN exam_req_det.notes_patient%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN exam_req_det.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_tstz_in    IN exam_req_det.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_pat_exemption_in       IN exam_req_det.id_pat_exemption%TYPE DEFAULT NULL,
        id_epis_doc_perform_in    IN exam_req_det.id_epis_doc_perform%TYPE DEFAULT NULL,
        id_co_sign_order_in       IN exam_req_det.id_co_sign_order%TYPE DEFAULT NULL,
        id_co_sign_cancel_in      IN exam_req_det.id_co_sign_cancel%TYPE DEFAULT NULL,
        notes_scheduler_in        IN exam_req_det.notes_scheduler%TYPE DEFAULT NULL,
        id_clinical_purpose_in    IN exam_req_det.id_clinical_purpose%TYPE DEFAULT NULL,
        diagnosis_notes_in        IN exam_req_det.diagnosis_notes%TYPE DEFAULT NULL,
        id_exam_req_det_out       IN OUT exam_req_det.id_exam_req_det%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_erd_parent_in          => id_erd_parent_in,
            id_exam_req_in            => id_exam_req_in,
            id_exam_in                => id_exam_in,
            flg_status_in             => flg_status_in,
            notes_in                  => notes_in,
            flg_pre_req_in            => flg_pre_req_in,
            id_movement_in            => id_movement_in,
            id_prof_cancel_in         => id_prof_cancel_in,
            notes_cancel_in           => notes_cancel_in,
            barcode_in                => barcode_in,
            id_room_in                => id_room_in,
            notes_tech_in             => notes_tech_in,
            id_pat_pregnancy_in       => id_pat_pregnancy_in,
            dt_target_tstz_in         => dt_target_tstz_in,
            dt_final_target_tstz_in   => dt_final_target_tstz_in,
            dt_final_result_tstz_in   => dt_final_result_tstz_in,
            dt_cancel_tstz_in         => dt_cancel_tstz_in,
            id_prof_performed_in      => id_prof_performed_in,
            start_time_in             => start_time_in,
            end_time_in               => end_time_in,
            flg_referral_in           => flg_referral_in,
            id_cancel_reason_in       => id_cancel_reason_in,
            create_user_in            => create_user_in,
            create_time_in            => create_time_in,
            create_institution_in     => create_institution_in,
            update_user_in            => update_user_in,
            update_time_in            => update_time_in,
            update_institution_in     => update_institution_in,
            flg_clinical_purpose_in   => flg_clinical_purpose_in,
            flg_location_in           => flg_location_in,
            id_exec_institution_in    => id_exec_institution_in,
            id_exam_codification_in   => id_exam_codification_in,
            id_task_dependency_in     => id_task_dependency_in,
            flg_req_origin_module_in  => flg_req_origin_module_in,
            id_prof_performed_reg_in  => id_prof_performed_reg_in,
            dt_performed_reg_in       => dt_performed_reg_in,
            id_order_recurrence_in    => id_order_recurrence_in,
            flg_fasting_in            => flg_fasting_in,
            flg_prn_in                => flg_prn_in,
            prn_notes_in              => prn_notes_in,
            id_pat_health_plan_in     => id_pat_health_plan_in,
            id_cdr_in                 => id_cdr_in,
            prof_dep_clin_serv_in     => prof_dep_clin_serv_in,
            flg_laterality_in         => flg_laterality_in,
            clinical_purpose_notes_in => clinical_purpose_notes_in,
            id_exam_group_in          => id_exam_group_in,
            flg_priority_in           => flg_priority_in,
            notes_patient_in          => notes_patient_in,
            id_prof_last_update_in    => id_prof_last_update_in,
            dt_last_update_tstz_in    => dt_last_update_tstz_in,
            id_pat_exemption_in       => id_pat_exemption_in,
            id_epis_doc_perform_in    => id_epis_doc_perform_in,
            id_co_sign_order_in       => id_co_sign_order_in,
            id_co_sign_cancel_in      => id_co_sign_cancel_in,
            notes_scheduler_in        => notes_scheduler_in,
            id_clinical_purpose_in    => id_clinical_purpose_in,
            diagnosis_notes_in        => diagnosis_notes_in,
            id_exam_req_det_out       => id_exam_req_det_out,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
    END ins;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_erd_parent_in          IN exam_req_det.id_erd_parent%TYPE DEFAULT NULL,
        id_exam_req_in            IN exam_req_det.id_exam_req%TYPE DEFAULT NULL,
        id_exam_in                IN exam_req_det.id_exam%TYPE DEFAULT NULL,
        flg_status_in             IN exam_req_det.flg_status%TYPE DEFAULT NULL,
        notes_in                  IN exam_req_det.notes%TYPE DEFAULT NULL,
        flg_pre_req_in            IN exam_req_det.flg_pre_req%TYPE DEFAULT NULL,
        id_movement_in            IN exam_req_det.id_movement%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN exam_req_det.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN exam_req_det.notes_cancel%TYPE DEFAULT NULL,
        barcode_in                IN exam_req_det.barcode%TYPE DEFAULT NULL,
        id_room_in                IN exam_req_det.id_room%TYPE DEFAULT NULL,
        notes_tech_in             IN exam_req_det.notes_tech%TYPE DEFAULT NULL,
        id_pat_pregnancy_in       IN exam_req_det.id_pat_pregnancy%TYPE DEFAULT NULL,
        dt_target_tstz_in         IN exam_req_det.dt_target_tstz%TYPE DEFAULT NULL,
        dt_final_target_tstz_in   IN exam_req_det.dt_final_target_tstz%TYPE DEFAULT NULL,
        dt_final_result_tstz_in   IN exam_req_det.dt_final_result_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN exam_req_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        id_prof_performed_in      IN exam_req_det.id_prof_performed%TYPE DEFAULT NULL,
        start_time_in             IN exam_req_det.start_time%TYPE DEFAULT NULL,
        end_time_in               IN exam_req_det.end_time%TYPE DEFAULT NULL,
        flg_referral_in           IN exam_req_det.flg_referral%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN exam_req_det.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in            IN exam_req_det.create_user%TYPE DEFAULT NULL,
        create_time_in            IN exam_req_det.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN exam_req_det.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN exam_req_det.update_user%TYPE DEFAULT NULL,
        update_time_in            IN exam_req_det.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN exam_req_det.update_institution%TYPE DEFAULT NULL,
        flg_clinical_purpose_in   IN exam_req_det.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_location_in           IN exam_req_det.flg_location%TYPE DEFAULT NULL,
        id_exec_institution_in    IN exam_req_det.id_exec_institution%TYPE DEFAULT NULL,
        id_exam_codification_in   IN exam_req_det.id_exam_codification%TYPE DEFAULT NULL,
        id_task_dependency_in     IN exam_req_det.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in  IN exam_req_det.flg_req_origin_module%TYPE DEFAULT 'D',
        id_prof_performed_reg_in  IN exam_req_det.id_prof_performed_reg%TYPE DEFAULT NULL,
        dt_performed_reg_in       IN exam_req_det.dt_performed_reg%TYPE DEFAULT NULL,
        id_order_recurrence_in    IN exam_req_det.id_order_recurrence%TYPE DEFAULT NULL,
        flg_fasting_in            IN exam_req_det.flg_fasting%TYPE DEFAULT NULL,
        flg_prn_in                IN exam_req_det.flg_prn%TYPE DEFAULT NULL,
        prn_notes_in              IN exam_req_det.prn_notes%TYPE DEFAULT NULL,
        id_pat_health_plan_in     IN exam_req_det.id_pat_health_plan%TYPE DEFAULT NULL,
        id_cdr_in                 IN exam_req_det.id_cdr%TYPE DEFAULT NULL,
        prof_dep_clin_serv_in     IN exam_req_det.prof_dep_clin_serv%TYPE DEFAULT NULL,
        flg_laterality_in         IN exam_req_det.flg_laterality%TYPE DEFAULT NULL,
        clinical_purpose_notes_in IN exam_req_det.clinical_purpose_notes%TYPE DEFAULT NULL,
        id_exam_group_in          IN exam_req_det.id_exam_group%TYPE DEFAULT NULL,
        flg_priority_in           IN exam_req_det.flg_priority%TYPE DEFAULT NULL,
        notes_patient_in          IN exam_req_det.notes_patient%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN exam_req_det.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_tstz_in    IN exam_req_det.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_pat_exemption_in       IN exam_req_det.id_pat_exemption%TYPE DEFAULT NULL,
        id_epis_doc_perform_in    IN exam_req_det.id_epis_doc_perform%TYPE DEFAULT NULL,
        id_co_sign_order_in       IN exam_req_det.id_co_sign_order%TYPE DEFAULT NULL,
        id_co_sign_cancel_in      IN exam_req_det.id_co_sign_cancel%TYPE DEFAULT NULL,
        notes_scheduler_in        IN exam_req_det.notes_scheduler%TYPE DEFAULT NULL,
        id_clinical_purpose_in    IN exam_req_det.id_clinical_purpose%TYPE DEFAULT NULL,
        diagnosis_notes_in        IN exam_req_det.diagnosis_notes%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN exam_req_det.id_exam_req_det%TYPE IS
        l_pky exam_req_det.id_exam_req_det%TYPE := next_key;
    BEGIN
        ins(id_exam_req_det_in        => l_pky,
            id_erd_parent_in          => id_erd_parent_in,
            id_exam_req_in            => id_exam_req_in,
            id_exam_in                => id_exam_in,
            flg_status_in             => flg_status_in,
            notes_in                  => notes_in,
            flg_pre_req_in            => flg_pre_req_in,
            id_movement_in            => id_movement_in,
            id_prof_cancel_in         => id_prof_cancel_in,
            notes_cancel_in           => notes_cancel_in,
            barcode_in                => barcode_in,
            id_room_in                => id_room_in,
            notes_tech_in             => notes_tech_in,
            id_pat_pregnancy_in       => id_pat_pregnancy_in,
            dt_target_tstz_in         => dt_target_tstz_in,
            dt_final_target_tstz_in   => dt_final_target_tstz_in,
            dt_final_result_tstz_in   => dt_final_result_tstz_in,
            dt_cancel_tstz_in         => dt_cancel_tstz_in,
            id_prof_performed_in      => id_prof_performed_in,
            start_time_in             => start_time_in,
            end_time_in               => end_time_in,
            flg_referral_in           => flg_referral_in,
            id_cancel_reason_in       => id_cancel_reason_in,
            create_user_in            => create_user_in,
            create_time_in            => create_time_in,
            create_institution_in     => create_institution_in,
            update_user_in            => update_user_in,
            update_time_in            => update_time_in,
            update_institution_in     => update_institution_in,
            flg_clinical_purpose_in   => flg_clinical_purpose_in,
            flg_location_in           => flg_location_in,
            id_exec_institution_in    => id_exec_institution_in,
            id_exam_codification_in   => id_exam_codification_in,
            id_task_dependency_in     => id_task_dependency_in,
            flg_req_origin_module_in  => flg_req_origin_module_in,
            id_prof_performed_reg_in  => id_prof_performed_reg_in,
            dt_performed_reg_in       => dt_performed_reg_in,
            id_order_recurrence_in    => id_order_recurrence_in,
            flg_fasting_in            => flg_fasting_in,
            flg_prn_in                => flg_prn_in,
            prn_notes_in              => prn_notes_in,
            id_pat_health_plan_in     => id_pat_health_plan_in,
            id_cdr_in                 => id_cdr_in,
            prof_dep_clin_serv_in     => prof_dep_clin_serv_in,
            flg_laterality_in         => flg_laterality_in,
            clinical_purpose_notes_in => clinical_purpose_notes_in,
            id_exam_group_in          => id_exam_group_in,
            flg_priority_in           => flg_priority_in,
            notes_patient_in          => notes_patient_in,
            id_prof_last_update_in    => id_prof_last_update_in,
            dt_last_update_tstz_in    => dt_last_update_tstz_in,
            id_pat_exemption_in       => id_pat_exemption_in,
            id_epis_doc_perform_in    => id_epis_doc_perform_in,
            id_co_sign_order_in       => id_co_sign_order_in,
            id_co_sign_cancel_in      => id_co_sign_cancel_in,
            notes_scheduler_in        => notes_scheduler_in,
            id_clinical_purpose_in    => id_clinical_purpose_in,
            diagnosis_notes_in        => diagnosis_notes_in,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
        RETURN l_pky;
    END ins;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_erd_parent_in          IN exam_req_det.id_erd_parent%TYPE DEFAULT NULL,
        id_exam_req_in            IN exam_req_det.id_exam_req%TYPE DEFAULT NULL,
        id_exam_in                IN exam_req_det.id_exam%TYPE DEFAULT NULL,
        flg_status_in             IN exam_req_det.flg_status%TYPE DEFAULT NULL,
        notes_in                  IN exam_req_det.notes%TYPE DEFAULT NULL,
        flg_pre_req_in            IN exam_req_det.flg_pre_req%TYPE DEFAULT NULL,
        id_movement_in            IN exam_req_det.id_movement%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN exam_req_det.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN exam_req_det.notes_cancel%TYPE DEFAULT NULL,
        barcode_in                IN exam_req_det.barcode%TYPE DEFAULT NULL,
        id_room_in                IN exam_req_det.id_room%TYPE DEFAULT NULL,
        notes_tech_in             IN exam_req_det.notes_tech%TYPE DEFAULT NULL,
        id_pat_pregnancy_in       IN exam_req_det.id_pat_pregnancy%TYPE DEFAULT NULL,
        dt_target_tstz_in         IN exam_req_det.dt_target_tstz%TYPE DEFAULT NULL,
        dt_final_target_tstz_in   IN exam_req_det.dt_final_target_tstz%TYPE DEFAULT NULL,
        dt_final_result_tstz_in   IN exam_req_det.dt_final_result_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN exam_req_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        id_prof_performed_in      IN exam_req_det.id_prof_performed%TYPE DEFAULT NULL,
        start_time_in             IN exam_req_det.start_time%TYPE DEFAULT NULL,
        end_time_in               IN exam_req_det.end_time%TYPE DEFAULT NULL,
        flg_referral_in           IN exam_req_det.flg_referral%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN exam_req_det.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in            IN exam_req_det.create_user%TYPE DEFAULT NULL,
        create_time_in            IN exam_req_det.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN exam_req_det.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN exam_req_det.update_user%TYPE DEFAULT NULL,
        update_time_in            IN exam_req_det.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN exam_req_det.update_institution%TYPE DEFAULT NULL,
        flg_clinical_purpose_in   IN exam_req_det.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_location_in           IN exam_req_det.flg_location%TYPE DEFAULT NULL,
        id_exec_institution_in    IN exam_req_det.id_exec_institution%TYPE DEFAULT NULL,
        id_exam_codification_in   IN exam_req_det.id_exam_codification%TYPE DEFAULT NULL,
        id_task_dependency_in     IN exam_req_det.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in  IN exam_req_det.flg_req_origin_module%TYPE DEFAULT 'D',
        id_prof_performed_reg_in  IN exam_req_det.id_prof_performed_reg%TYPE DEFAULT NULL,
        dt_performed_reg_in       IN exam_req_det.dt_performed_reg%TYPE DEFAULT NULL,
        id_order_recurrence_in    IN exam_req_det.id_order_recurrence%TYPE DEFAULT NULL,
        flg_fasting_in            IN exam_req_det.flg_fasting%TYPE DEFAULT NULL,
        flg_prn_in                IN exam_req_det.flg_prn%TYPE DEFAULT NULL,
        prn_notes_in              IN exam_req_det.prn_notes%TYPE DEFAULT NULL,
        id_pat_health_plan_in     IN exam_req_det.id_pat_health_plan%TYPE DEFAULT NULL,
        id_cdr_in                 IN exam_req_det.id_cdr%TYPE DEFAULT NULL,
        prof_dep_clin_serv_in     IN exam_req_det.prof_dep_clin_serv%TYPE DEFAULT NULL,
        flg_laterality_in         IN exam_req_det.flg_laterality%TYPE DEFAULT NULL,
        clinical_purpose_notes_in IN exam_req_det.clinical_purpose_notes%TYPE DEFAULT NULL,
        id_exam_group_in          IN exam_req_det.id_exam_group%TYPE DEFAULT NULL,
        flg_priority_in           IN exam_req_det.flg_priority%TYPE DEFAULT NULL,
        notes_patient_in          IN exam_req_det.notes_patient%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN exam_req_det.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_tstz_in    IN exam_req_det.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_pat_exemption_in       IN exam_req_det.id_pat_exemption%TYPE DEFAULT NULL,
        id_epis_doc_perform_in    IN exam_req_det.id_epis_doc_perform%TYPE DEFAULT NULL,
        id_co_sign_order_in       IN exam_req_det.id_co_sign_order%TYPE DEFAULT NULL,
        id_co_sign_cancel_in      IN exam_req_det.id_co_sign_cancel%TYPE DEFAULT NULL,
        notes_scheduler_in        IN exam_req_det.notes_scheduler%TYPE DEFAULT NULL,
        id_clinical_purpose_in    IN exam_req_det.id_clinical_purpose%TYPE DEFAULT NULL,
        diagnosis_notes_in        IN exam_req_det.diagnosis_notes%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN exam_req_det.id_exam_req_det%TYPE IS
        l_pky    exam_req_det.id_exam_req_det%TYPE := next_key;
        rows_out table_varchar;
    BEGIN
        ins(id_exam_req_det_in        => l_pky,
            id_erd_parent_in          => id_erd_parent_in,
            id_exam_req_in            => id_exam_req_in,
            id_exam_in                => id_exam_in,
            flg_status_in             => flg_status_in,
            notes_in                  => notes_in,
            flg_pre_req_in            => flg_pre_req_in,
            id_movement_in            => id_movement_in,
            id_prof_cancel_in         => id_prof_cancel_in,
            notes_cancel_in           => notes_cancel_in,
            barcode_in                => barcode_in,
            id_room_in                => id_room_in,
            notes_tech_in             => notes_tech_in,
            id_pat_pregnancy_in       => id_pat_pregnancy_in,
            dt_target_tstz_in         => dt_target_tstz_in,
            dt_final_target_tstz_in   => dt_final_target_tstz_in,
            dt_final_result_tstz_in   => dt_final_result_tstz_in,
            dt_cancel_tstz_in         => dt_cancel_tstz_in,
            id_prof_performed_in      => id_prof_performed_in,
            start_time_in             => start_time_in,
            end_time_in               => end_time_in,
            flg_referral_in           => flg_referral_in,
            id_cancel_reason_in       => id_cancel_reason_in,
            create_user_in            => create_user_in,
            create_time_in            => create_time_in,
            create_institution_in     => create_institution_in,
            update_user_in            => update_user_in,
            update_time_in            => update_time_in,
            update_institution_in     => update_institution_in,
            flg_clinical_purpose_in   => flg_clinical_purpose_in,
            flg_location_in           => flg_location_in,
            id_exec_institution_in    => id_exec_institution_in,
            id_exam_codification_in   => id_exam_codification_in,
            id_task_dependency_in     => id_task_dependency_in,
            flg_req_origin_module_in  => flg_req_origin_module_in,
            id_prof_performed_reg_in  => id_prof_performed_reg_in,
            dt_performed_reg_in       => dt_performed_reg_in,
            id_order_recurrence_in    => id_order_recurrence_in,
            flg_fasting_in            => flg_fasting_in,
            flg_prn_in                => flg_prn_in,
            prn_notes_in              => prn_notes_in,
            id_pat_health_plan_in     => id_pat_health_plan_in,
            id_cdr_in                 => id_cdr_in,
            prof_dep_clin_serv_in     => prof_dep_clin_serv_in,
            flg_laterality_in         => flg_laterality_in,
            clinical_purpose_notes_in => clinical_purpose_notes_in,
            id_exam_group_in          => id_exam_group_in,
            flg_priority_in           => flg_priority_in,
            notes_patient_in          => notes_patient_in,
            id_prof_last_update_in    => id_prof_last_update_in,
            dt_last_update_tstz_in    => dt_last_update_tstz_in,
            id_pat_exemption_in       => id_pat_exemption_in,
            id_epis_doc_perform_in    => id_epis_doc_perform_in,
            id_co_sign_order_in       => id_co_sign_order_in,
            id_co_sign_cancel_in      => id_co_sign_cancel_in,
            notes_scheduler_in        => notes_scheduler_in,
            id_clinical_purpose_in    => id_clinical_purpose_in,
            diagnosis_notes_in        => diagnosis_notes_in,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
        RETURN l_pky;
    END ins;

    PROCEDURE ins
    (
        id_exam_req_det_in        IN exam_req_det.id_exam_req_det%TYPE,
        id_erd_parent_in          IN exam_req_det.id_erd_parent%TYPE DEFAULT NULL,
        id_exam_req_in            IN exam_req_det.id_exam_req%TYPE DEFAULT NULL,
        id_exam_in                IN exam_req_det.id_exam%TYPE DEFAULT NULL,
        flg_status_in             IN exam_req_det.flg_status%TYPE DEFAULT NULL,
        notes_in                  IN exam_req_det.notes%TYPE DEFAULT NULL,
        flg_pre_req_in            IN exam_req_det.flg_pre_req%TYPE DEFAULT NULL,
        id_movement_in            IN exam_req_det.id_movement%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN exam_req_det.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN exam_req_det.notes_cancel%TYPE DEFAULT NULL,
        barcode_in                IN exam_req_det.barcode%TYPE DEFAULT NULL,
        id_room_in                IN exam_req_det.id_room%TYPE DEFAULT NULL,
        notes_tech_in             IN exam_req_det.notes_tech%TYPE DEFAULT NULL,
        id_pat_pregnancy_in       IN exam_req_det.id_pat_pregnancy%TYPE DEFAULT NULL,
        dt_target_tstz_in         IN exam_req_det.dt_target_tstz%TYPE DEFAULT NULL,
        dt_final_target_tstz_in   IN exam_req_det.dt_final_target_tstz%TYPE DEFAULT NULL,
        dt_final_result_tstz_in   IN exam_req_det.dt_final_result_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN exam_req_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        id_prof_performed_in      IN exam_req_det.id_prof_performed%TYPE DEFAULT NULL,
        start_time_in             IN exam_req_det.start_time%TYPE DEFAULT NULL,
        end_time_in               IN exam_req_det.end_time%TYPE DEFAULT NULL,
        flg_referral_in           IN exam_req_det.flg_referral%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN exam_req_det.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in            IN exam_req_det.create_user%TYPE DEFAULT NULL,
        create_time_in            IN exam_req_det.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN exam_req_det.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN exam_req_det.update_user%TYPE DEFAULT NULL,
        update_time_in            IN exam_req_det.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN exam_req_det.update_institution%TYPE DEFAULT NULL,
        flg_clinical_purpose_in   IN exam_req_det.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_location_in           IN exam_req_det.flg_location%TYPE DEFAULT NULL,
        id_exec_institution_in    IN exam_req_det.id_exec_institution%TYPE DEFAULT NULL,
        id_exam_codification_in   IN exam_req_det.id_exam_codification%TYPE DEFAULT NULL,
        id_task_dependency_in     IN exam_req_det.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in  IN exam_req_det.flg_req_origin_module%TYPE DEFAULT 'D',
        id_prof_performed_reg_in  IN exam_req_det.id_prof_performed_reg%TYPE DEFAULT NULL,
        dt_performed_reg_in       IN exam_req_det.dt_performed_reg%TYPE DEFAULT NULL,
        id_order_recurrence_in    IN exam_req_det.id_order_recurrence%TYPE DEFAULT NULL,
        flg_fasting_in            IN exam_req_det.flg_fasting%TYPE DEFAULT NULL,
        flg_prn_in                IN exam_req_det.flg_prn%TYPE DEFAULT NULL,
        prn_notes_in              IN exam_req_det.prn_notes%TYPE DEFAULT NULL,
        id_pat_health_plan_in     IN exam_req_det.id_pat_health_plan%TYPE DEFAULT NULL,
        id_cdr_in                 IN exam_req_det.id_cdr%TYPE DEFAULT NULL,
        prof_dep_clin_serv_in     IN exam_req_det.prof_dep_clin_serv%TYPE DEFAULT NULL,
        flg_laterality_in         IN exam_req_det.flg_laterality%TYPE DEFAULT NULL,
        clinical_purpose_notes_in IN exam_req_det.clinical_purpose_notes%TYPE DEFAULT NULL,
        id_exam_group_in          IN exam_req_det.id_exam_group%TYPE DEFAULT NULL,
        flg_priority_in           IN exam_req_det.flg_priority%TYPE DEFAULT NULL,
        notes_patient_in          IN exam_req_det.notes_patient%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN exam_req_det.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_tstz_in    IN exam_req_det.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_pat_exemption_in       IN exam_req_det.id_pat_exemption%TYPE DEFAULT NULL,
        id_epis_doc_perform_in    IN exam_req_det.id_epis_doc_perform%TYPE DEFAULT NULL,
        id_co_sign_order_in       IN exam_req_det.id_co_sign_order%TYPE DEFAULT NULL,
        id_co_sign_cancel_in      IN exam_req_det.id_co_sign_cancel%TYPE DEFAULT NULL,
        notes_scheduler_in        IN exam_req_det.notes_scheduler%TYPE DEFAULT NULL,
        id_clinical_purpose_in    IN exam_req_det.id_clinical_purpose%TYPE DEFAULT NULL,
        diagnosis_notes_in        IN exam_req_det.diagnosis_notes%TYPE DEFAULT NULL,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  OUT table_varchar
    ) IS
    BEGIN
        INSERT INTO exam_req_det
            (id_exam_req_det,
             id_erd_parent,
             id_exam_req,
             id_exam,
             flg_status,
             notes,
             flg_pre_req,
             id_movement,
             id_prof_cancel,
             notes_cancel,
             barcode,
             id_room,
             notes_tech,
             id_pat_pregnancy,
             dt_target_tstz,
             dt_final_target_tstz,
             dt_final_result_tstz,
             dt_cancel_tstz,
             id_prof_performed,
             start_time,
             end_time,
             flg_referral,
             id_cancel_reason,
             create_user,
             create_time,
             create_institution,
             update_user,
             update_time,
             update_institution,
             flg_clinical_purpose,
             flg_location,
             id_exec_institution,
             id_exam_codification,
             id_task_dependency,
             flg_req_origin_module,
             id_prof_performed_reg,
             dt_performed_reg,
             id_order_recurrence,
             flg_fasting,
             flg_prn,
             prn_notes,
             id_pat_health_plan,
             id_cdr,
             prof_dep_clin_serv,
             flg_laterality,
             clinical_purpose_notes,
             id_exam_group,
             flg_priority,
             notes_patient,
             id_prof_last_update,
             dt_last_update_tstz,
             id_pat_exemption,
             id_epis_doc_perform,
             id_co_sign_order,
             id_co_sign_cancel,
             notes_scheduler,
             id_clinical_purpose,
             diagnosis_notes)
        VALUES
            (id_exam_req_det_in,
             id_erd_parent_in,
             id_exam_req_in,
             id_exam_in,
             flg_status_in,
             notes_in,
             flg_pre_req_in,
             id_movement_in,
             id_prof_cancel_in,
             notes_cancel_in,
             barcode_in,
             id_room_in,
             notes_tech_in,
             id_pat_pregnancy_in,
             dt_target_tstz_in,
             dt_final_target_tstz_in,
             dt_final_result_tstz_in,
             dt_cancel_tstz_in,
             id_prof_performed_in,
             start_time_in,
             end_time_in,
             flg_referral_in,
             id_cancel_reason_in,
             create_user_in,
             create_time_in,
             create_institution_in,
             update_user_in,
             update_time_in,
             update_institution_in,
             flg_clinical_purpose_in,
             flg_location_in,
             id_exec_institution_in,
             id_exam_codification_in,
             id_task_dependency_in,
             flg_req_origin_module_in,
             id_prof_performed_reg_in,
             dt_performed_reg_in,
             id_order_recurrence_in,
             flg_fasting_in,
             flg_prn_in,
             prn_notes_in,
             id_pat_health_plan_in,
             id_cdr_in,
             prof_dep_clin_serv_in,
             flg_laterality_in,
             clinical_purpose_notes_in,
             id_exam_group_in,
             flg_priority_in,
             notes_patient_in,
             id_prof_last_update_in,
             dt_last_update_tstz_in,
             id_pat_exemption_in,
             id_epis_doc_perform_in,
             id_co_sign_order_in,
             id_co_sign_cancel_in,
             notes_scheduler_in,
             id_clinical_purpose_in,
             diagnosis_notes_in)
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    PROCEDURE ins
    (
        id_exam_req_det_in        IN exam_req_det.id_exam_req_det%TYPE,
        id_erd_parent_in          IN exam_req_det.id_erd_parent%TYPE DEFAULT NULL,
        id_exam_req_in            IN exam_req_det.id_exam_req%TYPE DEFAULT NULL,
        id_exam_in                IN exam_req_det.id_exam%TYPE DEFAULT NULL,
        flg_status_in             IN exam_req_det.flg_status%TYPE DEFAULT NULL,
        notes_in                  IN exam_req_det.notes%TYPE DEFAULT NULL,
        flg_pre_req_in            IN exam_req_det.flg_pre_req%TYPE DEFAULT NULL,
        id_movement_in            IN exam_req_det.id_movement%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN exam_req_det.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN exam_req_det.notes_cancel%TYPE DEFAULT NULL,
        barcode_in                IN exam_req_det.barcode%TYPE DEFAULT NULL,
        id_room_in                IN exam_req_det.id_room%TYPE DEFAULT NULL,
        notes_tech_in             IN exam_req_det.notes_tech%TYPE DEFAULT NULL,
        id_pat_pregnancy_in       IN exam_req_det.id_pat_pregnancy%TYPE DEFAULT NULL,
        dt_target_tstz_in         IN exam_req_det.dt_target_tstz%TYPE DEFAULT NULL,
        dt_final_target_tstz_in   IN exam_req_det.dt_final_target_tstz%TYPE DEFAULT NULL,
        dt_final_result_tstz_in   IN exam_req_det.dt_final_result_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN exam_req_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        id_prof_performed_in      IN exam_req_det.id_prof_performed%TYPE DEFAULT NULL,
        start_time_in             IN exam_req_det.start_time%TYPE DEFAULT NULL,
        end_time_in               IN exam_req_det.end_time%TYPE DEFAULT NULL,
        flg_referral_in           IN exam_req_det.flg_referral%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN exam_req_det.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in            IN exam_req_det.create_user%TYPE DEFAULT NULL,
        create_time_in            IN exam_req_det.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN exam_req_det.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN exam_req_det.update_user%TYPE DEFAULT NULL,
        update_time_in            IN exam_req_det.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN exam_req_det.update_institution%TYPE DEFAULT NULL,
        flg_clinical_purpose_in   IN exam_req_det.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_location_in           IN exam_req_det.flg_location%TYPE DEFAULT NULL,
        id_exec_institution_in    IN exam_req_det.id_exec_institution%TYPE DEFAULT NULL,
        id_exam_codification_in   IN exam_req_det.id_exam_codification%TYPE DEFAULT NULL,
        id_task_dependency_in     IN exam_req_det.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in  IN exam_req_det.flg_req_origin_module%TYPE DEFAULT 'D',
        id_prof_performed_reg_in  IN exam_req_det.id_prof_performed_reg%TYPE DEFAULT NULL,
        dt_performed_reg_in       IN exam_req_det.dt_performed_reg%TYPE DEFAULT NULL,
        id_order_recurrence_in    IN exam_req_det.id_order_recurrence%TYPE DEFAULT NULL,
        flg_fasting_in            IN exam_req_det.flg_fasting%TYPE DEFAULT NULL,
        flg_prn_in                IN exam_req_det.flg_prn%TYPE DEFAULT NULL,
        prn_notes_in              IN exam_req_det.prn_notes%TYPE DEFAULT NULL,
        id_pat_health_plan_in     IN exam_req_det.id_pat_health_plan%TYPE DEFAULT NULL,
        id_cdr_in                 IN exam_req_det.id_cdr%TYPE DEFAULT NULL,
        prof_dep_clin_serv_in     IN exam_req_det.prof_dep_clin_serv%TYPE DEFAULT NULL,
        flg_laterality_in         IN exam_req_det.flg_laterality%TYPE DEFAULT NULL,
        clinical_purpose_notes_in IN exam_req_det.clinical_purpose_notes%TYPE DEFAULT NULL,
        id_exam_group_in          IN exam_req_det.id_exam_group%TYPE DEFAULT NULL,
        flg_priority_in           IN exam_req_det.flg_priority%TYPE DEFAULT NULL,
        notes_patient_in          IN exam_req_det.notes_patient%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN exam_req_det.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_tstz_in    IN exam_req_det.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_pat_exemption_in       IN exam_req_det.id_pat_exemption%TYPE DEFAULT NULL,
        id_epis_doc_perform_in    IN exam_req_det.id_epis_doc_perform%TYPE DEFAULT NULL,
        id_co_sign_order_in       IN exam_req_det.id_co_sign_order%TYPE DEFAULT NULL,
        id_co_sign_cancel_in      IN exam_req_det.id_co_sign_cancel%TYPE DEFAULT NULL,
        notes_scheduler_in        IN exam_req_det.notes_scheduler%TYPE DEFAULT NULL,
        id_clinical_purpose_in    IN exam_req_det.id_clinical_purpose%TYPE DEFAULT NULL,
        diagnosis_notes_in        IN exam_req_det.diagnosis_notes%TYPE DEFAULT NULL,
        handle_error_in           IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_exam_req_det_in        => id_exam_req_det_in,
            id_erd_parent_in          => id_erd_parent_in,
            id_exam_req_in            => id_exam_req_in,
            id_exam_in                => id_exam_in,
            flg_status_in             => flg_status_in,
            notes_in                  => notes_in,
            flg_pre_req_in            => flg_pre_req_in,
            id_movement_in            => id_movement_in,
            id_prof_cancel_in         => id_prof_cancel_in,
            notes_cancel_in           => notes_cancel_in,
            barcode_in                => barcode_in,
            id_room_in                => id_room_in,
            notes_tech_in             => notes_tech_in,
            id_pat_pregnancy_in       => id_pat_pregnancy_in,
            dt_target_tstz_in         => dt_target_tstz_in,
            dt_final_target_tstz_in   => dt_final_target_tstz_in,
            dt_final_result_tstz_in   => dt_final_result_tstz_in,
            dt_cancel_tstz_in         => dt_cancel_tstz_in,
            id_prof_performed_in      => id_prof_performed_in,
            start_time_in             => start_time_in,
            end_time_in               => end_time_in,
            flg_referral_in           => flg_referral_in,
            id_cancel_reason_in       => id_cancel_reason_in,
            create_user_in            => create_user_in,
            create_time_in            => create_time_in,
            create_institution_in     => create_institution_in,
            update_user_in            => update_user_in,
            update_time_in            => update_time_in,
            update_institution_in     => update_institution_in,
            flg_clinical_purpose_in   => flg_clinical_purpose_in,
            flg_location_in           => flg_location_in,
            id_exec_institution_in    => id_exec_institution_in,
            id_exam_codification_in   => id_exam_codification_in,
            id_task_dependency_in     => id_task_dependency_in,
            flg_req_origin_module_in  => flg_req_origin_module_in,
            id_prof_performed_reg_in  => id_prof_performed_reg_in,
            dt_performed_reg_in       => dt_performed_reg_in,
            id_order_recurrence_in    => id_order_recurrence_in,
            flg_fasting_in            => flg_fasting_in,
            flg_prn_in                => flg_prn_in,
            prn_notes_in              => prn_notes_in,
            id_pat_health_plan_in     => id_pat_health_plan_in,
            id_cdr_in                 => id_cdr_in,
            prof_dep_clin_serv_in     => prof_dep_clin_serv_in,
            flg_laterality_in         => flg_laterality_in,
            clinical_purpose_notes_in => clinical_purpose_notes_in,
            id_exam_group_in          => id_exam_group_in,
            flg_priority_in           => flg_priority_in,
            notes_patient_in          => notes_patient_in,
            id_prof_last_update_in    => id_prof_last_update_in,
            dt_last_update_tstz_in    => dt_last_update_tstz_in,
            id_pat_exemption_in       => id_pat_exemption_in,
            id_epis_doc_perform_in    => id_epis_doc_perform_in,
            id_co_sign_order_in       => id_co_sign_order_in,
            id_co_sign_cancel_in      => id_co_sign_cancel_in,
            notes_scheduler_in        => notes_scheduler_in,
            id_clinical_purpose_in    => id_clinical_purpose_in,
            diagnosis_notes_in        => diagnosis_notes_in,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN exam_req_det%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_rec exam_req_det%ROWTYPE := rec_in;
    BEGIN
        IF gen_pky_in
        THEN
            l_rec.id_exam_req_det := next_key(sequence_in);
        END IF;
    
        ins(id_exam_req_det_in        => l_rec.id_exam_req_det,
            id_erd_parent_in          => l_rec.id_erd_parent,
            id_exam_req_in            => l_rec.id_exam_req,
            id_exam_in                => l_rec.id_exam,
            flg_status_in             => l_rec.flg_status,
            notes_in                  => l_rec.notes,
            flg_pre_req_in            => l_rec.flg_pre_req,
            id_movement_in            => l_rec.id_movement,
            id_prof_cancel_in         => l_rec.id_prof_cancel,
            notes_cancel_in           => l_rec.notes_cancel,
            barcode_in                => l_rec.barcode,
            id_room_in                => l_rec.id_room,
            notes_tech_in             => l_rec.notes_tech,
            id_pat_pregnancy_in       => l_rec.id_pat_pregnancy,
            dt_target_tstz_in         => l_rec.dt_target_tstz,
            dt_final_target_tstz_in   => l_rec.dt_final_target_tstz,
            dt_final_result_tstz_in   => l_rec.dt_final_result_tstz,
            dt_cancel_tstz_in         => l_rec.dt_cancel_tstz,
            id_prof_performed_in      => l_rec.id_prof_performed,
            start_time_in             => l_rec.start_time,
            end_time_in               => l_rec.end_time,
            flg_referral_in           => l_rec.flg_referral,
            id_cancel_reason_in       => l_rec.id_cancel_reason,
            create_user_in            => l_rec.create_user,
            create_time_in            => l_rec.create_time,
            create_institution_in     => l_rec.create_institution,
            update_user_in            => l_rec.update_user,
            update_time_in            => l_rec.update_time,
            update_institution_in     => l_rec.update_institution,
            flg_clinical_purpose_in   => l_rec.flg_clinical_purpose,
            flg_location_in           => l_rec.flg_location,
            id_exec_institution_in    => l_rec.id_exec_institution,
            id_exam_codification_in   => l_rec.id_exam_codification,
            id_task_dependency_in     => l_rec.id_task_dependency,
            flg_req_origin_module_in  => l_rec.flg_req_origin_module,
            id_prof_performed_reg_in  => l_rec.id_prof_performed_reg,
            dt_performed_reg_in       => l_rec.dt_performed_reg,
            id_order_recurrence_in    => l_rec.id_order_recurrence,
            flg_fasting_in            => l_rec.flg_fasting,
            flg_prn_in                => l_rec.flg_prn,
            prn_notes_in              => l_rec.prn_notes,
            id_pat_health_plan_in     => l_rec.id_pat_health_plan,
            id_cdr_in                 => l_rec.id_cdr,
            prof_dep_clin_serv_in     => l_rec.prof_dep_clin_serv,
            flg_laterality_in         => l_rec.flg_laterality,
            clinical_purpose_notes_in => l_rec.clinical_purpose_notes,
            id_exam_group_in          => l_rec.id_exam_group,
            flg_priority_in           => l_rec.flg_priority,
            notes_patient_in          => l_rec.notes_patient,
            id_prof_last_update_in    => l_rec.id_prof_last_update,
            dt_last_update_tstz_in    => l_rec.dt_last_update_tstz,
            id_pat_exemption_in       => l_rec.id_pat_exemption,
            id_epis_doc_perform_in    => l_rec.id_epis_doc_perform,
            id_co_sign_order_in       => l_rec.id_co_sign_order,
            id_co_sign_cancel_in      => l_rec.id_co_sign_cancel,
            notes_scheduler_in        => l_rec.notes_scheduler,
            id_clinical_purpose_in    => l_rec.id_clinical_purpose,
            diagnosis_notes_in        => l_rec.diagnosis_notes,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN exam_req_det%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rec_in          => rec_in,
            gen_pky_in      => gen_pky_in,
            sequence_in     => sequence_in,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN exam_req_det_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        IF rows_in.count = 0
        THEN
            NULL;
        ELSE
            FORALL indx IN rows_in.first .. rows_in.last SAVE EXCEPTIONS
                INSERT INTO exam_req_det
                    (id_exam_req_det,
                     id_erd_parent,
                     id_exam_req,
                     id_exam,
                     flg_status,
                     notes,
                     flg_pre_req,
                     id_movement,
                     id_prof_cancel,
                     notes_cancel,
                     barcode,
                     id_room,
                     notes_tech,
                     id_pat_pregnancy,
                     dt_target_tstz,
                     dt_final_target_tstz,
                     dt_final_result_tstz,
                     dt_cancel_tstz,
                     id_prof_performed,
                     start_time,
                     end_time,
                     flg_referral,
                     id_cancel_reason,
                     flg_clinical_purpose,
                     flg_location,
                     id_exec_institution,
                     id_exam_codification,
                     id_task_dependency,
                     flg_req_origin_module,
                     id_prof_performed_reg,
                     dt_performed_reg,
                     id_order_recurrence,
                     flg_fasting,
                     flg_prn,
                     prn_notes,
                     id_pat_health_plan,
                     id_cdr,
                     prof_dep_clin_serv,
                     flg_laterality,
                     clinical_purpose_notes,
                     id_exam_group,
                     flg_priority,
                     notes_patient,
                     id_prof_last_update,
                     dt_last_update_tstz,
                     id_pat_exemption,
                     id_epis_doc_perform,
                     id_co_sign_order,
                     id_co_sign_cancel,
                     notes_scheduler,
                     id_clinical_purpose,
                     diagnosis_notes)
                VALUES
                    (rows_in(indx).id_exam_req_det,
                     rows_in(indx).id_erd_parent,
                     rows_in(indx).id_exam_req,
                     rows_in(indx).id_exam,
                     rows_in(indx).flg_status,
                     rows_in(indx).notes,
                     rows_in(indx).flg_pre_req,
                     rows_in(indx).id_movement,
                     rows_in(indx).id_prof_cancel,
                     rows_in(indx).notes_cancel,
                     rows_in(indx).barcode,
                     rows_in(indx).id_room,
                     rows_in(indx).notes_tech,
                     rows_in(indx).id_pat_pregnancy,
                     rows_in(indx).dt_target_tstz,
                     rows_in(indx).dt_final_target_tstz,
                     rows_in(indx).dt_final_result_tstz,
                     rows_in(indx).dt_cancel_tstz,
                     rows_in(indx).id_prof_performed,
                     rows_in(indx).start_time,
                     rows_in(indx).end_time,
                     rows_in(indx).flg_referral,
                     rows_in(indx).id_cancel_reason,
                     rows_in(indx).flg_clinical_purpose,
                     rows_in(indx).flg_location,
                     rows_in(indx).id_exec_institution,
                     rows_in(indx).id_exam_codification,
                     rows_in(indx).id_task_dependency,
                     rows_in(indx).flg_req_origin_module,
                     rows_in(indx).id_prof_performed_reg,
                     rows_in(indx).dt_performed_reg,
                     rows_in(indx).id_order_recurrence,
                     rows_in(indx).flg_fasting,
                     rows_in(indx).flg_prn,
                     rows_in(indx).prn_notes,
                     rows_in(indx).id_pat_health_plan,
                     rows_in(indx).id_cdr,
                     rows_in(indx).prof_dep_clin_serv,
                     rows_in(indx).flg_laterality,
                     rows_in(indx).clinical_purpose_notes,
                     rows_in(indx).id_exam_group,
                     rows_in(indx).flg_priority,
                     rows_in(indx).notes_patient,
                     rows_in(indx).id_prof_last_update,
                     rows_in(indx).dt_last_update_tstz,
                     rows_in(indx).id_pat_exemption,
                     rows_in(indx).id_epis_doc_perform,
                     rows_in(indx).id_co_sign_order,
                     rows_in(indx).id_co_sign_cancel,
                     rows_in(indx).notes_scheduler,
                     rows_in(indx).id_clinical_purpose,
                     rows_in(indx).diagnosis_notes)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN exam_req_det_tc,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rows_in => rows_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END ins;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_exam_req_det_in         IN exam_req_det.id_exam_req_det%TYPE,
        id_erd_parent_in           IN exam_req_det.id_erd_parent%TYPE DEFAULT NULL,
        id_erd_parent_nin          IN BOOLEAN := TRUE,
        id_exam_req_in             IN exam_req_det.id_exam_req%TYPE DEFAULT NULL,
        id_exam_req_nin            IN BOOLEAN := TRUE,
        id_exam_in                 IN exam_req_det.id_exam%TYPE DEFAULT NULL,
        id_exam_nin                IN BOOLEAN := TRUE,
        flg_status_in              IN exam_req_det.flg_status%TYPE DEFAULT NULL,
        flg_status_nin             IN BOOLEAN := TRUE,
        notes_in                   IN exam_req_det.notes%TYPE DEFAULT NULL,
        notes_nin                  IN BOOLEAN := TRUE,
        flg_pre_req_in             IN exam_req_det.flg_pre_req%TYPE DEFAULT NULL,
        flg_pre_req_nin            IN BOOLEAN := TRUE,
        id_movement_in             IN exam_req_det.id_movement%TYPE DEFAULT NULL,
        id_movement_nin            IN BOOLEAN := TRUE,
        id_prof_cancel_in          IN exam_req_det.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin         IN BOOLEAN := TRUE,
        notes_cancel_in            IN exam_req_det.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin           IN BOOLEAN := TRUE,
        barcode_in                 IN exam_req_det.barcode%TYPE DEFAULT NULL,
        barcode_nin                IN BOOLEAN := TRUE,
        id_room_in                 IN exam_req_det.id_room%TYPE DEFAULT NULL,
        id_room_nin                IN BOOLEAN := TRUE,
        notes_tech_in              IN exam_req_det.notes_tech%TYPE DEFAULT NULL,
        notes_tech_nin             IN BOOLEAN := TRUE,
        id_pat_pregnancy_in        IN exam_req_det.id_pat_pregnancy%TYPE DEFAULT NULL,
        id_pat_pregnancy_nin       IN BOOLEAN := TRUE,
        dt_target_tstz_in          IN exam_req_det.dt_target_tstz%TYPE DEFAULT NULL,
        dt_target_tstz_nin         IN BOOLEAN := TRUE,
        dt_final_target_tstz_in    IN exam_req_det.dt_final_target_tstz%TYPE DEFAULT NULL,
        dt_final_target_tstz_nin   IN BOOLEAN := TRUE,
        dt_final_result_tstz_in    IN exam_req_det.dt_final_result_tstz%TYPE DEFAULT NULL,
        dt_final_result_tstz_nin   IN BOOLEAN := TRUE,
        dt_cancel_tstz_in          IN exam_req_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin         IN BOOLEAN := TRUE,
        id_prof_performed_in       IN exam_req_det.id_prof_performed%TYPE DEFAULT NULL,
        id_prof_performed_nin      IN BOOLEAN := TRUE,
        start_time_in              IN exam_req_det.start_time%TYPE DEFAULT NULL,
        start_time_nin             IN BOOLEAN := TRUE,
        end_time_in                IN exam_req_det.end_time%TYPE DEFAULT NULL,
        end_time_nin               IN BOOLEAN := TRUE,
        flg_referral_in            IN exam_req_det.flg_referral%TYPE DEFAULT NULL,
        flg_referral_nin           IN BOOLEAN := TRUE,
        id_cancel_reason_in        IN exam_req_det.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin       IN BOOLEAN := TRUE,
        create_user_in             IN exam_req_det.create_user%TYPE DEFAULT NULL,
        create_user_nin            IN BOOLEAN := TRUE,
        create_time_in             IN exam_req_det.create_time%TYPE DEFAULT NULL,
        create_time_nin            IN BOOLEAN := TRUE,
        create_institution_in      IN exam_req_det.create_institution%TYPE DEFAULT NULL,
        create_institution_nin     IN BOOLEAN := TRUE,
        update_user_in             IN exam_req_det.update_user%TYPE DEFAULT NULL,
        update_user_nin            IN BOOLEAN := TRUE,
        update_time_in             IN exam_req_det.update_time%TYPE DEFAULT NULL,
        update_time_nin            IN BOOLEAN := TRUE,
        update_institution_in      IN exam_req_det.update_institution%TYPE DEFAULT NULL,
        update_institution_nin     IN BOOLEAN := TRUE,
        flg_clinical_purpose_in    IN exam_req_det.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_clinical_purpose_nin   IN BOOLEAN := TRUE,
        flg_location_in            IN exam_req_det.flg_location%TYPE DEFAULT NULL,
        flg_location_nin           IN BOOLEAN := TRUE,
        id_exec_institution_in     IN exam_req_det.id_exec_institution%TYPE DEFAULT NULL,
        id_exec_institution_nin    IN BOOLEAN := TRUE,
        id_exam_codification_in    IN exam_req_det.id_exam_codification%TYPE DEFAULT NULL,
        id_exam_codification_nin   IN BOOLEAN := TRUE,
        id_task_dependency_in      IN exam_req_det.id_task_dependency%TYPE DEFAULT NULL,
        id_task_dependency_nin     IN BOOLEAN := TRUE,
        flg_req_origin_module_in   IN exam_req_det.flg_req_origin_module%TYPE DEFAULT NULL,
        flg_req_origin_module_nin  IN BOOLEAN := TRUE,
        id_prof_performed_reg_in   IN exam_req_det.id_prof_performed_reg%TYPE DEFAULT NULL,
        id_prof_performed_reg_nin  IN BOOLEAN := TRUE,
        dt_performed_reg_in        IN exam_req_det.dt_performed_reg%TYPE DEFAULT NULL,
        dt_performed_reg_nin       IN BOOLEAN := TRUE,
        id_order_recurrence_in     IN exam_req_det.id_order_recurrence%TYPE DEFAULT NULL,
        id_order_recurrence_nin    IN BOOLEAN := TRUE,
        flg_fasting_in             IN exam_req_det.flg_fasting%TYPE DEFAULT NULL,
        flg_fasting_nin            IN BOOLEAN := TRUE,
        flg_prn_in                 IN exam_req_det.flg_prn%TYPE DEFAULT NULL,
        flg_prn_nin                IN BOOLEAN := TRUE,
        prn_notes_in               IN exam_req_det.prn_notes%TYPE DEFAULT NULL,
        prn_notes_nin              IN BOOLEAN := TRUE,
        id_pat_health_plan_in      IN exam_req_det.id_pat_health_plan%TYPE DEFAULT NULL,
        id_pat_health_plan_nin     IN BOOLEAN := TRUE,
        id_cdr_in                  IN exam_req_det.id_cdr%TYPE DEFAULT NULL,
        id_cdr_nin                 IN BOOLEAN := TRUE,
        prof_dep_clin_serv_in      IN exam_req_det.prof_dep_clin_serv%TYPE DEFAULT NULL,
        prof_dep_clin_serv_nin     IN BOOLEAN := TRUE,
        flg_laterality_in          IN exam_req_det.flg_laterality%TYPE DEFAULT NULL,
        flg_laterality_nin         IN BOOLEAN := TRUE,
        clinical_purpose_notes_in  IN exam_req_det.clinical_purpose_notes%TYPE DEFAULT NULL,
        clinical_purpose_notes_nin IN BOOLEAN := TRUE,
        id_exam_group_in           IN exam_req_det.id_exam_group%TYPE DEFAULT NULL,
        id_exam_group_nin          IN BOOLEAN := TRUE,
        flg_priority_in            IN exam_req_det.flg_priority%TYPE DEFAULT NULL,
        flg_priority_nin           IN BOOLEAN := TRUE,
        notes_patient_in           IN exam_req_det.notes_patient%TYPE DEFAULT NULL,
        notes_patient_nin          IN BOOLEAN := TRUE,
        id_prof_last_update_in     IN exam_req_det.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin    IN BOOLEAN := TRUE,
        dt_last_update_tstz_in     IN exam_req_det.dt_last_update_tstz%TYPE DEFAULT NULL,
        dt_last_update_tstz_nin    IN BOOLEAN := TRUE,
        id_pat_exemption_in        IN exam_req_det.id_pat_exemption%TYPE DEFAULT NULL,
        id_pat_exemption_nin       IN BOOLEAN := TRUE,
        id_epis_doc_perform_in     IN exam_req_det.id_epis_doc_perform%TYPE DEFAULT NULL,
        id_epis_doc_perform_nin    IN BOOLEAN := TRUE,
        id_co_sign_order_in        IN exam_req_det.id_co_sign_order%TYPE DEFAULT NULL,
        id_co_sign_order_nin       IN BOOLEAN := TRUE,
        id_co_sign_cancel_in       IN exam_req_det.id_co_sign_cancel%TYPE DEFAULT NULL,
        id_co_sign_cancel_nin      IN BOOLEAN := TRUE,
        notes_scheduler_in         IN exam_req_det.notes_scheduler%TYPE DEFAULT NULL,
        notes_scheduler_nin        IN BOOLEAN := TRUE,
        id_clinical_purpose_in     IN exam_req_det.id_clinical_purpose%TYPE DEFAULT NULL,
        id_clinical_purpose_nin    IN BOOLEAN := TRUE,
        diagnosis_notes_in         IN exam_req_det.diagnosis_notes%TYPE DEFAULT NULL,
        diagnosis_notes_nin        IN BOOLEAN := TRUE,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   IN OUT table_varchar
    ) IS
        l_rows_out                 table_varchar;
        l_id_erd_parent_n          NUMBER(1) := sys.diutil.bool_to_int(id_erd_parent_nin);
        l_id_exam_req_n            NUMBER(1) := sys.diutil.bool_to_int(id_exam_req_nin);
        l_id_exam_n                NUMBER(1) := sys.diutil.bool_to_int(id_exam_nin);
        l_flg_status_n             NUMBER(1) := sys.diutil.bool_to_int(flg_status_nin);
        l_notes_n                  NUMBER(1) := sys.diutil.bool_to_int(notes_nin);
        l_flg_pre_req_n            NUMBER(1) := sys.diutil.bool_to_int(flg_pre_req_nin);
        l_id_movement_n            NUMBER(1) := sys.diutil.bool_to_int(id_movement_nin);
        l_id_prof_cancel_n         NUMBER(1) := sys.diutil.bool_to_int(id_prof_cancel_nin);
        l_notes_cancel_n           NUMBER(1) := sys.diutil.bool_to_int(notes_cancel_nin);
        l_barcode_n                NUMBER(1) := sys.diutil.bool_to_int(barcode_nin);
        l_id_room_n                NUMBER(1) := sys.diutil.bool_to_int(id_room_nin);
        l_notes_tech_n             NUMBER(1) := sys.diutil.bool_to_int(notes_tech_nin);
        l_id_pat_pregnancy_n       NUMBER(1) := sys.diutil.bool_to_int(id_pat_pregnancy_nin);
        l_dt_target_tstz_n         NUMBER(1) := sys.diutil.bool_to_int(dt_target_tstz_nin);
        l_dt_final_target_tstz_n   NUMBER(1) := sys.diutil.bool_to_int(dt_final_target_tstz_nin);
        l_dt_final_result_tstz_n   NUMBER(1) := sys.diutil.bool_to_int(dt_final_result_tstz_nin);
        l_dt_cancel_tstz_n         NUMBER(1) := sys.diutil.bool_to_int(dt_cancel_tstz_nin);
        l_id_prof_performed_n      NUMBER(1) := sys.diutil.bool_to_int(id_prof_performed_nin);
        l_start_time_n             NUMBER(1) := sys.diutil.bool_to_int(start_time_nin);
        l_end_time_n               NUMBER(1) := sys.diutil.bool_to_int(end_time_nin);
        l_flg_referral_n           NUMBER(1) := sys.diutil.bool_to_int(flg_referral_nin);
        l_id_cancel_reason_n       NUMBER(1) := sys.diutil.bool_to_int(id_cancel_reason_nin);
        l_create_user_n            NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n            NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n     NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n            NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n            NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n     NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_flg_clinical_purpose_n   NUMBER(1) := sys.diutil.bool_to_int(flg_clinical_purpose_nin);
        l_flg_location_n           NUMBER(1) := sys.diutil.bool_to_int(flg_location_nin);
        l_id_exec_institution_n    NUMBER(1) := sys.diutil.bool_to_int(id_exec_institution_nin);
        l_id_exam_codification_n   NUMBER(1) := sys.diutil.bool_to_int(id_exam_codification_nin);
        l_id_task_dependency_n     NUMBER(1) := sys.diutil.bool_to_int(id_task_dependency_nin);
        l_flg_req_origin_module_n  NUMBER(1) := sys.diutil.bool_to_int(flg_req_origin_module_nin);
        l_id_prof_performed_reg_n  NUMBER(1) := sys.diutil.bool_to_int(id_prof_performed_reg_nin);
        l_dt_performed_reg_n       NUMBER(1) := sys.diutil.bool_to_int(dt_performed_reg_nin);
        l_id_order_recurrence_n    NUMBER(1) := sys.diutil.bool_to_int(id_order_recurrence_nin);
        l_flg_fasting_n            NUMBER(1) := sys.diutil.bool_to_int(flg_fasting_nin);
        l_flg_prn_n                NUMBER(1) := sys.diutil.bool_to_int(flg_prn_nin);
        l_prn_notes_n              NUMBER(1) := sys.diutil.bool_to_int(prn_notes_nin);
        l_id_pat_health_plan_n     NUMBER(1) := sys.diutil.bool_to_int(id_pat_health_plan_nin);
        l_id_cdr_n                 NUMBER(1) := sys.diutil.bool_to_int(id_cdr_nin);
        l_prof_dep_clin_serv_n     NUMBER(1) := sys.diutil.bool_to_int(prof_dep_clin_serv_nin);
        l_flg_laterality_n         NUMBER(1) := sys.diutil.bool_to_int(flg_laterality_nin);
        l_clinical_purpose_notes_n NUMBER(1) := sys.diutil.bool_to_int(clinical_purpose_notes_nin);
        l_id_exam_group_n          NUMBER(1) := sys.diutil.bool_to_int(id_exam_group_nin);
        l_flg_priority_n           NUMBER(1) := sys.diutil.bool_to_int(flg_priority_nin);
        l_notes_patient_n          NUMBER(1) := sys.diutil.bool_to_int(notes_patient_nin);
        l_id_prof_last_update_n    NUMBER(1) := sys.diutil.bool_to_int(id_prof_last_update_nin);
        l_dt_last_update_tstz_n    NUMBER(1) := sys.diutil.bool_to_int(dt_last_update_tstz_nin);
        l_id_pat_exemption_n       NUMBER(1) := sys.diutil.bool_to_int(id_pat_exemption_nin);
        l_id_epis_doc_perform_n    NUMBER(1) := sys.diutil.bool_to_int(id_epis_doc_perform_nin);
        l_id_co_sign_order_n       NUMBER(1) := sys.diutil.bool_to_int(id_co_sign_order_nin);
        l_id_co_sign_cancel_n      NUMBER(1) := sys.diutil.bool_to_int(id_co_sign_cancel_nin);
        l_notes_scheduler_n        NUMBER(1) := sys.diutil.bool_to_int(notes_scheduler_nin);
        l_id_clinical_purpose_n    NUMBER(1) := sys.diutil.bool_to_int(id_clinical_purpose_nin);
        l_diagnosis_notes_n        NUMBER(1) := sys.diutil.bool_to_int(diagnosis_notes_nin);
    BEGIN
    
        UPDATE exam_req_det
           SET id_erd_parent          = decode(l_id_erd_parent_n,
                                               0,
                                               id_erd_parent_in,
                                               nvl(id_erd_parent_in, id_erd_parent)),
               id_exam_req            = decode(l_id_exam_req_n, 0, id_exam_req_in, nvl(id_exam_req_in, id_exam_req)),
               id_exam                = decode(l_id_exam_n, 0, id_exam_in, nvl(id_exam_in, id_exam)),
               flg_status             = decode(l_flg_status_n, 0, flg_status_in, nvl(flg_status_in, flg_status)),
               notes                  = decode(l_notes_n, 0, notes_in, nvl(notes_in, notes)),
               flg_pre_req            = decode(l_flg_pre_req_n, 0, flg_pre_req_in, nvl(flg_pre_req_in, flg_pre_req)),
               id_movement            = decode(l_id_movement_n, 0, id_movement_in, nvl(id_movement_in, id_movement)),
               id_prof_cancel         = decode(l_id_prof_cancel_n,
                                               0,
                                               id_prof_cancel_in,
                                               nvl(id_prof_cancel_in, id_prof_cancel)),
               notes_cancel           = decode(l_notes_cancel_n, 0, notes_cancel_in, nvl(notes_cancel_in, notes_cancel)),
               barcode                = decode(l_barcode_n, 0, barcode_in, nvl(barcode_in, barcode)),
               id_room                = decode(l_id_room_n, 0, id_room_in, nvl(id_room_in, id_room)),
               notes_tech             = decode(l_notes_tech_n, 0, notes_tech_in, nvl(notes_tech_in, notes_tech)),
               id_pat_pregnancy       = decode(l_id_pat_pregnancy_n,
                                               0,
                                               id_pat_pregnancy_in,
                                               nvl(id_pat_pregnancy_in, id_pat_pregnancy)),
               dt_target_tstz         = decode(l_dt_target_tstz_n,
                                               0,
                                               dt_target_tstz_in,
                                               nvl(dt_target_tstz_in, dt_target_tstz)),
               dt_final_target_tstz   = decode(l_dt_final_target_tstz_n,
                                               0,
                                               dt_final_target_tstz_in,
                                               nvl(dt_final_target_tstz_in, dt_final_target_tstz)),
               dt_final_result_tstz   = decode(l_dt_final_result_tstz_n,
                                               0,
                                               dt_final_result_tstz_in,
                                               nvl(dt_final_result_tstz_in, dt_final_result_tstz)),
               dt_cancel_tstz         = decode(l_dt_cancel_tstz_n,
                                               0,
                                               dt_cancel_tstz_in,
                                               nvl(dt_cancel_tstz_in, dt_cancel_tstz)),
               id_prof_performed      = decode(l_id_prof_performed_n,
                                               0,
                                               id_prof_performed_in,
                                               nvl(id_prof_performed_in, id_prof_performed)),
               start_time             = decode(l_start_time_n, 0, start_time_in, nvl(start_time_in, start_time)),
               end_time               = decode(l_end_time_n, 0, end_time_in, nvl(end_time_in, end_time)),
               flg_referral           = decode(l_flg_referral_n, 0, flg_referral_in, nvl(flg_referral_in, flg_referral)),
               id_cancel_reason       = decode(l_id_cancel_reason_n,
                                               0,
                                               id_cancel_reason_in,
                                               nvl(id_cancel_reason_in, id_cancel_reason)),
               create_user            = decode(l_create_user_n, 0, create_user_in, nvl(create_user_in, create_user)),
               create_time            = decode(l_create_time_n, 0, create_time_in, nvl(create_time_in, create_time)),
               create_institution     = decode(l_create_institution_n,
                                               0,
                                               create_institution_in,
                                               nvl(create_institution_in, create_institution)),
               update_user            = decode(l_update_user_n, 0, update_user_in, nvl(update_user_in, update_user)),
               update_time            = decode(l_update_time_n, 0, update_time_in, nvl(update_time_in, update_time)),
               update_institution     = decode(l_update_institution_n,
                                               0,
                                               update_institution_in,
                                               nvl(update_institution_in, update_institution)),
               flg_clinical_purpose   = decode(l_flg_clinical_purpose_n,
                                               0,
                                               flg_clinical_purpose_in,
                                               nvl(flg_clinical_purpose_in, flg_clinical_purpose)),
               flg_location           = decode(l_flg_location_n, 0, flg_location_in, nvl(flg_location_in, flg_location)),
               id_exec_institution    = decode(l_id_exec_institution_n,
                                               0,
                                               id_exec_institution_in,
                                               nvl(id_exec_institution_in, id_exec_institution)),
               id_exam_codification   = decode(l_id_exam_codification_n,
                                               0,
                                               id_exam_codification_in,
                                               nvl(id_exam_codification_in, id_exam_codification)),
               id_task_dependency     = decode(l_id_task_dependency_n,
                                               0,
                                               id_task_dependency_in,
                                               nvl(id_task_dependency_in, id_task_dependency)),
               flg_req_origin_module  = decode(l_flg_req_origin_module_n,
                                               0,
                                               flg_req_origin_module_in,
                                               nvl(flg_req_origin_module_in, flg_req_origin_module)),
               id_prof_performed_reg  = decode(l_id_prof_performed_reg_n,
                                               0,
                                               id_prof_performed_reg_in,
                                               nvl(id_prof_performed_reg_in, id_prof_performed_reg)),
               dt_performed_reg       = decode(l_dt_performed_reg_n,
                                               0,
                                               dt_performed_reg_in,
                                               nvl(dt_performed_reg_in, dt_performed_reg)),
               id_order_recurrence    = decode(l_id_order_recurrence_n,
                                               0,
                                               id_order_recurrence_in,
                                               nvl(id_order_recurrence_in, id_order_recurrence)),
               flg_fasting            = decode(l_flg_fasting_n, 0, flg_fasting_in, nvl(flg_fasting_in, flg_fasting)),
               flg_prn                = decode(l_flg_prn_n, 0, flg_prn_in, nvl(flg_prn_in, flg_prn)),
               prn_notes              = decode(l_prn_notes_n, 0, prn_notes_in, nvl(prn_notes_in, prn_notes)),
               id_pat_health_plan     = decode(l_id_pat_health_plan_n,
                                               0,
                                               id_pat_health_plan_in,
                                               nvl(id_pat_health_plan_in, id_pat_health_plan)),
               id_cdr                 = decode(l_id_cdr_n, 0, id_cdr_in, nvl(id_cdr_in, id_cdr)),
               prof_dep_clin_serv     = decode(l_prof_dep_clin_serv_n,
                                               0,
                                               prof_dep_clin_serv_in,
                                               nvl(prof_dep_clin_serv_in, prof_dep_clin_serv)),
               flg_laterality         = decode(l_flg_laterality_n,
                                               0,
                                               flg_laterality_in,
                                               nvl(flg_laterality_in, flg_laterality)),
               clinical_purpose_notes = decode(l_clinical_purpose_notes_n,
                                               0,
                                               clinical_purpose_notes_in,
                                               nvl(clinical_purpose_notes_in, clinical_purpose_notes)),
               id_exam_group          = decode(l_id_exam_group_n,
                                               0,
                                               id_exam_group_in,
                                               nvl(id_exam_group_in, id_exam_group)),
               flg_priority           = decode(l_flg_priority_n, 0, flg_priority_in, nvl(flg_priority_in, flg_priority)),
               notes_patient          = decode(l_notes_patient_n,
                                               0,
                                               notes_patient_in,
                                               nvl(notes_patient_in, notes_patient)),
               id_prof_last_update    = decode(l_id_prof_last_update_n,
                                               0,
                                               id_prof_last_update_in,
                                               nvl(id_prof_last_update_in, id_prof_last_update)),
               dt_last_update_tstz    = decode(l_dt_last_update_tstz_n,
                                               0,
                                               dt_last_update_tstz_in,
                                               nvl(dt_last_update_tstz_in, dt_last_update_tstz)),
               id_pat_exemption       = decode(l_id_pat_exemption_n,
                                               0,
                                               id_pat_exemption_in,
                                               nvl(id_pat_exemption_in, id_pat_exemption)),
               id_epis_doc_perform    = decode(l_id_epis_doc_perform_n,
                                               0,
                                               id_epis_doc_perform_in,
                                               nvl(id_epis_doc_perform_in, id_epis_doc_perform)),
               id_co_sign_order       = decode(l_id_co_sign_order_n,
                                               0,
                                               id_co_sign_order_in,
                                               nvl(id_co_sign_order_in, id_co_sign_order)),
               id_co_sign_cancel      = decode(l_id_co_sign_cancel_n,
                                               0,
                                               id_co_sign_cancel_in,
                                               nvl(id_co_sign_cancel_in, id_co_sign_cancel)),
               notes_scheduler        = decode(l_notes_scheduler_n,
                                               0,
                                               notes_scheduler_in,
                                               nvl(notes_scheduler_in, notes_scheduler)),
               id_clinical_purpose    = decode(l_id_clinical_purpose_n,
                                               0,
                                               id_clinical_purpose_in,
                                               nvl(id_clinical_purpose_in, id_clinical_purpose)),
               diagnosis_notes        = decode(l_diagnosis_notes_n,
                                               0,
                                               diagnosis_notes_in,
                                               nvl(diagnosis_notes_in, diagnosis_notes))
         WHERE id_exam_req_det = id_exam_req_det_in
        RETURNING ROWID BULK COLLECT INTO l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_exam_req_det_in         IN exam_req_det.id_exam_req_det%TYPE,
        id_erd_parent_in           IN exam_req_det.id_erd_parent%TYPE DEFAULT NULL,
        id_erd_parent_nin          IN BOOLEAN := TRUE,
        id_exam_req_in             IN exam_req_det.id_exam_req%TYPE DEFAULT NULL,
        id_exam_req_nin            IN BOOLEAN := TRUE,
        id_exam_in                 IN exam_req_det.id_exam%TYPE DEFAULT NULL,
        id_exam_nin                IN BOOLEAN := TRUE,
        flg_status_in              IN exam_req_det.flg_status%TYPE DEFAULT NULL,
        flg_status_nin             IN BOOLEAN := TRUE,
        notes_in                   IN exam_req_det.notes%TYPE DEFAULT NULL,
        notes_nin                  IN BOOLEAN := TRUE,
        flg_pre_req_in             IN exam_req_det.flg_pre_req%TYPE DEFAULT NULL,
        flg_pre_req_nin            IN BOOLEAN := TRUE,
        id_movement_in             IN exam_req_det.id_movement%TYPE DEFAULT NULL,
        id_movement_nin            IN BOOLEAN := TRUE,
        id_prof_cancel_in          IN exam_req_det.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin         IN BOOLEAN := TRUE,
        notes_cancel_in            IN exam_req_det.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin           IN BOOLEAN := TRUE,
        barcode_in                 IN exam_req_det.barcode%TYPE DEFAULT NULL,
        barcode_nin                IN BOOLEAN := TRUE,
        id_room_in                 IN exam_req_det.id_room%TYPE DEFAULT NULL,
        id_room_nin                IN BOOLEAN := TRUE,
        notes_tech_in              IN exam_req_det.notes_tech%TYPE DEFAULT NULL,
        notes_tech_nin             IN BOOLEAN := TRUE,
        id_pat_pregnancy_in        IN exam_req_det.id_pat_pregnancy%TYPE DEFAULT NULL,
        id_pat_pregnancy_nin       IN BOOLEAN := TRUE,
        dt_target_tstz_in          IN exam_req_det.dt_target_tstz%TYPE DEFAULT NULL,
        dt_target_tstz_nin         IN BOOLEAN := TRUE,
        dt_final_target_tstz_in    IN exam_req_det.dt_final_target_tstz%TYPE DEFAULT NULL,
        dt_final_target_tstz_nin   IN BOOLEAN := TRUE,
        dt_final_result_tstz_in    IN exam_req_det.dt_final_result_tstz%TYPE DEFAULT NULL,
        dt_final_result_tstz_nin   IN BOOLEAN := TRUE,
        dt_cancel_tstz_in          IN exam_req_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin         IN BOOLEAN := TRUE,
        id_prof_performed_in       IN exam_req_det.id_prof_performed%TYPE DEFAULT NULL,
        id_prof_performed_nin      IN BOOLEAN := TRUE,
        start_time_in              IN exam_req_det.start_time%TYPE DEFAULT NULL,
        start_time_nin             IN BOOLEAN := TRUE,
        end_time_in                IN exam_req_det.end_time%TYPE DEFAULT NULL,
        end_time_nin               IN BOOLEAN := TRUE,
        flg_referral_in            IN exam_req_det.flg_referral%TYPE DEFAULT NULL,
        flg_referral_nin           IN BOOLEAN := TRUE,
        id_cancel_reason_in        IN exam_req_det.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin       IN BOOLEAN := TRUE,
        create_user_in             IN exam_req_det.create_user%TYPE DEFAULT NULL,
        create_user_nin            IN BOOLEAN := TRUE,
        create_time_in             IN exam_req_det.create_time%TYPE DEFAULT NULL,
        create_time_nin            IN BOOLEAN := TRUE,
        create_institution_in      IN exam_req_det.create_institution%TYPE DEFAULT NULL,
        create_institution_nin     IN BOOLEAN := TRUE,
        update_user_in             IN exam_req_det.update_user%TYPE DEFAULT NULL,
        update_user_nin            IN BOOLEAN := TRUE,
        update_time_in             IN exam_req_det.update_time%TYPE DEFAULT NULL,
        update_time_nin            IN BOOLEAN := TRUE,
        update_institution_in      IN exam_req_det.update_institution%TYPE DEFAULT NULL,
        update_institution_nin     IN BOOLEAN := TRUE,
        flg_clinical_purpose_in    IN exam_req_det.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_clinical_purpose_nin   IN BOOLEAN := TRUE,
        flg_location_in            IN exam_req_det.flg_location%TYPE DEFAULT NULL,
        flg_location_nin           IN BOOLEAN := TRUE,
        id_exec_institution_in     IN exam_req_det.id_exec_institution%TYPE DEFAULT NULL,
        id_exec_institution_nin    IN BOOLEAN := TRUE,
        id_exam_codification_in    IN exam_req_det.id_exam_codification%TYPE DEFAULT NULL,
        id_exam_codification_nin   IN BOOLEAN := TRUE,
        id_task_dependency_in      IN exam_req_det.id_task_dependency%TYPE DEFAULT NULL,
        id_task_dependency_nin     IN BOOLEAN := TRUE,
        flg_req_origin_module_in   IN exam_req_det.flg_req_origin_module%TYPE DEFAULT NULL,
        flg_req_origin_module_nin  IN BOOLEAN := TRUE,
        id_prof_performed_reg_in   IN exam_req_det.id_prof_performed_reg%TYPE DEFAULT NULL,
        id_prof_performed_reg_nin  IN BOOLEAN := TRUE,
        dt_performed_reg_in        IN exam_req_det.dt_performed_reg%TYPE DEFAULT NULL,
        dt_performed_reg_nin       IN BOOLEAN := TRUE,
        id_order_recurrence_in     IN exam_req_det.id_order_recurrence%TYPE DEFAULT NULL,
        id_order_recurrence_nin    IN BOOLEAN := TRUE,
        flg_fasting_in             IN exam_req_det.flg_fasting%TYPE DEFAULT NULL,
        flg_fasting_nin            IN BOOLEAN := TRUE,
        flg_prn_in                 IN exam_req_det.flg_prn%TYPE DEFAULT NULL,
        flg_prn_nin                IN BOOLEAN := TRUE,
        prn_notes_in               IN exam_req_det.prn_notes%TYPE DEFAULT NULL,
        prn_notes_nin              IN BOOLEAN := TRUE,
        id_pat_health_plan_in      IN exam_req_det.id_pat_health_plan%TYPE DEFAULT NULL,
        id_pat_health_plan_nin     IN BOOLEAN := TRUE,
        id_cdr_in                  IN exam_req_det.id_cdr%TYPE DEFAULT NULL,
        id_cdr_nin                 IN BOOLEAN := TRUE,
        prof_dep_clin_serv_in      IN exam_req_det.prof_dep_clin_serv%TYPE DEFAULT NULL,
        prof_dep_clin_serv_nin     IN BOOLEAN := TRUE,
        flg_laterality_in          IN exam_req_det.flg_laterality%TYPE DEFAULT NULL,
        flg_laterality_nin         IN BOOLEAN := TRUE,
        clinical_purpose_notes_in  IN exam_req_det.clinical_purpose_notes%TYPE DEFAULT NULL,
        clinical_purpose_notes_nin IN BOOLEAN := TRUE,
        id_exam_group_in           IN exam_req_det.id_exam_group%TYPE DEFAULT NULL,
        id_exam_group_nin          IN BOOLEAN := TRUE,
        flg_priority_in            IN exam_req_det.flg_priority%TYPE DEFAULT NULL,
        flg_priority_nin           IN BOOLEAN := TRUE,
        notes_patient_in           IN exam_req_det.notes_patient%TYPE DEFAULT NULL,
        notes_patient_nin          IN BOOLEAN := TRUE,
        id_prof_last_update_in     IN exam_req_det.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin    IN BOOLEAN := TRUE,
        dt_last_update_tstz_in     IN exam_req_det.dt_last_update_tstz%TYPE DEFAULT NULL,
        dt_last_update_tstz_nin    IN BOOLEAN := TRUE,
        id_pat_exemption_in        IN exam_req_det.id_pat_exemption%TYPE DEFAULT NULL,
        id_pat_exemption_nin       IN BOOLEAN := TRUE,
        id_epis_doc_perform_in     IN exam_req_det.id_epis_doc_perform%TYPE DEFAULT NULL,
        id_epis_doc_perform_nin    IN BOOLEAN := TRUE,
        id_co_sign_order_in        IN exam_req_det.id_co_sign_order%TYPE DEFAULT NULL,
        id_co_sign_order_nin       IN BOOLEAN := TRUE,
        id_co_sign_cancel_in       IN exam_req_det.id_co_sign_cancel%TYPE DEFAULT NULL,
        id_co_sign_cancel_nin      IN BOOLEAN := TRUE,
        notes_scheduler_in         IN exam_req_det.notes_scheduler%TYPE DEFAULT NULL,
        notes_scheduler_nin        IN BOOLEAN := TRUE,
        id_clinical_purpose_in     IN exam_req_det.id_clinical_purpose%TYPE DEFAULT NULL,
        id_clinical_purpose_nin    IN BOOLEAN := TRUE,
        diagnosis_notes_in         IN exam_req_det.diagnosis_notes%TYPE DEFAULT NULL,
        diagnosis_notes_nin        IN BOOLEAN := TRUE,
        handle_error_in            IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_exam_req_det_in         => id_exam_req_det_in,
            id_erd_parent_in           => id_erd_parent_in,
            id_erd_parent_nin          => id_erd_parent_nin,
            id_exam_req_in             => id_exam_req_in,
            id_exam_req_nin            => id_exam_req_nin,
            id_exam_in                 => id_exam_in,
            id_exam_nin                => id_exam_nin,
            flg_status_in              => flg_status_in,
            flg_status_nin             => flg_status_nin,
            notes_in                   => notes_in,
            notes_nin                  => notes_nin,
            flg_pre_req_in             => flg_pre_req_in,
            flg_pre_req_nin            => flg_pre_req_nin,
            id_movement_in             => id_movement_in,
            id_movement_nin            => id_movement_nin,
            id_prof_cancel_in          => id_prof_cancel_in,
            id_prof_cancel_nin         => id_prof_cancel_nin,
            notes_cancel_in            => notes_cancel_in,
            notes_cancel_nin           => notes_cancel_nin,
            barcode_in                 => barcode_in,
            barcode_nin                => barcode_nin,
            id_room_in                 => id_room_in,
            id_room_nin                => id_room_nin,
            notes_tech_in              => notes_tech_in,
            notes_tech_nin             => notes_tech_nin,
            id_pat_pregnancy_in        => id_pat_pregnancy_in,
            id_pat_pregnancy_nin       => id_pat_pregnancy_nin,
            dt_target_tstz_in          => dt_target_tstz_in,
            dt_target_tstz_nin         => dt_target_tstz_nin,
            dt_final_target_tstz_in    => dt_final_target_tstz_in,
            dt_final_target_tstz_nin   => dt_final_target_tstz_nin,
            dt_final_result_tstz_in    => dt_final_result_tstz_in,
            dt_final_result_tstz_nin   => dt_final_result_tstz_nin,
            dt_cancel_tstz_in          => dt_cancel_tstz_in,
            dt_cancel_tstz_nin         => dt_cancel_tstz_nin,
            id_prof_performed_in       => id_prof_performed_in,
            id_prof_performed_nin      => id_prof_performed_nin,
            start_time_in              => start_time_in,
            start_time_nin             => start_time_nin,
            end_time_in                => end_time_in,
            end_time_nin               => end_time_nin,
            flg_referral_in            => flg_referral_in,
            flg_referral_nin           => flg_referral_nin,
            id_cancel_reason_in        => id_cancel_reason_in,
            id_cancel_reason_nin       => id_cancel_reason_nin,
            create_user_in             => create_user_in,
            create_user_nin            => create_user_nin,
            create_time_in             => create_time_in,
            create_time_nin            => create_time_nin,
            create_institution_in      => create_institution_in,
            create_institution_nin     => create_institution_nin,
            update_user_in             => update_user_in,
            update_user_nin            => update_user_nin,
            update_time_in             => update_time_in,
            update_time_nin            => update_time_nin,
            update_institution_in      => update_institution_in,
            update_institution_nin     => update_institution_nin,
            flg_clinical_purpose_in    => flg_clinical_purpose_in,
            flg_clinical_purpose_nin   => flg_clinical_purpose_nin,
            flg_location_in            => flg_location_in,
            flg_location_nin           => flg_location_nin,
            id_exec_institution_in     => id_exec_institution_in,
            id_exec_institution_nin    => id_exec_institution_nin,
            id_exam_codification_in    => id_exam_codification_in,
            id_exam_codification_nin   => id_exam_codification_nin,
            id_task_dependency_in      => id_task_dependency_in,
            id_task_dependency_nin     => id_task_dependency_nin,
            flg_req_origin_module_in   => flg_req_origin_module_in,
            flg_req_origin_module_nin  => flg_req_origin_module_nin,
            id_prof_performed_reg_in   => id_prof_performed_reg_in,
            id_prof_performed_reg_nin  => id_prof_performed_reg_nin,
            dt_performed_reg_in        => dt_performed_reg_in,
            dt_performed_reg_nin       => dt_performed_reg_nin,
            id_order_recurrence_in     => id_order_recurrence_in,
            id_order_recurrence_nin    => id_order_recurrence_nin,
            flg_fasting_in             => flg_fasting_in,
            flg_fasting_nin            => flg_fasting_nin,
            flg_prn_in                 => flg_prn_in,
            flg_prn_nin                => flg_prn_nin,
            prn_notes_in               => prn_notes_in,
            prn_notes_nin              => prn_notes_nin,
            id_pat_health_plan_in      => id_pat_health_plan_in,
            id_pat_health_plan_nin     => id_pat_health_plan_nin,
            id_cdr_in                  => id_cdr_in,
            id_cdr_nin                 => id_cdr_nin,
            prof_dep_clin_serv_in      => prof_dep_clin_serv_in,
            prof_dep_clin_serv_nin     => prof_dep_clin_serv_nin,
            flg_laterality_in          => flg_laterality_in,
            flg_laterality_nin         => flg_laterality_nin,
            clinical_purpose_notes_in  => clinical_purpose_notes_in,
            clinical_purpose_notes_nin => clinical_purpose_notes_nin,
            id_exam_group_in           => id_exam_group_in,
            id_exam_group_nin          => id_exam_group_nin,
            flg_priority_in            => flg_priority_in,
            flg_priority_nin           => flg_priority_nin,
            notes_patient_in           => notes_patient_in,
            notes_patient_nin          => notes_patient_nin,
            id_prof_last_update_in     => id_prof_last_update_in,
            id_prof_last_update_nin    => id_prof_last_update_nin,
            dt_last_update_tstz_in     => dt_last_update_tstz_in,
            dt_last_update_tstz_nin    => dt_last_update_tstz_nin,
            id_pat_exemption_in        => id_pat_exemption_in,
            id_pat_exemption_nin       => id_pat_exemption_nin,
            id_epis_doc_perform_in     => id_epis_doc_perform_in,
            id_epis_doc_perform_nin    => id_epis_doc_perform_nin,
            id_co_sign_order_in        => id_co_sign_order_in,
            id_co_sign_order_nin       => id_co_sign_order_nin,
            id_co_sign_cancel_in       => id_co_sign_cancel_in,
            id_co_sign_cancel_nin      => id_co_sign_cancel_nin,
            notes_scheduler_in         => notes_scheduler_in,
            notes_scheduler_nin        => notes_scheduler_nin,
            id_clinical_purpose_in     => id_clinical_purpose_in,
            id_clinical_purpose_nin    => id_clinical_purpose_nin,
            diagnosis_notes_in         => diagnosis_notes_in,
            diagnosis_notes_nin        => diagnosis_notes_nin,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_erd_parent_in           IN exam_req_det.id_erd_parent%TYPE DEFAULT NULL,
        id_erd_parent_nin          IN BOOLEAN := TRUE,
        id_exam_req_in             IN exam_req_det.id_exam_req%TYPE DEFAULT NULL,
        id_exam_req_nin            IN BOOLEAN := TRUE,
        id_exam_in                 IN exam_req_det.id_exam%TYPE DEFAULT NULL,
        id_exam_nin                IN BOOLEAN := TRUE,
        flg_status_in              IN exam_req_det.flg_status%TYPE DEFAULT NULL,
        flg_status_nin             IN BOOLEAN := TRUE,
        notes_in                   IN exam_req_det.notes%TYPE DEFAULT NULL,
        notes_nin                  IN BOOLEAN := TRUE,
        flg_pre_req_in             IN exam_req_det.flg_pre_req%TYPE DEFAULT NULL,
        flg_pre_req_nin            IN BOOLEAN := TRUE,
        id_movement_in             IN exam_req_det.id_movement%TYPE DEFAULT NULL,
        id_movement_nin            IN BOOLEAN := TRUE,
        id_prof_cancel_in          IN exam_req_det.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin         IN BOOLEAN := TRUE,
        notes_cancel_in            IN exam_req_det.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin           IN BOOLEAN := TRUE,
        barcode_in                 IN exam_req_det.barcode%TYPE DEFAULT NULL,
        barcode_nin                IN BOOLEAN := TRUE,
        id_room_in                 IN exam_req_det.id_room%TYPE DEFAULT NULL,
        id_room_nin                IN BOOLEAN := TRUE,
        notes_tech_in              IN exam_req_det.notes_tech%TYPE DEFAULT NULL,
        notes_tech_nin             IN BOOLEAN := TRUE,
        id_pat_pregnancy_in        IN exam_req_det.id_pat_pregnancy%TYPE DEFAULT NULL,
        id_pat_pregnancy_nin       IN BOOLEAN := TRUE,
        dt_target_tstz_in          IN exam_req_det.dt_target_tstz%TYPE DEFAULT NULL,
        dt_target_tstz_nin         IN BOOLEAN := TRUE,
        dt_final_target_tstz_in    IN exam_req_det.dt_final_target_tstz%TYPE DEFAULT NULL,
        dt_final_target_tstz_nin   IN BOOLEAN := TRUE,
        dt_final_result_tstz_in    IN exam_req_det.dt_final_result_tstz%TYPE DEFAULT NULL,
        dt_final_result_tstz_nin   IN BOOLEAN := TRUE,
        dt_cancel_tstz_in          IN exam_req_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin         IN BOOLEAN := TRUE,
        id_prof_performed_in       IN exam_req_det.id_prof_performed%TYPE DEFAULT NULL,
        id_prof_performed_nin      IN BOOLEAN := TRUE,
        start_time_in              IN exam_req_det.start_time%TYPE DEFAULT NULL,
        start_time_nin             IN BOOLEAN := TRUE,
        end_time_in                IN exam_req_det.end_time%TYPE DEFAULT NULL,
        end_time_nin               IN BOOLEAN := TRUE,
        flg_referral_in            IN exam_req_det.flg_referral%TYPE DEFAULT NULL,
        flg_referral_nin           IN BOOLEAN := TRUE,
        id_cancel_reason_in        IN exam_req_det.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin       IN BOOLEAN := TRUE,
        create_user_in             IN exam_req_det.create_user%TYPE DEFAULT NULL,
        create_user_nin            IN BOOLEAN := TRUE,
        create_time_in             IN exam_req_det.create_time%TYPE DEFAULT NULL,
        create_time_nin            IN BOOLEAN := TRUE,
        create_institution_in      IN exam_req_det.create_institution%TYPE DEFAULT NULL,
        create_institution_nin     IN BOOLEAN := TRUE,
        update_user_in             IN exam_req_det.update_user%TYPE DEFAULT NULL,
        update_user_nin            IN BOOLEAN := TRUE,
        update_time_in             IN exam_req_det.update_time%TYPE DEFAULT NULL,
        update_time_nin            IN BOOLEAN := TRUE,
        update_institution_in      IN exam_req_det.update_institution%TYPE DEFAULT NULL,
        update_institution_nin     IN BOOLEAN := TRUE,
        flg_clinical_purpose_in    IN exam_req_det.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_clinical_purpose_nin   IN BOOLEAN := TRUE,
        flg_location_in            IN exam_req_det.flg_location%TYPE DEFAULT NULL,
        flg_location_nin           IN BOOLEAN := TRUE,
        id_exec_institution_in     IN exam_req_det.id_exec_institution%TYPE DEFAULT NULL,
        id_exec_institution_nin    IN BOOLEAN := TRUE,
        id_exam_codification_in    IN exam_req_det.id_exam_codification%TYPE DEFAULT NULL,
        id_exam_codification_nin   IN BOOLEAN := TRUE,
        id_task_dependency_in      IN exam_req_det.id_task_dependency%TYPE DEFAULT NULL,
        id_task_dependency_nin     IN BOOLEAN := TRUE,
        flg_req_origin_module_in   IN exam_req_det.flg_req_origin_module%TYPE DEFAULT NULL,
        flg_req_origin_module_nin  IN BOOLEAN := TRUE,
        id_prof_performed_reg_in   IN exam_req_det.id_prof_performed_reg%TYPE DEFAULT NULL,
        id_prof_performed_reg_nin  IN BOOLEAN := TRUE,
        dt_performed_reg_in        IN exam_req_det.dt_performed_reg%TYPE DEFAULT NULL,
        dt_performed_reg_nin       IN BOOLEAN := TRUE,
        id_order_recurrence_in     IN exam_req_det.id_order_recurrence%TYPE DEFAULT NULL,
        id_order_recurrence_nin    IN BOOLEAN := TRUE,
        flg_fasting_in             IN exam_req_det.flg_fasting%TYPE DEFAULT NULL,
        flg_fasting_nin            IN BOOLEAN := TRUE,
        flg_prn_in                 IN exam_req_det.flg_prn%TYPE DEFAULT NULL,
        flg_prn_nin                IN BOOLEAN := TRUE,
        prn_notes_in               IN exam_req_det.prn_notes%TYPE DEFAULT NULL,
        prn_notes_nin              IN BOOLEAN := TRUE,
        id_pat_health_plan_in      IN exam_req_det.id_pat_health_plan%TYPE DEFAULT NULL,
        id_pat_health_plan_nin     IN BOOLEAN := TRUE,
        id_cdr_in                  IN exam_req_det.id_cdr%TYPE DEFAULT NULL,
        id_cdr_nin                 IN BOOLEAN := TRUE,
        prof_dep_clin_serv_in      IN exam_req_det.prof_dep_clin_serv%TYPE DEFAULT NULL,
        prof_dep_clin_serv_nin     IN BOOLEAN := TRUE,
        flg_laterality_in          IN exam_req_det.flg_laterality%TYPE DEFAULT NULL,
        flg_laterality_nin         IN BOOLEAN := TRUE,
        clinical_purpose_notes_in  IN exam_req_det.clinical_purpose_notes%TYPE DEFAULT NULL,
        clinical_purpose_notes_nin IN BOOLEAN := TRUE,
        id_exam_group_in           IN exam_req_det.id_exam_group%TYPE DEFAULT NULL,
        id_exam_group_nin          IN BOOLEAN := TRUE,
        flg_priority_in            IN exam_req_det.flg_priority%TYPE DEFAULT NULL,
        flg_priority_nin           IN BOOLEAN := TRUE,
        notes_patient_in           IN exam_req_det.notes_patient%TYPE DEFAULT NULL,
        notes_patient_nin          IN BOOLEAN := TRUE,
        id_prof_last_update_in     IN exam_req_det.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin    IN BOOLEAN := TRUE,
        dt_last_update_tstz_in     IN exam_req_det.dt_last_update_tstz%TYPE DEFAULT NULL,
        dt_last_update_tstz_nin    IN BOOLEAN := TRUE,
        id_pat_exemption_in        IN exam_req_det.id_pat_exemption%TYPE DEFAULT NULL,
        id_pat_exemption_nin       IN BOOLEAN := TRUE,
        id_epis_doc_perform_in     IN exam_req_det.id_epis_doc_perform%TYPE DEFAULT NULL,
        id_epis_doc_perform_nin    IN BOOLEAN := TRUE,
        id_co_sign_order_in        IN exam_req_det.id_co_sign_order%TYPE DEFAULT NULL,
        id_co_sign_order_nin       IN BOOLEAN := TRUE,
        id_co_sign_cancel_in       IN exam_req_det.id_co_sign_cancel%TYPE DEFAULT NULL,
        id_co_sign_cancel_nin      IN BOOLEAN := TRUE,
        notes_scheduler_in         IN exam_req_det.notes_scheduler%TYPE DEFAULT NULL,
        notes_scheduler_nin        IN BOOLEAN := TRUE,
        id_clinical_purpose_in     IN exam_req_det.id_clinical_purpose%TYPE DEFAULT NULL,
        id_clinical_purpose_nin    IN BOOLEAN := TRUE,
        diagnosis_notes_in         IN exam_req_det.diagnosis_notes%TYPE DEFAULT NULL,
        diagnosis_notes_nin        IN BOOLEAN := TRUE,
        where_in                   IN VARCHAR2,
        handle_error_in            IN BOOLEAN := TRUE,
        rows_out                   IN OUT table_varchar
    ) IS
        l_sql                      VARCHAR2(32767);
        l_rows_out                 table_varchar;
        l_id_erd_parent_n          NUMBER(1) := sys.diutil.bool_to_int(id_erd_parent_nin);
        l_id_exam_req_n            NUMBER(1) := sys.diutil.bool_to_int(id_exam_req_nin);
        l_id_exam_n                NUMBER(1) := sys.diutil.bool_to_int(id_exam_nin);
        l_flg_status_n             NUMBER(1) := sys.diutil.bool_to_int(flg_status_nin);
        l_notes_n                  NUMBER(1) := sys.diutil.bool_to_int(notes_nin);
        l_flg_pre_req_n            NUMBER(1) := sys.diutil.bool_to_int(flg_pre_req_nin);
        l_id_movement_n            NUMBER(1) := sys.diutil.bool_to_int(id_movement_nin);
        l_id_prof_cancel_n         NUMBER(1) := sys.diutil.bool_to_int(id_prof_cancel_nin);
        l_notes_cancel_n           NUMBER(1) := sys.diutil.bool_to_int(notes_cancel_nin);
        l_barcode_n                NUMBER(1) := sys.diutil.bool_to_int(barcode_nin);
        l_id_room_n                NUMBER(1) := sys.diutil.bool_to_int(id_room_nin);
        l_notes_tech_n             NUMBER(1) := sys.diutil.bool_to_int(notes_tech_nin);
        l_id_pat_pregnancy_n       NUMBER(1) := sys.diutil.bool_to_int(id_pat_pregnancy_nin);
        l_dt_target_tstz_n         NUMBER(1) := sys.diutil.bool_to_int(dt_target_tstz_nin);
        l_dt_final_target_tstz_n   NUMBER(1) := sys.diutil.bool_to_int(dt_final_target_tstz_nin);
        l_dt_final_result_tstz_n   NUMBER(1) := sys.diutil.bool_to_int(dt_final_result_tstz_nin);
        l_dt_cancel_tstz_n         NUMBER(1) := sys.diutil.bool_to_int(dt_cancel_tstz_nin);
        l_id_prof_performed_n      NUMBER(1) := sys.diutil.bool_to_int(id_prof_performed_nin);
        l_start_time_n             NUMBER(1) := sys.diutil.bool_to_int(start_time_nin);
        l_end_time_n               NUMBER(1) := sys.diutil.bool_to_int(end_time_nin);
        l_flg_referral_n           NUMBER(1) := sys.diutil.bool_to_int(flg_referral_nin);
        l_id_cancel_reason_n       NUMBER(1) := sys.diutil.bool_to_int(id_cancel_reason_nin);
        l_create_user_n            NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n            NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n     NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n            NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n            NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n     NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_flg_clinical_purpose_n   NUMBER(1) := sys.diutil.bool_to_int(flg_clinical_purpose_nin);
        l_flg_location_n           NUMBER(1) := sys.diutil.bool_to_int(flg_location_nin);
        l_id_exec_institution_n    NUMBER(1) := sys.diutil.bool_to_int(id_exec_institution_nin);
        l_id_exam_codification_n   NUMBER(1) := sys.diutil.bool_to_int(id_exam_codification_nin);
        l_id_task_dependency_n     NUMBER(1) := sys.diutil.bool_to_int(id_task_dependency_nin);
        l_flg_req_origin_module_n  NUMBER(1) := sys.diutil.bool_to_int(flg_req_origin_module_nin);
        l_id_prof_performed_reg_n  NUMBER(1) := sys.diutil.bool_to_int(id_prof_performed_reg_nin);
        l_dt_performed_reg_n       NUMBER(1) := sys.diutil.bool_to_int(dt_performed_reg_nin);
        l_id_order_recurrence_n    NUMBER(1) := sys.diutil.bool_to_int(id_order_recurrence_nin);
        l_flg_fasting_n            NUMBER(1) := sys.diutil.bool_to_int(flg_fasting_nin);
        l_flg_prn_n                NUMBER(1) := sys.diutil.bool_to_int(flg_prn_nin);
        l_prn_notes_n              NUMBER(1) := sys.diutil.bool_to_int(prn_notes_nin);
        l_id_pat_health_plan_n     NUMBER(1) := sys.diutil.bool_to_int(id_pat_health_plan_nin);
        l_id_cdr_n                 NUMBER(1) := sys.diutil.bool_to_int(id_cdr_nin);
        l_prof_dep_clin_serv_n     NUMBER(1) := sys.diutil.bool_to_int(prof_dep_clin_serv_nin);
        l_flg_laterality_n         NUMBER(1) := sys.diutil.bool_to_int(flg_laterality_nin);
        l_clinical_purpose_notes_n NUMBER(1) := sys.diutil.bool_to_int(clinical_purpose_notes_nin);
        l_id_exam_group_n          NUMBER(1) := sys.diutil.bool_to_int(id_exam_group_nin);
        l_flg_priority_n           NUMBER(1) := sys.diutil.bool_to_int(flg_priority_nin);
        l_notes_patient_n          NUMBER(1) := sys.diutil.bool_to_int(notes_patient_nin);
        l_id_prof_last_update_n    NUMBER(1) := sys.diutil.bool_to_int(id_prof_last_update_nin);
        l_dt_last_update_tstz_n    NUMBER(1) := sys.diutil.bool_to_int(dt_last_update_tstz_nin);
        l_id_pat_exemption_n       NUMBER(1) := sys.diutil.bool_to_int(id_pat_exemption_nin);
        l_id_epis_doc_perform_n    NUMBER(1) := sys.diutil.bool_to_int(id_epis_doc_perform_nin);
        l_id_co_sign_order_n       NUMBER(1) := sys.diutil.bool_to_int(id_co_sign_order_nin);
        l_id_co_sign_cancel_n      NUMBER(1) := sys.diutil.bool_to_int(id_co_sign_cancel_nin);
        l_notes_scheduler_n        NUMBER(1) := sys.diutil.bool_to_int(notes_scheduler_nin);
        l_id_clinical_purpose_n    NUMBER(1) := sys.diutil.bool_to_int(id_clinical_purpose_nin);
        l_diagnosis_notes_n        NUMBER(1) := sys.diutil.bool_to_int(diagnosis_notes_nin);
    BEGIN
        l_id_erd_parent_n          := sys.diutil.bool_to_int(id_erd_parent_nin);
        l_id_exam_req_n            := sys.diutil.bool_to_int(id_exam_req_nin);
        l_id_exam_n                := sys.diutil.bool_to_int(id_exam_nin);
        l_flg_status_n             := sys.diutil.bool_to_int(flg_status_nin);
        l_notes_n                  := sys.diutil.bool_to_int(notes_nin);
        l_flg_pre_req_n            := sys.diutil.bool_to_int(flg_pre_req_nin);
        l_id_movement_n            := sys.diutil.bool_to_int(id_movement_nin);
        l_id_prof_cancel_n         := sys.diutil.bool_to_int(id_prof_cancel_nin);
        l_notes_cancel_n           := sys.diutil.bool_to_int(notes_cancel_nin);
        l_barcode_n                := sys.diutil.bool_to_int(barcode_nin);
        l_id_room_n                := sys.diutil.bool_to_int(id_room_nin);
        l_notes_tech_n             := sys.diutil.bool_to_int(notes_tech_nin);
        l_id_pat_pregnancy_n       := sys.diutil.bool_to_int(id_pat_pregnancy_nin);
        l_dt_target_tstz_n         := sys.diutil.bool_to_int(dt_target_tstz_nin);
        l_dt_final_target_tstz_n   := sys.diutil.bool_to_int(dt_final_target_tstz_nin);
        l_dt_final_result_tstz_n   := sys.diutil.bool_to_int(dt_final_result_tstz_nin);
        l_dt_cancel_tstz_n         := sys.diutil.bool_to_int(dt_cancel_tstz_nin);
        l_id_prof_performed_n      := sys.diutil.bool_to_int(id_prof_performed_nin);
        l_start_time_n             := sys.diutil.bool_to_int(start_time_nin);
        l_end_time_n               := sys.diutil.bool_to_int(end_time_nin);
        l_flg_referral_n           := sys.diutil.bool_to_int(flg_referral_nin);
        l_id_cancel_reason_n       := sys.diutil.bool_to_int(id_cancel_reason_nin);
        l_create_user_n            := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n            := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n     := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n            := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n            := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n     := sys.diutil.bool_to_int(update_institution_nin);
        l_flg_clinical_purpose_n   := sys.diutil.bool_to_int(flg_clinical_purpose_nin);
        l_flg_location_n           := sys.diutil.bool_to_int(flg_location_nin);
        l_id_exec_institution_n    := sys.diutil.bool_to_int(id_exec_institution_nin);
        l_id_exam_codification_n   := sys.diutil.bool_to_int(id_exam_codification_nin);
        l_id_task_dependency_n     := sys.diutil.bool_to_int(id_task_dependency_nin);
        l_flg_req_origin_module_n  := sys.diutil.bool_to_int(flg_req_origin_module_nin);
        l_id_prof_performed_reg_n  := sys.diutil.bool_to_int(id_prof_performed_reg_nin);
        l_dt_performed_reg_n       := sys.diutil.bool_to_int(dt_performed_reg_nin);
        l_id_order_recurrence_n    := sys.diutil.bool_to_int(id_order_recurrence_nin);
        l_flg_fasting_n            := sys.diutil.bool_to_int(flg_fasting_nin);
        l_flg_prn_n                := sys.diutil.bool_to_int(flg_prn_nin);
        l_prn_notes_n              := sys.diutil.bool_to_int(prn_notes_nin);
        l_id_pat_health_plan_n     := sys.diutil.bool_to_int(id_pat_health_plan_nin);
        l_id_cdr_n                 := sys.diutil.bool_to_int(id_cdr_nin);
        l_prof_dep_clin_serv_n     := sys.diutil.bool_to_int(prof_dep_clin_serv_nin);
        l_flg_laterality_n         := sys.diutil.bool_to_int(flg_laterality_nin);
        l_clinical_purpose_notes_n := sys.diutil.bool_to_int(clinical_purpose_notes_nin);
        l_id_exam_group_n          := sys.diutil.bool_to_int(id_exam_group_nin);
        l_flg_priority_n           := sys.diutil.bool_to_int(flg_priority_nin);
        l_notes_patient_n          := sys.diutil.bool_to_int(notes_patient_nin);
        l_id_prof_last_update_n    := sys.diutil.bool_to_int(id_prof_last_update_nin);
        l_dt_last_update_tstz_n    := sys.diutil.bool_to_int(dt_last_update_tstz_nin);
        l_id_pat_exemption_n       := sys.diutil.bool_to_int(id_pat_exemption_nin);
        l_id_epis_doc_perform_n    := sys.diutil.bool_to_int(id_epis_doc_perform_nin);
        l_id_co_sign_order_n       := sys.diutil.bool_to_int(id_co_sign_order_nin);
        l_id_co_sign_cancel_n      := sys.diutil.bool_to_int(id_co_sign_cancel_nin);
        l_notes_scheduler_n        := sys.diutil.bool_to_int(notes_scheduler_nin);
        l_id_clinical_purpose_n    := sys.diutil.bool_to_int(id_clinical_purpose_nin);
        l_diagnosis_notes_n        := sys.diutil.bool_to_int(diagnosis_notes_nin);
        l_sql                      := 'UPDATE exam_req_det SET' || ' ID_ERD_PARENT = decode (' || l_id_erd_parent_n ||
                                      ',0,:ID_ERD_PARENT_in, NVL (:ID_ERD_PARENT_in, ID_ERD_PARENT)) ' || ',' ||
                                      ' ID_EXAM_REQ = decode (' || l_id_exam_req_n ||
                                      ',0,:ID_EXAM_REQ_in, NVL (:ID_EXAM_REQ_in, ID_EXAM_REQ)) ' || ',' ||
                                      ' ID_EXAM = decode (' || l_id_exam_n ||
                                      ',0,:ID_EXAM_in, NVL (:ID_EXAM_in, ID_EXAM)) ' || ',' || ' FLG_STATUS = decode (' ||
                                      l_flg_status_n || ',0,:FLG_STATUS_in, NVL (:FLG_STATUS_in, FLG_STATUS)) ' || ',' ||
                                      ' NOTES = decode (' || l_notes_n || ',0,:NOTES_in, NVL (:NOTES_in, NOTES)) ' || ',' ||
                                      ' FLG_PRE_REQ = decode (' || l_flg_pre_req_n ||
                                      ',0,:FLG_PRE_REQ_in, NVL (:FLG_PRE_REQ_in, FLG_PRE_REQ)) ' || ',' ||
                                      ' ID_MOVEMENT = decode (' || l_id_movement_n ||
                                      ',0,:ID_MOVEMENT_in, NVL (:ID_MOVEMENT_in, ID_MOVEMENT)) ' || ',' ||
                                      ' ID_PROF_CANCEL = decode (' || l_id_prof_cancel_n ||
                                      ',0,:ID_PROF_CANCEL_in, NVL (:ID_PROF_CANCEL_in, ID_PROF_CANCEL)) ' || ',' ||
                                      ' NOTES_CANCEL = decode (' || l_notes_cancel_n ||
                                      ',0,:NOTES_CANCEL_in, NVL (:NOTES_CANCEL_in, NOTES_CANCEL)) ' || ',' ||
                                      ' BARCODE = decode (' || l_barcode_n ||
                                      ',0,:BARCODE_in, NVL (:BARCODE_in, BARCODE)) ' || ',' || ' ID_ROOM = decode (' ||
                                      l_id_room_n || ',0,:ID_ROOM_in, NVL (:ID_ROOM_in, ID_ROOM)) ' || ',' ||
                                      ' NOTES_TECH = decode (' || l_notes_tech_n ||
                                      ',0,:NOTES_TECH_in, NVL (:NOTES_TECH_in, NOTES_TECH)) ' || ',' ||
                                      ' ID_PAT_PREGNANCY = decode (' || l_id_pat_pregnancy_n ||
                                      ',0,:ID_PAT_PREGNANCY_in, NVL (:ID_PAT_PREGNANCY_in, ID_PAT_PREGNANCY)) ' || ',' ||
                                      ' DT_TARGET_TSTZ = decode (' || l_dt_target_tstz_n ||
                                      ',0,:DT_TARGET_TSTZ_in, NVL (:DT_TARGET_TSTZ_in, DT_TARGET_TSTZ)) ' || ',' ||
                                      ' DT_FINAL_TARGET_TSTZ = decode (' || l_dt_final_target_tstz_n ||
                                      ',0,:DT_FINAL_TARGET_TSTZ_in, NVL (:DT_FINAL_TARGET_TSTZ_in, DT_FINAL_TARGET_TSTZ)) ' || ',' ||
                                      ' DT_FINAL_RESULT_TSTZ = decode (' || l_dt_final_result_tstz_n ||
                                      ',0,:DT_FINAL_RESULT_TSTZ_in, NVL (:DT_FINAL_RESULT_TSTZ_in, DT_FINAL_RESULT_TSTZ)) ' || ',' ||
                                      ' DT_CANCEL_TSTZ = decode (' || l_dt_cancel_tstz_n ||
                                      ',0,:DT_CANCEL_TSTZ_in, NVL (:DT_CANCEL_TSTZ_in, DT_CANCEL_TSTZ)) ' || ',' ||
                                      ' ID_PROF_PERFORMED = decode (' || l_id_prof_performed_n ||
                                      ',0,:ID_PROF_PERFORMED_in, NVL (:ID_PROF_PERFORMED_in, ID_PROF_PERFORMED)) ' || ',' ||
                                      ' START_TIME = decode (' || l_start_time_n ||
                                      ',0,:START_TIME_in, NVL (:START_TIME_in, START_TIME)) ' || ',' ||
                                      ' END_TIME = decode (' || l_end_time_n ||
                                      ',0,:END_TIME_in, NVL (:END_TIME_in, END_TIME)) ' || ',' ||
                                      ' FLG_REFERRAL = decode (' || l_flg_referral_n ||
                                      ',0,:FLG_REFERRAL_in, NVL (:FLG_REFERRAL_in, FLG_REFERRAL)) ' || ',' ||
                                      ' ID_CANCEL_REASON = decode (' || l_id_cancel_reason_n ||
                                      ',0,:ID_CANCEL_REASON_in, NVL (:ID_CANCEL_REASON_in, ID_CANCEL_REASON)) ' || ',' ||
                                      ' CREATE_USER = decode (' || l_create_user_n ||
                                      ',0,:CREATE_USER_in, NVL (:CREATE_USER_in, CREATE_USER)) ' || ',' ||
                                      ' CREATE_TIME = decode (' || l_create_time_n ||
                                      ',0,:CREATE_TIME_in, NVL (:CREATE_TIME_in, CREATE_TIME)) ' || ',' ||
                                      ' CREATE_INSTITUTION = decode (' || l_create_institution_n ||
                                      ',0,:CREATE_INSTITUTION_in, NVL (:CREATE_INSTITUTION_in, CREATE_INSTITUTION)) ' || ',' ||
                                      ' UPDATE_USER = decode (' || l_update_user_n ||
                                      ',0,:UPDATE_USER_in, NVL (:UPDATE_USER_in, UPDATE_USER)) ' || ',' ||
                                      ' UPDATE_TIME = decode (' || l_update_time_n ||
                                      ',0,:UPDATE_TIME_in, NVL (:UPDATE_TIME_in, UPDATE_TIME)) ' || ',' ||
                                      ' UPDATE_INSTITUTION = decode (' || l_update_institution_n ||
                                      ',0,:UPDATE_INSTITUTION_in, NVL (:UPDATE_INSTITUTION_in, UPDATE_INSTITUTION)) ' || ',' ||
                                      ' FLG_CLINICAL_PURPOSE = decode (' || l_flg_clinical_purpose_n ||
                                      ',0,:FLG_CLINICAL_PURPOSE_in, NVL (:FLG_CLINICAL_PURPOSE_in, FLG_CLINICAL_PURPOSE)) ' || ',' ||
                                      ' FLG_LOCATION = decode (' || l_flg_location_n ||
                                      ',0,:FLG_LOCATION_in, NVL (:FLG_LOCATION_in, FLG_LOCATION)) ' || ',' ||
                                      ' ID_EXEC_INSTITUTION = decode (' || l_id_exec_institution_n ||
                                      ',0,:ID_EXEC_INSTITUTION_in, NVL (:ID_EXEC_INSTITUTION_in, ID_EXEC_INSTITUTION)) ' || ',' ||
                                      ' ID_EXAM_CODIFICATION = decode (' || l_id_exam_codification_n ||
                                      ',0,:ID_EXAM_CODIFICATION_in, NVL (:ID_EXAM_CODIFICATION_in, ID_EXAM_CODIFICATION)) ' || ',' ||
                                      ' ID_TASK_DEPENDENCY = decode (' || l_id_task_dependency_n ||
                                      ',0,:ID_TASK_DEPENDENCY_in, NVL (:ID_TASK_DEPENDENCY_in, ID_TASK_DEPENDENCY)) ' || ',' ||
                                      ' FLG_REQ_ORIGIN_MODULE = decode (' || l_flg_req_origin_module_n ||
                                      ',0,:FLG_REQ_ORIGIN_MODULE_in, NVL (:FLG_REQ_ORIGIN_MODULE_in, FLG_REQ_ORIGIN_MODULE)) ' || ',' ||
                                      ' ID_PROF_PERFORMED_REG = decode (' || l_id_prof_performed_reg_n ||
                                      ',0,:ID_PROF_PERFORMED_REG_in, NVL (:ID_PROF_PERFORMED_REG_in, ID_PROF_PERFORMED_REG)) ' || ',' ||
                                      ' DT_PERFORMED_REG = decode (' || l_dt_performed_reg_n ||
                                      ',0,:DT_PERFORMED_REG_in, NVL (:DT_PERFORMED_REG_in, DT_PERFORMED_REG)) ' || ',' ||
                                      ' ID_ORDER_RECURRENCE = decode (' || l_id_order_recurrence_n ||
                                      ',0,:ID_ORDER_RECURRENCE_in, NVL (:ID_ORDER_RECURRENCE_in, ID_ORDER_RECURRENCE)) ' || ',' ||
                                      ' FLG_FASTING = decode (' || l_flg_fasting_n ||
                                      ',0,:FLG_FASTING_in, NVL (:FLG_FASTING_in, FLG_FASTING)) ' || ',' ||
                                      ' FLG_PRN = decode (' || l_flg_prn_n ||
                                      ',0,:FLG_PRN_in, NVL (:FLG_PRN_in, FLG_PRN)) ' || ',' || ' PRN_NOTES = decode (' ||
                                      l_prn_notes_n || ',0,:PRN_NOTES_in, NVL (:PRN_NOTES_in, PRN_NOTES)) ' || ',' ||
                                      ' ID_PAT_HEALTH_PLAN = decode (' || l_id_pat_health_plan_n ||
                                      ',0,:ID_PAT_HEALTH_PLAN_in, NVL (:ID_PAT_HEALTH_PLAN_in, ID_PAT_HEALTH_PLAN)) ' || ',' ||
                                      ' ID_CDR = decode (' || l_id_cdr_n || ',0,:ID_CDR_in, NVL (:ID_CDR_in, ID_CDR)) ' || ',' ||
                                      ' PROF_DEP_CLIN_SERV = decode (' || l_prof_dep_clin_serv_n ||
                                      ',0,:PROF_DEP_CLIN_SERV_in, NVL (:PROF_DEP_CLIN_SERV_in, PROF_DEP_CLIN_SERV)) ' || ',' ||
                                      ' FLG_LATERALITY = decode (' || l_flg_laterality_n ||
                                      ',0,:FLG_LATERALITY_in, NVL (:FLG_LATERALITY_in, FLG_LATERALITY)) ' || ',' ||
                                      ' CLINICAL_PURPOSE_NOTES = decode (' || l_clinical_purpose_notes_n ||
                                      ',0,:CLINICAL_PURPOSE_NOTES_in, NVL (:CLINICAL_PURPOSE_NOTES_in, CLINICAL_PURPOSE_NOTES)) ' || ',' ||
                                      ' ID_EXAM_GROUP = decode (' || l_id_exam_group_n ||
                                      ',0,:ID_EXAM_GROUP_in, NVL (:ID_EXAM_GROUP_in, ID_EXAM_GROUP)) ' || ',' ||
                                      ' FLG_PRIORITY = decode (' || l_flg_priority_n ||
                                      ',0,:FLG_PRIORITY_in, NVL (:FLG_PRIORITY_in, FLG_PRIORITY)) ' || ',' ||
                                      ' NOTES_PATIENT = decode (' || l_notes_patient_n ||
                                      ',0,:NOTES_PATIENT_in, NVL (:NOTES_PATIENT_in, NOTES_PATIENT)) ' || ',' ||
                                      ' ID_PROF_LAST_UPDATE = decode (' || l_id_prof_last_update_n ||
                                      ',0,:ID_PROF_LAST_UPDATE_in, NVL (:ID_PROF_LAST_UPDATE_in, ID_PROF_LAST_UPDATE)) ' || ',' ||
                                      ' DT_LAST_UPDATE_TSTZ = decode (' || l_dt_last_update_tstz_n ||
                                      ',0,:DT_LAST_UPDATE_TSTZ_in, NVL (:DT_LAST_UPDATE_TSTZ_in, DT_LAST_UPDATE_TSTZ)) ' || ',' ||
                                      ' ID_PAT_EXEMPTION = decode (' || l_id_pat_exemption_n ||
                                      ',0,:ID_PAT_EXEMPTION_in, NVL (:ID_PAT_EXEMPTION_in, ID_PAT_EXEMPTION)) ' || ',' ||
                                      ' ID_EPIS_DOC_PERFORM = decode (' || l_id_epis_doc_perform_n ||
                                      ',0,:ID_EPIS_DOC_PERFORM_in, NVL (:ID_EPIS_DOC_PERFORM_in, ID_EPIS_DOC_PERFORM)) ' || ',' ||
                                      ' ID_CO_SIGN_ORDER = decode (' || l_id_co_sign_order_n ||
                                      ',0,:ID_CO_SIGN_ORDER_in, NVL (:ID_CO_SIGN_ORDER_in, ID_CO_SIGN_ORDER)) ' || ',' ||
                                      ' ID_CO_SIGN_CANCEL = decode (' || l_id_co_sign_cancel_n ||
                                      ',0,:ID_CO_SIGN_CANCEL_in, NVL (:ID_CO_SIGN_CANCEL_in, ID_CO_SIGN_CANCEL)) ' || ',' ||
                                      ' NOTES_SCHEDULER = decode (' || l_notes_scheduler_n ||
                                      ',0,:NOTES_SCHEDULER_in, NVL (:NOTES_SCHEDULER_in, NOTES_SCHEDULER)) ' || ',' ||
                                      ' ID_CLINICAL_PURPOSE = decode (' || l_id_clinical_purpose_n ||
                                      ',0,:ID_CLINICAL_PURPOSE_in, NVL (:ID_CLINICAL_PURPOSE_in, ID_CLINICAL_PURPOSE)) ' || ',' ||
                                      ' DIAGNOSIS_NOTES = decode (' || l_diagnosis_notes_n ||
                                      ',0,:DIAGNOSIS_NOTES_in, NVL (:DIAGNOSIS_NOTES_in, DIAGNOSIS_NOTES)) ' ||
                                      ' where ' || nvl(where_in, '(1=1)') ||
                                      ' RETURNING ROWID BULK COLLECT INTO :l_rows_out';
        EXECUTE IMMEDIATE 'BEGIN ' || l_sql || '; END;'
            USING IN id_erd_parent_in, id_exam_req_in, id_exam_in, flg_status_in, notes_in, flg_pre_req_in, id_movement_in, id_prof_cancel_in, notes_cancel_in, barcode_in, id_room_in, notes_tech_in, id_pat_pregnancy_in, dt_target_tstz_in, dt_final_target_tstz_in, dt_final_result_tstz_in, dt_cancel_tstz_in, id_prof_performed_in, start_time_in, end_time_in, flg_referral_in, id_cancel_reason_in, create_user_in, create_time_in, create_institution_in, update_user_in, update_time_in, update_institution_in, flg_clinical_purpose_in, flg_location_in, id_exec_institution_in, id_exam_codification_in, id_task_dependency_in, flg_req_origin_module_in, id_prof_performed_reg_in, dt_performed_reg_in, id_order_recurrence_in, flg_fasting_in, flg_prn_in, prn_notes_in, id_pat_health_plan_in, id_cdr_in, prof_dep_clin_serv_in, flg_laterality_in, clinical_purpose_notes_in, id_exam_group_in, flg_priority_in, notes_patient_in, id_prof_last_update_in, dt_last_update_tstz_in, id_pat_exemption_in, id_epis_doc_perform_in, id_co_sign_order_in, id_co_sign_cancel_in, notes_scheduler_in, id_clinical_purpose_in, diagnosis_notes_in, OUT l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_erd_parent_in           IN exam_req_det.id_erd_parent%TYPE DEFAULT NULL,
        id_erd_parent_nin          IN BOOLEAN := TRUE,
        id_exam_req_in             IN exam_req_det.id_exam_req%TYPE DEFAULT NULL,
        id_exam_req_nin            IN BOOLEAN := TRUE,
        id_exam_in                 IN exam_req_det.id_exam%TYPE DEFAULT NULL,
        id_exam_nin                IN BOOLEAN := TRUE,
        flg_status_in              IN exam_req_det.flg_status%TYPE DEFAULT NULL,
        flg_status_nin             IN BOOLEAN := TRUE,
        notes_in                   IN exam_req_det.notes%TYPE DEFAULT NULL,
        notes_nin                  IN BOOLEAN := TRUE,
        flg_pre_req_in             IN exam_req_det.flg_pre_req%TYPE DEFAULT NULL,
        flg_pre_req_nin            IN BOOLEAN := TRUE,
        id_movement_in             IN exam_req_det.id_movement%TYPE DEFAULT NULL,
        id_movement_nin            IN BOOLEAN := TRUE,
        id_prof_cancel_in          IN exam_req_det.id_prof_cancel%TYPE DEFAULT NULL,
        id_prof_cancel_nin         IN BOOLEAN := TRUE,
        notes_cancel_in            IN exam_req_det.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin           IN BOOLEAN := TRUE,
        barcode_in                 IN exam_req_det.barcode%TYPE DEFAULT NULL,
        barcode_nin                IN BOOLEAN := TRUE,
        id_room_in                 IN exam_req_det.id_room%TYPE DEFAULT NULL,
        id_room_nin                IN BOOLEAN := TRUE,
        notes_tech_in              IN exam_req_det.notes_tech%TYPE DEFAULT NULL,
        notes_tech_nin             IN BOOLEAN := TRUE,
        id_pat_pregnancy_in        IN exam_req_det.id_pat_pregnancy%TYPE DEFAULT NULL,
        id_pat_pregnancy_nin       IN BOOLEAN := TRUE,
        dt_target_tstz_in          IN exam_req_det.dt_target_tstz%TYPE DEFAULT NULL,
        dt_target_tstz_nin         IN BOOLEAN := TRUE,
        dt_final_target_tstz_in    IN exam_req_det.dt_final_target_tstz%TYPE DEFAULT NULL,
        dt_final_target_tstz_nin   IN BOOLEAN := TRUE,
        dt_final_result_tstz_in    IN exam_req_det.dt_final_result_tstz%TYPE DEFAULT NULL,
        dt_final_result_tstz_nin   IN BOOLEAN := TRUE,
        dt_cancel_tstz_in          IN exam_req_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin         IN BOOLEAN := TRUE,
        id_prof_performed_in       IN exam_req_det.id_prof_performed%TYPE DEFAULT NULL,
        id_prof_performed_nin      IN BOOLEAN := TRUE,
        start_time_in              IN exam_req_det.start_time%TYPE DEFAULT NULL,
        start_time_nin             IN BOOLEAN := TRUE,
        end_time_in                IN exam_req_det.end_time%TYPE DEFAULT NULL,
        end_time_nin               IN BOOLEAN := TRUE,
        flg_referral_in            IN exam_req_det.flg_referral%TYPE DEFAULT NULL,
        flg_referral_nin           IN BOOLEAN := TRUE,
        id_cancel_reason_in        IN exam_req_det.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin       IN BOOLEAN := TRUE,
        create_user_in             IN exam_req_det.create_user%TYPE DEFAULT NULL,
        create_user_nin            IN BOOLEAN := TRUE,
        create_time_in             IN exam_req_det.create_time%TYPE DEFAULT NULL,
        create_time_nin            IN BOOLEAN := TRUE,
        create_institution_in      IN exam_req_det.create_institution%TYPE DEFAULT NULL,
        create_institution_nin     IN BOOLEAN := TRUE,
        update_user_in             IN exam_req_det.update_user%TYPE DEFAULT NULL,
        update_user_nin            IN BOOLEAN := TRUE,
        update_time_in             IN exam_req_det.update_time%TYPE DEFAULT NULL,
        update_time_nin            IN BOOLEAN := TRUE,
        update_institution_in      IN exam_req_det.update_institution%TYPE DEFAULT NULL,
        update_institution_nin     IN BOOLEAN := TRUE,
        flg_clinical_purpose_in    IN exam_req_det.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_clinical_purpose_nin   IN BOOLEAN := TRUE,
        flg_location_in            IN exam_req_det.flg_location%TYPE DEFAULT NULL,
        flg_location_nin           IN BOOLEAN := TRUE,
        id_exec_institution_in     IN exam_req_det.id_exec_institution%TYPE DEFAULT NULL,
        id_exec_institution_nin    IN BOOLEAN := TRUE,
        id_exam_codification_in    IN exam_req_det.id_exam_codification%TYPE DEFAULT NULL,
        id_exam_codification_nin   IN BOOLEAN := TRUE,
        id_task_dependency_in      IN exam_req_det.id_task_dependency%TYPE DEFAULT NULL,
        id_task_dependency_nin     IN BOOLEAN := TRUE,
        flg_req_origin_module_in   IN exam_req_det.flg_req_origin_module%TYPE DEFAULT NULL,
        flg_req_origin_module_nin  IN BOOLEAN := TRUE,
        id_prof_performed_reg_in   IN exam_req_det.id_prof_performed_reg%TYPE DEFAULT NULL,
        id_prof_performed_reg_nin  IN BOOLEAN := TRUE,
        dt_performed_reg_in        IN exam_req_det.dt_performed_reg%TYPE DEFAULT NULL,
        dt_performed_reg_nin       IN BOOLEAN := TRUE,
        id_order_recurrence_in     IN exam_req_det.id_order_recurrence%TYPE DEFAULT NULL,
        id_order_recurrence_nin    IN BOOLEAN := TRUE,
        flg_fasting_in             IN exam_req_det.flg_fasting%TYPE DEFAULT NULL,
        flg_fasting_nin            IN BOOLEAN := TRUE,
        flg_prn_in                 IN exam_req_det.flg_prn%TYPE DEFAULT NULL,
        flg_prn_nin                IN BOOLEAN := TRUE,
        prn_notes_in               IN exam_req_det.prn_notes%TYPE DEFAULT NULL,
        prn_notes_nin              IN BOOLEAN := TRUE,
        id_pat_health_plan_in      IN exam_req_det.id_pat_health_plan%TYPE DEFAULT NULL,
        id_pat_health_plan_nin     IN BOOLEAN := TRUE,
        id_cdr_in                  IN exam_req_det.id_cdr%TYPE DEFAULT NULL,
        id_cdr_nin                 IN BOOLEAN := TRUE,
        prof_dep_clin_serv_in      IN exam_req_det.prof_dep_clin_serv%TYPE DEFAULT NULL,
        prof_dep_clin_serv_nin     IN BOOLEAN := TRUE,
        flg_laterality_in          IN exam_req_det.flg_laterality%TYPE DEFAULT NULL,
        flg_laterality_nin         IN BOOLEAN := TRUE,
        clinical_purpose_notes_in  IN exam_req_det.clinical_purpose_notes%TYPE DEFAULT NULL,
        clinical_purpose_notes_nin IN BOOLEAN := TRUE,
        id_exam_group_in           IN exam_req_det.id_exam_group%TYPE DEFAULT NULL,
        id_exam_group_nin          IN BOOLEAN := TRUE,
        flg_priority_in            IN exam_req_det.flg_priority%TYPE DEFAULT NULL,
        flg_priority_nin           IN BOOLEAN := TRUE,
        notes_patient_in           IN exam_req_det.notes_patient%TYPE DEFAULT NULL,
        notes_patient_nin          IN BOOLEAN := TRUE,
        id_prof_last_update_in     IN exam_req_det.id_prof_last_update%TYPE DEFAULT NULL,
        id_prof_last_update_nin    IN BOOLEAN := TRUE,
        dt_last_update_tstz_in     IN exam_req_det.dt_last_update_tstz%TYPE DEFAULT NULL,
        dt_last_update_tstz_nin    IN BOOLEAN := TRUE,
        id_pat_exemption_in        IN exam_req_det.id_pat_exemption%TYPE DEFAULT NULL,
        id_pat_exemption_nin       IN BOOLEAN := TRUE,
        id_epis_doc_perform_in     IN exam_req_det.id_epis_doc_perform%TYPE DEFAULT NULL,
        id_epis_doc_perform_nin    IN BOOLEAN := TRUE,
        id_co_sign_order_in        IN exam_req_det.id_co_sign_order%TYPE DEFAULT NULL,
        id_co_sign_order_nin       IN BOOLEAN := TRUE,
        id_co_sign_cancel_in       IN exam_req_det.id_co_sign_cancel%TYPE DEFAULT NULL,
        id_co_sign_cancel_nin      IN BOOLEAN := TRUE,
        notes_scheduler_in         IN exam_req_det.notes_scheduler%TYPE DEFAULT NULL,
        notes_scheduler_nin        IN BOOLEAN := TRUE,
        id_clinical_purpose_in     IN exam_req_det.id_clinical_purpose%TYPE DEFAULT NULL,
        id_clinical_purpose_nin    IN BOOLEAN := TRUE,
        diagnosis_notes_in         IN exam_req_det.diagnosis_notes%TYPE DEFAULT NULL,
        diagnosis_notes_nin        IN BOOLEAN := TRUE,
        where_in                   IN VARCHAR2,
        handle_error_in            IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_erd_parent_in           => id_erd_parent_in,
            id_erd_parent_nin          => id_erd_parent_nin,
            id_exam_req_in             => id_exam_req_in,
            id_exam_req_nin            => id_exam_req_nin,
            id_exam_in                 => id_exam_in,
            id_exam_nin                => id_exam_nin,
            flg_status_in              => flg_status_in,
            flg_status_nin             => flg_status_nin,
            notes_in                   => notes_in,
            notes_nin                  => notes_nin,
            flg_pre_req_in             => flg_pre_req_in,
            flg_pre_req_nin            => flg_pre_req_nin,
            id_movement_in             => id_movement_in,
            id_movement_nin            => id_movement_nin,
            id_prof_cancel_in          => id_prof_cancel_in,
            id_prof_cancel_nin         => id_prof_cancel_nin,
            notes_cancel_in            => notes_cancel_in,
            notes_cancel_nin           => notes_cancel_nin,
            barcode_in                 => barcode_in,
            barcode_nin                => barcode_nin,
            id_room_in                 => id_room_in,
            id_room_nin                => id_room_nin,
            notes_tech_in              => notes_tech_in,
            notes_tech_nin             => notes_tech_nin,
            id_pat_pregnancy_in        => id_pat_pregnancy_in,
            id_pat_pregnancy_nin       => id_pat_pregnancy_nin,
            dt_target_tstz_in          => dt_target_tstz_in,
            dt_target_tstz_nin         => dt_target_tstz_nin,
            dt_final_target_tstz_in    => dt_final_target_tstz_in,
            dt_final_target_tstz_nin   => dt_final_target_tstz_nin,
            dt_final_result_tstz_in    => dt_final_result_tstz_in,
            dt_final_result_tstz_nin   => dt_final_result_tstz_nin,
            dt_cancel_tstz_in          => dt_cancel_tstz_in,
            dt_cancel_tstz_nin         => dt_cancel_tstz_nin,
            id_prof_performed_in       => id_prof_performed_in,
            id_prof_performed_nin      => id_prof_performed_nin,
            start_time_in              => start_time_in,
            start_time_nin             => start_time_nin,
            end_time_in                => end_time_in,
            end_time_nin               => end_time_nin,
            flg_referral_in            => flg_referral_in,
            flg_referral_nin           => flg_referral_nin,
            id_cancel_reason_in        => id_cancel_reason_in,
            id_cancel_reason_nin       => id_cancel_reason_nin,
            create_user_in             => create_user_in,
            create_user_nin            => create_user_nin,
            create_time_in             => create_time_in,
            create_time_nin            => create_time_nin,
            create_institution_in      => create_institution_in,
            create_institution_nin     => create_institution_nin,
            update_user_in             => update_user_in,
            update_user_nin            => update_user_nin,
            update_time_in             => update_time_in,
            update_time_nin            => update_time_nin,
            update_institution_in      => update_institution_in,
            update_institution_nin     => update_institution_nin,
            flg_clinical_purpose_in    => flg_clinical_purpose_in,
            flg_clinical_purpose_nin   => flg_clinical_purpose_nin,
            flg_location_in            => flg_location_in,
            flg_location_nin           => flg_location_nin,
            id_exec_institution_in     => id_exec_institution_in,
            id_exec_institution_nin    => id_exec_institution_nin,
            id_exam_codification_in    => id_exam_codification_in,
            id_exam_codification_nin   => id_exam_codification_nin,
            id_task_dependency_in      => id_task_dependency_in,
            id_task_dependency_nin     => id_task_dependency_nin,
            flg_req_origin_module_in   => flg_req_origin_module_in,
            flg_req_origin_module_nin  => flg_req_origin_module_nin,
            id_prof_performed_reg_in   => id_prof_performed_reg_in,
            id_prof_performed_reg_nin  => id_prof_performed_reg_nin,
            dt_performed_reg_in        => dt_performed_reg_in,
            dt_performed_reg_nin       => dt_performed_reg_nin,
            id_order_recurrence_in     => id_order_recurrence_in,
            id_order_recurrence_nin    => id_order_recurrence_nin,
            flg_fasting_in             => flg_fasting_in,
            flg_fasting_nin            => flg_fasting_nin,
            flg_prn_in                 => flg_prn_in,
            flg_prn_nin                => flg_prn_nin,
            prn_notes_in               => prn_notes_in,
            prn_notes_nin              => prn_notes_nin,
            id_pat_health_plan_in      => id_pat_health_plan_in,
            id_pat_health_plan_nin     => id_pat_health_plan_nin,
            id_cdr_in                  => id_cdr_in,
            id_cdr_nin                 => id_cdr_nin,
            prof_dep_clin_serv_in      => prof_dep_clin_serv_in,
            prof_dep_clin_serv_nin     => prof_dep_clin_serv_nin,
            flg_laterality_in          => flg_laterality_in,
            flg_laterality_nin         => flg_laterality_nin,
            clinical_purpose_notes_in  => clinical_purpose_notes_in,
            clinical_purpose_notes_nin => clinical_purpose_notes_nin,
            id_exam_group_in           => id_exam_group_in,
            id_exam_group_nin          => id_exam_group_nin,
            flg_priority_in            => flg_priority_in,
            flg_priority_nin           => flg_priority_nin,
            notes_patient_in           => notes_patient_in,
            notes_patient_nin          => notes_patient_nin,
            id_prof_last_update_in     => id_prof_last_update_in,
            id_prof_last_update_nin    => id_prof_last_update_nin,
            dt_last_update_tstz_in     => dt_last_update_tstz_in,
            dt_last_update_tstz_nin    => dt_last_update_tstz_nin,
            id_pat_exemption_in        => id_pat_exemption_in,
            id_pat_exemption_nin       => id_pat_exemption_nin,
            id_epis_doc_perform_in     => id_epis_doc_perform_in,
            id_epis_doc_perform_nin    => id_epis_doc_perform_nin,
            id_co_sign_order_in        => id_co_sign_order_in,
            id_co_sign_order_nin       => id_co_sign_order_nin,
            id_co_sign_cancel_in       => id_co_sign_cancel_in,
            id_co_sign_cancel_nin      => id_co_sign_cancel_nin,
            notes_scheduler_in         => notes_scheduler_in,
            notes_scheduler_nin        => notes_scheduler_nin,
            id_clinical_purpose_in     => id_clinical_purpose_in,
            id_clinical_purpose_nin    => id_clinical_purpose_nin,
            diagnosis_notes_in         => diagnosis_notes_in,
            diagnosis_notes_nin        => diagnosis_notes_nin,
            where_in                   => where_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END upd;

    --Update/insert columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_exam_req_det_in        IN exam_req_det.id_exam_req_det%TYPE,
        id_erd_parent_in          IN exam_req_det.id_erd_parent%TYPE DEFAULT NULL,
        id_exam_req_in            IN exam_req_det.id_exam_req%TYPE DEFAULT NULL,
        id_exam_in                IN exam_req_det.id_exam%TYPE DEFAULT NULL,
        flg_status_in             IN exam_req_det.flg_status%TYPE DEFAULT NULL,
        notes_in                  IN exam_req_det.notes%TYPE DEFAULT NULL,
        flg_pre_req_in            IN exam_req_det.flg_pre_req%TYPE DEFAULT NULL,
        id_movement_in            IN exam_req_det.id_movement%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN exam_req_det.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN exam_req_det.notes_cancel%TYPE DEFAULT NULL,
        barcode_in                IN exam_req_det.barcode%TYPE DEFAULT NULL,
        id_room_in                IN exam_req_det.id_room%TYPE DEFAULT NULL,
        notes_tech_in             IN exam_req_det.notes_tech%TYPE DEFAULT NULL,
        id_pat_pregnancy_in       IN exam_req_det.id_pat_pregnancy%TYPE DEFAULT NULL,
        dt_target_tstz_in         IN exam_req_det.dt_target_tstz%TYPE DEFAULT NULL,
        dt_final_target_tstz_in   IN exam_req_det.dt_final_target_tstz%TYPE DEFAULT NULL,
        dt_final_result_tstz_in   IN exam_req_det.dt_final_result_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN exam_req_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        id_prof_performed_in      IN exam_req_det.id_prof_performed%TYPE DEFAULT NULL,
        start_time_in             IN exam_req_det.start_time%TYPE DEFAULT NULL,
        end_time_in               IN exam_req_det.end_time%TYPE DEFAULT NULL,
        flg_referral_in           IN exam_req_det.flg_referral%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN exam_req_det.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in            IN exam_req_det.create_user%TYPE DEFAULT NULL,
        create_time_in            IN exam_req_det.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN exam_req_det.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN exam_req_det.update_user%TYPE DEFAULT NULL,
        update_time_in            IN exam_req_det.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN exam_req_det.update_institution%TYPE DEFAULT NULL,
        flg_clinical_purpose_in   IN exam_req_det.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_location_in           IN exam_req_det.flg_location%TYPE DEFAULT NULL,
        id_exec_institution_in    IN exam_req_det.id_exec_institution%TYPE DEFAULT NULL,
        id_exam_codification_in   IN exam_req_det.id_exam_codification%TYPE DEFAULT NULL,
        id_task_dependency_in     IN exam_req_det.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in  IN exam_req_det.flg_req_origin_module%TYPE DEFAULT NULL,
        id_prof_performed_reg_in  IN exam_req_det.id_prof_performed_reg%TYPE DEFAULT NULL,
        dt_performed_reg_in       IN exam_req_det.dt_performed_reg%TYPE DEFAULT NULL,
        id_order_recurrence_in    IN exam_req_det.id_order_recurrence%TYPE DEFAULT NULL,
        flg_fasting_in            IN exam_req_det.flg_fasting%TYPE DEFAULT NULL,
        flg_prn_in                IN exam_req_det.flg_prn%TYPE DEFAULT NULL,
        prn_notes_in              IN exam_req_det.prn_notes%TYPE DEFAULT NULL,
        id_pat_health_plan_in     IN exam_req_det.id_pat_health_plan%TYPE DEFAULT NULL,
        id_cdr_in                 IN exam_req_det.id_cdr%TYPE DEFAULT NULL,
        prof_dep_clin_serv_in     IN exam_req_det.prof_dep_clin_serv%TYPE DEFAULT NULL,
        flg_laterality_in         IN exam_req_det.flg_laterality%TYPE DEFAULT NULL,
        clinical_purpose_notes_in IN exam_req_det.clinical_purpose_notes%TYPE DEFAULT NULL,
        id_exam_group_in          IN exam_req_det.id_exam_group%TYPE DEFAULT NULL,
        flg_priority_in           IN exam_req_det.flg_priority%TYPE DEFAULT NULL,
        notes_patient_in          IN exam_req_det.notes_patient%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN exam_req_det.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_tstz_in    IN exam_req_det.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_pat_exemption_in       IN exam_req_det.id_pat_exemption%TYPE DEFAULT NULL,
        id_epis_doc_perform_in    IN exam_req_det.id_epis_doc_perform%TYPE DEFAULT NULL,
        id_co_sign_order_in       IN exam_req_det.id_co_sign_order%TYPE DEFAULT NULL,
        id_co_sign_cancel_in      IN exam_req_det.id_co_sign_cancel%TYPE DEFAULT NULL,
        notes_scheduler_in        IN exam_req_det.notes_scheduler%TYPE DEFAULT NULL,
        id_clinical_purpose_in    IN exam_req_det.id_clinical_purpose%TYPE DEFAULT NULL,
        diagnosis_notes_in        IN exam_req_det.diagnosis_notes%TYPE DEFAULT NULL,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_exam_req_det_in        => id_exam_req_det_in,
            id_erd_parent_in          => id_erd_parent_in,
            id_exam_req_in            => id_exam_req_in,
            id_exam_in                => id_exam_in,
            flg_status_in             => flg_status_in,
            notes_in                  => notes_in,
            flg_pre_req_in            => flg_pre_req_in,
            id_movement_in            => id_movement_in,
            id_prof_cancel_in         => id_prof_cancel_in,
            notes_cancel_in           => notes_cancel_in,
            barcode_in                => barcode_in,
            id_room_in                => id_room_in,
            notes_tech_in             => notes_tech_in,
            id_pat_pregnancy_in       => id_pat_pregnancy_in,
            dt_target_tstz_in         => dt_target_tstz_in,
            dt_final_target_tstz_in   => dt_final_target_tstz_in,
            dt_final_result_tstz_in   => dt_final_result_tstz_in,
            dt_cancel_tstz_in         => dt_cancel_tstz_in,
            id_prof_performed_in      => id_prof_performed_in,
            start_time_in             => start_time_in,
            end_time_in               => end_time_in,
            flg_referral_in           => flg_referral_in,
            id_cancel_reason_in       => id_cancel_reason_in,
            create_user_in            => create_user_in,
            create_time_in            => create_time_in,
            create_institution_in     => create_institution_in,
            update_user_in            => update_user_in,
            update_time_in            => update_time_in,
            update_institution_in     => update_institution_in,
            flg_clinical_purpose_in   => flg_clinical_purpose_in,
            flg_location_in           => flg_location_in,
            id_exec_institution_in    => id_exec_institution_in,
            id_exam_codification_in   => id_exam_codification_in,
            id_task_dependency_in     => id_task_dependency_in,
            flg_req_origin_module_in  => flg_req_origin_module_in,
            id_prof_performed_reg_in  => id_prof_performed_reg_in,
            dt_performed_reg_in       => dt_performed_reg_in,
            id_order_recurrence_in    => id_order_recurrence_in,
            flg_fasting_in            => flg_fasting_in,
            flg_prn_in                => flg_prn_in,
            prn_notes_in              => prn_notes_in,
            id_pat_health_plan_in     => id_pat_health_plan_in,
            id_cdr_in                 => id_cdr_in,
            prof_dep_clin_serv_in     => prof_dep_clin_serv_in,
            flg_laterality_in         => flg_laterality_in,
            clinical_purpose_notes_in => clinical_purpose_notes_in,
            id_exam_group_in          => id_exam_group_in,
            flg_priority_in           => flg_priority_in,
            notes_patient_in          => notes_patient_in,
            id_prof_last_update_in    => id_prof_last_update_in,
            dt_last_update_tstz_in    => dt_last_update_tstz_in,
            id_pat_exemption_in       => id_pat_exemption_in,
            id_epis_doc_perform_in    => id_epis_doc_perform_in,
            id_co_sign_order_in       => id_co_sign_order_in,
            id_co_sign_cancel_in      => id_co_sign_cancel_in,
            notes_scheduler_in        => notes_scheduler_in,
            id_clinical_purpose_in    => id_clinical_purpose_in,
            diagnosis_notes_in        => diagnosis_notes_in,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
        IF SQL%ROWCOUNT = 0
        THEN
            ins(id_exam_req_det_in        => id_exam_req_det_in,
                id_erd_parent_in          => id_erd_parent_in,
                id_exam_req_in            => id_exam_req_in,
                id_exam_in                => id_exam_in,
                flg_status_in             => flg_status_in,
                notes_in                  => notes_in,
                flg_pre_req_in            => flg_pre_req_in,
                id_movement_in            => id_movement_in,
                id_prof_cancel_in         => id_prof_cancel_in,
                notes_cancel_in           => notes_cancel_in,
                barcode_in                => barcode_in,
                id_room_in                => id_room_in,
                notes_tech_in             => notes_tech_in,
                id_pat_pregnancy_in       => id_pat_pregnancy_in,
                dt_target_tstz_in         => dt_target_tstz_in,
                dt_final_target_tstz_in   => dt_final_target_tstz_in,
                dt_final_result_tstz_in   => dt_final_result_tstz_in,
                dt_cancel_tstz_in         => dt_cancel_tstz_in,
                id_prof_performed_in      => id_prof_performed_in,
                start_time_in             => start_time_in,
                end_time_in               => end_time_in,
                flg_referral_in           => flg_referral_in,
                id_cancel_reason_in       => id_cancel_reason_in,
                create_user_in            => create_user_in,
                create_time_in            => create_time_in,
                create_institution_in     => create_institution_in,
                update_user_in            => update_user_in,
                update_time_in            => update_time_in,
                update_institution_in     => update_institution_in,
                flg_clinical_purpose_in   => flg_clinical_purpose_in,
                flg_location_in           => flg_location_in,
                id_exec_institution_in    => id_exec_institution_in,
                id_exam_codification_in   => id_exam_codification_in,
                id_task_dependency_in     => id_task_dependency_in,
                flg_req_origin_module_in  => flg_req_origin_module_in,
                id_prof_performed_reg_in  => id_prof_performed_reg_in,
                dt_performed_reg_in       => dt_performed_reg_in,
                id_order_recurrence_in    => id_order_recurrence_in,
                flg_fasting_in            => flg_fasting_in,
                flg_prn_in                => flg_prn_in,
                prn_notes_in              => prn_notes_in,
                id_pat_health_plan_in     => id_pat_health_plan_in,
                id_cdr_in                 => id_cdr_in,
                prof_dep_clin_serv_in     => prof_dep_clin_serv_in,
                flg_laterality_in         => flg_laterality_in,
                clinical_purpose_notes_in => clinical_purpose_notes_in,
                id_exam_group_in          => id_exam_group_in,
                flg_priority_in           => flg_priority_in,
                notes_patient_in          => notes_patient_in,
                id_prof_last_update_in    => id_prof_last_update_in,
                dt_last_update_tstz_in    => dt_last_update_tstz_in,
                id_pat_exemption_in       => id_pat_exemption_in,
                id_epis_doc_perform_in    => id_epis_doc_perform_in,
                id_co_sign_order_in       => id_co_sign_order_in,
                id_co_sign_cancel_in      => id_co_sign_cancel_in,
                notes_scheduler_in        => notes_scheduler_in,
                id_clinical_purpose_in    => id_clinical_purpose_in,
                diagnosis_notes_in        => diagnosis_notes_in,
                handle_error_in           => handle_error_in,
                rows_out                  => rows_out);
        END IF;
    END upd_ins;

    --Update/insert columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_exam_req_det_in        IN exam_req_det.id_exam_req_det%TYPE,
        id_erd_parent_in          IN exam_req_det.id_erd_parent%TYPE DEFAULT NULL,
        id_exam_req_in            IN exam_req_det.id_exam_req%TYPE DEFAULT NULL,
        id_exam_in                IN exam_req_det.id_exam%TYPE DEFAULT NULL,
        flg_status_in             IN exam_req_det.flg_status%TYPE DEFAULT NULL,
        notes_in                  IN exam_req_det.notes%TYPE DEFAULT NULL,
        flg_pre_req_in            IN exam_req_det.flg_pre_req%TYPE DEFAULT NULL,
        id_movement_in            IN exam_req_det.id_movement%TYPE DEFAULT NULL,
        id_prof_cancel_in         IN exam_req_det.id_prof_cancel%TYPE DEFAULT NULL,
        notes_cancel_in           IN exam_req_det.notes_cancel%TYPE DEFAULT NULL,
        barcode_in                IN exam_req_det.barcode%TYPE DEFAULT NULL,
        id_room_in                IN exam_req_det.id_room%TYPE DEFAULT NULL,
        notes_tech_in             IN exam_req_det.notes_tech%TYPE DEFAULT NULL,
        id_pat_pregnancy_in       IN exam_req_det.id_pat_pregnancy%TYPE DEFAULT NULL,
        dt_target_tstz_in         IN exam_req_det.dt_target_tstz%TYPE DEFAULT NULL,
        dt_final_target_tstz_in   IN exam_req_det.dt_final_target_tstz%TYPE DEFAULT NULL,
        dt_final_result_tstz_in   IN exam_req_det.dt_final_result_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in         IN exam_req_det.dt_cancel_tstz%TYPE DEFAULT NULL,
        id_prof_performed_in      IN exam_req_det.id_prof_performed%TYPE DEFAULT NULL,
        start_time_in             IN exam_req_det.start_time%TYPE DEFAULT NULL,
        end_time_in               IN exam_req_det.end_time%TYPE DEFAULT NULL,
        flg_referral_in           IN exam_req_det.flg_referral%TYPE DEFAULT NULL,
        id_cancel_reason_in       IN exam_req_det.id_cancel_reason%TYPE DEFAULT NULL,
        create_user_in            IN exam_req_det.create_user%TYPE DEFAULT NULL,
        create_time_in            IN exam_req_det.create_time%TYPE DEFAULT NULL,
        create_institution_in     IN exam_req_det.create_institution%TYPE DEFAULT NULL,
        update_user_in            IN exam_req_det.update_user%TYPE DEFAULT NULL,
        update_time_in            IN exam_req_det.update_time%TYPE DEFAULT NULL,
        update_institution_in     IN exam_req_det.update_institution%TYPE DEFAULT NULL,
        flg_clinical_purpose_in   IN exam_req_det.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_location_in           IN exam_req_det.flg_location%TYPE DEFAULT NULL,
        id_exec_institution_in    IN exam_req_det.id_exec_institution%TYPE DEFAULT NULL,
        id_exam_codification_in   IN exam_req_det.id_exam_codification%TYPE DEFAULT NULL,
        id_task_dependency_in     IN exam_req_det.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in  IN exam_req_det.flg_req_origin_module%TYPE DEFAULT NULL,
        id_prof_performed_reg_in  IN exam_req_det.id_prof_performed_reg%TYPE DEFAULT NULL,
        dt_performed_reg_in       IN exam_req_det.dt_performed_reg%TYPE DEFAULT NULL,
        id_order_recurrence_in    IN exam_req_det.id_order_recurrence%TYPE DEFAULT NULL,
        flg_fasting_in            IN exam_req_det.flg_fasting%TYPE DEFAULT NULL,
        flg_prn_in                IN exam_req_det.flg_prn%TYPE DEFAULT NULL,
        prn_notes_in              IN exam_req_det.prn_notes%TYPE DEFAULT NULL,
        id_pat_health_plan_in     IN exam_req_det.id_pat_health_plan%TYPE DEFAULT NULL,
        id_cdr_in                 IN exam_req_det.id_cdr%TYPE DEFAULT NULL,
        prof_dep_clin_serv_in     IN exam_req_det.prof_dep_clin_serv%TYPE DEFAULT NULL,
        flg_laterality_in         IN exam_req_det.flg_laterality%TYPE DEFAULT NULL,
        clinical_purpose_notes_in IN exam_req_det.clinical_purpose_notes%TYPE DEFAULT NULL,
        id_exam_group_in          IN exam_req_det.id_exam_group%TYPE DEFAULT NULL,
        flg_priority_in           IN exam_req_det.flg_priority%TYPE DEFAULT NULL,
        notes_patient_in          IN exam_req_det.notes_patient%TYPE DEFAULT NULL,
        id_prof_last_update_in    IN exam_req_det.id_prof_last_update%TYPE DEFAULT NULL,
        dt_last_update_tstz_in    IN exam_req_det.dt_last_update_tstz%TYPE DEFAULT NULL,
        id_pat_exemption_in       IN exam_req_det.id_pat_exemption%TYPE DEFAULT NULL,
        id_epis_doc_perform_in    IN exam_req_det.id_epis_doc_perform%TYPE DEFAULT NULL,
        id_co_sign_order_in       IN exam_req_det.id_co_sign_order%TYPE DEFAULT NULL,
        id_co_sign_cancel_in      IN exam_req_det.id_co_sign_cancel%TYPE DEFAULT NULL,
        notes_scheduler_in        IN exam_req_det.notes_scheduler%TYPE DEFAULT NULL,
        id_clinical_purpose_in    IN exam_req_det.id_clinical_purpose%TYPE DEFAULT NULL,
        diagnosis_notes_in        IN exam_req_det.diagnosis_notes%TYPE DEFAULT NULL,
        handle_error_in           IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd_ins(id_exam_req_det_in,
                id_erd_parent_in,
                id_exam_req_in,
                id_exam_in,
                flg_status_in,
                notes_in,
                flg_pre_req_in,
                id_movement_in,
                id_prof_cancel_in,
                notes_cancel_in,
                barcode_in,
                id_room_in,
                notes_tech_in,
                id_pat_pregnancy_in,
                dt_target_tstz_in,
                dt_final_target_tstz_in,
                dt_final_result_tstz_in,
                dt_cancel_tstz_in,
                id_prof_performed_in,
                start_time_in,
                end_time_in,
                flg_referral_in,
                id_cancel_reason_in,
                create_user_in,
                create_time_in,
                create_institution_in,
                update_user_in,
                update_time_in,
                update_institution_in,
                flg_clinical_purpose_in,
                flg_location_in,
                id_exec_institution_in,
                id_exam_codification_in,
                id_task_dependency_in,
                flg_req_origin_module_in,
                id_prof_performed_reg_in,
                dt_performed_reg_in,
                id_order_recurrence_in,
                flg_fasting_in,
                flg_prn_in,
                prn_notes_in,
                id_pat_health_plan_in,
                id_cdr_in,
                prof_dep_clin_serv_in,
                flg_laterality_in,
                clinical_purpose_notes_in,
                id_exam_group_in,
                flg_priority_in,
                notes_patient_in,
                id_prof_last_update_in,
                dt_last_update_tstz_in,
                id_pat_exemption_in,
                id_epis_doc_perform_in,
                id_co_sign_order_in,
                id_co_sign_cancel_in,
                notes_scheduler_in,
                id_clinical_purpose_in,
                diagnosis_notes_in,
                handle_error_in,
                rows_out);
    END upd_ins;

    --Update by record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN exam_req_det%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_exam_req_det_in        => rec_in.id_exam_req_det,
            id_erd_parent_in          => rec_in.id_erd_parent,
            id_exam_req_in            => rec_in.id_exam_req,
            id_exam_in                => rec_in.id_exam,
            flg_status_in             => rec_in.flg_status,
            notes_in                  => rec_in.notes,
            flg_pre_req_in            => rec_in.flg_pre_req,
            id_movement_in            => rec_in.id_movement,
            id_prof_cancel_in         => rec_in.id_prof_cancel,
            notes_cancel_in           => rec_in.notes_cancel,
            barcode_in                => rec_in.barcode,
            id_room_in                => rec_in.id_room,
            notes_tech_in             => rec_in.notes_tech,
            id_pat_pregnancy_in       => rec_in.id_pat_pregnancy,
            dt_target_tstz_in         => rec_in.dt_target_tstz,
            dt_final_target_tstz_in   => rec_in.dt_final_target_tstz,
            dt_final_result_tstz_in   => rec_in.dt_final_result_tstz,
            dt_cancel_tstz_in         => rec_in.dt_cancel_tstz,
            id_prof_performed_in      => rec_in.id_prof_performed,
            start_time_in             => rec_in.start_time,
            end_time_in               => rec_in.end_time,
            flg_referral_in           => rec_in.flg_referral,
            id_cancel_reason_in       => rec_in.id_cancel_reason,
            create_user_in            => rec_in.create_user,
            create_time_in            => rec_in.create_time,
            create_institution_in     => rec_in.create_institution,
            update_user_in            => rec_in.update_user,
            update_time_in            => rec_in.update_time,
            update_institution_in     => rec_in.update_institution,
            flg_clinical_purpose_in   => rec_in.flg_clinical_purpose,
            flg_location_in           => rec_in.flg_location,
            id_exec_institution_in    => rec_in.id_exec_institution,
            id_exam_codification_in   => rec_in.id_exam_codification,
            id_task_dependency_in     => rec_in.id_task_dependency,
            flg_req_origin_module_in  => rec_in.flg_req_origin_module,
            id_prof_performed_reg_in  => rec_in.id_prof_performed_reg,
            dt_performed_reg_in       => rec_in.dt_performed_reg,
            id_order_recurrence_in    => rec_in.id_order_recurrence,
            flg_fasting_in            => rec_in.flg_fasting,
            flg_prn_in                => rec_in.flg_prn,
            prn_notes_in              => rec_in.prn_notes,
            id_pat_health_plan_in     => rec_in.id_pat_health_plan,
            id_cdr_in                 => rec_in.id_cdr,
            prof_dep_clin_serv_in     => rec_in.prof_dep_clin_serv,
            flg_laterality_in         => rec_in.flg_laterality,
            clinical_purpose_notes_in => rec_in.clinical_purpose_notes,
            id_exam_group_in          => rec_in.id_exam_group,
            flg_priority_in           => rec_in.flg_priority,
            notes_patient_in          => rec_in.notes_patient,
            id_prof_last_update_in    => rec_in.id_prof_last_update,
            dt_last_update_tstz_in    => rec_in.dt_last_update_tstz,
            id_pat_exemption_in       => rec_in.id_pat_exemption,
            id_epis_doc_perform_in    => rec_in.id_epis_doc_perform,
            id_co_sign_order_in       => rec_in.id_co_sign_order,
            id_co_sign_cancel_in      => rec_in.id_co_sign_cancel,
            notes_scheduler_in        => rec_in.notes_scheduler,
            id_clinical_purpose_in    => rec_in.id_clinical_purpose,
            diagnosis_notes_in        => rec_in.diagnosis_notes,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
    END upd;

    --Update by record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN exam_req_det%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_exam_req_det_in        => rec_in.id_exam_req_det,
            id_erd_parent_in          => rec_in.id_erd_parent,
            id_exam_req_in            => rec_in.id_exam_req,
            id_exam_in                => rec_in.id_exam,
            flg_status_in             => rec_in.flg_status,
            notes_in                  => rec_in.notes,
            flg_pre_req_in            => rec_in.flg_pre_req,
            id_movement_in            => rec_in.id_movement,
            id_prof_cancel_in         => rec_in.id_prof_cancel,
            notes_cancel_in           => rec_in.notes_cancel,
            barcode_in                => rec_in.barcode,
            id_room_in                => rec_in.id_room,
            notes_tech_in             => rec_in.notes_tech,
            id_pat_pregnancy_in       => rec_in.id_pat_pregnancy,
            dt_target_tstz_in         => rec_in.dt_target_tstz,
            dt_final_target_tstz_in   => rec_in.dt_final_target_tstz,
            dt_final_result_tstz_in   => rec_in.dt_final_result_tstz,
            dt_cancel_tstz_in         => rec_in.dt_cancel_tstz,
            id_prof_performed_in      => rec_in.id_prof_performed,
            start_time_in             => rec_in.start_time,
            end_time_in               => rec_in.end_time,
            flg_referral_in           => rec_in.flg_referral,
            id_cancel_reason_in       => rec_in.id_cancel_reason,
            create_user_in            => rec_in.create_user,
            create_time_in            => rec_in.create_time,
            create_institution_in     => rec_in.create_institution,
            update_user_in            => rec_in.update_user,
            update_time_in            => rec_in.update_time,
            update_institution_in     => rec_in.update_institution,
            flg_clinical_purpose_in   => rec_in.flg_clinical_purpose,
            flg_location_in           => rec_in.flg_location,
            id_exec_institution_in    => rec_in.id_exec_institution,
            id_exam_codification_in   => rec_in.id_exam_codification,
            id_task_dependency_in     => rec_in.id_task_dependency,
            flg_req_origin_module_in  => rec_in.flg_req_origin_module,
            id_prof_performed_reg_in  => rec_in.id_prof_performed_reg,
            dt_performed_reg_in       => rec_in.dt_performed_reg,
            id_order_recurrence_in    => rec_in.id_order_recurrence,
            flg_fasting_in            => rec_in.flg_fasting,
            flg_prn_in                => rec_in.flg_prn,
            prn_notes_in              => rec_in.prn_notes,
            id_pat_health_plan_in     => rec_in.id_pat_health_plan,
            id_cdr_in                 => rec_in.id_cdr,
            prof_dep_clin_serv_in     => rec_in.prof_dep_clin_serv,
            flg_laterality_in         => rec_in.flg_laterality,
            clinical_purpose_notes_in => rec_in.clinical_purpose_notes,
            id_exam_group_in          => rec_in.id_exam_group,
            flg_priority_in           => rec_in.flg_priority,
            notes_patient_in          => rec_in.notes_patient,
            id_prof_last_update_in    => rec_in.id_prof_last_update,
            dt_last_update_tstz_in    => rec_in.dt_last_update_tstz,
            id_pat_exemption_in       => rec_in.id_pat_exemption,
            id_epis_doc_perform_in    => rec_in.id_epis_doc_perform,
            id_co_sign_order_in       => rec_in.id_co_sign_order,
            id_co_sign_cancel_in      => rec_in.id_co_sign_cancel,
            notes_scheduler_in        => rec_in.notes_scheduler,
            id_clinical_purpose_in    => rec_in.id_clinical_purpose,
            diagnosis_notes_in        => rec_in.diagnosis_notes,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
    END upd;

    --Update with collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN exam_req_det_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    ) IS
        l_id_exam_req_det        id_exam_req_det_cc;
        l_id_erd_parent          id_erd_parent_cc;
        l_id_exam_req            id_exam_req_cc;
        l_id_exam                id_exam_cc;
        l_flg_status             flg_status_cc;
        l_notes                  notes_cc;
        l_flg_pre_req            flg_pre_req_cc;
        l_id_movement            id_movement_cc;
        l_id_prof_cancel         id_prof_cancel_cc;
        l_notes_cancel           notes_cancel_cc;
        l_barcode                barcode_cc;
        l_id_room                id_room_cc;
        l_notes_tech             notes_tech_cc;
        l_id_pat_pregnancy       id_pat_pregnancy_cc;
        l_dt_target_tstz         dt_target_tstz_cc;
        l_dt_final_target_tstz   dt_final_target_tstz_cc;
        l_dt_final_result_tstz   dt_final_result_tstz_cc;
        l_dt_cancel_tstz         dt_cancel_tstz_cc;
        l_id_prof_performed      id_prof_performed_cc;
        l_start_time             start_time_cc;
        l_end_time               end_time_cc;
        l_flg_referral           flg_referral_cc;
        l_id_cancel_reason       id_cancel_reason_cc;
        l_create_user            create_user_cc;
        l_create_time            create_time_cc;
        l_create_institution     create_institution_cc;
        l_update_user            update_user_cc;
        l_update_time            update_time_cc;
        l_update_institution     update_institution_cc;
        l_flg_clinical_purpose   flg_clinical_purpose_cc;
        l_flg_location           flg_location_cc;
        l_id_exec_institution    id_exec_institution_cc;
        l_id_exam_codification   id_exam_codification_cc;
        l_id_task_dependency     id_task_dependency_cc;
        l_flg_req_origin_module  flg_req_origin_module_cc;
        l_id_prof_performed_reg  id_prof_performed_reg_cc;
        l_dt_performed_reg       dt_performed_reg_cc;
        l_id_order_recurrence    id_order_recurrence_cc;
        l_flg_fasting            flg_fasting_cc;
        l_flg_prn                flg_prn_cc;
        l_prn_notes              prn_notes_cc;
        l_id_pat_health_plan     id_pat_health_plan_cc;
        l_id_cdr                 id_cdr_cc;
        l_prof_dep_clin_serv     prof_dep_clin_serv_cc;
        l_flg_laterality         flg_laterality_cc;
        l_clinical_purpose_notes clinical_purpose_notes_cc;
        l_id_exam_group          id_exam_group_cc;
        l_flg_priority           flg_priority_cc;
        l_notes_patient          notes_patient_cc;
        l_id_prof_last_update    id_prof_last_update_cc;
        l_dt_last_update_tstz    dt_last_update_tstz_cc;
        l_id_pat_exemption       id_pat_exemption_cc;
        l_id_epis_doc_perform    id_epis_doc_perform_cc;
        l_id_co_sign_order       id_co_sign_order_cc;
        l_id_co_sign_cancel      id_co_sign_cancel_cc;
        l_notes_scheduler        notes_scheduler_cc;
        l_id_clinical_purpose    id_clinical_purpose_cc;
        l_diagnosis_notes        diagnosis_notes_cc;
    BEGIN
        FOR i IN col_in.first .. col_in.last
        LOOP
            l_id_exam_req_det(i) := col_in(i).id_exam_req_det;
            l_id_erd_parent(i) := col_in(i).id_erd_parent;
            l_id_exam_req(i) := col_in(i).id_exam_req;
            l_id_exam(i) := col_in(i).id_exam;
            l_flg_status(i) := col_in(i).flg_status;
            l_notes(i) := col_in(i).notes;
            l_flg_pre_req(i) := col_in(i).flg_pre_req;
            l_id_movement(i) := col_in(i).id_movement;
            l_id_prof_cancel(i) := col_in(i).id_prof_cancel;
            l_notes_cancel(i) := col_in(i).notes_cancel;
            l_barcode(i) := col_in(i).barcode;
            l_id_room(i) := col_in(i).id_room;
            l_notes_tech(i) := col_in(i).notes_tech;
            l_id_pat_pregnancy(i) := col_in(i).id_pat_pregnancy;
            l_dt_target_tstz(i) := col_in(i).dt_target_tstz;
            l_dt_final_target_tstz(i) := col_in(i).dt_final_target_tstz;
            l_dt_final_result_tstz(i) := col_in(i).dt_final_result_tstz;
            l_dt_cancel_tstz(i) := col_in(i).dt_cancel_tstz;
            l_id_prof_performed(i) := col_in(i).id_prof_performed;
            l_start_time(i) := col_in(i).start_time;
            l_end_time(i) := col_in(i).end_time;
            l_flg_referral(i) := col_in(i).flg_referral;
            l_id_cancel_reason(i) := col_in(i).id_cancel_reason;
            l_create_user(i) := col_in(i).create_user;
            l_create_time(i) := col_in(i).create_time;
            l_create_institution(i) := col_in(i).create_institution;
            l_update_user(i) := col_in(i).update_user;
            l_update_time(i) := col_in(i).update_time;
            l_update_institution(i) := col_in(i).update_institution;
            l_flg_clinical_purpose(i) := col_in(i).flg_clinical_purpose;
            l_flg_location(i) := col_in(i).flg_location;
            l_id_exec_institution(i) := col_in(i).id_exec_institution;
            l_id_exam_codification(i) := col_in(i).id_exam_codification;
            l_id_task_dependency(i) := col_in(i).id_task_dependency;
            l_flg_req_origin_module(i) := col_in(i).flg_req_origin_module;
            l_id_prof_performed_reg(i) := col_in(i).id_prof_performed_reg;
            l_dt_performed_reg(i) := col_in(i).dt_performed_reg;
            l_id_order_recurrence(i) := col_in(i).id_order_recurrence;
            l_flg_fasting(i) := col_in(i).flg_fasting;
            l_flg_prn(i) := col_in(i).flg_prn;
            l_prn_notes(i) := col_in(i).prn_notes;
            l_id_pat_health_plan(i) := col_in(i).id_pat_health_plan;
            l_id_cdr(i) := col_in(i).id_cdr;
            l_prof_dep_clin_serv(i) := col_in(i).prof_dep_clin_serv;
            l_flg_laterality(i) := col_in(i).flg_laterality;
            l_clinical_purpose_notes(i) := col_in(i).clinical_purpose_notes;
            l_id_exam_group(i) := col_in(i).id_exam_group;
            l_flg_priority(i) := col_in(i).flg_priority;
            l_notes_patient(i) := col_in(i).notes_patient;
            l_id_prof_last_update(i) := col_in(i).id_prof_last_update;
            l_dt_last_update_tstz(i) := col_in(i).dt_last_update_tstz;
            l_id_pat_exemption(i) := col_in(i).id_pat_exemption;
            l_id_epis_doc_perform(i) := col_in(i).id_epis_doc_perform;
            l_id_co_sign_order(i) := col_in(i).id_co_sign_order;
            l_id_co_sign_cancel(i) := col_in(i).id_co_sign_cancel;
            l_notes_scheduler(i) := col_in(i).notes_scheduler;
            l_id_clinical_purpose(i) := col_in(i).id_clinical_purpose;
            l_diagnosis_notes(i) := col_in(i).diagnosis_notes;
        END LOOP;
        IF nvl(ignore_if_null_in, FALSE)
        THEN
            -- Set any columns to their current values
            -- if incoming value is NULL.
            -- Put WHEN clause on column-level triggers!
            FORALL i IN col_in.first .. col_in.last
                UPDATE exam_req_det
                   SET id_erd_parent          = nvl(l_id_erd_parent(i), id_erd_parent),
                       id_exam_req            = nvl(l_id_exam_req(i), id_exam_req),
                       id_exam                = nvl(l_id_exam(i), id_exam),
                       flg_status             = nvl(l_flg_status(i), flg_status),
                       notes                  = nvl(l_notes(i), notes),
                       flg_pre_req            = nvl(l_flg_pre_req(i), flg_pre_req),
                       id_movement            = nvl(l_id_movement(i), id_movement),
                       id_prof_cancel         = nvl(l_id_prof_cancel(i), id_prof_cancel),
                       notes_cancel           = nvl(l_notes_cancel(i), notes_cancel),
                       barcode                = nvl(l_barcode(i), barcode),
                       id_room                = nvl(l_id_room(i), id_room),
                       notes_tech             = nvl(l_notes_tech(i), notes_tech),
                       id_pat_pregnancy       = nvl(l_id_pat_pregnancy(i), id_pat_pregnancy),
                       dt_target_tstz         = nvl(l_dt_target_tstz(i), dt_target_tstz),
                       dt_final_target_tstz   = nvl(l_dt_final_target_tstz(i), dt_final_target_tstz),
                       dt_final_result_tstz   = nvl(l_dt_final_result_tstz(i), dt_final_result_tstz),
                       dt_cancel_tstz         = nvl(l_dt_cancel_tstz(i), dt_cancel_tstz),
                       id_prof_performed      = nvl(l_id_prof_performed(i), id_prof_performed),
                       start_time             = nvl(l_start_time(i), start_time),
                       end_time               = nvl(l_end_time(i), end_time),
                       flg_referral           = nvl(l_flg_referral(i), flg_referral),
                       id_cancel_reason       = nvl(l_id_cancel_reason(i), id_cancel_reason),
                       create_user            = nvl(l_create_user(i), create_user),
                       create_time            = nvl(l_create_time(i), create_time),
                       create_institution     = nvl(l_create_institution(i), create_institution),
                       update_user            = nvl(l_update_user(i), update_user),
                       update_time            = nvl(l_update_time(i), update_time),
                       update_institution     = nvl(l_update_institution(i), update_institution),
                       flg_clinical_purpose   = nvl(l_flg_clinical_purpose(i), flg_clinical_purpose),
                       flg_location           = nvl(l_flg_location(i), flg_location),
                       id_exec_institution    = nvl(l_id_exec_institution(i), id_exec_institution),
                       id_exam_codification   = nvl(l_id_exam_codification(i), id_exam_codification),
                       id_task_dependency     = nvl(l_id_task_dependency(i), id_task_dependency),
                       flg_req_origin_module  = nvl(l_flg_req_origin_module(i), flg_req_origin_module),
                       id_prof_performed_reg  = nvl(l_id_prof_performed_reg(i), id_prof_performed_reg),
                       dt_performed_reg       = nvl(l_dt_performed_reg(i), dt_performed_reg),
                       id_order_recurrence    = nvl(l_id_order_recurrence(i), id_order_recurrence),
                       flg_fasting            = nvl(l_flg_fasting(i), flg_fasting),
                       flg_prn                = nvl(l_flg_prn(i), flg_prn),
                       prn_notes              = nvl(l_prn_notes(i), prn_notes),
                       id_pat_health_plan     = nvl(l_id_pat_health_plan(i), id_pat_health_plan),
                       id_cdr                 = nvl(l_id_cdr(i), id_cdr),
                       prof_dep_clin_serv     = nvl(l_prof_dep_clin_serv(i), prof_dep_clin_serv),
                       flg_laterality         = nvl(l_flg_laterality(i), flg_laterality),
                       clinical_purpose_notes = nvl(l_clinical_purpose_notes(i), clinical_purpose_notes),
                       id_exam_group          = nvl(l_id_exam_group(i), id_exam_group),
                       flg_priority           = nvl(l_flg_priority(i), flg_priority),
                       notes_patient          = nvl(l_notes_patient(i), notes_patient),
                       id_prof_last_update    = nvl(l_id_prof_last_update(i), id_prof_last_update),
                       dt_last_update_tstz    = nvl(l_dt_last_update_tstz(i), dt_last_update_tstz),
                       id_pat_exemption       = nvl(l_id_pat_exemption(i), id_pat_exemption),
                       id_epis_doc_perform    = nvl(l_id_epis_doc_perform(i), id_epis_doc_perform),
                       id_co_sign_order       = nvl(l_id_co_sign_order(i), id_co_sign_order),
                       id_co_sign_cancel      = nvl(l_id_co_sign_cancel(i), id_co_sign_cancel),
                       notes_scheduler        = nvl(l_notes_scheduler(i), notes_scheduler),
                       id_clinical_purpose    = nvl(l_id_clinical_purpose(i), id_clinical_purpose),
                       diagnosis_notes        = nvl(l_diagnosis_notes(i), diagnosis_notes)
                 WHERE id_exam_req_det = l_id_exam_req_det(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        ELSE
            FORALL i IN col_in.first .. col_in.last
                UPDATE exam_req_det
                   SET id_erd_parent          = l_id_erd_parent(i),
                       id_exam_req            = l_id_exam_req(i),
                       id_exam                = l_id_exam(i),
                       flg_status             = l_flg_status(i),
                       notes                  = l_notes(i),
                       flg_pre_req            = l_flg_pre_req(i),
                       id_movement            = l_id_movement(i),
                       id_prof_cancel         = l_id_prof_cancel(i),
                       notes_cancel           = l_notes_cancel(i),
                       barcode                = l_barcode(i),
                       id_room                = l_id_room(i),
                       notes_tech             = l_notes_tech(i),
                       id_pat_pregnancy       = l_id_pat_pregnancy(i),
                       dt_target_tstz         = l_dt_target_tstz(i),
                       dt_final_target_tstz   = l_dt_final_target_tstz(i),
                       dt_final_result_tstz   = l_dt_final_result_tstz(i),
                       dt_cancel_tstz         = l_dt_cancel_tstz(i),
                       id_prof_performed      = l_id_prof_performed(i),
                       start_time             = l_start_time(i),
                       end_time               = l_end_time(i),
                       flg_referral           = l_flg_referral(i),
                       id_cancel_reason       = l_id_cancel_reason(i),
                       create_user            = l_create_user(i),
                       create_time            = l_create_time(i),
                       create_institution     = l_create_institution(i),
                       update_user            = l_update_user(i),
                       update_time            = l_update_time(i),
                       update_institution     = l_update_institution(i),
                       flg_clinical_purpose   = l_flg_clinical_purpose(i),
                       flg_location           = l_flg_location(i),
                       id_exec_institution    = l_id_exec_institution(i),
                       id_exam_codification   = l_id_exam_codification(i),
                       id_task_dependency     = l_id_task_dependency(i),
                       flg_req_origin_module  = l_flg_req_origin_module(i),
                       id_prof_performed_reg  = l_id_prof_performed_reg(i),
                       dt_performed_reg       = l_dt_performed_reg(i),
                       id_order_recurrence    = l_id_order_recurrence(i),
                       flg_fasting            = l_flg_fasting(i),
                       flg_prn                = l_flg_prn(i),
                       prn_notes              = l_prn_notes(i),
                       id_pat_health_plan     = l_id_pat_health_plan(i),
                       id_cdr                 = l_id_cdr(i),
                       prof_dep_clin_serv     = l_prof_dep_clin_serv(i),
                       flg_laterality         = l_flg_laterality(i),
                       clinical_purpose_notes = l_clinical_purpose_notes(i),
                       id_exam_group          = l_id_exam_group(i),
                       flg_priority           = l_flg_priority(i),
                       notes_patient          = l_notes_patient(i),
                       id_prof_last_update    = l_id_prof_last_update(i),
                       dt_last_update_tstz    = l_dt_last_update_tstz(i),
                       id_pat_exemption       = l_id_pat_exemption(i),
                       id_epis_doc_perform    = l_id_epis_doc_perform(i),
                       id_co_sign_order       = l_id_co_sign_order(i),
                       id_co_sign_cancel      = l_id_co_sign_cancel(i),
                       notes_scheduler        = l_notes_scheduler(i),
                       id_clinical_purpose    = l_id_clinical_purpose(i),
                       diagnosis_notes        = l_diagnosis_notes(i)
                 WHERE id_exam_req_det = l_id_exam_req_det(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update with collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN exam_req_det_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(col_in, ignore_if_null_in, handle_error_in, rows_out);
    END upd;

    --Dynamic update string
    FUNCTION dynupdstr
    (
        colname_in IN all_tab_columns.column_name%TYPE,
        where_in   IN VARCHAR2 := NULL
    ) RETURN VARCHAR2 IS
    BEGIN
        RETURN 'BEGIN UPDATE exam_req_det
SET ' || colname_in || ' = :value
 WHERE ' || nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;';
    END dynupdstr;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (with rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN UPDATE exam_req_det
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    END increment_onecol;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (without rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        EXECUTE IMMEDIATE 'UPDATE exam_req_det
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1');
    END increment_onecol;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_exam_req_det_in IN exam_req_det.id_exam_req_det%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM exam_req_det
         WHERE id_exam_req_det = id_exam_req_det_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_exam_req_det_in IN exam_req_det.id_exam_req_det%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del(id_exam_req_det_in => id_exam_req_det_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del;

    -- Delete all rows for this ERD_CRE_FK foreign key value
    PROCEDURE del_erd_cre_fk
    (
        id_cancel_reason_in IN exam_req_det.id_cancel_reason%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM exam_req_det
         WHERE id_cancel_reason = id_cancel_reason_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_erd_cre_fk;

    -- Delete all rows for this ERD_DCS_FK foreign key value
    PROCEDURE del_erd_dcs_fk
    (
        prof_dep_clin_serv_in IN exam_req_det.prof_dep_clin_serv%TYPE,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM exam_req_det
         WHERE prof_dep_clin_serv = prof_dep_clin_serv_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_erd_dcs_fk;

    -- Delete all rows for this ERD_ECN_FK foreign key value
    PROCEDURE del_erd_ecn_fk
    (
        id_exam_codification_in IN exam_req_det.id_exam_codification%TYPE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM exam_req_det
         WHERE id_exam_codification = id_exam_codification_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_erd_ecn_fk;

    -- Delete all rows for this ERD_EPIS_DOC_PERFORM_FK foreign key value
    PROCEDURE del_erd_epis_doc_perform_fk
    (
        id_epis_doc_perform_in IN exam_req_det.id_epis_doc_perform%TYPE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM exam_req_det
         WHERE id_epis_doc_perform = id_epis_doc_perform_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_erd_epis_doc_perform_fk;

    -- Delete all rows for this ERD_ERD_FK foreign key value
    PROCEDURE del_erd_erd_fk
    (
        id_erd_parent_in IN exam_req_det.id_erd_parent%TYPE,
        handle_error_in  IN BOOLEAN := TRUE,
        rows_out         OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM exam_req_det
         WHERE id_erd_parent = id_erd_parent_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_erd_erd_fk;

    -- Delete all rows for this ERD_EREQ_FK foreign key value
    PROCEDURE del_erd_ereq_fk
    (
        id_exam_req_in  IN exam_req_det.id_exam_req%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM exam_req_det
         WHERE id_exam_req = id_exam_req_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_erd_ereq_fk;

    -- Delete all rows for this ERD_EXAM_FK foreign key value
    PROCEDURE del_erd_exam_fk
    (
        id_exam_in      IN exam_req_det.id_exam%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM exam_req_det
         WHERE id_exam = id_exam_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_erd_exam_fk;

    -- Delete all rows for this ERD_ID_CDR_FK foreign key value
    PROCEDURE del_erd_id_cdr_fk
    (
        id_cdr_in       IN exam_req_det.id_cdr%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM exam_req_det
         WHERE id_cdr = id_cdr_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_erd_id_cdr_fk;

    -- Delete all rows for this ERD_ID_ORDER_RECURRENCE_FK foreign key value
    PROCEDURE del_erd_id_order_recurrence_fk
    (
        id_order_recurrence_in IN exam_req_det.id_order_recurrence%TYPE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM exam_req_det
         WHERE id_order_recurrence = id_order_recurrence_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_erd_id_order_recurrence_fk;

    -- Delete all rows for this ERD_INN_FK foreign key value
    PROCEDURE del_erd_inn_fk
    (
        id_exec_institution_in IN exam_req_det.id_exec_institution%TYPE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM exam_req_det
         WHERE id_exec_institution = id_exec_institution_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_erd_inn_fk;

    -- Delete all rows for this ERD_MOP_FK foreign key value
    PROCEDURE del_erd_mop_fk
    (
        id_clinical_purpose_in IN exam_req_det.id_clinical_purpose%TYPE,
        handle_error_in        IN BOOLEAN := TRUE,
        rows_out               OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM exam_req_det
         WHERE id_clinical_purpose = id_clinical_purpose_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_erd_mop_fk;

    -- Delete all rows for this ERD_MOV_FK foreign key value
    PROCEDURE del_erd_mov_fk
    (
        id_movement_in  IN exam_req_det.id_movement%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM exam_req_det
         WHERE id_movement = id_movement_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_erd_mov_fk;

    -- Delete all rows for this ERD_PHN_FK foreign key value
    PROCEDURE del_erd_phn_fk
    (
        id_pat_health_plan_in IN exam_req_det.id_pat_health_plan%TYPE,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM exam_req_det
         WHERE id_pat_health_plan = id_pat_health_plan_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_erd_phn_fk;

    -- Delete all rows for this ERD_PIO_FK foreign key value
    PROCEDURE del_erd_pio_fk
    (
        id_pat_exemption_in IN exam_req_det.id_pat_exemption%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM exam_req_det
         WHERE id_pat_exemption = id_pat_exemption_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_erd_pio_fk;

    -- Delete all rows for this ERD_PPY_FK foreign key value
    PROCEDURE del_erd_ppy_fk
    (
        id_pat_pregnancy_in IN exam_req_det.id_pat_pregnancy%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM exam_req_det
         WHERE id_pat_pregnancy = id_pat_pregnancy_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_erd_ppy_fk;

    -- Delete all rows for this ERD_PROF_FK foreign key value
    PROCEDURE del_erd_prof_fk
    (
        id_prof_cancel_in IN exam_req_det.id_prof_cancel%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM exam_req_det
         WHERE id_prof_cancel = id_prof_cancel_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_erd_prof_fk;

    -- Delete all rows for this ERD_PROF_PERFORMED_REG_FK foreign key value
    PROCEDURE del_erd_prof_performed_reg_fk
    (
        id_prof_performed_reg_in IN exam_req_det.id_prof_performed_reg%TYPE,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM exam_req_det
         WHERE id_prof_performed_reg = id_prof_performed_reg_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_erd_prof_performed_reg_fk;

    -- Delete all rows for this ERD_ROOM_FK foreign key value
    PROCEDURE del_erd_room_fk
    (
        id_room_in      IN exam_req_det.id_room%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM exam_req_det
         WHERE id_room = id_room_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_erd_room_fk;

    -- Delete all rows for this ERD_TDETD_FK foreign key value
    PROCEDURE del_erd_tdetd_fk
    (
        id_task_dependency_in IN exam_req_det.id_task_dependency%TYPE,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM exam_req_det
         WHERE id_task_dependency = id_task_dependency_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_erd_tdetd_fk;

    -- Delete all rows for this ERD_CRE_FK foreign key value
    PROCEDURE del_erd_cre_fk
    (
        id_cancel_reason_in IN exam_req_det.id_cancel_reason%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_erd_cre_fk(id_cancel_reason_in => id_cancel_reason_in,
                       handle_error_in     => handle_error_in,
                       rows_out            => rows_out);
    END del_erd_cre_fk;

    -- Delete all rows for this ERD_DCS_FK foreign key value
    PROCEDURE del_erd_dcs_fk
    (
        prof_dep_clin_serv_in IN exam_req_det.prof_dep_clin_serv%TYPE,
        handle_error_in       IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_erd_dcs_fk(prof_dep_clin_serv_in => prof_dep_clin_serv_in,
                       handle_error_in       => handle_error_in,
                       rows_out              => rows_out);
    END del_erd_dcs_fk;

    -- Delete all rows for this ERD_ECN_FK foreign key value
    PROCEDURE del_erd_ecn_fk
    (
        id_exam_codification_in IN exam_req_det.id_exam_codification%TYPE,
        handle_error_in         IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_erd_ecn_fk(id_exam_codification_in => id_exam_codification_in,
                       handle_error_in         => handle_error_in,
                       rows_out                => rows_out);
    END del_erd_ecn_fk;

    -- Delete all rows for this ERD_EPIS_DOC_PERFORM_FK foreign key value
    PROCEDURE del_erd_epis_doc_perform_fk
    (
        id_epis_doc_perform_in IN exam_req_det.id_epis_doc_perform%TYPE,
        handle_error_in        IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_erd_epis_doc_perform_fk(id_epis_doc_perform_in => id_epis_doc_perform_in,
                                    handle_error_in        => handle_error_in,
                                    rows_out               => rows_out);
    END del_erd_epis_doc_perform_fk;

    -- Delete all rows for this ERD_ERD_FK foreign key value
    PROCEDURE del_erd_erd_fk
    (
        id_erd_parent_in IN exam_req_det.id_erd_parent%TYPE,
        handle_error_in  IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_erd_erd_fk(id_erd_parent_in => id_erd_parent_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_erd_erd_fk;

    -- Delete all rows for this ERD_EREQ_FK foreign key value
    PROCEDURE del_erd_ereq_fk
    (
        id_exam_req_in  IN exam_req_det.id_exam_req%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_erd_ereq_fk(id_exam_req_in => id_exam_req_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_erd_ereq_fk;

    -- Delete all rows for this ERD_EXAM_FK foreign key value
    PROCEDURE del_erd_exam_fk
    (
        id_exam_in      IN exam_req_det.id_exam%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_erd_exam_fk(id_exam_in => id_exam_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_erd_exam_fk;

    -- Delete all rows for this ERD_ID_CDR_FK foreign key value
    PROCEDURE del_erd_id_cdr_fk
    (
        id_cdr_in       IN exam_req_det.id_cdr%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_erd_id_cdr_fk(id_cdr_in => id_cdr_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_erd_id_cdr_fk;

    -- Delete all rows for this ERD_ID_ORDER_RECURRENCE_FK foreign key value
    PROCEDURE del_erd_id_order_recurrence_fk
    (
        id_order_recurrence_in IN exam_req_det.id_order_recurrence%TYPE,
        handle_error_in        IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_erd_id_order_recurrence_fk(id_order_recurrence_in => id_order_recurrence_in,
                                       handle_error_in        => handle_error_in,
                                       rows_out               => rows_out);
    END del_erd_id_order_recurrence_fk;

    -- Delete all rows for this ERD_INN_FK foreign key value
    PROCEDURE del_erd_inn_fk
    (
        id_exec_institution_in IN exam_req_det.id_exec_institution%TYPE,
        handle_error_in        IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_erd_inn_fk(id_exec_institution_in => id_exec_institution_in,
                       handle_error_in        => handle_error_in,
                       rows_out               => rows_out);
    END del_erd_inn_fk;

    -- Delete all rows for this ERD_MOP_FK foreign key value
    PROCEDURE del_erd_mop_fk
    (
        id_clinical_purpose_in IN exam_req_det.id_clinical_purpose%TYPE,
        handle_error_in        IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_erd_mop_fk(id_clinical_purpose_in => id_clinical_purpose_in,
                       handle_error_in        => handle_error_in,
                       rows_out               => rows_out);
    END del_erd_mop_fk;

    -- Delete all rows for this ERD_MOV_FK foreign key value
    PROCEDURE del_erd_mov_fk
    (
        id_movement_in  IN exam_req_det.id_movement%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_erd_mov_fk(id_movement_in => id_movement_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_erd_mov_fk;

    -- Delete all rows for this ERD_PHN_FK foreign key value
    PROCEDURE del_erd_phn_fk
    (
        id_pat_health_plan_in IN exam_req_det.id_pat_health_plan%TYPE,
        handle_error_in       IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_erd_phn_fk(id_pat_health_plan_in => id_pat_health_plan_in,
                       handle_error_in       => handle_error_in,
                       rows_out              => rows_out);
    END del_erd_phn_fk;

    -- Delete all rows for this ERD_PIO_FK foreign key value
    PROCEDURE del_erd_pio_fk
    (
        id_pat_exemption_in IN exam_req_det.id_pat_exemption%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_erd_pio_fk(id_pat_exemption_in => id_pat_exemption_in,
                       handle_error_in     => handle_error_in,
                       rows_out            => rows_out);
    END del_erd_pio_fk;

    -- Delete all rows for this ERD_PPY_FK foreign key value
    PROCEDURE del_erd_ppy_fk
    (
        id_pat_pregnancy_in IN exam_req_det.id_pat_pregnancy%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_erd_ppy_fk(id_pat_pregnancy_in => id_pat_pregnancy_in,
                       handle_error_in     => handle_error_in,
                       rows_out            => rows_out);
    END del_erd_ppy_fk;

    -- Delete all rows for this ERD_PROF_FK foreign key value
    PROCEDURE del_erd_prof_fk
    (
        id_prof_cancel_in IN exam_req_det.id_prof_cancel%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_erd_prof_fk(id_prof_cancel_in => id_prof_cancel_in,
                        handle_error_in   => handle_error_in,
                        rows_out          => rows_out);
    END del_erd_prof_fk;

    -- Delete all rows for this ERD_PROF_PERFORMED_REG_FK foreign key value
    PROCEDURE del_erd_prof_performed_reg_fk
    (
        id_prof_performed_reg_in IN exam_req_det.id_prof_performed_reg%TYPE,
        handle_error_in          IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_erd_prof_performed_reg_fk(id_prof_performed_reg_in => id_prof_performed_reg_in,
                                      handle_error_in          => handle_error_in,
                                      rows_out                 => rows_out);
    END del_erd_prof_performed_reg_fk;

    -- Delete all rows for this ERD_ROOM_FK foreign key value
    PROCEDURE del_erd_room_fk
    (
        id_room_in      IN exam_req_det.id_room%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_erd_room_fk(id_room_in => id_room_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_erd_room_fk;

    -- Delete all rows for this ERD_TDETD_FK foreign key value
    PROCEDURE del_erd_tdetd_fk
    (
        id_task_dependency_in IN exam_req_det.id_task_dependency%TYPE,
        handle_error_in       IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_erd_tdetd_fk(id_task_dependency_in => id_task_dependency_in,
                         handle_error_in       => handle_error_in,
                         rows_out              => rows_out);
    END del_erd_tdetd_fk;

    -- Deletions using dynamic SQL
    FUNCTION dyndelstr(where_in IN VARCHAR2) RETURN VARCHAR2 IS
    BEGIN
        IF where_in IS NULL
        THEN
            RETURN 'DELETE FROM exam_req_det';
        ELSE
            RETURN 'DELETE FROM exam_req_det WHERE ' || where_in;
        END IF;
    END dyndelstr;
    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyndelstr(where_clause_in) ||
                          ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyndelstr(where_clause_in);
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(exam_req_det_inout IN OUT exam_req_det%ROWTYPE) IS
    BEGIN
        exam_req_det_inout.id_exam_req_det        := NULL;
        exam_req_det_inout.id_erd_parent          := NULL;
        exam_req_det_inout.id_exam_req            := NULL;
        exam_req_det_inout.id_exam                := NULL;
        exam_req_det_inout.flg_status             := NULL;
        exam_req_det_inout.notes                  := NULL;
        exam_req_det_inout.flg_pre_req            := NULL;
        exam_req_det_inout.id_movement            := NULL;
        exam_req_det_inout.id_prof_cancel         := NULL;
        exam_req_det_inout.notes_cancel           := NULL;
        exam_req_det_inout.barcode                := NULL;
        exam_req_det_inout.id_room                := NULL;
        exam_req_det_inout.notes_tech             := NULL;
        exam_req_det_inout.id_pat_pregnancy       := NULL;
        exam_req_det_inout.dt_target_tstz         := NULL;
        exam_req_det_inout.dt_final_target_tstz   := NULL;
        exam_req_det_inout.dt_final_result_tstz   := NULL;
        exam_req_det_inout.dt_cancel_tstz         := NULL;
        exam_req_det_inout.id_prof_performed      := NULL;
        exam_req_det_inout.start_time             := NULL;
        exam_req_det_inout.end_time               := NULL;
        exam_req_det_inout.flg_referral           := NULL;
        exam_req_det_inout.id_cancel_reason       := NULL;
        exam_req_det_inout.create_user            := NULL;
        exam_req_det_inout.create_time            := NULL;
        exam_req_det_inout.create_institution     := NULL;
        exam_req_det_inout.update_user            := NULL;
        exam_req_det_inout.update_time            := NULL;
        exam_req_det_inout.update_institution     := NULL;
        exam_req_det_inout.flg_clinical_purpose   := NULL;
        exam_req_det_inout.flg_location           := NULL;
        exam_req_det_inout.id_exec_institution    := NULL;
        exam_req_det_inout.id_exam_codification   := NULL;
        exam_req_det_inout.id_task_dependency     := NULL;
        exam_req_det_inout.flg_req_origin_module  := NULL;
        exam_req_det_inout.id_prof_performed_reg  := NULL;
        exam_req_det_inout.dt_performed_reg       := NULL;
        exam_req_det_inout.id_order_recurrence    := NULL;
        exam_req_det_inout.flg_fasting            := NULL;
        exam_req_det_inout.flg_prn                := NULL;
        exam_req_det_inout.prn_notes              := NULL;
        exam_req_det_inout.id_pat_health_plan     := NULL;
        exam_req_det_inout.id_cdr                 := NULL;
        exam_req_det_inout.prof_dep_clin_serv     := NULL;
        exam_req_det_inout.flg_laterality         := NULL;
        exam_req_det_inout.clinical_purpose_notes := NULL;
        exam_req_det_inout.id_exam_group          := NULL;
        exam_req_det_inout.flg_priority           := NULL;
        exam_req_det_inout.notes_patient          := NULL;
        exam_req_det_inout.id_prof_last_update    := NULL;
        exam_req_det_inout.dt_last_update_tstz    := NULL;
        exam_req_det_inout.id_pat_exemption       := NULL;
        exam_req_det_inout.id_epis_doc_perform    := NULL;
        exam_req_det_inout.id_co_sign_order       := NULL;
        exam_req_det_inout.id_co_sign_cancel      := NULL;
        exam_req_det_inout.notes_scheduler        := NULL;
        exam_req_det_inout.id_clinical_purpose    := NULL;
        exam_req_det_inout.diagnosis_notes        := NULL;
    END initrec;

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN exam_req_det%ROWTYPE IS
        l_exam_req_det exam_req_det%ROWTYPE;
    BEGIN
        RETURN l_exam_req_det;
    END initrec;

    --get data from rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN exam_req_det_tc IS
        data exam_req_det_tc;
    BEGIN
        SELECT *
          BULK COLLECT
          INTO data
          FROM exam_req_det
         WHERE ROWID IN (SELECT /*+ OPT_ESTIMATE(TABLE t ROWS=1) */
                          *
                           FROM TABLE(rows_in) t);
        RETURN data;
    END get_data_rowid;

    --get data from rowid (pragma autonomous transacion)
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN exam_req_det_tc IS
        data exam_req_det_tc;
        PRAGMA AUTONOMOUS_TRANSACTION;
    BEGIN
        data := get_data_rowid(rows_in);
        COMMIT;
        RETURN data;
    
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'get_data_rowid_pat');
            ROLLBACK;
        
    END get_data_rowid_pat;

BEGIN
    NULL;
END ts_exam_req_det;
/
