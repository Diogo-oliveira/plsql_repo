/*-- Last Change Revision: $Rev: 2028377 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:45:25 +0100 (ter, 02 ago 2022) $*/
CREATE OR REPLACE PACKAGE BODY ts_room
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2018-01-19 13:04:59
| Created By: ALERT
*/
 IS

    e_null_column_value EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_null_column_value, -1400);

    e_existing_fky_reference EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_existing_fky_reference, -2266);

    e_check_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_check_constraint_failure, -2290);

    e_no_parent_key EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_no_parent_key, -2291);

    e_child_record_found EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_child_record_found, -2292);

    e_forall_error EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_forall_error, -24381);

    -- Defined for backward compatibilty.
    e_integ_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_integ_constraint_failure, -2291);

    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN room.id_room%TYPE IS
        retval room.id_room%TYPE;
    BEGIN
        IF sequence_in IS NULL
        THEN
            retval := seq_room.nextval;
        ELSE
            EXECUTE IMMEDIATE 'SELECT ' || sequence_in || '.NEXTVAL FROM dual'
                INTO retval;
        END IF;
        RETURN retval;
    END next_key;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        flg_prof_in                  IN room.flg_prof%TYPE DEFAULT NULL,
        id_department_in             IN room.id_department%TYPE DEFAULT NULL,
        code_room_in                 IN room.code_room%TYPE DEFAULT NULL,
        capacity_in                  IN room.capacity%TYPE DEFAULT NULL,
        interval_time_in             IN room.interval_time%TYPE DEFAULT NULL,
        flg_recovery_in              IN room.flg_recovery%TYPE DEFAULT NULL,
        flg_lab_in                   IN room.flg_lab%TYPE DEFAULT NULL,
        rank_in                      IN room.rank%TYPE DEFAULT NULL,
        adw_last_update_in           IN room.adw_last_update%TYPE DEFAULT SYSDATE,
        flg_wait_in                  IN room.flg_wait%TYPE DEFAULT NULL,
        flg_wl_in                    IN room.flg_wl%TYPE DEFAULT NULL,
        img_name_in                  IN room.img_name%TYPE DEFAULT NULL,
        flg_transp_in                IN room.flg_transp%TYPE DEFAULT NULL,
        code_abbreviation_in         IN room.code_abbreviation%TYPE DEFAULT '',
        id_floors_department_in      IN room.id_floors_department%TYPE DEFAULT NULL,
        flg_available_in             IN room.flg_available%TYPE DEFAULT NULL,
        create_user_in               IN room.create_user%TYPE DEFAULT NULL,
        create_time_in               IN room.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN room.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN room.update_user%TYPE DEFAULT NULL,
        update_time_in               IN room.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN room.update_institution%TYPE DEFAULT NULL,
        id_room_type_in              IN room.id_room_type%TYPE DEFAULT NULL,
        flg_schedulable_in           IN room.flg_schedulable%TYPE DEFAULT 'Y',
        flg_status_in                IN room.flg_status%TYPE DEFAULT NULL,
        flg_parameterization_type_in IN room.flg_parameterization_type%TYPE DEFAULT 'C',
        id_professional_in           IN room.id_professional%TYPE DEFAULT NULL,
        dt_creation_in               IN room.dt_creation%TYPE DEFAULT NULL,
        dt_last_update_in            IN room.dt_last_update%TYPE DEFAULT NULL,
        flg_selected_specialties_in  IN room.flg_selected_specialties%TYPE DEFAULT NULL,
        desc_room_in                 IN room.desc_room%TYPE DEFAULT NULL,
        desc_room_abbreviation_in    IN room.desc_room_abbreviation%TYPE DEFAULT NULL,
        flg_icu_in                   IN room.flg_icu%TYPE DEFAULT 'N',
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_pky room.id_room%TYPE := next_key;
    BEGIN
        ins(id_room_in                   => l_pky,
            flg_prof_in                  => flg_prof_in,
            id_department_in             => id_department_in,
            code_room_in                 => code_room_in,
            capacity_in                  => capacity_in,
            interval_time_in             => interval_time_in,
            flg_recovery_in              => flg_recovery_in,
            flg_lab_in                   => flg_lab_in,
            rank_in                      => rank_in,
            adw_last_update_in           => adw_last_update_in,
            flg_wait_in                  => flg_wait_in,
            flg_wl_in                    => flg_wl_in,
            img_name_in                  => img_name_in,
            flg_transp_in                => flg_transp_in,
            code_abbreviation_in         => code_abbreviation_in,
            id_floors_department_in      => id_floors_department_in,
            flg_available_in             => flg_available_in,
            create_user_in               => create_user_in,
            create_time_in               => create_time_in,
            create_institution_in        => create_institution_in,
            update_user_in               => update_user_in,
            update_time_in               => update_time_in,
            update_institution_in        => update_institution_in,
            id_room_type_in              => id_room_type_in,
            flg_schedulable_in           => flg_schedulable_in,
            flg_status_in                => flg_status_in,
            flg_parameterization_type_in => flg_parameterization_type_in,
            id_professional_in           => id_professional_in,
            dt_creation_in               => dt_creation_in,
            dt_last_update_in            => dt_last_update_in,
            flg_selected_specialties_in  => flg_selected_specialties_in,
            desc_room_in                 => desc_room_in,
            desc_room_abbreviation_in    => desc_room_abbreviation_in,
            flg_icu_in                   => flg_icu_in,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
    END ins;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        flg_prof_in                  IN room.flg_prof%TYPE DEFAULT NULL,
        id_department_in             IN room.id_department%TYPE DEFAULT NULL,
        code_room_in                 IN room.code_room%TYPE DEFAULT NULL,
        capacity_in                  IN room.capacity%TYPE DEFAULT NULL,
        interval_time_in             IN room.interval_time%TYPE DEFAULT NULL,
        flg_recovery_in              IN room.flg_recovery%TYPE DEFAULT NULL,
        flg_lab_in                   IN room.flg_lab%TYPE DEFAULT NULL,
        rank_in                      IN room.rank%TYPE DEFAULT NULL,
        adw_last_update_in           IN room.adw_last_update%TYPE DEFAULT SYSDATE,
        flg_wait_in                  IN room.flg_wait%TYPE DEFAULT NULL,
        flg_wl_in                    IN room.flg_wl%TYPE DEFAULT NULL,
        img_name_in                  IN room.img_name%TYPE DEFAULT NULL,
        flg_transp_in                IN room.flg_transp%TYPE DEFAULT NULL,
        code_abbreviation_in         IN room.code_abbreviation%TYPE DEFAULT '',
        id_floors_department_in      IN room.id_floors_department%TYPE DEFAULT NULL,
        flg_available_in             IN room.flg_available%TYPE DEFAULT NULL,
        create_user_in               IN room.create_user%TYPE DEFAULT NULL,
        create_time_in               IN room.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN room.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN room.update_user%TYPE DEFAULT NULL,
        update_time_in               IN room.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN room.update_institution%TYPE DEFAULT NULL,
        id_room_type_in              IN room.id_room_type%TYPE DEFAULT NULL,
        flg_schedulable_in           IN room.flg_schedulable%TYPE DEFAULT 'Y',
        flg_status_in                IN room.flg_status%TYPE DEFAULT NULL,
        flg_parameterization_type_in IN room.flg_parameterization_type%TYPE DEFAULT 'C',
        id_professional_in           IN room.id_professional%TYPE DEFAULT NULL,
        dt_creation_in               IN room.dt_creation%TYPE DEFAULT NULL,
        dt_last_update_in            IN room.dt_last_update%TYPE DEFAULT NULL,
        flg_selected_specialties_in  IN room.flg_selected_specialties%TYPE DEFAULT NULL,
        desc_room_in                 IN room.desc_room%TYPE DEFAULT NULL,
        desc_room_abbreviation_in    IN room.desc_room_abbreviation%TYPE DEFAULT NULL,
        flg_icu_in                   IN room.flg_icu%TYPE DEFAULT 'N',
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(flg_prof_in                  => flg_prof_in,
            id_department_in             => id_department_in,
            code_room_in                 => code_room_in,
            capacity_in                  => capacity_in,
            interval_time_in             => interval_time_in,
            flg_recovery_in              => flg_recovery_in,
            flg_lab_in                   => flg_lab_in,
            rank_in                      => rank_in,
            adw_last_update_in           => adw_last_update_in,
            flg_wait_in                  => flg_wait_in,
            flg_wl_in                    => flg_wl_in,
            img_name_in                  => img_name_in,
            flg_transp_in                => flg_transp_in,
            code_abbreviation_in         => code_abbreviation_in,
            id_floors_department_in      => id_floors_department_in,
            flg_available_in             => flg_available_in,
            create_user_in               => create_user_in,
            create_time_in               => create_time_in,
            create_institution_in        => create_institution_in,
            update_user_in               => update_user_in,
            update_time_in               => update_time_in,
            update_institution_in        => update_institution_in,
            id_room_type_in              => id_room_type_in,
            flg_schedulable_in           => flg_schedulable_in,
            flg_status_in                => flg_status_in,
            flg_parameterization_type_in => flg_parameterization_type_in,
            id_professional_in           => id_professional_in,
            dt_creation_in               => dt_creation_in,
            dt_last_update_in            => dt_last_update_in,
            flg_selected_specialties_in  => flg_selected_specialties_in,
            desc_room_in                 => desc_room_in,
            desc_room_abbreviation_in    => desc_room_abbreviation_in,
            flg_icu_in                   => flg_icu_in,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
    END ins;

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        flg_prof_in                  IN room.flg_prof%TYPE DEFAULT NULL,
        id_department_in             IN room.id_department%TYPE DEFAULT NULL,
        code_room_in                 IN room.code_room%TYPE DEFAULT NULL,
        capacity_in                  IN room.capacity%TYPE DEFAULT NULL,
        interval_time_in             IN room.interval_time%TYPE DEFAULT NULL,
        flg_recovery_in              IN room.flg_recovery%TYPE DEFAULT NULL,
        flg_lab_in                   IN room.flg_lab%TYPE DEFAULT NULL,
        rank_in                      IN room.rank%TYPE DEFAULT NULL,
        adw_last_update_in           IN room.adw_last_update%TYPE DEFAULT SYSDATE,
        flg_wait_in                  IN room.flg_wait%TYPE DEFAULT NULL,
        flg_wl_in                    IN room.flg_wl%TYPE DEFAULT NULL,
        img_name_in                  IN room.img_name%TYPE DEFAULT NULL,
        flg_transp_in                IN room.flg_transp%TYPE DEFAULT NULL,
        code_abbreviation_in         IN room.code_abbreviation%TYPE DEFAULT '',
        id_floors_department_in      IN room.id_floors_department%TYPE DEFAULT NULL,
        flg_available_in             IN room.flg_available%TYPE DEFAULT NULL,
        create_user_in               IN room.create_user%TYPE DEFAULT NULL,
        create_time_in               IN room.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN room.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN room.update_user%TYPE DEFAULT NULL,
        update_time_in               IN room.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN room.update_institution%TYPE DEFAULT NULL,
        id_room_type_in              IN room.id_room_type%TYPE DEFAULT NULL,
        flg_schedulable_in           IN room.flg_schedulable%TYPE DEFAULT 'Y',
        flg_status_in                IN room.flg_status%TYPE DEFAULT NULL,
        flg_parameterization_type_in IN room.flg_parameterization_type%TYPE DEFAULT 'C',
        id_professional_in           IN room.id_professional%TYPE DEFAULT NULL,
        dt_creation_in               IN room.dt_creation%TYPE DEFAULT NULL,
        dt_last_update_in            IN room.dt_last_update%TYPE DEFAULT NULL,
        flg_selected_specialties_in  IN room.flg_selected_specialties%TYPE DEFAULT NULL,
        desc_room_in                 IN room.desc_room%TYPE DEFAULT NULL,
        desc_room_abbreviation_in    IN room.desc_room_abbreviation%TYPE DEFAULT NULL,
        flg_icu_in                   IN room.flg_icu%TYPE DEFAULT 'N',
        id_room_out                  IN OUT room.id_room%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_pky room.id_room%TYPE := next_key;
    BEGIN
        ins(id_room_in                   => l_pky,
            flg_prof_in                  => flg_prof_in,
            id_department_in             => id_department_in,
            code_room_in                 => code_room_in,
            capacity_in                  => capacity_in,
            interval_time_in             => interval_time_in,
            flg_recovery_in              => flg_recovery_in,
            flg_lab_in                   => flg_lab_in,
            rank_in                      => rank_in,
            adw_last_update_in           => adw_last_update_in,
            flg_wait_in                  => flg_wait_in,
            flg_wl_in                    => flg_wl_in,
            img_name_in                  => img_name_in,
            flg_transp_in                => flg_transp_in,
            code_abbreviation_in         => code_abbreviation_in,
            id_floors_department_in      => id_floors_department_in,
            flg_available_in             => flg_available_in,
            create_user_in               => create_user_in,
            create_time_in               => create_time_in,
            create_institution_in        => create_institution_in,
            update_user_in               => update_user_in,
            update_time_in               => update_time_in,
            update_institution_in        => update_institution_in,
            id_room_type_in              => id_room_type_in,
            flg_schedulable_in           => flg_schedulable_in,
            flg_status_in                => flg_status_in,
            flg_parameterization_type_in => flg_parameterization_type_in,
            id_professional_in           => id_professional_in,
            dt_creation_in               => dt_creation_in,
            dt_last_update_in            => dt_last_update_in,
            flg_selected_specialties_in  => flg_selected_specialties_in,
            desc_room_in                 => desc_room_in,
            desc_room_abbreviation_in    => desc_room_abbreviation_in,
            flg_icu_in                   => flg_icu_in,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
        id_room_out := l_pky;
    END ins;

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        flg_prof_in                  IN room.flg_prof%TYPE DEFAULT NULL,
        id_department_in             IN room.id_department%TYPE DEFAULT NULL,
        code_room_in                 IN room.code_room%TYPE DEFAULT NULL,
        capacity_in                  IN room.capacity%TYPE DEFAULT NULL,
        interval_time_in             IN room.interval_time%TYPE DEFAULT NULL,
        flg_recovery_in              IN room.flg_recovery%TYPE DEFAULT NULL,
        flg_lab_in                   IN room.flg_lab%TYPE DEFAULT NULL,
        rank_in                      IN room.rank%TYPE DEFAULT NULL,
        adw_last_update_in           IN room.adw_last_update%TYPE DEFAULT SYSDATE,
        flg_wait_in                  IN room.flg_wait%TYPE DEFAULT NULL,
        flg_wl_in                    IN room.flg_wl%TYPE DEFAULT NULL,
        img_name_in                  IN room.img_name%TYPE DEFAULT NULL,
        flg_transp_in                IN room.flg_transp%TYPE DEFAULT NULL,
        code_abbreviation_in         IN room.code_abbreviation%TYPE DEFAULT '',
        id_floors_department_in      IN room.id_floors_department%TYPE DEFAULT NULL,
        flg_available_in             IN room.flg_available%TYPE DEFAULT NULL,
        create_user_in               IN room.create_user%TYPE DEFAULT NULL,
        create_time_in               IN room.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN room.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN room.update_user%TYPE DEFAULT NULL,
        update_time_in               IN room.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN room.update_institution%TYPE DEFAULT NULL,
        id_room_type_in              IN room.id_room_type%TYPE DEFAULT NULL,
        flg_schedulable_in           IN room.flg_schedulable%TYPE DEFAULT 'Y',
        flg_status_in                IN room.flg_status%TYPE DEFAULT NULL,
        flg_parameterization_type_in IN room.flg_parameterization_type%TYPE DEFAULT 'C',
        id_professional_in           IN room.id_professional%TYPE DEFAULT NULL,
        dt_creation_in               IN room.dt_creation%TYPE DEFAULT NULL,
        dt_last_update_in            IN room.dt_last_update%TYPE DEFAULT NULL,
        flg_selected_specialties_in  IN room.flg_selected_specialties%TYPE DEFAULT NULL,
        desc_room_in                 IN room.desc_room%TYPE DEFAULT NULL,
        desc_room_abbreviation_in    IN room.desc_room_abbreviation%TYPE DEFAULT NULL,
        flg_icu_in                   IN room.flg_icu%TYPE DEFAULT 'N',
        id_room_out                  IN OUT room.id_room%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(flg_prof_in                  => flg_prof_in,
            id_department_in             => id_department_in,
            code_room_in                 => code_room_in,
            capacity_in                  => capacity_in,
            interval_time_in             => interval_time_in,
            flg_recovery_in              => flg_recovery_in,
            flg_lab_in                   => flg_lab_in,
            rank_in                      => rank_in,
            adw_last_update_in           => adw_last_update_in,
            flg_wait_in                  => flg_wait_in,
            flg_wl_in                    => flg_wl_in,
            img_name_in                  => img_name_in,
            flg_transp_in                => flg_transp_in,
            code_abbreviation_in         => code_abbreviation_in,
            id_floors_department_in      => id_floors_department_in,
            flg_available_in             => flg_available_in,
            create_user_in               => create_user_in,
            create_time_in               => create_time_in,
            create_institution_in        => create_institution_in,
            update_user_in               => update_user_in,
            update_time_in               => update_time_in,
            update_institution_in        => update_institution_in,
            id_room_type_in              => id_room_type_in,
            flg_schedulable_in           => flg_schedulable_in,
            flg_status_in                => flg_status_in,
            flg_parameterization_type_in => flg_parameterization_type_in,
            id_professional_in           => id_professional_in,
            dt_creation_in               => dt_creation_in,
            dt_last_update_in            => dt_last_update_in,
            flg_selected_specialties_in  => flg_selected_specialties_in,
            desc_room_in                 => desc_room_in,
            desc_room_abbreviation_in    => desc_room_abbreviation_in,
            flg_icu_in                   => flg_icu_in,
            id_room_out                  => id_room_out,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
    END ins;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        flg_prof_in                  IN room.flg_prof%TYPE DEFAULT NULL,
        id_department_in             IN room.id_department%TYPE DEFAULT NULL,
        code_room_in                 IN room.code_room%TYPE DEFAULT NULL,
        capacity_in                  IN room.capacity%TYPE DEFAULT NULL,
        interval_time_in             IN room.interval_time%TYPE DEFAULT NULL,
        flg_recovery_in              IN room.flg_recovery%TYPE DEFAULT NULL,
        flg_lab_in                   IN room.flg_lab%TYPE DEFAULT NULL,
        rank_in                      IN room.rank%TYPE DEFAULT NULL,
        adw_last_update_in           IN room.adw_last_update%TYPE DEFAULT SYSDATE,
        flg_wait_in                  IN room.flg_wait%TYPE DEFAULT NULL,
        flg_wl_in                    IN room.flg_wl%TYPE DEFAULT NULL,
        img_name_in                  IN room.img_name%TYPE DEFAULT NULL,
        flg_transp_in                IN room.flg_transp%TYPE DEFAULT NULL,
        code_abbreviation_in         IN room.code_abbreviation%TYPE DEFAULT '',
        id_floors_department_in      IN room.id_floors_department%TYPE DEFAULT NULL,
        flg_available_in             IN room.flg_available%TYPE DEFAULT NULL,
        create_user_in               IN room.create_user%TYPE DEFAULT NULL,
        create_time_in               IN room.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN room.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN room.update_user%TYPE DEFAULT NULL,
        update_time_in               IN room.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN room.update_institution%TYPE DEFAULT NULL,
        id_room_type_in              IN room.id_room_type%TYPE DEFAULT NULL,
        flg_schedulable_in           IN room.flg_schedulable%TYPE DEFAULT 'Y',
        flg_status_in                IN room.flg_status%TYPE DEFAULT NULL,
        flg_parameterization_type_in IN room.flg_parameterization_type%TYPE DEFAULT 'C',
        id_professional_in           IN room.id_professional%TYPE DEFAULT NULL,
        dt_creation_in               IN room.dt_creation%TYPE DEFAULT NULL,
        dt_last_update_in            IN room.dt_last_update%TYPE DEFAULT NULL,
        flg_selected_specialties_in  IN room.flg_selected_specialties%TYPE DEFAULT NULL,
        desc_room_in                 IN room.desc_room%TYPE DEFAULT NULL,
        desc_room_abbreviation_in    IN room.desc_room_abbreviation%TYPE DEFAULT NULL,
        flg_icu_in                   IN room.flg_icu%TYPE DEFAULT 'N',
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN room.id_room%TYPE IS
        l_pky room.id_room%TYPE := next_key;
    BEGIN
        ins(id_room_in                   => l_pky,
            flg_prof_in                  => flg_prof_in,
            id_department_in             => id_department_in,
            code_room_in                 => code_room_in,
            capacity_in                  => capacity_in,
            interval_time_in             => interval_time_in,
            flg_recovery_in              => flg_recovery_in,
            flg_lab_in                   => flg_lab_in,
            rank_in                      => rank_in,
            adw_last_update_in           => adw_last_update_in,
            flg_wait_in                  => flg_wait_in,
            flg_wl_in                    => flg_wl_in,
            img_name_in                  => img_name_in,
            flg_transp_in                => flg_transp_in,
            code_abbreviation_in         => code_abbreviation_in,
            id_floors_department_in      => id_floors_department_in,
            flg_available_in             => flg_available_in,
            create_user_in               => create_user_in,
            create_time_in               => create_time_in,
            create_institution_in        => create_institution_in,
            update_user_in               => update_user_in,
            update_time_in               => update_time_in,
            update_institution_in        => update_institution_in,
            id_room_type_in              => id_room_type_in,
            flg_schedulable_in           => flg_schedulable_in,
            flg_status_in                => flg_status_in,
            flg_parameterization_type_in => flg_parameterization_type_in,
            id_professional_in           => id_professional_in,
            dt_creation_in               => dt_creation_in,
            dt_last_update_in            => dt_last_update_in,
            flg_selected_specialties_in  => flg_selected_specialties_in,
            desc_room_in                 => desc_room_in,
            desc_room_abbreviation_in    => desc_room_abbreviation_in,
            flg_icu_in                   => flg_icu_in,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
        RETURN l_pky;
    END ins;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        flg_prof_in                  IN room.flg_prof%TYPE DEFAULT NULL,
        id_department_in             IN room.id_department%TYPE DEFAULT NULL,
        code_room_in                 IN room.code_room%TYPE DEFAULT NULL,
        capacity_in                  IN room.capacity%TYPE DEFAULT NULL,
        interval_time_in             IN room.interval_time%TYPE DEFAULT NULL,
        flg_recovery_in              IN room.flg_recovery%TYPE DEFAULT NULL,
        flg_lab_in                   IN room.flg_lab%TYPE DEFAULT NULL,
        rank_in                      IN room.rank%TYPE DEFAULT NULL,
        adw_last_update_in           IN room.adw_last_update%TYPE DEFAULT SYSDATE,
        flg_wait_in                  IN room.flg_wait%TYPE DEFAULT NULL,
        flg_wl_in                    IN room.flg_wl%TYPE DEFAULT NULL,
        img_name_in                  IN room.img_name%TYPE DEFAULT NULL,
        flg_transp_in                IN room.flg_transp%TYPE DEFAULT NULL,
        code_abbreviation_in         IN room.code_abbreviation%TYPE DEFAULT '',
        id_floors_department_in      IN room.id_floors_department%TYPE DEFAULT NULL,
        flg_available_in             IN room.flg_available%TYPE DEFAULT NULL,
        create_user_in               IN room.create_user%TYPE DEFAULT NULL,
        create_time_in               IN room.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN room.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN room.update_user%TYPE DEFAULT NULL,
        update_time_in               IN room.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN room.update_institution%TYPE DEFAULT NULL,
        id_room_type_in              IN room.id_room_type%TYPE DEFAULT NULL,
        flg_schedulable_in           IN room.flg_schedulable%TYPE DEFAULT 'Y',
        flg_status_in                IN room.flg_status%TYPE DEFAULT NULL,
        flg_parameterization_type_in IN room.flg_parameterization_type%TYPE DEFAULT 'C',
        id_professional_in           IN room.id_professional%TYPE DEFAULT NULL,
        dt_creation_in               IN room.dt_creation%TYPE DEFAULT NULL,
        dt_last_update_in            IN room.dt_last_update%TYPE DEFAULT NULL,
        flg_selected_specialties_in  IN room.flg_selected_specialties%TYPE DEFAULT NULL,
        desc_room_in                 IN room.desc_room%TYPE DEFAULT NULL,
        desc_room_abbreviation_in    IN room.desc_room_abbreviation%TYPE DEFAULT NULL,
        flg_icu_in                   IN room.flg_icu%TYPE DEFAULT 'N',
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN room.id_room%TYPE IS
        l_pky    room.id_room%TYPE := next_key;
        rows_out table_varchar;
    BEGIN
        ins(id_room_in                   => l_pky,
            flg_prof_in                  => flg_prof_in,
            id_department_in             => id_department_in,
            code_room_in                 => code_room_in,
            capacity_in                  => capacity_in,
            interval_time_in             => interval_time_in,
            flg_recovery_in              => flg_recovery_in,
            flg_lab_in                   => flg_lab_in,
            rank_in                      => rank_in,
            adw_last_update_in           => adw_last_update_in,
            flg_wait_in                  => flg_wait_in,
            flg_wl_in                    => flg_wl_in,
            img_name_in                  => img_name_in,
            flg_transp_in                => flg_transp_in,
            code_abbreviation_in         => code_abbreviation_in,
            id_floors_department_in      => id_floors_department_in,
            flg_available_in             => flg_available_in,
            create_user_in               => create_user_in,
            create_time_in               => create_time_in,
            create_institution_in        => create_institution_in,
            update_user_in               => update_user_in,
            update_time_in               => update_time_in,
            update_institution_in        => update_institution_in,
            id_room_type_in              => id_room_type_in,
            flg_schedulable_in           => flg_schedulable_in,
            flg_status_in                => flg_status_in,
            flg_parameterization_type_in => flg_parameterization_type_in,
            id_professional_in           => id_professional_in,
            dt_creation_in               => dt_creation_in,
            dt_last_update_in            => dt_last_update_in,
            flg_selected_specialties_in  => flg_selected_specialties_in,
            desc_room_in                 => desc_room_in,
            desc_room_abbreviation_in    => desc_room_abbreviation_in,
            flg_icu_in                   => flg_icu_in,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
        RETURN l_pky;
    END ins;

    PROCEDURE ins
    (
        id_room_in                   IN room.id_room%TYPE,
        flg_prof_in                  IN room.flg_prof%TYPE DEFAULT NULL,
        id_department_in             IN room.id_department%TYPE DEFAULT NULL,
        code_room_in                 IN room.code_room%TYPE DEFAULT NULL,
        capacity_in                  IN room.capacity%TYPE DEFAULT NULL,
        interval_time_in             IN room.interval_time%TYPE DEFAULT NULL,
        flg_recovery_in              IN room.flg_recovery%TYPE DEFAULT NULL,
        flg_lab_in                   IN room.flg_lab%TYPE DEFAULT NULL,
        rank_in                      IN room.rank%TYPE DEFAULT NULL,
        adw_last_update_in           IN room.adw_last_update%TYPE DEFAULT SYSDATE,
        flg_wait_in                  IN room.flg_wait%TYPE DEFAULT NULL,
        flg_wl_in                    IN room.flg_wl%TYPE DEFAULT NULL,
        img_name_in                  IN room.img_name%TYPE DEFAULT NULL,
        flg_transp_in                IN room.flg_transp%TYPE DEFAULT NULL,
        code_abbreviation_in         IN room.code_abbreviation%TYPE DEFAULT '',
        id_floors_department_in      IN room.id_floors_department%TYPE DEFAULT NULL,
        flg_available_in             IN room.flg_available%TYPE DEFAULT NULL,
        create_user_in               IN room.create_user%TYPE DEFAULT NULL,
        create_time_in               IN room.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN room.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN room.update_user%TYPE DEFAULT NULL,
        update_time_in               IN room.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN room.update_institution%TYPE DEFAULT NULL,
        id_room_type_in              IN room.id_room_type%TYPE DEFAULT NULL,
        flg_schedulable_in           IN room.flg_schedulable%TYPE DEFAULT 'Y',
        flg_status_in                IN room.flg_status%TYPE DEFAULT NULL,
        flg_parameterization_type_in IN room.flg_parameterization_type%TYPE DEFAULT 'C',
        id_professional_in           IN room.id_professional%TYPE DEFAULT NULL,
        dt_creation_in               IN room.dt_creation%TYPE DEFAULT NULL,
        dt_last_update_in            IN room.dt_last_update%TYPE DEFAULT NULL,
        flg_selected_specialties_in  IN room.flg_selected_specialties%TYPE DEFAULT NULL,
        desc_room_in                 IN room.desc_room%TYPE DEFAULT NULL,
        desc_room_abbreviation_in    IN room.desc_room_abbreviation%TYPE DEFAULT NULL,
        flg_icu_in                   IN room.flg_icu%TYPE DEFAULT 'N',
        handle_error_in              IN BOOLEAN := TRUE,
        rows_out                     OUT table_varchar
    ) IS
    BEGIN
        INSERT INTO room
            (id_room,
             flg_prof,
             id_department,
             code_room,
             capacity,
             interval_time,
             flg_recovery,
             flg_lab,
             rank,
             adw_last_update,
             flg_wait,
             flg_wl,
             img_name,
             flg_transp,
             code_abbreviation,
             id_floors_department,
             flg_available,
             create_user,
             create_time,
             create_institution,
             update_user,
             update_time,
             update_institution,
             id_room_type,
             flg_schedulable,
             flg_status,
             flg_parameterization_type,
             id_professional,
             dt_creation,
             dt_last_update,
             flg_selected_specialties,
             desc_room,
             desc_room_abbreviation,
             flg_icu)
        VALUES
            (id_room_in,
             flg_prof_in,
             id_department_in,
             code_room_in,
             capacity_in,
             interval_time_in,
             flg_recovery_in,
             flg_lab_in,
             rank_in,
             adw_last_update_in,
             flg_wait_in,
             flg_wl_in,
             img_name_in,
             flg_transp_in,
             code_abbreviation_in,
             id_floors_department_in,
             flg_available_in,
             create_user_in,
             create_time_in,
             create_institution_in,
             update_user_in,
             update_time_in,
             update_institution_in,
             id_room_type_in,
             flg_schedulable_in,
             flg_status_in,
             flg_parameterization_type_in,
             id_professional_in,
             dt_creation_in,
             dt_last_update_in,
             flg_selected_specialties_in,
             desc_room_in,
             desc_room_abbreviation_in,
             flg_icu_in)
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    PROCEDURE ins
    (
        id_room_in                   IN room.id_room%TYPE,
        flg_prof_in                  IN room.flg_prof%TYPE DEFAULT NULL,
        id_department_in             IN room.id_department%TYPE DEFAULT NULL,
        code_room_in                 IN room.code_room%TYPE DEFAULT NULL,
        capacity_in                  IN room.capacity%TYPE DEFAULT NULL,
        interval_time_in             IN room.interval_time%TYPE DEFAULT NULL,
        flg_recovery_in              IN room.flg_recovery%TYPE DEFAULT NULL,
        flg_lab_in                   IN room.flg_lab%TYPE DEFAULT NULL,
        rank_in                      IN room.rank%TYPE DEFAULT NULL,
        adw_last_update_in           IN room.adw_last_update%TYPE DEFAULT SYSDATE,
        flg_wait_in                  IN room.flg_wait%TYPE DEFAULT NULL,
        flg_wl_in                    IN room.flg_wl%TYPE DEFAULT NULL,
        img_name_in                  IN room.img_name%TYPE DEFAULT NULL,
        flg_transp_in                IN room.flg_transp%TYPE DEFAULT NULL,
        code_abbreviation_in         IN room.code_abbreviation%TYPE DEFAULT '',
        id_floors_department_in      IN room.id_floors_department%TYPE DEFAULT NULL,
        flg_available_in             IN room.flg_available%TYPE DEFAULT NULL,
        create_user_in               IN room.create_user%TYPE DEFAULT NULL,
        create_time_in               IN room.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN room.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN room.update_user%TYPE DEFAULT NULL,
        update_time_in               IN room.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN room.update_institution%TYPE DEFAULT NULL,
        id_room_type_in              IN room.id_room_type%TYPE DEFAULT NULL,
        flg_schedulable_in           IN room.flg_schedulable%TYPE DEFAULT 'Y',
        flg_status_in                IN room.flg_status%TYPE DEFAULT NULL,
        flg_parameterization_type_in IN room.flg_parameterization_type%TYPE DEFAULT 'C',
        id_professional_in           IN room.id_professional%TYPE DEFAULT NULL,
        dt_creation_in               IN room.dt_creation%TYPE DEFAULT NULL,
        dt_last_update_in            IN room.dt_last_update%TYPE DEFAULT NULL,
        flg_selected_specialties_in  IN room.flg_selected_specialties%TYPE DEFAULT NULL,
        desc_room_in                 IN room.desc_room%TYPE DEFAULT NULL,
        desc_room_abbreviation_in    IN room.desc_room_abbreviation%TYPE DEFAULT NULL,
        flg_icu_in                   IN room.flg_icu%TYPE DEFAULT 'N',
        handle_error_in              IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_room_in                   => id_room_in,
            flg_prof_in                  => flg_prof_in,
            id_department_in             => id_department_in,
            code_room_in                 => code_room_in,
            capacity_in                  => capacity_in,
            interval_time_in             => interval_time_in,
            flg_recovery_in              => flg_recovery_in,
            flg_lab_in                   => flg_lab_in,
            rank_in                      => rank_in,
            adw_last_update_in           => adw_last_update_in,
            flg_wait_in                  => flg_wait_in,
            flg_wl_in                    => flg_wl_in,
            img_name_in                  => img_name_in,
            flg_transp_in                => flg_transp_in,
            code_abbreviation_in         => code_abbreviation_in,
            id_floors_department_in      => id_floors_department_in,
            flg_available_in             => flg_available_in,
            create_user_in               => create_user_in,
            create_time_in               => create_time_in,
            create_institution_in        => create_institution_in,
            update_user_in               => update_user_in,
            update_time_in               => update_time_in,
            update_institution_in        => update_institution_in,
            id_room_type_in              => id_room_type_in,
            flg_schedulable_in           => flg_schedulable_in,
            flg_status_in                => flg_status_in,
            flg_parameterization_type_in => flg_parameterization_type_in,
            id_professional_in           => id_professional_in,
            dt_creation_in               => dt_creation_in,
            dt_last_update_in            => dt_last_update_in,
            flg_selected_specialties_in  => flg_selected_specialties_in,
            desc_room_in                 => desc_room_in,
            desc_room_abbreviation_in    => desc_room_abbreviation_in,
            flg_icu_in                   => flg_icu_in,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN room%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_rec room%ROWTYPE := rec_in;
    BEGIN
        IF gen_pky_in
        THEN
            l_rec.id_room := next_key(sequence_in);
        END IF;
    
        ins(id_room_in                   => l_rec.id_room,
            flg_prof_in                  => l_rec.flg_prof,
            id_department_in             => l_rec.id_department,
            code_room_in                 => l_rec.code_room,
            capacity_in                  => l_rec.capacity,
            interval_time_in             => l_rec.interval_time,
            flg_recovery_in              => l_rec.flg_recovery,
            flg_lab_in                   => l_rec.flg_lab,
            rank_in                      => l_rec.rank,
            adw_last_update_in           => l_rec.adw_last_update,
            flg_wait_in                  => l_rec.flg_wait,
            flg_wl_in                    => l_rec.flg_wl,
            img_name_in                  => l_rec.img_name,
            flg_transp_in                => l_rec.flg_transp,
            code_abbreviation_in         => l_rec.code_abbreviation,
            id_floors_department_in      => l_rec.id_floors_department,
            flg_available_in             => l_rec.flg_available,
            create_user_in               => l_rec.create_user,
            create_time_in               => l_rec.create_time,
            create_institution_in        => l_rec.create_institution,
            update_user_in               => l_rec.update_user,
            update_time_in               => l_rec.update_time,
            update_institution_in        => l_rec.update_institution,
            id_room_type_in              => l_rec.id_room_type,
            flg_schedulable_in           => l_rec.flg_schedulable,
            flg_status_in                => l_rec.flg_status,
            flg_parameterization_type_in => l_rec.flg_parameterization_type,
            id_professional_in           => l_rec.id_professional,
            dt_creation_in               => l_rec.dt_creation,
            dt_last_update_in            => l_rec.dt_last_update,
            flg_selected_specialties_in  => l_rec.flg_selected_specialties,
            desc_room_in                 => l_rec.desc_room,
            desc_room_abbreviation_in    => l_rec.desc_room_abbreviation,
            flg_icu_in                   => l_rec.flg_icu,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN room%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rec_in          => rec_in,
            gen_pky_in      => gen_pky_in,
            sequence_in     => sequence_in,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN room_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        IF rows_in.count = 0
        THEN
            NULL;
        ELSE
            FORALL indx IN rows_in.first .. rows_in.last SAVE EXCEPTIONS
                INSERT INTO room
                VALUES rows_in
                    (indx)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN room_tc,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rows_in => rows_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END ins;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_room_in                    IN room.id_room%TYPE,
        flg_prof_in                   IN room.flg_prof%TYPE DEFAULT NULL,
        flg_prof_nin                  IN BOOLEAN := TRUE,
        id_department_in              IN room.id_department%TYPE DEFAULT NULL,
        id_department_nin             IN BOOLEAN := TRUE,
        code_room_in                  IN room.code_room%TYPE DEFAULT NULL,
        code_room_nin                 IN BOOLEAN := TRUE,
        capacity_in                   IN room.capacity%TYPE DEFAULT NULL,
        capacity_nin                  IN BOOLEAN := TRUE,
        interval_time_in              IN room.interval_time%TYPE DEFAULT NULL,
        interval_time_nin             IN BOOLEAN := TRUE,
        flg_recovery_in               IN room.flg_recovery%TYPE DEFAULT NULL,
        flg_recovery_nin              IN BOOLEAN := TRUE,
        flg_lab_in                    IN room.flg_lab%TYPE DEFAULT NULL,
        flg_lab_nin                   IN BOOLEAN := TRUE,
        rank_in                       IN room.rank%TYPE DEFAULT NULL,
        rank_nin                      IN BOOLEAN := TRUE,
        adw_last_update_in            IN room.adw_last_update%TYPE DEFAULT NULL,
        adw_last_update_nin           IN BOOLEAN := TRUE,
        flg_wait_in                   IN room.flg_wait%TYPE DEFAULT NULL,
        flg_wait_nin                  IN BOOLEAN := TRUE,
        flg_wl_in                     IN room.flg_wl%TYPE DEFAULT NULL,
        flg_wl_nin                    IN BOOLEAN := TRUE,
        img_name_in                   IN room.img_name%TYPE DEFAULT NULL,
        img_name_nin                  IN BOOLEAN := TRUE,
        flg_transp_in                 IN room.flg_transp%TYPE DEFAULT NULL,
        flg_transp_nin                IN BOOLEAN := TRUE,
        code_abbreviation_in          IN room.code_abbreviation%TYPE DEFAULT NULL,
        code_abbreviation_nin         IN BOOLEAN := TRUE,
        id_floors_department_in       IN room.id_floors_department%TYPE DEFAULT NULL,
        id_floors_department_nin      IN BOOLEAN := TRUE,
        flg_available_in              IN room.flg_available%TYPE DEFAULT NULL,
        flg_available_nin             IN BOOLEAN := TRUE,
        create_user_in                IN room.create_user%TYPE DEFAULT NULL,
        create_user_nin               IN BOOLEAN := TRUE,
        create_time_in                IN room.create_time%TYPE DEFAULT NULL,
        create_time_nin               IN BOOLEAN := TRUE,
        create_institution_in         IN room.create_institution%TYPE DEFAULT NULL,
        create_institution_nin        IN BOOLEAN := TRUE,
        update_user_in                IN room.update_user%TYPE DEFAULT NULL,
        update_user_nin               IN BOOLEAN := TRUE,
        update_time_in                IN room.update_time%TYPE DEFAULT NULL,
        update_time_nin               IN BOOLEAN := TRUE,
        update_institution_in         IN room.update_institution%TYPE DEFAULT NULL,
        update_institution_nin        IN BOOLEAN := TRUE,
        id_room_type_in               IN room.id_room_type%TYPE DEFAULT NULL,
        id_room_type_nin              IN BOOLEAN := TRUE,
        flg_schedulable_in            IN room.flg_schedulable%TYPE DEFAULT NULL,
        flg_schedulable_nin           IN BOOLEAN := TRUE,
        flg_status_in                 IN room.flg_status%TYPE DEFAULT NULL,
        flg_status_nin                IN BOOLEAN := TRUE,
        flg_parameterization_type_in  IN room.flg_parameterization_type%TYPE DEFAULT NULL,
        flg_parameterization_type_nin IN BOOLEAN := TRUE,
        id_professional_in            IN room.id_professional%TYPE DEFAULT NULL,
        id_professional_nin           IN BOOLEAN := TRUE,
        dt_creation_in                IN room.dt_creation%TYPE DEFAULT NULL,
        dt_creation_nin               IN BOOLEAN := TRUE,
        dt_last_update_in             IN room.dt_last_update%TYPE DEFAULT NULL,
        dt_last_update_nin            IN BOOLEAN := TRUE,
        flg_selected_specialties_in   IN room.flg_selected_specialties%TYPE DEFAULT NULL,
        flg_selected_specialties_nin  IN BOOLEAN := TRUE,
        desc_room_in                  IN room.desc_room%TYPE DEFAULT NULL,
        desc_room_nin                 IN BOOLEAN := TRUE,
        desc_room_abbreviation_in     IN room.desc_room_abbreviation%TYPE DEFAULT NULL,
        desc_room_abbreviation_nin    IN BOOLEAN := TRUE,
        flg_icu_in                    IN room.flg_icu%TYPE DEFAULT NULL,
        flg_icu_nin                   IN BOOLEAN := TRUE,
        handle_error_in               IN BOOLEAN := TRUE,
        rows_out                      IN OUT table_varchar
    ) IS
        l_rows_out                    table_varchar;
        l_flg_prof_n                  NUMBER(1) := sys.diutil.bool_to_int(flg_prof_nin);
        l_id_department_n             NUMBER(1) := sys.diutil.bool_to_int(id_department_nin);
        l_code_room_n                 NUMBER(1) := sys.diutil.bool_to_int(code_room_nin);
        l_capacity_n                  NUMBER(1) := sys.diutil.bool_to_int(capacity_nin);
        l_interval_time_n             NUMBER(1) := sys.diutil.bool_to_int(interval_time_nin);
        l_flg_recovery_n              NUMBER(1) := sys.diutil.bool_to_int(flg_recovery_nin);
        l_flg_lab_n                   NUMBER(1) := sys.diutil.bool_to_int(flg_lab_nin);
        l_rank_n                      NUMBER(1) := sys.diutil.bool_to_int(rank_nin);
        l_adw_last_update_n           NUMBER(1) := sys.diutil.bool_to_int(adw_last_update_nin);
        l_flg_wait_n                  NUMBER(1) := sys.diutil.bool_to_int(flg_wait_nin);
        l_flg_wl_n                    NUMBER(1) := sys.diutil.bool_to_int(flg_wl_nin);
        l_img_name_n                  NUMBER(1) := sys.diutil.bool_to_int(img_name_nin);
        l_flg_transp_n                NUMBER(1) := sys.diutil.bool_to_int(flg_transp_nin);
        l_code_abbreviation_n         NUMBER(1) := sys.diutil.bool_to_int(code_abbreviation_nin);
        l_id_floors_department_n      NUMBER(1) := sys.diutil.bool_to_int(id_floors_department_nin);
        l_flg_available_n             NUMBER(1) := sys.diutil.bool_to_int(flg_available_nin);
        l_create_user_n               NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n               NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n        NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n               NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n               NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n        NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_id_room_type_n              NUMBER(1) := sys.diutil.bool_to_int(id_room_type_nin);
        l_flg_schedulable_n           NUMBER(1) := sys.diutil.bool_to_int(flg_schedulable_nin);
        l_flg_status_n                NUMBER(1) := sys.diutil.bool_to_int(flg_status_nin);
        l_flg_parameterization_type_n NUMBER(1) := sys.diutil.bool_to_int(flg_parameterization_type_nin);
        l_id_professional_n           NUMBER(1) := sys.diutil.bool_to_int(id_professional_nin);
        l_dt_creation_n               NUMBER(1) := sys.diutil.bool_to_int(dt_creation_nin);
        l_dt_last_update_n            NUMBER(1) := sys.diutil.bool_to_int(dt_last_update_nin);
        l_flg_selected_specialties_n  NUMBER(1) := sys.diutil.bool_to_int(flg_selected_specialties_nin);
        l_desc_room_n                 NUMBER(1) := sys.diutil.bool_to_int(desc_room_nin);
        l_desc_room_abbreviation_n    NUMBER(1) := sys.diutil.bool_to_int(desc_room_abbreviation_nin);
        l_flg_icu_n                   NUMBER(1) := sys.diutil.bool_to_int(flg_icu_nin);
    BEGIN
    
        UPDATE room
           SET flg_prof                  = decode(l_flg_prof_n, 0, flg_prof_in, nvl(flg_prof_in, flg_prof)),
               id_department             = decode(l_id_department_n,
                                                  0,
                                                  id_department_in,
                                                  nvl(id_department_in, id_department)),
               code_room                 = decode(l_code_room_n, 0, code_room_in, nvl(code_room_in, code_room)),
               capacity                  = decode(l_capacity_n, 0, capacity_in, nvl(capacity_in, capacity)),
               interval_time             = decode(l_interval_time_n,
                                                  0,
                                                  interval_time_in,
                                                  nvl(interval_time_in, interval_time)),
               flg_recovery              = decode(l_flg_recovery_n,
                                                  0,
                                                  flg_recovery_in,
                                                  nvl(flg_recovery_in, flg_recovery)),
               flg_lab                   = decode(l_flg_lab_n, 0, flg_lab_in, nvl(flg_lab_in, flg_lab)),
               rank                      = decode(l_rank_n, 0, rank_in, nvl(rank_in, rank)),
               adw_last_update           = decode(l_adw_last_update_n,
                                                  0,
                                                  adw_last_update_in,
                                                  nvl(adw_last_update_in, adw_last_update)),
               flg_wait                  = decode(l_flg_wait_n, 0, flg_wait_in, nvl(flg_wait_in, flg_wait)),
               flg_wl                    = decode(l_flg_wl_n, 0, flg_wl_in, nvl(flg_wl_in, flg_wl)),
               img_name                  = decode(l_img_name_n, 0, img_name_in, nvl(img_name_in, img_name)),
               flg_transp                = decode(l_flg_transp_n, 0, flg_transp_in, nvl(flg_transp_in, flg_transp)),
               code_abbreviation         = decode(l_code_abbreviation_n,
                                                  0,
                                                  code_abbreviation_in,
                                                  nvl(code_abbreviation_in, code_abbreviation)),
               id_floors_department      = decode(l_id_floors_department_n,
                                                  0,
                                                  id_floors_department_in,
                                                  nvl(id_floors_department_in, id_floors_department)),
               flg_available             = decode(l_flg_available_n,
                                                  0,
                                                  flg_available_in,
                                                  nvl(flg_available_in, flg_available)),
               create_user               = decode(l_create_user_n, 0, create_user_in, nvl(create_user_in, create_user)),
               create_time               = decode(l_create_time_n, 0, create_time_in, nvl(create_time_in, create_time)),
               create_institution        = decode(l_create_institution_n,
                                                  0,
                                                  create_institution_in,
                                                  nvl(create_institution_in, create_institution)),
               update_user               = decode(l_update_user_n, 0, update_user_in, nvl(update_user_in, update_user)),
               update_time               = decode(l_update_time_n, 0, update_time_in, nvl(update_time_in, update_time)),
               update_institution        = decode(l_update_institution_n,
                                                  0,
                                                  update_institution_in,
                                                  nvl(update_institution_in, update_institution)),
               id_room_type              = decode(l_id_room_type_n,
                                                  0,
                                                  id_room_type_in,
                                                  nvl(id_room_type_in, id_room_type)),
               flg_schedulable           = decode(l_flg_schedulable_n,
                                                  0,
                                                  flg_schedulable_in,
                                                  nvl(flg_schedulable_in, flg_schedulable)),
               flg_status                = decode(l_flg_status_n, 0, flg_status_in, nvl(flg_status_in, flg_status)),
               flg_parameterization_type = decode(l_flg_parameterization_type_n,
                                                  0,
                                                  flg_parameterization_type_in,
                                                  nvl(flg_parameterization_type_in, flg_parameterization_type)),
               id_professional           = decode(l_id_professional_n,
                                                  0,
                                                  id_professional_in,
                                                  nvl(id_professional_in, id_professional)),
               dt_creation               = decode(l_dt_creation_n, 0, dt_creation_in, nvl(dt_creation_in, dt_creation)),
               dt_last_update            = decode(l_dt_last_update_n,
                                                  0,
                                                  dt_last_update_in,
                                                  nvl(dt_last_update_in, dt_last_update)),
               flg_selected_specialties  = decode(l_flg_selected_specialties_n,
                                                  0,
                                                  flg_selected_specialties_in,
                                                  nvl(flg_selected_specialties_in, flg_selected_specialties)),
               desc_room                 = decode(l_desc_room_n, 0, desc_room_in, nvl(desc_room_in, desc_room)),
               desc_room_abbreviation    = decode(l_desc_room_abbreviation_n,
                                                  0,
                                                  desc_room_abbreviation_in,
                                                  nvl(desc_room_abbreviation_in, desc_room_abbreviation)),
               flg_icu                   = decode(l_flg_icu_n, 0, flg_icu_in, nvl(flg_icu_in, flg_icu))
         WHERE id_room = id_room_in
        RETURNING ROWID BULK COLLECT INTO l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_room_in                    IN room.id_room%TYPE,
        flg_prof_in                   IN room.flg_prof%TYPE DEFAULT NULL,
        flg_prof_nin                  IN BOOLEAN := TRUE,
        id_department_in              IN room.id_department%TYPE DEFAULT NULL,
        id_department_nin             IN BOOLEAN := TRUE,
        code_room_in                  IN room.code_room%TYPE DEFAULT NULL,
        code_room_nin                 IN BOOLEAN := TRUE,
        capacity_in                   IN room.capacity%TYPE DEFAULT NULL,
        capacity_nin                  IN BOOLEAN := TRUE,
        interval_time_in              IN room.interval_time%TYPE DEFAULT NULL,
        interval_time_nin             IN BOOLEAN := TRUE,
        flg_recovery_in               IN room.flg_recovery%TYPE DEFAULT NULL,
        flg_recovery_nin              IN BOOLEAN := TRUE,
        flg_lab_in                    IN room.flg_lab%TYPE DEFAULT NULL,
        flg_lab_nin                   IN BOOLEAN := TRUE,
        rank_in                       IN room.rank%TYPE DEFAULT NULL,
        rank_nin                      IN BOOLEAN := TRUE,
        adw_last_update_in            IN room.adw_last_update%TYPE DEFAULT NULL,
        adw_last_update_nin           IN BOOLEAN := TRUE,
        flg_wait_in                   IN room.flg_wait%TYPE DEFAULT NULL,
        flg_wait_nin                  IN BOOLEAN := TRUE,
        flg_wl_in                     IN room.flg_wl%TYPE DEFAULT NULL,
        flg_wl_nin                    IN BOOLEAN := TRUE,
        img_name_in                   IN room.img_name%TYPE DEFAULT NULL,
        img_name_nin                  IN BOOLEAN := TRUE,
        flg_transp_in                 IN room.flg_transp%TYPE DEFAULT NULL,
        flg_transp_nin                IN BOOLEAN := TRUE,
        code_abbreviation_in          IN room.code_abbreviation%TYPE DEFAULT NULL,
        code_abbreviation_nin         IN BOOLEAN := TRUE,
        id_floors_department_in       IN room.id_floors_department%TYPE DEFAULT NULL,
        id_floors_department_nin      IN BOOLEAN := TRUE,
        flg_available_in              IN room.flg_available%TYPE DEFAULT NULL,
        flg_available_nin             IN BOOLEAN := TRUE,
        create_user_in                IN room.create_user%TYPE DEFAULT NULL,
        create_user_nin               IN BOOLEAN := TRUE,
        create_time_in                IN room.create_time%TYPE DEFAULT NULL,
        create_time_nin               IN BOOLEAN := TRUE,
        create_institution_in         IN room.create_institution%TYPE DEFAULT NULL,
        create_institution_nin        IN BOOLEAN := TRUE,
        update_user_in                IN room.update_user%TYPE DEFAULT NULL,
        update_user_nin               IN BOOLEAN := TRUE,
        update_time_in                IN room.update_time%TYPE DEFAULT NULL,
        update_time_nin               IN BOOLEAN := TRUE,
        update_institution_in         IN room.update_institution%TYPE DEFAULT NULL,
        update_institution_nin        IN BOOLEAN := TRUE,
        id_room_type_in               IN room.id_room_type%TYPE DEFAULT NULL,
        id_room_type_nin              IN BOOLEAN := TRUE,
        flg_schedulable_in            IN room.flg_schedulable%TYPE DEFAULT NULL,
        flg_schedulable_nin           IN BOOLEAN := TRUE,
        flg_status_in                 IN room.flg_status%TYPE DEFAULT NULL,
        flg_status_nin                IN BOOLEAN := TRUE,
        flg_parameterization_type_in  IN room.flg_parameterization_type%TYPE DEFAULT NULL,
        flg_parameterization_type_nin IN BOOLEAN := TRUE,
        id_professional_in            IN room.id_professional%TYPE DEFAULT NULL,
        id_professional_nin           IN BOOLEAN := TRUE,
        dt_creation_in                IN room.dt_creation%TYPE DEFAULT NULL,
        dt_creation_nin               IN BOOLEAN := TRUE,
        dt_last_update_in             IN room.dt_last_update%TYPE DEFAULT NULL,
        dt_last_update_nin            IN BOOLEAN := TRUE,
        flg_selected_specialties_in   IN room.flg_selected_specialties%TYPE DEFAULT NULL,
        flg_selected_specialties_nin  IN BOOLEAN := TRUE,
        desc_room_in                  IN room.desc_room%TYPE DEFAULT NULL,
        desc_room_nin                 IN BOOLEAN := TRUE,
        desc_room_abbreviation_in     IN room.desc_room_abbreviation%TYPE DEFAULT NULL,
        desc_room_abbreviation_nin    IN BOOLEAN := TRUE,
        flg_icu_in                    IN room.flg_icu%TYPE DEFAULT NULL,
        flg_icu_nin                   IN BOOLEAN := TRUE,
        handle_error_in               IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_room_in                    => id_room_in,
            flg_prof_in                   => flg_prof_in,
            flg_prof_nin                  => flg_prof_nin,
            id_department_in              => id_department_in,
            id_department_nin             => id_department_nin,
            code_room_in                  => code_room_in,
            code_room_nin                 => code_room_nin,
            capacity_in                   => capacity_in,
            capacity_nin                  => capacity_nin,
            interval_time_in              => interval_time_in,
            interval_time_nin             => interval_time_nin,
            flg_recovery_in               => flg_recovery_in,
            flg_recovery_nin              => flg_recovery_nin,
            flg_lab_in                    => flg_lab_in,
            flg_lab_nin                   => flg_lab_nin,
            rank_in                       => rank_in,
            rank_nin                      => rank_nin,
            adw_last_update_in            => adw_last_update_in,
            adw_last_update_nin           => adw_last_update_nin,
            flg_wait_in                   => flg_wait_in,
            flg_wait_nin                  => flg_wait_nin,
            flg_wl_in                     => flg_wl_in,
            flg_wl_nin                    => flg_wl_nin,
            img_name_in                   => img_name_in,
            img_name_nin                  => img_name_nin,
            flg_transp_in                 => flg_transp_in,
            flg_transp_nin                => flg_transp_nin,
            code_abbreviation_in          => code_abbreviation_in,
            code_abbreviation_nin         => code_abbreviation_nin,
            id_floors_department_in       => id_floors_department_in,
            id_floors_department_nin      => id_floors_department_nin,
            flg_available_in              => flg_available_in,
            flg_available_nin             => flg_available_nin,
            create_user_in                => create_user_in,
            create_user_nin               => create_user_nin,
            create_time_in                => create_time_in,
            create_time_nin               => create_time_nin,
            create_institution_in         => create_institution_in,
            create_institution_nin        => create_institution_nin,
            update_user_in                => update_user_in,
            update_user_nin               => update_user_nin,
            update_time_in                => update_time_in,
            update_time_nin               => update_time_nin,
            update_institution_in         => update_institution_in,
            update_institution_nin        => update_institution_nin,
            id_room_type_in               => id_room_type_in,
            id_room_type_nin              => id_room_type_nin,
            flg_schedulable_in            => flg_schedulable_in,
            flg_schedulable_nin           => flg_schedulable_nin,
            flg_status_in                 => flg_status_in,
            flg_status_nin                => flg_status_nin,
            flg_parameterization_type_in  => flg_parameterization_type_in,
            flg_parameterization_type_nin => flg_parameterization_type_nin,
            id_professional_in            => id_professional_in,
            id_professional_nin           => id_professional_nin,
            dt_creation_in                => dt_creation_in,
            dt_creation_nin               => dt_creation_nin,
            dt_last_update_in             => dt_last_update_in,
            dt_last_update_nin            => dt_last_update_nin,
            flg_selected_specialties_in   => flg_selected_specialties_in,
            flg_selected_specialties_nin  => flg_selected_specialties_nin,
            desc_room_in                  => desc_room_in,
            desc_room_nin                 => desc_room_nin,
            desc_room_abbreviation_in     => desc_room_abbreviation_in,
            desc_room_abbreviation_nin    => desc_room_abbreviation_nin,
            flg_icu_in                    => flg_icu_in,
            flg_icu_nin                   => flg_icu_nin,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        flg_prof_in                   IN room.flg_prof%TYPE DEFAULT NULL,
        flg_prof_nin                  IN BOOLEAN := TRUE,
        id_department_in              IN room.id_department%TYPE DEFAULT NULL,
        id_department_nin             IN BOOLEAN := TRUE,
        code_room_in                  IN room.code_room%TYPE DEFAULT NULL,
        code_room_nin                 IN BOOLEAN := TRUE,
        capacity_in                   IN room.capacity%TYPE DEFAULT NULL,
        capacity_nin                  IN BOOLEAN := TRUE,
        interval_time_in              IN room.interval_time%TYPE DEFAULT NULL,
        interval_time_nin             IN BOOLEAN := TRUE,
        flg_recovery_in               IN room.flg_recovery%TYPE DEFAULT NULL,
        flg_recovery_nin              IN BOOLEAN := TRUE,
        flg_lab_in                    IN room.flg_lab%TYPE DEFAULT NULL,
        flg_lab_nin                   IN BOOLEAN := TRUE,
        rank_in                       IN room.rank%TYPE DEFAULT NULL,
        rank_nin                      IN BOOLEAN := TRUE,
        adw_last_update_in            IN room.adw_last_update%TYPE DEFAULT NULL,
        adw_last_update_nin           IN BOOLEAN := TRUE,
        flg_wait_in                   IN room.flg_wait%TYPE DEFAULT NULL,
        flg_wait_nin                  IN BOOLEAN := TRUE,
        flg_wl_in                     IN room.flg_wl%TYPE DEFAULT NULL,
        flg_wl_nin                    IN BOOLEAN := TRUE,
        img_name_in                   IN room.img_name%TYPE DEFAULT NULL,
        img_name_nin                  IN BOOLEAN := TRUE,
        flg_transp_in                 IN room.flg_transp%TYPE DEFAULT NULL,
        flg_transp_nin                IN BOOLEAN := TRUE,
        code_abbreviation_in          IN room.code_abbreviation%TYPE DEFAULT NULL,
        code_abbreviation_nin         IN BOOLEAN := TRUE,
        id_floors_department_in       IN room.id_floors_department%TYPE DEFAULT NULL,
        id_floors_department_nin      IN BOOLEAN := TRUE,
        flg_available_in              IN room.flg_available%TYPE DEFAULT NULL,
        flg_available_nin             IN BOOLEAN := TRUE,
        create_user_in                IN room.create_user%TYPE DEFAULT NULL,
        create_user_nin               IN BOOLEAN := TRUE,
        create_time_in                IN room.create_time%TYPE DEFAULT NULL,
        create_time_nin               IN BOOLEAN := TRUE,
        create_institution_in         IN room.create_institution%TYPE DEFAULT NULL,
        create_institution_nin        IN BOOLEAN := TRUE,
        update_user_in                IN room.update_user%TYPE DEFAULT NULL,
        update_user_nin               IN BOOLEAN := TRUE,
        update_time_in                IN room.update_time%TYPE DEFAULT NULL,
        update_time_nin               IN BOOLEAN := TRUE,
        update_institution_in         IN room.update_institution%TYPE DEFAULT NULL,
        update_institution_nin        IN BOOLEAN := TRUE,
        id_room_type_in               IN room.id_room_type%TYPE DEFAULT NULL,
        id_room_type_nin              IN BOOLEAN := TRUE,
        flg_schedulable_in            IN room.flg_schedulable%TYPE DEFAULT NULL,
        flg_schedulable_nin           IN BOOLEAN := TRUE,
        flg_status_in                 IN room.flg_status%TYPE DEFAULT NULL,
        flg_status_nin                IN BOOLEAN := TRUE,
        flg_parameterization_type_in  IN room.flg_parameterization_type%TYPE DEFAULT NULL,
        flg_parameterization_type_nin IN BOOLEAN := TRUE,
        id_professional_in            IN room.id_professional%TYPE DEFAULT NULL,
        id_professional_nin           IN BOOLEAN := TRUE,
        dt_creation_in                IN room.dt_creation%TYPE DEFAULT NULL,
        dt_creation_nin               IN BOOLEAN := TRUE,
        dt_last_update_in             IN room.dt_last_update%TYPE DEFAULT NULL,
        dt_last_update_nin            IN BOOLEAN := TRUE,
        flg_selected_specialties_in   IN room.flg_selected_specialties%TYPE DEFAULT NULL,
        flg_selected_specialties_nin  IN BOOLEAN := TRUE,
        desc_room_in                  IN room.desc_room%TYPE DEFAULT NULL,
        desc_room_nin                 IN BOOLEAN := TRUE,
        desc_room_abbreviation_in     IN room.desc_room_abbreviation%TYPE DEFAULT NULL,
        desc_room_abbreviation_nin    IN BOOLEAN := TRUE,
        flg_icu_in                    IN room.flg_icu%TYPE DEFAULT NULL,
        flg_icu_nin                   IN BOOLEAN := TRUE,
        where_in                      IN VARCHAR2,
        handle_error_in               IN BOOLEAN := TRUE,
        rows_out                      IN OUT table_varchar
    ) IS
        l_sql                         VARCHAR2(32767);
        l_rows_out                    table_varchar;
        l_flg_prof_n                  NUMBER(1) := sys.diutil.bool_to_int(flg_prof_nin);
        l_id_department_n             NUMBER(1) := sys.diutil.bool_to_int(id_department_nin);
        l_code_room_n                 NUMBER(1) := sys.diutil.bool_to_int(code_room_nin);
        l_capacity_n                  NUMBER(1) := sys.diutil.bool_to_int(capacity_nin);
        l_interval_time_n             NUMBER(1) := sys.diutil.bool_to_int(interval_time_nin);
        l_flg_recovery_n              NUMBER(1) := sys.diutil.bool_to_int(flg_recovery_nin);
        l_flg_lab_n                   NUMBER(1) := sys.diutil.bool_to_int(flg_lab_nin);
        l_rank_n                      NUMBER(1) := sys.diutil.bool_to_int(rank_nin);
        l_adw_last_update_n           NUMBER(1) := sys.diutil.bool_to_int(adw_last_update_nin);
        l_flg_wait_n                  NUMBER(1) := sys.diutil.bool_to_int(flg_wait_nin);
        l_flg_wl_n                    NUMBER(1) := sys.diutil.bool_to_int(flg_wl_nin);
        l_img_name_n                  NUMBER(1) := sys.diutil.bool_to_int(img_name_nin);
        l_flg_transp_n                NUMBER(1) := sys.diutil.bool_to_int(flg_transp_nin);
        l_code_abbreviation_n         NUMBER(1) := sys.diutil.bool_to_int(code_abbreviation_nin);
        l_id_floors_department_n      NUMBER(1) := sys.diutil.bool_to_int(id_floors_department_nin);
        l_flg_available_n             NUMBER(1) := sys.diutil.bool_to_int(flg_available_nin);
        l_create_user_n               NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n               NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n        NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n               NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n               NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n        NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_id_room_type_n              NUMBER(1) := sys.diutil.bool_to_int(id_room_type_nin);
        l_flg_schedulable_n           NUMBER(1) := sys.diutil.bool_to_int(flg_schedulable_nin);
        l_flg_status_n                NUMBER(1) := sys.diutil.bool_to_int(flg_status_nin);
        l_flg_parameterization_type_n NUMBER(1) := sys.diutil.bool_to_int(flg_parameterization_type_nin);
        l_id_professional_n           NUMBER(1) := sys.diutil.bool_to_int(id_professional_nin);
        l_dt_creation_n               NUMBER(1) := sys.diutil.bool_to_int(dt_creation_nin);
        l_dt_last_update_n            NUMBER(1) := sys.diutil.bool_to_int(dt_last_update_nin);
        l_flg_selected_specialties_n  NUMBER(1) := sys.diutil.bool_to_int(flg_selected_specialties_nin);
        l_desc_room_n                 NUMBER(1) := sys.diutil.bool_to_int(desc_room_nin);
        l_desc_room_abbreviation_n    NUMBER(1) := sys.diutil.bool_to_int(desc_room_abbreviation_nin);
        l_flg_icu_n                   NUMBER(1) := sys.diutil.bool_to_int(flg_icu_nin);
    BEGIN
        l_flg_prof_n                  := sys.diutil.bool_to_int(flg_prof_nin);
        l_id_department_n             := sys.diutil.bool_to_int(id_department_nin);
        l_code_room_n                 := sys.diutil.bool_to_int(code_room_nin);
        l_capacity_n                  := sys.diutil.bool_to_int(capacity_nin);
        l_interval_time_n             := sys.diutil.bool_to_int(interval_time_nin);
        l_flg_recovery_n              := sys.diutil.bool_to_int(flg_recovery_nin);
        l_flg_lab_n                   := sys.diutil.bool_to_int(flg_lab_nin);
        l_rank_n                      := sys.diutil.bool_to_int(rank_nin);
        l_adw_last_update_n           := sys.diutil.bool_to_int(adw_last_update_nin);
        l_flg_wait_n                  := sys.diutil.bool_to_int(flg_wait_nin);
        l_flg_wl_n                    := sys.diutil.bool_to_int(flg_wl_nin);
        l_img_name_n                  := sys.diutil.bool_to_int(img_name_nin);
        l_flg_transp_n                := sys.diutil.bool_to_int(flg_transp_nin);
        l_code_abbreviation_n         := sys.diutil.bool_to_int(code_abbreviation_nin);
        l_id_floors_department_n      := sys.diutil.bool_to_int(id_floors_department_nin);
        l_flg_available_n             := sys.diutil.bool_to_int(flg_available_nin);
        l_create_user_n               := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n               := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n        := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n               := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n               := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n        := sys.diutil.bool_to_int(update_institution_nin);
        l_id_room_type_n              := sys.diutil.bool_to_int(id_room_type_nin);
        l_flg_schedulable_n           := sys.diutil.bool_to_int(flg_schedulable_nin);
        l_flg_status_n                := sys.diutil.bool_to_int(flg_status_nin);
        l_flg_parameterization_type_n := sys.diutil.bool_to_int(flg_parameterization_type_nin);
        l_id_professional_n           := sys.diutil.bool_to_int(id_professional_nin);
        l_dt_creation_n               := sys.diutil.bool_to_int(dt_creation_nin);
        l_dt_last_update_n            := sys.diutil.bool_to_int(dt_last_update_nin);
        l_flg_selected_specialties_n  := sys.diutil.bool_to_int(flg_selected_specialties_nin);
        l_desc_room_n                 := sys.diutil.bool_to_int(desc_room_nin);
        l_desc_room_abbreviation_n    := sys.diutil.bool_to_int(desc_room_abbreviation_nin);
        l_flg_icu_n                   := sys.diutil.bool_to_int(flg_icu_nin);
        l_sql                         := 'UPDATE room SET' || ' FLG_PROF = decode (' || l_flg_prof_n ||
                                         ',0,:FLG_PROF_in, NVL (:FLG_PROF_in, FLG_PROF)) ' || ',' ||
                                         ' ID_DEPARTMENT = decode (' || l_id_department_n ||
                                         ',0,:ID_DEPARTMENT_in, NVL (:ID_DEPARTMENT_in, ID_DEPARTMENT)) ' || ',' ||
                                         ' CODE_ROOM = decode (' || l_code_room_n ||
                                         ',0,:CODE_ROOM_in, NVL (:CODE_ROOM_in, CODE_ROOM)) ' || ',' ||
                                         ' CAPACITY = decode (' || l_capacity_n ||
                                         ',0,:CAPACITY_in, NVL (:CAPACITY_in, CAPACITY)) ' || ',' ||
                                         ' INTERVAL_TIME = decode (' || l_interval_time_n ||
                                         ',0,:INTERVAL_TIME_in, NVL (:INTERVAL_TIME_in, INTERVAL_TIME)) ' || ',' ||
                                         ' FLG_RECOVERY = decode (' || l_flg_recovery_n ||
                                         ',0,:FLG_RECOVERY_in, NVL (:FLG_RECOVERY_in, FLG_RECOVERY)) ' || ',' ||
                                         ' FLG_LAB = decode (' || l_flg_lab_n ||
                                         ',0,:FLG_LAB_in, NVL (:FLG_LAB_in, FLG_LAB)) ' || ',' || ' RANK = decode (' ||
                                         l_rank_n || ',0,:RANK_in, NVL (:RANK_in, RANK)) ' || ',' ||
                                         ' ADW_LAST_UPDATE = decode (' || l_adw_last_update_n ||
                                         ',0,:ADW_LAST_UPDATE_in, NVL (:ADW_LAST_UPDATE_in, ADW_LAST_UPDATE)) ' || ',' ||
                                         ' FLG_WAIT = decode (' || l_flg_wait_n ||
                                         ',0,:FLG_WAIT_in, NVL (:FLG_WAIT_in, FLG_WAIT)) ' || ',' ||
                                         ' FLG_WL = decode (' || l_flg_wl_n ||
                                         ',0,:FLG_WL_in, NVL (:FLG_WL_in, FLG_WL)) ' || ',' || ' IMG_NAME = decode (' ||
                                         l_img_name_n || ',0,:IMG_NAME_in, NVL (:IMG_NAME_in, IMG_NAME)) ' || ',' ||
                                         ' FLG_TRANSP = decode (' || l_flg_transp_n ||
                                         ',0,:FLG_TRANSP_in, NVL (:FLG_TRANSP_in, FLG_TRANSP)) ' || ',' ||
                                         ' CODE_ABBREVIATION = decode (' || l_code_abbreviation_n ||
                                         ',0,:CODE_ABBREVIATION_in, NVL (:CODE_ABBREVIATION_in, CODE_ABBREVIATION)) ' || ',' ||
                                         ' ID_FLOORS_DEPARTMENT = decode (' || l_id_floors_department_n ||
                                         ',0,:ID_FLOORS_DEPARTMENT_in, NVL (:ID_FLOORS_DEPARTMENT_in, ID_FLOORS_DEPARTMENT)) ' || ',' ||
                                         ' FLG_AVAILABLE = decode (' || l_flg_available_n ||
                                         ',0,:FLG_AVAILABLE_in, NVL (:FLG_AVAILABLE_in, FLG_AVAILABLE)) ' || ',' ||
                                         ' CREATE_USER = decode (' || l_create_user_n ||
                                         ',0,:CREATE_USER_in, NVL (:CREATE_USER_in, CREATE_USER)) ' || ',' ||
                                         ' CREATE_TIME = decode (' || l_create_time_n ||
                                         ',0,:CREATE_TIME_in, NVL (:CREATE_TIME_in, CREATE_TIME)) ' || ',' ||
                                         ' CREATE_INSTITUTION = decode (' || l_create_institution_n ||
                                         ',0,:CREATE_INSTITUTION_in, NVL (:CREATE_INSTITUTION_in, CREATE_INSTITUTION)) ' || ',' ||
                                         ' UPDATE_USER = decode (' || l_update_user_n ||
                                         ',0,:UPDATE_USER_in, NVL (:UPDATE_USER_in, UPDATE_USER)) ' || ',' ||
                                         ' UPDATE_TIME = decode (' || l_update_time_n ||
                                         ',0,:UPDATE_TIME_in, NVL (:UPDATE_TIME_in, UPDATE_TIME)) ' || ',' ||
                                         ' UPDATE_INSTITUTION = decode (' || l_update_institution_n ||
                                         ',0,:UPDATE_INSTITUTION_in, NVL (:UPDATE_INSTITUTION_in, UPDATE_INSTITUTION)) ' || ',' ||
                                         ' ID_ROOM_TYPE = decode (' || l_id_room_type_n ||
                                         ',0,:ID_ROOM_TYPE_in, NVL (:ID_ROOM_TYPE_in, ID_ROOM_TYPE)) ' || ',' ||
                                         ' FLG_SCHEDULABLE = decode (' || l_flg_schedulable_n ||
                                         ',0,:FLG_SCHEDULABLE_in, NVL (:FLG_SCHEDULABLE_in, FLG_SCHEDULABLE)) ' || ',' ||
                                         ' FLG_STATUS = decode (' || l_flg_status_n ||
                                         ',0,:FLG_STATUS_in, NVL (:FLG_STATUS_in, FLG_STATUS)) ' || ',' ||
                                         ' FLG_PARAMETERIZATION_TYPE = decode (' || l_flg_parameterization_type_n ||
                                         ',0,:FLG_PARAMETERIZATION_TYPE_in, NVL (:FLG_PARAMETERIZATION_TYPE_in, FLG_PARAMETERIZATION_TYPE)) ' || ',' ||
                                         ' ID_PROFESSIONAL = decode (' || l_id_professional_n ||
                                         ',0,:ID_PROFESSIONAL_in, NVL (:ID_PROFESSIONAL_in, ID_PROFESSIONAL)) ' || ',' ||
                                         ' DT_CREATION = decode (' || l_dt_creation_n ||
                                         ',0,:DT_CREATION_in, NVL (:DT_CREATION_in, DT_CREATION)) ' || ',' ||
                                         ' DT_LAST_UPDATE = decode (' || l_dt_last_update_n ||
                                         ',0,:DT_LAST_UPDATE_in, NVL (:DT_LAST_UPDATE_in, DT_LAST_UPDATE)) ' || ',' ||
                                         ' FLG_SELECTED_SPECIALTIES = decode (' || l_flg_selected_specialties_n ||
                                         ',0,:FLG_SELECTED_SPECIALTIES_in, NVL (:FLG_SELECTED_SPECIALTIES_in, FLG_SELECTED_SPECIALTIES)) ' || ',' ||
                                         ' DESC_ROOM = decode (' || l_desc_room_n ||
                                         ',0,:DESC_ROOM_in, NVL (:DESC_ROOM_in, DESC_ROOM)) ' || ',' ||
                                         ' DESC_ROOM_ABBREVIATION = decode (' || l_desc_room_abbreviation_n ||
                                         ',0,:DESC_ROOM_ABBREVIATION_in, NVL (:DESC_ROOM_ABBREVIATION_in, DESC_ROOM_ABBREVIATION)) ' || ',' ||
                                         ' FLG_ICU = decode (' || l_flg_icu_n ||
                                         ',0,:FLG_ICU_in, NVL (:FLG_ICU_in, FLG_ICU)) ' || ' where ' ||
                                         nvl(where_in, '(1=1)') || ' RETURNING ROWID BULK COLLECT INTO :l_rows_out';
        EXECUTE IMMEDIATE 'BEGIN ' || l_sql || '; END;'
            USING IN flg_prof_in, id_department_in, code_room_in, capacity_in, interval_time_in, flg_recovery_in, flg_lab_in, rank_in, adw_last_update_in, flg_wait_in, flg_wl_in, img_name_in, flg_transp_in, code_abbreviation_in, id_floors_department_in, flg_available_in, create_user_in, create_time_in, create_institution_in, update_user_in, update_time_in, update_institution_in, id_room_type_in, flg_schedulable_in, flg_status_in, flg_parameterization_type_in, id_professional_in, dt_creation_in, dt_last_update_in, flg_selected_specialties_in, desc_room_in, desc_room_abbreviation_in, flg_icu_in, OUT l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        flg_prof_in                   IN room.flg_prof%TYPE DEFAULT NULL,
        flg_prof_nin                  IN BOOLEAN := TRUE,
        id_department_in              IN room.id_department%TYPE DEFAULT NULL,
        id_department_nin             IN BOOLEAN := TRUE,
        code_room_in                  IN room.code_room%TYPE DEFAULT NULL,
        code_room_nin                 IN BOOLEAN := TRUE,
        capacity_in                   IN room.capacity%TYPE DEFAULT NULL,
        capacity_nin                  IN BOOLEAN := TRUE,
        interval_time_in              IN room.interval_time%TYPE DEFAULT NULL,
        interval_time_nin             IN BOOLEAN := TRUE,
        flg_recovery_in               IN room.flg_recovery%TYPE DEFAULT NULL,
        flg_recovery_nin              IN BOOLEAN := TRUE,
        flg_lab_in                    IN room.flg_lab%TYPE DEFAULT NULL,
        flg_lab_nin                   IN BOOLEAN := TRUE,
        rank_in                       IN room.rank%TYPE DEFAULT NULL,
        rank_nin                      IN BOOLEAN := TRUE,
        adw_last_update_in            IN room.adw_last_update%TYPE DEFAULT NULL,
        adw_last_update_nin           IN BOOLEAN := TRUE,
        flg_wait_in                   IN room.flg_wait%TYPE DEFAULT NULL,
        flg_wait_nin                  IN BOOLEAN := TRUE,
        flg_wl_in                     IN room.flg_wl%TYPE DEFAULT NULL,
        flg_wl_nin                    IN BOOLEAN := TRUE,
        img_name_in                   IN room.img_name%TYPE DEFAULT NULL,
        img_name_nin                  IN BOOLEAN := TRUE,
        flg_transp_in                 IN room.flg_transp%TYPE DEFAULT NULL,
        flg_transp_nin                IN BOOLEAN := TRUE,
        code_abbreviation_in          IN room.code_abbreviation%TYPE DEFAULT NULL,
        code_abbreviation_nin         IN BOOLEAN := TRUE,
        id_floors_department_in       IN room.id_floors_department%TYPE DEFAULT NULL,
        id_floors_department_nin      IN BOOLEAN := TRUE,
        flg_available_in              IN room.flg_available%TYPE DEFAULT NULL,
        flg_available_nin             IN BOOLEAN := TRUE,
        create_user_in                IN room.create_user%TYPE DEFAULT NULL,
        create_user_nin               IN BOOLEAN := TRUE,
        create_time_in                IN room.create_time%TYPE DEFAULT NULL,
        create_time_nin               IN BOOLEAN := TRUE,
        create_institution_in         IN room.create_institution%TYPE DEFAULT NULL,
        create_institution_nin        IN BOOLEAN := TRUE,
        update_user_in                IN room.update_user%TYPE DEFAULT NULL,
        update_user_nin               IN BOOLEAN := TRUE,
        update_time_in                IN room.update_time%TYPE DEFAULT NULL,
        update_time_nin               IN BOOLEAN := TRUE,
        update_institution_in         IN room.update_institution%TYPE DEFAULT NULL,
        update_institution_nin        IN BOOLEAN := TRUE,
        id_room_type_in               IN room.id_room_type%TYPE DEFAULT NULL,
        id_room_type_nin              IN BOOLEAN := TRUE,
        flg_schedulable_in            IN room.flg_schedulable%TYPE DEFAULT NULL,
        flg_schedulable_nin           IN BOOLEAN := TRUE,
        flg_status_in                 IN room.flg_status%TYPE DEFAULT NULL,
        flg_status_nin                IN BOOLEAN := TRUE,
        flg_parameterization_type_in  IN room.flg_parameterization_type%TYPE DEFAULT NULL,
        flg_parameterization_type_nin IN BOOLEAN := TRUE,
        id_professional_in            IN room.id_professional%TYPE DEFAULT NULL,
        id_professional_nin           IN BOOLEAN := TRUE,
        dt_creation_in                IN room.dt_creation%TYPE DEFAULT NULL,
        dt_creation_nin               IN BOOLEAN := TRUE,
        dt_last_update_in             IN room.dt_last_update%TYPE DEFAULT NULL,
        dt_last_update_nin            IN BOOLEAN := TRUE,
        flg_selected_specialties_in   IN room.flg_selected_specialties%TYPE DEFAULT NULL,
        flg_selected_specialties_nin  IN BOOLEAN := TRUE,
        desc_room_in                  IN room.desc_room%TYPE DEFAULT NULL,
        desc_room_nin                 IN BOOLEAN := TRUE,
        desc_room_abbreviation_in     IN room.desc_room_abbreviation%TYPE DEFAULT NULL,
        desc_room_abbreviation_nin    IN BOOLEAN := TRUE,
        flg_icu_in                    IN room.flg_icu%TYPE DEFAULT NULL,
        flg_icu_nin                   IN BOOLEAN := TRUE,
        where_in                      IN VARCHAR2,
        handle_error_in               IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(flg_prof_in                   => flg_prof_in,
            flg_prof_nin                  => flg_prof_nin,
            id_department_in              => id_department_in,
            id_department_nin             => id_department_nin,
            code_room_in                  => code_room_in,
            code_room_nin                 => code_room_nin,
            capacity_in                   => capacity_in,
            capacity_nin                  => capacity_nin,
            interval_time_in              => interval_time_in,
            interval_time_nin             => interval_time_nin,
            flg_recovery_in               => flg_recovery_in,
            flg_recovery_nin              => flg_recovery_nin,
            flg_lab_in                    => flg_lab_in,
            flg_lab_nin                   => flg_lab_nin,
            rank_in                       => rank_in,
            rank_nin                      => rank_nin,
            adw_last_update_in            => adw_last_update_in,
            adw_last_update_nin           => adw_last_update_nin,
            flg_wait_in                   => flg_wait_in,
            flg_wait_nin                  => flg_wait_nin,
            flg_wl_in                     => flg_wl_in,
            flg_wl_nin                    => flg_wl_nin,
            img_name_in                   => img_name_in,
            img_name_nin                  => img_name_nin,
            flg_transp_in                 => flg_transp_in,
            flg_transp_nin                => flg_transp_nin,
            code_abbreviation_in          => code_abbreviation_in,
            code_abbreviation_nin         => code_abbreviation_nin,
            id_floors_department_in       => id_floors_department_in,
            id_floors_department_nin      => id_floors_department_nin,
            flg_available_in              => flg_available_in,
            flg_available_nin             => flg_available_nin,
            create_user_in                => create_user_in,
            create_user_nin               => create_user_nin,
            create_time_in                => create_time_in,
            create_time_nin               => create_time_nin,
            create_institution_in         => create_institution_in,
            create_institution_nin        => create_institution_nin,
            update_user_in                => update_user_in,
            update_user_nin               => update_user_nin,
            update_time_in                => update_time_in,
            update_time_nin               => update_time_nin,
            update_institution_in         => update_institution_in,
            update_institution_nin        => update_institution_nin,
            id_room_type_in               => id_room_type_in,
            id_room_type_nin              => id_room_type_nin,
            flg_schedulable_in            => flg_schedulable_in,
            flg_schedulable_nin           => flg_schedulable_nin,
            flg_status_in                 => flg_status_in,
            flg_status_nin                => flg_status_nin,
            flg_parameterization_type_in  => flg_parameterization_type_in,
            flg_parameterization_type_nin => flg_parameterization_type_nin,
            id_professional_in            => id_professional_in,
            id_professional_nin           => id_professional_nin,
            dt_creation_in                => dt_creation_in,
            dt_creation_nin               => dt_creation_nin,
            dt_last_update_in             => dt_last_update_in,
            dt_last_update_nin            => dt_last_update_nin,
            flg_selected_specialties_in   => flg_selected_specialties_in,
            flg_selected_specialties_nin  => flg_selected_specialties_nin,
            desc_room_in                  => desc_room_in,
            desc_room_nin                 => desc_room_nin,
            desc_room_abbreviation_in     => desc_room_abbreviation_in,
            desc_room_abbreviation_nin    => desc_room_abbreviation_nin,
            flg_icu_in                    => flg_icu_in,
            flg_icu_nin                   => flg_icu_nin,
            where_in                      => where_in,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
    END upd;

    --Update/insert columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_room_in                   IN room.id_room%TYPE,
        flg_prof_in                  IN room.flg_prof%TYPE DEFAULT NULL,
        id_department_in             IN room.id_department%TYPE DEFAULT NULL,
        code_room_in                 IN room.code_room%TYPE DEFAULT NULL,
        capacity_in                  IN room.capacity%TYPE DEFAULT NULL,
        interval_time_in             IN room.interval_time%TYPE DEFAULT NULL,
        flg_recovery_in              IN room.flg_recovery%TYPE DEFAULT NULL,
        flg_lab_in                   IN room.flg_lab%TYPE DEFAULT NULL,
        rank_in                      IN room.rank%TYPE DEFAULT NULL,
        adw_last_update_in           IN room.adw_last_update%TYPE DEFAULT NULL,
        flg_wait_in                  IN room.flg_wait%TYPE DEFAULT NULL,
        flg_wl_in                    IN room.flg_wl%TYPE DEFAULT NULL,
        img_name_in                  IN room.img_name%TYPE DEFAULT NULL,
        flg_transp_in                IN room.flg_transp%TYPE DEFAULT NULL,
        code_abbreviation_in         IN room.code_abbreviation%TYPE DEFAULT NULL,
        id_floors_department_in      IN room.id_floors_department%TYPE DEFAULT NULL,
        flg_available_in             IN room.flg_available%TYPE DEFAULT NULL,
        create_user_in               IN room.create_user%TYPE DEFAULT NULL,
        create_time_in               IN room.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN room.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN room.update_user%TYPE DEFAULT NULL,
        update_time_in               IN room.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN room.update_institution%TYPE DEFAULT NULL,
        id_room_type_in              IN room.id_room_type%TYPE DEFAULT NULL,
        flg_schedulable_in           IN room.flg_schedulable%TYPE DEFAULT NULL,
        flg_status_in                IN room.flg_status%TYPE DEFAULT NULL,
        flg_parameterization_type_in IN room.flg_parameterization_type%TYPE DEFAULT NULL,
        id_professional_in           IN room.id_professional%TYPE DEFAULT NULL,
        dt_creation_in               IN room.dt_creation%TYPE DEFAULT NULL,
        dt_last_update_in            IN room.dt_last_update%TYPE DEFAULT NULL,
        flg_selected_specialties_in  IN room.flg_selected_specialties%TYPE DEFAULT NULL,
        desc_room_in                 IN room.desc_room%TYPE DEFAULT NULL,
        desc_room_abbreviation_in    IN room.desc_room_abbreviation%TYPE DEFAULT NULL,
        flg_icu_in                   IN room.flg_icu%TYPE DEFAULT NULL,
        handle_error_in              IN BOOLEAN := TRUE,
        rows_out                     IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_room_in                   => id_room_in,
            flg_prof_in                  => flg_prof_in,
            id_department_in             => id_department_in,
            code_room_in                 => code_room_in,
            capacity_in                  => capacity_in,
            interval_time_in             => interval_time_in,
            flg_recovery_in              => flg_recovery_in,
            flg_lab_in                   => flg_lab_in,
            rank_in                      => rank_in,
            adw_last_update_in           => adw_last_update_in,
            flg_wait_in                  => flg_wait_in,
            flg_wl_in                    => flg_wl_in,
            img_name_in                  => img_name_in,
            flg_transp_in                => flg_transp_in,
            code_abbreviation_in         => code_abbreviation_in,
            id_floors_department_in      => id_floors_department_in,
            flg_available_in             => flg_available_in,
            create_user_in               => create_user_in,
            create_time_in               => create_time_in,
            create_institution_in        => create_institution_in,
            update_user_in               => update_user_in,
            update_time_in               => update_time_in,
            update_institution_in        => update_institution_in,
            id_room_type_in              => id_room_type_in,
            flg_schedulable_in           => flg_schedulable_in,
            flg_status_in                => flg_status_in,
            flg_parameterization_type_in => flg_parameterization_type_in,
            id_professional_in           => id_professional_in,
            dt_creation_in               => dt_creation_in,
            dt_last_update_in            => dt_last_update_in,
            flg_selected_specialties_in  => flg_selected_specialties_in,
            desc_room_in                 => desc_room_in,
            desc_room_abbreviation_in    => desc_room_abbreviation_in,
            flg_icu_in                   => flg_icu_in,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
        IF SQL%ROWCOUNT = 0
        THEN
            ins(id_room_in                   => id_room_in,
                flg_prof_in                  => flg_prof_in,
                id_department_in             => id_department_in,
                code_room_in                 => code_room_in,
                capacity_in                  => capacity_in,
                interval_time_in             => interval_time_in,
                flg_recovery_in              => flg_recovery_in,
                flg_lab_in                   => flg_lab_in,
                rank_in                      => rank_in,
                adw_last_update_in           => adw_last_update_in,
                flg_wait_in                  => flg_wait_in,
                flg_wl_in                    => flg_wl_in,
                img_name_in                  => img_name_in,
                flg_transp_in                => flg_transp_in,
                code_abbreviation_in         => code_abbreviation_in,
                id_floors_department_in      => id_floors_department_in,
                flg_available_in             => flg_available_in,
                create_user_in               => create_user_in,
                create_time_in               => create_time_in,
                create_institution_in        => create_institution_in,
                update_user_in               => update_user_in,
                update_time_in               => update_time_in,
                update_institution_in        => update_institution_in,
                id_room_type_in              => id_room_type_in,
                flg_schedulable_in           => flg_schedulable_in,
                flg_status_in                => flg_status_in,
                flg_parameterization_type_in => flg_parameterization_type_in,
                id_professional_in           => id_professional_in,
                dt_creation_in               => dt_creation_in,
                dt_last_update_in            => dt_last_update_in,
                flg_selected_specialties_in  => flg_selected_specialties_in,
                desc_room_in                 => desc_room_in,
                desc_room_abbreviation_in    => desc_room_abbreviation_in,
                flg_icu_in                   => flg_icu_in,
                handle_error_in              => handle_error_in,
                rows_out                     => rows_out);
        END IF;
    END upd_ins;

    --Update/insert columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_room_in                   IN room.id_room%TYPE,
        flg_prof_in                  IN room.flg_prof%TYPE DEFAULT NULL,
        id_department_in             IN room.id_department%TYPE DEFAULT NULL,
        code_room_in                 IN room.code_room%TYPE DEFAULT NULL,
        capacity_in                  IN room.capacity%TYPE DEFAULT NULL,
        interval_time_in             IN room.interval_time%TYPE DEFAULT NULL,
        flg_recovery_in              IN room.flg_recovery%TYPE DEFAULT NULL,
        flg_lab_in                   IN room.flg_lab%TYPE DEFAULT NULL,
        rank_in                      IN room.rank%TYPE DEFAULT NULL,
        adw_last_update_in           IN room.adw_last_update%TYPE DEFAULT NULL,
        flg_wait_in                  IN room.flg_wait%TYPE DEFAULT NULL,
        flg_wl_in                    IN room.flg_wl%TYPE DEFAULT NULL,
        img_name_in                  IN room.img_name%TYPE DEFAULT NULL,
        flg_transp_in                IN room.flg_transp%TYPE DEFAULT NULL,
        code_abbreviation_in         IN room.code_abbreviation%TYPE DEFAULT NULL,
        id_floors_department_in      IN room.id_floors_department%TYPE DEFAULT NULL,
        flg_available_in             IN room.flg_available%TYPE DEFAULT NULL,
        create_user_in               IN room.create_user%TYPE DEFAULT NULL,
        create_time_in               IN room.create_time%TYPE DEFAULT NULL,
        create_institution_in        IN room.create_institution%TYPE DEFAULT NULL,
        update_user_in               IN room.update_user%TYPE DEFAULT NULL,
        update_time_in               IN room.update_time%TYPE DEFAULT NULL,
        update_institution_in        IN room.update_institution%TYPE DEFAULT NULL,
        id_room_type_in              IN room.id_room_type%TYPE DEFAULT NULL,
        flg_schedulable_in           IN room.flg_schedulable%TYPE DEFAULT NULL,
        flg_status_in                IN room.flg_status%TYPE DEFAULT NULL,
        flg_parameterization_type_in IN room.flg_parameterization_type%TYPE DEFAULT NULL,
        id_professional_in           IN room.id_professional%TYPE DEFAULT NULL,
        dt_creation_in               IN room.dt_creation%TYPE DEFAULT NULL,
        dt_last_update_in            IN room.dt_last_update%TYPE DEFAULT NULL,
        flg_selected_specialties_in  IN room.flg_selected_specialties%TYPE DEFAULT NULL,
        desc_room_in                 IN room.desc_room%TYPE DEFAULT NULL,
        desc_room_abbreviation_in    IN room.desc_room_abbreviation%TYPE DEFAULT NULL,
        flg_icu_in                   IN room.flg_icu%TYPE DEFAULT NULL,
        handle_error_in              IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd_ins(id_room_in,
                flg_prof_in,
                id_department_in,
                code_room_in,
                capacity_in,
                interval_time_in,
                flg_recovery_in,
                flg_lab_in,
                rank_in,
                adw_last_update_in,
                flg_wait_in,
                flg_wl_in,
                img_name_in,
                flg_transp_in,
                code_abbreviation_in,
                id_floors_department_in,
                flg_available_in,
                create_user_in,
                create_time_in,
                create_institution_in,
                update_user_in,
                update_time_in,
                update_institution_in,
                id_room_type_in,
                flg_schedulable_in,
                flg_status_in,
                flg_parameterization_type_in,
                id_professional_in,
                dt_creation_in,
                dt_last_update_in,
                flg_selected_specialties_in,
                desc_room_in,
                desc_room_abbreviation_in,
                flg_icu_in,
                handle_error_in,
                rows_out);
    END upd_ins;

    --Update by record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN room%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_room_in                   => rec_in.id_room,
            flg_prof_in                  => rec_in.flg_prof,
            id_department_in             => rec_in.id_department,
            code_room_in                 => rec_in.code_room,
            capacity_in                  => rec_in.capacity,
            interval_time_in             => rec_in.interval_time,
            flg_recovery_in              => rec_in.flg_recovery,
            flg_lab_in                   => rec_in.flg_lab,
            rank_in                      => rec_in.rank,
            adw_last_update_in           => rec_in.adw_last_update,
            flg_wait_in                  => rec_in.flg_wait,
            flg_wl_in                    => rec_in.flg_wl,
            img_name_in                  => rec_in.img_name,
            flg_transp_in                => rec_in.flg_transp,
            code_abbreviation_in         => rec_in.code_abbreviation,
            id_floors_department_in      => rec_in.id_floors_department,
            flg_available_in             => rec_in.flg_available,
            create_user_in               => rec_in.create_user,
            create_time_in               => rec_in.create_time,
            create_institution_in        => rec_in.create_institution,
            update_user_in               => rec_in.update_user,
            update_time_in               => rec_in.update_time,
            update_institution_in        => rec_in.update_institution,
            id_room_type_in              => rec_in.id_room_type,
            flg_schedulable_in           => rec_in.flg_schedulable,
            flg_status_in                => rec_in.flg_status,
            flg_parameterization_type_in => rec_in.flg_parameterization_type,
            id_professional_in           => rec_in.id_professional,
            dt_creation_in               => rec_in.dt_creation,
            dt_last_update_in            => rec_in.dt_last_update,
            flg_selected_specialties_in  => rec_in.flg_selected_specialties,
            desc_room_in                 => rec_in.desc_room,
            desc_room_abbreviation_in    => rec_in.desc_room_abbreviation,
            flg_icu_in                   => rec_in.flg_icu,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
    END upd;

    --Update by record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN room%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_room_in                   => rec_in.id_room,
            flg_prof_in                  => rec_in.flg_prof,
            id_department_in             => rec_in.id_department,
            code_room_in                 => rec_in.code_room,
            capacity_in                  => rec_in.capacity,
            interval_time_in             => rec_in.interval_time,
            flg_recovery_in              => rec_in.flg_recovery,
            flg_lab_in                   => rec_in.flg_lab,
            rank_in                      => rec_in.rank,
            adw_last_update_in           => rec_in.adw_last_update,
            flg_wait_in                  => rec_in.flg_wait,
            flg_wl_in                    => rec_in.flg_wl,
            img_name_in                  => rec_in.img_name,
            flg_transp_in                => rec_in.flg_transp,
            code_abbreviation_in         => rec_in.code_abbreviation,
            id_floors_department_in      => rec_in.id_floors_department,
            flg_available_in             => rec_in.flg_available,
            create_user_in               => rec_in.create_user,
            create_time_in               => rec_in.create_time,
            create_institution_in        => rec_in.create_institution,
            update_user_in               => rec_in.update_user,
            update_time_in               => rec_in.update_time,
            update_institution_in        => rec_in.update_institution,
            id_room_type_in              => rec_in.id_room_type,
            flg_schedulable_in           => rec_in.flg_schedulable,
            flg_status_in                => rec_in.flg_status,
            flg_parameterization_type_in => rec_in.flg_parameterization_type,
            id_professional_in           => rec_in.id_professional,
            dt_creation_in               => rec_in.dt_creation,
            dt_last_update_in            => rec_in.dt_last_update,
            flg_selected_specialties_in  => rec_in.flg_selected_specialties,
            desc_room_in                 => rec_in.desc_room,
            desc_room_abbreviation_in    => rec_in.desc_room_abbreviation,
            flg_icu_in                   => rec_in.flg_icu,
            handle_error_in              => handle_error_in,
            rows_out                     => rows_out);
    END upd;

    --Update with collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN room_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    ) IS
        l_id_room                   id_room_cc;
        l_flg_prof                  flg_prof_cc;
        l_id_department             id_department_cc;
        l_code_room                 code_room_cc;
        l_capacity                  capacity_cc;
        l_interval_time             interval_time_cc;
        l_flg_recovery              flg_recovery_cc;
        l_flg_lab                   flg_lab_cc;
        l_rank                      rank_cc;
        l_adw_last_update           adw_last_update_cc;
        l_flg_wait                  flg_wait_cc;
        l_flg_wl                    flg_wl_cc;
        l_img_name                  img_name_cc;
        l_flg_transp                flg_transp_cc;
        l_code_abbreviation         code_abbreviation_cc;
        l_id_floors_department      id_floors_department_cc;
        l_flg_available             flg_available_cc;
        l_create_user               create_user_cc;
        l_create_time               create_time_cc;
        l_create_institution        create_institution_cc;
        l_update_user               update_user_cc;
        l_update_time               update_time_cc;
        l_update_institution        update_institution_cc;
        l_id_room_type              id_room_type_cc;
        l_flg_schedulable           flg_schedulable_cc;
        l_flg_status                flg_status_cc;
        l_flg_parameterization_type flg_parameterization_type_cc;
        l_id_professional           id_professional_cc;
        l_dt_creation               dt_creation_cc;
        l_dt_last_update            dt_last_update_cc;
        l_flg_selected_specialties  flg_selected_specialties_cc;
        l_desc_room                 desc_room_cc;
        l_desc_room_abbreviation    desc_room_abbreviation_cc;
        l_flg_icu                   flg_icu_cc;
    BEGIN
        FOR i IN col_in.first .. col_in.last
        LOOP
            l_id_room(i) := col_in(i).id_room;
            l_flg_prof(i) := col_in(i).flg_prof;
            l_id_department(i) := col_in(i).id_department;
            l_code_room(i) := col_in(i).code_room;
            l_capacity(i) := col_in(i).capacity;
            l_interval_time(i) := col_in(i).interval_time;
            l_flg_recovery(i) := col_in(i).flg_recovery;
            l_flg_lab(i) := col_in(i).flg_lab;
            l_rank(i) := col_in(i).rank;
            l_adw_last_update(i) := col_in(i).adw_last_update;
            l_flg_wait(i) := col_in(i).flg_wait;
            l_flg_wl(i) := col_in(i).flg_wl;
            l_img_name(i) := col_in(i).img_name;
            l_flg_transp(i) := col_in(i).flg_transp;
            l_code_abbreviation(i) := col_in(i).code_abbreviation;
            l_id_floors_department(i) := col_in(i).id_floors_department;
            l_flg_available(i) := col_in(i).flg_available;
            l_create_user(i) := col_in(i).create_user;
            l_create_time(i) := col_in(i).create_time;
            l_create_institution(i) := col_in(i).create_institution;
            l_update_user(i) := col_in(i).update_user;
            l_update_time(i) := col_in(i).update_time;
            l_update_institution(i) := col_in(i).update_institution;
            l_id_room_type(i) := col_in(i).id_room_type;
            l_flg_schedulable(i) := col_in(i).flg_schedulable;
            l_flg_status(i) := col_in(i).flg_status;
            l_flg_parameterization_type(i) := col_in(i).flg_parameterization_type;
            l_id_professional(i) := col_in(i).id_professional;
            l_dt_creation(i) := col_in(i).dt_creation;
            l_dt_last_update(i) := col_in(i).dt_last_update;
            l_flg_selected_specialties(i) := col_in(i).flg_selected_specialties;
            l_desc_room(i) := col_in(i).desc_room;
            l_desc_room_abbreviation(i) := col_in(i).desc_room_abbreviation;
            l_flg_icu(i) := col_in(i).flg_icu;
        END LOOP;
        IF nvl(ignore_if_null_in, FALSE)
        THEN
            -- Set any columns to their current values
            -- if incoming value is NULL.
            -- Put WHEN clause on column-level triggers!
            FORALL i IN col_in.first .. col_in.last
                UPDATE room
                   SET flg_prof                  = nvl(l_flg_prof(i), flg_prof),
                       id_department             = nvl(l_id_department(i), id_department),
                       code_room                 = nvl(l_code_room(i), code_room),
                       capacity                  = nvl(l_capacity(i), capacity),
                       interval_time             = nvl(l_interval_time(i), interval_time),
                       flg_recovery              = nvl(l_flg_recovery(i), flg_recovery),
                       flg_lab                   = nvl(l_flg_lab(i), flg_lab),
                       rank                      = nvl(l_rank(i), rank),
                       adw_last_update           = nvl(l_adw_last_update(i), adw_last_update),
                       flg_wait                  = nvl(l_flg_wait(i), flg_wait),
                       flg_wl                    = nvl(l_flg_wl(i), flg_wl),
                       img_name                  = nvl(l_img_name(i), img_name),
                       flg_transp                = nvl(l_flg_transp(i), flg_transp),
                       code_abbreviation         = nvl(l_code_abbreviation(i), code_abbreviation),
                       id_floors_department      = nvl(l_id_floors_department(i), id_floors_department),
                       flg_available             = nvl(l_flg_available(i), flg_available),
                       create_user               = nvl(l_create_user(i), create_user),
                       create_time               = nvl(l_create_time(i), create_time),
                       create_institution        = nvl(l_create_institution(i), create_institution),
                       update_user               = nvl(l_update_user(i), update_user),
                       update_time               = nvl(l_update_time(i), update_time),
                       update_institution        = nvl(l_update_institution(i), update_institution),
                       id_room_type              = nvl(l_id_room_type(i), id_room_type),
                       flg_schedulable           = nvl(l_flg_schedulable(i), flg_schedulable),
                       flg_status                = nvl(l_flg_status(i), flg_status),
                       flg_parameterization_type = nvl(l_flg_parameterization_type(i), flg_parameterization_type),
                       id_professional           = nvl(l_id_professional(i), id_professional),
                       dt_creation               = nvl(l_dt_creation(i), dt_creation),
                       dt_last_update            = nvl(l_dt_last_update(i), dt_last_update),
                       flg_selected_specialties  = nvl(l_flg_selected_specialties(i), flg_selected_specialties),
                       desc_room                 = nvl(l_desc_room(i), desc_room),
                       desc_room_abbreviation    = nvl(l_desc_room_abbreviation(i), desc_room_abbreviation),
                       flg_icu                   = nvl(l_flg_icu(i), flg_icu)
                 WHERE id_room = l_id_room(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        ELSE
            FORALL i IN col_in.first .. col_in.last
                UPDATE room
                   SET flg_prof                  = l_flg_prof(i),
                       id_department             = l_id_department(i),
                       code_room                 = l_code_room(i),
                       capacity                  = l_capacity(i),
                       interval_time             = l_interval_time(i),
                       flg_recovery              = l_flg_recovery(i),
                       flg_lab                   = l_flg_lab(i),
                       rank                      = l_rank(i),
                       adw_last_update           = l_adw_last_update(i),
                       flg_wait                  = l_flg_wait(i),
                       flg_wl                    = l_flg_wl(i),
                       img_name                  = l_img_name(i),
                       flg_transp                = l_flg_transp(i),
                       code_abbreviation         = l_code_abbreviation(i),
                       id_floors_department      = l_id_floors_department(i),
                       flg_available             = l_flg_available(i),
                       create_user               = l_create_user(i),
                       create_time               = l_create_time(i),
                       create_institution        = l_create_institution(i),
                       update_user               = l_update_user(i),
                       update_time               = l_update_time(i),
                       update_institution        = l_update_institution(i),
                       id_room_type              = l_id_room_type(i),
                       flg_schedulable           = l_flg_schedulable(i),
                       flg_status                = l_flg_status(i),
                       flg_parameterization_type = l_flg_parameterization_type(i),
                       id_professional           = l_id_professional(i),
                       dt_creation               = l_dt_creation(i),
                       dt_last_update            = l_dt_last_update(i),
                       flg_selected_specialties  = l_flg_selected_specialties(i),
                       desc_room                 = l_desc_room(i),
                       desc_room_abbreviation    = l_desc_room_abbreviation(i),
                       flg_icu                   = l_flg_icu(i)
                 WHERE id_room = l_id_room(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update with collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN room_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(col_in, ignore_if_null_in, handle_error_in, rows_out);
    END upd;

    --Dynamic update string
    FUNCTION dynupdstr
    (
        colname_in IN all_tab_columns.column_name%TYPE,
        where_in   IN VARCHAR2 := NULL
    ) RETURN VARCHAR2 IS
    BEGIN
        RETURN 'BEGIN UPDATE room
SET ' || colname_in || ' = :value
 WHERE ' || nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;';
    END dynupdstr;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (with rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN UPDATE room
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    END increment_onecol;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (without rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        EXECUTE IMMEDIATE 'UPDATE room
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1');
    END increment_onecol;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_room_in      IN room.id_room%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM room
         WHERE id_room = id_room_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_room_in      IN room.id_room%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del(id_room_in => id_room_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del;

    -- Delete all rows for this ROOM_DEP_FK foreign key value
    PROCEDURE del_room_dep_fk
    (
        id_department_in IN room.id_department%TYPE,
        handle_error_in  IN BOOLEAN := TRUE,
        rows_out         OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM room
         WHERE id_department = id_department_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_room_dep_fk;

    -- Delete all rows for this ROOM_FLSDEPS_FK foreign key value
    PROCEDURE del_room_flsdeps_fk
    (
        id_floors_department_in IN room.id_floors_department%TYPE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM room
         WHERE id_floors_department = id_floors_department_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_room_flsdeps_fk;

    -- Delete all rows for this ROOM_PROF_FK foreign key value
    PROCEDURE del_room_prof_fk
    (
        id_professional_in IN room.id_professional%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM room
         WHERE id_professional = id_professional_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_room_prof_fk;

    -- Delete all rows for this ROOM_RTY_FK foreign key value
    PROCEDURE del_room_rty_fk
    (
        id_room_type_in IN room.id_room_type%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM room
         WHERE id_room_type = id_room_type_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_room_rty_fk;

    -- Delete all rows for this ROOM_DEP_FK foreign key value
    PROCEDURE del_room_dep_fk
    (
        id_department_in IN room.id_department%TYPE,
        handle_error_in  IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_room_dep_fk(id_department_in => id_department_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_room_dep_fk;

    -- Delete all rows for this ROOM_FLSDEPS_FK foreign key value
    PROCEDURE del_room_flsdeps_fk
    (
        id_floors_department_in IN room.id_floors_department%TYPE,
        handle_error_in         IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_room_flsdeps_fk(id_floors_department_in => id_floors_department_in,
                            handle_error_in         => handle_error_in,
                            rows_out                => rows_out);
    END del_room_flsdeps_fk;

    -- Delete all rows for this ROOM_PROF_FK foreign key value
    PROCEDURE del_room_prof_fk
    (
        id_professional_in IN room.id_professional%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_room_prof_fk(id_professional_in => id_professional_in,
                         handle_error_in    => handle_error_in,
                         rows_out           => rows_out);
    END del_room_prof_fk;

    -- Delete all rows for this ROOM_RTY_FK foreign key value
    PROCEDURE del_room_rty_fk
    (
        id_room_type_in IN room.id_room_type%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_room_rty_fk(id_room_type_in => id_room_type_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_room_rty_fk;

    -- Deletions using dynamic SQL
    FUNCTION dyndelstr(where_in IN VARCHAR2) RETURN VARCHAR2 IS
    BEGIN
        IF where_in IS NULL
        THEN
            RETURN 'DELETE FROM room';
        ELSE
            RETURN 'DELETE FROM room WHERE ' || where_in;
        END IF;
    END dyndelstr;
    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyndelstr(where_clause_in) ||
                          ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyndelstr(where_clause_in);
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(room_inout IN OUT room%ROWTYPE) IS
    BEGIN
        room_inout.id_room                   := NULL;
        room_inout.flg_prof                  := NULL;
        room_inout.id_department             := NULL;
        room_inout.code_room                 := NULL;
        room_inout.capacity                  := NULL;
        room_inout.interval_time             := NULL;
        room_inout.flg_recovery              := NULL;
        room_inout.flg_lab                   := NULL;
        room_inout.rank                      := NULL;
        room_inout.adw_last_update           := NULL;
        room_inout.flg_wait                  := NULL;
        room_inout.flg_wl                    := NULL;
        room_inout.img_name                  := NULL;
        room_inout.flg_transp                := NULL;
        room_inout.code_abbreviation         := NULL;
        room_inout.id_floors_department      := NULL;
        room_inout.flg_available             := NULL;
        room_inout.create_user               := NULL;
        room_inout.create_time               := NULL;
        room_inout.create_institution        := NULL;
        room_inout.update_user               := NULL;
        room_inout.update_time               := NULL;
        room_inout.update_institution        := NULL;
        room_inout.id_room_type              := NULL;
        room_inout.flg_schedulable           := NULL;
        room_inout.flg_status                := NULL;
        room_inout.flg_parameterization_type := NULL;
        room_inout.id_professional           := NULL;
        room_inout.dt_creation               := NULL;
        room_inout.dt_last_update            := NULL;
        room_inout.flg_selected_specialties  := NULL;
        room_inout.desc_room                 := NULL;
        room_inout.desc_room_abbreviation    := NULL;
        room_inout.flg_icu                   := NULL;
    END initrec;

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN room%ROWTYPE IS
        l_room room%ROWTYPE;
    BEGIN
        RETURN l_room;
    END initrec;

    --get data from rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN room_tc IS
        data room_tc;
    BEGIN
        SELECT *
          BULK COLLECT
          INTO data
          FROM room
         WHERE ROWID IN (SELECT /*+opt_estimate(table,t,scale_rows=0.0000001))*/
                          *
                           FROM TABLE(rows_in) t);
        RETURN data;
    END get_data_rowid;

    --get data from rowid (pragma autonomous transacion)
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN room_tc IS
        data room_tc;
        PRAGMA AUTONOMOUS_TRANSACTION;
    BEGIN
        data := get_data_rowid(rows_in);
        COMMIT;
        RETURN data;
    
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'get_data_rowid_pat');
            ROLLBACK;
        
    END get_data_rowid_pat;

BEGIN
    NULL;
END ts_room;
/
