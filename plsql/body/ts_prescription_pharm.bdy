/*-- Last Change Revision: $Rev: 2028328 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:45:08 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE BODY TS_PRESCRIPTION_PHARM
/*
| Generated by or retrieved from QCGU - DO NOT MODIFY!
| QCGU - "Get it right, do it fast" - www.ToadWorld.com
| QCGU Universal ID: {657BD35E-2E48-4CD4-B14E-41420B8433B3}
| Created On: Maio 16, 2011 14:23:45
| Created By: ALERT
*/
IS

   e_null_column_value EXCEPTION;
   PRAGMA EXCEPTION_INIT (e_null_column_value, -1400);
   --
   e_existing_fky_reference EXCEPTION;
   PRAGMA EXCEPTION_INIT (e_existing_fky_reference, -2266);
   --
   e_check_constraint_failure EXCEPTION;
   PRAGMA EXCEPTION_INIT (e_check_constraint_failure, -2290);
   --
   e_no_parent_key EXCEPTION;
   PRAGMA EXCEPTION_INIT (e_no_parent_key, -2291);
   --
   e_child_record_found EXCEPTION;
   PRAGMA EXCEPTION_INIT (e_child_record_found, -2292);
   --
   e_forall_error EXCEPTION;
   PRAGMA EXCEPTION_INIT (e_forall_error, -24381);
   --
   -- Defined for backward compatibilty.
   e_integ_constraint_failure EXCEPTION;
   PRAGMA EXCEPTION_INIT (e_integ_constraint_failure, -2291);

    -- Private utilities
   PROCEDURE get_constraint_info (
      owner_out OUT ALL_CONSTRAINTS.OWNER%TYPE
     ,name_out OUT ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE)
   IS
      l_errm VARCHAR2(2000) := DBMS_UTILITY.FORMAT_ERROR_STACK;
      dotloc PLS_INTEGER;
      leftloc PLS_INTEGER;
   BEGIN
      dotloc  := INSTR (l_errm,'.');
      leftloc := INSTR (l_errm,'(');
      owner_out := SUBSTR (l_errm, leftloc+1, dotloc-leftloc-1);
      name_out  := SUBSTR (l_errm, dotloc+1, INSTR (l_errm,')')-dotloc-1);
   END get_constraint_info;
   -- Public programs

   PROCEDURE ins (
      id_prescription_pharm_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE
      ,
      id_prescription_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION%TYPE DEFAULT NULL,
      id_drug_in IN PRESCRIPTION_PHARM.ID_DRUG%TYPE DEFAULT NULL,
      qty_in IN PRESCRIPTION_PHARM.QTY%TYPE DEFAULT NULL,
      generico_in IN PRESCRIPTION_PHARM.GENERICO%TYPE DEFAULT NULL,
      dosage_in IN PRESCRIPTION_PHARM.DOSAGE%TYPE DEFAULT NULL,
      justif_in IN PRESCRIPTION_PHARM.JUSTIF%TYPE DEFAULT NULL,
      flg_ci_in IN PRESCRIPTION_PHARM.FLG_CI%TYPE DEFAULT 'N',
      flg_cheaper_in IN PRESCRIPTION_PHARM.FLG_CHEAPER%TYPE DEFAULT 'N',
      flg_justif_in IN PRESCRIPTION_PHARM.FLG_JUSTIF%TYPE DEFAULT 'N',
      flg_status_in IN PRESCRIPTION_PHARM.FLG_STATUS%TYPE DEFAULT NULL,
      desc_manip_in IN PRESCRIPTION_PHARM.DESC_MANIP%TYPE DEFAULT NULL,
      stock_in IN PRESCRIPTION_PHARM.STOCK%TYPE DEFAULT NULL,
      notes_in IN PRESCRIPTION_PHARM.NOTES%TYPE DEFAULT NULL,
      flg_attention_in IN PRESCRIPTION_PHARM.FLG_ATTENTION%TYPE DEFAULT NULL,
      flg_attention_print_in IN PRESCRIPTION_PHARM.FLG_ATTENTION_PRINT%TYPE DEFAULT NULL,
      desc_dietary_in IN PRESCRIPTION_PHARM.DESC_DIETARY%TYPE DEFAULT NULL,
      qty_manip_in IN PRESCRIPTION_PHARM.QTY_MANIP%TYPE DEFAULT NULL,
      unit_manip_in IN PRESCRIPTION_PHARM.UNIT_MANIP%TYPE DEFAULT NULL,
      pvp_in IN PRESCRIPTION_PHARM.PVP%TYPE DEFAULT NULL,
      p_ref_in IN PRESCRIPTION_PHARM.P_REF%TYPE DEFAULT NULL,
      p_ref_pen_in IN PRESCRIPTION_PHARM.P_REF_PEN%TYPE DEFAULT NULL,
      dt_prescription_pharm_tstz_in IN PRESCRIPTION_PHARM.DT_PRESCRIPTION_PHARM_TSTZ%TYPE DEFAULT NULL,
      dt_order_in IN PRESCRIPTION_PHARM.DT_ORDER%TYPE DEFAULT NULL,
      id_prof_order_in IN PRESCRIPTION_PHARM.ID_PROF_ORDER%TYPE DEFAULT NULL,
      id_order_type_in IN PRESCRIPTION_PHARM.ID_ORDER_TYPE%TYPE DEFAULT NULL,
      flg_co_sign_in IN PRESCRIPTION_PHARM.FLG_CO_SIGN%TYPE DEFAULT 'N',
      dt_co_sign_in IN PRESCRIPTION_PHARM.DT_CO_SIGN%TYPE DEFAULT NULL,
      notes_co_sign_in IN PRESCRIPTION_PHARM.NOTES_CO_SIGN%TYPE DEFAULT NULL,
      id_prof_co_sign_in IN PRESCRIPTION_PHARM.ID_PROF_CO_SIGN%TYPE DEFAULT NULL,
      id_unit_measure_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE%TYPE DEFAULT NULL,
      frequency_in IN PRESCRIPTION_PHARM.FREQUENCY%TYPE DEFAULT NULL,
      id_unit_measure_freq_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_FREQ%TYPE DEFAULT NULL,
      duration_in IN PRESCRIPTION_PHARM.DURATION%TYPE DEFAULT NULL,
      id_unit_measure_dur_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_DUR%TYPE DEFAULT NULL,
      dt_start_presc_tstz_in IN PRESCRIPTION_PHARM.DT_START_PRESC_TSTZ%TYPE DEFAULT NULL,
      dt_end_presc_tstz_in IN PRESCRIPTION_PHARM.DT_END_PRESC_TSTZ%TYPE DEFAULT NULL,
      refill_in IN PRESCRIPTION_PHARM.REFILL%TYPE DEFAULT NULL,
      emb_id_in IN PRESCRIPTION_PHARM.EMB_ID%TYPE DEFAULT NULL,
      qty_inst_in IN PRESCRIPTION_PHARM.QTY_INST%TYPE DEFAULT NULL,
      unit_measure_inst_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_INST%TYPE DEFAULT NULL,
      first_dose_in IN PRESCRIPTION_PHARM.FIRST_DOSE%TYPE DEFAULT NULL,
      package_number_in IN PRESCRIPTION_PHARM.PACKAGE_NUMBER%TYPE DEFAULT NULL,
      dt_expire_tstz_in IN PRESCRIPTION_PHARM.DT_EXPIRE_TSTZ%TYPE DEFAULT NULL,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE DEFAULT NULL,
      route_id_in IN PRESCRIPTION_PHARM.ROUTE_ID%TYPE DEFAULT NULL,
      regulation_id_in IN PRESCRIPTION_PHARM.REGULATION_ID%TYPE DEFAULT NULL,
      flg_interac_med_in IN PRESCRIPTION_PHARM.FLG_INTERAC_MED%TYPE DEFAULT 'N',
      flg_interac_allergy_in IN PRESCRIPTION_PHARM.FLG_INTERAC_ALLERGY%TYPE DEFAULT 'N',
      id_dietary_drug_in IN PRESCRIPTION_PHARM.ID_DIETARY_DRUG%TYPE DEFAULT NULL,
      id_manipulated_in IN PRESCRIPTION_PHARM.ID_MANIPULATED%TYPE DEFAULT NULL,
      order_modified_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED%TYPE DEFAULT NULL,
      dt_order_modified_in IN PRESCRIPTION_PHARM.DT_ORDER_MODIFIED%TYPE DEFAULT NULL,
      patient_notified_in IN PRESCRIPTION_PHARM.PATIENT_NOTIFIED%TYPE DEFAULT NULL,
      id_prof_last_change_in IN PRESCRIPTION_PHARM.ID_PROF_LAST_CHANGE%TYPE DEFAULT NULL,
      id_sw_last_change_in IN PRESCRIPTION_PHARM.ID_SW_LAST_CHANGE%TYPE DEFAULT NULL,
      id_inst_last_change_in IN PRESCRIPTION_PHARM.ID_INST_LAST_CHANGE%TYPE DEFAULT NULL,
      order_modified_id_issue_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_ID_ISSUE%TYPE DEFAULT NULL,
      order_modified_message_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_MESSAGE%TYPE DEFAULT NULL,
      id_pat_medication_list_in IN PRESCRIPTION_PHARM.ID_PAT_MEDICATION_LIST%TYPE DEFAULT NULL,
      id_other_product_in IN PRESCRIPTION_PHARM.ID_OTHER_PRODUCT%TYPE DEFAULT NULL,
      desc_other_product_in IN PRESCRIPTION_PHARM.DESC_OTHER_PRODUCT%TYPE DEFAULT NULL,
      status_flg_in IN PRESCRIPTION_PHARM.STATUS_FLG%TYPE DEFAULT NULL,
      status_icon_in IN PRESCRIPTION_PHARM.STATUS_ICON%TYPE DEFAULT NULL,
      status_msg_in IN PRESCRIPTION_PHARM.STATUS_MSG%TYPE DEFAULT NULL,
      status_str_in IN PRESCRIPTION_PHARM.STATUS_STR%TYPE DEFAULT NULL,
      dispense_in IN PRESCRIPTION_PHARM.DISPENSE%TYPE DEFAULT NULL,
      unit_measure_dispense_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_DISPENSE%TYPE DEFAULT NULL,
      flg_dosage_check_in IN PRESCRIPTION_PHARM.FLG_DOSAGE_CHECK%TYPE DEFAULT NULL,
      create_user_in IN PRESCRIPTION_PHARM.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN PRESCRIPTION_PHARM.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN PRESCRIPTION_PHARM.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN PRESCRIPTION_PHARM.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN PRESCRIPTION_PHARM.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN PRESCRIPTION_PHARM.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_first_presc_in IN PRESCRIPTION_PHARM.FLG_FIRST_PRESC%TYPE DEFAULT NULL,
      id_presc_directions_in IN PRESCRIPTION_PHARM.ID_PRESC_DIRECTIONS%TYPE DEFAULT NULL,
      flg_chronic_medication_in IN PRESCRIPTION_PHARM.FLG_CHRONIC_MEDICATION%TYPE DEFAULT 'N',
      chronic_notes_not_active_in IN PRESCRIPTION_PHARM.CHRONIC_NOTES_NOT_ACTIVE%TYPE DEFAULT NULL,
      id_chronic_motive_in IN PRESCRIPTION_PHARM.ID_CHRONIC_MOTIVE%TYPE DEFAULT NULL,
      id_prof_not_active_in IN PRESCRIPTION_PHARM.ID_PROF_NOT_ACTIVE%TYPE DEFAULT NULL,
      chronic_motive_descr_in IN PRESCRIPTION_PHARM.CHRONIC_MOTIVE_DESCR%TYPE DEFAULT NULL,
      dt_not_active_tstz_in IN PRESCRIPTION_PHARM.DT_NOT_ACTIVE_TSTZ%TYPE DEFAULT NULL,
      preco_sns_in IN PRESCRIPTION_PHARM.PRECO_SNS%TYPE DEFAULT NULL,
      preco_utente_in IN PRESCRIPTION_PHARM.PRECO_UTENTE%TYPE DEFAULT NULL,
      preco_utente_diff_in IN PRESCRIPTION_PHARM.PRECO_UTENTE_DIFF%TYPE DEFAULT NULL,
      compart_in IN PRESCRIPTION_PHARM.COMPART%TYPE DEFAULT NULL,
      id_regime_in IN PRESCRIPTION_PHARM.ID_REGIME%TYPE DEFAULT NULL,
      id_cdr_call_in IN PRESCRIPTION_PHARM.ID_CDR_CALL%TYPE DEFAULT NULL
     ,handle_error_in IN BOOLEAN := TRUE
      , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN

     INSERT INTO PRESCRIPTION_PHARM (
         ID_PRESCRIPTION_PHARM,
         ID_PRESCRIPTION,
         ID_DRUG,
         QTY,
         GENERICO,
         DOSAGE,
         JUSTIF,
         FLG_CI,
         FLG_CHEAPER,
         FLG_JUSTIF,
         FLG_STATUS,
         DESC_MANIP,
         STOCK,
         NOTES,
         FLG_ATTENTION,
         FLG_ATTENTION_PRINT,
         DESC_DIETARY,
         QTY_MANIP,
         UNIT_MANIP,
         PVP,
         P_REF,
         P_REF_PEN,
         DT_PRESCRIPTION_PHARM_TSTZ,
         DT_ORDER,
         ID_PROF_ORDER,
         ID_ORDER_TYPE,
         FLG_CO_SIGN,
         DT_CO_SIGN,
         NOTES_CO_SIGN,
         ID_PROF_CO_SIGN,
         ID_UNIT_MEASURE,
         FREQUENCY,
         ID_UNIT_MEASURE_FREQ,
         DURATION,
         ID_UNIT_MEASURE_DUR,
         DT_START_PRESC_TSTZ,
         DT_END_PRESC_TSTZ,
         REFILL,
         EMB_ID,
         QTY_INST,
         UNIT_MEASURE_INST,
         FIRST_DOSE,
         PACKAGE_NUMBER,
         DT_EXPIRE_TSTZ,
         VERS,
         ROUTE_ID,
         REGULATION_ID,
         FLG_INTERAC_MED,
         FLG_INTERAC_ALLERGY,
         ID_DIETARY_DRUG,
         ID_MANIPULATED,
         ORDER_MODIFIED,
         DT_ORDER_MODIFIED,
         PATIENT_NOTIFIED,
         ID_PROF_LAST_CHANGE,
         ID_SW_LAST_CHANGE,
         ID_INST_LAST_CHANGE,
         ORDER_MODIFIED_ID_ISSUE,
         ORDER_MODIFIED_MESSAGE,
         ID_PAT_MEDICATION_LIST,
         ID_OTHER_PRODUCT,
         DESC_OTHER_PRODUCT,
         STATUS_FLG,
         STATUS_ICON,
         STATUS_MSG,
         STATUS_STR,
         DISPENSE,
         UNIT_MEASURE_DISPENSE,
         FLG_DOSAGE_CHECK,
         CREATE_USER,
         CREATE_TIME,
         CREATE_INSTITUTION,
         UPDATE_USER,
         UPDATE_TIME,
         UPDATE_INSTITUTION,
         FLG_FIRST_PRESC,
         ID_PRESC_DIRECTIONS,
         FLG_CHRONIC_MEDICATION,
         CHRONIC_NOTES_NOT_ACTIVE,
         ID_CHRONIC_MOTIVE,
         ID_PROF_NOT_ACTIVE,
         CHRONIC_MOTIVE_DESCR,
         DT_NOT_ACTIVE_TSTZ,
         PRECO_SNS,
         PRECO_UTENTE,
         PRECO_UTENTE_DIFF,
         COMPART,
         ID_REGIME,
         ID_CDR_CALL
         )
      VALUES (
         id_prescription_pharm_in,
         id_prescription_in,
         id_drug_in,
         qty_in,
         generico_in,
         dosage_in,
         justif_in,
         flg_ci_in,
         flg_cheaper_in,
         flg_justif_in,
         flg_status_in,
         desc_manip_in,
         stock_in,
         notes_in,
         flg_attention_in,
         flg_attention_print_in,
         desc_dietary_in,
         qty_manip_in,
         unit_manip_in,
         pvp_in,
         p_ref_in,
         p_ref_pen_in,
         dt_prescription_pharm_tstz_in,
         dt_order_in,
         id_prof_order_in,
         id_order_type_in,
         flg_co_sign_in,
         dt_co_sign_in,
         notes_co_sign_in,
         id_prof_co_sign_in,
         id_unit_measure_in,
         frequency_in,
         id_unit_measure_freq_in,
         duration_in,
         id_unit_measure_dur_in,
         dt_start_presc_tstz_in,
         dt_end_presc_tstz_in,
         refill_in,
         emb_id_in,
         qty_inst_in,
         unit_measure_inst_in,
         first_dose_in,
         package_number_in,
         dt_expire_tstz_in,
         vers_in,
         route_id_in,
         regulation_id_in,
         flg_interac_med_in,
         flg_interac_allergy_in,
         id_dietary_drug_in,
         id_manipulated_in,
         order_modified_in,
         dt_order_modified_in,
         patient_notified_in,
         id_prof_last_change_in,
         id_sw_last_change_in,
         id_inst_last_change_in,
         order_modified_id_issue_in,
         order_modified_message_in,
         id_pat_medication_list_in,
         id_other_product_in,
         desc_other_product_in,
         status_flg_in,
         status_icon_in,
         status_msg_in,
         status_str_in,
         dispense_in,
         unit_measure_dispense_in,
         flg_dosage_check_in,
         create_user_in,
         create_time_in,
         create_institution_in,
         update_user_in,
         update_time_in,
         update_institution_in,
         flg_first_presc_in,
         id_presc_directions_in,
         flg_chronic_medication_in,
         chronic_notes_not_active_in,
         id_chronic_motive_in,
         id_prof_not_active_in,
         chronic_motive_descr_in,
         dt_not_active_tstz_in,
         preco_sns_in,
         preco_utente_in,
         preco_utente_diff_in,
         compart_in,
         id_regime_in,
         id_cdr_call_in
         ) RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN DUP_VAL_ON_INDEX
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_err_instance_id PLS_INTEGER;
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF FALSE THEN NULL; -- Placeholder in case no unique indexes
           ELSE
              pk_alert_exceptions.raise_error (
                    error_name_in => 'DUPLICATE-VALUE'
                    ,name1_in => 'OWNER'
                    ,value1_in => l_owner
                    ,name2_in => 'CONSTRAINT_NAME'
                    ,value2_in => l_name
                    ,name3_in => 'TABLE_NAME'
                    ,value3_in => 'PRESCRIPTION_PHARM');
           END IF;
        END;
        END IF;
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           IF l_name = 'PP_CANCEL_REASON_CM_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_CHRONIC_MOTIVE'
               , value_in => id_chronic_motive_in);
           END IF;
           IF l_name = 'PP_CC_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_CDR_CALL'
               , value_in => id_cdr_call_in);
           END IF;
           IF l_name = 'PP_ID_REGIME_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_REGIME'
               , value_in => id_regime_in);
           END IF;
           IF l_name = 'PP_IPML_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PAT_MEDICATION_LIST'
               , value_in => id_pat_medication_list_in);
           END IF;
           IF l_name = 'PP_MANIP_IV_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_MANIPULATED'
               , value_in => id_manipulated_in);
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'VERS'
               , value_in => vers_in);
           END IF;
           IF l_name = 'PP_MED_EI_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'EMB_ID'
               , value_in => emb_id_in);
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'VERS'
               , value_in => vers_in);
           END IF;
           IF l_name = 'PPN_DRUG_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_DRUG'
               , value_in => id_drug_in);
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'VERS'
               , value_in => vers_in);
           END IF;
           IF l_name = 'PPN_PRN_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PRESCRIPTION'
               , value_in => id_prescription_in);
           END IF;
           IF l_name = 'PP_PDIR_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PRESC_DIRECTIONS'
               , value_in => id_presc_directions_in);
           END IF;
           IF l_name = 'PP_PH_RI_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ROUTE_ID'
               , value_in => route_id_in);
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'VERS'
               , value_in => vers_in);
           END IF;
           IF l_name = 'PP_PR_DI_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'REGULATION_ID'
               , value_in => regulation_id_in);
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'VERS'
               , value_in => vers_in);
           END IF;
           IF l_name = 'PP_PROF_CM_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PROF_NOT_ACTIVE'
               , value_in => id_prof_not_active_in);
           END IF;
           IF l_name = 'PP_UME_DISP_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'UNIT_MEASURE_DISPENSE'
               , value_in => unit_measure_dispense_in);
           END IF;
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
      WHEN e_null_column_value
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           v_errm VARCHAR2(2000) := DBMS_UTILITY.FORMAT_ERROR_STACK;
           dot1loc INTEGER;
           dot2loc INTEGER;
           parenloc INTEGER;
           c_owner ALL_CONSTRAINTS.OWNER%TYPE;
           c_tabname ALL_TABLES.TABLE_NAME%TYPE;
           c_colname ALL_TAB_COLUMNS.COLUMN_NAME%TYPE;
        BEGIN
           dot1loc := INSTR (v_errm, '.', 1, 1);
           dot2loc := INSTR (v_errm, '.', 1, 2);
           parenloc := INSTR (v_errm, '(');
           c_owner :=SUBSTR (v_errm, parenloc+1, dot1loc-parenloc-1);
           c_tabname := SUBSTR (v_errm, dot1loc+1, dot2loc-dot1loc-1);
           c_colname := SUBSTR (v_errm, dot2loc+1, INSTR (v_errm,')')-dot2loc-1);

           pk_alert_exceptions.raise_error (
                error_name_in => 'COLUMN-CANNOT-BE-NULL'
               ,name1_in => 'OWNER'
               ,value1_in => c_owner
               ,name2_in => 'TABLE_NAME'
               ,value2_in => c_tabname
               ,name3_in => 'COLUMN_NAME'
               ,value3_in => c_colname);
        END;
        END IF;
   END ins;

   PROCEDURE ins (
      id_prescription_pharm_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE
      ,
      id_prescription_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION%TYPE DEFAULT NULL,
      id_drug_in IN PRESCRIPTION_PHARM.ID_DRUG%TYPE DEFAULT NULL,
      qty_in IN PRESCRIPTION_PHARM.QTY%TYPE DEFAULT NULL,
      generico_in IN PRESCRIPTION_PHARM.GENERICO%TYPE DEFAULT NULL,
      dosage_in IN PRESCRIPTION_PHARM.DOSAGE%TYPE DEFAULT NULL,
      justif_in IN PRESCRIPTION_PHARM.JUSTIF%TYPE DEFAULT NULL,
      flg_ci_in IN PRESCRIPTION_PHARM.FLG_CI%TYPE DEFAULT 'N',
      flg_cheaper_in IN PRESCRIPTION_PHARM.FLG_CHEAPER%TYPE DEFAULT 'N',
      flg_justif_in IN PRESCRIPTION_PHARM.FLG_JUSTIF%TYPE DEFAULT 'N',
      flg_status_in IN PRESCRIPTION_PHARM.FLG_STATUS%TYPE DEFAULT NULL,
      desc_manip_in IN PRESCRIPTION_PHARM.DESC_MANIP%TYPE DEFAULT NULL,
      stock_in IN PRESCRIPTION_PHARM.STOCK%TYPE DEFAULT NULL,
      notes_in IN PRESCRIPTION_PHARM.NOTES%TYPE DEFAULT NULL,
      flg_attention_in IN PRESCRIPTION_PHARM.FLG_ATTENTION%TYPE DEFAULT NULL,
      flg_attention_print_in IN PRESCRIPTION_PHARM.FLG_ATTENTION_PRINT%TYPE DEFAULT NULL,
      desc_dietary_in IN PRESCRIPTION_PHARM.DESC_DIETARY%TYPE DEFAULT NULL,
      qty_manip_in IN PRESCRIPTION_PHARM.QTY_MANIP%TYPE DEFAULT NULL,
      unit_manip_in IN PRESCRIPTION_PHARM.UNIT_MANIP%TYPE DEFAULT NULL,
      pvp_in IN PRESCRIPTION_PHARM.PVP%TYPE DEFAULT NULL,
      p_ref_in IN PRESCRIPTION_PHARM.P_REF%TYPE DEFAULT NULL,
      p_ref_pen_in IN PRESCRIPTION_PHARM.P_REF_PEN%TYPE DEFAULT NULL,
      dt_prescription_pharm_tstz_in IN PRESCRIPTION_PHARM.DT_PRESCRIPTION_PHARM_TSTZ%TYPE DEFAULT NULL,
      dt_order_in IN PRESCRIPTION_PHARM.DT_ORDER%TYPE DEFAULT NULL,
      id_prof_order_in IN PRESCRIPTION_PHARM.ID_PROF_ORDER%TYPE DEFAULT NULL,
      id_order_type_in IN PRESCRIPTION_PHARM.ID_ORDER_TYPE%TYPE DEFAULT NULL,
      flg_co_sign_in IN PRESCRIPTION_PHARM.FLG_CO_SIGN%TYPE DEFAULT 'N',
      dt_co_sign_in IN PRESCRIPTION_PHARM.DT_CO_SIGN%TYPE DEFAULT NULL,
      notes_co_sign_in IN PRESCRIPTION_PHARM.NOTES_CO_SIGN%TYPE DEFAULT NULL,
      id_prof_co_sign_in IN PRESCRIPTION_PHARM.ID_PROF_CO_SIGN%TYPE DEFAULT NULL,
      id_unit_measure_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE%TYPE DEFAULT NULL,
      frequency_in IN PRESCRIPTION_PHARM.FREQUENCY%TYPE DEFAULT NULL,
      id_unit_measure_freq_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_FREQ%TYPE DEFAULT NULL,
      duration_in IN PRESCRIPTION_PHARM.DURATION%TYPE DEFAULT NULL,
      id_unit_measure_dur_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_DUR%TYPE DEFAULT NULL,
      dt_start_presc_tstz_in IN PRESCRIPTION_PHARM.DT_START_PRESC_TSTZ%TYPE DEFAULT NULL,
      dt_end_presc_tstz_in IN PRESCRIPTION_PHARM.DT_END_PRESC_TSTZ%TYPE DEFAULT NULL,
      refill_in IN PRESCRIPTION_PHARM.REFILL%TYPE DEFAULT NULL,
      emb_id_in IN PRESCRIPTION_PHARM.EMB_ID%TYPE DEFAULT NULL,
      qty_inst_in IN PRESCRIPTION_PHARM.QTY_INST%TYPE DEFAULT NULL,
      unit_measure_inst_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_INST%TYPE DEFAULT NULL,
      first_dose_in IN PRESCRIPTION_PHARM.FIRST_DOSE%TYPE DEFAULT NULL,
      package_number_in IN PRESCRIPTION_PHARM.PACKAGE_NUMBER%TYPE DEFAULT NULL,
      dt_expire_tstz_in IN PRESCRIPTION_PHARM.DT_EXPIRE_TSTZ%TYPE DEFAULT NULL,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE DEFAULT NULL,
      route_id_in IN PRESCRIPTION_PHARM.ROUTE_ID%TYPE DEFAULT NULL,
      regulation_id_in IN PRESCRIPTION_PHARM.REGULATION_ID%TYPE DEFAULT NULL,
      flg_interac_med_in IN PRESCRIPTION_PHARM.FLG_INTERAC_MED%TYPE DEFAULT 'N',
      flg_interac_allergy_in IN PRESCRIPTION_PHARM.FLG_INTERAC_ALLERGY%TYPE DEFAULT 'N',
      id_dietary_drug_in IN PRESCRIPTION_PHARM.ID_DIETARY_DRUG%TYPE DEFAULT NULL,
      id_manipulated_in IN PRESCRIPTION_PHARM.ID_MANIPULATED%TYPE DEFAULT NULL,
      order_modified_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED%TYPE DEFAULT NULL,
      dt_order_modified_in IN PRESCRIPTION_PHARM.DT_ORDER_MODIFIED%TYPE DEFAULT NULL,
      patient_notified_in IN PRESCRIPTION_PHARM.PATIENT_NOTIFIED%TYPE DEFAULT NULL,
      id_prof_last_change_in IN PRESCRIPTION_PHARM.ID_PROF_LAST_CHANGE%TYPE DEFAULT NULL,
      id_sw_last_change_in IN PRESCRIPTION_PHARM.ID_SW_LAST_CHANGE%TYPE DEFAULT NULL,
      id_inst_last_change_in IN PRESCRIPTION_PHARM.ID_INST_LAST_CHANGE%TYPE DEFAULT NULL,
      order_modified_id_issue_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_ID_ISSUE%TYPE DEFAULT NULL,
      order_modified_message_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_MESSAGE%TYPE DEFAULT NULL,
      id_pat_medication_list_in IN PRESCRIPTION_PHARM.ID_PAT_MEDICATION_LIST%TYPE DEFAULT NULL,
      id_other_product_in IN PRESCRIPTION_PHARM.ID_OTHER_PRODUCT%TYPE DEFAULT NULL,
      desc_other_product_in IN PRESCRIPTION_PHARM.DESC_OTHER_PRODUCT%TYPE DEFAULT NULL,
      status_flg_in IN PRESCRIPTION_PHARM.STATUS_FLG%TYPE DEFAULT NULL,
      status_icon_in IN PRESCRIPTION_PHARM.STATUS_ICON%TYPE DEFAULT NULL,
      status_msg_in IN PRESCRIPTION_PHARM.STATUS_MSG%TYPE DEFAULT NULL,
      status_str_in IN PRESCRIPTION_PHARM.STATUS_STR%TYPE DEFAULT NULL,
      dispense_in IN PRESCRIPTION_PHARM.DISPENSE%TYPE DEFAULT NULL,
      unit_measure_dispense_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_DISPENSE%TYPE DEFAULT NULL,
      flg_dosage_check_in IN PRESCRIPTION_PHARM.FLG_DOSAGE_CHECK%TYPE DEFAULT NULL,
      create_user_in IN PRESCRIPTION_PHARM.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN PRESCRIPTION_PHARM.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN PRESCRIPTION_PHARM.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN PRESCRIPTION_PHARM.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN PRESCRIPTION_PHARM.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN PRESCRIPTION_PHARM.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_first_presc_in IN PRESCRIPTION_PHARM.FLG_FIRST_PRESC%TYPE DEFAULT NULL,
      id_presc_directions_in IN PRESCRIPTION_PHARM.ID_PRESC_DIRECTIONS%TYPE DEFAULT NULL,
      flg_chronic_medication_in IN PRESCRIPTION_PHARM.FLG_CHRONIC_MEDICATION%TYPE DEFAULT 'N',
      chronic_notes_not_active_in IN PRESCRIPTION_PHARM.CHRONIC_NOTES_NOT_ACTIVE%TYPE DEFAULT NULL,
      id_chronic_motive_in IN PRESCRIPTION_PHARM.ID_CHRONIC_MOTIVE%TYPE DEFAULT NULL,
      id_prof_not_active_in IN PRESCRIPTION_PHARM.ID_PROF_NOT_ACTIVE%TYPE DEFAULT NULL,
      chronic_motive_descr_in IN PRESCRIPTION_PHARM.CHRONIC_MOTIVE_DESCR%TYPE DEFAULT NULL,
      dt_not_active_tstz_in IN PRESCRIPTION_PHARM.DT_NOT_ACTIVE_TSTZ%TYPE DEFAULT NULL,
      preco_sns_in IN PRESCRIPTION_PHARM.PRECO_SNS%TYPE DEFAULT NULL,
      preco_utente_in IN PRESCRIPTION_PHARM.PRECO_UTENTE%TYPE DEFAULT NULL,
      preco_utente_diff_in IN PRESCRIPTION_PHARM.PRECO_UTENTE_DIFF%TYPE DEFAULT NULL,
      compart_in IN PRESCRIPTION_PHARM.COMPART%TYPE DEFAULT NULL,
      id_regime_in IN PRESCRIPTION_PHARM.ID_REGIME%TYPE DEFAULT NULL,
      id_cdr_call_in IN PRESCRIPTION_PHARM.ID_CDR_CALL%TYPE DEFAULT NULL
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN

     ins (
      id_prescription_pharm_in => id_prescription_pharm_in
      ,
      id_prescription_in => id_prescription_in,
      id_drug_in => id_drug_in,
      qty_in => qty_in,
      generico_in => generico_in,
      dosage_in => dosage_in,
      justif_in => justif_in,
      flg_ci_in => flg_ci_in,
      flg_cheaper_in => flg_cheaper_in,
      flg_justif_in => flg_justif_in,
      flg_status_in => flg_status_in,
      desc_manip_in => desc_manip_in,
      stock_in => stock_in,
      notes_in => notes_in,
      flg_attention_in => flg_attention_in,
      flg_attention_print_in => flg_attention_print_in,
      desc_dietary_in => desc_dietary_in,
      qty_manip_in => qty_manip_in,
      unit_manip_in => unit_manip_in,
      pvp_in => pvp_in,
      p_ref_in => p_ref_in,
      p_ref_pen_in => p_ref_pen_in,
      dt_prescription_pharm_tstz_in => dt_prescription_pharm_tstz_in,
      dt_order_in => dt_order_in,
      id_prof_order_in => id_prof_order_in,
      id_order_type_in => id_order_type_in,
      flg_co_sign_in => flg_co_sign_in,
      dt_co_sign_in => dt_co_sign_in,
      notes_co_sign_in => notes_co_sign_in,
      id_prof_co_sign_in => id_prof_co_sign_in,
      id_unit_measure_in => id_unit_measure_in,
      frequency_in => frequency_in,
      id_unit_measure_freq_in => id_unit_measure_freq_in,
      duration_in => duration_in,
      id_unit_measure_dur_in => id_unit_measure_dur_in,
      dt_start_presc_tstz_in => dt_start_presc_tstz_in,
      dt_end_presc_tstz_in => dt_end_presc_tstz_in,
      refill_in => refill_in,
      emb_id_in => emb_id_in,
      qty_inst_in => qty_inst_in,
      unit_measure_inst_in => unit_measure_inst_in,
      first_dose_in => first_dose_in,
      package_number_in => package_number_in,
      dt_expire_tstz_in => dt_expire_tstz_in,
      vers_in => vers_in,
      route_id_in => route_id_in,
      regulation_id_in => regulation_id_in,
      flg_interac_med_in => flg_interac_med_in,
      flg_interac_allergy_in => flg_interac_allergy_in,
      id_dietary_drug_in => id_dietary_drug_in,
      id_manipulated_in => id_manipulated_in,
      order_modified_in => order_modified_in,
      dt_order_modified_in => dt_order_modified_in,
      patient_notified_in => patient_notified_in,
      id_prof_last_change_in => id_prof_last_change_in,
      id_sw_last_change_in => id_sw_last_change_in,
      id_inst_last_change_in => id_inst_last_change_in,
      order_modified_id_issue_in => order_modified_id_issue_in,
      order_modified_message_in => order_modified_message_in,
      id_pat_medication_list_in => id_pat_medication_list_in,
      id_other_product_in => id_other_product_in,
      desc_other_product_in => desc_other_product_in,
      status_flg_in => status_flg_in,
      status_icon_in => status_icon_in,
      status_msg_in => status_msg_in,
      status_str_in => status_str_in,
      dispense_in => dispense_in,
      unit_measure_dispense_in => unit_measure_dispense_in,
      flg_dosage_check_in => flg_dosage_check_in,
      create_user_in => create_user_in,
      create_time_in => create_time_in,
      create_institution_in => create_institution_in,
      update_user_in => update_user_in,
      update_time_in => update_time_in,
      update_institution_in => update_institution_in,
      flg_first_presc_in => flg_first_presc_in,
      id_presc_directions_in => id_presc_directions_in,
      flg_chronic_medication_in => flg_chronic_medication_in,
      chronic_notes_not_active_in => chronic_notes_not_active_in,
      id_chronic_motive_in => id_chronic_motive_in,
      id_prof_not_active_in => id_prof_not_active_in,
      chronic_motive_descr_in => chronic_motive_descr_in,
      dt_not_active_tstz_in => dt_not_active_tstz_in,
      preco_sns_in => preco_sns_in,
      preco_utente_in => preco_utente_in,
      preco_utente_diff_in => preco_utente_diff_in,
      compart_in => compart_in,
      id_regime_in => id_regime_in,
      id_cdr_call_in => id_cdr_call_in
     ,handle_error_in => handle_error_in
      ,rows_out => rows_out
      );
   END ins;


   PROCEDURE ins (
      rec_in IN PRESCRIPTION_PHARM%ROWTYPE
     ,gen_pky_in IN BOOLEAN DEFAULT FALSE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   )
   IS
      l_rec PRESCRIPTION_PHARM%ROWTYPE := rec_in;
   BEGIN
      IF gen_pky_in THEN
         l_rec.ID_PRESCRIPTION_PHARM := next_key (sequence_in);
      END IF;
      ins (
         id_prescription_pharm_in => l_rec.ID_PRESCRIPTION_PHARM
         ,
         id_prescription_in => l_rec.ID_PRESCRIPTION,
         id_drug_in => l_rec.ID_DRUG,
         qty_in => l_rec.QTY,
         generico_in => l_rec.GENERICO,
         dosage_in => l_rec.DOSAGE,
         justif_in => l_rec.JUSTIF,
         flg_ci_in => l_rec.FLG_CI,
         flg_cheaper_in => l_rec.FLG_CHEAPER,
         flg_justif_in => l_rec.FLG_JUSTIF,
         flg_status_in => l_rec.FLG_STATUS,
         desc_manip_in => l_rec.DESC_MANIP,
         stock_in => l_rec.STOCK,
         notes_in => l_rec.NOTES,
         flg_attention_in => l_rec.FLG_ATTENTION,
         flg_attention_print_in => l_rec.FLG_ATTENTION_PRINT,
         desc_dietary_in => l_rec.DESC_DIETARY,
         qty_manip_in => l_rec.QTY_MANIP,
         unit_manip_in => l_rec.UNIT_MANIP,
         pvp_in => l_rec.PVP,
         p_ref_in => l_rec.P_REF,
         p_ref_pen_in => l_rec.P_REF_PEN,
         dt_prescription_pharm_tstz_in => l_rec.DT_PRESCRIPTION_PHARM_TSTZ,
         dt_order_in => l_rec.DT_ORDER,
         id_prof_order_in => l_rec.ID_PROF_ORDER,
         id_order_type_in => l_rec.ID_ORDER_TYPE,
         flg_co_sign_in => l_rec.FLG_CO_SIGN,
         dt_co_sign_in => l_rec.DT_CO_SIGN,
         notes_co_sign_in => l_rec.NOTES_CO_SIGN,
         id_prof_co_sign_in => l_rec.ID_PROF_CO_SIGN,
         id_unit_measure_in => l_rec.ID_UNIT_MEASURE,
         frequency_in => l_rec.FREQUENCY,
         id_unit_measure_freq_in => l_rec.ID_UNIT_MEASURE_FREQ,
         duration_in => l_rec.DURATION,
         id_unit_measure_dur_in => l_rec.ID_UNIT_MEASURE_DUR,
         dt_start_presc_tstz_in => l_rec.DT_START_PRESC_TSTZ,
         dt_end_presc_tstz_in => l_rec.DT_END_PRESC_TSTZ,
         refill_in => l_rec.REFILL,
         emb_id_in => l_rec.EMB_ID,
         qty_inst_in => l_rec.QTY_INST,
         unit_measure_inst_in => l_rec.UNIT_MEASURE_INST,
         first_dose_in => l_rec.FIRST_DOSE,
         package_number_in => l_rec.PACKAGE_NUMBER,
         dt_expire_tstz_in => l_rec.DT_EXPIRE_TSTZ,
         vers_in => l_rec.VERS,
         route_id_in => l_rec.ROUTE_ID,
         regulation_id_in => l_rec.REGULATION_ID,
         flg_interac_med_in => l_rec.FLG_INTERAC_MED,
         flg_interac_allergy_in => l_rec.FLG_INTERAC_ALLERGY,
         id_dietary_drug_in => l_rec.ID_DIETARY_DRUG,
         id_manipulated_in => l_rec.ID_MANIPULATED,
         order_modified_in => l_rec.ORDER_MODIFIED,
         dt_order_modified_in => l_rec.DT_ORDER_MODIFIED,
         patient_notified_in => l_rec.PATIENT_NOTIFIED,
         id_prof_last_change_in => l_rec.ID_PROF_LAST_CHANGE,
         id_sw_last_change_in => l_rec.ID_SW_LAST_CHANGE,
         id_inst_last_change_in => l_rec.ID_INST_LAST_CHANGE,
         order_modified_id_issue_in => l_rec.ORDER_MODIFIED_ID_ISSUE,
         order_modified_message_in => l_rec.ORDER_MODIFIED_MESSAGE,
         id_pat_medication_list_in => l_rec.ID_PAT_MEDICATION_LIST,
         id_other_product_in => l_rec.ID_OTHER_PRODUCT,
         desc_other_product_in => l_rec.DESC_OTHER_PRODUCT,
         status_flg_in => l_rec.STATUS_FLG,
         status_icon_in => l_rec.STATUS_ICON,
         status_msg_in => l_rec.STATUS_MSG,
         status_str_in => l_rec.STATUS_STR,
         dispense_in => l_rec.DISPENSE,
         unit_measure_dispense_in => l_rec.UNIT_MEASURE_DISPENSE,
         flg_dosage_check_in => l_rec.FLG_DOSAGE_CHECK,
         create_user_in => l_rec.CREATE_USER,
         create_time_in => l_rec.CREATE_TIME,
         create_institution_in => l_rec.CREATE_INSTITUTION,
         update_user_in => l_rec.UPDATE_USER,
         update_time_in => l_rec.UPDATE_TIME,
         update_institution_in => l_rec.UPDATE_INSTITUTION,
         flg_first_presc_in => l_rec.FLG_FIRST_PRESC,
         id_presc_directions_in => l_rec.ID_PRESC_DIRECTIONS,
         flg_chronic_medication_in => l_rec.FLG_CHRONIC_MEDICATION,
         chronic_notes_not_active_in => l_rec.CHRONIC_NOTES_NOT_ACTIVE,
         id_chronic_motive_in => l_rec.ID_CHRONIC_MOTIVE,
         id_prof_not_active_in => l_rec.ID_PROF_NOT_ACTIVE,
         chronic_motive_descr_in => l_rec.CHRONIC_MOTIVE_DESCR,
         dt_not_active_tstz_in => l_rec.DT_NOT_ACTIVE_TSTZ,
         preco_sns_in => l_rec.PRECO_SNS,
         preco_utente_in => l_rec.PRECO_UTENTE,
         preco_utente_diff_in => l_rec.PRECO_UTENTE_DIFF,
         compart_in => l_rec.COMPART,
         id_regime_in => l_rec.ID_REGIME,
         id_cdr_call_in => l_rec.ID_CDR_CALL
         ,handle_error_in => handle_error_in
         , rows_out => rows_out
         );
   END ins;

   PROCEDURE ins (
      rec_in IN PRESCRIPTION_PHARM%ROWTYPE
     ,gen_pky_in IN BOOLEAN DEFAULT FALSE
     ,sequence_in IN VARCHAR2 := NULL
     ,handle_error_in IN BOOLEAN := TRUE
   )
   IS
      rows_out TABLE_VARCHAR;
   BEGIN

  ins (
      rec_in => rec_in
     ,gen_pky_in => gen_pky_in
     ,sequence_in => sequence_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
   );

   END ins;

   FUNCTION next_key (sequence_in IN VARCHAR2 := NULL) RETURN PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE

   IS
     retval PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE;

   BEGIN
      IF sequence_in IS NULL
      THEN
         SELECT seq_PRESCRIPTION_PHARM.NEXTVAL INTO retval FROM dual;
      ELSE
         EXECUTE IMMEDIATE
            'SELECT ' || sequence_in || '.NEXTVAL FROM dual'
            INTO retval;
      END IF;
      RETURN retval;
   EXCEPTION
      WHEN OTHERS THEN
        pk_alert_exceptions.raise_error (
           error_name_in => 'SEQUENCE-GENERATION-FAILURE'
           ,name1_in => 'SEQUENCE'
           ,value1_in => NVL (sequence_in, 'seq_PRESCRIPTION_PHARM')
           );
   END next_key;

   PROCEDURE ins (
      id_prescription_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION%TYPE DEFAULT NULL,
      id_drug_in IN PRESCRIPTION_PHARM.ID_DRUG%TYPE DEFAULT NULL,
      qty_in IN PRESCRIPTION_PHARM.QTY%TYPE DEFAULT NULL,
      generico_in IN PRESCRIPTION_PHARM.GENERICO%TYPE DEFAULT NULL,
      dosage_in IN PRESCRIPTION_PHARM.DOSAGE%TYPE DEFAULT NULL,
      justif_in IN PRESCRIPTION_PHARM.JUSTIF%TYPE DEFAULT NULL,
      flg_ci_in IN PRESCRIPTION_PHARM.FLG_CI%TYPE DEFAULT 'N',
      flg_cheaper_in IN PRESCRIPTION_PHARM.FLG_CHEAPER%TYPE DEFAULT 'N',
      flg_justif_in IN PRESCRIPTION_PHARM.FLG_JUSTIF%TYPE DEFAULT 'N',
      flg_status_in IN PRESCRIPTION_PHARM.FLG_STATUS%TYPE DEFAULT NULL,
      desc_manip_in IN PRESCRIPTION_PHARM.DESC_MANIP%TYPE DEFAULT NULL,
      stock_in IN PRESCRIPTION_PHARM.STOCK%TYPE DEFAULT NULL,
      notes_in IN PRESCRIPTION_PHARM.NOTES%TYPE DEFAULT NULL,
      flg_attention_in IN PRESCRIPTION_PHARM.FLG_ATTENTION%TYPE DEFAULT NULL,
      flg_attention_print_in IN PRESCRIPTION_PHARM.FLG_ATTENTION_PRINT%TYPE DEFAULT NULL,
      desc_dietary_in IN PRESCRIPTION_PHARM.DESC_DIETARY%TYPE DEFAULT NULL,
      qty_manip_in IN PRESCRIPTION_PHARM.QTY_MANIP%TYPE DEFAULT NULL,
      unit_manip_in IN PRESCRIPTION_PHARM.UNIT_MANIP%TYPE DEFAULT NULL,
      pvp_in IN PRESCRIPTION_PHARM.PVP%TYPE DEFAULT NULL,
      p_ref_in IN PRESCRIPTION_PHARM.P_REF%TYPE DEFAULT NULL,
      p_ref_pen_in IN PRESCRIPTION_PHARM.P_REF_PEN%TYPE DEFAULT NULL,
      dt_prescription_pharm_tstz_in IN PRESCRIPTION_PHARM.DT_PRESCRIPTION_PHARM_TSTZ%TYPE DEFAULT NULL,
      dt_order_in IN PRESCRIPTION_PHARM.DT_ORDER%TYPE DEFAULT NULL,
      id_prof_order_in IN PRESCRIPTION_PHARM.ID_PROF_ORDER%TYPE DEFAULT NULL,
      id_order_type_in IN PRESCRIPTION_PHARM.ID_ORDER_TYPE%TYPE DEFAULT NULL,
      flg_co_sign_in IN PRESCRIPTION_PHARM.FLG_CO_SIGN%TYPE DEFAULT 'N',
      dt_co_sign_in IN PRESCRIPTION_PHARM.DT_CO_SIGN%TYPE DEFAULT NULL,
      notes_co_sign_in IN PRESCRIPTION_PHARM.NOTES_CO_SIGN%TYPE DEFAULT NULL,
      id_prof_co_sign_in IN PRESCRIPTION_PHARM.ID_PROF_CO_SIGN%TYPE DEFAULT NULL,
      id_unit_measure_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE%TYPE DEFAULT NULL,
      frequency_in IN PRESCRIPTION_PHARM.FREQUENCY%TYPE DEFAULT NULL,
      id_unit_measure_freq_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_FREQ%TYPE DEFAULT NULL,
      duration_in IN PRESCRIPTION_PHARM.DURATION%TYPE DEFAULT NULL,
      id_unit_measure_dur_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_DUR%TYPE DEFAULT NULL,
      dt_start_presc_tstz_in IN PRESCRIPTION_PHARM.DT_START_PRESC_TSTZ%TYPE DEFAULT NULL,
      dt_end_presc_tstz_in IN PRESCRIPTION_PHARM.DT_END_PRESC_TSTZ%TYPE DEFAULT NULL,
      refill_in IN PRESCRIPTION_PHARM.REFILL%TYPE DEFAULT NULL,
      emb_id_in IN PRESCRIPTION_PHARM.EMB_ID%TYPE DEFAULT NULL,
      qty_inst_in IN PRESCRIPTION_PHARM.QTY_INST%TYPE DEFAULT NULL,
      unit_measure_inst_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_INST%TYPE DEFAULT NULL,
      first_dose_in IN PRESCRIPTION_PHARM.FIRST_DOSE%TYPE DEFAULT NULL,
      package_number_in IN PRESCRIPTION_PHARM.PACKAGE_NUMBER%TYPE DEFAULT NULL,
      dt_expire_tstz_in IN PRESCRIPTION_PHARM.DT_EXPIRE_TSTZ%TYPE DEFAULT NULL,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE DEFAULT NULL,
      route_id_in IN PRESCRIPTION_PHARM.ROUTE_ID%TYPE DEFAULT NULL,
      regulation_id_in IN PRESCRIPTION_PHARM.REGULATION_ID%TYPE DEFAULT NULL,
      flg_interac_med_in IN PRESCRIPTION_PHARM.FLG_INTERAC_MED%TYPE DEFAULT 'N',
      flg_interac_allergy_in IN PRESCRIPTION_PHARM.FLG_INTERAC_ALLERGY%TYPE DEFAULT 'N',
      id_dietary_drug_in IN PRESCRIPTION_PHARM.ID_DIETARY_DRUG%TYPE DEFAULT NULL,
      id_manipulated_in IN PRESCRIPTION_PHARM.ID_MANIPULATED%TYPE DEFAULT NULL,
      order_modified_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED%TYPE DEFAULT NULL,
      dt_order_modified_in IN PRESCRIPTION_PHARM.DT_ORDER_MODIFIED%TYPE DEFAULT NULL,
      patient_notified_in IN PRESCRIPTION_PHARM.PATIENT_NOTIFIED%TYPE DEFAULT NULL,
      id_prof_last_change_in IN PRESCRIPTION_PHARM.ID_PROF_LAST_CHANGE%TYPE DEFAULT NULL,
      id_sw_last_change_in IN PRESCRIPTION_PHARM.ID_SW_LAST_CHANGE%TYPE DEFAULT NULL,
      id_inst_last_change_in IN PRESCRIPTION_PHARM.ID_INST_LAST_CHANGE%TYPE DEFAULT NULL,
      order_modified_id_issue_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_ID_ISSUE%TYPE DEFAULT NULL,
      order_modified_message_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_MESSAGE%TYPE DEFAULT NULL,
      id_pat_medication_list_in IN PRESCRIPTION_PHARM.ID_PAT_MEDICATION_LIST%TYPE DEFAULT NULL,
      id_other_product_in IN PRESCRIPTION_PHARM.ID_OTHER_PRODUCT%TYPE DEFAULT NULL,
      desc_other_product_in IN PRESCRIPTION_PHARM.DESC_OTHER_PRODUCT%TYPE DEFAULT NULL,
      status_flg_in IN PRESCRIPTION_PHARM.STATUS_FLG%TYPE DEFAULT NULL,
      status_icon_in IN PRESCRIPTION_PHARM.STATUS_ICON%TYPE DEFAULT NULL,
      status_msg_in IN PRESCRIPTION_PHARM.STATUS_MSG%TYPE DEFAULT NULL,
      status_str_in IN PRESCRIPTION_PHARM.STATUS_STR%TYPE DEFAULT NULL,
      dispense_in IN PRESCRIPTION_PHARM.DISPENSE%TYPE DEFAULT NULL,
      unit_measure_dispense_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_DISPENSE%TYPE DEFAULT NULL,
      flg_dosage_check_in IN PRESCRIPTION_PHARM.FLG_DOSAGE_CHECK%TYPE DEFAULT NULL,
      create_user_in IN PRESCRIPTION_PHARM.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN PRESCRIPTION_PHARM.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN PRESCRIPTION_PHARM.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN PRESCRIPTION_PHARM.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN PRESCRIPTION_PHARM.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN PRESCRIPTION_PHARM.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_first_presc_in IN PRESCRIPTION_PHARM.FLG_FIRST_PRESC%TYPE DEFAULT NULL,
      id_presc_directions_in IN PRESCRIPTION_PHARM.ID_PRESC_DIRECTIONS%TYPE DEFAULT NULL,
      flg_chronic_medication_in IN PRESCRIPTION_PHARM.FLG_CHRONIC_MEDICATION%TYPE DEFAULT 'N',
      chronic_notes_not_active_in IN PRESCRIPTION_PHARM.CHRONIC_NOTES_NOT_ACTIVE%TYPE DEFAULT NULL,
      id_chronic_motive_in IN PRESCRIPTION_PHARM.ID_CHRONIC_MOTIVE%TYPE DEFAULT NULL,
      id_prof_not_active_in IN PRESCRIPTION_PHARM.ID_PROF_NOT_ACTIVE%TYPE DEFAULT NULL,
      chronic_motive_descr_in IN PRESCRIPTION_PHARM.CHRONIC_MOTIVE_DESCR%TYPE DEFAULT NULL,
      dt_not_active_tstz_in IN PRESCRIPTION_PHARM.DT_NOT_ACTIVE_TSTZ%TYPE DEFAULT NULL,
      preco_sns_in IN PRESCRIPTION_PHARM.PRECO_SNS%TYPE DEFAULT NULL,
      preco_utente_in IN PRESCRIPTION_PHARM.PRECO_UTENTE%TYPE DEFAULT NULL,
      preco_utente_diff_in IN PRESCRIPTION_PHARM.PRECO_UTENTE_DIFF%TYPE DEFAULT NULL,
      compart_in IN PRESCRIPTION_PHARM.COMPART%TYPE DEFAULT NULL,
      id_regime_in IN PRESCRIPTION_PHARM.ID_REGIME%TYPE DEFAULT NULL,
      id_cdr_call_in IN PRESCRIPTION_PHARM.ID_CDR_CALL%TYPE DEFAULT NULL,
      id_prescription_pharm_out IN OUT PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE
      ,handle_error_in IN BOOLEAN := TRUE
      , rows_out OUT TABLE_VARCHAR
   )
   IS
        l_pky PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE := next_key;
   BEGIN
      ins (
         id_prescription_pharm_in => l_pky,
         id_prescription_in => id_prescription_in,
         id_drug_in => id_drug_in,
         qty_in => qty_in,
         generico_in => generico_in,
         dosage_in => dosage_in,
         justif_in => justif_in,
         flg_ci_in => flg_ci_in,
         flg_cheaper_in => flg_cheaper_in,
         flg_justif_in => flg_justif_in,
         flg_status_in => flg_status_in,
         desc_manip_in => desc_manip_in,
         stock_in => stock_in,
         notes_in => notes_in,
         flg_attention_in => flg_attention_in,
         flg_attention_print_in => flg_attention_print_in,
         desc_dietary_in => desc_dietary_in,
         qty_manip_in => qty_manip_in,
         unit_manip_in => unit_manip_in,
         pvp_in => pvp_in,
         p_ref_in => p_ref_in,
         p_ref_pen_in => p_ref_pen_in,
         dt_prescription_pharm_tstz_in => dt_prescription_pharm_tstz_in,
         dt_order_in => dt_order_in,
         id_prof_order_in => id_prof_order_in,
         id_order_type_in => id_order_type_in,
         flg_co_sign_in => flg_co_sign_in,
         dt_co_sign_in => dt_co_sign_in,
         notes_co_sign_in => notes_co_sign_in,
         id_prof_co_sign_in => id_prof_co_sign_in,
         id_unit_measure_in => id_unit_measure_in,
         frequency_in => frequency_in,
         id_unit_measure_freq_in => id_unit_measure_freq_in,
         duration_in => duration_in,
         id_unit_measure_dur_in => id_unit_measure_dur_in,
         dt_start_presc_tstz_in => dt_start_presc_tstz_in,
         dt_end_presc_tstz_in => dt_end_presc_tstz_in,
         refill_in => refill_in,
         emb_id_in => emb_id_in,
         qty_inst_in => qty_inst_in,
         unit_measure_inst_in => unit_measure_inst_in,
         first_dose_in => first_dose_in,
         package_number_in => package_number_in,
         dt_expire_tstz_in => dt_expire_tstz_in,
         vers_in => vers_in,
         route_id_in => route_id_in,
         regulation_id_in => regulation_id_in,
         flg_interac_med_in => flg_interac_med_in,
         flg_interac_allergy_in => flg_interac_allergy_in,
         id_dietary_drug_in => id_dietary_drug_in,
         id_manipulated_in => id_manipulated_in,
         order_modified_in => order_modified_in,
         dt_order_modified_in => dt_order_modified_in,
         patient_notified_in => patient_notified_in,
         id_prof_last_change_in => id_prof_last_change_in,
         id_sw_last_change_in => id_sw_last_change_in,
         id_inst_last_change_in => id_inst_last_change_in,
         order_modified_id_issue_in => order_modified_id_issue_in,
         order_modified_message_in => order_modified_message_in,
         id_pat_medication_list_in => id_pat_medication_list_in,
         id_other_product_in => id_other_product_in,
         desc_other_product_in => desc_other_product_in,
         status_flg_in => status_flg_in,
         status_icon_in => status_icon_in,
         status_msg_in => status_msg_in,
         status_str_in => status_str_in,
         dispense_in => dispense_in,
         unit_measure_dispense_in => unit_measure_dispense_in,
         flg_dosage_check_in => flg_dosage_check_in,
         create_user_in => create_user_in,
         create_time_in => create_time_in,
         create_institution_in => create_institution_in,
         update_user_in => update_user_in,
         update_time_in => update_time_in,
         update_institution_in => update_institution_in,
         flg_first_presc_in => flg_first_presc_in,
         id_presc_directions_in => id_presc_directions_in,
         flg_chronic_medication_in => flg_chronic_medication_in,
         chronic_notes_not_active_in => chronic_notes_not_active_in,
         id_chronic_motive_in => id_chronic_motive_in,
         id_prof_not_active_in => id_prof_not_active_in,
         chronic_motive_descr_in => chronic_motive_descr_in,
         dt_not_active_tstz_in => dt_not_active_tstz_in,
         preco_sns_in => preco_sns_in,
         preco_utente_in => preco_utente_in,
         preco_utente_diff_in => preco_utente_diff_in,
         compart_in => compart_in,
         id_regime_in => id_regime_in,
         id_cdr_call_in => id_cdr_call_in
         ,handle_error_in => handle_error_in
         , rows_out => rows_out
         );
      id_prescription_pharm_out := l_pky;
   END ins;

   PROCEDURE ins (
      id_prescription_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION%TYPE DEFAULT NULL,
      id_drug_in IN PRESCRIPTION_PHARM.ID_DRUG%TYPE DEFAULT NULL,
      qty_in IN PRESCRIPTION_PHARM.QTY%TYPE DEFAULT NULL,
      generico_in IN PRESCRIPTION_PHARM.GENERICO%TYPE DEFAULT NULL,
      dosage_in IN PRESCRIPTION_PHARM.DOSAGE%TYPE DEFAULT NULL,
      justif_in IN PRESCRIPTION_PHARM.JUSTIF%TYPE DEFAULT NULL,
      flg_ci_in IN PRESCRIPTION_PHARM.FLG_CI%TYPE DEFAULT 'N',
      flg_cheaper_in IN PRESCRIPTION_PHARM.FLG_CHEAPER%TYPE DEFAULT 'N',
      flg_justif_in IN PRESCRIPTION_PHARM.FLG_JUSTIF%TYPE DEFAULT 'N',
      flg_status_in IN PRESCRIPTION_PHARM.FLG_STATUS%TYPE DEFAULT NULL,
      desc_manip_in IN PRESCRIPTION_PHARM.DESC_MANIP%TYPE DEFAULT NULL,
      stock_in IN PRESCRIPTION_PHARM.STOCK%TYPE DEFAULT NULL,
      notes_in IN PRESCRIPTION_PHARM.NOTES%TYPE DEFAULT NULL,
      flg_attention_in IN PRESCRIPTION_PHARM.FLG_ATTENTION%TYPE DEFAULT NULL,
      flg_attention_print_in IN PRESCRIPTION_PHARM.FLG_ATTENTION_PRINT%TYPE DEFAULT NULL,
      desc_dietary_in IN PRESCRIPTION_PHARM.DESC_DIETARY%TYPE DEFAULT NULL,
      qty_manip_in IN PRESCRIPTION_PHARM.QTY_MANIP%TYPE DEFAULT NULL,
      unit_manip_in IN PRESCRIPTION_PHARM.UNIT_MANIP%TYPE DEFAULT NULL,
      pvp_in IN PRESCRIPTION_PHARM.PVP%TYPE DEFAULT NULL,
      p_ref_in IN PRESCRIPTION_PHARM.P_REF%TYPE DEFAULT NULL,
      p_ref_pen_in IN PRESCRIPTION_PHARM.P_REF_PEN%TYPE DEFAULT NULL,
      dt_prescription_pharm_tstz_in IN PRESCRIPTION_PHARM.DT_PRESCRIPTION_PHARM_TSTZ%TYPE DEFAULT NULL,
      dt_order_in IN PRESCRIPTION_PHARM.DT_ORDER%TYPE DEFAULT NULL,
      id_prof_order_in IN PRESCRIPTION_PHARM.ID_PROF_ORDER%TYPE DEFAULT NULL,
      id_order_type_in IN PRESCRIPTION_PHARM.ID_ORDER_TYPE%TYPE DEFAULT NULL,
      flg_co_sign_in IN PRESCRIPTION_PHARM.FLG_CO_SIGN%TYPE DEFAULT 'N',
      dt_co_sign_in IN PRESCRIPTION_PHARM.DT_CO_SIGN%TYPE DEFAULT NULL,
      notes_co_sign_in IN PRESCRIPTION_PHARM.NOTES_CO_SIGN%TYPE DEFAULT NULL,
      id_prof_co_sign_in IN PRESCRIPTION_PHARM.ID_PROF_CO_SIGN%TYPE DEFAULT NULL,
      id_unit_measure_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE%TYPE DEFAULT NULL,
      frequency_in IN PRESCRIPTION_PHARM.FREQUENCY%TYPE DEFAULT NULL,
      id_unit_measure_freq_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_FREQ%TYPE DEFAULT NULL,
      duration_in IN PRESCRIPTION_PHARM.DURATION%TYPE DEFAULT NULL,
      id_unit_measure_dur_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_DUR%TYPE DEFAULT NULL,
      dt_start_presc_tstz_in IN PRESCRIPTION_PHARM.DT_START_PRESC_TSTZ%TYPE DEFAULT NULL,
      dt_end_presc_tstz_in IN PRESCRIPTION_PHARM.DT_END_PRESC_TSTZ%TYPE DEFAULT NULL,
      refill_in IN PRESCRIPTION_PHARM.REFILL%TYPE DEFAULT NULL,
      emb_id_in IN PRESCRIPTION_PHARM.EMB_ID%TYPE DEFAULT NULL,
      qty_inst_in IN PRESCRIPTION_PHARM.QTY_INST%TYPE DEFAULT NULL,
      unit_measure_inst_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_INST%TYPE DEFAULT NULL,
      first_dose_in IN PRESCRIPTION_PHARM.FIRST_DOSE%TYPE DEFAULT NULL,
      package_number_in IN PRESCRIPTION_PHARM.PACKAGE_NUMBER%TYPE DEFAULT NULL,
      dt_expire_tstz_in IN PRESCRIPTION_PHARM.DT_EXPIRE_TSTZ%TYPE DEFAULT NULL,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE DEFAULT NULL,
      route_id_in IN PRESCRIPTION_PHARM.ROUTE_ID%TYPE DEFAULT NULL,
      regulation_id_in IN PRESCRIPTION_PHARM.REGULATION_ID%TYPE DEFAULT NULL,
      flg_interac_med_in IN PRESCRIPTION_PHARM.FLG_INTERAC_MED%TYPE DEFAULT 'N',
      flg_interac_allergy_in IN PRESCRIPTION_PHARM.FLG_INTERAC_ALLERGY%TYPE DEFAULT 'N',
      id_dietary_drug_in IN PRESCRIPTION_PHARM.ID_DIETARY_DRUG%TYPE DEFAULT NULL,
      id_manipulated_in IN PRESCRIPTION_PHARM.ID_MANIPULATED%TYPE DEFAULT NULL,
      order_modified_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED%TYPE DEFAULT NULL,
      dt_order_modified_in IN PRESCRIPTION_PHARM.DT_ORDER_MODIFIED%TYPE DEFAULT NULL,
      patient_notified_in IN PRESCRIPTION_PHARM.PATIENT_NOTIFIED%TYPE DEFAULT NULL,
      id_prof_last_change_in IN PRESCRIPTION_PHARM.ID_PROF_LAST_CHANGE%TYPE DEFAULT NULL,
      id_sw_last_change_in IN PRESCRIPTION_PHARM.ID_SW_LAST_CHANGE%TYPE DEFAULT NULL,
      id_inst_last_change_in IN PRESCRIPTION_PHARM.ID_INST_LAST_CHANGE%TYPE DEFAULT NULL,
      order_modified_id_issue_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_ID_ISSUE%TYPE DEFAULT NULL,
      order_modified_message_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_MESSAGE%TYPE DEFAULT NULL,
      id_pat_medication_list_in IN PRESCRIPTION_PHARM.ID_PAT_MEDICATION_LIST%TYPE DEFAULT NULL,
      id_other_product_in IN PRESCRIPTION_PHARM.ID_OTHER_PRODUCT%TYPE DEFAULT NULL,
      desc_other_product_in IN PRESCRIPTION_PHARM.DESC_OTHER_PRODUCT%TYPE DEFAULT NULL,
      status_flg_in IN PRESCRIPTION_PHARM.STATUS_FLG%TYPE DEFAULT NULL,
      status_icon_in IN PRESCRIPTION_PHARM.STATUS_ICON%TYPE DEFAULT NULL,
      status_msg_in IN PRESCRIPTION_PHARM.STATUS_MSG%TYPE DEFAULT NULL,
      status_str_in IN PRESCRIPTION_PHARM.STATUS_STR%TYPE DEFAULT NULL,
      dispense_in IN PRESCRIPTION_PHARM.DISPENSE%TYPE DEFAULT NULL,
      unit_measure_dispense_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_DISPENSE%TYPE DEFAULT NULL,
      flg_dosage_check_in IN PRESCRIPTION_PHARM.FLG_DOSAGE_CHECK%TYPE DEFAULT NULL,
      create_user_in IN PRESCRIPTION_PHARM.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN PRESCRIPTION_PHARM.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN PRESCRIPTION_PHARM.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN PRESCRIPTION_PHARM.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN PRESCRIPTION_PHARM.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN PRESCRIPTION_PHARM.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_first_presc_in IN PRESCRIPTION_PHARM.FLG_FIRST_PRESC%TYPE DEFAULT NULL,
      id_presc_directions_in IN PRESCRIPTION_PHARM.ID_PRESC_DIRECTIONS%TYPE DEFAULT NULL,
      flg_chronic_medication_in IN PRESCRIPTION_PHARM.FLG_CHRONIC_MEDICATION%TYPE DEFAULT 'N',
      chronic_notes_not_active_in IN PRESCRIPTION_PHARM.CHRONIC_NOTES_NOT_ACTIVE%TYPE DEFAULT NULL,
      id_chronic_motive_in IN PRESCRIPTION_PHARM.ID_CHRONIC_MOTIVE%TYPE DEFAULT NULL,
      id_prof_not_active_in IN PRESCRIPTION_PHARM.ID_PROF_NOT_ACTIVE%TYPE DEFAULT NULL,
      chronic_motive_descr_in IN PRESCRIPTION_PHARM.CHRONIC_MOTIVE_DESCR%TYPE DEFAULT NULL,
      dt_not_active_tstz_in IN PRESCRIPTION_PHARM.DT_NOT_ACTIVE_TSTZ%TYPE DEFAULT NULL,
      preco_sns_in IN PRESCRIPTION_PHARM.PRECO_SNS%TYPE DEFAULT NULL,
      preco_utente_in IN PRESCRIPTION_PHARM.PRECO_UTENTE%TYPE DEFAULT NULL,
      preco_utente_diff_in IN PRESCRIPTION_PHARM.PRECO_UTENTE_DIFF%TYPE DEFAULT NULL,
      compart_in IN PRESCRIPTION_PHARM.COMPART%TYPE DEFAULT NULL,
      id_regime_in IN PRESCRIPTION_PHARM.ID_REGIME%TYPE DEFAULT NULL,
      id_cdr_call_in IN PRESCRIPTION_PHARM.ID_CDR_CALL%TYPE DEFAULT NULL,
      id_prescription_pharm_out IN OUT PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE
      ,handle_error_in IN BOOLEAN := TRUE
   )
   IS
        rows_out TABLE_VARCHAR;
   BEGIN
      ins (
      id_prescription_in => id_prescription_in,
      id_drug_in => id_drug_in,
      qty_in => qty_in,
      generico_in => generico_in,
      dosage_in => dosage_in,
      justif_in => justif_in,
      flg_ci_in => flg_ci_in,
      flg_cheaper_in => flg_cheaper_in,
      flg_justif_in => flg_justif_in,
      flg_status_in => flg_status_in,
      desc_manip_in => desc_manip_in,
      stock_in => stock_in,
      notes_in => notes_in,
      flg_attention_in => flg_attention_in,
      flg_attention_print_in => flg_attention_print_in,
      desc_dietary_in => desc_dietary_in,
      qty_manip_in => qty_manip_in,
      unit_manip_in => unit_manip_in,
      pvp_in => pvp_in,
      p_ref_in => p_ref_in,
      p_ref_pen_in => p_ref_pen_in,
      dt_prescription_pharm_tstz_in => dt_prescription_pharm_tstz_in,
      dt_order_in => dt_order_in,
      id_prof_order_in => id_prof_order_in,
      id_order_type_in => id_order_type_in,
      flg_co_sign_in => flg_co_sign_in,
      dt_co_sign_in => dt_co_sign_in,
      notes_co_sign_in => notes_co_sign_in,
      id_prof_co_sign_in => id_prof_co_sign_in,
      id_unit_measure_in => id_unit_measure_in,
      frequency_in => frequency_in,
      id_unit_measure_freq_in => id_unit_measure_freq_in,
      duration_in => duration_in,
      id_unit_measure_dur_in => id_unit_measure_dur_in,
      dt_start_presc_tstz_in => dt_start_presc_tstz_in,
      dt_end_presc_tstz_in => dt_end_presc_tstz_in,
      refill_in => refill_in,
      emb_id_in => emb_id_in,
      qty_inst_in => qty_inst_in,
      unit_measure_inst_in => unit_measure_inst_in,
      first_dose_in => first_dose_in,
      package_number_in => package_number_in,
      dt_expire_tstz_in => dt_expire_tstz_in,
      vers_in => vers_in,
      route_id_in => route_id_in,
      regulation_id_in => regulation_id_in,
      flg_interac_med_in => flg_interac_med_in,
      flg_interac_allergy_in => flg_interac_allergy_in,
      id_dietary_drug_in => id_dietary_drug_in,
      id_manipulated_in => id_manipulated_in,
      order_modified_in => order_modified_in,
      dt_order_modified_in => dt_order_modified_in,
      patient_notified_in => patient_notified_in,
      id_prof_last_change_in => id_prof_last_change_in,
      id_sw_last_change_in => id_sw_last_change_in,
      id_inst_last_change_in => id_inst_last_change_in,
      order_modified_id_issue_in => order_modified_id_issue_in,
      order_modified_message_in => order_modified_message_in,
      id_pat_medication_list_in => id_pat_medication_list_in,
      id_other_product_in => id_other_product_in,
      desc_other_product_in => desc_other_product_in,
      status_flg_in => status_flg_in,
      status_icon_in => status_icon_in,
      status_msg_in => status_msg_in,
      status_str_in => status_str_in,
      dispense_in => dispense_in,
      unit_measure_dispense_in => unit_measure_dispense_in,
      flg_dosage_check_in => flg_dosage_check_in,
      create_user_in => create_user_in,
      create_time_in => create_time_in,
      create_institution_in => create_institution_in,
      update_user_in => update_user_in,
      update_time_in => update_time_in,
      update_institution_in => update_institution_in,
      flg_first_presc_in => flg_first_presc_in,
      id_presc_directions_in => id_presc_directions_in,
      flg_chronic_medication_in => flg_chronic_medication_in,
      chronic_notes_not_active_in => chronic_notes_not_active_in,
      id_chronic_motive_in => id_chronic_motive_in,
      id_prof_not_active_in => id_prof_not_active_in,
      chronic_motive_descr_in => chronic_motive_descr_in,
      dt_not_active_tstz_in => dt_not_active_tstz_in,
      preco_sns_in => preco_sns_in,
      preco_utente_in => preco_utente_in,
      preco_utente_diff_in => preco_utente_diff_in,
      compart_in => compart_in,
      id_regime_in => id_regime_in,
      id_cdr_call_in => id_cdr_call_in,
      id_prescription_pharm_out => id_prescription_pharm_out
      ,handle_error_in => handle_error_in
      , rows_out => rows_out
   );
   END ins;

   FUNCTION ins (
      id_prescription_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION%TYPE DEFAULT NULL,
      id_drug_in IN PRESCRIPTION_PHARM.ID_DRUG%TYPE DEFAULT NULL,
      qty_in IN PRESCRIPTION_PHARM.QTY%TYPE DEFAULT NULL,
      generico_in IN PRESCRIPTION_PHARM.GENERICO%TYPE DEFAULT NULL,
      dosage_in IN PRESCRIPTION_PHARM.DOSAGE%TYPE DEFAULT NULL,
      justif_in IN PRESCRIPTION_PHARM.JUSTIF%TYPE DEFAULT NULL,
      flg_ci_in IN PRESCRIPTION_PHARM.FLG_CI%TYPE DEFAULT 'N',
      flg_cheaper_in IN PRESCRIPTION_PHARM.FLG_CHEAPER%TYPE DEFAULT 'N',
      flg_justif_in IN PRESCRIPTION_PHARM.FLG_JUSTIF%TYPE DEFAULT 'N',
      flg_status_in IN PRESCRIPTION_PHARM.FLG_STATUS%TYPE DEFAULT NULL,
      desc_manip_in IN PRESCRIPTION_PHARM.DESC_MANIP%TYPE DEFAULT NULL,
      stock_in IN PRESCRIPTION_PHARM.STOCK%TYPE DEFAULT NULL,
      notes_in IN PRESCRIPTION_PHARM.NOTES%TYPE DEFAULT NULL,
      flg_attention_in IN PRESCRIPTION_PHARM.FLG_ATTENTION%TYPE DEFAULT NULL,
      flg_attention_print_in IN PRESCRIPTION_PHARM.FLG_ATTENTION_PRINT%TYPE DEFAULT NULL,
      desc_dietary_in IN PRESCRIPTION_PHARM.DESC_DIETARY%TYPE DEFAULT NULL,
      qty_manip_in IN PRESCRIPTION_PHARM.QTY_MANIP%TYPE DEFAULT NULL,
      unit_manip_in IN PRESCRIPTION_PHARM.UNIT_MANIP%TYPE DEFAULT NULL,
      pvp_in IN PRESCRIPTION_PHARM.PVP%TYPE DEFAULT NULL,
      p_ref_in IN PRESCRIPTION_PHARM.P_REF%TYPE DEFAULT NULL,
      p_ref_pen_in IN PRESCRIPTION_PHARM.P_REF_PEN%TYPE DEFAULT NULL,
      dt_prescription_pharm_tstz_in IN PRESCRIPTION_PHARM.DT_PRESCRIPTION_PHARM_TSTZ%TYPE DEFAULT NULL,
      dt_order_in IN PRESCRIPTION_PHARM.DT_ORDER%TYPE DEFAULT NULL,
      id_prof_order_in IN PRESCRIPTION_PHARM.ID_PROF_ORDER%TYPE DEFAULT NULL,
      id_order_type_in IN PRESCRIPTION_PHARM.ID_ORDER_TYPE%TYPE DEFAULT NULL,
      flg_co_sign_in IN PRESCRIPTION_PHARM.FLG_CO_SIGN%TYPE DEFAULT 'N',
      dt_co_sign_in IN PRESCRIPTION_PHARM.DT_CO_SIGN%TYPE DEFAULT NULL,
      notes_co_sign_in IN PRESCRIPTION_PHARM.NOTES_CO_SIGN%TYPE DEFAULT NULL,
      id_prof_co_sign_in IN PRESCRIPTION_PHARM.ID_PROF_CO_SIGN%TYPE DEFAULT NULL,
      id_unit_measure_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE%TYPE DEFAULT NULL,
      frequency_in IN PRESCRIPTION_PHARM.FREQUENCY%TYPE DEFAULT NULL,
      id_unit_measure_freq_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_FREQ%TYPE DEFAULT NULL,
      duration_in IN PRESCRIPTION_PHARM.DURATION%TYPE DEFAULT NULL,
      id_unit_measure_dur_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_DUR%TYPE DEFAULT NULL,
      dt_start_presc_tstz_in IN PRESCRIPTION_PHARM.DT_START_PRESC_TSTZ%TYPE DEFAULT NULL,
      dt_end_presc_tstz_in IN PRESCRIPTION_PHARM.DT_END_PRESC_TSTZ%TYPE DEFAULT NULL,
      refill_in IN PRESCRIPTION_PHARM.REFILL%TYPE DEFAULT NULL,
      emb_id_in IN PRESCRIPTION_PHARM.EMB_ID%TYPE DEFAULT NULL,
      qty_inst_in IN PRESCRIPTION_PHARM.QTY_INST%TYPE DEFAULT NULL,
      unit_measure_inst_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_INST%TYPE DEFAULT NULL,
      first_dose_in IN PRESCRIPTION_PHARM.FIRST_DOSE%TYPE DEFAULT NULL,
      package_number_in IN PRESCRIPTION_PHARM.PACKAGE_NUMBER%TYPE DEFAULT NULL,
      dt_expire_tstz_in IN PRESCRIPTION_PHARM.DT_EXPIRE_TSTZ%TYPE DEFAULT NULL,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE DEFAULT NULL,
      route_id_in IN PRESCRIPTION_PHARM.ROUTE_ID%TYPE DEFAULT NULL,
      regulation_id_in IN PRESCRIPTION_PHARM.REGULATION_ID%TYPE DEFAULT NULL,
      flg_interac_med_in IN PRESCRIPTION_PHARM.FLG_INTERAC_MED%TYPE DEFAULT 'N',
      flg_interac_allergy_in IN PRESCRIPTION_PHARM.FLG_INTERAC_ALLERGY%TYPE DEFAULT 'N',
      id_dietary_drug_in IN PRESCRIPTION_PHARM.ID_DIETARY_DRUG%TYPE DEFAULT NULL,
      id_manipulated_in IN PRESCRIPTION_PHARM.ID_MANIPULATED%TYPE DEFAULT NULL,
      order_modified_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED%TYPE DEFAULT NULL,
      dt_order_modified_in IN PRESCRIPTION_PHARM.DT_ORDER_MODIFIED%TYPE DEFAULT NULL,
      patient_notified_in IN PRESCRIPTION_PHARM.PATIENT_NOTIFIED%TYPE DEFAULT NULL,
      id_prof_last_change_in IN PRESCRIPTION_PHARM.ID_PROF_LAST_CHANGE%TYPE DEFAULT NULL,
      id_sw_last_change_in IN PRESCRIPTION_PHARM.ID_SW_LAST_CHANGE%TYPE DEFAULT NULL,
      id_inst_last_change_in IN PRESCRIPTION_PHARM.ID_INST_LAST_CHANGE%TYPE DEFAULT NULL,
      order_modified_id_issue_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_ID_ISSUE%TYPE DEFAULT NULL,
      order_modified_message_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_MESSAGE%TYPE DEFAULT NULL,
      id_pat_medication_list_in IN PRESCRIPTION_PHARM.ID_PAT_MEDICATION_LIST%TYPE DEFAULT NULL,
      id_other_product_in IN PRESCRIPTION_PHARM.ID_OTHER_PRODUCT%TYPE DEFAULT NULL,
      desc_other_product_in IN PRESCRIPTION_PHARM.DESC_OTHER_PRODUCT%TYPE DEFAULT NULL,
      status_flg_in IN PRESCRIPTION_PHARM.STATUS_FLG%TYPE DEFAULT NULL,
      status_icon_in IN PRESCRIPTION_PHARM.STATUS_ICON%TYPE DEFAULT NULL,
      status_msg_in IN PRESCRIPTION_PHARM.STATUS_MSG%TYPE DEFAULT NULL,
      status_str_in IN PRESCRIPTION_PHARM.STATUS_STR%TYPE DEFAULT NULL,
      dispense_in IN PRESCRIPTION_PHARM.DISPENSE%TYPE DEFAULT NULL,
      unit_measure_dispense_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_DISPENSE%TYPE DEFAULT NULL,
      flg_dosage_check_in IN PRESCRIPTION_PHARM.FLG_DOSAGE_CHECK%TYPE DEFAULT NULL,
      create_user_in IN PRESCRIPTION_PHARM.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN PRESCRIPTION_PHARM.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN PRESCRIPTION_PHARM.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN PRESCRIPTION_PHARM.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN PRESCRIPTION_PHARM.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN PRESCRIPTION_PHARM.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_first_presc_in IN PRESCRIPTION_PHARM.FLG_FIRST_PRESC%TYPE DEFAULT NULL,
      id_presc_directions_in IN PRESCRIPTION_PHARM.ID_PRESC_DIRECTIONS%TYPE DEFAULT NULL,
      flg_chronic_medication_in IN PRESCRIPTION_PHARM.FLG_CHRONIC_MEDICATION%TYPE DEFAULT 'N',
      chronic_notes_not_active_in IN PRESCRIPTION_PHARM.CHRONIC_NOTES_NOT_ACTIVE%TYPE DEFAULT NULL,
      id_chronic_motive_in IN PRESCRIPTION_PHARM.ID_CHRONIC_MOTIVE%TYPE DEFAULT NULL,
      id_prof_not_active_in IN PRESCRIPTION_PHARM.ID_PROF_NOT_ACTIVE%TYPE DEFAULT NULL,
      chronic_motive_descr_in IN PRESCRIPTION_PHARM.CHRONIC_MOTIVE_DESCR%TYPE DEFAULT NULL,
      dt_not_active_tstz_in IN PRESCRIPTION_PHARM.DT_NOT_ACTIVE_TSTZ%TYPE DEFAULT NULL,
      preco_sns_in IN PRESCRIPTION_PHARM.PRECO_SNS%TYPE DEFAULT NULL,
      preco_utente_in IN PRESCRIPTION_PHARM.PRECO_UTENTE%TYPE DEFAULT NULL,
      preco_utente_diff_in IN PRESCRIPTION_PHARM.PRECO_UTENTE_DIFF%TYPE DEFAULT NULL,
      compart_in IN PRESCRIPTION_PHARM.COMPART%TYPE DEFAULT NULL,
      id_regime_in IN PRESCRIPTION_PHARM.ID_REGIME%TYPE DEFAULT NULL,
      id_cdr_call_in IN PRESCRIPTION_PHARM.ID_CDR_CALL%TYPE DEFAULT NULL
      ,handle_error_in IN BOOLEAN := TRUE
      , rows_out OUT TABLE_VARCHAR
   )
      RETURN
         PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE
   IS
        l_pky PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE := next_key;
   BEGIN
      ins (
         id_prescription_pharm_in => l_pky,
         id_prescription_in => id_prescription_in,
         id_drug_in => id_drug_in,
         qty_in => qty_in,
         generico_in => generico_in,
         dosage_in => dosage_in,
         justif_in => justif_in,
         flg_ci_in => flg_ci_in,
         flg_cheaper_in => flg_cheaper_in,
         flg_justif_in => flg_justif_in,
         flg_status_in => flg_status_in,
         desc_manip_in => desc_manip_in,
         stock_in => stock_in,
         notes_in => notes_in,
         flg_attention_in => flg_attention_in,
         flg_attention_print_in => flg_attention_print_in,
         desc_dietary_in => desc_dietary_in,
         qty_manip_in => qty_manip_in,
         unit_manip_in => unit_manip_in,
         pvp_in => pvp_in,
         p_ref_in => p_ref_in,
         p_ref_pen_in => p_ref_pen_in,
         dt_prescription_pharm_tstz_in => dt_prescription_pharm_tstz_in,
         dt_order_in => dt_order_in,
         id_prof_order_in => id_prof_order_in,
         id_order_type_in => id_order_type_in,
         flg_co_sign_in => flg_co_sign_in,
         dt_co_sign_in => dt_co_sign_in,
         notes_co_sign_in => notes_co_sign_in,
         id_prof_co_sign_in => id_prof_co_sign_in,
         id_unit_measure_in => id_unit_measure_in,
         frequency_in => frequency_in,
         id_unit_measure_freq_in => id_unit_measure_freq_in,
         duration_in => duration_in,
         id_unit_measure_dur_in => id_unit_measure_dur_in,
         dt_start_presc_tstz_in => dt_start_presc_tstz_in,
         dt_end_presc_tstz_in => dt_end_presc_tstz_in,
         refill_in => refill_in,
         emb_id_in => emb_id_in,
         qty_inst_in => qty_inst_in,
         unit_measure_inst_in => unit_measure_inst_in,
         first_dose_in => first_dose_in,
         package_number_in => package_number_in,
         dt_expire_tstz_in => dt_expire_tstz_in,
         vers_in => vers_in,
         route_id_in => route_id_in,
         regulation_id_in => regulation_id_in,
         flg_interac_med_in => flg_interac_med_in,
         flg_interac_allergy_in => flg_interac_allergy_in,
         id_dietary_drug_in => id_dietary_drug_in,
         id_manipulated_in => id_manipulated_in,
         order_modified_in => order_modified_in,
         dt_order_modified_in => dt_order_modified_in,
         patient_notified_in => patient_notified_in,
         id_prof_last_change_in => id_prof_last_change_in,
         id_sw_last_change_in => id_sw_last_change_in,
         id_inst_last_change_in => id_inst_last_change_in,
         order_modified_id_issue_in => order_modified_id_issue_in,
         order_modified_message_in => order_modified_message_in,
         id_pat_medication_list_in => id_pat_medication_list_in,
         id_other_product_in => id_other_product_in,
         desc_other_product_in => desc_other_product_in,
         status_flg_in => status_flg_in,
         status_icon_in => status_icon_in,
         status_msg_in => status_msg_in,
         status_str_in => status_str_in,
         dispense_in => dispense_in,
         unit_measure_dispense_in => unit_measure_dispense_in,
         flg_dosage_check_in => flg_dosage_check_in,
         create_user_in => create_user_in,
         create_time_in => create_time_in,
         create_institution_in => create_institution_in,
         update_user_in => update_user_in,
         update_time_in => update_time_in,
         update_institution_in => update_institution_in,
         flg_first_presc_in => flg_first_presc_in,
         id_presc_directions_in => id_presc_directions_in,
         flg_chronic_medication_in => flg_chronic_medication_in,
         chronic_notes_not_active_in => chronic_notes_not_active_in,
         id_chronic_motive_in => id_chronic_motive_in,
         id_prof_not_active_in => id_prof_not_active_in,
         chronic_motive_descr_in => chronic_motive_descr_in,
         dt_not_active_tstz_in => dt_not_active_tstz_in,
         preco_sns_in => preco_sns_in,
         preco_utente_in => preco_utente_in,
         preco_utente_diff_in => preco_utente_diff_in,
         compart_in => compart_in,
         id_regime_in => id_regime_in,
         id_cdr_call_in => id_cdr_call_in
         ,handle_error_in => handle_error_in
         , rows_out => rows_out
         );
      RETURN l_pky;
   END ins;

   FUNCTION ins (
      id_prescription_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION%TYPE DEFAULT NULL,
      id_drug_in IN PRESCRIPTION_PHARM.ID_DRUG%TYPE DEFAULT NULL,
      qty_in IN PRESCRIPTION_PHARM.QTY%TYPE DEFAULT NULL,
      generico_in IN PRESCRIPTION_PHARM.GENERICO%TYPE DEFAULT NULL,
      dosage_in IN PRESCRIPTION_PHARM.DOSAGE%TYPE DEFAULT NULL,
      justif_in IN PRESCRIPTION_PHARM.JUSTIF%TYPE DEFAULT NULL,
      flg_ci_in IN PRESCRIPTION_PHARM.FLG_CI%TYPE DEFAULT 'N',
      flg_cheaper_in IN PRESCRIPTION_PHARM.FLG_CHEAPER%TYPE DEFAULT 'N',
      flg_justif_in IN PRESCRIPTION_PHARM.FLG_JUSTIF%TYPE DEFAULT 'N',
      flg_status_in IN PRESCRIPTION_PHARM.FLG_STATUS%TYPE DEFAULT NULL,
      desc_manip_in IN PRESCRIPTION_PHARM.DESC_MANIP%TYPE DEFAULT NULL,
      stock_in IN PRESCRIPTION_PHARM.STOCK%TYPE DEFAULT NULL,
      notes_in IN PRESCRIPTION_PHARM.NOTES%TYPE DEFAULT NULL,
      flg_attention_in IN PRESCRIPTION_PHARM.FLG_ATTENTION%TYPE DEFAULT NULL,
      flg_attention_print_in IN PRESCRIPTION_PHARM.FLG_ATTENTION_PRINT%TYPE DEFAULT NULL,
      desc_dietary_in IN PRESCRIPTION_PHARM.DESC_DIETARY%TYPE DEFAULT NULL,
      qty_manip_in IN PRESCRIPTION_PHARM.QTY_MANIP%TYPE DEFAULT NULL,
      unit_manip_in IN PRESCRIPTION_PHARM.UNIT_MANIP%TYPE DEFAULT NULL,
      pvp_in IN PRESCRIPTION_PHARM.PVP%TYPE DEFAULT NULL,
      p_ref_in IN PRESCRIPTION_PHARM.P_REF%TYPE DEFAULT NULL,
      p_ref_pen_in IN PRESCRIPTION_PHARM.P_REF_PEN%TYPE DEFAULT NULL,
      dt_prescription_pharm_tstz_in IN PRESCRIPTION_PHARM.DT_PRESCRIPTION_PHARM_TSTZ%TYPE DEFAULT NULL,
      dt_order_in IN PRESCRIPTION_PHARM.DT_ORDER%TYPE DEFAULT NULL,
      id_prof_order_in IN PRESCRIPTION_PHARM.ID_PROF_ORDER%TYPE DEFAULT NULL,
      id_order_type_in IN PRESCRIPTION_PHARM.ID_ORDER_TYPE%TYPE DEFAULT NULL,
      flg_co_sign_in IN PRESCRIPTION_PHARM.FLG_CO_SIGN%TYPE DEFAULT 'N',
      dt_co_sign_in IN PRESCRIPTION_PHARM.DT_CO_SIGN%TYPE DEFAULT NULL,
      notes_co_sign_in IN PRESCRIPTION_PHARM.NOTES_CO_SIGN%TYPE DEFAULT NULL,
      id_prof_co_sign_in IN PRESCRIPTION_PHARM.ID_PROF_CO_SIGN%TYPE DEFAULT NULL,
      id_unit_measure_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE%TYPE DEFAULT NULL,
      frequency_in IN PRESCRIPTION_PHARM.FREQUENCY%TYPE DEFAULT NULL,
      id_unit_measure_freq_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_FREQ%TYPE DEFAULT NULL,
      duration_in IN PRESCRIPTION_PHARM.DURATION%TYPE DEFAULT NULL,
      id_unit_measure_dur_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_DUR%TYPE DEFAULT NULL,
      dt_start_presc_tstz_in IN PRESCRIPTION_PHARM.DT_START_PRESC_TSTZ%TYPE DEFAULT NULL,
      dt_end_presc_tstz_in IN PRESCRIPTION_PHARM.DT_END_PRESC_TSTZ%TYPE DEFAULT NULL,
      refill_in IN PRESCRIPTION_PHARM.REFILL%TYPE DEFAULT NULL,
      emb_id_in IN PRESCRIPTION_PHARM.EMB_ID%TYPE DEFAULT NULL,
      qty_inst_in IN PRESCRIPTION_PHARM.QTY_INST%TYPE DEFAULT NULL,
      unit_measure_inst_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_INST%TYPE DEFAULT NULL,
      first_dose_in IN PRESCRIPTION_PHARM.FIRST_DOSE%TYPE DEFAULT NULL,
      package_number_in IN PRESCRIPTION_PHARM.PACKAGE_NUMBER%TYPE DEFAULT NULL,
      dt_expire_tstz_in IN PRESCRIPTION_PHARM.DT_EXPIRE_TSTZ%TYPE DEFAULT NULL,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE DEFAULT NULL,
      route_id_in IN PRESCRIPTION_PHARM.ROUTE_ID%TYPE DEFAULT NULL,
      regulation_id_in IN PRESCRIPTION_PHARM.REGULATION_ID%TYPE DEFAULT NULL,
      flg_interac_med_in IN PRESCRIPTION_PHARM.FLG_INTERAC_MED%TYPE DEFAULT 'N',
      flg_interac_allergy_in IN PRESCRIPTION_PHARM.FLG_INTERAC_ALLERGY%TYPE DEFAULT 'N',
      id_dietary_drug_in IN PRESCRIPTION_PHARM.ID_DIETARY_DRUG%TYPE DEFAULT NULL,
      id_manipulated_in IN PRESCRIPTION_PHARM.ID_MANIPULATED%TYPE DEFAULT NULL,
      order_modified_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED%TYPE DEFAULT NULL,
      dt_order_modified_in IN PRESCRIPTION_PHARM.DT_ORDER_MODIFIED%TYPE DEFAULT NULL,
      patient_notified_in IN PRESCRIPTION_PHARM.PATIENT_NOTIFIED%TYPE DEFAULT NULL,
      id_prof_last_change_in IN PRESCRIPTION_PHARM.ID_PROF_LAST_CHANGE%TYPE DEFAULT NULL,
      id_sw_last_change_in IN PRESCRIPTION_PHARM.ID_SW_LAST_CHANGE%TYPE DEFAULT NULL,
      id_inst_last_change_in IN PRESCRIPTION_PHARM.ID_INST_LAST_CHANGE%TYPE DEFAULT NULL,
      order_modified_id_issue_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_ID_ISSUE%TYPE DEFAULT NULL,
      order_modified_message_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_MESSAGE%TYPE DEFAULT NULL,
      id_pat_medication_list_in IN PRESCRIPTION_PHARM.ID_PAT_MEDICATION_LIST%TYPE DEFAULT NULL,
      id_other_product_in IN PRESCRIPTION_PHARM.ID_OTHER_PRODUCT%TYPE DEFAULT NULL,
      desc_other_product_in IN PRESCRIPTION_PHARM.DESC_OTHER_PRODUCT%TYPE DEFAULT NULL,
      status_flg_in IN PRESCRIPTION_PHARM.STATUS_FLG%TYPE DEFAULT NULL,
      status_icon_in IN PRESCRIPTION_PHARM.STATUS_ICON%TYPE DEFAULT NULL,
      status_msg_in IN PRESCRIPTION_PHARM.STATUS_MSG%TYPE DEFAULT NULL,
      status_str_in IN PRESCRIPTION_PHARM.STATUS_STR%TYPE DEFAULT NULL,
      dispense_in IN PRESCRIPTION_PHARM.DISPENSE%TYPE DEFAULT NULL,
      unit_measure_dispense_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_DISPENSE%TYPE DEFAULT NULL,
      flg_dosage_check_in IN PRESCRIPTION_PHARM.FLG_DOSAGE_CHECK%TYPE DEFAULT NULL,
      create_user_in IN PRESCRIPTION_PHARM.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN PRESCRIPTION_PHARM.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN PRESCRIPTION_PHARM.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN PRESCRIPTION_PHARM.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN PRESCRIPTION_PHARM.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN PRESCRIPTION_PHARM.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_first_presc_in IN PRESCRIPTION_PHARM.FLG_FIRST_PRESC%TYPE DEFAULT NULL,
      id_presc_directions_in IN PRESCRIPTION_PHARM.ID_PRESC_DIRECTIONS%TYPE DEFAULT NULL,
      flg_chronic_medication_in IN PRESCRIPTION_PHARM.FLG_CHRONIC_MEDICATION%TYPE DEFAULT 'N',
      chronic_notes_not_active_in IN PRESCRIPTION_PHARM.CHRONIC_NOTES_NOT_ACTIVE%TYPE DEFAULT NULL,
      id_chronic_motive_in IN PRESCRIPTION_PHARM.ID_CHRONIC_MOTIVE%TYPE DEFAULT NULL,
      id_prof_not_active_in IN PRESCRIPTION_PHARM.ID_PROF_NOT_ACTIVE%TYPE DEFAULT NULL,
      chronic_motive_descr_in IN PRESCRIPTION_PHARM.CHRONIC_MOTIVE_DESCR%TYPE DEFAULT NULL,
      dt_not_active_tstz_in IN PRESCRIPTION_PHARM.DT_NOT_ACTIVE_TSTZ%TYPE DEFAULT NULL,
      preco_sns_in IN PRESCRIPTION_PHARM.PRECO_SNS%TYPE DEFAULT NULL,
      preco_utente_in IN PRESCRIPTION_PHARM.PRECO_UTENTE%TYPE DEFAULT NULL,
      preco_utente_diff_in IN PRESCRIPTION_PHARM.PRECO_UTENTE_DIFF%TYPE DEFAULT NULL,
      compart_in IN PRESCRIPTION_PHARM.COMPART%TYPE DEFAULT NULL,
      id_regime_in IN PRESCRIPTION_PHARM.ID_REGIME%TYPE DEFAULT NULL,
      id_cdr_call_in IN PRESCRIPTION_PHARM.ID_CDR_CALL%TYPE DEFAULT NULL
      ,handle_error_in IN BOOLEAN := TRUE
   )
      RETURN
         PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE
   IS
        l_pky PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE := next_key;
    rows_out TABLE_VARCHAR;
   BEGIN
      ins (
         id_prescription_pharm_in => l_pky,
         id_prescription_in => id_prescription_in,
         id_drug_in => id_drug_in,
         qty_in => qty_in,
         generico_in => generico_in,
         dosage_in => dosage_in,
         justif_in => justif_in,
         flg_ci_in => flg_ci_in,
         flg_cheaper_in => flg_cheaper_in,
         flg_justif_in => flg_justif_in,
         flg_status_in => flg_status_in,
         desc_manip_in => desc_manip_in,
         stock_in => stock_in,
         notes_in => notes_in,
         flg_attention_in => flg_attention_in,
         flg_attention_print_in => flg_attention_print_in,
         desc_dietary_in => desc_dietary_in,
         qty_manip_in => qty_manip_in,
         unit_manip_in => unit_manip_in,
         pvp_in => pvp_in,
         p_ref_in => p_ref_in,
         p_ref_pen_in => p_ref_pen_in,
         dt_prescription_pharm_tstz_in => dt_prescription_pharm_tstz_in,
         dt_order_in => dt_order_in,
         id_prof_order_in => id_prof_order_in,
         id_order_type_in => id_order_type_in,
         flg_co_sign_in => flg_co_sign_in,
         dt_co_sign_in => dt_co_sign_in,
         notes_co_sign_in => notes_co_sign_in,
         id_prof_co_sign_in => id_prof_co_sign_in,
         id_unit_measure_in => id_unit_measure_in,
         frequency_in => frequency_in,
         id_unit_measure_freq_in => id_unit_measure_freq_in,
         duration_in => duration_in,
         id_unit_measure_dur_in => id_unit_measure_dur_in,
         dt_start_presc_tstz_in => dt_start_presc_tstz_in,
         dt_end_presc_tstz_in => dt_end_presc_tstz_in,
         refill_in => refill_in,
         emb_id_in => emb_id_in,
         qty_inst_in => qty_inst_in,
         unit_measure_inst_in => unit_measure_inst_in,
         first_dose_in => first_dose_in,
         package_number_in => package_number_in,
         dt_expire_tstz_in => dt_expire_tstz_in,
         vers_in => vers_in,
         route_id_in => route_id_in,
         regulation_id_in => regulation_id_in,
         flg_interac_med_in => flg_interac_med_in,
         flg_interac_allergy_in => flg_interac_allergy_in,
         id_dietary_drug_in => id_dietary_drug_in,
         id_manipulated_in => id_manipulated_in,
         order_modified_in => order_modified_in,
         dt_order_modified_in => dt_order_modified_in,
         patient_notified_in => patient_notified_in,
         id_prof_last_change_in => id_prof_last_change_in,
         id_sw_last_change_in => id_sw_last_change_in,
         id_inst_last_change_in => id_inst_last_change_in,
         order_modified_id_issue_in => order_modified_id_issue_in,
         order_modified_message_in => order_modified_message_in,
         id_pat_medication_list_in => id_pat_medication_list_in,
         id_other_product_in => id_other_product_in,
         desc_other_product_in => desc_other_product_in,
         status_flg_in => status_flg_in,
         status_icon_in => status_icon_in,
         status_msg_in => status_msg_in,
         status_str_in => status_str_in,
         dispense_in => dispense_in,
         unit_measure_dispense_in => unit_measure_dispense_in,
         flg_dosage_check_in => flg_dosage_check_in,
         create_user_in => create_user_in,
         create_time_in => create_time_in,
         create_institution_in => create_institution_in,
         update_user_in => update_user_in,
         update_time_in => update_time_in,
         update_institution_in => update_institution_in,
         flg_first_presc_in => flg_first_presc_in,
         id_presc_directions_in => id_presc_directions_in,
         flg_chronic_medication_in => flg_chronic_medication_in,
         chronic_notes_not_active_in => chronic_notes_not_active_in,
         id_chronic_motive_in => id_chronic_motive_in,
         id_prof_not_active_in => id_prof_not_active_in,
         chronic_motive_descr_in => chronic_motive_descr_in,
         dt_not_active_tstz_in => dt_not_active_tstz_in,
         preco_sns_in => preco_sns_in,
         preco_utente_in => preco_utente_in,
         preco_utente_diff_in => preco_utente_diff_in,
         compart_in => compart_in,
         id_regime_in => id_regime_in,
         id_cdr_call_in => id_cdr_call_in
         ,handle_error_in => handle_error_in
         , rows_out => rows_out
         );
      RETURN l_pky;
   END ins;

      PROCEDURE ins (
      id_prescription_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION%TYPE DEFAULT NULL,
      id_drug_in IN PRESCRIPTION_PHARM.ID_DRUG%TYPE DEFAULT NULL,
      qty_in IN PRESCRIPTION_PHARM.QTY%TYPE DEFAULT NULL,
      generico_in IN PRESCRIPTION_PHARM.GENERICO%TYPE DEFAULT NULL,
      dosage_in IN PRESCRIPTION_PHARM.DOSAGE%TYPE DEFAULT NULL,
      justif_in IN PRESCRIPTION_PHARM.JUSTIF%TYPE DEFAULT NULL,
      flg_ci_in IN PRESCRIPTION_PHARM.FLG_CI%TYPE DEFAULT 'N',
      flg_cheaper_in IN PRESCRIPTION_PHARM.FLG_CHEAPER%TYPE DEFAULT 'N',
      flg_justif_in IN PRESCRIPTION_PHARM.FLG_JUSTIF%TYPE DEFAULT 'N',
      flg_status_in IN PRESCRIPTION_PHARM.FLG_STATUS%TYPE DEFAULT NULL,
      desc_manip_in IN PRESCRIPTION_PHARM.DESC_MANIP%TYPE DEFAULT NULL,
      stock_in IN PRESCRIPTION_PHARM.STOCK%TYPE DEFAULT NULL,
      notes_in IN PRESCRIPTION_PHARM.NOTES%TYPE DEFAULT NULL,
      flg_attention_in IN PRESCRIPTION_PHARM.FLG_ATTENTION%TYPE DEFAULT NULL,
      flg_attention_print_in IN PRESCRIPTION_PHARM.FLG_ATTENTION_PRINT%TYPE DEFAULT NULL,
      desc_dietary_in IN PRESCRIPTION_PHARM.DESC_DIETARY%TYPE DEFAULT NULL,
      qty_manip_in IN PRESCRIPTION_PHARM.QTY_MANIP%TYPE DEFAULT NULL,
      unit_manip_in IN PRESCRIPTION_PHARM.UNIT_MANIP%TYPE DEFAULT NULL,
      pvp_in IN PRESCRIPTION_PHARM.PVP%TYPE DEFAULT NULL,
      p_ref_in IN PRESCRIPTION_PHARM.P_REF%TYPE DEFAULT NULL,
      p_ref_pen_in IN PRESCRIPTION_PHARM.P_REF_PEN%TYPE DEFAULT NULL,
      dt_prescription_pharm_tstz_in IN PRESCRIPTION_PHARM.DT_PRESCRIPTION_PHARM_TSTZ%TYPE DEFAULT NULL,
      dt_order_in IN PRESCRIPTION_PHARM.DT_ORDER%TYPE DEFAULT NULL,
      id_prof_order_in IN PRESCRIPTION_PHARM.ID_PROF_ORDER%TYPE DEFAULT NULL,
      id_order_type_in IN PRESCRIPTION_PHARM.ID_ORDER_TYPE%TYPE DEFAULT NULL,
      flg_co_sign_in IN PRESCRIPTION_PHARM.FLG_CO_SIGN%TYPE DEFAULT 'N',
      dt_co_sign_in IN PRESCRIPTION_PHARM.DT_CO_SIGN%TYPE DEFAULT NULL,
      notes_co_sign_in IN PRESCRIPTION_PHARM.NOTES_CO_SIGN%TYPE DEFAULT NULL,
      id_prof_co_sign_in IN PRESCRIPTION_PHARM.ID_PROF_CO_SIGN%TYPE DEFAULT NULL,
      id_unit_measure_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE%TYPE DEFAULT NULL,
      frequency_in IN PRESCRIPTION_PHARM.FREQUENCY%TYPE DEFAULT NULL,
      id_unit_measure_freq_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_FREQ%TYPE DEFAULT NULL,
      duration_in IN PRESCRIPTION_PHARM.DURATION%TYPE DEFAULT NULL,
      id_unit_measure_dur_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_DUR%TYPE DEFAULT NULL,
      dt_start_presc_tstz_in IN PRESCRIPTION_PHARM.DT_START_PRESC_TSTZ%TYPE DEFAULT NULL,
      dt_end_presc_tstz_in IN PRESCRIPTION_PHARM.DT_END_PRESC_TSTZ%TYPE DEFAULT NULL,
      refill_in IN PRESCRIPTION_PHARM.REFILL%TYPE DEFAULT NULL,
      emb_id_in IN PRESCRIPTION_PHARM.EMB_ID%TYPE DEFAULT NULL,
      qty_inst_in IN PRESCRIPTION_PHARM.QTY_INST%TYPE DEFAULT NULL,
      unit_measure_inst_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_INST%TYPE DEFAULT NULL,
      first_dose_in IN PRESCRIPTION_PHARM.FIRST_DOSE%TYPE DEFAULT NULL,
      package_number_in IN PRESCRIPTION_PHARM.PACKAGE_NUMBER%TYPE DEFAULT NULL,
      dt_expire_tstz_in IN PRESCRIPTION_PHARM.DT_EXPIRE_TSTZ%TYPE DEFAULT NULL,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE DEFAULT NULL,
      route_id_in IN PRESCRIPTION_PHARM.ROUTE_ID%TYPE DEFAULT NULL,
      regulation_id_in IN PRESCRIPTION_PHARM.REGULATION_ID%TYPE DEFAULT NULL,
      flg_interac_med_in IN PRESCRIPTION_PHARM.FLG_INTERAC_MED%TYPE DEFAULT 'N',
      flg_interac_allergy_in IN PRESCRIPTION_PHARM.FLG_INTERAC_ALLERGY%TYPE DEFAULT 'N',
      id_dietary_drug_in IN PRESCRIPTION_PHARM.ID_DIETARY_DRUG%TYPE DEFAULT NULL,
      id_manipulated_in IN PRESCRIPTION_PHARM.ID_MANIPULATED%TYPE DEFAULT NULL,
      order_modified_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED%TYPE DEFAULT NULL,
      dt_order_modified_in IN PRESCRIPTION_PHARM.DT_ORDER_MODIFIED%TYPE DEFAULT NULL,
      patient_notified_in IN PRESCRIPTION_PHARM.PATIENT_NOTIFIED%TYPE DEFAULT NULL,
      id_prof_last_change_in IN PRESCRIPTION_PHARM.ID_PROF_LAST_CHANGE%TYPE DEFAULT NULL,
      id_sw_last_change_in IN PRESCRIPTION_PHARM.ID_SW_LAST_CHANGE%TYPE DEFAULT NULL,
      id_inst_last_change_in IN PRESCRIPTION_PHARM.ID_INST_LAST_CHANGE%TYPE DEFAULT NULL,
      order_modified_id_issue_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_ID_ISSUE%TYPE DEFAULT NULL,
      order_modified_message_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_MESSAGE%TYPE DEFAULT NULL,
      id_pat_medication_list_in IN PRESCRIPTION_PHARM.ID_PAT_MEDICATION_LIST%TYPE DEFAULT NULL,
      id_other_product_in IN PRESCRIPTION_PHARM.ID_OTHER_PRODUCT%TYPE DEFAULT NULL,
      desc_other_product_in IN PRESCRIPTION_PHARM.DESC_OTHER_PRODUCT%TYPE DEFAULT NULL,
      status_flg_in IN PRESCRIPTION_PHARM.STATUS_FLG%TYPE DEFAULT NULL,
      status_icon_in IN PRESCRIPTION_PHARM.STATUS_ICON%TYPE DEFAULT NULL,
      status_msg_in IN PRESCRIPTION_PHARM.STATUS_MSG%TYPE DEFAULT NULL,
      status_str_in IN PRESCRIPTION_PHARM.STATUS_STR%TYPE DEFAULT NULL,
      dispense_in IN PRESCRIPTION_PHARM.DISPENSE%TYPE DEFAULT NULL,
      unit_measure_dispense_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_DISPENSE%TYPE DEFAULT NULL,
      flg_dosage_check_in IN PRESCRIPTION_PHARM.FLG_DOSAGE_CHECK%TYPE DEFAULT NULL,
      create_user_in IN PRESCRIPTION_PHARM.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN PRESCRIPTION_PHARM.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN PRESCRIPTION_PHARM.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN PRESCRIPTION_PHARM.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN PRESCRIPTION_PHARM.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN PRESCRIPTION_PHARM.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_first_presc_in IN PRESCRIPTION_PHARM.FLG_FIRST_PRESC%TYPE DEFAULT NULL,
      id_presc_directions_in IN PRESCRIPTION_PHARM.ID_PRESC_DIRECTIONS%TYPE DEFAULT NULL,
      flg_chronic_medication_in IN PRESCRIPTION_PHARM.FLG_CHRONIC_MEDICATION%TYPE DEFAULT 'N',
      chronic_notes_not_active_in IN PRESCRIPTION_PHARM.CHRONIC_NOTES_NOT_ACTIVE%TYPE DEFAULT NULL,
      id_chronic_motive_in IN PRESCRIPTION_PHARM.ID_CHRONIC_MOTIVE%TYPE DEFAULT NULL,
      id_prof_not_active_in IN PRESCRIPTION_PHARM.ID_PROF_NOT_ACTIVE%TYPE DEFAULT NULL,
      chronic_motive_descr_in IN PRESCRIPTION_PHARM.CHRONIC_MOTIVE_DESCR%TYPE DEFAULT NULL,
      dt_not_active_tstz_in IN PRESCRIPTION_PHARM.DT_NOT_ACTIVE_TSTZ%TYPE DEFAULT NULL,
      preco_sns_in IN PRESCRIPTION_PHARM.PRECO_SNS%TYPE DEFAULT NULL,
      preco_utente_in IN PRESCRIPTION_PHARM.PRECO_UTENTE%TYPE DEFAULT NULL,
      preco_utente_diff_in IN PRESCRIPTION_PHARM.PRECO_UTENTE_DIFF%TYPE DEFAULT NULL,
      compart_in IN PRESCRIPTION_PHARM.COMPART%TYPE DEFAULT NULL,
      id_regime_in IN PRESCRIPTION_PHARM.ID_REGIME%TYPE DEFAULT NULL,
      id_cdr_call_in IN PRESCRIPTION_PHARM.ID_CDR_CALL%TYPE DEFAULT NULL
      ,handle_error_in IN BOOLEAN := TRUE
      , rows_out OUT TABLE_VARCHAR
   )
   IS
        l_pky PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE := next_key;
   BEGIN
      ins (
         id_prescription_pharm_in => l_pky,
         id_prescription_in => id_prescription_in,
         id_drug_in => id_drug_in,
         qty_in => qty_in,
         generico_in => generico_in,
         dosage_in => dosage_in,
         justif_in => justif_in,
         flg_ci_in => flg_ci_in,
         flg_cheaper_in => flg_cheaper_in,
         flg_justif_in => flg_justif_in,
         flg_status_in => flg_status_in,
         desc_manip_in => desc_manip_in,
         stock_in => stock_in,
         notes_in => notes_in,
         flg_attention_in => flg_attention_in,
         flg_attention_print_in => flg_attention_print_in,
         desc_dietary_in => desc_dietary_in,
         qty_manip_in => qty_manip_in,
         unit_manip_in => unit_manip_in,
         pvp_in => pvp_in,
         p_ref_in => p_ref_in,
         p_ref_pen_in => p_ref_pen_in,
         dt_prescription_pharm_tstz_in => dt_prescription_pharm_tstz_in,
         dt_order_in => dt_order_in,
         id_prof_order_in => id_prof_order_in,
         id_order_type_in => id_order_type_in,
         flg_co_sign_in => flg_co_sign_in,
         dt_co_sign_in => dt_co_sign_in,
         notes_co_sign_in => notes_co_sign_in,
         id_prof_co_sign_in => id_prof_co_sign_in,
         id_unit_measure_in => id_unit_measure_in,
         frequency_in => frequency_in,
         id_unit_measure_freq_in => id_unit_measure_freq_in,
         duration_in => duration_in,
         id_unit_measure_dur_in => id_unit_measure_dur_in,
         dt_start_presc_tstz_in => dt_start_presc_tstz_in,
         dt_end_presc_tstz_in => dt_end_presc_tstz_in,
         refill_in => refill_in,
         emb_id_in => emb_id_in,
         qty_inst_in => qty_inst_in,
         unit_measure_inst_in => unit_measure_inst_in,
         first_dose_in => first_dose_in,
         package_number_in => package_number_in,
         dt_expire_tstz_in => dt_expire_tstz_in,
         vers_in => vers_in,
         route_id_in => route_id_in,
         regulation_id_in => regulation_id_in,
         flg_interac_med_in => flg_interac_med_in,
         flg_interac_allergy_in => flg_interac_allergy_in,
         id_dietary_drug_in => id_dietary_drug_in,
         id_manipulated_in => id_manipulated_in,
         order_modified_in => order_modified_in,
         dt_order_modified_in => dt_order_modified_in,
         patient_notified_in => patient_notified_in,
         id_prof_last_change_in => id_prof_last_change_in,
         id_sw_last_change_in => id_sw_last_change_in,
         id_inst_last_change_in => id_inst_last_change_in,
         order_modified_id_issue_in => order_modified_id_issue_in,
         order_modified_message_in => order_modified_message_in,
         id_pat_medication_list_in => id_pat_medication_list_in,
         id_other_product_in => id_other_product_in,
         desc_other_product_in => desc_other_product_in,
         status_flg_in => status_flg_in,
         status_icon_in => status_icon_in,
         status_msg_in => status_msg_in,
         status_str_in => status_str_in,
         dispense_in => dispense_in,
         unit_measure_dispense_in => unit_measure_dispense_in,
         flg_dosage_check_in => flg_dosage_check_in,
         create_user_in => create_user_in,
         create_time_in => create_time_in,
         create_institution_in => create_institution_in,
         update_user_in => update_user_in,
         update_time_in => update_time_in,
         update_institution_in => update_institution_in,
         flg_first_presc_in => flg_first_presc_in,
         id_presc_directions_in => id_presc_directions_in,
         flg_chronic_medication_in => flg_chronic_medication_in,
         chronic_notes_not_active_in => chronic_notes_not_active_in,
         id_chronic_motive_in => id_chronic_motive_in,
         id_prof_not_active_in => id_prof_not_active_in,
         chronic_motive_descr_in => chronic_motive_descr_in,
         dt_not_active_tstz_in => dt_not_active_tstz_in,
         preco_sns_in => preco_sns_in,
         preco_utente_in => preco_utente_in,
         preco_utente_diff_in => preco_utente_diff_in,
         compart_in => compart_in,
         id_regime_in => id_regime_in,
         id_cdr_call_in => id_cdr_call_in
         ,handle_error_in => handle_error_in
         , rows_out => rows_out
         );
   END ins;


     PROCEDURE ins (
      id_prescription_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION%TYPE DEFAULT NULL,
      id_drug_in IN PRESCRIPTION_PHARM.ID_DRUG%TYPE DEFAULT NULL,
      qty_in IN PRESCRIPTION_PHARM.QTY%TYPE DEFAULT NULL,
      generico_in IN PRESCRIPTION_PHARM.GENERICO%TYPE DEFAULT NULL,
      dosage_in IN PRESCRIPTION_PHARM.DOSAGE%TYPE DEFAULT NULL,
      justif_in IN PRESCRIPTION_PHARM.JUSTIF%TYPE DEFAULT NULL,
      flg_ci_in IN PRESCRIPTION_PHARM.FLG_CI%TYPE DEFAULT 'N',
      flg_cheaper_in IN PRESCRIPTION_PHARM.FLG_CHEAPER%TYPE DEFAULT 'N',
      flg_justif_in IN PRESCRIPTION_PHARM.FLG_JUSTIF%TYPE DEFAULT 'N',
      flg_status_in IN PRESCRIPTION_PHARM.FLG_STATUS%TYPE DEFAULT NULL,
      desc_manip_in IN PRESCRIPTION_PHARM.DESC_MANIP%TYPE DEFAULT NULL,
      stock_in IN PRESCRIPTION_PHARM.STOCK%TYPE DEFAULT NULL,
      notes_in IN PRESCRIPTION_PHARM.NOTES%TYPE DEFAULT NULL,
      flg_attention_in IN PRESCRIPTION_PHARM.FLG_ATTENTION%TYPE DEFAULT NULL,
      flg_attention_print_in IN PRESCRIPTION_PHARM.FLG_ATTENTION_PRINT%TYPE DEFAULT NULL,
      desc_dietary_in IN PRESCRIPTION_PHARM.DESC_DIETARY%TYPE DEFAULT NULL,
      qty_manip_in IN PRESCRIPTION_PHARM.QTY_MANIP%TYPE DEFAULT NULL,
      unit_manip_in IN PRESCRIPTION_PHARM.UNIT_MANIP%TYPE DEFAULT NULL,
      pvp_in IN PRESCRIPTION_PHARM.PVP%TYPE DEFAULT NULL,
      p_ref_in IN PRESCRIPTION_PHARM.P_REF%TYPE DEFAULT NULL,
      p_ref_pen_in IN PRESCRIPTION_PHARM.P_REF_PEN%TYPE DEFAULT NULL,
      dt_prescription_pharm_tstz_in IN PRESCRIPTION_PHARM.DT_PRESCRIPTION_PHARM_TSTZ%TYPE DEFAULT NULL,
      dt_order_in IN PRESCRIPTION_PHARM.DT_ORDER%TYPE DEFAULT NULL,
      id_prof_order_in IN PRESCRIPTION_PHARM.ID_PROF_ORDER%TYPE DEFAULT NULL,
      id_order_type_in IN PRESCRIPTION_PHARM.ID_ORDER_TYPE%TYPE DEFAULT NULL,
      flg_co_sign_in IN PRESCRIPTION_PHARM.FLG_CO_SIGN%TYPE DEFAULT 'N',
      dt_co_sign_in IN PRESCRIPTION_PHARM.DT_CO_SIGN%TYPE DEFAULT NULL,
      notes_co_sign_in IN PRESCRIPTION_PHARM.NOTES_CO_SIGN%TYPE DEFAULT NULL,
      id_prof_co_sign_in IN PRESCRIPTION_PHARM.ID_PROF_CO_SIGN%TYPE DEFAULT NULL,
      id_unit_measure_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE%TYPE DEFAULT NULL,
      frequency_in IN PRESCRIPTION_PHARM.FREQUENCY%TYPE DEFAULT NULL,
      id_unit_measure_freq_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_FREQ%TYPE DEFAULT NULL,
      duration_in IN PRESCRIPTION_PHARM.DURATION%TYPE DEFAULT NULL,
      id_unit_measure_dur_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_DUR%TYPE DEFAULT NULL,
      dt_start_presc_tstz_in IN PRESCRIPTION_PHARM.DT_START_PRESC_TSTZ%TYPE DEFAULT NULL,
      dt_end_presc_tstz_in IN PRESCRIPTION_PHARM.DT_END_PRESC_TSTZ%TYPE DEFAULT NULL,
      refill_in IN PRESCRIPTION_PHARM.REFILL%TYPE DEFAULT NULL,
      emb_id_in IN PRESCRIPTION_PHARM.EMB_ID%TYPE DEFAULT NULL,
      qty_inst_in IN PRESCRIPTION_PHARM.QTY_INST%TYPE DEFAULT NULL,
      unit_measure_inst_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_INST%TYPE DEFAULT NULL,
      first_dose_in IN PRESCRIPTION_PHARM.FIRST_DOSE%TYPE DEFAULT NULL,
      package_number_in IN PRESCRIPTION_PHARM.PACKAGE_NUMBER%TYPE DEFAULT NULL,
      dt_expire_tstz_in IN PRESCRIPTION_PHARM.DT_EXPIRE_TSTZ%TYPE DEFAULT NULL,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE DEFAULT NULL,
      route_id_in IN PRESCRIPTION_PHARM.ROUTE_ID%TYPE DEFAULT NULL,
      regulation_id_in IN PRESCRIPTION_PHARM.REGULATION_ID%TYPE DEFAULT NULL,
      flg_interac_med_in IN PRESCRIPTION_PHARM.FLG_INTERAC_MED%TYPE DEFAULT 'N',
      flg_interac_allergy_in IN PRESCRIPTION_PHARM.FLG_INTERAC_ALLERGY%TYPE DEFAULT 'N',
      id_dietary_drug_in IN PRESCRIPTION_PHARM.ID_DIETARY_DRUG%TYPE DEFAULT NULL,
      id_manipulated_in IN PRESCRIPTION_PHARM.ID_MANIPULATED%TYPE DEFAULT NULL,
      order_modified_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED%TYPE DEFAULT NULL,
      dt_order_modified_in IN PRESCRIPTION_PHARM.DT_ORDER_MODIFIED%TYPE DEFAULT NULL,
      patient_notified_in IN PRESCRIPTION_PHARM.PATIENT_NOTIFIED%TYPE DEFAULT NULL,
      id_prof_last_change_in IN PRESCRIPTION_PHARM.ID_PROF_LAST_CHANGE%TYPE DEFAULT NULL,
      id_sw_last_change_in IN PRESCRIPTION_PHARM.ID_SW_LAST_CHANGE%TYPE DEFAULT NULL,
      id_inst_last_change_in IN PRESCRIPTION_PHARM.ID_INST_LAST_CHANGE%TYPE DEFAULT NULL,
      order_modified_id_issue_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_ID_ISSUE%TYPE DEFAULT NULL,
      order_modified_message_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_MESSAGE%TYPE DEFAULT NULL,
      id_pat_medication_list_in IN PRESCRIPTION_PHARM.ID_PAT_MEDICATION_LIST%TYPE DEFAULT NULL,
      id_other_product_in IN PRESCRIPTION_PHARM.ID_OTHER_PRODUCT%TYPE DEFAULT NULL,
      desc_other_product_in IN PRESCRIPTION_PHARM.DESC_OTHER_PRODUCT%TYPE DEFAULT NULL,
      status_flg_in IN PRESCRIPTION_PHARM.STATUS_FLG%TYPE DEFAULT NULL,
      status_icon_in IN PRESCRIPTION_PHARM.STATUS_ICON%TYPE DEFAULT NULL,
      status_msg_in IN PRESCRIPTION_PHARM.STATUS_MSG%TYPE DEFAULT NULL,
      status_str_in IN PRESCRIPTION_PHARM.STATUS_STR%TYPE DEFAULT NULL,
      dispense_in IN PRESCRIPTION_PHARM.DISPENSE%TYPE DEFAULT NULL,
      unit_measure_dispense_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_DISPENSE%TYPE DEFAULT NULL,
      flg_dosage_check_in IN PRESCRIPTION_PHARM.FLG_DOSAGE_CHECK%TYPE DEFAULT NULL,
      create_user_in IN PRESCRIPTION_PHARM.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN PRESCRIPTION_PHARM.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN PRESCRIPTION_PHARM.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN PRESCRIPTION_PHARM.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN PRESCRIPTION_PHARM.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN PRESCRIPTION_PHARM.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_first_presc_in IN PRESCRIPTION_PHARM.FLG_FIRST_PRESC%TYPE DEFAULT NULL,
      id_presc_directions_in IN PRESCRIPTION_PHARM.ID_PRESC_DIRECTIONS%TYPE DEFAULT NULL,
      flg_chronic_medication_in IN PRESCRIPTION_PHARM.FLG_CHRONIC_MEDICATION%TYPE DEFAULT 'N',
      chronic_notes_not_active_in IN PRESCRIPTION_PHARM.CHRONIC_NOTES_NOT_ACTIVE%TYPE DEFAULT NULL,
      id_chronic_motive_in IN PRESCRIPTION_PHARM.ID_CHRONIC_MOTIVE%TYPE DEFAULT NULL,
      id_prof_not_active_in IN PRESCRIPTION_PHARM.ID_PROF_NOT_ACTIVE%TYPE DEFAULT NULL,
      chronic_motive_descr_in IN PRESCRIPTION_PHARM.CHRONIC_MOTIVE_DESCR%TYPE DEFAULT NULL,
      dt_not_active_tstz_in IN PRESCRIPTION_PHARM.DT_NOT_ACTIVE_TSTZ%TYPE DEFAULT NULL,
      preco_sns_in IN PRESCRIPTION_PHARM.PRECO_SNS%TYPE DEFAULT NULL,
      preco_utente_in IN PRESCRIPTION_PHARM.PRECO_UTENTE%TYPE DEFAULT NULL,
      preco_utente_diff_in IN PRESCRIPTION_PHARM.PRECO_UTENTE_DIFF%TYPE DEFAULT NULL,
      compart_in IN PRESCRIPTION_PHARM.COMPART%TYPE DEFAULT NULL,
      id_regime_in IN PRESCRIPTION_PHARM.ID_REGIME%TYPE DEFAULT NULL,
      id_cdr_call_in IN PRESCRIPTION_PHARM.ID_CDR_CALL%TYPE DEFAULT NULL
      ,handle_error_in IN BOOLEAN := TRUE
   )
   IS
        l_pky PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE := next_key;
      rows_out TABLE_VARCHAR;
   BEGIN
      ins (
         id_prescription_pharm_in => l_pky,
         id_prescription_in => id_prescription_in,
         id_drug_in => id_drug_in,
         qty_in => qty_in,
         generico_in => generico_in,
         dosage_in => dosage_in,
         justif_in => justif_in,
         flg_ci_in => flg_ci_in,
         flg_cheaper_in => flg_cheaper_in,
         flg_justif_in => flg_justif_in,
         flg_status_in => flg_status_in,
         desc_manip_in => desc_manip_in,
         stock_in => stock_in,
         notes_in => notes_in,
         flg_attention_in => flg_attention_in,
         flg_attention_print_in => flg_attention_print_in,
         desc_dietary_in => desc_dietary_in,
         qty_manip_in => qty_manip_in,
         unit_manip_in => unit_manip_in,
         pvp_in => pvp_in,
         p_ref_in => p_ref_in,
         p_ref_pen_in => p_ref_pen_in,
         dt_prescription_pharm_tstz_in => dt_prescription_pharm_tstz_in,
         dt_order_in => dt_order_in,
         id_prof_order_in => id_prof_order_in,
         id_order_type_in => id_order_type_in,
         flg_co_sign_in => flg_co_sign_in,
         dt_co_sign_in => dt_co_sign_in,
         notes_co_sign_in => notes_co_sign_in,
         id_prof_co_sign_in => id_prof_co_sign_in,
         id_unit_measure_in => id_unit_measure_in,
         frequency_in => frequency_in,
         id_unit_measure_freq_in => id_unit_measure_freq_in,
         duration_in => duration_in,
         id_unit_measure_dur_in => id_unit_measure_dur_in,
         dt_start_presc_tstz_in => dt_start_presc_tstz_in,
         dt_end_presc_tstz_in => dt_end_presc_tstz_in,
         refill_in => refill_in,
         emb_id_in => emb_id_in,
         qty_inst_in => qty_inst_in,
         unit_measure_inst_in => unit_measure_inst_in,
         first_dose_in => first_dose_in,
         package_number_in => package_number_in,
         dt_expire_tstz_in => dt_expire_tstz_in,
         vers_in => vers_in,
         route_id_in => route_id_in,
         regulation_id_in => regulation_id_in,
         flg_interac_med_in => flg_interac_med_in,
         flg_interac_allergy_in => flg_interac_allergy_in,
         id_dietary_drug_in => id_dietary_drug_in,
         id_manipulated_in => id_manipulated_in,
         order_modified_in => order_modified_in,
         dt_order_modified_in => dt_order_modified_in,
         patient_notified_in => patient_notified_in,
         id_prof_last_change_in => id_prof_last_change_in,
         id_sw_last_change_in => id_sw_last_change_in,
         id_inst_last_change_in => id_inst_last_change_in,
         order_modified_id_issue_in => order_modified_id_issue_in,
         order_modified_message_in => order_modified_message_in,
         id_pat_medication_list_in => id_pat_medication_list_in,
         id_other_product_in => id_other_product_in,
         desc_other_product_in => desc_other_product_in,
         status_flg_in => status_flg_in,
         status_icon_in => status_icon_in,
         status_msg_in => status_msg_in,
         status_str_in => status_str_in,
         dispense_in => dispense_in,
         unit_measure_dispense_in => unit_measure_dispense_in,
         flg_dosage_check_in => flg_dosage_check_in,
         create_user_in => create_user_in,
         create_time_in => create_time_in,
         create_institution_in => create_institution_in,
         update_user_in => update_user_in,
         update_time_in => update_time_in,
         update_institution_in => update_institution_in,
         flg_first_presc_in => flg_first_presc_in,
         id_presc_directions_in => id_presc_directions_in,
         flg_chronic_medication_in => flg_chronic_medication_in,
         chronic_notes_not_active_in => chronic_notes_not_active_in,
         id_chronic_motive_in => id_chronic_motive_in,
         id_prof_not_active_in => id_prof_not_active_in,
         chronic_motive_descr_in => chronic_motive_descr_in,
         dt_not_active_tstz_in => dt_not_active_tstz_in,
         preco_sns_in => preco_sns_in,
         preco_utente_in => preco_utente_in,
         preco_utente_diff_in => preco_utente_diff_in,
         compart_in => compart_in,
         id_regime_in => id_regime_in,
         id_cdr_call_in => id_cdr_call_in
         ,handle_error_in => handle_error_in
         , rows_out => rows_out
         );
   END ins;

    PROCEDURE ins (
      rows_in IN PRESCRIPTION_PHARM_tc
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   )
   IS
   BEGIN
      IF rows_in.COUNT = 0
      THEN
         NULL;
      ELSE
         FORALL indx IN rows_in.FIRST .. rows_in.LAST
            SAVE EXCEPTIONS
            INSERT INTO PRESCRIPTION_PHARM VALUES rows_in (indx) RETURNING ROWID BULK COLLECT INTO rows_out;
      END IF;
   EXCEPTION
     WHEN e_forall_error
     THEN
        -- In Oracle9i and above, SAVE EXCEPTIONS will direct control
        -- here if any error occurs. We can then save all the error
        -- information out to the error instance.
       IF NOT handle_error_in THEN RAISE;
       ELSE
          <<bulk_handler>>
          DECLARE
             l_err_instance_id NUMBER;
          BEGIN
             -- For each error, write to the log.
             FOR indx IN 1 .. SQL%BULK_EXCEPTIONS.COUNT
             LOOP
                pk_alert_exceptions.register_error (
                    error_name_in => 'FORALL-INSERT-FAILURE'
                   ,err_instance_id_out => l_err_instance_id
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'BINDING_ROW_' || indx
                  ,value_in => SQL%BULK_EXCEPTIONS (indx).ERROR_INDEX
                  ,validate_in => FALSE
                );
                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ERROR_AT_ROW_' || indx
                  ,value_in => SQL%BULK_EXCEPTIONS (indx).ERROR_CODE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_PRESCRIPTION_PHARM _' || indx
                  ,value_in => rows_in(indx).ID_PRESCRIPTION_PHARM
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_PRESCRIPTION _' || indx
                  ,value_in => rows_in(indx).ID_PRESCRIPTION
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_DRUG _' || indx
                  ,value_in => rows_in(indx).ID_DRUG
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'QTY _' || indx
                  ,value_in => rows_in(indx).QTY
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'GENERICO _' || indx
                  ,value_in => rows_in(indx).GENERICO
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DOSAGE _' || indx
                  ,value_in => rows_in(indx).DOSAGE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'JUSTIF _' || indx
                  ,value_in => rows_in(indx).JUSTIF
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FLG_CI _' || indx
                  ,value_in => rows_in(indx).FLG_CI
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FLG_CHEAPER _' || indx
                  ,value_in => rows_in(indx).FLG_CHEAPER
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FLG_JUSTIF _' || indx
                  ,value_in => rows_in(indx).FLG_JUSTIF
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FLG_STATUS _' || indx
                  ,value_in => rows_in(indx).FLG_STATUS
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DESC_MANIP _' || indx
                  ,value_in => rows_in(indx).DESC_MANIP
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'STOCK _' || indx
                  ,value_in => rows_in(indx).STOCK
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'NOTES _' || indx
                  ,value_in => rows_in(indx).NOTES
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FLG_ATTENTION _' || indx
                  ,value_in => rows_in(indx).FLG_ATTENTION
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FLG_ATTENTION_PRINT _' || indx
                  ,value_in => rows_in(indx).FLG_ATTENTION_PRINT
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DESC_DIETARY _' || indx
                  ,value_in => rows_in(indx).DESC_DIETARY
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'QTY_MANIP _' || indx
                  ,value_in => rows_in(indx).QTY_MANIP
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'UNIT_MANIP _' || indx
                  ,value_in => rows_in(indx).UNIT_MANIP
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'PVP _' || indx
                  ,value_in => rows_in(indx).PVP
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'P_REF _' || indx
                  ,value_in => rows_in(indx).P_REF
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'P_REF_PEN _' || indx
                  ,value_in => rows_in(indx).P_REF_PEN
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DT_PRESCRIPTION_PHARM_TSTZ _' || indx
                  ,value_in => rows_in(indx).DT_PRESCRIPTION_PHARM_TSTZ
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DT_ORDER _' || indx
                  ,value_in => rows_in(indx).DT_ORDER
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_PROF_ORDER _' || indx
                  ,value_in => rows_in(indx).ID_PROF_ORDER
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_ORDER_TYPE _' || indx
                  ,value_in => rows_in(indx).ID_ORDER_TYPE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FLG_CO_SIGN _' || indx
                  ,value_in => rows_in(indx).FLG_CO_SIGN
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DT_CO_SIGN _' || indx
                  ,value_in => rows_in(indx).DT_CO_SIGN
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'NOTES_CO_SIGN _' || indx
                  ,value_in => rows_in(indx).NOTES_CO_SIGN
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_PROF_CO_SIGN _' || indx
                  ,value_in => rows_in(indx).ID_PROF_CO_SIGN
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_UNIT_MEASURE _' || indx
                  ,value_in => rows_in(indx).ID_UNIT_MEASURE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FREQUENCY _' || indx
                  ,value_in => rows_in(indx).FREQUENCY
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_UNIT_MEASURE_FREQ _' || indx
                  ,value_in => rows_in(indx).ID_UNIT_MEASURE_FREQ
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DURATION _' || indx
                  ,value_in => rows_in(indx).DURATION
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_UNIT_MEASURE_DUR _' || indx
                  ,value_in => rows_in(indx).ID_UNIT_MEASURE_DUR
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DT_START_PRESC_TSTZ _' || indx
                  ,value_in => rows_in(indx).DT_START_PRESC_TSTZ
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DT_END_PRESC_TSTZ _' || indx
                  ,value_in => rows_in(indx).DT_END_PRESC_TSTZ
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'REFILL _' || indx
                  ,value_in => rows_in(indx).REFILL
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'EMB_ID _' || indx
                  ,value_in => rows_in(indx).EMB_ID
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'QTY_INST _' || indx
                  ,value_in => rows_in(indx).QTY_INST
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'UNIT_MEASURE_INST _' || indx
                  ,value_in => rows_in(indx).UNIT_MEASURE_INST
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FIRST_DOSE _' || indx
                  ,value_in => rows_in(indx).FIRST_DOSE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'PACKAGE_NUMBER _' || indx
                  ,value_in => rows_in(indx).PACKAGE_NUMBER
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DT_EXPIRE_TSTZ _' || indx
                  ,value_in => rows_in(indx).DT_EXPIRE_TSTZ
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'VERS _' || indx
                  ,value_in => rows_in(indx).VERS
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ROUTE_ID _' || indx
                  ,value_in => rows_in(indx).ROUTE_ID
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'REGULATION_ID _' || indx
                  ,value_in => rows_in(indx).REGULATION_ID
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FLG_INTERAC_MED _' || indx
                  ,value_in => rows_in(indx).FLG_INTERAC_MED
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FLG_INTERAC_ALLERGY _' || indx
                  ,value_in => rows_in(indx).FLG_INTERAC_ALLERGY
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_DIETARY_DRUG _' || indx
                  ,value_in => rows_in(indx).ID_DIETARY_DRUG
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_MANIPULATED _' || indx
                  ,value_in => rows_in(indx).ID_MANIPULATED
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ORDER_MODIFIED _' || indx
                  ,value_in => rows_in(indx).ORDER_MODIFIED
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DT_ORDER_MODIFIED _' || indx
                  ,value_in => rows_in(indx).DT_ORDER_MODIFIED
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'PATIENT_NOTIFIED _' || indx
                  ,value_in => rows_in(indx).PATIENT_NOTIFIED
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_PROF_LAST_CHANGE _' || indx
                  ,value_in => rows_in(indx).ID_PROF_LAST_CHANGE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_SW_LAST_CHANGE _' || indx
                  ,value_in => rows_in(indx).ID_SW_LAST_CHANGE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_INST_LAST_CHANGE _' || indx
                  ,value_in => rows_in(indx).ID_INST_LAST_CHANGE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ORDER_MODIFIED_ID_ISSUE _' || indx
                  ,value_in => rows_in(indx).ORDER_MODIFIED_ID_ISSUE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ORDER_MODIFIED_MESSAGE _' || indx
                  ,value_in => rows_in(indx).ORDER_MODIFIED_MESSAGE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_PAT_MEDICATION_LIST _' || indx
                  ,value_in => rows_in(indx).ID_PAT_MEDICATION_LIST
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_OTHER_PRODUCT _' || indx
                  ,value_in => rows_in(indx).ID_OTHER_PRODUCT
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DESC_OTHER_PRODUCT _' || indx
                  ,value_in => rows_in(indx).DESC_OTHER_PRODUCT
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'STATUS_FLG _' || indx
                  ,value_in => rows_in(indx).STATUS_FLG
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'STATUS_ICON _' || indx
                  ,value_in => rows_in(indx).STATUS_ICON
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'STATUS_MSG _' || indx
                  ,value_in => rows_in(indx).STATUS_MSG
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'STATUS_STR _' || indx
                  ,value_in => rows_in(indx).STATUS_STR
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DISPENSE _' || indx
                  ,value_in => rows_in(indx).DISPENSE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'UNIT_MEASURE_DISPENSE _' || indx
                  ,value_in => rows_in(indx).UNIT_MEASURE_DISPENSE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FLG_DOSAGE_CHECK _' || indx
                  ,value_in => rows_in(indx).FLG_DOSAGE_CHECK
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'CREATE_USER _' || indx
                  ,value_in => rows_in(indx).CREATE_USER
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'CREATE_TIME _' || indx
                  ,value_in => rows_in(indx).CREATE_TIME
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'CREATE_INSTITUTION _' || indx
                  ,value_in => rows_in(indx).CREATE_INSTITUTION
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'UPDATE_USER _' || indx
                  ,value_in => rows_in(indx).UPDATE_USER
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'UPDATE_TIME _' || indx
                  ,value_in => rows_in(indx).UPDATE_TIME
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'UPDATE_INSTITUTION _' || indx
                  ,value_in => rows_in(indx).UPDATE_INSTITUTION
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FLG_FIRST_PRESC _' || indx
                  ,value_in => rows_in(indx).FLG_FIRST_PRESC
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_PRESC_DIRECTIONS _' || indx
                  ,value_in => rows_in(indx).ID_PRESC_DIRECTIONS
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'FLG_CHRONIC_MEDICATION _' || indx
                  ,value_in => rows_in(indx).FLG_CHRONIC_MEDICATION
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'CHRONIC_NOTES_NOT_ACTIVE _' || indx
                  ,value_in => rows_in(indx).CHRONIC_NOTES_NOT_ACTIVE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_CHRONIC_MOTIVE _' || indx
                  ,value_in => rows_in(indx).ID_CHRONIC_MOTIVE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_PROF_NOT_ACTIVE _' || indx
                  ,value_in => rows_in(indx).ID_PROF_NOT_ACTIVE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'CHRONIC_MOTIVE_DESCR _' || indx
                  ,value_in => rows_in(indx).CHRONIC_MOTIVE_DESCR
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'DT_NOT_ACTIVE_TSTZ _' || indx
                  ,value_in => rows_in(indx).DT_NOT_ACTIVE_TSTZ
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'PRECO_SNS _' || indx
                  ,value_in => rows_in(indx).PRECO_SNS
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'PRECO_UTENTE _' || indx
                  ,value_in => rows_in(indx).PRECO_UTENTE
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'PRECO_UTENTE_DIFF _' || indx
                  ,value_in => rows_in(indx).PRECO_UTENTE_DIFF
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'COMPART _' || indx
                  ,value_in => rows_in(indx).COMPART
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_REGIME _' || indx
                  ,value_in => rows_in(indx).ID_REGIME
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.add_context (
                   err_instance_id_in => l_err_instance_id
                  ,NAME_IN => 'ID_CDR_CALL _' || indx
                  ,value_in => rows_in(indx).ID_CDR_CALL
                  ,validate_in => FALSE
                );

                pk_alert_exceptions.raise_error_instance( err_instance_id_in => l_err_instance_id );
             END LOOP;
          END bulk_handler;
        END IF;
     WHEN OTHERS
     THEN
       IF NOT handle_error_in THEN RAISE;
       ELSE
       pk_alert_exceptions.raise_error(
          error_name_in => 'FORALL-INSERT-FAILURE'
          ,name1_in => 'TABLE_NAME'
          ,value1_in => 'PRESCRIPTION_PHARM'
          ,name2_in => 'ROW_COUNT'
          ,value2_in => rows_in.COUNT
           );
       END IF;
   END ins;

    PROCEDURE ins (
      rows_in IN PRESCRIPTION_PHARM_tc
     ,handle_error_in IN BOOLEAN := TRUE
   )
   IS
      rows_out TABLE_VARCHAR;
   BEGIN
      ins (
      rows_in => rows_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
   );
   END ins;


PROCEDURE upd (
      id_prescription_pharm_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE,
      id_prescription_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION%TYPE DEFAULT NULL,
      ID_PRESCRIPTION_nin IN BOOLEAN := TRUE,
      id_drug_in IN PRESCRIPTION_PHARM.ID_DRUG%TYPE DEFAULT NULL,
      ID_DRUG_nin IN BOOLEAN := TRUE,
      qty_in IN PRESCRIPTION_PHARM.QTY%TYPE DEFAULT NULL,
      QTY_nin IN BOOLEAN := TRUE,
      generico_in IN PRESCRIPTION_PHARM.GENERICO%TYPE DEFAULT NULL,
      GENERICO_nin IN BOOLEAN := TRUE,
      dosage_in IN PRESCRIPTION_PHARM.DOSAGE%TYPE DEFAULT NULL,
      DOSAGE_nin IN BOOLEAN := TRUE,
      justif_in IN PRESCRIPTION_PHARM.JUSTIF%TYPE DEFAULT NULL,
      JUSTIF_nin IN BOOLEAN := TRUE,
      flg_ci_in IN PRESCRIPTION_PHARM.FLG_CI%TYPE DEFAULT NULL,
      FLG_CI_nin IN BOOLEAN := TRUE,
      flg_cheaper_in IN PRESCRIPTION_PHARM.FLG_CHEAPER%TYPE DEFAULT NULL,
      FLG_CHEAPER_nin IN BOOLEAN := TRUE,
      flg_justif_in IN PRESCRIPTION_PHARM.FLG_JUSTIF%TYPE DEFAULT NULL,
      FLG_JUSTIF_nin IN BOOLEAN := TRUE,
      flg_status_in IN PRESCRIPTION_PHARM.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      desc_manip_in IN PRESCRIPTION_PHARM.DESC_MANIP%TYPE DEFAULT NULL,
      DESC_MANIP_nin IN BOOLEAN := TRUE,
      stock_in IN PRESCRIPTION_PHARM.STOCK%TYPE DEFAULT NULL,
      STOCK_nin IN BOOLEAN := TRUE,
      notes_in IN PRESCRIPTION_PHARM.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      flg_attention_in IN PRESCRIPTION_PHARM.FLG_ATTENTION%TYPE DEFAULT NULL,
      FLG_ATTENTION_nin IN BOOLEAN := TRUE,
      flg_attention_print_in IN PRESCRIPTION_PHARM.FLG_ATTENTION_PRINT%TYPE DEFAULT NULL,
      FLG_ATTENTION_PRINT_nin IN BOOLEAN := TRUE,
      desc_dietary_in IN PRESCRIPTION_PHARM.DESC_DIETARY%TYPE DEFAULT NULL,
      DESC_DIETARY_nin IN BOOLEAN := TRUE,
      qty_manip_in IN PRESCRIPTION_PHARM.QTY_MANIP%TYPE DEFAULT NULL,
      QTY_MANIP_nin IN BOOLEAN := TRUE,
      unit_manip_in IN PRESCRIPTION_PHARM.UNIT_MANIP%TYPE DEFAULT NULL,
      UNIT_MANIP_nin IN BOOLEAN := TRUE,
      pvp_in IN PRESCRIPTION_PHARM.PVP%TYPE DEFAULT NULL,
      PVP_nin IN BOOLEAN := TRUE,
      p_ref_in IN PRESCRIPTION_PHARM.P_REF%TYPE DEFAULT NULL,
      P_REF_nin IN BOOLEAN := TRUE,
      p_ref_pen_in IN PRESCRIPTION_PHARM.P_REF_PEN%TYPE DEFAULT NULL,
      P_REF_PEN_nin IN BOOLEAN := TRUE,
      dt_prescription_pharm_tstz_in IN PRESCRIPTION_PHARM.DT_PRESCRIPTION_PHARM_TSTZ%TYPE DEFAULT NULL,
      DT_PRESCRIPTION_PHARM_TSTZ_nin IN BOOLEAN := TRUE,
      dt_order_in IN PRESCRIPTION_PHARM.DT_ORDER%TYPE DEFAULT NULL,
      DT_ORDER_nin IN BOOLEAN := TRUE,
      id_prof_order_in IN PRESCRIPTION_PHARM.ID_PROF_ORDER%TYPE DEFAULT NULL,
      ID_PROF_ORDER_nin IN BOOLEAN := TRUE,
      id_order_type_in IN PRESCRIPTION_PHARM.ID_ORDER_TYPE%TYPE DEFAULT NULL,
      ID_ORDER_TYPE_nin IN BOOLEAN := TRUE,
      flg_co_sign_in IN PRESCRIPTION_PHARM.FLG_CO_SIGN%TYPE DEFAULT NULL,
      FLG_CO_SIGN_nin IN BOOLEAN := TRUE,
      dt_co_sign_in IN PRESCRIPTION_PHARM.DT_CO_SIGN%TYPE DEFAULT NULL,
      DT_CO_SIGN_nin IN BOOLEAN := TRUE,
      notes_co_sign_in IN PRESCRIPTION_PHARM.NOTES_CO_SIGN%TYPE DEFAULT NULL,
      NOTES_CO_SIGN_nin IN BOOLEAN := TRUE,
      id_prof_co_sign_in IN PRESCRIPTION_PHARM.ID_PROF_CO_SIGN%TYPE DEFAULT NULL,
      ID_PROF_CO_SIGN_nin IN BOOLEAN := TRUE,
      id_unit_measure_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE%TYPE DEFAULT NULL,
      ID_UNIT_MEASURE_nin IN BOOLEAN := TRUE,
      frequency_in IN PRESCRIPTION_PHARM.FREQUENCY%TYPE DEFAULT NULL,
      FREQUENCY_nin IN BOOLEAN := TRUE,
      id_unit_measure_freq_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_FREQ%TYPE DEFAULT NULL,
      ID_UNIT_MEASURE_FREQ_nin IN BOOLEAN := TRUE,
      duration_in IN PRESCRIPTION_PHARM.DURATION%TYPE DEFAULT NULL,
      DURATION_nin IN BOOLEAN := TRUE,
      id_unit_measure_dur_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_DUR%TYPE DEFAULT NULL,
      ID_UNIT_MEASURE_DUR_nin IN BOOLEAN := TRUE,
      dt_start_presc_tstz_in IN PRESCRIPTION_PHARM.DT_START_PRESC_TSTZ%TYPE DEFAULT NULL,
      DT_START_PRESC_TSTZ_nin IN BOOLEAN := TRUE,
      dt_end_presc_tstz_in IN PRESCRIPTION_PHARM.DT_END_PRESC_TSTZ%TYPE DEFAULT NULL,
      DT_END_PRESC_TSTZ_nin IN BOOLEAN := TRUE,
      refill_in IN PRESCRIPTION_PHARM.REFILL%TYPE DEFAULT NULL,
      REFILL_nin IN BOOLEAN := TRUE,
      emb_id_in IN PRESCRIPTION_PHARM.EMB_ID%TYPE DEFAULT NULL,
      EMB_ID_nin IN BOOLEAN := TRUE,
      qty_inst_in IN PRESCRIPTION_PHARM.QTY_INST%TYPE DEFAULT NULL,
      QTY_INST_nin IN BOOLEAN := TRUE,
      unit_measure_inst_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_INST%TYPE DEFAULT NULL,
      UNIT_MEASURE_INST_nin IN BOOLEAN := TRUE,
      first_dose_in IN PRESCRIPTION_PHARM.FIRST_DOSE%TYPE DEFAULT NULL,
      FIRST_DOSE_nin IN BOOLEAN := TRUE,
      package_number_in IN PRESCRIPTION_PHARM.PACKAGE_NUMBER%TYPE DEFAULT NULL,
      PACKAGE_NUMBER_nin IN BOOLEAN := TRUE,
      dt_expire_tstz_in IN PRESCRIPTION_PHARM.DT_EXPIRE_TSTZ%TYPE DEFAULT NULL,
      DT_EXPIRE_TSTZ_nin IN BOOLEAN := TRUE,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE DEFAULT NULL,
      VERS_nin IN BOOLEAN := TRUE,
      route_id_in IN PRESCRIPTION_PHARM.ROUTE_ID%TYPE DEFAULT NULL,
      ROUTE_ID_nin IN BOOLEAN := TRUE,
      regulation_id_in IN PRESCRIPTION_PHARM.REGULATION_ID%TYPE DEFAULT NULL,
      REGULATION_ID_nin IN BOOLEAN := TRUE,
      flg_interac_med_in IN PRESCRIPTION_PHARM.FLG_INTERAC_MED%TYPE DEFAULT NULL,
      FLG_INTERAC_MED_nin IN BOOLEAN := TRUE,
      flg_interac_allergy_in IN PRESCRIPTION_PHARM.FLG_INTERAC_ALLERGY%TYPE DEFAULT NULL,
      FLG_INTERAC_ALLERGY_nin IN BOOLEAN := TRUE,
      id_dietary_drug_in IN PRESCRIPTION_PHARM.ID_DIETARY_DRUG%TYPE DEFAULT NULL,
      ID_DIETARY_DRUG_nin IN BOOLEAN := TRUE,
      id_manipulated_in IN PRESCRIPTION_PHARM.ID_MANIPULATED%TYPE DEFAULT NULL,
      ID_MANIPULATED_nin IN BOOLEAN := TRUE,
      order_modified_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED%TYPE DEFAULT NULL,
      ORDER_MODIFIED_nin IN BOOLEAN := TRUE,
      dt_order_modified_in IN PRESCRIPTION_PHARM.DT_ORDER_MODIFIED%TYPE DEFAULT NULL,
      DT_ORDER_MODIFIED_nin IN BOOLEAN := TRUE,
      patient_notified_in IN PRESCRIPTION_PHARM.PATIENT_NOTIFIED%TYPE DEFAULT NULL,
      PATIENT_NOTIFIED_nin IN BOOLEAN := TRUE,
      id_prof_last_change_in IN PRESCRIPTION_PHARM.ID_PROF_LAST_CHANGE%TYPE DEFAULT NULL,
      ID_PROF_LAST_CHANGE_nin IN BOOLEAN := TRUE,
      id_sw_last_change_in IN PRESCRIPTION_PHARM.ID_SW_LAST_CHANGE%TYPE DEFAULT NULL,
      ID_SW_LAST_CHANGE_nin IN BOOLEAN := TRUE,
      id_inst_last_change_in IN PRESCRIPTION_PHARM.ID_INST_LAST_CHANGE%TYPE DEFAULT NULL,
      ID_INST_LAST_CHANGE_nin IN BOOLEAN := TRUE,
      order_modified_id_issue_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_ID_ISSUE%TYPE DEFAULT NULL,
      ORDER_MODIFIED_ID_ISSUE_nin IN BOOLEAN := TRUE,
      order_modified_message_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_MESSAGE%TYPE DEFAULT NULL,
      ORDER_MODIFIED_MESSAGE_nin IN BOOLEAN := TRUE,
      id_pat_medication_list_in IN PRESCRIPTION_PHARM.ID_PAT_MEDICATION_LIST%TYPE DEFAULT NULL,
      ID_PAT_MEDICATION_LIST_nin IN BOOLEAN := TRUE,
      id_other_product_in IN PRESCRIPTION_PHARM.ID_OTHER_PRODUCT%TYPE DEFAULT NULL,
      ID_OTHER_PRODUCT_nin IN BOOLEAN := TRUE,
      desc_other_product_in IN PRESCRIPTION_PHARM.DESC_OTHER_PRODUCT%TYPE DEFAULT NULL,
      DESC_OTHER_PRODUCT_nin IN BOOLEAN := TRUE,
      status_flg_in IN PRESCRIPTION_PHARM.STATUS_FLG%TYPE DEFAULT NULL,
      STATUS_FLG_nin IN BOOLEAN := TRUE,
      status_icon_in IN PRESCRIPTION_PHARM.STATUS_ICON%TYPE DEFAULT NULL,
      STATUS_ICON_nin IN BOOLEAN := TRUE,
      status_msg_in IN PRESCRIPTION_PHARM.STATUS_MSG%TYPE DEFAULT NULL,
      STATUS_MSG_nin IN BOOLEAN := TRUE,
      status_str_in IN PRESCRIPTION_PHARM.STATUS_STR%TYPE DEFAULT NULL,
      STATUS_STR_nin IN BOOLEAN := TRUE,
      dispense_in IN PRESCRIPTION_PHARM.DISPENSE%TYPE DEFAULT NULL,
      DISPENSE_nin IN BOOLEAN := TRUE,
      unit_measure_dispense_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_DISPENSE%TYPE DEFAULT NULL,
      UNIT_MEASURE_DISPENSE_nin IN BOOLEAN := TRUE,
      flg_dosage_check_in IN PRESCRIPTION_PHARM.FLG_DOSAGE_CHECK%TYPE DEFAULT NULL,
      FLG_DOSAGE_CHECK_nin IN BOOLEAN := TRUE,
      create_user_in IN PRESCRIPTION_PHARM.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN PRESCRIPTION_PHARM.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN PRESCRIPTION_PHARM.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN PRESCRIPTION_PHARM.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN PRESCRIPTION_PHARM.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN PRESCRIPTION_PHARM.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      flg_first_presc_in IN PRESCRIPTION_PHARM.FLG_FIRST_PRESC%TYPE DEFAULT NULL,
      FLG_FIRST_PRESC_nin IN BOOLEAN := TRUE,
      id_presc_directions_in IN PRESCRIPTION_PHARM.ID_PRESC_DIRECTIONS%TYPE DEFAULT NULL,
      ID_PRESC_DIRECTIONS_nin IN BOOLEAN := TRUE,
      flg_chronic_medication_in IN PRESCRIPTION_PHARM.FLG_CHRONIC_MEDICATION%TYPE DEFAULT NULL,
      FLG_CHRONIC_MEDICATION_nin IN BOOLEAN := TRUE,
      chronic_notes_not_active_in IN PRESCRIPTION_PHARM.CHRONIC_NOTES_NOT_ACTIVE%TYPE DEFAULT NULL,
      CHRONIC_NOTES_NOT_ACTIVE_nin IN BOOLEAN := TRUE,
      id_chronic_motive_in IN PRESCRIPTION_PHARM.ID_CHRONIC_MOTIVE%TYPE DEFAULT NULL,
      ID_CHRONIC_MOTIVE_nin IN BOOLEAN := TRUE,
      id_prof_not_active_in IN PRESCRIPTION_PHARM.ID_PROF_NOT_ACTIVE%TYPE DEFAULT NULL,
      ID_PROF_NOT_ACTIVE_nin IN BOOLEAN := TRUE,
      chronic_motive_descr_in IN PRESCRIPTION_PHARM.CHRONIC_MOTIVE_DESCR%TYPE DEFAULT NULL,
      CHRONIC_MOTIVE_DESCR_nin IN BOOLEAN := TRUE,
      dt_not_active_tstz_in IN PRESCRIPTION_PHARM.DT_NOT_ACTIVE_TSTZ%TYPE DEFAULT NULL,
      DT_NOT_ACTIVE_TSTZ_nin IN BOOLEAN := TRUE,
      preco_sns_in IN PRESCRIPTION_PHARM.PRECO_SNS%TYPE DEFAULT NULL,
      PRECO_SNS_nin IN BOOLEAN := TRUE,
      preco_utente_in IN PRESCRIPTION_PHARM.PRECO_UTENTE%TYPE DEFAULT NULL,
      PRECO_UTENTE_nin IN BOOLEAN := TRUE,
      preco_utente_diff_in IN PRESCRIPTION_PHARM.PRECO_UTENTE_DIFF%TYPE DEFAULT NULL,
      PRECO_UTENTE_DIFF_nin IN BOOLEAN := TRUE,
      compart_in IN PRESCRIPTION_PHARM.COMPART%TYPE DEFAULT NULL,
      COMPART_nin IN BOOLEAN := TRUE,
      id_regime_in IN PRESCRIPTION_PHARM.ID_REGIME%TYPE DEFAULT NULL,
      ID_REGIME_nin IN BOOLEAN := TRUE,
      id_cdr_call_in IN PRESCRIPTION_PHARM.ID_CDR_CALL%TYPE DEFAULT NULL,
      ID_CDR_CALL_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      )
   IS
   l_rows_out TABLE_VARCHAR;
   l_ID_PRESCRIPTION_n NUMBER(1);
   l_ID_DRUG_n NUMBER(1);
   l_QTY_n NUMBER(1);
   l_GENERICO_n NUMBER(1);
   l_DOSAGE_n NUMBER(1);
   l_JUSTIF_n NUMBER(1);
   l_FLG_CI_n NUMBER(1);
   l_FLG_CHEAPER_n NUMBER(1);
   l_FLG_JUSTIF_n NUMBER(1);
   l_FLG_STATUS_n NUMBER(1);
   l_DESC_MANIP_n NUMBER(1);
   l_STOCK_n NUMBER(1);
   l_NOTES_n NUMBER(1);
   l_FLG_ATTENTION_n NUMBER(1);
   l_FLG_ATTENTION_PRINT_n NUMBER(1);
   l_DESC_DIETARY_n NUMBER(1);
   l_QTY_MANIP_n NUMBER(1);
   l_UNIT_MANIP_n NUMBER(1);
   l_PVP_n NUMBER(1);
   l_P_REF_n NUMBER(1);
   l_P_REF_PEN_n NUMBER(1);
   l_DT_PRESCRIPTION_PHARM_TSTZ_n NUMBER(1);
   l_DT_ORDER_n NUMBER(1);
   l_ID_PROF_ORDER_n NUMBER(1);
   l_ID_ORDER_TYPE_n NUMBER(1);
   l_FLG_CO_SIGN_n NUMBER(1);
   l_DT_CO_SIGN_n NUMBER(1);
   l_NOTES_CO_SIGN_n NUMBER(1);
   l_ID_PROF_CO_SIGN_n NUMBER(1);
   l_ID_UNIT_MEASURE_n NUMBER(1);
   l_FREQUENCY_n NUMBER(1);
   l_ID_UNIT_MEASURE_FREQ_n NUMBER(1);
   l_DURATION_n NUMBER(1);
   l_ID_UNIT_MEASURE_DUR_n NUMBER(1);
   l_DT_START_PRESC_TSTZ_n NUMBER(1);
   l_DT_END_PRESC_TSTZ_n NUMBER(1);
   l_REFILL_n NUMBER(1);
   l_EMB_ID_n NUMBER(1);
   l_QTY_INST_n NUMBER(1);
   l_UNIT_MEASURE_INST_n NUMBER(1);
   l_FIRST_DOSE_n NUMBER(1);
   l_PACKAGE_NUMBER_n NUMBER(1);
   l_DT_EXPIRE_TSTZ_n NUMBER(1);
   l_VERS_n NUMBER(1);
   l_ROUTE_ID_n NUMBER(1);
   l_REGULATION_ID_n NUMBER(1);
   l_FLG_INTERAC_MED_n NUMBER(1);
   l_FLG_INTERAC_ALLERGY_n NUMBER(1);
   l_ID_DIETARY_DRUG_n NUMBER(1);
   l_ID_MANIPULATED_n NUMBER(1);
   l_ORDER_MODIFIED_n NUMBER(1);
   l_DT_ORDER_MODIFIED_n NUMBER(1);
   l_PATIENT_NOTIFIED_n NUMBER(1);
   l_ID_PROF_LAST_CHANGE_n NUMBER(1);
   l_ID_SW_LAST_CHANGE_n NUMBER(1);
   l_ID_INST_LAST_CHANGE_n NUMBER(1);
   l_ORDER_MODIFIED_ID_ISSUE_n NUMBER(1);
   l_ORDER_MODIFIED_MESSAGE_n NUMBER(1);
   l_ID_PAT_MEDICATION_LIST_n NUMBER(1);
   l_ID_OTHER_PRODUCT_n NUMBER(1);
   l_DESC_OTHER_PRODUCT_n NUMBER(1);
   l_STATUS_FLG_n NUMBER(1);
   l_STATUS_ICON_n NUMBER(1);
   l_STATUS_MSG_n NUMBER(1);
   l_STATUS_STR_n NUMBER(1);
   l_DISPENSE_n NUMBER(1);
   l_UNIT_MEASURE_DISPENSE_n NUMBER(1);
   l_FLG_DOSAGE_CHECK_n NUMBER(1);
   l_CREATE_USER_n NUMBER(1);
   l_CREATE_TIME_n NUMBER(1);
   l_CREATE_INSTITUTION_n NUMBER(1);
   l_UPDATE_USER_n NUMBER(1);
   l_UPDATE_TIME_n NUMBER(1);
   l_UPDATE_INSTITUTION_n NUMBER(1);
   l_FLG_FIRST_PRESC_n NUMBER(1);
   l_ID_PRESC_DIRECTIONS_n NUMBER(1);
   l_FLG_CHRONIC_MEDICATION_n NUMBER(1);
   l_CHRONIC_NOTES_NOT_ACTIVE_n NUMBER(1);
   l_ID_CHRONIC_MOTIVE_n NUMBER(1);
   l_ID_PROF_NOT_ACTIVE_n NUMBER(1);
   l_CHRONIC_MOTIVE_DESCR_n NUMBER(1);
   l_DT_NOT_ACTIVE_TSTZ_n NUMBER(1);
   l_PRECO_SNS_n NUMBER(1);
   l_PRECO_UTENTE_n NUMBER(1);
   l_PRECO_UTENTE_DIFF_n NUMBER(1);
   l_COMPART_n NUMBER(1);
   l_ID_REGIME_n NUMBER(1);
   l_ID_CDR_CALL_n NUMBER(1);
   BEGIN

   l_ID_PRESCRIPTION_n := sys.diutil.bool_to_int(ID_PRESCRIPTION_nin);
   l_ID_DRUG_n := sys.diutil.bool_to_int(ID_DRUG_nin);
   l_QTY_n := sys.diutil.bool_to_int(QTY_nin);
   l_GENERICO_n := sys.diutil.bool_to_int(GENERICO_nin);
   l_DOSAGE_n := sys.diutil.bool_to_int(DOSAGE_nin);
   l_JUSTIF_n := sys.diutil.bool_to_int(JUSTIF_nin);
   l_FLG_CI_n := sys.diutil.bool_to_int(FLG_CI_nin);
   l_FLG_CHEAPER_n := sys.diutil.bool_to_int(FLG_CHEAPER_nin);
   l_FLG_JUSTIF_n := sys.diutil.bool_to_int(FLG_JUSTIF_nin);
   l_FLG_STATUS_n := sys.diutil.bool_to_int(FLG_STATUS_nin);
   l_DESC_MANIP_n := sys.diutil.bool_to_int(DESC_MANIP_nin);
   l_STOCK_n := sys.diutil.bool_to_int(STOCK_nin);
   l_NOTES_n := sys.diutil.bool_to_int(NOTES_nin);
   l_FLG_ATTENTION_n := sys.diutil.bool_to_int(FLG_ATTENTION_nin);
   l_FLG_ATTENTION_PRINT_n := sys.diutil.bool_to_int(FLG_ATTENTION_PRINT_nin);
   l_DESC_DIETARY_n := sys.diutil.bool_to_int(DESC_DIETARY_nin);
   l_QTY_MANIP_n := sys.diutil.bool_to_int(QTY_MANIP_nin);
   l_UNIT_MANIP_n := sys.diutil.bool_to_int(UNIT_MANIP_nin);
   l_PVP_n := sys.diutil.bool_to_int(PVP_nin);
   l_P_REF_n := sys.diutil.bool_to_int(P_REF_nin);
   l_P_REF_PEN_n := sys.diutil.bool_to_int(P_REF_PEN_nin);
   l_DT_PRESCRIPTION_PHARM_TSTZ_n := sys.diutil.bool_to_int(DT_PRESCRIPTION_PHARM_TSTZ_nin);
   l_DT_ORDER_n := sys.diutil.bool_to_int(DT_ORDER_nin);
   l_ID_PROF_ORDER_n := sys.diutil.bool_to_int(ID_PROF_ORDER_nin);
   l_ID_ORDER_TYPE_n := sys.diutil.bool_to_int(ID_ORDER_TYPE_nin);
   l_FLG_CO_SIGN_n := sys.diutil.bool_to_int(FLG_CO_SIGN_nin);
   l_DT_CO_SIGN_n := sys.diutil.bool_to_int(DT_CO_SIGN_nin);
   l_NOTES_CO_SIGN_n := sys.diutil.bool_to_int(NOTES_CO_SIGN_nin);
   l_ID_PROF_CO_SIGN_n := sys.diutil.bool_to_int(ID_PROF_CO_SIGN_nin);
   l_ID_UNIT_MEASURE_n := sys.diutil.bool_to_int(ID_UNIT_MEASURE_nin);
   l_FREQUENCY_n := sys.diutil.bool_to_int(FREQUENCY_nin);
   l_ID_UNIT_MEASURE_FREQ_n := sys.diutil.bool_to_int(ID_UNIT_MEASURE_FREQ_nin);
   l_DURATION_n := sys.diutil.bool_to_int(DURATION_nin);
   l_ID_UNIT_MEASURE_DUR_n := sys.diutil.bool_to_int(ID_UNIT_MEASURE_DUR_nin);
   l_DT_START_PRESC_TSTZ_n := sys.diutil.bool_to_int(DT_START_PRESC_TSTZ_nin);
   l_DT_END_PRESC_TSTZ_n := sys.diutil.bool_to_int(DT_END_PRESC_TSTZ_nin);
   l_REFILL_n := sys.diutil.bool_to_int(REFILL_nin);
   l_EMB_ID_n := sys.diutil.bool_to_int(EMB_ID_nin);
   l_QTY_INST_n := sys.diutil.bool_to_int(QTY_INST_nin);
   l_UNIT_MEASURE_INST_n := sys.diutil.bool_to_int(UNIT_MEASURE_INST_nin);
   l_FIRST_DOSE_n := sys.diutil.bool_to_int(FIRST_DOSE_nin);
   l_PACKAGE_NUMBER_n := sys.diutil.bool_to_int(PACKAGE_NUMBER_nin);
   l_DT_EXPIRE_TSTZ_n := sys.diutil.bool_to_int(DT_EXPIRE_TSTZ_nin);
   l_VERS_n := sys.diutil.bool_to_int(VERS_nin);
   l_ROUTE_ID_n := sys.diutil.bool_to_int(ROUTE_ID_nin);
   l_REGULATION_ID_n := sys.diutil.bool_to_int(REGULATION_ID_nin);
   l_FLG_INTERAC_MED_n := sys.diutil.bool_to_int(FLG_INTERAC_MED_nin);
   l_FLG_INTERAC_ALLERGY_n := sys.diutil.bool_to_int(FLG_INTERAC_ALLERGY_nin);
   l_ID_DIETARY_DRUG_n := sys.diutil.bool_to_int(ID_DIETARY_DRUG_nin);
   l_ID_MANIPULATED_n := sys.diutil.bool_to_int(ID_MANIPULATED_nin);
   l_ORDER_MODIFIED_n := sys.diutil.bool_to_int(ORDER_MODIFIED_nin);
   l_DT_ORDER_MODIFIED_n := sys.diutil.bool_to_int(DT_ORDER_MODIFIED_nin);
   l_PATIENT_NOTIFIED_n := sys.diutil.bool_to_int(PATIENT_NOTIFIED_nin);
   l_ID_PROF_LAST_CHANGE_n := sys.diutil.bool_to_int(ID_PROF_LAST_CHANGE_nin);
   l_ID_SW_LAST_CHANGE_n := sys.diutil.bool_to_int(ID_SW_LAST_CHANGE_nin);
   l_ID_INST_LAST_CHANGE_n := sys.diutil.bool_to_int(ID_INST_LAST_CHANGE_nin);
   l_ORDER_MODIFIED_ID_ISSUE_n := sys.diutil.bool_to_int(ORDER_MODIFIED_ID_ISSUE_nin);
   l_ORDER_MODIFIED_MESSAGE_n := sys.diutil.bool_to_int(ORDER_MODIFIED_MESSAGE_nin);
   l_ID_PAT_MEDICATION_LIST_n := sys.diutil.bool_to_int(ID_PAT_MEDICATION_LIST_nin);
   l_ID_OTHER_PRODUCT_n := sys.diutil.bool_to_int(ID_OTHER_PRODUCT_nin);
   l_DESC_OTHER_PRODUCT_n := sys.diutil.bool_to_int(DESC_OTHER_PRODUCT_nin);
   l_STATUS_FLG_n := sys.diutil.bool_to_int(STATUS_FLG_nin);
   l_STATUS_ICON_n := sys.diutil.bool_to_int(STATUS_ICON_nin);
   l_STATUS_MSG_n := sys.diutil.bool_to_int(STATUS_MSG_nin);
   l_STATUS_STR_n := sys.diutil.bool_to_int(STATUS_STR_nin);
   l_DISPENSE_n := sys.diutil.bool_to_int(DISPENSE_nin);
   l_UNIT_MEASURE_DISPENSE_n := sys.diutil.bool_to_int(UNIT_MEASURE_DISPENSE_nin);
   l_FLG_DOSAGE_CHECK_n := sys.diutil.bool_to_int(FLG_DOSAGE_CHECK_nin);
   l_CREATE_USER_n := sys.diutil.bool_to_int(CREATE_USER_nin);
   l_CREATE_TIME_n := sys.diutil.bool_to_int(CREATE_TIME_nin);
   l_CREATE_INSTITUTION_n := sys.diutil.bool_to_int(CREATE_INSTITUTION_nin);
   l_UPDATE_USER_n := sys.diutil.bool_to_int(UPDATE_USER_nin);
   l_UPDATE_TIME_n := sys.diutil.bool_to_int(UPDATE_TIME_nin);
   l_UPDATE_INSTITUTION_n := sys.diutil.bool_to_int(UPDATE_INSTITUTION_nin);
   l_FLG_FIRST_PRESC_n := sys.diutil.bool_to_int(FLG_FIRST_PRESC_nin);
   l_ID_PRESC_DIRECTIONS_n := sys.diutil.bool_to_int(ID_PRESC_DIRECTIONS_nin);
   l_FLG_CHRONIC_MEDICATION_n := sys.diutil.bool_to_int(FLG_CHRONIC_MEDICATION_nin);
   l_CHRONIC_NOTES_NOT_ACTIVE_n := sys.diutil.bool_to_int(CHRONIC_NOTES_NOT_ACTIVE_nin);
   l_ID_CHRONIC_MOTIVE_n := sys.diutil.bool_to_int(ID_CHRONIC_MOTIVE_nin);
   l_ID_PROF_NOT_ACTIVE_n := sys.diutil.bool_to_int(ID_PROF_NOT_ACTIVE_nin);
   l_CHRONIC_MOTIVE_DESCR_n := sys.diutil.bool_to_int(CHRONIC_MOTIVE_DESCR_nin);
   l_DT_NOT_ACTIVE_TSTZ_n := sys.diutil.bool_to_int(DT_NOT_ACTIVE_TSTZ_nin);
   l_PRECO_SNS_n := sys.diutil.bool_to_int(PRECO_SNS_nin);
   l_PRECO_UTENTE_n := sys.diutil.bool_to_int(PRECO_UTENTE_nin);
   l_PRECO_UTENTE_DIFF_n := sys.diutil.bool_to_int(PRECO_UTENTE_DIFF_nin);
   l_COMPART_n := sys.diutil.bool_to_int(COMPART_nin);
   l_ID_REGIME_n := sys.diutil.bool_to_int(ID_REGIME_nin);
   l_ID_CDR_CALL_n := sys.diutil.bool_to_int(ID_CDR_CALL_nin);


         UPDATE PRESCRIPTION_PHARM SET
     ID_PRESCRIPTION = decode (l_ID_PRESCRIPTION_n,0,id_prescription_in, NVL (id_prescription_in, ID_PRESCRIPTION)),
     ID_DRUG = decode (l_ID_DRUG_n,0,id_drug_in, NVL (id_drug_in, ID_DRUG)),
     QTY = decode (l_QTY_n,0,qty_in, NVL (qty_in, QTY)),
     GENERICO = decode (l_GENERICO_n,0,generico_in, NVL (generico_in, GENERICO)),
     DOSAGE = decode (l_DOSAGE_n,0,dosage_in, NVL (dosage_in, DOSAGE)),
     JUSTIF = decode (l_JUSTIF_n,0,justif_in, NVL (justif_in, JUSTIF)),
     FLG_CI = decode (l_FLG_CI_n,0,flg_ci_in, NVL (flg_ci_in, FLG_CI)),
     FLG_CHEAPER = decode (l_FLG_CHEAPER_n,0,flg_cheaper_in, NVL (flg_cheaper_in, FLG_CHEAPER)),
     FLG_JUSTIF = decode (l_FLG_JUSTIF_n,0,flg_justif_in, NVL (flg_justif_in, FLG_JUSTIF)),
     FLG_STATUS = decode (l_FLG_STATUS_n,0,flg_status_in, NVL (flg_status_in, FLG_STATUS)),
     DESC_MANIP = decode (l_DESC_MANIP_n,0,desc_manip_in, NVL (desc_manip_in, DESC_MANIP)),
     STOCK = decode (l_STOCK_n,0,stock_in, NVL (stock_in, STOCK)),
     NOTES = decode (l_NOTES_n,0,notes_in, NVL (notes_in, NOTES)),
     FLG_ATTENTION = decode (l_FLG_ATTENTION_n,0,flg_attention_in, NVL (flg_attention_in, FLG_ATTENTION)),
     FLG_ATTENTION_PRINT = decode (l_FLG_ATTENTION_PRINT_n,0,flg_attention_print_in, NVL (flg_attention_print_in, FLG_ATTENTION_PRINT)),
     DESC_DIETARY = decode (l_DESC_DIETARY_n,0,desc_dietary_in, NVL (desc_dietary_in, DESC_DIETARY)),
     QTY_MANIP = decode (l_QTY_MANIP_n,0,qty_manip_in, NVL (qty_manip_in, QTY_MANIP)),
     UNIT_MANIP = decode (l_UNIT_MANIP_n,0,unit_manip_in, NVL (unit_manip_in, UNIT_MANIP)),
     PVP = decode (l_PVP_n,0,pvp_in, NVL (pvp_in, PVP)),
     P_REF = decode (l_P_REF_n,0,p_ref_in, NVL (p_ref_in, P_REF)),
     P_REF_PEN = decode (l_P_REF_PEN_n,0,p_ref_pen_in, NVL (p_ref_pen_in, P_REF_PEN)),
     DT_PRESCRIPTION_PHARM_TSTZ = decode (l_DT_PRESCRIPTION_PHARM_TSTZ_n,0,dt_prescription_pharm_tstz_in, NVL (dt_prescription_pharm_tstz_in, DT_PRESCRIPTION_PHARM_TSTZ)),
     DT_ORDER = decode (l_DT_ORDER_n,0,dt_order_in, NVL (dt_order_in, DT_ORDER)),
     ID_PROF_ORDER = decode (l_ID_PROF_ORDER_n,0,id_prof_order_in, NVL (id_prof_order_in, ID_PROF_ORDER)),
     ID_ORDER_TYPE = decode (l_ID_ORDER_TYPE_n,0,id_order_type_in, NVL (id_order_type_in, ID_ORDER_TYPE)),
     FLG_CO_SIGN = decode (l_FLG_CO_SIGN_n,0,flg_co_sign_in, NVL (flg_co_sign_in, FLG_CO_SIGN)),
     DT_CO_SIGN = decode (l_DT_CO_SIGN_n,0,dt_co_sign_in, NVL (dt_co_sign_in, DT_CO_SIGN)),
     NOTES_CO_SIGN = decode (l_NOTES_CO_SIGN_n,0,notes_co_sign_in, NVL (notes_co_sign_in, NOTES_CO_SIGN)),
     ID_PROF_CO_SIGN = decode (l_ID_PROF_CO_SIGN_n,0,id_prof_co_sign_in, NVL (id_prof_co_sign_in, ID_PROF_CO_SIGN)),
     ID_UNIT_MEASURE = decode (l_ID_UNIT_MEASURE_n,0,id_unit_measure_in, NVL (id_unit_measure_in, ID_UNIT_MEASURE)),
     FREQUENCY = decode (l_FREQUENCY_n,0,frequency_in, NVL (frequency_in, FREQUENCY)),
     ID_UNIT_MEASURE_FREQ = decode (l_ID_UNIT_MEASURE_FREQ_n,0,id_unit_measure_freq_in, NVL (id_unit_measure_freq_in, ID_UNIT_MEASURE_FREQ)),
     DURATION = decode (l_DURATION_n,0,duration_in, NVL (duration_in, DURATION)),
     ID_UNIT_MEASURE_DUR = decode (l_ID_UNIT_MEASURE_DUR_n,0,id_unit_measure_dur_in, NVL (id_unit_measure_dur_in, ID_UNIT_MEASURE_DUR)),
     DT_START_PRESC_TSTZ = decode (l_DT_START_PRESC_TSTZ_n,0,dt_start_presc_tstz_in, NVL (dt_start_presc_tstz_in, DT_START_PRESC_TSTZ)),
     DT_END_PRESC_TSTZ = decode (l_DT_END_PRESC_TSTZ_n,0,dt_end_presc_tstz_in, NVL (dt_end_presc_tstz_in, DT_END_PRESC_TSTZ)),
     REFILL = decode (l_REFILL_n,0,refill_in, NVL (refill_in, REFILL)),
     EMB_ID = decode (l_EMB_ID_n,0,emb_id_in, NVL (emb_id_in, EMB_ID)),
     QTY_INST = decode (l_QTY_INST_n,0,qty_inst_in, NVL (qty_inst_in, QTY_INST)),
     UNIT_MEASURE_INST = decode (l_UNIT_MEASURE_INST_n,0,unit_measure_inst_in, NVL (unit_measure_inst_in, UNIT_MEASURE_INST)),
     FIRST_DOSE = decode (l_FIRST_DOSE_n,0,first_dose_in, NVL (first_dose_in, FIRST_DOSE)),
     PACKAGE_NUMBER = decode (l_PACKAGE_NUMBER_n,0,package_number_in, NVL (package_number_in, PACKAGE_NUMBER)),
     DT_EXPIRE_TSTZ = decode (l_DT_EXPIRE_TSTZ_n,0,dt_expire_tstz_in, NVL (dt_expire_tstz_in, DT_EXPIRE_TSTZ)),
     VERS = decode (l_VERS_n,0,vers_in, NVL (vers_in, VERS)),
     ROUTE_ID = decode (l_ROUTE_ID_n,0,route_id_in, NVL (route_id_in, ROUTE_ID)),
     REGULATION_ID = decode (l_REGULATION_ID_n,0,regulation_id_in, NVL (regulation_id_in, REGULATION_ID)),
     FLG_INTERAC_MED = decode (l_FLG_INTERAC_MED_n,0,flg_interac_med_in, NVL (flg_interac_med_in, FLG_INTERAC_MED)),
     FLG_INTERAC_ALLERGY = decode (l_FLG_INTERAC_ALLERGY_n,0,flg_interac_allergy_in, NVL (flg_interac_allergy_in, FLG_INTERAC_ALLERGY)),
     ID_DIETARY_DRUG = decode (l_ID_DIETARY_DRUG_n,0,id_dietary_drug_in, NVL (id_dietary_drug_in, ID_DIETARY_DRUG)),
     ID_MANIPULATED = decode (l_ID_MANIPULATED_n,0,id_manipulated_in, NVL (id_manipulated_in, ID_MANIPULATED)),
     ORDER_MODIFIED = decode (l_ORDER_MODIFIED_n,0,order_modified_in, NVL (order_modified_in, ORDER_MODIFIED)),
     DT_ORDER_MODIFIED = decode (l_DT_ORDER_MODIFIED_n,0,dt_order_modified_in, NVL (dt_order_modified_in, DT_ORDER_MODIFIED)),
     PATIENT_NOTIFIED = decode (l_PATIENT_NOTIFIED_n,0,patient_notified_in, NVL (patient_notified_in, PATIENT_NOTIFIED)),
     ID_PROF_LAST_CHANGE = decode (l_ID_PROF_LAST_CHANGE_n,0,id_prof_last_change_in, NVL (id_prof_last_change_in, ID_PROF_LAST_CHANGE)),
     ID_SW_LAST_CHANGE = decode (l_ID_SW_LAST_CHANGE_n,0,id_sw_last_change_in, NVL (id_sw_last_change_in, ID_SW_LAST_CHANGE)),
     ID_INST_LAST_CHANGE = decode (l_ID_INST_LAST_CHANGE_n,0,id_inst_last_change_in, NVL (id_inst_last_change_in, ID_INST_LAST_CHANGE)),
     ORDER_MODIFIED_ID_ISSUE = decode (l_ORDER_MODIFIED_ID_ISSUE_n,0,order_modified_id_issue_in, NVL (order_modified_id_issue_in, ORDER_MODIFIED_ID_ISSUE)),
     ORDER_MODIFIED_MESSAGE = decode (l_ORDER_MODIFIED_MESSAGE_n,0,order_modified_message_in, NVL (order_modified_message_in, ORDER_MODIFIED_MESSAGE)),
     ID_PAT_MEDICATION_LIST = decode (l_ID_PAT_MEDICATION_LIST_n,0,id_pat_medication_list_in, NVL (id_pat_medication_list_in, ID_PAT_MEDICATION_LIST)),
     ID_OTHER_PRODUCT = decode (l_ID_OTHER_PRODUCT_n,0,id_other_product_in, NVL (id_other_product_in, ID_OTHER_PRODUCT)),
     DESC_OTHER_PRODUCT = decode (l_DESC_OTHER_PRODUCT_n,0,desc_other_product_in, NVL (desc_other_product_in, DESC_OTHER_PRODUCT)),
     STATUS_FLG = decode (l_STATUS_FLG_n,0,status_flg_in, NVL (status_flg_in, STATUS_FLG)),
     STATUS_ICON = decode (l_STATUS_ICON_n,0,status_icon_in, NVL (status_icon_in, STATUS_ICON)),
     STATUS_MSG = decode (l_STATUS_MSG_n,0,status_msg_in, NVL (status_msg_in, STATUS_MSG)),
     STATUS_STR = decode (l_STATUS_STR_n,0,status_str_in, NVL (status_str_in, STATUS_STR)),
     DISPENSE = decode (l_DISPENSE_n,0,dispense_in, NVL (dispense_in, DISPENSE)),
     UNIT_MEASURE_DISPENSE = decode (l_UNIT_MEASURE_DISPENSE_n,0,unit_measure_dispense_in, NVL (unit_measure_dispense_in, UNIT_MEASURE_DISPENSE)),
     FLG_DOSAGE_CHECK = decode (l_FLG_DOSAGE_CHECK_n,0,flg_dosage_check_in, NVL (flg_dosage_check_in, FLG_DOSAGE_CHECK)),
     CREATE_USER = decode (l_CREATE_USER_n,0,create_user_in, NVL (create_user_in, CREATE_USER)),
     CREATE_TIME = decode (l_CREATE_TIME_n,0,create_time_in, NVL (create_time_in, CREATE_TIME)),
     CREATE_INSTITUTION = decode (l_CREATE_INSTITUTION_n,0,create_institution_in, NVL (create_institution_in, CREATE_INSTITUTION)),
     UPDATE_USER = decode (l_UPDATE_USER_n,0,update_user_in, NVL (update_user_in, UPDATE_USER)),
     UPDATE_TIME = decode (l_UPDATE_TIME_n,0,update_time_in, NVL (update_time_in, UPDATE_TIME)),
     UPDATE_INSTITUTION = decode (l_UPDATE_INSTITUTION_n,0,update_institution_in, NVL (update_institution_in, UPDATE_INSTITUTION)),
     FLG_FIRST_PRESC = decode (l_FLG_FIRST_PRESC_n,0,flg_first_presc_in, NVL (flg_first_presc_in, FLG_FIRST_PRESC)),
     ID_PRESC_DIRECTIONS = decode (l_ID_PRESC_DIRECTIONS_n,0,id_presc_directions_in, NVL (id_presc_directions_in, ID_PRESC_DIRECTIONS)),
     FLG_CHRONIC_MEDICATION = decode (l_FLG_CHRONIC_MEDICATION_n,0,flg_chronic_medication_in, NVL (flg_chronic_medication_in, FLG_CHRONIC_MEDICATION)),
     CHRONIC_NOTES_NOT_ACTIVE = decode (l_CHRONIC_NOTES_NOT_ACTIVE_n,0,chronic_notes_not_active_in, NVL (chronic_notes_not_active_in, CHRONIC_NOTES_NOT_ACTIVE)),
     ID_CHRONIC_MOTIVE = decode (l_ID_CHRONIC_MOTIVE_n,0,id_chronic_motive_in, NVL (id_chronic_motive_in, ID_CHRONIC_MOTIVE)),
     ID_PROF_NOT_ACTIVE = decode (l_ID_PROF_NOT_ACTIVE_n,0,id_prof_not_active_in, NVL (id_prof_not_active_in, ID_PROF_NOT_ACTIVE)),
     CHRONIC_MOTIVE_DESCR = decode (l_CHRONIC_MOTIVE_DESCR_n,0,chronic_motive_descr_in, NVL (chronic_motive_descr_in, CHRONIC_MOTIVE_DESCR)),
     DT_NOT_ACTIVE_TSTZ = decode (l_DT_NOT_ACTIVE_TSTZ_n,0,dt_not_active_tstz_in, NVL (dt_not_active_tstz_in, DT_NOT_ACTIVE_TSTZ)),
     PRECO_SNS = decode (l_PRECO_SNS_n,0,preco_sns_in, NVL (preco_sns_in, PRECO_SNS)),
     PRECO_UTENTE = decode (l_PRECO_UTENTE_n,0,preco_utente_in, NVL (preco_utente_in, PRECO_UTENTE)),
     PRECO_UTENTE_DIFF = decode (l_PRECO_UTENTE_DIFF_n,0,preco_utente_diff_in, NVL (preco_utente_diff_in, PRECO_UTENTE_DIFF)),
     COMPART = decode (l_COMPART_n,0,compart_in, NVL (compart_in, COMPART)),
     ID_REGIME = decode (l_ID_REGIME_n,0,id_regime_in, NVL (id_regime_in, ID_REGIME)),
     ID_CDR_CALL = decode (l_ID_CDR_CALL_n,0,id_cdr_call_in, NVL (id_cdr_call_in, ID_CDR_CALL))
          WHERE
             ID_PRESCRIPTION_PHARM = id_prescription_pharm_in
         RETURNING ROWID BULK COLLECT INTO l_rows_out;


if(rows_out is null)
then
rows_out := table_varchar();
end if;

rows_out :=  rows_out MULTISET UNION DISTINCT l_rows_out;

   EXCEPTION
      WHEN DUP_VAL_ON_INDEX
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_err_instance_id PLS_INTEGER;
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF FALSE THEN NULL; -- Placeholder in case no unique indexes
           ELSE
              pk_alert_exceptions.raise_error (
                    error_name_in => 'DUPLICATE-VALUE'
                    ,name1_in => 'OWNER'
                    ,value1_in => l_owner
                    ,name2_in => 'CONSTRAINT_NAME'
                    ,value2_in => l_name
                    ,name3_in => 'TABLE_NAME'
                    ,value3_in => 'PRESCRIPTION_PHARM');
           END IF;
        END;
        END IF;
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           IF l_name = 'PP_CANCEL_REASON_CM_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_CHRONIC_MOTIVE'
               , value_in => id_chronic_motive_in);
           END IF;
           IF l_name = 'PP_CC_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_CDR_CALL'
               , value_in => id_cdr_call_in);
           END IF;
           IF l_name = 'PP_ID_REGIME_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_REGIME'
               , value_in => id_regime_in);
           END IF;
           IF l_name = 'PP_IPML_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PAT_MEDICATION_LIST'
               , value_in => id_pat_medication_list_in);
           END IF;
           IF l_name = 'PP_MANIP_IV_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_MANIPULATED'
               , value_in => id_manipulated_in);
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'VERS'
               , value_in => vers_in);
           END IF;
           IF l_name = 'PP_MED_EI_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'EMB_ID'
               , value_in => emb_id_in);
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'VERS'
               , value_in => vers_in);
           END IF;
           IF l_name = 'PPN_DRUG_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_DRUG'
               , value_in => id_drug_in);
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'VERS'
               , value_in => vers_in);
           END IF;
           IF l_name = 'PPN_PRN_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PRESCRIPTION'
               , value_in => id_prescription_in);
           END IF;
           IF l_name = 'PP_PDIR_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PRESC_DIRECTIONS'
               , value_in => id_presc_directions_in);
           END IF;
           IF l_name = 'PP_PH_RI_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ROUTE_ID'
               , value_in => route_id_in);
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'VERS'
               , value_in => vers_in);
           END IF;
           IF l_name = 'PP_PR_DI_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'REGULATION_ID'
               , value_in => regulation_id_in);
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'VERS'
               , value_in => vers_in);
           END IF;
           IF l_name = 'PP_PROF_CM_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PROF_NOT_ACTIVE'
               , value_in => id_prof_not_active_in);
           END IF;
           IF l_name = 'PP_UME_DISP_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'UNIT_MEASURE_DISPENSE'
               , value_in => unit_measure_dispense_in);
           END IF;
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
      WHEN e_null_column_value
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           v_errm VARCHAR2(2000) := DBMS_UTILITY.FORMAT_ERROR_STACK;
           dot1loc INTEGER;
           dot2loc INTEGER;
           parenloc INTEGER;
           c_owner ALL_CONSTRAINTS.OWNER%TYPE;
           c_tabname ALL_TABLES.TABLE_NAME%TYPE;
           c_colname ALL_TAB_COLUMNS.COLUMN_NAME%TYPE;
        BEGIN
           dot1loc := INSTR (v_errm, '.', 1, 1);
           dot2loc := INSTR (v_errm, '.', 1, 2);
           parenloc := INSTR (v_errm, '(');
           c_owner :=SUBSTR (v_errm, parenloc+1, dot1loc-parenloc-1);
           c_tabname := SUBSTR (v_errm, dot1loc+1, dot2loc-dot1loc-1);
           c_colname := SUBSTR (v_errm, dot2loc+1, INSTR (v_errm,')')-dot2loc-1);

           pk_alert_exceptions.raise_error (
                error_name_in => 'COLUMN-CANNOT-BE-NULL'
               ,name1_in => 'OWNER'
               ,value1_in => c_owner
               ,name2_in => 'TABLE_NAME'
               ,value2_in => c_tabname
               ,name3_in => 'COLUMN_NAME'
               ,value3_in => c_colname);
        END;
        END IF;
   END upd;


   PROCEDURE upd (
      id_prescription_pharm_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE,
      id_prescription_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION%TYPE DEFAULT NULL,
      ID_PRESCRIPTION_nin IN BOOLEAN := TRUE,
      id_drug_in IN PRESCRIPTION_PHARM.ID_DRUG%TYPE DEFAULT NULL,
      ID_DRUG_nin IN BOOLEAN := TRUE,
      qty_in IN PRESCRIPTION_PHARM.QTY%TYPE DEFAULT NULL,
      QTY_nin IN BOOLEAN := TRUE,
      generico_in IN PRESCRIPTION_PHARM.GENERICO%TYPE DEFAULT NULL,
      GENERICO_nin IN BOOLEAN := TRUE,
      dosage_in IN PRESCRIPTION_PHARM.DOSAGE%TYPE DEFAULT NULL,
      DOSAGE_nin IN BOOLEAN := TRUE,
      justif_in IN PRESCRIPTION_PHARM.JUSTIF%TYPE DEFAULT NULL,
      JUSTIF_nin IN BOOLEAN := TRUE,
      flg_ci_in IN PRESCRIPTION_PHARM.FLG_CI%TYPE DEFAULT NULL,
      FLG_CI_nin IN BOOLEAN := TRUE,
      flg_cheaper_in IN PRESCRIPTION_PHARM.FLG_CHEAPER%TYPE DEFAULT NULL,
      FLG_CHEAPER_nin IN BOOLEAN := TRUE,
      flg_justif_in IN PRESCRIPTION_PHARM.FLG_JUSTIF%TYPE DEFAULT NULL,
      FLG_JUSTIF_nin IN BOOLEAN := TRUE,
      flg_status_in IN PRESCRIPTION_PHARM.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      desc_manip_in IN PRESCRIPTION_PHARM.DESC_MANIP%TYPE DEFAULT NULL,
      DESC_MANIP_nin IN BOOLEAN := TRUE,
      stock_in IN PRESCRIPTION_PHARM.STOCK%TYPE DEFAULT NULL,
      STOCK_nin IN BOOLEAN := TRUE,
      notes_in IN PRESCRIPTION_PHARM.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      flg_attention_in IN PRESCRIPTION_PHARM.FLG_ATTENTION%TYPE DEFAULT NULL,
      FLG_ATTENTION_nin IN BOOLEAN := TRUE,
      flg_attention_print_in IN PRESCRIPTION_PHARM.FLG_ATTENTION_PRINT%TYPE DEFAULT NULL,
      FLG_ATTENTION_PRINT_nin IN BOOLEAN := TRUE,
      desc_dietary_in IN PRESCRIPTION_PHARM.DESC_DIETARY%TYPE DEFAULT NULL,
      DESC_DIETARY_nin IN BOOLEAN := TRUE,
      qty_manip_in IN PRESCRIPTION_PHARM.QTY_MANIP%TYPE DEFAULT NULL,
      QTY_MANIP_nin IN BOOLEAN := TRUE,
      unit_manip_in IN PRESCRIPTION_PHARM.UNIT_MANIP%TYPE DEFAULT NULL,
      UNIT_MANIP_nin IN BOOLEAN := TRUE,
      pvp_in IN PRESCRIPTION_PHARM.PVP%TYPE DEFAULT NULL,
      PVP_nin IN BOOLEAN := TRUE,
      p_ref_in IN PRESCRIPTION_PHARM.P_REF%TYPE DEFAULT NULL,
      P_REF_nin IN BOOLEAN := TRUE,
      p_ref_pen_in IN PRESCRIPTION_PHARM.P_REF_PEN%TYPE DEFAULT NULL,
      P_REF_PEN_nin IN BOOLEAN := TRUE,
      dt_prescription_pharm_tstz_in IN PRESCRIPTION_PHARM.DT_PRESCRIPTION_PHARM_TSTZ%TYPE DEFAULT NULL,
      DT_PRESCRIPTION_PHARM_TSTZ_nin IN BOOLEAN := TRUE,
      dt_order_in IN PRESCRIPTION_PHARM.DT_ORDER%TYPE DEFAULT NULL,
      DT_ORDER_nin IN BOOLEAN := TRUE,
      id_prof_order_in IN PRESCRIPTION_PHARM.ID_PROF_ORDER%TYPE DEFAULT NULL,
      ID_PROF_ORDER_nin IN BOOLEAN := TRUE,
      id_order_type_in IN PRESCRIPTION_PHARM.ID_ORDER_TYPE%TYPE DEFAULT NULL,
      ID_ORDER_TYPE_nin IN BOOLEAN := TRUE,
      flg_co_sign_in IN PRESCRIPTION_PHARM.FLG_CO_SIGN%TYPE DEFAULT NULL,
      FLG_CO_SIGN_nin IN BOOLEAN := TRUE,
      dt_co_sign_in IN PRESCRIPTION_PHARM.DT_CO_SIGN%TYPE DEFAULT NULL,
      DT_CO_SIGN_nin IN BOOLEAN := TRUE,
      notes_co_sign_in IN PRESCRIPTION_PHARM.NOTES_CO_SIGN%TYPE DEFAULT NULL,
      NOTES_CO_SIGN_nin IN BOOLEAN := TRUE,
      id_prof_co_sign_in IN PRESCRIPTION_PHARM.ID_PROF_CO_SIGN%TYPE DEFAULT NULL,
      ID_PROF_CO_SIGN_nin IN BOOLEAN := TRUE,
      id_unit_measure_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE%TYPE DEFAULT NULL,
      ID_UNIT_MEASURE_nin IN BOOLEAN := TRUE,
      frequency_in IN PRESCRIPTION_PHARM.FREQUENCY%TYPE DEFAULT NULL,
      FREQUENCY_nin IN BOOLEAN := TRUE,
      id_unit_measure_freq_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_FREQ%TYPE DEFAULT NULL,
      ID_UNIT_MEASURE_FREQ_nin IN BOOLEAN := TRUE,
      duration_in IN PRESCRIPTION_PHARM.DURATION%TYPE DEFAULT NULL,
      DURATION_nin IN BOOLEAN := TRUE,
      id_unit_measure_dur_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_DUR%TYPE DEFAULT NULL,
      ID_UNIT_MEASURE_DUR_nin IN BOOLEAN := TRUE,
      dt_start_presc_tstz_in IN PRESCRIPTION_PHARM.DT_START_PRESC_TSTZ%TYPE DEFAULT NULL,
      DT_START_PRESC_TSTZ_nin IN BOOLEAN := TRUE,
      dt_end_presc_tstz_in IN PRESCRIPTION_PHARM.DT_END_PRESC_TSTZ%TYPE DEFAULT NULL,
      DT_END_PRESC_TSTZ_nin IN BOOLEAN := TRUE,
      refill_in IN PRESCRIPTION_PHARM.REFILL%TYPE DEFAULT NULL,
      REFILL_nin IN BOOLEAN := TRUE,
      emb_id_in IN PRESCRIPTION_PHARM.EMB_ID%TYPE DEFAULT NULL,
      EMB_ID_nin IN BOOLEAN := TRUE,
      qty_inst_in IN PRESCRIPTION_PHARM.QTY_INST%TYPE DEFAULT NULL,
      QTY_INST_nin IN BOOLEAN := TRUE,
      unit_measure_inst_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_INST%TYPE DEFAULT NULL,
      UNIT_MEASURE_INST_nin IN BOOLEAN := TRUE,
      first_dose_in IN PRESCRIPTION_PHARM.FIRST_DOSE%TYPE DEFAULT NULL,
      FIRST_DOSE_nin IN BOOLEAN := TRUE,
      package_number_in IN PRESCRIPTION_PHARM.PACKAGE_NUMBER%TYPE DEFAULT NULL,
      PACKAGE_NUMBER_nin IN BOOLEAN := TRUE,
      dt_expire_tstz_in IN PRESCRIPTION_PHARM.DT_EXPIRE_TSTZ%TYPE DEFAULT NULL,
      DT_EXPIRE_TSTZ_nin IN BOOLEAN := TRUE,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE DEFAULT NULL,
      VERS_nin IN BOOLEAN := TRUE,
      route_id_in IN PRESCRIPTION_PHARM.ROUTE_ID%TYPE DEFAULT NULL,
      ROUTE_ID_nin IN BOOLEAN := TRUE,
      regulation_id_in IN PRESCRIPTION_PHARM.REGULATION_ID%TYPE DEFAULT NULL,
      REGULATION_ID_nin IN BOOLEAN := TRUE,
      flg_interac_med_in IN PRESCRIPTION_PHARM.FLG_INTERAC_MED%TYPE DEFAULT NULL,
      FLG_INTERAC_MED_nin IN BOOLEAN := TRUE,
      flg_interac_allergy_in IN PRESCRIPTION_PHARM.FLG_INTERAC_ALLERGY%TYPE DEFAULT NULL,
      FLG_INTERAC_ALLERGY_nin IN BOOLEAN := TRUE,
      id_dietary_drug_in IN PRESCRIPTION_PHARM.ID_DIETARY_DRUG%TYPE DEFAULT NULL,
      ID_DIETARY_DRUG_nin IN BOOLEAN := TRUE,
      id_manipulated_in IN PRESCRIPTION_PHARM.ID_MANIPULATED%TYPE DEFAULT NULL,
      ID_MANIPULATED_nin IN BOOLEAN := TRUE,
      order_modified_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED%TYPE DEFAULT NULL,
      ORDER_MODIFIED_nin IN BOOLEAN := TRUE,
      dt_order_modified_in IN PRESCRIPTION_PHARM.DT_ORDER_MODIFIED%TYPE DEFAULT NULL,
      DT_ORDER_MODIFIED_nin IN BOOLEAN := TRUE,
      patient_notified_in IN PRESCRIPTION_PHARM.PATIENT_NOTIFIED%TYPE DEFAULT NULL,
      PATIENT_NOTIFIED_nin IN BOOLEAN := TRUE,
      id_prof_last_change_in IN PRESCRIPTION_PHARM.ID_PROF_LAST_CHANGE%TYPE DEFAULT NULL,
      ID_PROF_LAST_CHANGE_nin IN BOOLEAN := TRUE,
      id_sw_last_change_in IN PRESCRIPTION_PHARM.ID_SW_LAST_CHANGE%TYPE DEFAULT NULL,
      ID_SW_LAST_CHANGE_nin IN BOOLEAN := TRUE,
      id_inst_last_change_in IN PRESCRIPTION_PHARM.ID_INST_LAST_CHANGE%TYPE DEFAULT NULL,
      ID_INST_LAST_CHANGE_nin IN BOOLEAN := TRUE,
      order_modified_id_issue_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_ID_ISSUE%TYPE DEFAULT NULL,
      ORDER_MODIFIED_ID_ISSUE_nin IN BOOLEAN := TRUE,
      order_modified_message_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_MESSAGE%TYPE DEFAULT NULL,
      ORDER_MODIFIED_MESSAGE_nin IN BOOLEAN := TRUE,
      id_pat_medication_list_in IN PRESCRIPTION_PHARM.ID_PAT_MEDICATION_LIST%TYPE DEFAULT NULL,
      ID_PAT_MEDICATION_LIST_nin IN BOOLEAN := TRUE,
      id_other_product_in IN PRESCRIPTION_PHARM.ID_OTHER_PRODUCT%TYPE DEFAULT NULL,
      ID_OTHER_PRODUCT_nin IN BOOLEAN := TRUE,
      desc_other_product_in IN PRESCRIPTION_PHARM.DESC_OTHER_PRODUCT%TYPE DEFAULT NULL,
      DESC_OTHER_PRODUCT_nin IN BOOLEAN := TRUE,
      status_flg_in IN PRESCRIPTION_PHARM.STATUS_FLG%TYPE DEFAULT NULL,
      STATUS_FLG_nin IN BOOLEAN := TRUE,
      status_icon_in IN PRESCRIPTION_PHARM.STATUS_ICON%TYPE DEFAULT NULL,
      STATUS_ICON_nin IN BOOLEAN := TRUE,
      status_msg_in IN PRESCRIPTION_PHARM.STATUS_MSG%TYPE DEFAULT NULL,
      STATUS_MSG_nin IN BOOLEAN := TRUE,
      status_str_in IN PRESCRIPTION_PHARM.STATUS_STR%TYPE DEFAULT NULL,
      STATUS_STR_nin IN BOOLEAN := TRUE,
      dispense_in IN PRESCRIPTION_PHARM.DISPENSE%TYPE DEFAULT NULL,
      DISPENSE_nin IN BOOLEAN := TRUE,
      unit_measure_dispense_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_DISPENSE%TYPE DEFAULT NULL,
      UNIT_MEASURE_DISPENSE_nin IN BOOLEAN := TRUE,
      flg_dosage_check_in IN PRESCRIPTION_PHARM.FLG_DOSAGE_CHECK%TYPE DEFAULT NULL,
      FLG_DOSAGE_CHECK_nin IN BOOLEAN := TRUE,
      create_user_in IN PRESCRIPTION_PHARM.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN PRESCRIPTION_PHARM.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN PRESCRIPTION_PHARM.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN PRESCRIPTION_PHARM.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN PRESCRIPTION_PHARM.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN PRESCRIPTION_PHARM.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      flg_first_presc_in IN PRESCRIPTION_PHARM.FLG_FIRST_PRESC%TYPE DEFAULT NULL,
      FLG_FIRST_PRESC_nin IN BOOLEAN := TRUE,
      id_presc_directions_in IN PRESCRIPTION_PHARM.ID_PRESC_DIRECTIONS%TYPE DEFAULT NULL,
      ID_PRESC_DIRECTIONS_nin IN BOOLEAN := TRUE,
      flg_chronic_medication_in IN PRESCRIPTION_PHARM.FLG_CHRONIC_MEDICATION%TYPE DEFAULT NULL,
      FLG_CHRONIC_MEDICATION_nin IN BOOLEAN := TRUE,
      chronic_notes_not_active_in IN PRESCRIPTION_PHARM.CHRONIC_NOTES_NOT_ACTIVE%TYPE DEFAULT NULL,
      CHRONIC_NOTES_NOT_ACTIVE_nin IN BOOLEAN := TRUE,
      id_chronic_motive_in IN PRESCRIPTION_PHARM.ID_CHRONIC_MOTIVE%TYPE DEFAULT NULL,
      ID_CHRONIC_MOTIVE_nin IN BOOLEAN := TRUE,
      id_prof_not_active_in IN PRESCRIPTION_PHARM.ID_PROF_NOT_ACTIVE%TYPE DEFAULT NULL,
      ID_PROF_NOT_ACTIVE_nin IN BOOLEAN := TRUE,
      chronic_motive_descr_in IN PRESCRIPTION_PHARM.CHRONIC_MOTIVE_DESCR%TYPE DEFAULT NULL,
      CHRONIC_MOTIVE_DESCR_nin IN BOOLEAN := TRUE,
      dt_not_active_tstz_in IN PRESCRIPTION_PHARM.DT_NOT_ACTIVE_TSTZ%TYPE DEFAULT NULL,
      DT_NOT_ACTIVE_TSTZ_nin IN BOOLEAN := TRUE,
      preco_sns_in IN PRESCRIPTION_PHARM.PRECO_SNS%TYPE DEFAULT NULL,
      PRECO_SNS_nin IN BOOLEAN := TRUE,
      preco_utente_in IN PRESCRIPTION_PHARM.PRECO_UTENTE%TYPE DEFAULT NULL,
      PRECO_UTENTE_nin IN BOOLEAN := TRUE,
      preco_utente_diff_in IN PRESCRIPTION_PHARM.PRECO_UTENTE_DIFF%TYPE DEFAULT NULL,
      PRECO_UTENTE_DIFF_nin IN BOOLEAN := TRUE,
      compart_in IN PRESCRIPTION_PHARM.COMPART%TYPE DEFAULT NULL,
      COMPART_nin IN BOOLEAN := TRUE,
      id_regime_in IN PRESCRIPTION_PHARM.ID_REGIME%TYPE DEFAULT NULL,
      ID_REGIME_nin IN BOOLEAN := TRUE,
      id_cdr_call_in IN PRESCRIPTION_PHARM.ID_CDR_CALL%TYPE DEFAULT NULL,
      ID_CDR_CALL_nin IN BOOLEAN := TRUE,
     handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
     upd (
      id_prescription_pharm_in => id_prescription_pharm_in,
      id_prescription_in => id_prescription_in,
      ID_PRESCRIPTION_nin => ID_PRESCRIPTION_nin,
      id_drug_in => id_drug_in,
      ID_DRUG_nin => ID_DRUG_nin,
      qty_in => qty_in,
      QTY_nin => QTY_nin,
      generico_in => generico_in,
      GENERICO_nin => GENERICO_nin,
      dosage_in => dosage_in,
      DOSAGE_nin => DOSAGE_nin,
      justif_in => justif_in,
      JUSTIF_nin => JUSTIF_nin,
      flg_ci_in => flg_ci_in,
      FLG_CI_nin => FLG_CI_nin,
      flg_cheaper_in => flg_cheaper_in,
      FLG_CHEAPER_nin => FLG_CHEAPER_nin,
      flg_justif_in => flg_justif_in,
      FLG_JUSTIF_nin => FLG_JUSTIF_nin,
      flg_status_in => flg_status_in,
      FLG_STATUS_nin => FLG_STATUS_nin,
      desc_manip_in => desc_manip_in,
      DESC_MANIP_nin => DESC_MANIP_nin,
      stock_in => stock_in,
      STOCK_nin => STOCK_nin,
      notes_in => notes_in,
      NOTES_nin => NOTES_nin,
      flg_attention_in => flg_attention_in,
      FLG_ATTENTION_nin => FLG_ATTENTION_nin,
      flg_attention_print_in => flg_attention_print_in,
      FLG_ATTENTION_PRINT_nin => FLG_ATTENTION_PRINT_nin,
      desc_dietary_in => desc_dietary_in,
      DESC_DIETARY_nin => DESC_DIETARY_nin,
      qty_manip_in => qty_manip_in,
      QTY_MANIP_nin => QTY_MANIP_nin,
      unit_manip_in => unit_manip_in,
      UNIT_MANIP_nin => UNIT_MANIP_nin,
      pvp_in => pvp_in,
      PVP_nin => PVP_nin,
      p_ref_in => p_ref_in,
      P_REF_nin => P_REF_nin,
      p_ref_pen_in => p_ref_pen_in,
      P_REF_PEN_nin => P_REF_PEN_nin,
      dt_prescription_pharm_tstz_in => dt_prescription_pharm_tstz_in,
      DT_PRESCRIPTION_PHARM_TSTZ_nin => DT_PRESCRIPTION_PHARM_TSTZ_nin,
      dt_order_in => dt_order_in,
      DT_ORDER_nin => DT_ORDER_nin,
      id_prof_order_in => id_prof_order_in,
      ID_PROF_ORDER_nin => ID_PROF_ORDER_nin,
      id_order_type_in => id_order_type_in,
      ID_ORDER_TYPE_nin => ID_ORDER_TYPE_nin,
      flg_co_sign_in => flg_co_sign_in,
      FLG_CO_SIGN_nin => FLG_CO_SIGN_nin,
      dt_co_sign_in => dt_co_sign_in,
      DT_CO_SIGN_nin => DT_CO_SIGN_nin,
      notes_co_sign_in => notes_co_sign_in,
      NOTES_CO_SIGN_nin => NOTES_CO_SIGN_nin,
      id_prof_co_sign_in => id_prof_co_sign_in,
      ID_PROF_CO_SIGN_nin => ID_PROF_CO_SIGN_nin,
      id_unit_measure_in => id_unit_measure_in,
      ID_UNIT_MEASURE_nin => ID_UNIT_MEASURE_nin,
      frequency_in => frequency_in,
      FREQUENCY_nin => FREQUENCY_nin,
      id_unit_measure_freq_in => id_unit_measure_freq_in,
      ID_UNIT_MEASURE_FREQ_nin => ID_UNIT_MEASURE_FREQ_nin,
      duration_in => duration_in,
      DURATION_nin => DURATION_nin,
      id_unit_measure_dur_in => id_unit_measure_dur_in,
      ID_UNIT_MEASURE_DUR_nin => ID_UNIT_MEASURE_DUR_nin,
      dt_start_presc_tstz_in => dt_start_presc_tstz_in,
      DT_START_PRESC_TSTZ_nin => DT_START_PRESC_TSTZ_nin,
      dt_end_presc_tstz_in => dt_end_presc_tstz_in,
      DT_END_PRESC_TSTZ_nin => DT_END_PRESC_TSTZ_nin,
      refill_in => refill_in,
      REFILL_nin => REFILL_nin,
      emb_id_in => emb_id_in,
      EMB_ID_nin => EMB_ID_nin,
      qty_inst_in => qty_inst_in,
      QTY_INST_nin => QTY_INST_nin,
      unit_measure_inst_in => unit_measure_inst_in,
      UNIT_MEASURE_INST_nin => UNIT_MEASURE_INST_nin,
      first_dose_in => first_dose_in,
      FIRST_DOSE_nin => FIRST_DOSE_nin,
      package_number_in => package_number_in,
      PACKAGE_NUMBER_nin => PACKAGE_NUMBER_nin,
      dt_expire_tstz_in => dt_expire_tstz_in,
      DT_EXPIRE_TSTZ_nin => DT_EXPIRE_TSTZ_nin,
      vers_in => vers_in,
      VERS_nin => VERS_nin,
      route_id_in => route_id_in,
      ROUTE_ID_nin => ROUTE_ID_nin,
      regulation_id_in => regulation_id_in,
      REGULATION_ID_nin => REGULATION_ID_nin,
      flg_interac_med_in => flg_interac_med_in,
      FLG_INTERAC_MED_nin => FLG_INTERAC_MED_nin,
      flg_interac_allergy_in => flg_interac_allergy_in,
      FLG_INTERAC_ALLERGY_nin => FLG_INTERAC_ALLERGY_nin,
      id_dietary_drug_in => id_dietary_drug_in,
      ID_DIETARY_DRUG_nin => ID_DIETARY_DRUG_nin,
      id_manipulated_in => id_manipulated_in,
      ID_MANIPULATED_nin => ID_MANIPULATED_nin,
      order_modified_in => order_modified_in,
      ORDER_MODIFIED_nin => ORDER_MODIFIED_nin,
      dt_order_modified_in => dt_order_modified_in,
      DT_ORDER_MODIFIED_nin => DT_ORDER_MODIFIED_nin,
      patient_notified_in => patient_notified_in,
      PATIENT_NOTIFIED_nin => PATIENT_NOTIFIED_nin,
      id_prof_last_change_in => id_prof_last_change_in,
      ID_PROF_LAST_CHANGE_nin => ID_PROF_LAST_CHANGE_nin,
      id_sw_last_change_in => id_sw_last_change_in,
      ID_SW_LAST_CHANGE_nin => ID_SW_LAST_CHANGE_nin,
      id_inst_last_change_in => id_inst_last_change_in,
      ID_INST_LAST_CHANGE_nin => ID_INST_LAST_CHANGE_nin,
      order_modified_id_issue_in => order_modified_id_issue_in,
      ORDER_MODIFIED_ID_ISSUE_nin => ORDER_MODIFIED_ID_ISSUE_nin,
      order_modified_message_in => order_modified_message_in,
      ORDER_MODIFIED_MESSAGE_nin => ORDER_MODIFIED_MESSAGE_nin,
      id_pat_medication_list_in => id_pat_medication_list_in,
      ID_PAT_MEDICATION_LIST_nin => ID_PAT_MEDICATION_LIST_nin,
      id_other_product_in => id_other_product_in,
      ID_OTHER_PRODUCT_nin => ID_OTHER_PRODUCT_nin,
      desc_other_product_in => desc_other_product_in,
      DESC_OTHER_PRODUCT_nin => DESC_OTHER_PRODUCT_nin,
      status_flg_in => status_flg_in,
      STATUS_FLG_nin => STATUS_FLG_nin,
      status_icon_in => status_icon_in,
      STATUS_ICON_nin => STATUS_ICON_nin,
      status_msg_in => status_msg_in,
      STATUS_MSG_nin => STATUS_MSG_nin,
      status_str_in => status_str_in,
      STATUS_STR_nin => STATUS_STR_nin,
      dispense_in => dispense_in,
      DISPENSE_nin => DISPENSE_nin,
      unit_measure_dispense_in => unit_measure_dispense_in,
      UNIT_MEASURE_DISPENSE_nin => UNIT_MEASURE_DISPENSE_nin,
      flg_dosage_check_in => flg_dosage_check_in,
      FLG_DOSAGE_CHECK_nin => FLG_DOSAGE_CHECK_nin,
      create_user_in => create_user_in,
      CREATE_USER_nin => CREATE_USER_nin,
      create_time_in => create_time_in,
      CREATE_TIME_nin => CREATE_TIME_nin,
      create_institution_in => create_institution_in,
      CREATE_INSTITUTION_nin => CREATE_INSTITUTION_nin,
      update_user_in => update_user_in,
      UPDATE_USER_nin => UPDATE_USER_nin,
      update_time_in => update_time_in,
      UPDATE_TIME_nin => UPDATE_TIME_nin,
      update_institution_in => update_institution_in,
      UPDATE_INSTITUTION_nin => UPDATE_INSTITUTION_nin,
      flg_first_presc_in => flg_first_presc_in,
      FLG_FIRST_PRESC_nin => FLG_FIRST_PRESC_nin,
      id_presc_directions_in => id_presc_directions_in,
      ID_PRESC_DIRECTIONS_nin => ID_PRESC_DIRECTIONS_nin,
      flg_chronic_medication_in => flg_chronic_medication_in,
      FLG_CHRONIC_MEDICATION_nin => FLG_CHRONIC_MEDICATION_nin,
      chronic_notes_not_active_in => chronic_notes_not_active_in,
      CHRONIC_NOTES_NOT_ACTIVE_nin => CHRONIC_NOTES_NOT_ACTIVE_nin,
      id_chronic_motive_in => id_chronic_motive_in,
      ID_CHRONIC_MOTIVE_nin => ID_CHRONIC_MOTIVE_nin,
      id_prof_not_active_in => id_prof_not_active_in,
      ID_PROF_NOT_ACTIVE_nin => ID_PROF_NOT_ACTIVE_nin,
      chronic_motive_descr_in => chronic_motive_descr_in,
      CHRONIC_MOTIVE_DESCR_nin => CHRONIC_MOTIVE_DESCR_nin,
      dt_not_active_tstz_in => dt_not_active_tstz_in,
      DT_NOT_ACTIVE_TSTZ_nin => DT_NOT_ACTIVE_TSTZ_nin,
      preco_sns_in => preco_sns_in,
      PRECO_SNS_nin => PRECO_SNS_nin,
      preco_utente_in => preco_utente_in,
      PRECO_UTENTE_nin => PRECO_UTENTE_nin,
      preco_utente_diff_in => preco_utente_diff_in,
      PRECO_UTENTE_DIFF_nin => PRECO_UTENTE_DIFF_nin,
      compart_in => compart_in,
      COMPART_nin => COMPART_nin,
      id_regime_in => id_regime_in,
      ID_REGIME_nin => ID_REGIME_nin,
      id_cdr_call_in => id_cdr_call_in,
      ID_CDR_CALL_nin => ID_CDR_CALL_nin,
     handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END upd;

PROCEDURE upd (
      id_prescription_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION%TYPE DEFAULT NULL,
      ID_PRESCRIPTION_nin IN BOOLEAN := TRUE,
      id_drug_in IN PRESCRIPTION_PHARM.ID_DRUG%TYPE DEFAULT NULL,
      ID_DRUG_nin IN BOOLEAN := TRUE,
      qty_in IN PRESCRIPTION_PHARM.QTY%TYPE DEFAULT NULL,
      QTY_nin IN BOOLEAN := TRUE,
      generico_in IN PRESCRIPTION_PHARM.GENERICO%TYPE DEFAULT NULL,
      GENERICO_nin IN BOOLEAN := TRUE,
      dosage_in IN PRESCRIPTION_PHARM.DOSAGE%TYPE DEFAULT NULL,
      DOSAGE_nin IN BOOLEAN := TRUE,
      justif_in IN PRESCRIPTION_PHARM.JUSTIF%TYPE DEFAULT NULL,
      JUSTIF_nin IN BOOLEAN := TRUE,
      flg_ci_in IN PRESCRIPTION_PHARM.FLG_CI%TYPE DEFAULT NULL,
      FLG_CI_nin IN BOOLEAN := TRUE,
      flg_cheaper_in IN PRESCRIPTION_PHARM.FLG_CHEAPER%TYPE DEFAULT NULL,
      FLG_CHEAPER_nin IN BOOLEAN := TRUE,
      flg_justif_in IN PRESCRIPTION_PHARM.FLG_JUSTIF%TYPE DEFAULT NULL,
      FLG_JUSTIF_nin IN BOOLEAN := TRUE,
      flg_status_in IN PRESCRIPTION_PHARM.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      desc_manip_in IN PRESCRIPTION_PHARM.DESC_MANIP%TYPE DEFAULT NULL,
      DESC_MANIP_nin IN BOOLEAN := TRUE,
      stock_in IN PRESCRIPTION_PHARM.STOCK%TYPE DEFAULT NULL,
      STOCK_nin IN BOOLEAN := TRUE,
      notes_in IN PRESCRIPTION_PHARM.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      flg_attention_in IN PRESCRIPTION_PHARM.FLG_ATTENTION%TYPE DEFAULT NULL,
      FLG_ATTENTION_nin IN BOOLEAN := TRUE,
      flg_attention_print_in IN PRESCRIPTION_PHARM.FLG_ATTENTION_PRINT%TYPE DEFAULT NULL,
      FLG_ATTENTION_PRINT_nin IN BOOLEAN := TRUE,
      desc_dietary_in IN PRESCRIPTION_PHARM.DESC_DIETARY%TYPE DEFAULT NULL,
      DESC_DIETARY_nin IN BOOLEAN := TRUE,
      qty_manip_in IN PRESCRIPTION_PHARM.QTY_MANIP%TYPE DEFAULT NULL,
      QTY_MANIP_nin IN BOOLEAN := TRUE,
      unit_manip_in IN PRESCRIPTION_PHARM.UNIT_MANIP%TYPE DEFAULT NULL,
      UNIT_MANIP_nin IN BOOLEAN := TRUE,
      pvp_in IN PRESCRIPTION_PHARM.PVP%TYPE DEFAULT NULL,
      PVP_nin IN BOOLEAN := TRUE,
      p_ref_in IN PRESCRIPTION_PHARM.P_REF%TYPE DEFAULT NULL,
      P_REF_nin IN BOOLEAN := TRUE,
      p_ref_pen_in IN PRESCRIPTION_PHARM.P_REF_PEN%TYPE DEFAULT NULL,
      P_REF_PEN_nin IN BOOLEAN := TRUE,
      dt_prescription_pharm_tstz_in IN PRESCRIPTION_PHARM.DT_PRESCRIPTION_PHARM_TSTZ%TYPE DEFAULT NULL,
      DT_PRESCRIPTION_PHARM_TSTZ_nin IN BOOLEAN := TRUE,
      dt_order_in IN PRESCRIPTION_PHARM.DT_ORDER%TYPE DEFAULT NULL,
      DT_ORDER_nin IN BOOLEAN := TRUE,
      id_prof_order_in IN PRESCRIPTION_PHARM.ID_PROF_ORDER%TYPE DEFAULT NULL,
      ID_PROF_ORDER_nin IN BOOLEAN := TRUE,
      id_order_type_in IN PRESCRIPTION_PHARM.ID_ORDER_TYPE%TYPE DEFAULT NULL,
      ID_ORDER_TYPE_nin IN BOOLEAN := TRUE,
      flg_co_sign_in IN PRESCRIPTION_PHARM.FLG_CO_SIGN%TYPE DEFAULT NULL,
      FLG_CO_SIGN_nin IN BOOLEAN := TRUE,
      dt_co_sign_in IN PRESCRIPTION_PHARM.DT_CO_SIGN%TYPE DEFAULT NULL,
      DT_CO_SIGN_nin IN BOOLEAN := TRUE,
      notes_co_sign_in IN PRESCRIPTION_PHARM.NOTES_CO_SIGN%TYPE DEFAULT NULL,
      NOTES_CO_SIGN_nin IN BOOLEAN := TRUE,
      id_prof_co_sign_in IN PRESCRIPTION_PHARM.ID_PROF_CO_SIGN%TYPE DEFAULT NULL,
      ID_PROF_CO_SIGN_nin IN BOOLEAN := TRUE,
      id_unit_measure_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE%TYPE DEFAULT NULL,
      ID_UNIT_MEASURE_nin IN BOOLEAN := TRUE,
      frequency_in IN PRESCRIPTION_PHARM.FREQUENCY%TYPE DEFAULT NULL,
      FREQUENCY_nin IN BOOLEAN := TRUE,
      id_unit_measure_freq_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_FREQ%TYPE DEFAULT NULL,
      ID_UNIT_MEASURE_FREQ_nin IN BOOLEAN := TRUE,
      duration_in IN PRESCRIPTION_PHARM.DURATION%TYPE DEFAULT NULL,
      DURATION_nin IN BOOLEAN := TRUE,
      id_unit_measure_dur_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_DUR%TYPE DEFAULT NULL,
      ID_UNIT_MEASURE_DUR_nin IN BOOLEAN := TRUE,
      dt_start_presc_tstz_in IN PRESCRIPTION_PHARM.DT_START_PRESC_TSTZ%TYPE DEFAULT NULL,
      DT_START_PRESC_TSTZ_nin IN BOOLEAN := TRUE,
      dt_end_presc_tstz_in IN PRESCRIPTION_PHARM.DT_END_PRESC_TSTZ%TYPE DEFAULT NULL,
      DT_END_PRESC_TSTZ_nin IN BOOLEAN := TRUE,
      refill_in IN PRESCRIPTION_PHARM.REFILL%TYPE DEFAULT NULL,
      REFILL_nin IN BOOLEAN := TRUE,
      emb_id_in IN PRESCRIPTION_PHARM.EMB_ID%TYPE DEFAULT NULL,
      EMB_ID_nin IN BOOLEAN := TRUE,
      qty_inst_in IN PRESCRIPTION_PHARM.QTY_INST%TYPE DEFAULT NULL,
      QTY_INST_nin IN BOOLEAN := TRUE,
      unit_measure_inst_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_INST%TYPE DEFAULT NULL,
      UNIT_MEASURE_INST_nin IN BOOLEAN := TRUE,
      first_dose_in IN PRESCRIPTION_PHARM.FIRST_DOSE%TYPE DEFAULT NULL,
      FIRST_DOSE_nin IN BOOLEAN := TRUE,
      package_number_in IN PRESCRIPTION_PHARM.PACKAGE_NUMBER%TYPE DEFAULT NULL,
      PACKAGE_NUMBER_nin IN BOOLEAN := TRUE,
      dt_expire_tstz_in IN PRESCRIPTION_PHARM.DT_EXPIRE_TSTZ%TYPE DEFAULT NULL,
      DT_EXPIRE_TSTZ_nin IN BOOLEAN := TRUE,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE DEFAULT NULL,
      VERS_nin IN BOOLEAN := TRUE,
      route_id_in IN PRESCRIPTION_PHARM.ROUTE_ID%TYPE DEFAULT NULL,
      ROUTE_ID_nin IN BOOLEAN := TRUE,
      regulation_id_in IN PRESCRIPTION_PHARM.REGULATION_ID%TYPE DEFAULT NULL,
      REGULATION_ID_nin IN BOOLEAN := TRUE,
      flg_interac_med_in IN PRESCRIPTION_PHARM.FLG_INTERAC_MED%TYPE DEFAULT NULL,
      FLG_INTERAC_MED_nin IN BOOLEAN := TRUE,
      flg_interac_allergy_in IN PRESCRIPTION_PHARM.FLG_INTERAC_ALLERGY%TYPE DEFAULT NULL,
      FLG_INTERAC_ALLERGY_nin IN BOOLEAN := TRUE,
      id_dietary_drug_in IN PRESCRIPTION_PHARM.ID_DIETARY_DRUG%TYPE DEFAULT NULL,
      ID_DIETARY_DRUG_nin IN BOOLEAN := TRUE,
      id_manipulated_in IN PRESCRIPTION_PHARM.ID_MANIPULATED%TYPE DEFAULT NULL,
      ID_MANIPULATED_nin IN BOOLEAN := TRUE,
      order_modified_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED%TYPE DEFAULT NULL,
      ORDER_MODIFIED_nin IN BOOLEAN := TRUE,
      dt_order_modified_in IN PRESCRIPTION_PHARM.DT_ORDER_MODIFIED%TYPE DEFAULT NULL,
      DT_ORDER_MODIFIED_nin IN BOOLEAN := TRUE,
      patient_notified_in IN PRESCRIPTION_PHARM.PATIENT_NOTIFIED%TYPE DEFAULT NULL,
      PATIENT_NOTIFIED_nin IN BOOLEAN := TRUE,
      id_prof_last_change_in IN PRESCRIPTION_PHARM.ID_PROF_LAST_CHANGE%TYPE DEFAULT NULL,
      ID_PROF_LAST_CHANGE_nin IN BOOLEAN := TRUE,
      id_sw_last_change_in IN PRESCRIPTION_PHARM.ID_SW_LAST_CHANGE%TYPE DEFAULT NULL,
      ID_SW_LAST_CHANGE_nin IN BOOLEAN := TRUE,
      id_inst_last_change_in IN PRESCRIPTION_PHARM.ID_INST_LAST_CHANGE%TYPE DEFAULT NULL,
      ID_INST_LAST_CHANGE_nin IN BOOLEAN := TRUE,
      order_modified_id_issue_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_ID_ISSUE%TYPE DEFAULT NULL,
      ORDER_MODIFIED_ID_ISSUE_nin IN BOOLEAN := TRUE,
      order_modified_message_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_MESSAGE%TYPE DEFAULT NULL,
      ORDER_MODIFIED_MESSAGE_nin IN BOOLEAN := TRUE,
      id_pat_medication_list_in IN PRESCRIPTION_PHARM.ID_PAT_MEDICATION_LIST%TYPE DEFAULT NULL,
      ID_PAT_MEDICATION_LIST_nin IN BOOLEAN := TRUE,
      id_other_product_in IN PRESCRIPTION_PHARM.ID_OTHER_PRODUCT%TYPE DEFAULT NULL,
      ID_OTHER_PRODUCT_nin IN BOOLEAN := TRUE,
      desc_other_product_in IN PRESCRIPTION_PHARM.DESC_OTHER_PRODUCT%TYPE DEFAULT NULL,
      DESC_OTHER_PRODUCT_nin IN BOOLEAN := TRUE,
      status_flg_in IN PRESCRIPTION_PHARM.STATUS_FLG%TYPE DEFAULT NULL,
      STATUS_FLG_nin IN BOOLEAN := TRUE,
      status_icon_in IN PRESCRIPTION_PHARM.STATUS_ICON%TYPE DEFAULT NULL,
      STATUS_ICON_nin IN BOOLEAN := TRUE,
      status_msg_in IN PRESCRIPTION_PHARM.STATUS_MSG%TYPE DEFAULT NULL,
      STATUS_MSG_nin IN BOOLEAN := TRUE,
      status_str_in IN PRESCRIPTION_PHARM.STATUS_STR%TYPE DEFAULT NULL,
      STATUS_STR_nin IN BOOLEAN := TRUE,
      dispense_in IN PRESCRIPTION_PHARM.DISPENSE%TYPE DEFAULT NULL,
      DISPENSE_nin IN BOOLEAN := TRUE,
      unit_measure_dispense_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_DISPENSE%TYPE DEFAULT NULL,
      UNIT_MEASURE_DISPENSE_nin IN BOOLEAN := TRUE,
      flg_dosage_check_in IN PRESCRIPTION_PHARM.FLG_DOSAGE_CHECK%TYPE DEFAULT NULL,
      FLG_DOSAGE_CHECK_nin IN BOOLEAN := TRUE,
      create_user_in IN PRESCRIPTION_PHARM.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN PRESCRIPTION_PHARM.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN PRESCRIPTION_PHARM.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN PRESCRIPTION_PHARM.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN PRESCRIPTION_PHARM.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN PRESCRIPTION_PHARM.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      flg_first_presc_in IN PRESCRIPTION_PHARM.FLG_FIRST_PRESC%TYPE DEFAULT NULL,
      FLG_FIRST_PRESC_nin IN BOOLEAN := TRUE,
      id_presc_directions_in IN PRESCRIPTION_PHARM.ID_PRESC_DIRECTIONS%TYPE DEFAULT NULL,
      ID_PRESC_DIRECTIONS_nin IN BOOLEAN := TRUE,
      flg_chronic_medication_in IN PRESCRIPTION_PHARM.FLG_CHRONIC_MEDICATION%TYPE DEFAULT NULL,
      FLG_CHRONIC_MEDICATION_nin IN BOOLEAN := TRUE,
      chronic_notes_not_active_in IN PRESCRIPTION_PHARM.CHRONIC_NOTES_NOT_ACTIVE%TYPE DEFAULT NULL,
      CHRONIC_NOTES_NOT_ACTIVE_nin IN BOOLEAN := TRUE,
      id_chronic_motive_in IN PRESCRIPTION_PHARM.ID_CHRONIC_MOTIVE%TYPE DEFAULT NULL,
      ID_CHRONIC_MOTIVE_nin IN BOOLEAN := TRUE,
      id_prof_not_active_in IN PRESCRIPTION_PHARM.ID_PROF_NOT_ACTIVE%TYPE DEFAULT NULL,
      ID_PROF_NOT_ACTIVE_nin IN BOOLEAN := TRUE,
      chronic_motive_descr_in IN PRESCRIPTION_PHARM.CHRONIC_MOTIVE_DESCR%TYPE DEFAULT NULL,
      CHRONIC_MOTIVE_DESCR_nin IN BOOLEAN := TRUE,
      dt_not_active_tstz_in IN PRESCRIPTION_PHARM.DT_NOT_ACTIVE_TSTZ%TYPE DEFAULT NULL,
      DT_NOT_ACTIVE_TSTZ_nin IN BOOLEAN := TRUE,
      preco_sns_in IN PRESCRIPTION_PHARM.PRECO_SNS%TYPE DEFAULT NULL,
      PRECO_SNS_nin IN BOOLEAN := TRUE,
      preco_utente_in IN PRESCRIPTION_PHARM.PRECO_UTENTE%TYPE DEFAULT NULL,
      PRECO_UTENTE_nin IN BOOLEAN := TRUE,
      preco_utente_diff_in IN PRESCRIPTION_PHARM.PRECO_UTENTE_DIFF%TYPE DEFAULT NULL,
      PRECO_UTENTE_DIFF_nin IN BOOLEAN := TRUE,
      compart_in IN PRESCRIPTION_PHARM.COMPART%TYPE DEFAULT NULL,
      COMPART_nin IN BOOLEAN := TRUE,
      id_regime_in IN PRESCRIPTION_PHARM.ID_REGIME%TYPE DEFAULT NULL,
      ID_REGIME_nin IN BOOLEAN := TRUE,
      id_cdr_call_in IN PRESCRIPTION_PHARM.ID_CDR_CALL%TYPE DEFAULT NULL,
      ID_CDR_CALL_nin IN BOOLEAN := TRUE,
    where_in varchar2 DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      )
   IS
   l_sql VARCHAR2(32767);
   l_rows_out TABLE_VARCHAR;
   l_ID_PRESCRIPTION_n NUMBER(1);
   l_ID_DRUG_n NUMBER(1);
   l_QTY_n NUMBER(1);
   l_GENERICO_n NUMBER(1);
   l_DOSAGE_n NUMBER(1);
   l_JUSTIF_n NUMBER(1);
   l_FLG_CI_n NUMBER(1);
   l_FLG_CHEAPER_n NUMBER(1);
   l_FLG_JUSTIF_n NUMBER(1);
   l_FLG_STATUS_n NUMBER(1);
   l_DESC_MANIP_n NUMBER(1);
   l_STOCK_n NUMBER(1);
   l_NOTES_n NUMBER(1);
   l_FLG_ATTENTION_n NUMBER(1);
   l_FLG_ATTENTION_PRINT_n NUMBER(1);
   l_DESC_DIETARY_n NUMBER(1);
   l_QTY_MANIP_n NUMBER(1);
   l_UNIT_MANIP_n NUMBER(1);
   l_PVP_n NUMBER(1);
   l_P_REF_n NUMBER(1);
   l_P_REF_PEN_n NUMBER(1);
   l_DT_PRESCRIPTION_PHARM_TSTZ_n NUMBER(1);
   l_DT_ORDER_n NUMBER(1);
   l_ID_PROF_ORDER_n NUMBER(1);
   l_ID_ORDER_TYPE_n NUMBER(1);
   l_FLG_CO_SIGN_n NUMBER(1);
   l_DT_CO_SIGN_n NUMBER(1);
   l_NOTES_CO_SIGN_n NUMBER(1);
   l_ID_PROF_CO_SIGN_n NUMBER(1);
   l_ID_UNIT_MEASURE_n NUMBER(1);
   l_FREQUENCY_n NUMBER(1);
   l_ID_UNIT_MEASURE_FREQ_n NUMBER(1);
   l_DURATION_n NUMBER(1);
   l_ID_UNIT_MEASURE_DUR_n NUMBER(1);
   l_DT_START_PRESC_TSTZ_n NUMBER(1);
   l_DT_END_PRESC_TSTZ_n NUMBER(1);
   l_REFILL_n NUMBER(1);
   l_EMB_ID_n NUMBER(1);
   l_QTY_INST_n NUMBER(1);
   l_UNIT_MEASURE_INST_n NUMBER(1);
   l_FIRST_DOSE_n NUMBER(1);
   l_PACKAGE_NUMBER_n NUMBER(1);
   l_DT_EXPIRE_TSTZ_n NUMBER(1);
   l_VERS_n NUMBER(1);
   l_ROUTE_ID_n NUMBER(1);
   l_REGULATION_ID_n NUMBER(1);
   l_FLG_INTERAC_MED_n NUMBER(1);
   l_FLG_INTERAC_ALLERGY_n NUMBER(1);
   l_ID_DIETARY_DRUG_n NUMBER(1);
   l_ID_MANIPULATED_n NUMBER(1);
   l_ORDER_MODIFIED_n NUMBER(1);
   l_DT_ORDER_MODIFIED_n NUMBER(1);
   l_PATIENT_NOTIFIED_n NUMBER(1);
   l_ID_PROF_LAST_CHANGE_n NUMBER(1);
   l_ID_SW_LAST_CHANGE_n NUMBER(1);
   l_ID_INST_LAST_CHANGE_n NUMBER(1);
   l_ORDER_MODIFIED_ID_ISSUE_n NUMBER(1);
   l_ORDER_MODIFIED_MESSAGE_n NUMBER(1);
   l_ID_PAT_MEDICATION_LIST_n NUMBER(1);
   l_ID_OTHER_PRODUCT_n NUMBER(1);
   l_DESC_OTHER_PRODUCT_n NUMBER(1);
   l_STATUS_FLG_n NUMBER(1);
   l_STATUS_ICON_n NUMBER(1);
   l_STATUS_MSG_n NUMBER(1);
   l_STATUS_STR_n NUMBER(1);
   l_DISPENSE_n NUMBER(1);
   l_UNIT_MEASURE_DISPENSE_n NUMBER(1);
   l_FLG_DOSAGE_CHECK_n NUMBER(1);
   l_CREATE_USER_n NUMBER(1);
   l_CREATE_TIME_n NUMBER(1);
   l_CREATE_INSTITUTION_n NUMBER(1);
   l_UPDATE_USER_n NUMBER(1);
   l_UPDATE_TIME_n NUMBER(1);
   l_UPDATE_INSTITUTION_n NUMBER(1);
   l_FLG_FIRST_PRESC_n NUMBER(1);
   l_ID_PRESC_DIRECTIONS_n NUMBER(1);
   l_FLG_CHRONIC_MEDICATION_n NUMBER(1);
   l_CHRONIC_NOTES_NOT_ACTIVE_n NUMBER(1);
   l_ID_CHRONIC_MOTIVE_n NUMBER(1);
   l_ID_PROF_NOT_ACTIVE_n NUMBER(1);
   l_CHRONIC_MOTIVE_DESCR_n NUMBER(1);
   l_DT_NOT_ACTIVE_TSTZ_n NUMBER(1);
   l_PRECO_SNS_n NUMBER(1);
   l_PRECO_UTENTE_n NUMBER(1);
   l_PRECO_UTENTE_DIFF_n NUMBER(1);
   l_COMPART_n NUMBER(1);
   l_ID_REGIME_n NUMBER(1);
   l_ID_CDR_CALL_n NUMBER(1);
      id_prescription_pharm_in PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE;
   BEGIN



      l_ID_PRESCRIPTION_n := sys.diutil.bool_to_int(ID_PRESCRIPTION_nin);
      l_ID_DRUG_n := sys.diutil.bool_to_int(ID_DRUG_nin);
      l_QTY_n := sys.diutil.bool_to_int(QTY_nin);
      l_GENERICO_n := sys.diutil.bool_to_int(GENERICO_nin);
      l_DOSAGE_n := sys.diutil.bool_to_int(DOSAGE_nin);
      l_JUSTIF_n := sys.diutil.bool_to_int(JUSTIF_nin);
      l_FLG_CI_n := sys.diutil.bool_to_int(FLG_CI_nin);
      l_FLG_CHEAPER_n := sys.diutil.bool_to_int(FLG_CHEAPER_nin);
      l_FLG_JUSTIF_n := sys.diutil.bool_to_int(FLG_JUSTIF_nin);
      l_FLG_STATUS_n := sys.diutil.bool_to_int(FLG_STATUS_nin);
      l_DESC_MANIP_n := sys.diutil.bool_to_int(DESC_MANIP_nin);
      l_STOCK_n := sys.diutil.bool_to_int(STOCK_nin);
      l_NOTES_n := sys.diutil.bool_to_int(NOTES_nin);
      l_FLG_ATTENTION_n := sys.diutil.bool_to_int(FLG_ATTENTION_nin);
      l_FLG_ATTENTION_PRINT_n := sys.diutil.bool_to_int(FLG_ATTENTION_PRINT_nin);
      l_DESC_DIETARY_n := sys.diutil.bool_to_int(DESC_DIETARY_nin);
      l_QTY_MANIP_n := sys.diutil.bool_to_int(QTY_MANIP_nin);
      l_UNIT_MANIP_n := sys.diutil.bool_to_int(UNIT_MANIP_nin);
      l_PVP_n := sys.diutil.bool_to_int(PVP_nin);
      l_P_REF_n := sys.diutil.bool_to_int(P_REF_nin);
      l_P_REF_PEN_n := sys.diutil.bool_to_int(P_REF_PEN_nin);
      l_DT_PRESCRIPTION_PHARM_TSTZ_n := sys.diutil.bool_to_int(DT_PRESCRIPTION_PHARM_TSTZ_nin);
      l_DT_ORDER_n := sys.diutil.bool_to_int(DT_ORDER_nin);
      l_ID_PROF_ORDER_n := sys.diutil.bool_to_int(ID_PROF_ORDER_nin);
      l_ID_ORDER_TYPE_n := sys.diutil.bool_to_int(ID_ORDER_TYPE_nin);
      l_FLG_CO_SIGN_n := sys.diutil.bool_to_int(FLG_CO_SIGN_nin);
      l_DT_CO_SIGN_n := sys.diutil.bool_to_int(DT_CO_SIGN_nin);
      l_NOTES_CO_SIGN_n := sys.diutil.bool_to_int(NOTES_CO_SIGN_nin);
      l_ID_PROF_CO_SIGN_n := sys.diutil.bool_to_int(ID_PROF_CO_SIGN_nin);
      l_ID_UNIT_MEASURE_n := sys.diutil.bool_to_int(ID_UNIT_MEASURE_nin);
      l_FREQUENCY_n := sys.diutil.bool_to_int(FREQUENCY_nin);
      l_ID_UNIT_MEASURE_FREQ_n := sys.diutil.bool_to_int(ID_UNIT_MEASURE_FREQ_nin);
      l_DURATION_n := sys.diutil.bool_to_int(DURATION_nin);
      l_ID_UNIT_MEASURE_DUR_n := sys.diutil.bool_to_int(ID_UNIT_MEASURE_DUR_nin);
      l_DT_START_PRESC_TSTZ_n := sys.diutil.bool_to_int(DT_START_PRESC_TSTZ_nin);
      l_DT_END_PRESC_TSTZ_n := sys.diutil.bool_to_int(DT_END_PRESC_TSTZ_nin);
      l_REFILL_n := sys.diutil.bool_to_int(REFILL_nin);
      l_EMB_ID_n := sys.diutil.bool_to_int(EMB_ID_nin);
      l_QTY_INST_n := sys.diutil.bool_to_int(QTY_INST_nin);
      l_UNIT_MEASURE_INST_n := sys.diutil.bool_to_int(UNIT_MEASURE_INST_nin);
      l_FIRST_DOSE_n := sys.diutil.bool_to_int(FIRST_DOSE_nin);
      l_PACKAGE_NUMBER_n := sys.diutil.bool_to_int(PACKAGE_NUMBER_nin);
      l_DT_EXPIRE_TSTZ_n := sys.diutil.bool_to_int(DT_EXPIRE_TSTZ_nin);
      l_VERS_n := sys.diutil.bool_to_int(VERS_nin);
      l_ROUTE_ID_n := sys.diutil.bool_to_int(ROUTE_ID_nin);
      l_REGULATION_ID_n := sys.diutil.bool_to_int(REGULATION_ID_nin);
      l_FLG_INTERAC_MED_n := sys.diutil.bool_to_int(FLG_INTERAC_MED_nin);
      l_FLG_INTERAC_ALLERGY_n := sys.diutil.bool_to_int(FLG_INTERAC_ALLERGY_nin);
      l_ID_DIETARY_DRUG_n := sys.diutil.bool_to_int(ID_DIETARY_DRUG_nin);
      l_ID_MANIPULATED_n := sys.diutil.bool_to_int(ID_MANIPULATED_nin);
      l_ORDER_MODIFIED_n := sys.diutil.bool_to_int(ORDER_MODIFIED_nin);
      l_DT_ORDER_MODIFIED_n := sys.diutil.bool_to_int(DT_ORDER_MODIFIED_nin);
      l_PATIENT_NOTIFIED_n := sys.diutil.bool_to_int(PATIENT_NOTIFIED_nin);
      l_ID_PROF_LAST_CHANGE_n := sys.diutil.bool_to_int(ID_PROF_LAST_CHANGE_nin);
      l_ID_SW_LAST_CHANGE_n := sys.diutil.bool_to_int(ID_SW_LAST_CHANGE_nin);
      l_ID_INST_LAST_CHANGE_n := sys.diutil.bool_to_int(ID_INST_LAST_CHANGE_nin);
      l_ORDER_MODIFIED_ID_ISSUE_n := sys.diutil.bool_to_int(ORDER_MODIFIED_ID_ISSUE_nin);
      l_ORDER_MODIFIED_MESSAGE_n := sys.diutil.bool_to_int(ORDER_MODIFIED_MESSAGE_nin);
      l_ID_PAT_MEDICATION_LIST_n := sys.diutil.bool_to_int(ID_PAT_MEDICATION_LIST_nin);
      l_ID_OTHER_PRODUCT_n := sys.diutil.bool_to_int(ID_OTHER_PRODUCT_nin);
      l_DESC_OTHER_PRODUCT_n := sys.diutil.bool_to_int(DESC_OTHER_PRODUCT_nin);
      l_STATUS_FLG_n := sys.diutil.bool_to_int(STATUS_FLG_nin);
      l_STATUS_ICON_n := sys.diutil.bool_to_int(STATUS_ICON_nin);
      l_STATUS_MSG_n := sys.diutil.bool_to_int(STATUS_MSG_nin);
      l_STATUS_STR_n := sys.diutil.bool_to_int(STATUS_STR_nin);
      l_DISPENSE_n := sys.diutil.bool_to_int(DISPENSE_nin);
      l_UNIT_MEASURE_DISPENSE_n := sys.diutil.bool_to_int(UNIT_MEASURE_DISPENSE_nin);
      l_FLG_DOSAGE_CHECK_n := sys.diutil.bool_to_int(FLG_DOSAGE_CHECK_nin);
      l_CREATE_USER_n := sys.diutil.bool_to_int(CREATE_USER_nin);
      l_CREATE_TIME_n := sys.diutil.bool_to_int(CREATE_TIME_nin);
      l_CREATE_INSTITUTION_n := sys.diutil.bool_to_int(CREATE_INSTITUTION_nin);
      l_UPDATE_USER_n := sys.diutil.bool_to_int(UPDATE_USER_nin);
      l_UPDATE_TIME_n := sys.diutil.bool_to_int(UPDATE_TIME_nin);
      l_UPDATE_INSTITUTION_n := sys.diutil.bool_to_int(UPDATE_INSTITUTION_nin);
      l_FLG_FIRST_PRESC_n := sys.diutil.bool_to_int(FLG_FIRST_PRESC_nin);
      l_ID_PRESC_DIRECTIONS_n := sys.diutil.bool_to_int(ID_PRESC_DIRECTIONS_nin);
      l_FLG_CHRONIC_MEDICATION_n := sys.diutil.bool_to_int(FLG_CHRONIC_MEDICATION_nin);
      l_CHRONIC_NOTES_NOT_ACTIVE_n := sys.diutil.bool_to_int(CHRONIC_NOTES_NOT_ACTIVE_nin);
      l_ID_CHRONIC_MOTIVE_n := sys.diutil.bool_to_int(ID_CHRONIC_MOTIVE_nin);
      l_ID_PROF_NOT_ACTIVE_n := sys.diutil.bool_to_int(ID_PROF_NOT_ACTIVE_nin);
      l_CHRONIC_MOTIVE_DESCR_n := sys.diutil.bool_to_int(CHRONIC_MOTIVE_DESCR_nin);
      l_DT_NOT_ACTIVE_TSTZ_n := sys.diutil.bool_to_int(DT_NOT_ACTIVE_TSTZ_nin);
      l_PRECO_SNS_n := sys.diutil.bool_to_int(PRECO_SNS_nin);
      l_PRECO_UTENTE_n := sys.diutil.bool_to_int(PRECO_UTENTE_nin);
      l_PRECO_UTENTE_DIFF_n := sys.diutil.bool_to_int(PRECO_UTENTE_DIFF_nin);
      l_COMPART_n := sys.diutil.bool_to_int(COMPART_nin);
      l_ID_REGIME_n := sys.diutil.bool_to_int(ID_REGIME_nin);
      l_ID_CDR_CALL_n := sys.diutil.bool_to_int(ID_CDR_CALL_nin);



l_sql := 'UPDATE PRESCRIPTION_PHARM SET '
     || ' ID_PRESCRIPTION = decode (' || l_ID_PRESCRIPTION_n || ',0,:id_prescription_in, NVL (:id_prescription_in, ID_PRESCRIPTION)) '|| ','
     || ' ID_DRUG = decode (' || l_ID_DRUG_n || ',0,:id_drug_in, NVL (:id_drug_in, ID_DRUG)) '|| ','
     || ' QTY = decode (' || l_QTY_n || ',0,:qty_in, NVL (:qty_in, QTY)) '|| ','
     || ' GENERICO = decode (' || l_GENERICO_n || ',0,:generico_in, NVL (:generico_in, GENERICO)) '|| ','
     || ' DOSAGE = decode (' || l_DOSAGE_n || ',0,:dosage_in, NVL (:dosage_in, DOSAGE)) '|| ','
     || ' JUSTIF = decode (' || l_JUSTIF_n || ',0,:justif_in, NVL (:justif_in, JUSTIF)) '|| ','
     || ' FLG_CI = decode (' || l_FLG_CI_n || ',0,:flg_ci_in, NVL (:flg_ci_in, FLG_CI)) '|| ','
     || ' FLG_CHEAPER = decode (' || l_FLG_CHEAPER_n || ',0,:flg_cheaper_in, NVL (:flg_cheaper_in, FLG_CHEAPER)) '|| ','
     || ' FLG_JUSTIF = decode (' || l_FLG_JUSTIF_n || ',0,:flg_justif_in, NVL (:flg_justif_in, FLG_JUSTIF)) '|| ','
     || ' FLG_STATUS = decode (' || l_FLG_STATUS_n || ',0,:flg_status_in, NVL (:flg_status_in, FLG_STATUS)) '|| ','
     || ' DESC_MANIP = decode (' || l_DESC_MANIP_n || ',0,:desc_manip_in, NVL (:desc_manip_in, DESC_MANIP)) '|| ','
     || ' STOCK = decode (' || l_STOCK_n || ',0,:stock_in, NVL (:stock_in, STOCK)) '|| ','
     || ' NOTES = decode (' || l_NOTES_n || ',0,:notes_in, NVL (:notes_in, NOTES)) '|| ','
     || ' FLG_ATTENTION = decode (' || l_FLG_ATTENTION_n || ',0,:flg_attention_in, NVL (:flg_attention_in, FLG_ATTENTION)) '|| ','
     || ' FLG_ATTENTION_PRINT = decode (' || l_FLG_ATTENTION_PRINT_n || ',0,:flg_attention_print_in, NVL (:flg_attention_print_in, FLG_ATTENTION_PRINT)) '|| ','
     || ' DESC_DIETARY = decode (' || l_DESC_DIETARY_n || ',0,:desc_dietary_in, NVL (:desc_dietary_in, DESC_DIETARY)) '|| ','
     || ' QTY_MANIP = decode (' || l_QTY_MANIP_n || ',0,:qty_manip_in, NVL (:qty_manip_in, QTY_MANIP)) '|| ','
     || ' UNIT_MANIP = decode (' || l_UNIT_MANIP_n || ',0,:unit_manip_in, NVL (:unit_manip_in, UNIT_MANIP)) '|| ','
     || ' PVP = decode (' || l_PVP_n || ',0,:pvp_in, NVL (:pvp_in, PVP)) '|| ','
     || ' P_REF = decode (' || l_P_REF_n || ',0,:p_ref_in, NVL (:p_ref_in, P_REF)) '|| ','
     || ' P_REF_PEN = decode (' || l_P_REF_PEN_n || ',0,:p_ref_pen_in, NVL (:p_ref_pen_in, P_REF_PEN)) '|| ','
     || ' DT_PRESCRIPTION_PHARM_TSTZ = decode (' || l_DT_PRESCRIPTION_PHARM_TSTZ_n || ',0,:dt_prescription_pharm_tstz_in, NVL (:dt_prescription_pharm_tstz_in, DT_PRESCRIPTION_PHARM_TSTZ)) '|| ','
     || ' DT_ORDER = decode (' || l_DT_ORDER_n || ',0,:dt_order_in, NVL (:dt_order_in, DT_ORDER)) '|| ','
     || ' ID_PROF_ORDER = decode (' || l_ID_PROF_ORDER_n || ',0,:id_prof_order_in, NVL (:id_prof_order_in, ID_PROF_ORDER)) '|| ','
     || ' ID_ORDER_TYPE = decode (' || l_ID_ORDER_TYPE_n || ',0,:id_order_type_in, NVL (:id_order_type_in, ID_ORDER_TYPE)) '|| ','
     || ' FLG_CO_SIGN = decode (' || l_FLG_CO_SIGN_n || ',0,:flg_co_sign_in, NVL (:flg_co_sign_in, FLG_CO_SIGN)) '|| ','
     || ' DT_CO_SIGN = decode (' || l_DT_CO_SIGN_n || ',0,:dt_co_sign_in, NVL (:dt_co_sign_in, DT_CO_SIGN)) '|| ','
     || ' NOTES_CO_SIGN = decode (' || l_NOTES_CO_SIGN_n || ',0,:notes_co_sign_in, NVL (:notes_co_sign_in, NOTES_CO_SIGN)) '|| ','
     || ' ID_PROF_CO_SIGN = decode (' || l_ID_PROF_CO_SIGN_n || ',0,:id_prof_co_sign_in, NVL (:id_prof_co_sign_in, ID_PROF_CO_SIGN)) '|| ','
     || ' ID_UNIT_MEASURE = decode (' || l_ID_UNIT_MEASURE_n || ',0,:id_unit_measure_in, NVL (:id_unit_measure_in, ID_UNIT_MEASURE)) '|| ','
     || ' FREQUENCY = decode (' || l_FREQUENCY_n || ',0,:frequency_in, NVL (:frequency_in, FREQUENCY)) '|| ','
     || ' ID_UNIT_MEASURE_FREQ = decode (' || l_ID_UNIT_MEASURE_FREQ_n || ',0,:id_unit_measure_freq_in, NVL (:id_unit_measure_freq_in, ID_UNIT_MEASURE_FREQ)) '|| ','
     || ' DURATION = decode (' || l_DURATION_n || ',0,:duration_in, NVL (:duration_in, DURATION)) '|| ','
     || ' ID_UNIT_MEASURE_DUR = decode (' || l_ID_UNIT_MEASURE_DUR_n || ',0,:id_unit_measure_dur_in, NVL (:id_unit_measure_dur_in, ID_UNIT_MEASURE_DUR)) '|| ','
     || ' DT_START_PRESC_TSTZ = decode (' || l_DT_START_PRESC_TSTZ_n || ',0,:dt_start_presc_tstz_in, NVL (:dt_start_presc_tstz_in, DT_START_PRESC_TSTZ)) '|| ','
     || ' DT_END_PRESC_TSTZ = decode (' || l_DT_END_PRESC_TSTZ_n || ',0,:dt_end_presc_tstz_in, NVL (:dt_end_presc_tstz_in, DT_END_PRESC_TSTZ)) '|| ','
     || ' REFILL = decode (' || l_REFILL_n || ',0,:refill_in, NVL (:refill_in, REFILL)) '|| ','
     || ' EMB_ID = decode (' || l_EMB_ID_n || ',0,:emb_id_in, NVL (:emb_id_in, EMB_ID)) '|| ','
     || ' QTY_INST = decode (' || l_QTY_INST_n || ',0,:qty_inst_in, NVL (:qty_inst_in, QTY_INST)) '|| ','
     || ' UNIT_MEASURE_INST = decode (' || l_UNIT_MEASURE_INST_n || ',0,:unit_measure_inst_in, NVL (:unit_measure_inst_in, UNIT_MEASURE_INST)) '|| ','
     || ' FIRST_DOSE = decode (' || l_FIRST_DOSE_n || ',0,:first_dose_in, NVL (:first_dose_in, FIRST_DOSE)) '|| ','
     || ' PACKAGE_NUMBER = decode (' || l_PACKAGE_NUMBER_n || ',0,:package_number_in, NVL (:package_number_in, PACKAGE_NUMBER)) '|| ','
     || ' DT_EXPIRE_TSTZ = decode (' || l_DT_EXPIRE_TSTZ_n || ',0,:dt_expire_tstz_in, NVL (:dt_expire_tstz_in, DT_EXPIRE_TSTZ)) '|| ','
     || ' VERS = decode (' || l_VERS_n || ',0,:vers_in, NVL (:vers_in, VERS)) '|| ','
     || ' ROUTE_ID = decode (' || l_ROUTE_ID_n || ',0,:route_id_in, NVL (:route_id_in, ROUTE_ID)) '|| ','
     || ' REGULATION_ID = decode (' || l_REGULATION_ID_n || ',0,:regulation_id_in, NVL (:regulation_id_in, REGULATION_ID)) '|| ','
     || ' FLG_INTERAC_MED = decode (' || l_FLG_INTERAC_MED_n || ',0,:flg_interac_med_in, NVL (:flg_interac_med_in, FLG_INTERAC_MED)) '|| ','
     || ' FLG_INTERAC_ALLERGY = decode (' || l_FLG_INTERAC_ALLERGY_n || ',0,:flg_interac_allergy_in, NVL (:flg_interac_allergy_in, FLG_INTERAC_ALLERGY)) '|| ','
     || ' ID_DIETARY_DRUG = decode (' || l_ID_DIETARY_DRUG_n || ',0,:id_dietary_drug_in, NVL (:id_dietary_drug_in, ID_DIETARY_DRUG)) '|| ','
     || ' ID_MANIPULATED = decode (' || l_ID_MANIPULATED_n || ',0,:id_manipulated_in, NVL (:id_manipulated_in, ID_MANIPULATED)) '|| ','
     || ' ORDER_MODIFIED = decode (' || l_ORDER_MODIFIED_n || ',0,:order_modified_in, NVL (:order_modified_in, ORDER_MODIFIED)) '|| ','
     || ' DT_ORDER_MODIFIED = decode (' || l_DT_ORDER_MODIFIED_n || ',0,:dt_order_modified_in, NVL (:dt_order_modified_in, DT_ORDER_MODIFIED)) '|| ','
     || ' PATIENT_NOTIFIED = decode (' || l_PATIENT_NOTIFIED_n || ',0,:patient_notified_in, NVL (:patient_notified_in, PATIENT_NOTIFIED)) '|| ','
     || ' ID_PROF_LAST_CHANGE = decode (' || l_ID_PROF_LAST_CHANGE_n || ',0,:id_prof_last_change_in, NVL (:id_prof_last_change_in, ID_PROF_LAST_CHANGE)) '|| ','
     || ' ID_SW_LAST_CHANGE = decode (' || l_ID_SW_LAST_CHANGE_n || ',0,:id_sw_last_change_in, NVL (:id_sw_last_change_in, ID_SW_LAST_CHANGE)) '|| ','
     || ' ID_INST_LAST_CHANGE = decode (' || l_ID_INST_LAST_CHANGE_n || ',0,:id_inst_last_change_in, NVL (:id_inst_last_change_in, ID_INST_LAST_CHANGE)) '|| ','
     || ' ORDER_MODIFIED_ID_ISSUE = decode (' || l_ORDER_MODIFIED_ID_ISSUE_n || ',0,:order_modified_id_issue_in, NVL (:order_modified_id_issue_in, ORDER_MODIFIED_ID_ISSUE)) '|| ','
     || ' ORDER_MODIFIED_MESSAGE = decode (' || l_ORDER_MODIFIED_MESSAGE_n || ',0,:order_modified_message_in, NVL (:order_modified_message_in, ORDER_MODIFIED_MESSAGE)) '|| ','
     || ' ID_PAT_MEDICATION_LIST = decode (' || l_ID_PAT_MEDICATION_LIST_n || ',0,:id_pat_medication_list_in, NVL (:id_pat_medication_list_in, ID_PAT_MEDICATION_LIST)) '|| ','
     || ' ID_OTHER_PRODUCT = decode (' || l_ID_OTHER_PRODUCT_n || ',0,:id_other_product_in, NVL (:id_other_product_in, ID_OTHER_PRODUCT)) '|| ','
     || ' DESC_OTHER_PRODUCT = decode (' || l_DESC_OTHER_PRODUCT_n || ',0,:desc_other_product_in, NVL (:desc_other_product_in, DESC_OTHER_PRODUCT)) '|| ','
     || ' STATUS_FLG = decode (' || l_STATUS_FLG_n || ',0,:status_flg_in, NVL (:status_flg_in, STATUS_FLG)) '|| ','
     || ' STATUS_ICON = decode (' || l_STATUS_ICON_n || ',0,:status_icon_in, NVL (:status_icon_in, STATUS_ICON)) '|| ','
     || ' STATUS_MSG = decode (' || l_STATUS_MSG_n || ',0,:status_msg_in, NVL (:status_msg_in, STATUS_MSG)) '|| ','
     || ' STATUS_STR = decode (' || l_STATUS_STR_n || ',0,:status_str_in, NVL (:status_str_in, STATUS_STR)) '|| ','
     || ' DISPENSE = decode (' || l_DISPENSE_n || ',0,:dispense_in, NVL (:dispense_in, DISPENSE)) '|| ','
     || ' UNIT_MEASURE_DISPENSE = decode (' || l_UNIT_MEASURE_DISPENSE_n || ',0,:unit_measure_dispense_in, NVL (:unit_measure_dispense_in, UNIT_MEASURE_DISPENSE)) '|| ','
     || ' FLG_DOSAGE_CHECK = decode (' || l_FLG_DOSAGE_CHECK_n || ',0,:flg_dosage_check_in, NVL (:flg_dosage_check_in, FLG_DOSAGE_CHECK)) '|| ','
     || ' CREATE_USER = decode (' || l_CREATE_USER_n || ',0,:create_user_in, NVL (:create_user_in, CREATE_USER)) '|| ','
     || ' CREATE_TIME = decode (' || l_CREATE_TIME_n || ',0,:create_time_in, NVL (:create_time_in, CREATE_TIME)) '|| ','
     || ' CREATE_INSTITUTION = decode (' || l_CREATE_INSTITUTION_n || ',0,:create_institution_in, NVL (:create_institution_in, CREATE_INSTITUTION)) '|| ','
     || ' UPDATE_USER = decode (' || l_UPDATE_USER_n || ',0,:update_user_in, NVL (:update_user_in, UPDATE_USER)) '|| ','
     || ' UPDATE_TIME = decode (' || l_UPDATE_TIME_n || ',0,:update_time_in, NVL (:update_time_in, UPDATE_TIME)) '|| ','
     || ' UPDATE_INSTITUTION = decode (' || l_UPDATE_INSTITUTION_n || ',0,:update_institution_in, NVL (:update_institution_in, UPDATE_INSTITUTION)) '|| ','
     || ' FLG_FIRST_PRESC = decode (' || l_FLG_FIRST_PRESC_n || ',0,:flg_first_presc_in, NVL (:flg_first_presc_in, FLG_FIRST_PRESC)) '|| ','
     || ' ID_PRESC_DIRECTIONS = decode (' || l_ID_PRESC_DIRECTIONS_n || ',0,:id_presc_directions_in, NVL (:id_presc_directions_in, ID_PRESC_DIRECTIONS)) '|| ','
     || ' FLG_CHRONIC_MEDICATION = decode (' || l_FLG_CHRONIC_MEDICATION_n || ',0,:flg_chronic_medication_in, NVL (:flg_chronic_medication_in, FLG_CHRONIC_MEDICATION)) '|| ','
     || ' CHRONIC_NOTES_NOT_ACTIVE = decode (' || l_CHRONIC_NOTES_NOT_ACTIVE_n || ',0,:chronic_notes_not_active_in, NVL (:chronic_notes_not_active_in, CHRONIC_NOTES_NOT_ACTIVE)) '|| ','
     || ' ID_CHRONIC_MOTIVE = decode (' || l_ID_CHRONIC_MOTIVE_n || ',0,:id_chronic_motive_in, NVL (:id_chronic_motive_in, ID_CHRONIC_MOTIVE)) '|| ','
     || ' ID_PROF_NOT_ACTIVE = decode (' || l_ID_PROF_NOT_ACTIVE_n || ',0,:id_prof_not_active_in, NVL (:id_prof_not_active_in, ID_PROF_NOT_ACTIVE)) '|| ','
     || ' CHRONIC_MOTIVE_DESCR = decode (' || l_CHRONIC_MOTIVE_DESCR_n || ',0,:chronic_motive_descr_in, NVL (:chronic_motive_descr_in, CHRONIC_MOTIVE_DESCR)) '|| ','
     || ' DT_NOT_ACTIVE_TSTZ = decode (' || l_DT_NOT_ACTIVE_TSTZ_n || ',0,:dt_not_active_tstz_in, NVL (:dt_not_active_tstz_in, DT_NOT_ACTIVE_TSTZ)) '|| ','
     || ' PRECO_SNS = decode (' || l_PRECO_SNS_n || ',0,:preco_sns_in, NVL (:preco_sns_in, PRECO_SNS)) '|| ','
     || ' PRECO_UTENTE = decode (' || l_PRECO_UTENTE_n || ',0,:preco_utente_in, NVL (:preco_utente_in, PRECO_UTENTE)) '|| ','
     || ' PRECO_UTENTE_DIFF = decode (' || l_PRECO_UTENTE_DIFF_n || ',0,:preco_utente_diff_in, NVL (:preco_utente_diff_in, PRECO_UTENTE_DIFF)) '|| ','
     || ' COMPART = decode (' || l_COMPART_n || ',0,:compart_in, NVL (:compart_in, COMPART)) '|| ','
     || ' ID_REGIME = decode (' || l_ID_REGIME_n || ',0,:id_regime_in, NVL (:id_regime_in, ID_REGIME)) '|| ','
     || ' ID_CDR_CALL = decode (' || l_ID_CDR_CALL_n || ',0,:id_cdr_call_in, NVL (:id_cdr_call_in, ID_CDR_CALL)) '
      || ' where ' || nvl(where_in,'(1=1)')
      || ' RETURNING ROWID BULK COLLECT INTO :l_rows_out';




execute immediate 'BEGIN ' || l_sql || '; END;' using in
     id_prescription_in,
     id_drug_in,
     qty_in,
     generico_in,
     dosage_in,
     justif_in,
     flg_ci_in,
     flg_cheaper_in,
     flg_justif_in,
     flg_status_in,
     desc_manip_in,
     stock_in,
     notes_in,
     flg_attention_in,
     flg_attention_print_in,
     desc_dietary_in,
     qty_manip_in,
     unit_manip_in,
     pvp_in,
     p_ref_in,
     p_ref_pen_in,
     dt_prescription_pharm_tstz_in,
     dt_order_in,
     id_prof_order_in,
     id_order_type_in,
     flg_co_sign_in,
     dt_co_sign_in,
     notes_co_sign_in,
     id_prof_co_sign_in,
     id_unit_measure_in,
     frequency_in,
     id_unit_measure_freq_in,
     duration_in,
     id_unit_measure_dur_in,
     dt_start_presc_tstz_in,
     dt_end_presc_tstz_in,
     refill_in,
     emb_id_in,
     qty_inst_in,
     unit_measure_inst_in,
     first_dose_in,
     package_number_in,
     dt_expire_tstz_in,
     vers_in,
     route_id_in,
     regulation_id_in,
     flg_interac_med_in,
     flg_interac_allergy_in,
     id_dietary_drug_in,
     id_manipulated_in,
     order_modified_in,
     dt_order_modified_in,
     patient_notified_in,
     id_prof_last_change_in,
     id_sw_last_change_in,
     id_inst_last_change_in,
     order_modified_id_issue_in,
     order_modified_message_in,
     id_pat_medication_list_in,
     id_other_product_in,
     desc_other_product_in,
     status_flg_in,
     status_icon_in,
     status_msg_in,
     status_str_in,
     dispense_in,
     unit_measure_dispense_in,
     flg_dosage_check_in,
     create_user_in,
     create_time_in,
     create_institution_in,
     update_user_in,
     update_time_in,
     update_institution_in,
     flg_first_presc_in,
     id_presc_directions_in,
     flg_chronic_medication_in,
     chronic_notes_not_active_in,
     id_chronic_motive_in,
     id_prof_not_active_in,
     chronic_motive_descr_in,
     dt_not_active_tstz_in,
     preco_sns_in,
     preco_utente_in,
     preco_utente_diff_in,
     compart_in,
     id_regime_in,
     id_cdr_call_in,
    OUT l_rows_out;

if(rows_out is null)
then
rows_out := table_varchar();
end if;

rows_out :=  rows_out MULTISET UNION DISTINCT l_rows_out;

   EXCEPTION
      WHEN DUP_VAL_ON_INDEX
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_err_instance_id PLS_INTEGER;
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF FALSE THEN NULL; -- Placeholder in case no unique indexes
           ELSE
              pk_alert_exceptions.raise_error (
                    error_name_in => 'DUPLICATE-VALUE'
                    ,name1_in => 'OWNER'
                    ,value1_in => l_owner
                    ,name2_in => 'CONSTRAINT_NAME'
                    ,value2_in => l_name
                    ,name3_in => 'TABLE_NAME'
                    ,value3_in => 'PRESCRIPTION_PHARM');
           END IF;
        END;
        END IF;
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           IF l_name = 'PP_CANCEL_REASON_CM_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_CHRONIC_MOTIVE'
               , value_in => id_chronic_motive_in);
           END IF;
           IF l_name = 'PP_CC_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_CDR_CALL'
               , value_in => id_cdr_call_in);
           END IF;
           IF l_name = 'PP_ID_REGIME_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_REGIME'
               , value_in => id_regime_in);
           END IF;
           IF l_name = 'PP_IPML_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PAT_MEDICATION_LIST'
               , value_in => id_pat_medication_list_in);
           END IF;
           IF l_name = 'PP_MANIP_IV_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_MANIPULATED'
               , value_in => id_manipulated_in);
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'VERS'
               , value_in => vers_in);
           END IF;
           IF l_name = 'PP_MED_EI_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'EMB_ID'
               , value_in => emb_id_in);
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'VERS'
               , value_in => vers_in);
           END IF;
           IF l_name = 'PPN_DRUG_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_DRUG'
               , value_in => id_drug_in);
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'VERS'
               , value_in => vers_in);
           END IF;
           IF l_name = 'PPN_PRN_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PRESCRIPTION'
               , value_in => id_prescription_in);
           END IF;
           IF l_name = 'PP_PDIR_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PRESC_DIRECTIONS'
               , value_in => id_presc_directions_in);
           END IF;
           IF l_name = 'PP_PH_RI_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ROUTE_ID'
               , value_in => route_id_in);
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'VERS'
               , value_in => vers_in);
           END IF;
           IF l_name = 'PP_PR_DI_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'REGULATION_ID'
               , value_in => regulation_id_in);
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'VERS'
               , value_in => vers_in);
           END IF;
           IF l_name = 'PP_PROF_CM_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'ID_PROF_NOT_ACTIVE'
               , value_in => id_prof_not_active_in);
           END IF;
           IF l_name = 'PP_UME_DISP_FK'
           THEN
              -- Add a context value for each column
              pk_alert_exceptions.add_context (
                 err_instance_id_in => l_id
               , name_in => 'UNIT_MEASURE_DISPENSE'
               , value_in => unit_measure_dispense_in);
           END IF;
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
      WHEN e_null_column_value
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           v_errm VARCHAR2(2000) := DBMS_UTILITY.FORMAT_ERROR_STACK;
           dot1loc INTEGER;
           dot2loc INTEGER;
           parenloc INTEGER;
           c_owner ALL_CONSTRAINTS.OWNER%TYPE;
           c_tabname ALL_TABLES.TABLE_NAME%TYPE;
           c_colname ALL_TAB_COLUMNS.COLUMN_NAME%TYPE;
        BEGIN
           dot1loc := INSTR (v_errm, '.', 1, 1);
           dot2loc := INSTR (v_errm, '.', 1, 2);
           parenloc := INSTR (v_errm, '(');
           c_owner :=SUBSTR (v_errm, parenloc+1, dot1loc-parenloc-1);
           c_tabname := SUBSTR (v_errm, dot1loc+1, dot2loc-dot1loc-1);
           c_colname := SUBSTR (v_errm, dot2loc+1, INSTR (v_errm,')')-dot2loc-1);

           pk_alert_exceptions.raise_error (
                error_name_in => 'COLUMN-CANNOT-BE-NULL'
               ,name1_in => 'OWNER'
               ,value1_in => c_owner
               ,name2_in => 'TABLE_NAME'
               ,value2_in => c_tabname
               ,name3_in => 'COLUMN_NAME'
               ,value3_in => c_colname);
        END;
        END IF;
   END upd;





PROCEDURE upd (
      id_prescription_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION%TYPE DEFAULT NULL,
      ID_PRESCRIPTION_nin IN BOOLEAN := TRUE,
      id_drug_in IN PRESCRIPTION_PHARM.ID_DRUG%TYPE DEFAULT NULL,
      ID_DRUG_nin IN BOOLEAN := TRUE,
      qty_in IN PRESCRIPTION_PHARM.QTY%TYPE DEFAULT NULL,
      QTY_nin IN BOOLEAN := TRUE,
      generico_in IN PRESCRIPTION_PHARM.GENERICO%TYPE DEFAULT NULL,
      GENERICO_nin IN BOOLEAN := TRUE,
      dosage_in IN PRESCRIPTION_PHARM.DOSAGE%TYPE DEFAULT NULL,
      DOSAGE_nin IN BOOLEAN := TRUE,
      justif_in IN PRESCRIPTION_PHARM.JUSTIF%TYPE DEFAULT NULL,
      JUSTIF_nin IN BOOLEAN := TRUE,
      flg_ci_in IN PRESCRIPTION_PHARM.FLG_CI%TYPE DEFAULT NULL,
      FLG_CI_nin IN BOOLEAN := TRUE,
      flg_cheaper_in IN PRESCRIPTION_PHARM.FLG_CHEAPER%TYPE DEFAULT NULL,
      FLG_CHEAPER_nin IN BOOLEAN := TRUE,
      flg_justif_in IN PRESCRIPTION_PHARM.FLG_JUSTIF%TYPE DEFAULT NULL,
      FLG_JUSTIF_nin IN BOOLEAN := TRUE,
      flg_status_in IN PRESCRIPTION_PHARM.FLG_STATUS%TYPE DEFAULT NULL,
      FLG_STATUS_nin IN BOOLEAN := TRUE,
      desc_manip_in IN PRESCRIPTION_PHARM.DESC_MANIP%TYPE DEFAULT NULL,
      DESC_MANIP_nin IN BOOLEAN := TRUE,
      stock_in IN PRESCRIPTION_PHARM.STOCK%TYPE DEFAULT NULL,
      STOCK_nin IN BOOLEAN := TRUE,
      notes_in IN PRESCRIPTION_PHARM.NOTES%TYPE DEFAULT NULL,
      NOTES_nin IN BOOLEAN := TRUE,
      flg_attention_in IN PRESCRIPTION_PHARM.FLG_ATTENTION%TYPE DEFAULT NULL,
      FLG_ATTENTION_nin IN BOOLEAN := TRUE,
      flg_attention_print_in IN PRESCRIPTION_PHARM.FLG_ATTENTION_PRINT%TYPE DEFAULT NULL,
      FLG_ATTENTION_PRINT_nin IN BOOLEAN := TRUE,
      desc_dietary_in IN PRESCRIPTION_PHARM.DESC_DIETARY%TYPE DEFAULT NULL,
      DESC_DIETARY_nin IN BOOLEAN := TRUE,
      qty_manip_in IN PRESCRIPTION_PHARM.QTY_MANIP%TYPE DEFAULT NULL,
      QTY_MANIP_nin IN BOOLEAN := TRUE,
      unit_manip_in IN PRESCRIPTION_PHARM.UNIT_MANIP%TYPE DEFAULT NULL,
      UNIT_MANIP_nin IN BOOLEAN := TRUE,
      pvp_in IN PRESCRIPTION_PHARM.PVP%TYPE DEFAULT NULL,
      PVP_nin IN BOOLEAN := TRUE,
      p_ref_in IN PRESCRIPTION_PHARM.P_REF%TYPE DEFAULT NULL,
      P_REF_nin IN BOOLEAN := TRUE,
      p_ref_pen_in IN PRESCRIPTION_PHARM.P_REF_PEN%TYPE DEFAULT NULL,
      P_REF_PEN_nin IN BOOLEAN := TRUE,
      dt_prescription_pharm_tstz_in IN PRESCRIPTION_PHARM.DT_PRESCRIPTION_PHARM_TSTZ%TYPE DEFAULT NULL,
      DT_PRESCRIPTION_PHARM_TSTZ_nin IN BOOLEAN := TRUE,
      dt_order_in IN PRESCRIPTION_PHARM.DT_ORDER%TYPE DEFAULT NULL,
      DT_ORDER_nin IN BOOLEAN := TRUE,
      id_prof_order_in IN PRESCRIPTION_PHARM.ID_PROF_ORDER%TYPE DEFAULT NULL,
      ID_PROF_ORDER_nin IN BOOLEAN := TRUE,
      id_order_type_in IN PRESCRIPTION_PHARM.ID_ORDER_TYPE%TYPE DEFAULT NULL,
      ID_ORDER_TYPE_nin IN BOOLEAN := TRUE,
      flg_co_sign_in IN PRESCRIPTION_PHARM.FLG_CO_SIGN%TYPE DEFAULT NULL,
      FLG_CO_SIGN_nin IN BOOLEAN := TRUE,
      dt_co_sign_in IN PRESCRIPTION_PHARM.DT_CO_SIGN%TYPE DEFAULT NULL,
      DT_CO_SIGN_nin IN BOOLEAN := TRUE,
      notes_co_sign_in IN PRESCRIPTION_PHARM.NOTES_CO_SIGN%TYPE DEFAULT NULL,
      NOTES_CO_SIGN_nin IN BOOLEAN := TRUE,
      id_prof_co_sign_in IN PRESCRIPTION_PHARM.ID_PROF_CO_SIGN%TYPE DEFAULT NULL,
      ID_PROF_CO_SIGN_nin IN BOOLEAN := TRUE,
      id_unit_measure_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE%TYPE DEFAULT NULL,
      ID_UNIT_MEASURE_nin IN BOOLEAN := TRUE,
      frequency_in IN PRESCRIPTION_PHARM.FREQUENCY%TYPE DEFAULT NULL,
      FREQUENCY_nin IN BOOLEAN := TRUE,
      id_unit_measure_freq_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_FREQ%TYPE DEFAULT NULL,
      ID_UNIT_MEASURE_FREQ_nin IN BOOLEAN := TRUE,
      duration_in IN PRESCRIPTION_PHARM.DURATION%TYPE DEFAULT NULL,
      DURATION_nin IN BOOLEAN := TRUE,
      id_unit_measure_dur_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_DUR%TYPE DEFAULT NULL,
      ID_UNIT_MEASURE_DUR_nin IN BOOLEAN := TRUE,
      dt_start_presc_tstz_in IN PRESCRIPTION_PHARM.DT_START_PRESC_TSTZ%TYPE DEFAULT NULL,
      DT_START_PRESC_TSTZ_nin IN BOOLEAN := TRUE,
      dt_end_presc_tstz_in IN PRESCRIPTION_PHARM.DT_END_PRESC_TSTZ%TYPE DEFAULT NULL,
      DT_END_PRESC_TSTZ_nin IN BOOLEAN := TRUE,
      refill_in IN PRESCRIPTION_PHARM.REFILL%TYPE DEFAULT NULL,
      REFILL_nin IN BOOLEAN := TRUE,
      emb_id_in IN PRESCRIPTION_PHARM.EMB_ID%TYPE DEFAULT NULL,
      EMB_ID_nin IN BOOLEAN := TRUE,
      qty_inst_in IN PRESCRIPTION_PHARM.QTY_INST%TYPE DEFAULT NULL,
      QTY_INST_nin IN BOOLEAN := TRUE,
      unit_measure_inst_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_INST%TYPE DEFAULT NULL,
      UNIT_MEASURE_INST_nin IN BOOLEAN := TRUE,
      first_dose_in IN PRESCRIPTION_PHARM.FIRST_DOSE%TYPE DEFAULT NULL,
      FIRST_DOSE_nin IN BOOLEAN := TRUE,
      package_number_in IN PRESCRIPTION_PHARM.PACKAGE_NUMBER%TYPE DEFAULT NULL,
      PACKAGE_NUMBER_nin IN BOOLEAN := TRUE,
      dt_expire_tstz_in IN PRESCRIPTION_PHARM.DT_EXPIRE_TSTZ%TYPE DEFAULT NULL,
      DT_EXPIRE_TSTZ_nin IN BOOLEAN := TRUE,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE DEFAULT NULL,
      VERS_nin IN BOOLEAN := TRUE,
      route_id_in IN PRESCRIPTION_PHARM.ROUTE_ID%TYPE DEFAULT NULL,
      ROUTE_ID_nin IN BOOLEAN := TRUE,
      regulation_id_in IN PRESCRIPTION_PHARM.REGULATION_ID%TYPE DEFAULT NULL,
      REGULATION_ID_nin IN BOOLEAN := TRUE,
      flg_interac_med_in IN PRESCRIPTION_PHARM.FLG_INTERAC_MED%TYPE DEFAULT NULL,
      FLG_INTERAC_MED_nin IN BOOLEAN := TRUE,
      flg_interac_allergy_in IN PRESCRIPTION_PHARM.FLG_INTERAC_ALLERGY%TYPE DEFAULT NULL,
      FLG_INTERAC_ALLERGY_nin IN BOOLEAN := TRUE,
      id_dietary_drug_in IN PRESCRIPTION_PHARM.ID_DIETARY_DRUG%TYPE DEFAULT NULL,
      ID_DIETARY_DRUG_nin IN BOOLEAN := TRUE,
      id_manipulated_in IN PRESCRIPTION_PHARM.ID_MANIPULATED%TYPE DEFAULT NULL,
      ID_MANIPULATED_nin IN BOOLEAN := TRUE,
      order_modified_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED%TYPE DEFAULT NULL,
      ORDER_MODIFIED_nin IN BOOLEAN := TRUE,
      dt_order_modified_in IN PRESCRIPTION_PHARM.DT_ORDER_MODIFIED%TYPE DEFAULT NULL,
      DT_ORDER_MODIFIED_nin IN BOOLEAN := TRUE,
      patient_notified_in IN PRESCRIPTION_PHARM.PATIENT_NOTIFIED%TYPE DEFAULT NULL,
      PATIENT_NOTIFIED_nin IN BOOLEAN := TRUE,
      id_prof_last_change_in IN PRESCRIPTION_PHARM.ID_PROF_LAST_CHANGE%TYPE DEFAULT NULL,
      ID_PROF_LAST_CHANGE_nin IN BOOLEAN := TRUE,
      id_sw_last_change_in IN PRESCRIPTION_PHARM.ID_SW_LAST_CHANGE%TYPE DEFAULT NULL,
      ID_SW_LAST_CHANGE_nin IN BOOLEAN := TRUE,
      id_inst_last_change_in IN PRESCRIPTION_PHARM.ID_INST_LAST_CHANGE%TYPE DEFAULT NULL,
      ID_INST_LAST_CHANGE_nin IN BOOLEAN := TRUE,
      order_modified_id_issue_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_ID_ISSUE%TYPE DEFAULT NULL,
      ORDER_MODIFIED_ID_ISSUE_nin IN BOOLEAN := TRUE,
      order_modified_message_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_MESSAGE%TYPE DEFAULT NULL,
      ORDER_MODIFIED_MESSAGE_nin IN BOOLEAN := TRUE,
      id_pat_medication_list_in IN PRESCRIPTION_PHARM.ID_PAT_MEDICATION_LIST%TYPE DEFAULT NULL,
      ID_PAT_MEDICATION_LIST_nin IN BOOLEAN := TRUE,
      id_other_product_in IN PRESCRIPTION_PHARM.ID_OTHER_PRODUCT%TYPE DEFAULT NULL,
      ID_OTHER_PRODUCT_nin IN BOOLEAN := TRUE,
      desc_other_product_in IN PRESCRIPTION_PHARM.DESC_OTHER_PRODUCT%TYPE DEFAULT NULL,
      DESC_OTHER_PRODUCT_nin IN BOOLEAN := TRUE,
      status_flg_in IN PRESCRIPTION_PHARM.STATUS_FLG%TYPE DEFAULT NULL,
      STATUS_FLG_nin IN BOOLEAN := TRUE,
      status_icon_in IN PRESCRIPTION_PHARM.STATUS_ICON%TYPE DEFAULT NULL,
      STATUS_ICON_nin IN BOOLEAN := TRUE,
      status_msg_in IN PRESCRIPTION_PHARM.STATUS_MSG%TYPE DEFAULT NULL,
      STATUS_MSG_nin IN BOOLEAN := TRUE,
      status_str_in IN PRESCRIPTION_PHARM.STATUS_STR%TYPE DEFAULT NULL,
      STATUS_STR_nin IN BOOLEAN := TRUE,
      dispense_in IN PRESCRIPTION_PHARM.DISPENSE%TYPE DEFAULT NULL,
      DISPENSE_nin IN BOOLEAN := TRUE,
      unit_measure_dispense_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_DISPENSE%TYPE DEFAULT NULL,
      UNIT_MEASURE_DISPENSE_nin IN BOOLEAN := TRUE,
      flg_dosage_check_in IN PRESCRIPTION_PHARM.FLG_DOSAGE_CHECK%TYPE DEFAULT NULL,
      FLG_DOSAGE_CHECK_nin IN BOOLEAN := TRUE,
      create_user_in IN PRESCRIPTION_PHARM.CREATE_USER%TYPE DEFAULT NULL,
      CREATE_USER_nin IN BOOLEAN := TRUE,
      create_time_in IN PRESCRIPTION_PHARM.CREATE_TIME%TYPE DEFAULT NULL,
      CREATE_TIME_nin IN BOOLEAN := TRUE,
      create_institution_in IN PRESCRIPTION_PHARM.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      CREATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      update_user_in IN PRESCRIPTION_PHARM.UPDATE_USER%TYPE DEFAULT NULL,
      UPDATE_USER_nin IN BOOLEAN := TRUE,
      update_time_in IN PRESCRIPTION_PHARM.UPDATE_TIME%TYPE DEFAULT NULL,
      UPDATE_TIME_nin IN BOOLEAN := TRUE,
      update_institution_in IN PRESCRIPTION_PHARM.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      UPDATE_INSTITUTION_nin IN BOOLEAN := TRUE,
      flg_first_presc_in IN PRESCRIPTION_PHARM.FLG_FIRST_PRESC%TYPE DEFAULT NULL,
      FLG_FIRST_PRESC_nin IN BOOLEAN := TRUE,
      id_presc_directions_in IN PRESCRIPTION_PHARM.ID_PRESC_DIRECTIONS%TYPE DEFAULT NULL,
      ID_PRESC_DIRECTIONS_nin IN BOOLEAN := TRUE,
      flg_chronic_medication_in IN PRESCRIPTION_PHARM.FLG_CHRONIC_MEDICATION%TYPE DEFAULT NULL,
      FLG_CHRONIC_MEDICATION_nin IN BOOLEAN := TRUE,
      chronic_notes_not_active_in IN PRESCRIPTION_PHARM.CHRONIC_NOTES_NOT_ACTIVE%TYPE DEFAULT NULL,
      CHRONIC_NOTES_NOT_ACTIVE_nin IN BOOLEAN := TRUE,
      id_chronic_motive_in IN PRESCRIPTION_PHARM.ID_CHRONIC_MOTIVE%TYPE DEFAULT NULL,
      ID_CHRONIC_MOTIVE_nin IN BOOLEAN := TRUE,
      id_prof_not_active_in IN PRESCRIPTION_PHARM.ID_PROF_NOT_ACTIVE%TYPE DEFAULT NULL,
      ID_PROF_NOT_ACTIVE_nin IN BOOLEAN := TRUE,
      chronic_motive_descr_in IN PRESCRIPTION_PHARM.CHRONIC_MOTIVE_DESCR%TYPE DEFAULT NULL,
      CHRONIC_MOTIVE_DESCR_nin IN BOOLEAN := TRUE,
      dt_not_active_tstz_in IN PRESCRIPTION_PHARM.DT_NOT_ACTIVE_TSTZ%TYPE DEFAULT NULL,
      DT_NOT_ACTIVE_TSTZ_nin IN BOOLEAN := TRUE,
      preco_sns_in IN PRESCRIPTION_PHARM.PRECO_SNS%TYPE DEFAULT NULL,
      PRECO_SNS_nin IN BOOLEAN := TRUE,
      preco_utente_in IN PRESCRIPTION_PHARM.PRECO_UTENTE%TYPE DEFAULT NULL,
      PRECO_UTENTE_nin IN BOOLEAN := TRUE,
      preco_utente_diff_in IN PRESCRIPTION_PHARM.PRECO_UTENTE_DIFF%TYPE DEFAULT NULL,
      PRECO_UTENTE_DIFF_nin IN BOOLEAN := TRUE,
      compart_in IN PRESCRIPTION_PHARM.COMPART%TYPE DEFAULT NULL,
      COMPART_nin IN BOOLEAN := TRUE,
      id_regime_in IN PRESCRIPTION_PHARM.ID_REGIME%TYPE DEFAULT NULL,
      ID_REGIME_nin IN BOOLEAN := TRUE,
      id_cdr_call_in IN PRESCRIPTION_PHARM.ID_CDR_CALL%TYPE DEFAULT NULL,
      ID_CDR_CALL_nin IN BOOLEAN := TRUE,
    where_in varchar2 DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
      upd (
      id_prescription_in => id_prescription_in,
      ID_PRESCRIPTION_nin => ID_PRESCRIPTION_nin,
      id_drug_in => id_drug_in,
      ID_DRUG_nin => ID_DRUG_nin,
      qty_in => qty_in,
      QTY_nin => QTY_nin,
      generico_in => generico_in,
      GENERICO_nin => GENERICO_nin,
      dosage_in => dosage_in,
      DOSAGE_nin => DOSAGE_nin,
      justif_in => justif_in,
      JUSTIF_nin => JUSTIF_nin,
      flg_ci_in => flg_ci_in,
      FLG_CI_nin => FLG_CI_nin,
      flg_cheaper_in => flg_cheaper_in,
      FLG_CHEAPER_nin => FLG_CHEAPER_nin,
      flg_justif_in => flg_justif_in,
      FLG_JUSTIF_nin => FLG_JUSTIF_nin,
      flg_status_in => flg_status_in,
      FLG_STATUS_nin => FLG_STATUS_nin,
      desc_manip_in => desc_manip_in,
      DESC_MANIP_nin => DESC_MANIP_nin,
      stock_in => stock_in,
      STOCK_nin => STOCK_nin,
      notes_in => notes_in,
      NOTES_nin => NOTES_nin,
      flg_attention_in => flg_attention_in,
      FLG_ATTENTION_nin => FLG_ATTENTION_nin,
      flg_attention_print_in => flg_attention_print_in,
      FLG_ATTENTION_PRINT_nin => FLG_ATTENTION_PRINT_nin,
      desc_dietary_in => desc_dietary_in,
      DESC_DIETARY_nin => DESC_DIETARY_nin,
      qty_manip_in => qty_manip_in,
      QTY_MANIP_nin => QTY_MANIP_nin,
      unit_manip_in => unit_manip_in,
      UNIT_MANIP_nin => UNIT_MANIP_nin,
      pvp_in => pvp_in,
      PVP_nin => PVP_nin,
      p_ref_in => p_ref_in,
      P_REF_nin => P_REF_nin,
      p_ref_pen_in => p_ref_pen_in,
      P_REF_PEN_nin => P_REF_PEN_nin,
      dt_prescription_pharm_tstz_in => dt_prescription_pharm_tstz_in,
      DT_PRESCRIPTION_PHARM_TSTZ_nin => DT_PRESCRIPTION_PHARM_TSTZ_nin,
      dt_order_in => dt_order_in,
      DT_ORDER_nin => DT_ORDER_nin,
      id_prof_order_in => id_prof_order_in,
      ID_PROF_ORDER_nin => ID_PROF_ORDER_nin,
      id_order_type_in => id_order_type_in,
      ID_ORDER_TYPE_nin => ID_ORDER_TYPE_nin,
      flg_co_sign_in => flg_co_sign_in,
      FLG_CO_SIGN_nin => FLG_CO_SIGN_nin,
      dt_co_sign_in => dt_co_sign_in,
      DT_CO_SIGN_nin => DT_CO_SIGN_nin,
      notes_co_sign_in => notes_co_sign_in,
      NOTES_CO_SIGN_nin => NOTES_CO_SIGN_nin,
      id_prof_co_sign_in => id_prof_co_sign_in,
      ID_PROF_CO_SIGN_nin => ID_PROF_CO_SIGN_nin,
      id_unit_measure_in => id_unit_measure_in,
      ID_UNIT_MEASURE_nin => ID_UNIT_MEASURE_nin,
      frequency_in => frequency_in,
      FREQUENCY_nin => FREQUENCY_nin,
      id_unit_measure_freq_in => id_unit_measure_freq_in,
      ID_UNIT_MEASURE_FREQ_nin => ID_UNIT_MEASURE_FREQ_nin,
      duration_in => duration_in,
      DURATION_nin => DURATION_nin,
      id_unit_measure_dur_in => id_unit_measure_dur_in,
      ID_UNIT_MEASURE_DUR_nin => ID_UNIT_MEASURE_DUR_nin,
      dt_start_presc_tstz_in => dt_start_presc_tstz_in,
      DT_START_PRESC_TSTZ_nin => DT_START_PRESC_TSTZ_nin,
      dt_end_presc_tstz_in => dt_end_presc_tstz_in,
      DT_END_PRESC_TSTZ_nin => DT_END_PRESC_TSTZ_nin,
      refill_in => refill_in,
      REFILL_nin => REFILL_nin,
      emb_id_in => emb_id_in,
      EMB_ID_nin => EMB_ID_nin,
      qty_inst_in => qty_inst_in,
      QTY_INST_nin => QTY_INST_nin,
      unit_measure_inst_in => unit_measure_inst_in,
      UNIT_MEASURE_INST_nin => UNIT_MEASURE_INST_nin,
      first_dose_in => first_dose_in,
      FIRST_DOSE_nin => FIRST_DOSE_nin,
      package_number_in => package_number_in,
      PACKAGE_NUMBER_nin => PACKAGE_NUMBER_nin,
      dt_expire_tstz_in => dt_expire_tstz_in,
      DT_EXPIRE_TSTZ_nin => DT_EXPIRE_TSTZ_nin,
      vers_in => vers_in,
      VERS_nin => VERS_nin,
      route_id_in => route_id_in,
      ROUTE_ID_nin => ROUTE_ID_nin,
      regulation_id_in => regulation_id_in,
      REGULATION_ID_nin => REGULATION_ID_nin,
      flg_interac_med_in => flg_interac_med_in,
      FLG_INTERAC_MED_nin => FLG_INTERAC_MED_nin,
      flg_interac_allergy_in => flg_interac_allergy_in,
      FLG_INTERAC_ALLERGY_nin => FLG_INTERAC_ALLERGY_nin,
      id_dietary_drug_in => id_dietary_drug_in,
      ID_DIETARY_DRUG_nin => ID_DIETARY_DRUG_nin,
      id_manipulated_in => id_manipulated_in,
      ID_MANIPULATED_nin => ID_MANIPULATED_nin,
      order_modified_in => order_modified_in,
      ORDER_MODIFIED_nin => ORDER_MODIFIED_nin,
      dt_order_modified_in => dt_order_modified_in,
      DT_ORDER_MODIFIED_nin => DT_ORDER_MODIFIED_nin,
      patient_notified_in => patient_notified_in,
      PATIENT_NOTIFIED_nin => PATIENT_NOTIFIED_nin,
      id_prof_last_change_in => id_prof_last_change_in,
      ID_PROF_LAST_CHANGE_nin => ID_PROF_LAST_CHANGE_nin,
      id_sw_last_change_in => id_sw_last_change_in,
      ID_SW_LAST_CHANGE_nin => ID_SW_LAST_CHANGE_nin,
      id_inst_last_change_in => id_inst_last_change_in,
      ID_INST_LAST_CHANGE_nin => ID_INST_LAST_CHANGE_nin,
      order_modified_id_issue_in => order_modified_id_issue_in,
      ORDER_MODIFIED_ID_ISSUE_nin => ORDER_MODIFIED_ID_ISSUE_nin,
      order_modified_message_in => order_modified_message_in,
      ORDER_MODIFIED_MESSAGE_nin => ORDER_MODIFIED_MESSAGE_nin,
      id_pat_medication_list_in => id_pat_medication_list_in,
      ID_PAT_MEDICATION_LIST_nin => ID_PAT_MEDICATION_LIST_nin,
      id_other_product_in => id_other_product_in,
      ID_OTHER_PRODUCT_nin => ID_OTHER_PRODUCT_nin,
      desc_other_product_in => desc_other_product_in,
      DESC_OTHER_PRODUCT_nin => DESC_OTHER_PRODUCT_nin,
      status_flg_in => status_flg_in,
      STATUS_FLG_nin => STATUS_FLG_nin,
      status_icon_in => status_icon_in,
      STATUS_ICON_nin => STATUS_ICON_nin,
      status_msg_in => status_msg_in,
      STATUS_MSG_nin => STATUS_MSG_nin,
      status_str_in => status_str_in,
      STATUS_STR_nin => STATUS_STR_nin,
      dispense_in => dispense_in,
      DISPENSE_nin => DISPENSE_nin,
      unit_measure_dispense_in => unit_measure_dispense_in,
      UNIT_MEASURE_DISPENSE_nin => UNIT_MEASURE_DISPENSE_nin,
      flg_dosage_check_in => flg_dosage_check_in,
      FLG_DOSAGE_CHECK_nin => FLG_DOSAGE_CHECK_nin,
      create_user_in => create_user_in,
      CREATE_USER_nin => CREATE_USER_nin,
      create_time_in => create_time_in,
      CREATE_TIME_nin => CREATE_TIME_nin,
      create_institution_in => create_institution_in,
      CREATE_INSTITUTION_nin => CREATE_INSTITUTION_nin,
      update_user_in => update_user_in,
      UPDATE_USER_nin => UPDATE_USER_nin,
      update_time_in => update_time_in,
      UPDATE_TIME_nin => UPDATE_TIME_nin,
      update_institution_in => update_institution_in,
      UPDATE_INSTITUTION_nin => UPDATE_INSTITUTION_nin,
      flg_first_presc_in => flg_first_presc_in,
      FLG_FIRST_PRESC_nin => FLG_FIRST_PRESC_nin,
      id_presc_directions_in => id_presc_directions_in,
      ID_PRESC_DIRECTIONS_nin => ID_PRESC_DIRECTIONS_nin,
      flg_chronic_medication_in => flg_chronic_medication_in,
      FLG_CHRONIC_MEDICATION_nin => FLG_CHRONIC_MEDICATION_nin,
      chronic_notes_not_active_in => chronic_notes_not_active_in,
      CHRONIC_NOTES_NOT_ACTIVE_nin => CHRONIC_NOTES_NOT_ACTIVE_nin,
      id_chronic_motive_in => id_chronic_motive_in,
      ID_CHRONIC_MOTIVE_nin => ID_CHRONIC_MOTIVE_nin,
      id_prof_not_active_in => id_prof_not_active_in,
      ID_PROF_NOT_ACTIVE_nin => ID_PROF_NOT_ACTIVE_nin,
      chronic_motive_descr_in => chronic_motive_descr_in,
      CHRONIC_MOTIVE_DESCR_nin => CHRONIC_MOTIVE_DESCR_nin,
      dt_not_active_tstz_in => dt_not_active_tstz_in,
      DT_NOT_ACTIVE_TSTZ_nin => DT_NOT_ACTIVE_TSTZ_nin,
      preco_sns_in => preco_sns_in,
      PRECO_SNS_nin => PRECO_SNS_nin,
      preco_utente_in => preco_utente_in,
      PRECO_UTENTE_nin => PRECO_UTENTE_nin,
      preco_utente_diff_in => preco_utente_diff_in,
      PRECO_UTENTE_DIFF_nin => PRECO_UTENTE_DIFF_nin,
      compart_in => compart_in,
      COMPART_nin => COMPART_nin,
      id_regime_in => id_regime_in,
      ID_REGIME_nin => ID_REGIME_nin,
      id_cdr_call_in => id_cdr_call_in,
      ID_CDR_CALL_nin => ID_CDR_CALL_nin,
    where_in => where_in,
     handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END upd;

   PROCEDURE upd (
      rec_in IN PRESCRIPTION_PHARM%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      upd (
         id_prescription_pharm_in => rec_in.ID_PRESCRIPTION_PHARM,
         id_prescription_in => rec_in.ID_PRESCRIPTION,
         id_drug_in => rec_in.ID_DRUG,
         qty_in => rec_in.QTY,
         generico_in => rec_in.GENERICO,
         dosage_in => rec_in.DOSAGE,
         justif_in => rec_in.JUSTIF,
         flg_ci_in => rec_in.FLG_CI,
         flg_cheaper_in => rec_in.FLG_CHEAPER,
         flg_justif_in => rec_in.FLG_JUSTIF,
         flg_status_in => rec_in.FLG_STATUS,
         desc_manip_in => rec_in.DESC_MANIP,
         stock_in => rec_in.STOCK,
         notes_in => rec_in.NOTES,
         flg_attention_in => rec_in.FLG_ATTENTION,
         flg_attention_print_in => rec_in.FLG_ATTENTION_PRINT,
         desc_dietary_in => rec_in.DESC_DIETARY,
         qty_manip_in => rec_in.QTY_MANIP,
         unit_manip_in => rec_in.UNIT_MANIP,
         pvp_in => rec_in.PVP,
         p_ref_in => rec_in.P_REF,
         p_ref_pen_in => rec_in.P_REF_PEN,
         dt_prescription_pharm_tstz_in => rec_in.DT_PRESCRIPTION_PHARM_TSTZ,
         dt_order_in => rec_in.DT_ORDER,
         id_prof_order_in => rec_in.ID_PROF_ORDER,
         id_order_type_in => rec_in.ID_ORDER_TYPE,
         flg_co_sign_in => rec_in.FLG_CO_SIGN,
         dt_co_sign_in => rec_in.DT_CO_SIGN,
         notes_co_sign_in => rec_in.NOTES_CO_SIGN,
         id_prof_co_sign_in => rec_in.ID_PROF_CO_SIGN,
         id_unit_measure_in => rec_in.ID_UNIT_MEASURE,
         frequency_in => rec_in.FREQUENCY,
         id_unit_measure_freq_in => rec_in.ID_UNIT_MEASURE_FREQ,
         duration_in => rec_in.DURATION,
         id_unit_measure_dur_in => rec_in.ID_UNIT_MEASURE_DUR,
         dt_start_presc_tstz_in => rec_in.DT_START_PRESC_TSTZ,
         dt_end_presc_tstz_in => rec_in.DT_END_PRESC_TSTZ,
         refill_in => rec_in.REFILL,
         emb_id_in => rec_in.EMB_ID,
         qty_inst_in => rec_in.QTY_INST,
         unit_measure_inst_in => rec_in.UNIT_MEASURE_INST,
         first_dose_in => rec_in.FIRST_DOSE,
         package_number_in => rec_in.PACKAGE_NUMBER,
         dt_expire_tstz_in => rec_in.DT_EXPIRE_TSTZ,
         vers_in => rec_in.VERS,
         route_id_in => rec_in.ROUTE_ID,
         regulation_id_in => rec_in.REGULATION_ID,
         flg_interac_med_in => rec_in.FLG_INTERAC_MED,
         flg_interac_allergy_in => rec_in.FLG_INTERAC_ALLERGY,
         id_dietary_drug_in => rec_in.ID_DIETARY_DRUG,
         id_manipulated_in => rec_in.ID_MANIPULATED,
         order_modified_in => rec_in.ORDER_MODIFIED,
         dt_order_modified_in => rec_in.DT_ORDER_MODIFIED,
         patient_notified_in => rec_in.PATIENT_NOTIFIED,
         id_prof_last_change_in => rec_in.ID_PROF_LAST_CHANGE,
         id_sw_last_change_in => rec_in.ID_SW_LAST_CHANGE,
         id_inst_last_change_in => rec_in.ID_INST_LAST_CHANGE,
         order_modified_id_issue_in => rec_in.ORDER_MODIFIED_ID_ISSUE,
         order_modified_message_in => rec_in.ORDER_MODIFIED_MESSAGE,
         id_pat_medication_list_in => rec_in.ID_PAT_MEDICATION_LIST,
         id_other_product_in => rec_in.ID_OTHER_PRODUCT,
         desc_other_product_in => rec_in.DESC_OTHER_PRODUCT,
         status_flg_in => rec_in.STATUS_FLG,
         status_icon_in => rec_in.STATUS_ICON,
         status_msg_in => rec_in.STATUS_MSG,
         status_str_in => rec_in.STATUS_STR,
         dispense_in => rec_in.DISPENSE,
         unit_measure_dispense_in => rec_in.UNIT_MEASURE_DISPENSE,
         flg_dosage_check_in => rec_in.FLG_DOSAGE_CHECK,
         create_user_in => rec_in.CREATE_USER,
         create_time_in => rec_in.CREATE_TIME,
         create_institution_in => rec_in.CREATE_INSTITUTION,
         update_user_in => rec_in.UPDATE_USER,
         update_time_in => rec_in.UPDATE_TIME,
         update_institution_in => rec_in.UPDATE_INSTITUTION,
         flg_first_presc_in => rec_in.FLG_FIRST_PRESC,
         id_presc_directions_in => rec_in.ID_PRESC_DIRECTIONS,
         flg_chronic_medication_in => rec_in.FLG_CHRONIC_MEDICATION,
         chronic_notes_not_active_in => rec_in.CHRONIC_NOTES_NOT_ACTIVE,
         id_chronic_motive_in => rec_in.ID_CHRONIC_MOTIVE,
         id_prof_not_active_in => rec_in.ID_PROF_NOT_ACTIVE,
         chronic_motive_descr_in => rec_in.CHRONIC_MOTIVE_DESCR,
         dt_not_active_tstz_in => rec_in.DT_NOT_ACTIVE_TSTZ,
         preco_sns_in => rec_in.PRECO_SNS,
         preco_utente_in => rec_in.PRECO_UTENTE,
         preco_utente_diff_in => rec_in.PRECO_UTENTE_DIFF,
         compart_in => rec_in.COMPART,
         id_regime_in => rec_in.ID_REGIME,
         id_cdr_call_in => rec_in.ID_CDR_CALL

        ,handle_error_in => handle_error_in
        , rows_out => rows_out
       );
   END upd;

   PROCEDURE upd (
      rec_in IN PRESCRIPTION_PHARM%ROWTYPE,
     handle_error_in IN BOOLEAN := TRUE
      )
   IS
        rows_out TABLE_VARCHAR;
   BEGIN
      upd (
         id_prescription_pharm_in => rec_in.ID_PRESCRIPTION_PHARM,
         id_prescription_in => rec_in.ID_PRESCRIPTION,
         id_drug_in => rec_in.ID_DRUG,
         qty_in => rec_in.QTY,
         generico_in => rec_in.GENERICO,
         dosage_in => rec_in.DOSAGE,
         justif_in => rec_in.JUSTIF,
         flg_ci_in => rec_in.FLG_CI,
         flg_cheaper_in => rec_in.FLG_CHEAPER,
         flg_justif_in => rec_in.FLG_JUSTIF,
         flg_status_in => rec_in.FLG_STATUS,
         desc_manip_in => rec_in.DESC_MANIP,
         stock_in => rec_in.STOCK,
         notes_in => rec_in.NOTES,
         flg_attention_in => rec_in.FLG_ATTENTION,
         flg_attention_print_in => rec_in.FLG_ATTENTION_PRINT,
         desc_dietary_in => rec_in.DESC_DIETARY,
         qty_manip_in => rec_in.QTY_MANIP,
         unit_manip_in => rec_in.UNIT_MANIP,
         pvp_in => rec_in.PVP,
         p_ref_in => rec_in.P_REF,
         p_ref_pen_in => rec_in.P_REF_PEN,
         dt_prescription_pharm_tstz_in => rec_in.DT_PRESCRIPTION_PHARM_TSTZ,
         dt_order_in => rec_in.DT_ORDER,
         id_prof_order_in => rec_in.ID_PROF_ORDER,
         id_order_type_in => rec_in.ID_ORDER_TYPE,
         flg_co_sign_in => rec_in.FLG_CO_SIGN,
         dt_co_sign_in => rec_in.DT_CO_SIGN,
         notes_co_sign_in => rec_in.NOTES_CO_SIGN,
         id_prof_co_sign_in => rec_in.ID_PROF_CO_SIGN,
         id_unit_measure_in => rec_in.ID_UNIT_MEASURE,
         frequency_in => rec_in.FREQUENCY,
         id_unit_measure_freq_in => rec_in.ID_UNIT_MEASURE_FREQ,
         duration_in => rec_in.DURATION,
         id_unit_measure_dur_in => rec_in.ID_UNIT_MEASURE_DUR,
         dt_start_presc_tstz_in => rec_in.DT_START_PRESC_TSTZ,
         dt_end_presc_tstz_in => rec_in.DT_END_PRESC_TSTZ,
         refill_in => rec_in.REFILL,
         emb_id_in => rec_in.EMB_ID,
         qty_inst_in => rec_in.QTY_INST,
         unit_measure_inst_in => rec_in.UNIT_MEASURE_INST,
         first_dose_in => rec_in.FIRST_DOSE,
         package_number_in => rec_in.PACKAGE_NUMBER,
         dt_expire_tstz_in => rec_in.DT_EXPIRE_TSTZ,
         vers_in => rec_in.VERS,
         route_id_in => rec_in.ROUTE_ID,
         regulation_id_in => rec_in.REGULATION_ID,
         flg_interac_med_in => rec_in.FLG_INTERAC_MED,
         flg_interac_allergy_in => rec_in.FLG_INTERAC_ALLERGY,
         id_dietary_drug_in => rec_in.ID_DIETARY_DRUG,
         id_manipulated_in => rec_in.ID_MANIPULATED,
         order_modified_in => rec_in.ORDER_MODIFIED,
         dt_order_modified_in => rec_in.DT_ORDER_MODIFIED,
         patient_notified_in => rec_in.PATIENT_NOTIFIED,
         id_prof_last_change_in => rec_in.ID_PROF_LAST_CHANGE,
         id_sw_last_change_in => rec_in.ID_SW_LAST_CHANGE,
         id_inst_last_change_in => rec_in.ID_INST_LAST_CHANGE,
         order_modified_id_issue_in => rec_in.ORDER_MODIFIED_ID_ISSUE,
         order_modified_message_in => rec_in.ORDER_MODIFIED_MESSAGE,
         id_pat_medication_list_in => rec_in.ID_PAT_MEDICATION_LIST,
         id_other_product_in => rec_in.ID_OTHER_PRODUCT,
         desc_other_product_in => rec_in.DESC_OTHER_PRODUCT,
         status_flg_in => rec_in.STATUS_FLG,
         status_icon_in => rec_in.STATUS_ICON,
         status_msg_in => rec_in.STATUS_MSG,
         status_str_in => rec_in.STATUS_STR,
         dispense_in => rec_in.DISPENSE,
         unit_measure_dispense_in => rec_in.UNIT_MEASURE_DISPENSE,
         flg_dosage_check_in => rec_in.FLG_DOSAGE_CHECK,
         create_user_in => rec_in.CREATE_USER,
         create_time_in => rec_in.CREATE_TIME,
         create_institution_in => rec_in.CREATE_INSTITUTION,
         update_user_in => rec_in.UPDATE_USER,
         update_time_in => rec_in.UPDATE_TIME,
         update_institution_in => rec_in.UPDATE_INSTITUTION,
         flg_first_presc_in => rec_in.FLG_FIRST_PRESC,
         id_presc_directions_in => rec_in.ID_PRESC_DIRECTIONS,
         flg_chronic_medication_in => rec_in.FLG_CHRONIC_MEDICATION,
         chronic_notes_not_active_in => rec_in.CHRONIC_NOTES_NOT_ACTIVE,
         id_chronic_motive_in => rec_in.ID_CHRONIC_MOTIVE,
         id_prof_not_active_in => rec_in.ID_PROF_NOT_ACTIVE,
         chronic_motive_descr_in => rec_in.CHRONIC_MOTIVE_DESCR,
         dt_not_active_tstz_in => rec_in.DT_NOT_ACTIVE_TSTZ,
         preco_sns_in => rec_in.PRECO_SNS,
         preco_utente_in => rec_in.PRECO_UTENTE,
         preco_utente_diff_in => rec_in.PRECO_UTENTE_DIFF,
         compart_in => rec_in.COMPART,
         id_regime_in => rec_in.ID_REGIME,
         id_cdr_call_in => rec_in.ID_CDR_CALL

        ,handle_error_in => handle_error_in
        , rows_out => rows_out
       );
   END upd;

   PROCEDURE upd_ins (
      id_prescription_pharm_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE,
      id_prescription_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION%TYPE DEFAULT NULL,
      id_drug_in IN PRESCRIPTION_PHARM.ID_DRUG%TYPE DEFAULT NULL,
      qty_in IN PRESCRIPTION_PHARM.QTY%TYPE DEFAULT NULL,
      generico_in IN PRESCRIPTION_PHARM.GENERICO%TYPE DEFAULT NULL,
      dosage_in IN PRESCRIPTION_PHARM.DOSAGE%TYPE DEFAULT NULL,
      justif_in IN PRESCRIPTION_PHARM.JUSTIF%TYPE DEFAULT NULL,
      flg_ci_in IN PRESCRIPTION_PHARM.FLG_CI%TYPE DEFAULT NULL,
      flg_cheaper_in IN PRESCRIPTION_PHARM.FLG_CHEAPER%TYPE DEFAULT NULL,
      flg_justif_in IN PRESCRIPTION_PHARM.FLG_JUSTIF%TYPE DEFAULT NULL,
      flg_status_in IN PRESCRIPTION_PHARM.FLG_STATUS%TYPE DEFAULT NULL,
      desc_manip_in IN PRESCRIPTION_PHARM.DESC_MANIP%TYPE DEFAULT NULL,
      stock_in IN PRESCRIPTION_PHARM.STOCK%TYPE DEFAULT NULL,
      notes_in IN PRESCRIPTION_PHARM.NOTES%TYPE DEFAULT NULL,
      flg_attention_in IN PRESCRIPTION_PHARM.FLG_ATTENTION%TYPE DEFAULT NULL,
      flg_attention_print_in IN PRESCRIPTION_PHARM.FLG_ATTENTION_PRINT%TYPE DEFAULT NULL,
      desc_dietary_in IN PRESCRIPTION_PHARM.DESC_DIETARY%TYPE DEFAULT NULL,
      qty_manip_in IN PRESCRIPTION_PHARM.QTY_MANIP%TYPE DEFAULT NULL,
      unit_manip_in IN PRESCRIPTION_PHARM.UNIT_MANIP%TYPE DEFAULT NULL,
      pvp_in IN PRESCRIPTION_PHARM.PVP%TYPE DEFAULT NULL,
      p_ref_in IN PRESCRIPTION_PHARM.P_REF%TYPE DEFAULT NULL,
      p_ref_pen_in IN PRESCRIPTION_PHARM.P_REF_PEN%TYPE DEFAULT NULL,
      dt_prescription_pharm_tstz_in IN PRESCRIPTION_PHARM.DT_PRESCRIPTION_PHARM_TSTZ%TYPE DEFAULT NULL,
      dt_order_in IN PRESCRIPTION_PHARM.DT_ORDER%TYPE DEFAULT NULL,
      id_prof_order_in IN PRESCRIPTION_PHARM.ID_PROF_ORDER%TYPE DEFAULT NULL,
      id_order_type_in IN PRESCRIPTION_PHARM.ID_ORDER_TYPE%TYPE DEFAULT NULL,
      flg_co_sign_in IN PRESCRIPTION_PHARM.FLG_CO_SIGN%TYPE DEFAULT NULL,
      dt_co_sign_in IN PRESCRIPTION_PHARM.DT_CO_SIGN%TYPE DEFAULT NULL,
      notes_co_sign_in IN PRESCRIPTION_PHARM.NOTES_CO_SIGN%TYPE DEFAULT NULL,
      id_prof_co_sign_in IN PRESCRIPTION_PHARM.ID_PROF_CO_SIGN%TYPE DEFAULT NULL,
      id_unit_measure_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE%TYPE DEFAULT NULL,
      frequency_in IN PRESCRIPTION_PHARM.FREQUENCY%TYPE DEFAULT NULL,
      id_unit_measure_freq_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_FREQ%TYPE DEFAULT NULL,
      duration_in IN PRESCRIPTION_PHARM.DURATION%TYPE DEFAULT NULL,
      id_unit_measure_dur_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_DUR%TYPE DEFAULT NULL,
      dt_start_presc_tstz_in IN PRESCRIPTION_PHARM.DT_START_PRESC_TSTZ%TYPE DEFAULT NULL,
      dt_end_presc_tstz_in IN PRESCRIPTION_PHARM.DT_END_PRESC_TSTZ%TYPE DEFAULT NULL,
      refill_in IN PRESCRIPTION_PHARM.REFILL%TYPE DEFAULT NULL,
      emb_id_in IN PRESCRIPTION_PHARM.EMB_ID%TYPE DEFAULT NULL,
      qty_inst_in IN PRESCRIPTION_PHARM.QTY_INST%TYPE DEFAULT NULL,
      unit_measure_inst_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_INST%TYPE DEFAULT NULL,
      first_dose_in IN PRESCRIPTION_PHARM.FIRST_DOSE%TYPE DEFAULT NULL,
      package_number_in IN PRESCRIPTION_PHARM.PACKAGE_NUMBER%TYPE DEFAULT NULL,
      dt_expire_tstz_in IN PRESCRIPTION_PHARM.DT_EXPIRE_TSTZ%TYPE DEFAULT NULL,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE DEFAULT NULL,
      route_id_in IN PRESCRIPTION_PHARM.ROUTE_ID%TYPE DEFAULT NULL,
      regulation_id_in IN PRESCRIPTION_PHARM.REGULATION_ID%TYPE DEFAULT NULL,
      flg_interac_med_in IN PRESCRIPTION_PHARM.FLG_INTERAC_MED%TYPE DEFAULT NULL,
      flg_interac_allergy_in IN PRESCRIPTION_PHARM.FLG_INTERAC_ALLERGY%TYPE DEFAULT NULL,
      id_dietary_drug_in IN PRESCRIPTION_PHARM.ID_DIETARY_DRUG%TYPE DEFAULT NULL,
      id_manipulated_in IN PRESCRIPTION_PHARM.ID_MANIPULATED%TYPE DEFAULT NULL,
      order_modified_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED%TYPE DEFAULT NULL,
      dt_order_modified_in IN PRESCRIPTION_PHARM.DT_ORDER_MODIFIED%TYPE DEFAULT NULL,
      patient_notified_in IN PRESCRIPTION_PHARM.PATIENT_NOTIFIED%TYPE DEFAULT NULL,
      id_prof_last_change_in IN PRESCRIPTION_PHARM.ID_PROF_LAST_CHANGE%TYPE DEFAULT NULL,
      id_sw_last_change_in IN PRESCRIPTION_PHARM.ID_SW_LAST_CHANGE%TYPE DEFAULT NULL,
      id_inst_last_change_in IN PRESCRIPTION_PHARM.ID_INST_LAST_CHANGE%TYPE DEFAULT NULL,
      order_modified_id_issue_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_ID_ISSUE%TYPE DEFAULT NULL,
      order_modified_message_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_MESSAGE%TYPE DEFAULT NULL,
      id_pat_medication_list_in IN PRESCRIPTION_PHARM.ID_PAT_MEDICATION_LIST%TYPE DEFAULT NULL,
      id_other_product_in IN PRESCRIPTION_PHARM.ID_OTHER_PRODUCT%TYPE DEFAULT NULL,
      desc_other_product_in IN PRESCRIPTION_PHARM.DESC_OTHER_PRODUCT%TYPE DEFAULT NULL,
      status_flg_in IN PRESCRIPTION_PHARM.STATUS_FLG%TYPE DEFAULT NULL,
      status_icon_in IN PRESCRIPTION_PHARM.STATUS_ICON%TYPE DEFAULT NULL,
      status_msg_in IN PRESCRIPTION_PHARM.STATUS_MSG%TYPE DEFAULT NULL,
      status_str_in IN PRESCRIPTION_PHARM.STATUS_STR%TYPE DEFAULT NULL,
      dispense_in IN PRESCRIPTION_PHARM.DISPENSE%TYPE DEFAULT NULL,
      unit_measure_dispense_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_DISPENSE%TYPE DEFAULT NULL,
      flg_dosage_check_in IN PRESCRIPTION_PHARM.FLG_DOSAGE_CHECK%TYPE DEFAULT NULL,
      create_user_in IN PRESCRIPTION_PHARM.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN PRESCRIPTION_PHARM.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN PRESCRIPTION_PHARM.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN PRESCRIPTION_PHARM.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN PRESCRIPTION_PHARM.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN PRESCRIPTION_PHARM.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_first_presc_in IN PRESCRIPTION_PHARM.FLG_FIRST_PRESC%TYPE DEFAULT NULL,
      id_presc_directions_in IN PRESCRIPTION_PHARM.ID_PRESC_DIRECTIONS%TYPE DEFAULT NULL,
      flg_chronic_medication_in IN PRESCRIPTION_PHARM.FLG_CHRONIC_MEDICATION%TYPE DEFAULT NULL,
      chronic_notes_not_active_in IN PRESCRIPTION_PHARM.CHRONIC_NOTES_NOT_ACTIVE%TYPE DEFAULT NULL,
      id_chronic_motive_in IN PRESCRIPTION_PHARM.ID_CHRONIC_MOTIVE%TYPE DEFAULT NULL,
      id_prof_not_active_in IN PRESCRIPTION_PHARM.ID_PROF_NOT_ACTIVE%TYPE DEFAULT NULL,
      chronic_motive_descr_in IN PRESCRIPTION_PHARM.CHRONIC_MOTIVE_DESCR%TYPE DEFAULT NULL,
      dt_not_active_tstz_in IN PRESCRIPTION_PHARM.DT_NOT_ACTIVE_TSTZ%TYPE DEFAULT NULL,
      preco_sns_in IN PRESCRIPTION_PHARM.PRECO_SNS%TYPE DEFAULT NULL,
      preco_utente_in IN PRESCRIPTION_PHARM.PRECO_UTENTE%TYPE DEFAULT NULL,
      preco_utente_diff_in IN PRESCRIPTION_PHARM.PRECO_UTENTE_DIFF%TYPE DEFAULT NULL,
      compart_in IN PRESCRIPTION_PHARM.COMPART%TYPE DEFAULT NULL,
      id_regime_in IN PRESCRIPTION_PHARM.ID_REGIME%TYPE DEFAULT NULL,
      id_cdr_call_in IN PRESCRIPTION_PHARM.ID_CDR_CALL%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      upd (
         id_prescription_pharm_in => id_prescription_pharm_in,
         id_prescription_in => id_prescription_in,
         id_drug_in => id_drug_in,
         qty_in => qty_in,
         generico_in => generico_in,
         dosage_in => dosage_in,
         justif_in => justif_in,
         flg_ci_in => flg_ci_in,
         flg_cheaper_in => flg_cheaper_in,
         flg_justif_in => flg_justif_in,
         flg_status_in => flg_status_in,
         desc_manip_in => desc_manip_in,
         stock_in => stock_in,
         notes_in => notes_in,
         flg_attention_in => flg_attention_in,
         flg_attention_print_in => flg_attention_print_in,
         desc_dietary_in => desc_dietary_in,
         qty_manip_in => qty_manip_in,
         unit_manip_in => unit_manip_in,
         pvp_in => pvp_in,
         p_ref_in => p_ref_in,
         p_ref_pen_in => p_ref_pen_in,
         dt_prescription_pharm_tstz_in => dt_prescription_pharm_tstz_in,
         dt_order_in => dt_order_in,
         id_prof_order_in => id_prof_order_in,
         id_order_type_in => id_order_type_in,
         flg_co_sign_in => flg_co_sign_in,
         dt_co_sign_in => dt_co_sign_in,
         notes_co_sign_in => notes_co_sign_in,
         id_prof_co_sign_in => id_prof_co_sign_in,
         id_unit_measure_in => id_unit_measure_in,
         frequency_in => frequency_in,
         id_unit_measure_freq_in => id_unit_measure_freq_in,
         duration_in => duration_in,
         id_unit_measure_dur_in => id_unit_measure_dur_in,
         dt_start_presc_tstz_in => dt_start_presc_tstz_in,
         dt_end_presc_tstz_in => dt_end_presc_tstz_in,
         refill_in => refill_in,
         emb_id_in => emb_id_in,
         qty_inst_in => qty_inst_in,
         unit_measure_inst_in => unit_measure_inst_in,
         first_dose_in => first_dose_in,
         package_number_in => package_number_in,
         dt_expire_tstz_in => dt_expire_tstz_in,
         vers_in => vers_in,
         route_id_in => route_id_in,
         regulation_id_in => regulation_id_in,
         flg_interac_med_in => flg_interac_med_in,
         flg_interac_allergy_in => flg_interac_allergy_in,
         id_dietary_drug_in => id_dietary_drug_in,
         id_manipulated_in => id_manipulated_in,
         order_modified_in => order_modified_in,
         dt_order_modified_in => dt_order_modified_in,
         patient_notified_in => patient_notified_in,
         id_prof_last_change_in => id_prof_last_change_in,
         id_sw_last_change_in => id_sw_last_change_in,
         id_inst_last_change_in => id_inst_last_change_in,
         order_modified_id_issue_in => order_modified_id_issue_in,
         order_modified_message_in => order_modified_message_in,
         id_pat_medication_list_in => id_pat_medication_list_in,
         id_other_product_in => id_other_product_in,
         desc_other_product_in => desc_other_product_in,
         status_flg_in => status_flg_in,
         status_icon_in => status_icon_in,
         status_msg_in => status_msg_in,
         status_str_in => status_str_in,
         dispense_in => dispense_in,
         unit_measure_dispense_in => unit_measure_dispense_in,
         flg_dosage_check_in => flg_dosage_check_in,
         create_user_in => create_user_in,
         create_time_in => create_time_in,
         create_institution_in => create_institution_in,
         update_user_in => update_user_in,
         update_time_in => update_time_in,
         update_institution_in => update_institution_in,
         flg_first_presc_in => flg_first_presc_in,
         id_presc_directions_in => id_presc_directions_in,
         flg_chronic_medication_in => flg_chronic_medication_in,
         chronic_notes_not_active_in => chronic_notes_not_active_in,
         id_chronic_motive_in => id_chronic_motive_in,
         id_prof_not_active_in => id_prof_not_active_in,
         chronic_motive_descr_in => chronic_motive_descr_in,
         dt_not_active_tstz_in => dt_not_active_tstz_in,
         preco_sns_in => preco_sns_in,
         preco_utente_in => preco_utente_in,
         preco_utente_diff_in => preco_utente_diff_in,
         compart_in => compart_in,
         id_regime_in => id_regime_in,
         id_cdr_call_in => id_cdr_call_in
         ,handle_error_in => handle_error_in
         , rows_out => rows_out
       );
      IF SQL%ROWCOUNT = 0
      THEN
         ins (
            id_prescription_pharm_in => id_prescription_pharm_in,
            id_prescription_in => id_prescription_in,
            id_drug_in => id_drug_in,
            qty_in => qty_in,
            generico_in => generico_in,
            dosage_in => dosage_in,
            justif_in => justif_in,
            flg_ci_in => flg_ci_in,
            flg_cheaper_in => flg_cheaper_in,
            flg_justif_in => flg_justif_in,
            flg_status_in => flg_status_in,
            desc_manip_in => desc_manip_in,
            stock_in => stock_in,
            notes_in => notes_in,
            flg_attention_in => flg_attention_in,
            flg_attention_print_in => flg_attention_print_in,
            desc_dietary_in => desc_dietary_in,
            qty_manip_in => qty_manip_in,
            unit_manip_in => unit_manip_in,
            pvp_in => pvp_in,
            p_ref_in => p_ref_in,
            p_ref_pen_in => p_ref_pen_in,
            dt_prescription_pharm_tstz_in => dt_prescription_pharm_tstz_in,
            dt_order_in => dt_order_in,
            id_prof_order_in => id_prof_order_in,
            id_order_type_in => id_order_type_in,
            flg_co_sign_in => flg_co_sign_in,
            dt_co_sign_in => dt_co_sign_in,
            notes_co_sign_in => notes_co_sign_in,
            id_prof_co_sign_in => id_prof_co_sign_in,
            id_unit_measure_in => id_unit_measure_in,
            frequency_in => frequency_in,
            id_unit_measure_freq_in => id_unit_measure_freq_in,
            duration_in => duration_in,
            id_unit_measure_dur_in => id_unit_measure_dur_in,
            dt_start_presc_tstz_in => dt_start_presc_tstz_in,
            dt_end_presc_tstz_in => dt_end_presc_tstz_in,
            refill_in => refill_in,
            emb_id_in => emb_id_in,
            qty_inst_in => qty_inst_in,
            unit_measure_inst_in => unit_measure_inst_in,
            first_dose_in => first_dose_in,
            package_number_in => package_number_in,
            dt_expire_tstz_in => dt_expire_tstz_in,
            vers_in => vers_in,
            route_id_in => route_id_in,
            regulation_id_in => regulation_id_in,
            flg_interac_med_in => flg_interac_med_in,
            flg_interac_allergy_in => flg_interac_allergy_in,
            id_dietary_drug_in => id_dietary_drug_in,
            id_manipulated_in => id_manipulated_in,
            order_modified_in => order_modified_in,
            dt_order_modified_in => dt_order_modified_in,
            patient_notified_in => patient_notified_in,
            id_prof_last_change_in => id_prof_last_change_in,
            id_sw_last_change_in => id_sw_last_change_in,
            id_inst_last_change_in => id_inst_last_change_in,
            order_modified_id_issue_in => order_modified_id_issue_in,
            order_modified_message_in => order_modified_message_in,
            id_pat_medication_list_in => id_pat_medication_list_in,
            id_other_product_in => id_other_product_in,
            desc_other_product_in => desc_other_product_in,
            status_flg_in => status_flg_in,
            status_icon_in => status_icon_in,
            status_msg_in => status_msg_in,
            status_str_in => status_str_in,
            dispense_in => dispense_in,
            unit_measure_dispense_in => unit_measure_dispense_in,
            flg_dosage_check_in => flg_dosage_check_in,
            create_user_in => create_user_in,
            create_time_in => create_time_in,
            create_institution_in => create_institution_in,
            update_user_in => update_user_in,
            update_time_in => update_time_in,
            update_institution_in => update_institution_in,
            flg_first_presc_in => flg_first_presc_in,
            id_presc_directions_in => id_presc_directions_in,
            flg_chronic_medication_in => flg_chronic_medication_in,
            chronic_notes_not_active_in => chronic_notes_not_active_in,
            id_chronic_motive_in => id_chronic_motive_in,
            id_prof_not_active_in => id_prof_not_active_in,
            chronic_motive_descr_in => chronic_motive_descr_in,
            dt_not_active_tstz_in => dt_not_active_tstz_in,
            preco_sns_in => preco_sns_in,
            preco_utente_in => preco_utente_in,
            preco_utente_diff_in => preco_utente_diff_in,
            compart_in => compart_in,
            id_regime_in => id_regime_in,
            id_cdr_call_in => id_cdr_call_in
            ,handle_error_in => handle_error_in
            , rows_out => rows_out
         );
      END IF;
   END upd_ins;

   PROCEDURE upd_ins (
      id_prescription_pharm_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE,
      id_prescription_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION%TYPE DEFAULT NULL,
      id_drug_in IN PRESCRIPTION_PHARM.ID_DRUG%TYPE DEFAULT NULL,
      qty_in IN PRESCRIPTION_PHARM.QTY%TYPE DEFAULT NULL,
      generico_in IN PRESCRIPTION_PHARM.GENERICO%TYPE DEFAULT NULL,
      dosage_in IN PRESCRIPTION_PHARM.DOSAGE%TYPE DEFAULT NULL,
      justif_in IN PRESCRIPTION_PHARM.JUSTIF%TYPE DEFAULT NULL,
      flg_ci_in IN PRESCRIPTION_PHARM.FLG_CI%TYPE DEFAULT NULL,
      flg_cheaper_in IN PRESCRIPTION_PHARM.FLG_CHEAPER%TYPE DEFAULT NULL,
      flg_justif_in IN PRESCRIPTION_PHARM.FLG_JUSTIF%TYPE DEFAULT NULL,
      flg_status_in IN PRESCRIPTION_PHARM.FLG_STATUS%TYPE DEFAULT NULL,
      desc_manip_in IN PRESCRIPTION_PHARM.DESC_MANIP%TYPE DEFAULT NULL,
      stock_in IN PRESCRIPTION_PHARM.STOCK%TYPE DEFAULT NULL,
      notes_in IN PRESCRIPTION_PHARM.NOTES%TYPE DEFAULT NULL,
      flg_attention_in IN PRESCRIPTION_PHARM.FLG_ATTENTION%TYPE DEFAULT NULL,
      flg_attention_print_in IN PRESCRIPTION_PHARM.FLG_ATTENTION_PRINT%TYPE DEFAULT NULL,
      desc_dietary_in IN PRESCRIPTION_PHARM.DESC_DIETARY%TYPE DEFAULT NULL,
      qty_manip_in IN PRESCRIPTION_PHARM.QTY_MANIP%TYPE DEFAULT NULL,
      unit_manip_in IN PRESCRIPTION_PHARM.UNIT_MANIP%TYPE DEFAULT NULL,
      pvp_in IN PRESCRIPTION_PHARM.PVP%TYPE DEFAULT NULL,
      p_ref_in IN PRESCRIPTION_PHARM.P_REF%TYPE DEFAULT NULL,
      p_ref_pen_in IN PRESCRIPTION_PHARM.P_REF_PEN%TYPE DEFAULT NULL,
      dt_prescription_pharm_tstz_in IN PRESCRIPTION_PHARM.DT_PRESCRIPTION_PHARM_TSTZ%TYPE DEFAULT NULL,
      dt_order_in IN PRESCRIPTION_PHARM.DT_ORDER%TYPE DEFAULT NULL,
      id_prof_order_in IN PRESCRIPTION_PHARM.ID_PROF_ORDER%TYPE DEFAULT NULL,
      id_order_type_in IN PRESCRIPTION_PHARM.ID_ORDER_TYPE%TYPE DEFAULT NULL,
      flg_co_sign_in IN PRESCRIPTION_PHARM.FLG_CO_SIGN%TYPE DEFAULT NULL,
      dt_co_sign_in IN PRESCRIPTION_PHARM.DT_CO_SIGN%TYPE DEFAULT NULL,
      notes_co_sign_in IN PRESCRIPTION_PHARM.NOTES_CO_SIGN%TYPE DEFAULT NULL,
      id_prof_co_sign_in IN PRESCRIPTION_PHARM.ID_PROF_CO_SIGN%TYPE DEFAULT NULL,
      id_unit_measure_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE%TYPE DEFAULT NULL,
      frequency_in IN PRESCRIPTION_PHARM.FREQUENCY%TYPE DEFAULT NULL,
      id_unit_measure_freq_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_FREQ%TYPE DEFAULT NULL,
      duration_in IN PRESCRIPTION_PHARM.DURATION%TYPE DEFAULT NULL,
      id_unit_measure_dur_in IN PRESCRIPTION_PHARM.ID_UNIT_MEASURE_DUR%TYPE DEFAULT NULL,
      dt_start_presc_tstz_in IN PRESCRIPTION_PHARM.DT_START_PRESC_TSTZ%TYPE DEFAULT NULL,
      dt_end_presc_tstz_in IN PRESCRIPTION_PHARM.DT_END_PRESC_TSTZ%TYPE DEFAULT NULL,
      refill_in IN PRESCRIPTION_PHARM.REFILL%TYPE DEFAULT NULL,
      emb_id_in IN PRESCRIPTION_PHARM.EMB_ID%TYPE DEFAULT NULL,
      qty_inst_in IN PRESCRIPTION_PHARM.QTY_INST%TYPE DEFAULT NULL,
      unit_measure_inst_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_INST%TYPE DEFAULT NULL,
      first_dose_in IN PRESCRIPTION_PHARM.FIRST_DOSE%TYPE DEFAULT NULL,
      package_number_in IN PRESCRIPTION_PHARM.PACKAGE_NUMBER%TYPE DEFAULT NULL,
      dt_expire_tstz_in IN PRESCRIPTION_PHARM.DT_EXPIRE_TSTZ%TYPE DEFAULT NULL,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE DEFAULT NULL,
      route_id_in IN PRESCRIPTION_PHARM.ROUTE_ID%TYPE DEFAULT NULL,
      regulation_id_in IN PRESCRIPTION_PHARM.REGULATION_ID%TYPE DEFAULT NULL,
      flg_interac_med_in IN PRESCRIPTION_PHARM.FLG_INTERAC_MED%TYPE DEFAULT NULL,
      flg_interac_allergy_in IN PRESCRIPTION_PHARM.FLG_INTERAC_ALLERGY%TYPE DEFAULT NULL,
      id_dietary_drug_in IN PRESCRIPTION_PHARM.ID_DIETARY_DRUG%TYPE DEFAULT NULL,
      id_manipulated_in IN PRESCRIPTION_PHARM.ID_MANIPULATED%TYPE DEFAULT NULL,
      order_modified_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED%TYPE DEFAULT NULL,
      dt_order_modified_in IN PRESCRIPTION_PHARM.DT_ORDER_MODIFIED%TYPE DEFAULT NULL,
      patient_notified_in IN PRESCRIPTION_PHARM.PATIENT_NOTIFIED%TYPE DEFAULT NULL,
      id_prof_last_change_in IN PRESCRIPTION_PHARM.ID_PROF_LAST_CHANGE%TYPE DEFAULT NULL,
      id_sw_last_change_in IN PRESCRIPTION_PHARM.ID_SW_LAST_CHANGE%TYPE DEFAULT NULL,
      id_inst_last_change_in IN PRESCRIPTION_PHARM.ID_INST_LAST_CHANGE%TYPE DEFAULT NULL,
      order_modified_id_issue_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_ID_ISSUE%TYPE DEFAULT NULL,
      order_modified_message_in IN PRESCRIPTION_PHARM.ORDER_MODIFIED_MESSAGE%TYPE DEFAULT NULL,
      id_pat_medication_list_in IN PRESCRIPTION_PHARM.ID_PAT_MEDICATION_LIST%TYPE DEFAULT NULL,
      id_other_product_in IN PRESCRIPTION_PHARM.ID_OTHER_PRODUCT%TYPE DEFAULT NULL,
      desc_other_product_in IN PRESCRIPTION_PHARM.DESC_OTHER_PRODUCT%TYPE DEFAULT NULL,
      status_flg_in IN PRESCRIPTION_PHARM.STATUS_FLG%TYPE DEFAULT NULL,
      status_icon_in IN PRESCRIPTION_PHARM.STATUS_ICON%TYPE DEFAULT NULL,
      status_msg_in IN PRESCRIPTION_PHARM.STATUS_MSG%TYPE DEFAULT NULL,
      status_str_in IN PRESCRIPTION_PHARM.STATUS_STR%TYPE DEFAULT NULL,
      dispense_in IN PRESCRIPTION_PHARM.DISPENSE%TYPE DEFAULT NULL,
      unit_measure_dispense_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_DISPENSE%TYPE DEFAULT NULL,
      flg_dosage_check_in IN PRESCRIPTION_PHARM.FLG_DOSAGE_CHECK%TYPE DEFAULT NULL,
      create_user_in IN PRESCRIPTION_PHARM.CREATE_USER%TYPE DEFAULT NULL,
      create_time_in IN PRESCRIPTION_PHARM.CREATE_TIME%TYPE DEFAULT NULL,
      create_institution_in IN PRESCRIPTION_PHARM.CREATE_INSTITUTION%TYPE DEFAULT NULL,
      update_user_in IN PRESCRIPTION_PHARM.UPDATE_USER%TYPE DEFAULT NULL,
      update_time_in IN PRESCRIPTION_PHARM.UPDATE_TIME%TYPE DEFAULT NULL,
      update_institution_in IN PRESCRIPTION_PHARM.UPDATE_INSTITUTION%TYPE DEFAULT NULL,
      flg_first_presc_in IN PRESCRIPTION_PHARM.FLG_FIRST_PRESC%TYPE DEFAULT NULL,
      id_presc_directions_in IN PRESCRIPTION_PHARM.ID_PRESC_DIRECTIONS%TYPE DEFAULT NULL,
      flg_chronic_medication_in IN PRESCRIPTION_PHARM.FLG_CHRONIC_MEDICATION%TYPE DEFAULT NULL,
      chronic_notes_not_active_in IN PRESCRIPTION_PHARM.CHRONIC_NOTES_NOT_ACTIVE%TYPE DEFAULT NULL,
      id_chronic_motive_in IN PRESCRIPTION_PHARM.ID_CHRONIC_MOTIVE%TYPE DEFAULT NULL,
      id_prof_not_active_in IN PRESCRIPTION_PHARM.ID_PROF_NOT_ACTIVE%TYPE DEFAULT NULL,
      chronic_motive_descr_in IN PRESCRIPTION_PHARM.CHRONIC_MOTIVE_DESCR%TYPE DEFAULT NULL,
      dt_not_active_tstz_in IN PRESCRIPTION_PHARM.DT_NOT_ACTIVE_TSTZ%TYPE DEFAULT NULL,
      preco_sns_in IN PRESCRIPTION_PHARM.PRECO_SNS%TYPE DEFAULT NULL,
      preco_utente_in IN PRESCRIPTION_PHARM.PRECO_UTENTE%TYPE DEFAULT NULL,
      preco_utente_diff_in IN PRESCRIPTION_PHARM.PRECO_UTENTE_DIFF%TYPE DEFAULT NULL,
      compart_in IN PRESCRIPTION_PHARM.COMPART%TYPE DEFAULT NULL,
      id_regime_in IN PRESCRIPTION_PHARM.ID_REGIME%TYPE DEFAULT NULL,
      id_cdr_call_in IN PRESCRIPTION_PHARM.ID_CDR_CALL%TYPE DEFAULT NULL,
     handle_error_in IN BOOLEAN := TRUE
      )
   IS
        rows_out TABLE_VARCHAR;
   BEGIN
      upd_ins (
      id_prescription_pharm_in,
      id_prescription_in,
      id_drug_in,
      qty_in,
      generico_in,
      dosage_in,
      justif_in,
      flg_ci_in,
      flg_cheaper_in,
      flg_justif_in,
      flg_status_in,
      desc_manip_in,
      stock_in,
      notes_in,
      flg_attention_in,
      flg_attention_print_in,
      desc_dietary_in,
      qty_manip_in,
      unit_manip_in,
      pvp_in,
      p_ref_in,
      p_ref_pen_in,
      dt_prescription_pharm_tstz_in,
      dt_order_in,
      id_prof_order_in,
      id_order_type_in,
      flg_co_sign_in,
      dt_co_sign_in,
      notes_co_sign_in,
      id_prof_co_sign_in,
      id_unit_measure_in,
      frequency_in,
      id_unit_measure_freq_in,
      duration_in,
      id_unit_measure_dur_in,
      dt_start_presc_tstz_in,
      dt_end_presc_tstz_in,
      refill_in,
      emb_id_in,
      qty_inst_in,
      unit_measure_inst_in,
      first_dose_in,
      package_number_in,
      dt_expire_tstz_in,
      vers_in,
      route_id_in,
      regulation_id_in,
      flg_interac_med_in,
      flg_interac_allergy_in,
      id_dietary_drug_in,
      id_manipulated_in,
      order_modified_in,
      dt_order_modified_in,
      patient_notified_in,
      id_prof_last_change_in,
      id_sw_last_change_in,
      id_inst_last_change_in,
      order_modified_id_issue_in,
      order_modified_message_in,
      id_pat_medication_list_in,
      id_other_product_in,
      desc_other_product_in,
      status_flg_in,
      status_icon_in,
      status_msg_in,
      status_str_in,
      dispense_in,
      unit_measure_dispense_in,
      flg_dosage_check_in,
      create_user_in,
      create_time_in,
      create_institution_in,
      update_user_in,
      update_time_in,
      update_institution_in,
      flg_first_presc_in,
      id_presc_directions_in,
      flg_chronic_medication_in,
      chronic_notes_not_active_in,
      id_chronic_motive_in,
      id_prof_not_active_in,
      chronic_motive_descr_in,
      dt_not_active_tstz_in,
      preco_sns_in,
      preco_utente_in,
      preco_utente_diff_in,
      compart_in,
      id_regime_in,
      id_cdr_call_in,
     handle_error_in
     ,rows_out
      );
   END upd_ins;


   PROCEDURE upd (
      col_in IN PRESCRIPTION_PHARM_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out IN OUT TABLE_VARCHAR
      )
   IS
      l_ID_PRESCRIPTION_PHARM ID_PRESCRIPTION_PHARM_cc;
      l_ID_PRESCRIPTION ID_PRESCRIPTION_cc;
      l_ID_DRUG ID_DRUG_cc;
      l_QTY QTY_cc;
      l_GENERICO GENERICO_cc;
      l_DOSAGE DOSAGE_cc;
      l_JUSTIF JUSTIF_cc;
      l_FLG_CI FLG_CI_cc;
      l_FLG_CHEAPER FLG_CHEAPER_cc;
      l_FLG_JUSTIF FLG_JUSTIF_cc;
      l_FLG_STATUS FLG_STATUS_cc;
      l_DESC_MANIP DESC_MANIP_cc;
      l_STOCK STOCK_cc;
      l_NOTES NOTES_cc;
      l_FLG_ATTENTION FLG_ATTENTION_cc;
      l_FLG_ATTENTION_PRINT FLG_ATTENTION_PRINT_cc;
      l_DESC_DIETARY DESC_DIETARY_cc;
      l_QTY_MANIP QTY_MANIP_cc;
      l_UNIT_MANIP UNIT_MANIP_cc;
      l_PVP PVP_cc;
      l_P_REF P_REF_cc;
      l_P_REF_PEN P_REF_PEN_cc;
      l_DT_PRESCRIPTION_PHARM_TSTZ DT_PRESCRIPTION_PHARM_TSTZ_cc;
      l_DT_ORDER DT_ORDER_cc;
      l_ID_PROF_ORDER ID_PROF_ORDER_cc;
      l_ID_ORDER_TYPE ID_ORDER_TYPE_cc;
      l_FLG_CO_SIGN FLG_CO_SIGN_cc;
      l_DT_CO_SIGN DT_CO_SIGN_cc;
      l_NOTES_CO_SIGN NOTES_CO_SIGN_cc;
      l_ID_PROF_CO_SIGN ID_PROF_CO_SIGN_cc;
      l_ID_UNIT_MEASURE ID_UNIT_MEASURE_cc;
      l_FREQUENCY FREQUENCY_cc;
      l_ID_UNIT_MEASURE_FREQ ID_UNIT_MEASURE_FREQ_cc;
      l_DURATION DURATION_cc;
      l_ID_UNIT_MEASURE_DUR ID_UNIT_MEASURE_DUR_cc;
      l_DT_START_PRESC_TSTZ DT_START_PRESC_TSTZ_cc;
      l_DT_END_PRESC_TSTZ DT_END_PRESC_TSTZ_cc;
      l_REFILL REFILL_cc;
      l_EMB_ID EMB_ID_cc;
      l_QTY_INST QTY_INST_cc;
      l_UNIT_MEASURE_INST UNIT_MEASURE_INST_cc;
      l_FIRST_DOSE FIRST_DOSE_cc;
      l_PACKAGE_NUMBER PACKAGE_NUMBER_cc;
      l_DT_EXPIRE_TSTZ DT_EXPIRE_TSTZ_cc;
      l_VERS VERS_cc;
      l_ROUTE_ID ROUTE_ID_cc;
      l_REGULATION_ID REGULATION_ID_cc;
      l_FLG_INTERAC_MED FLG_INTERAC_MED_cc;
      l_FLG_INTERAC_ALLERGY FLG_INTERAC_ALLERGY_cc;
      l_ID_DIETARY_DRUG ID_DIETARY_DRUG_cc;
      l_ID_MANIPULATED ID_MANIPULATED_cc;
      l_ORDER_MODIFIED ORDER_MODIFIED_cc;
      l_DT_ORDER_MODIFIED DT_ORDER_MODIFIED_cc;
      l_PATIENT_NOTIFIED PATIENT_NOTIFIED_cc;
      l_ID_PROF_LAST_CHANGE ID_PROF_LAST_CHANGE_cc;
      l_ID_SW_LAST_CHANGE ID_SW_LAST_CHANGE_cc;
      l_ID_INST_LAST_CHANGE ID_INST_LAST_CHANGE_cc;
      l_ORDER_MODIFIED_ID_ISSUE ORDER_MODIFIED_ID_ISSUE_cc;
      l_ORDER_MODIFIED_MESSAGE ORDER_MODIFIED_MESSAGE_cc;
      l_ID_PAT_MEDICATION_LIST ID_PAT_MEDICATION_LIST_cc;
      l_ID_OTHER_PRODUCT ID_OTHER_PRODUCT_cc;
      l_DESC_OTHER_PRODUCT DESC_OTHER_PRODUCT_cc;
      l_STATUS_FLG STATUS_FLG_cc;
      l_STATUS_ICON STATUS_ICON_cc;
      l_STATUS_MSG STATUS_MSG_cc;
      l_STATUS_STR STATUS_STR_cc;
      l_DISPENSE DISPENSE_cc;
      l_UNIT_MEASURE_DISPENSE UNIT_MEASURE_DISPENSE_cc;
      l_FLG_DOSAGE_CHECK FLG_DOSAGE_CHECK_cc;
      l_CREATE_USER CREATE_USER_cc;
      l_CREATE_TIME CREATE_TIME_cc;
      l_CREATE_INSTITUTION CREATE_INSTITUTION_cc;
      l_UPDATE_USER UPDATE_USER_cc;
      l_UPDATE_TIME UPDATE_TIME_cc;
      l_UPDATE_INSTITUTION UPDATE_INSTITUTION_cc;
      l_FLG_FIRST_PRESC FLG_FIRST_PRESC_cc;
      l_ID_PRESC_DIRECTIONS ID_PRESC_DIRECTIONS_cc;
      l_FLG_CHRONIC_MEDICATION FLG_CHRONIC_MEDICATION_cc;
      l_CHRONIC_NOTES_NOT_ACTIVE CHRONIC_NOTES_NOT_ACTIVE_cc;
      l_ID_CHRONIC_MOTIVE ID_CHRONIC_MOTIVE_cc;
      l_ID_PROF_NOT_ACTIVE ID_PROF_NOT_ACTIVE_cc;
      l_CHRONIC_MOTIVE_DESCR CHRONIC_MOTIVE_DESCR_cc;
      l_DT_NOT_ACTIVE_TSTZ DT_NOT_ACTIVE_TSTZ_cc;
      l_PRECO_SNS PRECO_SNS_cc;
      l_PRECO_UTENTE PRECO_UTENTE_cc;
      l_PRECO_UTENTE_DIFF PRECO_UTENTE_DIFF_cc;
      l_COMPART COMPART_cc;
      l_ID_REGIME ID_REGIME_cc;
      l_ID_CDR_CALL ID_CDR_CALL_cc;
   BEGIN
      FOR i IN col_in.FIRST .. col_in.LAST loop
         l_ID_PRESCRIPTION_PHARM(i) := col_in(i).ID_PRESCRIPTION_PHARM;
         l_ID_PRESCRIPTION(i) := col_in(i).ID_PRESCRIPTION;
         l_ID_DRUG(i) := col_in(i).ID_DRUG;
         l_QTY(i) := col_in(i).QTY;
         l_GENERICO(i) := col_in(i).GENERICO;
         l_DOSAGE(i) := col_in(i).DOSAGE;
         l_JUSTIF(i) := col_in(i).JUSTIF;
         l_FLG_CI(i) := col_in(i).FLG_CI;
         l_FLG_CHEAPER(i) := col_in(i).FLG_CHEAPER;
         l_FLG_JUSTIF(i) := col_in(i).FLG_JUSTIF;
         l_FLG_STATUS(i) := col_in(i).FLG_STATUS;
         l_DESC_MANIP(i) := col_in(i).DESC_MANIP;
         l_STOCK(i) := col_in(i).STOCK;
         l_NOTES(i) := col_in(i).NOTES;
         l_FLG_ATTENTION(i) := col_in(i).FLG_ATTENTION;
         l_FLG_ATTENTION_PRINT(i) := col_in(i).FLG_ATTENTION_PRINT;
         l_DESC_DIETARY(i) := col_in(i).DESC_DIETARY;
         l_QTY_MANIP(i) := col_in(i).QTY_MANIP;
         l_UNIT_MANIP(i) := col_in(i).UNIT_MANIP;
         l_PVP(i) := col_in(i).PVP;
         l_P_REF(i) := col_in(i).P_REF;
         l_P_REF_PEN(i) := col_in(i).P_REF_PEN;
         l_DT_PRESCRIPTION_PHARM_TSTZ(i) := col_in(i).DT_PRESCRIPTION_PHARM_TSTZ;
         l_DT_ORDER(i) := col_in(i).DT_ORDER;
         l_ID_PROF_ORDER(i) := col_in(i).ID_PROF_ORDER;
         l_ID_ORDER_TYPE(i) := col_in(i).ID_ORDER_TYPE;
         l_FLG_CO_SIGN(i) := col_in(i).FLG_CO_SIGN;
         l_DT_CO_SIGN(i) := col_in(i).DT_CO_SIGN;
         l_NOTES_CO_SIGN(i) := col_in(i).NOTES_CO_SIGN;
         l_ID_PROF_CO_SIGN(i) := col_in(i).ID_PROF_CO_SIGN;
         l_ID_UNIT_MEASURE(i) := col_in(i).ID_UNIT_MEASURE;
         l_FREQUENCY(i) := col_in(i).FREQUENCY;
         l_ID_UNIT_MEASURE_FREQ(i) := col_in(i).ID_UNIT_MEASURE_FREQ;
         l_DURATION(i) := col_in(i).DURATION;
         l_ID_UNIT_MEASURE_DUR(i) := col_in(i).ID_UNIT_MEASURE_DUR;
         l_DT_START_PRESC_TSTZ(i) := col_in(i).DT_START_PRESC_TSTZ;
         l_DT_END_PRESC_TSTZ(i) := col_in(i).DT_END_PRESC_TSTZ;
         l_REFILL(i) := col_in(i).REFILL;
         l_EMB_ID(i) := col_in(i).EMB_ID;
         l_QTY_INST(i) := col_in(i).QTY_INST;
         l_UNIT_MEASURE_INST(i) := col_in(i).UNIT_MEASURE_INST;
         l_FIRST_DOSE(i) := col_in(i).FIRST_DOSE;
         l_PACKAGE_NUMBER(i) := col_in(i).PACKAGE_NUMBER;
         l_DT_EXPIRE_TSTZ(i) := col_in(i).DT_EXPIRE_TSTZ;
         l_VERS(i) := col_in(i).VERS;
         l_ROUTE_ID(i) := col_in(i).ROUTE_ID;
         l_REGULATION_ID(i) := col_in(i).REGULATION_ID;
         l_FLG_INTERAC_MED(i) := col_in(i).FLG_INTERAC_MED;
         l_FLG_INTERAC_ALLERGY(i) := col_in(i).FLG_INTERAC_ALLERGY;
         l_ID_DIETARY_DRUG(i) := col_in(i).ID_DIETARY_DRUG;
         l_ID_MANIPULATED(i) := col_in(i).ID_MANIPULATED;
         l_ORDER_MODIFIED(i) := col_in(i).ORDER_MODIFIED;
         l_DT_ORDER_MODIFIED(i) := col_in(i).DT_ORDER_MODIFIED;
         l_PATIENT_NOTIFIED(i) := col_in(i).PATIENT_NOTIFIED;
         l_ID_PROF_LAST_CHANGE(i) := col_in(i).ID_PROF_LAST_CHANGE;
         l_ID_SW_LAST_CHANGE(i) := col_in(i).ID_SW_LAST_CHANGE;
         l_ID_INST_LAST_CHANGE(i) := col_in(i).ID_INST_LAST_CHANGE;
         l_ORDER_MODIFIED_ID_ISSUE(i) := col_in(i).ORDER_MODIFIED_ID_ISSUE;
         l_ORDER_MODIFIED_MESSAGE(i) := col_in(i).ORDER_MODIFIED_MESSAGE;
         l_ID_PAT_MEDICATION_LIST(i) := col_in(i).ID_PAT_MEDICATION_LIST;
         l_ID_OTHER_PRODUCT(i) := col_in(i).ID_OTHER_PRODUCT;
         l_DESC_OTHER_PRODUCT(i) := col_in(i).DESC_OTHER_PRODUCT;
         l_STATUS_FLG(i) := col_in(i).STATUS_FLG;
         l_STATUS_ICON(i) := col_in(i).STATUS_ICON;
         l_STATUS_MSG(i) := col_in(i).STATUS_MSG;
         l_STATUS_STR(i) := col_in(i).STATUS_STR;
         l_DISPENSE(i) := col_in(i).DISPENSE;
         l_UNIT_MEASURE_DISPENSE(i) := col_in(i).UNIT_MEASURE_DISPENSE;
         l_FLG_DOSAGE_CHECK(i) := col_in(i).FLG_DOSAGE_CHECK;
         l_CREATE_USER(i) := col_in(i).CREATE_USER;
         l_CREATE_TIME(i) := col_in(i).CREATE_TIME;
         l_CREATE_INSTITUTION(i) := col_in(i).CREATE_INSTITUTION;
         l_UPDATE_USER(i) := col_in(i).UPDATE_USER;
         l_UPDATE_TIME(i) := col_in(i).UPDATE_TIME;
         l_UPDATE_INSTITUTION(i) := col_in(i).UPDATE_INSTITUTION;
         l_FLG_FIRST_PRESC(i) := col_in(i).FLG_FIRST_PRESC;
         l_ID_PRESC_DIRECTIONS(i) := col_in(i).ID_PRESC_DIRECTIONS;
         l_FLG_CHRONIC_MEDICATION(i) := col_in(i).FLG_CHRONIC_MEDICATION;
         l_CHRONIC_NOTES_NOT_ACTIVE(i) := col_in(i).CHRONIC_NOTES_NOT_ACTIVE;
         l_ID_CHRONIC_MOTIVE(i) := col_in(i).ID_CHRONIC_MOTIVE;
         l_ID_PROF_NOT_ACTIVE(i) := col_in(i).ID_PROF_NOT_ACTIVE;
         l_CHRONIC_MOTIVE_DESCR(i) := col_in(i).CHRONIC_MOTIVE_DESCR;
         l_DT_NOT_ACTIVE_TSTZ(i) := col_in(i).DT_NOT_ACTIVE_TSTZ;
         l_PRECO_SNS(i) := col_in(i).PRECO_SNS;
         l_PRECO_UTENTE(i) := col_in(i).PRECO_UTENTE;
         l_PRECO_UTENTE_DIFF(i) := col_in(i).PRECO_UTENTE_DIFF;
         l_COMPART(i) := col_in(i).COMPART;
         l_ID_REGIME(i) := col_in(i).ID_REGIME;
         l_ID_CDR_CALL(i) := col_in(i).ID_CDR_CALL;
      END LOOP;
      IF NVL (ignore_if_null_in, FALSE)
      THEN
         -- Set any columns to their current values
         -- if incoming value is NULL.
         -- Put WHEN clause on column-level triggers!
         FORALL i IN col_in.FIRST .. col_in.LAST
            UPDATE PRESCRIPTION_PHARM SET
               ID_PRESCRIPTION = NVL (l_ID_PRESCRIPTION(i), ID_PRESCRIPTION),
               ID_DRUG = NVL (l_ID_DRUG(i), ID_DRUG),
               QTY = NVL (l_QTY(i), QTY),
               GENERICO = NVL (l_GENERICO(i), GENERICO),
               DOSAGE = NVL (l_DOSAGE(i), DOSAGE),
               JUSTIF = NVL (l_JUSTIF(i), JUSTIF),
               FLG_CI = NVL (l_FLG_CI(i), FLG_CI),
               FLG_CHEAPER = NVL (l_FLG_CHEAPER(i), FLG_CHEAPER),
               FLG_JUSTIF = NVL (l_FLG_JUSTIF(i), FLG_JUSTIF),
               FLG_STATUS = NVL (l_FLG_STATUS(i), FLG_STATUS),
               DESC_MANIP = NVL (l_DESC_MANIP(i), DESC_MANIP),
               STOCK = NVL (l_STOCK(i), STOCK),
               NOTES = NVL (l_NOTES(i), NOTES),
               FLG_ATTENTION = NVL (l_FLG_ATTENTION(i), FLG_ATTENTION),
               FLG_ATTENTION_PRINT = NVL (l_FLG_ATTENTION_PRINT(i), FLG_ATTENTION_PRINT),
               DESC_DIETARY = NVL (l_DESC_DIETARY(i), DESC_DIETARY),
               QTY_MANIP = NVL (l_QTY_MANIP(i), QTY_MANIP),
               UNIT_MANIP = NVL (l_UNIT_MANIP(i), UNIT_MANIP),
               PVP = NVL (l_PVP(i), PVP),
               P_REF = NVL (l_P_REF(i), P_REF),
               P_REF_PEN = NVL (l_P_REF_PEN(i), P_REF_PEN),
               DT_PRESCRIPTION_PHARM_TSTZ = NVL (l_DT_PRESCRIPTION_PHARM_TSTZ(i), DT_PRESCRIPTION_PHARM_TSTZ),
               DT_ORDER = NVL (l_DT_ORDER(i), DT_ORDER),
               ID_PROF_ORDER = NVL (l_ID_PROF_ORDER(i), ID_PROF_ORDER),
               ID_ORDER_TYPE = NVL (l_ID_ORDER_TYPE(i), ID_ORDER_TYPE),
               FLG_CO_SIGN = NVL (l_FLG_CO_SIGN(i), FLG_CO_SIGN),
               DT_CO_SIGN = NVL (l_DT_CO_SIGN(i), DT_CO_SIGN),
               NOTES_CO_SIGN = NVL (l_NOTES_CO_SIGN(i), NOTES_CO_SIGN),
               ID_PROF_CO_SIGN = NVL (l_ID_PROF_CO_SIGN(i), ID_PROF_CO_SIGN),
               ID_UNIT_MEASURE = NVL (l_ID_UNIT_MEASURE(i), ID_UNIT_MEASURE),
               FREQUENCY = NVL (l_FREQUENCY(i), FREQUENCY),
               ID_UNIT_MEASURE_FREQ = NVL (l_ID_UNIT_MEASURE_FREQ(i), ID_UNIT_MEASURE_FREQ),
               DURATION = NVL (l_DURATION(i), DURATION),
               ID_UNIT_MEASURE_DUR = NVL (l_ID_UNIT_MEASURE_DUR(i), ID_UNIT_MEASURE_DUR),
               DT_START_PRESC_TSTZ = NVL (l_DT_START_PRESC_TSTZ(i), DT_START_PRESC_TSTZ),
               DT_END_PRESC_TSTZ = NVL (l_DT_END_PRESC_TSTZ(i), DT_END_PRESC_TSTZ),
               REFILL = NVL (l_REFILL(i), REFILL),
               EMB_ID = NVL (l_EMB_ID(i), EMB_ID),
               QTY_INST = NVL (l_QTY_INST(i), QTY_INST),
               UNIT_MEASURE_INST = NVL (l_UNIT_MEASURE_INST(i), UNIT_MEASURE_INST),
               FIRST_DOSE = NVL (l_FIRST_DOSE(i), FIRST_DOSE),
               PACKAGE_NUMBER = NVL (l_PACKAGE_NUMBER(i), PACKAGE_NUMBER),
               DT_EXPIRE_TSTZ = NVL (l_DT_EXPIRE_TSTZ(i), DT_EXPIRE_TSTZ),
               VERS = NVL (l_VERS(i), VERS),
               ROUTE_ID = NVL (l_ROUTE_ID(i), ROUTE_ID),
               REGULATION_ID = NVL (l_REGULATION_ID(i), REGULATION_ID),
               FLG_INTERAC_MED = NVL (l_FLG_INTERAC_MED(i), FLG_INTERAC_MED),
               FLG_INTERAC_ALLERGY = NVL (l_FLG_INTERAC_ALLERGY(i), FLG_INTERAC_ALLERGY),
               ID_DIETARY_DRUG = NVL (l_ID_DIETARY_DRUG(i), ID_DIETARY_DRUG),
               ID_MANIPULATED = NVL (l_ID_MANIPULATED(i), ID_MANIPULATED),
               ORDER_MODIFIED = NVL (l_ORDER_MODIFIED(i), ORDER_MODIFIED),
               DT_ORDER_MODIFIED = NVL (l_DT_ORDER_MODIFIED(i), DT_ORDER_MODIFIED),
               PATIENT_NOTIFIED = NVL (l_PATIENT_NOTIFIED(i), PATIENT_NOTIFIED),
               ID_PROF_LAST_CHANGE = NVL (l_ID_PROF_LAST_CHANGE(i), ID_PROF_LAST_CHANGE),
               ID_SW_LAST_CHANGE = NVL (l_ID_SW_LAST_CHANGE(i), ID_SW_LAST_CHANGE),
               ID_INST_LAST_CHANGE = NVL (l_ID_INST_LAST_CHANGE(i), ID_INST_LAST_CHANGE),
               ORDER_MODIFIED_ID_ISSUE = NVL (l_ORDER_MODIFIED_ID_ISSUE(i), ORDER_MODIFIED_ID_ISSUE),
               ORDER_MODIFIED_MESSAGE = NVL (l_ORDER_MODIFIED_MESSAGE(i), ORDER_MODIFIED_MESSAGE),
               ID_PAT_MEDICATION_LIST = NVL (l_ID_PAT_MEDICATION_LIST(i), ID_PAT_MEDICATION_LIST),
               ID_OTHER_PRODUCT = NVL (l_ID_OTHER_PRODUCT(i), ID_OTHER_PRODUCT),
               DESC_OTHER_PRODUCT = NVL (l_DESC_OTHER_PRODUCT(i), DESC_OTHER_PRODUCT),
               STATUS_FLG = NVL (l_STATUS_FLG(i), STATUS_FLG),
               STATUS_ICON = NVL (l_STATUS_ICON(i), STATUS_ICON),
               STATUS_MSG = NVL (l_STATUS_MSG(i), STATUS_MSG),
               STATUS_STR = NVL (l_STATUS_STR(i), STATUS_STR),
               DISPENSE = NVL (l_DISPENSE(i), DISPENSE),
               UNIT_MEASURE_DISPENSE = NVL (l_UNIT_MEASURE_DISPENSE(i), UNIT_MEASURE_DISPENSE),
               FLG_DOSAGE_CHECK = NVL (l_FLG_DOSAGE_CHECK(i), FLG_DOSAGE_CHECK),
               CREATE_USER = NVL (l_CREATE_USER(i), CREATE_USER),
               CREATE_TIME = NVL (l_CREATE_TIME(i), CREATE_TIME),
               CREATE_INSTITUTION = NVL (l_CREATE_INSTITUTION(i), CREATE_INSTITUTION),
               UPDATE_USER = NVL (l_UPDATE_USER(i), UPDATE_USER),
               UPDATE_TIME = NVL (l_UPDATE_TIME(i), UPDATE_TIME),
               UPDATE_INSTITUTION = NVL (l_UPDATE_INSTITUTION(i), UPDATE_INSTITUTION),
               FLG_FIRST_PRESC = NVL (l_FLG_FIRST_PRESC(i), FLG_FIRST_PRESC),
               ID_PRESC_DIRECTIONS = NVL (l_ID_PRESC_DIRECTIONS(i), ID_PRESC_DIRECTIONS),
               FLG_CHRONIC_MEDICATION = NVL (l_FLG_CHRONIC_MEDICATION(i), FLG_CHRONIC_MEDICATION),
               CHRONIC_NOTES_NOT_ACTIVE = NVL (l_CHRONIC_NOTES_NOT_ACTIVE(i), CHRONIC_NOTES_NOT_ACTIVE),
               ID_CHRONIC_MOTIVE = NVL (l_ID_CHRONIC_MOTIVE(i), ID_CHRONIC_MOTIVE),
               ID_PROF_NOT_ACTIVE = NVL (l_ID_PROF_NOT_ACTIVE(i), ID_PROF_NOT_ACTIVE),
               CHRONIC_MOTIVE_DESCR = NVL (l_CHRONIC_MOTIVE_DESCR(i), CHRONIC_MOTIVE_DESCR),
               DT_NOT_ACTIVE_TSTZ = NVL (l_DT_NOT_ACTIVE_TSTZ(i), DT_NOT_ACTIVE_TSTZ),
               PRECO_SNS = NVL (l_PRECO_SNS(i), PRECO_SNS),
               PRECO_UTENTE = NVL (l_PRECO_UTENTE(i), PRECO_UTENTE),
               PRECO_UTENTE_DIFF = NVL (l_PRECO_UTENTE_DIFF(i), PRECO_UTENTE_DIFF),
               COMPART = NVL (l_COMPART(i), COMPART),
               ID_REGIME = NVL (l_ID_REGIME(i), ID_REGIME),
               ID_CDR_CALL = NVL (l_ID_CDR_CALL(i), ID_CDR_CALL)
             WHERE
                ID_PRESCRIPTION_PHARM = l_ID_PRESCRIPTION_PHARM(i)
          returning rowid bulk collect into rows_out;
      ELSE
         FORALL i IN col_in.FIRST .. col_in.LAST
            UPDATE PRESCRIPTION_PHARM SET
               ID_PRESCRIPTION = l_ID_PRESCRIPTION(i),
               ID_DRUG = l_ID_DRUG(i),
               QTY = l_QTY(i),
               GENERICO = l_GENERICO(i),
               DOSAGE = l_DOSAGE(i),
               JUSTIF = l_JUSTIF(i),
               FLG_CI = l_FLG_CI(i),
               FLG_CHEAPER = l_FLG_CHEAPER(i),
               FLG_JUSTIF = l_FLG_JUSTIF(i),
               FLG_STATUS = l_FLG_STATUS(i),
               DESC_MANIP = l_DESC_MANIP(i),
               STOCK = l_STOCK(i),
               NOTES = l_NOTES(i),
               FLG_ATTENTION = l_FLG_ATTENTION(i),
               FLG_ATTENTION_PRINT = l_FLG_ATTENTION_PRINT(i),
               DESC_DIETARY = l_DESC_DIETARY(i),
               QTY_MANIP = l_QTY_MANIP(i),
               UNIT_MANIP = l_UNIT_MANIP(i),
               PVP = l_PVP(i),
               P_REF = l_P_REF(i),
               P_REF_PEN = l_P_REF_PEN(i),
               DT_PRESCRIPTION_PHARM_TSTZ = l_DT_PRESCRIPTION_PHARM_TSTZ(i),
               DT_ORDER = l_DT_ORDER(i),
               ID_PROF_ORDER = l_ID_PROF_ORDER(i),
               ID_ORDER_TYPE = l_ID_ORDER_TYPE(i),
               FLG_CO_SIGN = l_FLG_CO_SIGN(i),
               DT_CO_SIGN = l_DT_CO_SIGN(i),
               NOTES_CO_SIGN = l_NOTES_CO_SIGN(i),
               ID_PROF_CO_SIGN = l_ID_PROF_CO_SIGN(i),
               ID_UNIT_MEASURE = l_ID_UNIT_MEASURE(i),
               FREQUENCY = l_FREQUENCY(i),
               ID_UNIT_MEASURE_FREQ = l_ID_UNIT_MEASURE_FREQ(i),
               DURATION = l_DURATION(i),
               ID_UNIT_MEASURE_DUR = l_ID_UNIT_MEASURE_DUR(i),
               DT_START_PRESC_TSTZ = l_DT_START_PRESC_TSTZ(i),
               DT_END_PRESC_TSTZ = l_DT_END_PRESC_TSTZ(i),
               REFILL = l_REFILL(i),
               EMB_ID = l_EMB_ID(i),
               QTY_INST = l_QTY_INST(i),
               UNIT_MEASURE_INST = l_UNIT_MEASURE_INST(i),
               FIRST_DOSE = l_FIRST_DOSE(i),
               PACKAGE_NUMBER = l_PACKAGE_NUMBER(i),
               DT_EXPIRE_TSTZ = l_DT_EXPIRE_TSTZ(i),
               VERS = l_VERS(i),
               ROUTE_ID = l_ROUTE_ID(i),
               REGULATION_ID = l_REGULATION_ID(i),
               FLG_INTERAC_MED = l_FLG_INTERAC_MED(i),
               FLG_INTERAC_ALLERGY = l_FLG_INTERAC_ALLERGY(i),
               ID_DIETARY_DRUG = l_ID_DIETARY_DRUG(i),
               ID_MANIPULATED = l_ID_MANIPULATED(i),
               ORDER_MODIFIED = l_ORDER_MODIFIED(i),
               DT_ORDER_MODIFIED = l_DT_ORDER_MODIFIED(i),
               PATIENT_NOTIFIED = l_PATIENT_NOTIFIED(i),
               ID_PROF_LAST_CHANGE = l_ID_PROF_LAST_CHANGE(i),
               ID_SW_LAST_CHANGE = l_ID_SW_LAST_CHANGE(i),
               ID_INST_LAST_CHANGE = l_ID_INST_LAST_CHANGE(i),
               ORDER_MODIFIED_ID_ISSUE = l_ORDER_MODIFIED_ID_ISSUE(i),
               ORDER_MODIFIED_MESSAGE = l_ORDER_MODIFIED_MESSAGE(i),
               ID_PAT_MEDICATION_LIST = l_ID_PAT_MEDICATION_LIST(i),
               ID_OTHER_PRODUCT = l_ID_OTHER_PRODUCT(i),
               DESC_OTHER_PRODUCT = l_DESC_OTHER_PRODUCT(i),
               STATUS_FLG = l_STATUS_FLG(i),
               STATUS_ICON = l_STATUS_ICON(i),
               STATUS_MSG = l_STATUS_MSG(i),
               STATUS_STR = l_STATUS_STR(i),
               DISPENSE = l_DISPENSE(i),
               UNIT_MEASURE_DISPENSE = l_UNIT_MEASURE_DISPENSE(i),
               FLG_DOSAGE_CHECK = l_FLG_DOSAGE_CHECK(i),
               CREATE_USER = l_CREATE_USER(i),
               CREATE_TIME = l_CREATE_TIME(i),
               CREATE_INSTITUTION = l_CREATE_INSTITUTION(i),
               UPDATE_USER = l_UPDATE_USER(i),
               UPDATE_TIME = l_UPDATE_TIME(i),
               UPDATE_INSTITUTION = l_UPDATE_INSTITUTION(i),
               FLG_FIRST_PRESC = l_FLG_FIRST_PRESC(i),
               ID_PRESC_DIRECTIONS = l_ID_PRESC_DIRECTIONS(i),
               FLG_CHRONIC_MEDICATION = l_FLG_CHRONIC_MEDICATION(i),
               CHRONIC_NOTES_NOT_ACTIVE = l_CHRONIC_NOTES_NOT_ACTIVE(i),
               ID_CHRONIC_MOTIVE = l_ID_CHRONIC_MOTIVE(i),
               ID_PROF_NOT_ACTIVE = l_ID_PROF_NOT_ACTIVE(i),
               CHRONIC_MOTIVE_DESCR = l_CHRONIC_MOTIVE_DESCR(i),
               DT_NOT_ACTIVE_TSTZ = l_DT_NOT_ACTIVE_TSTZ(i),
               PRECO_SNS = l_PRECO_SNS(i),
               PRECO_UTENTE = l_PRECO_UTENTE(i),
               PRECO_UTENTE_DIFF = l_PRECO_UTENTE_DIFF(i),
               COMPART = l_COMPART(i),
               ID_REGIME = l_ID_REGIME(i),
               ID_CDR_CALL = l_ID_CDR_CALL(i)
             WHERE
                ID_PRESCRIPTION_PHARM = l_ID_PRESCRIPTION_PHARM(i)
        returning rowid bulk collect into rows_out  ;
      END IF;
   END upd;


   PROCEDURE upd (
      col_in IN PRESCRIPTION_PHARM_tc,
      ignore_if_null_in IN BOOLEAN := TRUE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
     rows_out TABLE_VARCHAR;
   BEGIN
      upd (
      col_in ,
      ignore_if_null_in
     ,handle_error_in
     , rows_out
      );
   END upd;

   FUNCTION dynupdstr (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL)

   RETURN VARCHAR2
   IS
   BEGIN
      RETURN
         'BEGIN UPDATE PRESCRIPTION_PHARM
             SET ' || colname_in || ' = :value
           WHERE ' || NVL (where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;' ;
   END dynupdstr;

   FUNCTION dynupdstr_no_rows_out (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL)

   RETURN VARCHAR2
   IS
   BEGIN
      RETURN
         'UPDATE PRESCRIPTION_PHARM
             SET ' || colname_in || ' = :value
           WHERE ' || NVL (where_in, '1=1');
   END dynupdstr_no_rows_out;























  PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
      , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   )
   IS
   BEGIN
      EXECUTE IMMEDIATE 'BEGIN UPDATE PRESCRIPTION_PHARM set ' || colname_in || '=' || colname_in || ' + ' || nvl(increment_value_in,1) || ' WHERE ' || NVL (where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
      USING OUT rows_out;
   EXCEPTION
      WHEN DUP_VAL_ON_INDEX
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_err_instance_id PLS_INTEGER;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'DUPLICATE-VALUE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
      WHEN e_null_column_value
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           v_errm VARCHAR2(2000) := DBMS_UTILITY.FORMAT_ERROR_STACK;
           dot1loc INTEGER;
           dot2loc INTEGER;
           parenloc INTEGER;
           c_owner ALL_CONSTRAINTS.OWNER%TYPE;
           c_tabname ALL_TABLES.TABLE_NAME%TYPE;
           c_colname ALL_TAB_COLUMNS.COLUMN_NAME%TYPE;
        BEGIN
           dot1loc := INSTR (v_errm, '.', 1, 1);
           dot2loc := INSTR (v_errm, '.', 1, 2);
           parenloc := INSTR (v_errm, '(');
           c_owner :=SUBSTR (v_errm, parenloc+1, dot1loc-parenloc-1);
           c_tabname := SUBSTR (v_errm, dot1loc+1, dot2loc-dot1loc-1);
           c_colname := SUBSTR (v_errm, dot2loc+1, INSTR (v_errm,')')-dot2loc-1);

           pk_alert_exceptions.raise_error (
                error_name_in => 'COLUMN-CANNOT-BE-NULL'
               ,name1_in => 'OWNER'
               ,value1_in => c_owner
               ,name2_in => 'TABLE_NAME'
               ,value2_in => c_tabname
               ,name3_in => 'COLUMN_NAME'
               ,value3_in => c_colname);
        END;
        END IF;
   END increment_onecol;

   PROCEDURE increment_onecol (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE,
      where_in IN VARCHAR2 := NULL
     , increment_value_in IN NUMBER DEFAULT 1
     ,handle_error_in IN BOOLEAN := TRUE
   )
   IS
   rows_out table_varchar;
   BEGIN
      EXECUTE IMMEDIATE 'UPDATE PRESCRIPTION_PHARM set ' || colname_in || '=' || colname_in || ' + ' || nvl(increment_value_in,1) || ' WHERE ' || NVL (where_in, '1=1');
   EXCEPTION
      WHEN DUP_VAL_ON_INDEX
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_err_instance_id PLS_INTEGER;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'DUPLICATE-VALUE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
      WHEN e_null_column_value
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           v_errm VARCHAR2(2000) := DBMS_UTILITY.FORMAT_ERROR_STACK;
           dot1loc INTEGER;
           dot2loc INTEGER;
           parenloc INTEGER;
           c_owner ALL_CONSTRAINTS.OWNER%TYPE;
           c_tabname ALL_TABLES.TABLE_NAME%TYPE;
           c_colname ALL_TAB_COLUMNS.COLUMN_NAME%TYPE;
        BEGIN
           dot1loc := INSTR (v_errm, '.', 1, 1);
           dot2loc := INSTR (v_errm, '.', 1, 2);
           parenloc := INSTR (v_errm, '(');
           c_owner :=SUBSTR (v_errm, parenloc+1, dot1loc-parenloc-1);
           c_tabname := SUBSTR (v_errm, dot1loc+1, dot2loc-dot1loc-1);
           c_colname := SUBSTR (v_errm, dot2loc+1, INSTR (v_errm,')')-dot2loc-1);

           pk_alert_exceptions.raise_error (
                error_name_in => 'COLUMN-CANNOT-BE-NULL'
               ,name1_in => 'OWNER'
               ,value1_in => c_owner
               ,name2_in => 'TABLE_NAME'
               ,value2_in => c_tabname
               ,name3_in => 'COLUMN_NAME'
               ,value3_in => c_colname);
        END;
        END IF;
   END increment_onecol;


   -- Delete functionality


   PROCEDURE del (
      id_prescription_pharm_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM PRESCRIPTION_PHARM
       WHERE
          ID_PRESCRIPTION_PHARM = id_prescription_pharm_in
       RETURNING ROWID BULK COLLECT INTO rows_out
         ;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del;




   PROCEDURE del (
      id_prescription_pharm_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
rows_out TABLE_VARCHAR;
   BEGIN

del (
      id_prescription_pharm_in => id_prescription_pharm_in
     ,handle_error_in => handle_error_in
, rows_out => rows_out
      );

   END del;








   -- Delete all rows for primary key column ID_PRESCRIPTION_PHARM
   PROCEDURE del_ID_PRESCRIPTION_PHARM (
      id_prescription_pharm_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
     )
   IS
   BEGIN
      DELETE FROM PRESCRIPTION_PHARM
       WHERE ID_PRESCRIPTION_PHARM = id_prescription_pharm_in
      RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_ID_PRESCRIPTION_PHARM;






   -- Delete all rows for primary key column ID_PRESCRIPTION_PHARM
   PROCEDURE del_ID_PRESCRIPTION_PHARM (
      id_prescription_pharm_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION_PHARM%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_ID_PRESCRIPTION_PHARM (
      id_prescription_pharm_in => id_prescription_pharm_in
     ,handle_error_in => handle_error_in
, rows_out => rows_out
     );
   END del_ID_PRESCRIPTION_PHARM;















   PROCEDURE del_PP_CANCEL_REASON_CM_FK (
      id_chronic_motive_in IN PRESCRIPTION_PHARM.ID_CHRONIC_MOTIVE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM PRESCRIPTION_PHARM
       WHERE
          ID_CHRONIC_MOTIVE = del_PP_CANCEL_REASON_CM_FK.id_chronic_motive_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_PP_CANCEL_REASON_CM_FK;



PROCEDURE del_PP_CANCEL_REASON_CM_FK (
      id_chronic_motive_in IN PRESCRIPTION_PHARM.ID_CHRONIC_MOTIVE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_PP_CANCEL_REASON_CM_FK (
      id_chronic_motive_in => id_chronic_motive_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_PP_CANCEL_REASON_CM_FK;





   PROCEDURE del_PP_CC_FK (
      id_cdr_call_in IN PRESCRIPTION_PHARM.ID_CDR_CALL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM PRESCRIPTION_PHARM
       WHERE
          ID_CDR_CALL = del_PP_CC_FK.id_cdr_call_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_PP_CC_FK;



PROCEDURE del_PP_CC_FK (
      id_cdr_call_in IN PRESCRIPTION_PHARM.ID_CDR_CALL%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_PP_CC_FK (
      id_cdr_call_in => id_cdr_call_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_PP_CC_FK;





   PROCEDURE del_PP_ID_REGIME_FK (
      id_regime_in IN PRESCRIPTION_PHARM.ID_REGIME%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM PRESCRIPTION_PHARM
       WHERE
          ID_REGIME = del_PP_ID_REGIME_FK.id_regime_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_PP_ID_REGIME_FK;



PROCEDURE del_PP_ID_REGIME_FK (
      id_regime_in IN PRESCRIPTION_PHARM.ID_REGIME%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_PP_ID_REGIME_FK (
      id_regime_in => id_regime_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_PP_ID_REGIME_FK;





   PROCEDURE del_PP_IPML_FK (
      id_pat_medication_list_in IN PRESCRIPTION_PHARM.ID_PAT_MEDICATION_LIST%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM PRESCRIPTION_PHARM
       WHERE
          ID_PAT_MEDICATION_LIST = del_PP_IPML_FK.id_pat_medication_list_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_PP_IPML_FK;



PROCEDURE del_PP_IPML_FK (
      id_pat_medication_list_in IN PRESCRIPTION_PHARM.ID_PAT_MEDICATION_LIST%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_PP_IPML_FK (
      id_pat_medication_list_in => id_pat_medication_list_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_PP_IPML_FK;





   PROCEDURE del_PP_MANIP_IV_FK (
      id_manipulated_in IN PRESCRIPTION_PHARM.ID_MANIPULATED%TYPE,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM PRESCRIPTION_PHARM
       WHERE
          ID_MANIPULATED = del_PP_MANIP_IV_FK.id_manipulated_in AND
          VERS = del_PP_MANIP_IV_FK.vers_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_PP_MANIP_IV_FK;



PROCEDURE del_PP_MANIP_IV_FK (
      id_manipulated_in IN PRESCRIPTION_PHARM.ID_MANIPULATED%TYPE,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_PP_MANIP_IV_FK (
      id_manipulated_in => id_manipulated_in,
      vers_in => vers_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_PP_MANIP_IV_FK;





   PROCEDURE del_PP_MED_EI_FK (
      emb_id_in IN PRESCRIPTION_PHARM.EMB_ID%TYPE,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM PRESCRIPTION_PHARM
       WHERE
          EMB_ID = del_PP_MED_EI_FK.emb_id_in AND
          VERS = del_PP_MED_EI_FK.vers_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_PP_MED_EI_FK;



PROCEDURE del_PP_MED_EI_FK (
      emb_id_in IN PRESCRIPTION_PHARM.EMB_ID%TYPE,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_PP_MED_EI_FK (
      emb_id_in => emb_id_in,
      vers_in => vers_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_PP_MED_EI_FK;





   PROCEDURE del_PPN_DRUG_FK (
      id_drug_in IN PRESCRIPTION_PHARM.ID_DRUG%TYPE,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM PRESCRIPTION_PHARM
       WHERE
          ID_DRUG = del_PPN_DRUG_FK.id_drug_in AND
          VERS = del_PPN_DRUG_FK.vers_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_PPN_DRUG_FK;



PROCEDURE del_PPN_DRUG_FK (
      id_drug_in IN PRESCRIPTION_PHARM.ID_DRUG%TYPE,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_PPN_DRUG_FK (
      id_drug_in => id_drug_in,
      vers_in => vers_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_PPN_DRUG_FK;





   PROCEDURE del_PPN_PRN_FK (
      id_prescription_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM PRESCRIPTION_PHARM
       WHERE
          ID_PRESCRIPTION = del_PPN_PRN_FK.id_prescription_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_PPN_PRN_FK;



PROCEDURE del_PPN_PRN_FK (
      id_prescription_in IN PRESCRIPTION_PHARM.ID_PRESCRIPTION%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_PPN_PRN_FK (
      id_prescription_in => id_prescription_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_PPN_PRN_FK;





   PROCEDURE del_PP_PDIR_FK (
      id_presc_directions_in IN PRESCRIPTION_PHARM.ID_PRESC_DIRECTIONS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM PRESCRIPTION_PHARM
       WHERE
          ID_PRESC_DIRECTIONS = del_PP_PDIR_FK.id_presc_directions_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_PP_PDIR_FK;



PROCEDURE del_PP_PDIR_FK (
      id_presc_directions_in IN PRESCRIPTION_PHARM.ID_PRESC_DIRECTIONS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_PP_PDIR_FK (
      id_presc_directions_in => id_presc_directions_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_PP_PDIR_FK;





   PROCEDURE del_PP_PH_RI_FK (
      route_id_in IN PRESCRIPTION_PHARM.ROUTE_ID%TYPE,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM PRESCRIPTION_PHARM
       WHERE
          ROUTE_ID = del_PP_PH_RI_FK.route_id_in AND
          VERS = del_PP_PH_RI_FK.vers_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_PP_PH_RI_FK;



PROCEDURE del_PP_PH_RI_FK (
      route_id_in IN PRESCRIPTION_PHARM.ROUTE_ID%TYPE,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_PP_PH_RI_FK (
      route_id_in => route_id_in,
      vers_in => vers_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_PP_PH_RI_FK;





   PROCEDURE del_PP_PR_DI_FK (
      regulation_id_in IN PRESCRIPTION_PHARM.REGULATION_ID%TYPE,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM PRESCRIPTION_PHARM
       WHERE
          REGULATION_ID = del_PP_PR_DI_FK.regulation_id_in AND
          VERS = del_PP_PR_DI_FK.vers_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_PP_PR_DI_FK;



PROCEDURE del_PP_PR_DI_FK (
      regulation_id_in IN PRESCRIPTION_PHARM.REGULATION_ID%TYPE,
      vers_in IN PRESCRIPTION_PHARM.VERS%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_PP_PR_DI_FK (
      regulation_id_in => regulation_id_in,
      vers_in => vers_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_PP_PR_DI_FK;





   PROCEDURE del_PP_PROF_CM_FK (
      id_prof_not_active_in IN PRESCRIPTION_PHARM.ID_PROF_NOT_ACTIVE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM PRESCRIPTION_PHARM
       WHERE
          ID_PROF_NOT_ACTIVE = del_PP_PROF_CM_FK.id_prof_not_active_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_PP_PROF_CM_FK;



PROCEDURE del_PP_PROF_CM_FK (
      id_prof_not_active_in IN PRESCRIPTION_PHARM.ID_PROF_NOT_ACTIVE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_PP_PROF_CM_FK (
      id_prof_not_active_in => id_prof_not_active_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_PP_PROF_CM_FK;





   PROCEDURE del_PP_UME_DISP_FK (
      unit_measure_dispense_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_DISPENSE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      DELETE FROM PRESCRIPTION_PHARM
       WHERE
          UNIT_MEASURE_DISPENSE = del_PP_UME_DISP_FK.unit_measure_dispense_in
       RETURNING ROWID BULK COLLECT INTO rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_PP_UME_DISP_FK;



PROCEDURE del_PP_UME_DISP_FK (
      unit_measure_dispense_in IN PRESCRIPTION_PHARM.UNIT_MEASURE_DISPENSE%TYPE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   rows_out TABLE_VARCHAR;
   BEGIN
del_PP_UME_DISP_FK (
      unit_measure_dispense_in => unit_measure_dispense_in
     ,handle_error_in => handle_error_in
     , rows_out => rows_out
      );
   END del_PP_UME_DISP_FK;












   -- Deletions using dynamic SQL
   FUNCTION dyndelstr (where_in IN VARCHAR2) RETURN VARCHAR2
   IS
   BEGIN
      IF where_in IS NULL
      THEN
         RETURN 'DELETE FROM PRESCRIPTION_PHARM';
      ELSE
         RETURN
            'DELETE FROM PRESCRIPTION_PHARM WHERE ' || where_in;
      END IF;
   END dyndelstr;

   FUNCTION dyncoldelstr (
      colname_in IN ALL_TAB_COLUMNS.COLUMN_NAME%TYPE)
      RETURN VARCHAR2
   IS
   BEGIN
      RETURN dyndelstr ( colname_in || ' = :value' );
   END;

   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   BEGIN
      EXECUTE IMMEDIATE dyndelstr (where_clause_in);
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_by;





   PROCEDURE del_by (
      where_clause_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      EXECUTE IMMEDIATE 'BEGIN ' || dyndelstr (where_clause_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;' using OUT rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_by;





   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
   )
   IS
   BEGIN
      EXECUTE IMMEDIATE dyncoldelstr (colname_in)
         USING colvalue_in;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_by_col;






   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN VARCHAR2
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   )
   IS
   BEGIN
      EXECUTE IMMEDIATE 'BEGIN ' || dyncoldelstr (colname_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
         USING IN colvalue_in, OUT rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_by_col;







   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   BEGIN
      EXECUTE IMMEDIATE dyncoldelstr (colname_in)
         USING colvalue_in;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_by_col;







   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN DATE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      EXECUTE IMMEDIATE 'BEGIN ' || dyncoldelstr (colname_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
         USING IN colvalue_in, OUT rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_by_col;







   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
      )
   IS
   BEGIN
      EXECUTE IMMEDIATE dyncoldelstr (colname_in)
         USING colvalue_in;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_by_col;







   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN TIMESTAMP WITH LOCAL TIME ZONE
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
      )
   IS
   BEGIN
      EXECUTE IMMEDIATE 'BEGIN ' || dyncoldelstr (colname_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
         USING IN colvalue_in, OUT rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_by_col;







   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
   )
   IS
   BEGIN
      EXECUTE IMMEDIATE dyncoldelstr (colname_in)
         USING colvalue_in;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_by_col;






   PROCEDURE del_by_col (
      colname_in IN VARCHAR2,
      colvalue_in IN NUMBER
     ,handle_error_in IN BOOLEAN := TRUE
     , rows_out OUT TABLE_VARCHAR
   )
   IS
   BEGIN
     EXECUTE IMMEDIATE 'BEGIN ' || dyncoldelstr (colname_in) || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
         USING IN colvalue_in, OUT rows_out;
   EXCEPTION
      WHEN e_check_constraint_failure
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
        BEGIN
           get_constraint_info (l_owner, l_name);
           pk_alert_exceptions.raise_error (
              error_name_in => 'CHECK-CONSTRAINT-FAILURE'
             ,name1_in => 'OWNER'
             ,value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME'
             ,value2_in => l_name
             ,name3_in => 'TABLE_NAME'
             ,value3_in => 'PRESCRIPTION_PHARM');
        END;
        END IF;
      WHEN e_integ_constraint_failure OR e_no_parent_key OR e_child_record_found
      THEN
        IF NOT handle_error_in THEN RAISE;
        ELSE
        DECLARE
           l_owner ALL_CONSTRAINTS.OWNER%TYPE;
           l_name ALL_CONSTRAINTS.CONSTRAINT_NAME%TYPE;
           l_id PLS_INTEGER;
           l_err_name VARCHAR2(32767) DEFAULT 'NO-PARENT-KEY-FOUND';
        BEGIN
           get_constraint_info (l_owner, l_name);
           IF SQLCODE = -2292 -- Child record found
           THEN
              l_err_name := 'CHILD-RECORD-FOUND' ;
           END IF;
           pk_alert_exceptions.register_error (
              error_name_in => l_err_name
             ,err_instance_id_out => l_id
             ,name1_in => 'OWNER', value1_in => l_owner
             ,name2_in => 'CONSTRAINT_NAME', value2_in => l_name
             ,name3_in => 'TABLE_NAME', value3_in => 'PRESCRIPTION_PHARM');
           pk_alert_exceptions.raise_error_instance (err_instance_id_in => l_id);
        END;
        END IF;
   END del_by_col;







   -- Initialize a record with default values for columns in the table.
   PROCEDURE initrec (
      prescription_pharm_inout IN OUT PRESCRIPTION_PHARM%ROWTYPE
   )
   IS
   BEGIN
      prescription_pharm_inout.ID_PRESCRIPTION_PHARM := NULL;
      prescription_pharm_inout.ID_PRESCRIPTION := NULL;
      prescription_pharm_inout.ID_DRUG := NULL;
      prescription_pharm_inout.QTY := NULL;
      prescription_pharm_inout.GENERICO := NULL;
      prescription_pharm_inout.DOSAGE := NULL;
      prescription_pharm_inout.JUSTIF := NULL;
      prescription_pharm_inout.FLG_CI := 'N';
      prescription_pharm_inout.FLG_CHEAPER := 'N';
      prescription_pharm_inout.FLG_JUSTIF := 'N';
      prescription_pharm_inout.FLG_STATUS := NULL;
      prescription_pharm_inout.DESC_MANIP := NULL;
      prescription_pharm_inout.STOCK := NULL;
      prescription_pharm_inout.NOTES := NULL;
      prescription_pharm_inout.FLG_ATTENTION := NULL;
      prescription_pharm_inout.FLG_ATTENTION_PRINT := NULL;
      prescription_pharm_inout.DESC_DIETARY := NULL;
      prescription_pharm_inout.QTY_MANIP := NULL;
      prescription_pharm_inout.UNIT_MANIP := NULL;
      prescription_pharm_inout.PVP := NULL;
      prescription_pharm_inout.P_REF := NULL;
      prescription_pharm_inout.P_REF_PEN := NULL;
      prescription_pharm_inout.DT_PRESCRIPTION_PHARM_TSTZ := NULL;
      prescription_pharm_inout.DT_ORDER := NULL;
      prescription_pharm_inout.ID_PROF_ORDER := NULL;
      prescription_pharm_inout.ID_ORDER_TYPE := NULL;
      prescription_pharm_inout.FLG_CO_SIGN := 'N';
      prescription_pharm_inout.DT_CO_SIGN := NULL;
      prescription_pharm_inout.NOTES_CO_SIGN := NULL;
      prescription_pharm_inout.ID_PROF_CO_SIGN := NULL;
      prescription_pharm_inout.ID_UNIT_MEASURE := NULL;
      prescription_pharm_inout.FREQUENCY := NULL;
      prescription_pharm_inout.ID_UNIT_MEASURE_FREQ := NULL;
      prescription_pharm_inout.DURATION := NULL;
      prescription_pharm_inout.ID_UNIT_MEASURE_DUR := NULL;
      prescription_pharm_inout.DT_START_PRESC_TSTZ := NULL;
      prescription_pharm_inout.DT_END_PRESC_TSTZ := NULL;
      prescription_pharm_inout.REFILL := NULL;
      prescription_pharm_inout.EMB_ID := NULL;
      prescription_pharm_inout.QTY_INST := NULL;
      prescription_pharm_inout.UNIT_MEASURE_INST := NULL;
      prescription_pharm_inout.FIRST_DOSE := NULL;
      prescription_pharm_inout.PACKAGE_NUMBER := NULL;
      prescription_pharm_inout.DT_EXPIRE_TSTZ := NULL;
      prescription_pharm_inout.VERS := NULL;
      prescription_pharm_inout.ROUTE_ID := NULL;
      prescription_pharm_inout.REGULATION_ID := NULL;
      prescription_pharm_inout.FLG_INTERAC_MED := 'N';
      prescription_pharm_inout.FLG_INTERAC_ALLERGY := 'N';
      prescription_pharm_inout.ID_DIETARY_DRUG := NULL;
      prescription_pharm_inout.ID_MANIPULATED := NULL;
      prescription_pharm_inout.ORDER_MODIFIED := NULL;
      prescription_pharm_inout.DT_ORDER_MODIFIED := NULL;
      prescription_pharm_inout.PATIENT_NOTIFIED := NULL;
      prescription_pharm_inout.ID_PROF_LAST_CHANGE := NULL;
      prescription_pharm_inout.ID_SW_LAST_CHANGE := NULL;
      prescription_pharm_inout.ID_INST_LAST_CHANGE := NULL;
      prescription_pharm_inout.ORDER_MODIFIED_ID_ISSUE := NULL;
      prescription_pharm_inout.ORDER_MODIFIED_MESSAGE := NULL;
      prescription_pharm_inout.ID_PAT_MEDICATION_LIST := NULL;
      prescription_pharm_inout.ID_OTHER_PRODUCT := NULL;
      prescription_pharm_inout.DESC_OTHER_PRODUCT := NULL;
      prescription_pharm_inout.STATUS_FLG := NULL;
      prescription_pharm_inout.STATUS_ICON := NULL;
      prescription_pharm_inout.STATUS_MSG := NULL;
      prescription_pharm_inout.STATUS_STR := NULL;
      prescription_pharm_inout.DISPENSE := NULL;
      prescription_pharm_inout.UNIT_MEASURE_DISPENSE := NULL;
      prescription_pharm_inout.FLG_DOSAGE_CHECK := NULL;
      prescription_pharm_inout.CREATE_USER := NULL;
      prescription_pharm_inout.CREATE_TIME := NULL;
      prescription_pharm_inout.CREATE_INSTITUTION := NULL;
      prescription_pharm_inout.UPDATE_USER := NULL;
      prescription_pharm_inout.UPDATE_TIME := NULL;
      prescription_pharm_inout.UPDATE_INSTITUTION := NULL;
      prescription_pharm_inout.FLG_FIRST_PRESC := NULL;
      prescription_pharm_inout.ID_PRESC_DIRECTIONS := NULL;
      prescription_pharm_inout.FLG_CHRONIC_MEDICATION := 'N';
      prescription_pharm_inout.CHRONIC_NOTES_NOT_ACTIVE := NULL;
      prescription_pharm_inout.ID_CHRONIC_MOTIVE := NULL;
      prescription_pharm_inout.ID_PROF_NOT_ACTIVE := NULL;
      prescription_pharm_inout.CHRONIC_MOTIVE_DESCR := NULL;
      prescription_pharm_inout.DT_NOT_ACTIVE_TSTZ := NULL;
      prescription_pharm_inout.PRECO_SNS := NULL;
      prescription_pharm_inout.PRECO_UTENTE := NULL;
      prescription_pharm_inout.PRECO_UTENTE_DIFF := NULL;
      prescription_pharm_inout.COMPART := NULL;
      prescription_pharm_inout.ID_REGIME := NULL;
      prescription_pharm_inout.ID_CDR_CALL := NULL;
   END initrec;

   FUNCTION initrec RETURN PRESCRIPTION_PHARM%ROWTYPE
   IS
      l_prescription_pharm PRESCRIPTION_PHARM%ROWTYPE;
   BEGIN
      l_prescription_pharm.FLG_CI := 'N';
      l_prescription_pharm.FLG_CHEAPER := 'N';
      l_prescription_pharm.FLG_JUSTIF := 'N';
      l_prescription_pharm.FLG_CO_SIGN := 'N';
      l_prescription_pharm.FLG_INTERAC_MED := 'N';
      l_prescription_pharm.FLG_INTERAC_ALLERGY := 'N';
      l_prescription_pharm.FLG_CHRONIC_MEDICATION := 'N';
      RETURN l_prescription_pharm;
   END initrec;


   FUNCTION get_data_rowid(
        rows_in IN TABLE_VARCHAR
        ) RETURN PRESCRIPTION_PHARM_tc
   IS
        data PRESCRIPTION_PHARM_tc;
   BEGIN
        select * bulk collect into data from PRESCRIPTION_PHARM where rowid in (select /*+opt_estimate(table,t,scale_rows=0.0000001))*/ * from table(rows_in) t);
        return data;
        EXCEPTION
      WHEN OTHERS THEN
        pk_alert_exceptions.raise_error (
           error_name_in => 'get_data_rowid'
           );
   END get_data_rowid;


   FUNCTION get_data_rowid_pat(
        rows_in IN TABLE_VARCHAR
        ) RETURN PRESCRIPTION_PHARM_tc
   is
        PRAGMA AUTONOMOUS_TRANSACTION;
        data PRESCRIPTION_PHARM_tc;
   BEGIN
        data := get_data_rowid(rows_in);
        commit;
        return data;
        EXCEPTION
      WHEN OTHERS THEN
        pk_alert_exceptions.raise_error (
           error_name_in => 'get_data_rowid'
           );
        rollback;
    END get_data_rowid_pat;

BEGIN
   NULL;
END TS_PRESCRIPTION_PHARM;
/
