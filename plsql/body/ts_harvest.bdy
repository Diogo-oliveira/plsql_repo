/*-- Last Change Revision: $Rev: 2028192 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:44:26 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE BODY ts_harvest
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2019-09-06 13:14:04
| Created By: ALERT
*/
 IS

    e_null_column_value EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_null_column_value, -1400);

    e_existing_fky_reference EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_existing_fky_reference, -2266);

    e_check_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_check_constraint_failure, -2290);

    e_no_parent_key EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_no_parent_key, -2291);

    e_child_record_found EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_child_record_found, -2292);

    e_forall_error EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_forall_error, -24381);

    -- Defined for backward compatibilty.
    e_integ_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_integ_constraint_failure, -2291);

    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN harvest.id_harvest%TYPE IS
        retval harvest.id_harvest%TYPE;
    BEGIN
        IF sequence_in IS NULL
        THEN
            retval := seq_harvest.nextval;
        ELSE
            EXECUTE IMMEDIATE 'SELECT ' || sequence_in || '.NEXTVAL FROM dual'
                INTO retval;
        END IF;
        RETURN retval;
    END next_key;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_episode_in            IN harvest.id_episode%TYPE DEFAULT NULL,
        id_prof_harvest_in       IN harvest.id_prof_harvest%TYPE DEFAULT NULL,
        flg_status_in            IN harvest.flg_status%TYPE DEFAULT NULL,
        num_recipient_in         IN harvest.num_recipient%TYPE DEFAULT NULL,
        notes_in                 IN harvest.notes%TYPE DEFAULT NULL,
        id_body_part_in          IN harvest.id_body_part%TYPE DEFAULT NULL,
        id_prof_mov_tube_in      IN harvest.id_prof_mov_tube%TYPE DEFAULT NULL,
        id_prof_receive_tube_in  IN harvest.id_prof_receive_tube%TYPE DEFAULT NULL,
        id_room_harvest_in       IN harvest.id_room_harvest%TYPE DEFAULT NULL,
        id_room_receive_tube_in  IN harvest.id_room_receive_tube%TYPE DEFAULT NULL,
        id_prof_cancels_in       IN harvest.id_prof_cancels%TYPE DEFAULT NULL,
        notes_cancel_in          IN harvest.notes_cancel%TYPE DEFAULT NULL,
        barcode_in               IN harvest.barcode%TYPE DEFAULT NULL,
        id_institution_in        IN harvest.id_institution%TYPE DEFAULT NULL,
        id_episode_write_in      IN harvest.id_episode_write%TYPE DEFAULT NULL,
        dt_harvest_tstz_in       IN harvest.dt_harvest_tstz%TYPE DEFAULT NULL,
        dt_mov_begin_tstz_in     IN harvest.dt_mov_begin_tstz%TYPE DEFAULT NULL,
        dt_lab_reception_tstz_in IN harvest.dt_lab_reception_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in        IN harvest.dt_cancel_tstz%TYPE DEFAULT NULL,
        flg_chargeable_in        IN harvest.flg_chargeable%TYPE DEFAULT NULL,
        id_visit_in              IN harvest.id_visit%TYPE DEFAULT NULL,
        id_patient_in            IN harvest.id_patient%TYPE DEFAULT NULL,
        flg_print_in             IN harvest.flg_print%TYPE DEFAULT 'S',
        create_user_in           IN harvest.create_user%TYPE DEFAULT NULL,
        create_time_in           IN harvest.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN harvest.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN harvest.update_user%TYPE DEFAULT NULL,
        update_time_in           IN harvest.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN harvest.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in      IN harvest.id_cancel_reason%TYPE DEFAULT NULL,
        flg_orig_harvest_in      IN harvest.flg_orig_harvest%TYPE DEFAULT NULL,
        dt_harvest_reg_tstz_in   IN harvest.dt_harvest_reg_tstz%TYPE DEFAULT NULL,
        id_rep_coll_reason_in    IN harvest.id_rep_coll_reason%TYPE DEFAULT NULL,
        id_harvest_group_in      IN harvest.id_harvest_group%TYPE DEFAULT NULL,
        dt_begin_harvest_in      IN harvest.dt_begin_harvest%TYPE DEFAULT NULL,
        prof_dep_clin_serv_in    IN harvest.prof_dep_clin_serv%TYPE DEFAULT NULL,
        flg_col_inst_in          IN harvest.flg_col_inst%TYPE DEFAULT NULL,
        flg_mov_tube_in          IN harvest.flg_mov_tube%TYPE DEFAULT NULL,
        flg_laterality_in        IN harvest.flg_laterality%TYPE DEFAULT NULL,
        flg_collection_method_in IN harvest.flg_collection_method%TYPE DEFAULT NULL,
        id_specimen_condition_in IN harvest.id_specimen_condition%TYPE DEFAULT NULL,
        amount_in                IN harvest.amount%TYPE DEFAULT NULL,
        id_revised_by_in         IN harvest.id_revised_by%TYPE DEFAULT NULL,
        harvest_instructions_in  IN harvest.harvest_instructions%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_pky harvest.id_harvest%TYPE := next_key;
    BEGIN
        ins(id_harvest_in            => l_pky,
            id_episode_in            => id_episode_in,
            id_prof_harvest_in       => id_prof_harvest_in,
            flg_status_in            => flg_status_in,
            num_recipient_in         => num_recipient_in,
            notes_in                 => notes_in,
            id_body_part_in          => id_body_part_in,
            id_prof_mov_tube_in      => id_prof_mov_tube_in,
            id_prof_receive_tube_in  => id_prof_receive_tube_in,
            id_room_harvest_in       => id_room_harvest_in,
            id_room_receive_tube_in  => id_room_receive_tube_in,
            id_prof_cancels_in       => id_prof_cancels_in,
            notes_cancel_in          => notes_cancel_in,
            barcode_in               => barcode_in,
            id_institution_in        => id_institution_in,
            id_episode_write_in      => id_episode_write_in,
            dt_harvest_tstz_in       => dt_harvest_tstz_in,
            dt_mov_begin_tstz_in     => dt_mov_begin_tstz_in,
            dt_lab_reception_tstz_in => dt_lab_reception_tstz_in,
            dt_cancel_tstz_in        => dt_cancel_tstz_in,
            flg_chargeable_in        => flg_chargeable_in,
            id_visit_in              => id_visit_in,
            id_patient_in            => id_patient_in,
            flg_print_in             => flg_print_in,
            create_user_in           => create_user_in,
            create_time_in           => create_time_in,
            create_institution_in    => create_institution_in,
            update_user_in           => update_user_in,
            update_time_in           => update_time_in,
            update_institution_in    => update_institution_in,
            id_cancel_reason_in      => id_cancel_reason_in,
            flg_orig_harvest_in      => flg_orig_harvest_in,
            dt_harvest_reg_tstz_in   => dt_harvest_reg_tstz_in,
            id_rep_coll_reason_in    => id_rep_coll_reason_in,
            id_harvest_group_in      => id_harvest_group_in,
            dt_begin_harvest_in      => dt_begin_harvest_in,
            prof_dep_clin_serv_in    => prof_dep_clin_serv_in,
            flg_col_inst_in          => flg_col_inst_in,
            flg_mov_tube_in          => flg_mov_tube_in,
            flg_laterality_in        => flg_laterality_in,
            flg_collection_method_in => flg_collection_method_in,
            id_specimen_condition_in => id_specimen_condition_in,
            amount_in                => amount_in,
            id_revised_by_in         => id_revised_by_in,
            harvest_instructions_in  => harvest_instructions_in,
            handle_error_in          => handle_error_in,
            rows_out                 => rows_out);
    END ins;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_episode_in            IN harvest.id_episode%TYPE DEFAULT NULL,
        id_prof_harvest_in       IN harvest.id_prof_harvest%TYPE DEFAULT NULL,
        flg_status_in            IN harvest.flg_status%TYPE DEFAULT NULL,
        num_recipient_in         IN harvest.num_recipient%TYPE DEFAULT NULL,
        notes_in                 IN harvest.notes%TYPE DEFAULT NULL,
        id_body_part_in          IN harvest.id_body_part%TYPE DEFAULT NULL,
        id_prof_mov_tube_in      IN harvest.id_prof_mov_tube%TYPE DEFAULT NULL,
        id_prof_receive_tube_in  IN harvest.id_prof_receive_tube%TYPE DEFAULT NULL,
        id_room_harvest_in       IN harvest.id_room_harvest%TYPE DEFAULT NULL,
        id_room_receive_tube_in  IN harvest.id_room_receive_tube%TYPE DEFAULT NULL,
        id_prof_cancels_in       IN harvest.id_prof_cancels%TYPE DEFAULT NULL,
        notes_cancel_in          IN harvest.notes_cancel%TYPE DEFAULT NULL,
        barcode_in               IN harvest.barcode%TYPE DEFAULT NULL,
        id_institution_in        IN harvest.id_institution%TYPE DEFAULT NULL,
        id_episode_write_in      IN harvest.id_episode_write%TYPE DEFAULT NULL,
        dt_harvest_tstz_in       IN harvest.dt_harvest_tstz%TYPE DEFAULT NULL,
        dt_mov_begin_tstz_in     IN harvest.dt_mov_begin_tstz%TYPE DEFAULT NULL,
        dt_lab_reception_tstz_in IN harvest.dt_lab_reception_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in        IN harvest.dt_cancel_tstz%TYPE DEFAULT NULL,
        flg_chargeable_in        IN harvest.flg_chargeable%TYPE DEFAULT NULL,
        id_visit_in              IN harvest.id_visit%TYPE DEFAULT NULL,
        id_patient_in            IN harvest.id_patient%TYPE DEFAULT NULL,
        flg_print_in             IN harvest.flg_print%TYPE DEFAULT 'S',
        create_user_in           IN harvest.create_user%TYPE DEFAULT NULL,
        create_time_in           IN harvest.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN harvest.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN harvest.update_user%TYPE DEFAULT NULL,
        update_time_in           IN harvest.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN harvest.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in      IN harvest.id_cancel_reason%TYPE DEFAULT NULL,
        flg_orig_harvest_in      IN harvest.flg_orig_harvest%TYPE DEFAULT NULL,
        dt_harvest_reg_tstz_in   IN harvest.dt_harvest_reg_tstz%TYPE DEFAULT NULL,
        id_rep_coll_reason_in    IN harvest.id_rep_coll_reason%TYPE DEFAULT NULL,
        id_harvest_group_in      IN harvest.id_harvest_group%TYPE DEFAULT NULL,
        dt_begin_harvest_in      IN harvest.dt_begin_harvest%TYPE DEFAULT NULL,
        prof_dep_clin_serv_in    IN harvest.prof_dep_clin_serv%TYPE DEFAULT NULL,
        flg_col_inst_in          IN harvest.flg_col_inst%TYPE DEFAULT NULL,
        flg_mov_tube_in          IN harvest.flg_mov_tube%TYPE DEFAULT NULL,
        flg_laterality_in        IN harvest.flg_laterality%TYPE DEFAULT NULL,
        flg_collection_method_in IN harvest.flg_collection_method%TYPE DEFAULT NULL,
        id_specimen_condition_in IN harvest.id_specimen_condition%TYPE DEFAULT NULL,
        amount_in                IN harvest.amount%TYPE DEFAULT NULL,
        id_revised_by_in         IN harvest.id_revised_by%TYPE DEFAULT NULL,
        harvest_instructions_in  IN harvest.harvest_instructions%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_episode_in            => id_episode_in,
            id_prof_harvest_in       => id_prof_harvest_in,
            flg_status_in            => flg_status_in,
            num_recipient_in         => num_recipient_in,
            notes_in                 => notes_in,
            id_body_part_in          => id_body_part_in,
            id_prof_mov_tube_in      => id_prof_mov_tube_in,
            id_prof_receive_tube_in  => id_prof_receive_tube_in,
            id_room_harvest_in       => id_room_harvest_in,
            id_room_receive_tube_in  => id_room_receive_tube_in,
            id_prof_cancels_in       => id_prof_cancels_in,
            notes_cancel_in          => notes_cancel_in,
            barcode_in               => barcode_in,
            id_institution_in        => id_institution_in,
            id_episode_write_in      => id_episode_write_in,
            dt_harvest_tstz_in       => dt_harvest_tstz_in,
            dt_mov_begin_tstz_in     => dt_mov_begin_tstz_in,
            dt_lab_reception_tstz_in => dt_lab_reception_tstz_in,
            dt_cancel_tstz_in        => dt_cancel_tstz_in,
            flg_chargeable_in        => flg_chargeable_in,
            id_visit_in              => id_visit_in,
            id_patient_in            => id_patient_in,
            flg_print_in             => flg_print_in,
            create_user_in           => create_user_in,
            create_time_in           => create_time_in,
            create_institution_in    => create_institution_in,
            update_user_in           => update_user_in,
            update_time_in           => update_time_in,
            update_institution_in    => update_institution_in,
            id_cancel_reason_in      => id_cancel_reason_in,
            flg_orig_harvest_in      => flg_orig_harvest_in,
            dt_harvest_reg_tstz_in   => dt_harvest_reg_tstz_in,
            id_rep_coll_reason_in    => id_rep_coll_reason_in,
            id_harvest_group_in      => id_harvest_group_in,
            dt_begin_harvest_in      => dt_begin_harvest_in,
            prof_dep_clin_serv_in    => prof_dep_clin_serv_in,
            flg_col_inst_in          => flg_col_inst_in,
            flg_mov_tube_in          => flg_mov_tube_in,
            flg_laterality_in        => flg_laterality_in,
            flg_collection_method_in => flg_collection_method_in,
            id_specimen_condition_in => id_specimen_condition_in,
            amount_in                => amount_in,
            id_revised_by_in         => id_revised_by_in,
            harvest_instructions_in  => harvest_instructions_in,
            handle_error_in          => handle_error_in,
            rows_out                 => rows_out);
    END ins;

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_episode_in            IN harvest.id_episode%TYPE DEFAULT NULL,
        id_prof_harvest_in       IN harvest.id_prof_harvest%TYPE DEFAULT NULL,
        flg_status_in            IN harvest.flg_status%TYPE DEFAULT NULL,
        num_recipient_in         IN harvest.num_recipient%TYPE DEFAULT NULL,
        notes_in                 IN harvest.notes%TYPE DEFAULT NULL,
        id_body_part_in          IN harvest.id_body_part%TYPE DEFAULT NULL,
        id_prof_mov_tube_in      IN harvest.id_prof_mov_tube%TYPE DEFAULT NULL,
        id_prof_receive_tube_in  IN harvest.id_prof_receive_tube%TYPE DEFAULT NULL,
        id_room_harvest_in       IN harvest.id_room_harvest%TYPE DEFAULT NULL,
        id_room_receive_tube_in  IN harvest.id_room_receive_tube%TYPE DEFAULT NULL,
        id_prof_cancels_in       IN harvest.id_prof_cancels%TYPE DEFAULT NULL,
        notes_cancel_in          IN harvest.notes_cancel%TYPE DEFAULT NULL,
        barcode_in               IN harvest.barcode%TYPE DEFAULT NULL,
        id_institution_in        IN harvest.id_institution%TYPE DEFAULT NULL,
        id_episode_write_in      IN harvest.id_episode_write%TYPE DEFAULT NULL,
        dt_harvest_tstz_in       IN harvest.dt_harvest_tstz%TYPE DEFAULT NULL,
        dt_mov_begin_tstz_in     IN harvest.dt_mov_begin_tstz%TYPE DEFAULT NULL,
        dt_lab_reception_tstz_in IN harvest.dt_lab_reception_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in        IN harvest.dt_cancel_tstz%TYPE DEFAULT NULL,
        flg_chargeable_in        IN harvest.flg_chargeable%TYPE DEFAULT NULL,
        id_visit_in              IN harvest.id_visit%TYPE DEFAULT NULL,
        id_patient_in            IN harvest.id_patient%TYPE DEFAULT NULL,
        flg_print_in             IN harvest.flg_print%TYPE DEFAULT 'S',
        create_user_in           IN harvest.create_user%TYPE DEFAULT NULL,
        create_time_in           IN harvest.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN harvest.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN harvest.update_user%TYPE DEFAULT NULL,
        update_time_in           IN harvest.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN harvest.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in      IN harvest.id_cancel_reason%TYPE DEFAULT NULL,
        flg_orig_harvest_in      IN harvest.flg_orig_harvest%TYPE DEFAULT NULL,
        dt_harvest_reg_tstz_in   IN harvest.dt_harvest_reg_tstz%TYPE DEFAULT NULL,
        id_rep_coll_reason_in    IN harvest.id_rep_coll_reason%TYPE DEFAULT NULL,
        id_harvest_group_in      IN harvest.id_harvest_group%TYPE DEFAULT NULL,
        dt_begin_harvest_in      IN harvest.dt_begin_harvest%TYPE DEFAULT NULL,
        prof_dep_clin_serv_in    IN harvest.prof_dep_clin_serv%TYPE DEFAULT NULL,
        flg_col_inst_in          IN harvest.flg_col_inst%TYPE DEFAULT NULL,
        flg_mov_tube_in          IN harvest.flg_mov_tube%TYPE DEFAULT NULL,
        flg_laterality_in        IN harvest.flg_laterality%TYPE DEFAULT NULL,
        flg_collection_method_in IN harvest.flg_collection_method%TYPE DEFAULT NULL,
        id_specimen_condition_in IN harvest.id_specimen_condition%TYPE DEFAULT NULL,
        amount_in                IN harvest.amount%TYPE DEFAULT NULL,
        id_revised_by_in         IN harvest.id_revised_by%TYPE DEFAULT NULL,
        harvest_instructions_in  IN harvest.harvest_instructions%TYPE DEFAULT NULL,
        id_harvest_out           IN OUT harvest.id_harvest%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_pky harvest.id_harvest%TYPE := next_key;
    BEGIN
        ins(id_harvest_in            => l_pky,
            id_episode_in            => id_episode_in,
            id_prof_harvest_in       => id_prof_harvest_in,
            flg_status_in            => flg_status_in,
            num_recipient_in         => num_recipient_in,
            notes_in                 => notes_in,
            id_body_part_in          => id_body_part_in,
            id_prof_mov_tube_in      => id_prof_mov_tube_in,
            id_prof_receive_tube_in  => id_prof_receive_tube_in,
            id_room_harvest_in       => id_room_harvest_in,
            id_room_receive_tube_in  => id_room_receive_tube_in,
            id_prof_cancels_in       => id_prof_cancels_in,
            notes_cancel_in          => notes_cancel_in,
            barcode_in               => barcode_in,
            id_institution_in        => id_institution_in,
            id_episode_write_in      => id_episode_write_in,
            dt_harvest_tstz_in       => dt_harvest_tstz_in,
            dt_mov_begin_tstz_in     => dt_mov_begin_tstz_in,
            dt_lab_reception_tstz_in => dt_lab_reception_tstz_in,
            dt_cancel_tstz_in        => dt_cancel_tstz_in,
            flg_chargeable_in        => flg_chargeable_in,
            id_visit_in              => id_visit_in,
            id_patient_in            => id_patient_in,
            flg_print_in             => flg_print_in,
            create_user_in           => create_user_in,
            create_time_in           => create_time_in,
            create_institution_in    => create_institution_in,
            update_user_in           => update_user_in,
            update_time_in           => update_time_in,
            update_institution_in    => update_institution_in,
            id_cancel_reason_in      => id_cancel_reason_in,
            flg_orig_harvest_in      => flg_orig_harvest_in,
            dt_harvest_reg_tstz_in   => dt_harvest_reg_tstz_in,
            id_rep_coll_reason_in    => id_rep_coll_reason_in,
            id_harvest_group_in      => id_harvest_group_in,
            dt_begin_harvest_in      => dt_begin_harvest_in,
            prof_dep_clin_serv_in    => prof_dep_clin_serv_in,
            flg_col_inst_in          => flg_col_inst_in,
            flg_mov_tube_in          => flg_mov_tube_in,
            flg_laterality_in        => flg_laterality_in,
            flg_collection_method_in => flg_collection_method_in,
            id_specimen_condition_in => id_specimen_condition_in,
            amount_in                => amount_in,
            id_revised_by_in         => id_revised_by_in,
            harvest_instructions_in  => harvest_instructions_in,
            handle_error_in          => handle_error_in,
            rows_out                 => rows_out);
        id_harvest_out := l_pky;
    END ins;

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_episode_in            IN harvest.id_episode%TYPE DEFAULT NULL,
        id_prof_harvest_in       IN harvest.id_prof_harvest%TYPE DEFAULT NULL,
        flg_status_in            IN harvest.flg_status%TYPE DEFAULT NULL,
        num_recipient_in         IN harvest.num_recipient%TYPE DEFAULT NULL,
        notes_in                 IN harvest.notes%TYPE DEFAULT NULL,
        id_body_part_in          IN harvest.id_body_part%TYPE DEFAULT NULL,
        id_prof_mov_tube_in      IN harvest.id_prof_mov_tube%TYPE DEFAULT NULL,
        id_prof_receive_tube_in  IN harvest.id_prof_receive_tube%TYPE DEFAULT NULL,
        id_room_harvest_in       IN harvest.id_room_harvest%TYPE DEFAULT NULL,
        id_room_receive_tube_in  IN harvest.id_room_receive_tube%TYPE DEFAULT NULL,
        id_prof_cancels_in       IN harvest.id_prof_cancels%TYPE DEFAULT NULL,
        notes_cancel_in          IN harvest.notes_cancel%TYPE DEFAULT NULL,
        barcode_in               IN harvest.barcode%TYPE DEFAULT NULL,
        id_institution_in        IN harvest.id_institution%TYPE DEFAULT NULL,
        id_episode_write_in      IN harvest.id_episode_write%TYPE DEFAULT NULL,
        dt_harvest_tstz_in       IN harvest.dt_harvest_tstz%TYPE DEFAULT NULL,
        dt_mov_begin_tstz_in     IN harvest.dt_mov_begin_tstz%TYPE DEFAULT NULL,
        dt_lab_reception_tstz_in IN harvest.dt_lab_reception_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in        IN harvest.dt_cancel_tstz%TYPE DEFAULT NULL,
        flg_chargeable_in        IN harvest.flg_chargeable%TYPE DEFAULT NULL,
        id_visit_in              IN harvest.id_visit%TYPE DEFAULT NULL,
        id_patient_in            IN harvest.id_patient%TYPE DEFAULT NULL,
        flg_print_in             IN harvest.flg_print%TYPE DEFAULT 'S',
        create_user_in           IN harvest.create_user%TYPE DEFAULT NULL,
        create_time_in           IN harvest.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN harvest.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN harvest.update_user%TYPE DEFAULT NULL,
        update_time_in           IN harvest.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN harvest.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in      IN harvest.id_cancel_reason%TYPE DEFAULT NULL,
        flg_orig_harvest_in      IN harvest.flg_orig_harvest%TYPE DEFAULT NULL,
        dt_harvest_reg_tstz_in   IN harvest.dt_harvest_reg_tstz%TYPE DEFAULT NULL,
        id_rep_coll_reason_in    IN harvest.id_rep_coll_reason%TYPE DEFAULT NULL,
        id_harvest_group_in      IN harvest.id_harvest_group%TYPE DEFAULT NULL,
        dt_begin_harvest_in      IN harvest.dt_begin_harvest%TYPE DEFAULT NULL,
        prof_dep_clin_serv_in    IN harvest.prof_dep_clin_serv%TYPE DEFAULT NULL,
        flg_col_inst_in          IN harvest.flg_col_inst%TYPE DEFAULT NULL,
        flg_mov_tube_in          IN harvest.flg_mov_tube%TYPE DEFAULT NULL,
        flg_laterality_in        IN harvest.flg_laterality%TYPE DEFAULT NULL,
        flg_collection_method_in IN harvest.flg_collection_method%TYPE DEFAULT NULL,
        id_specimen_condition_in IN harvest.id_specimen_condition%TYPE DEFAULT NULL,
        amount_in                IN harvest.amount%TYPE DEFAULT NULL,
        id_revised_by_in         IN harvest.id_revised_by%TYPE DEFAULT NULL,
        harvest_instructions_in  IN harvest.harvest_instructions%TYPE DEFAULT NULL,
        id_harvest_out           IN OUT harvest.id_harvest%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_episode_in            => id_episode_in,
            id_prof_harvest_in       => id_prof_harvest_in,
            flg_status_in            => flg_status_in,
            num_recipient_in         => num_recipient_in,
            notes_in                 => notes_in,
            id_body_part_in          => id_body_part_in,
            id_prof_mov_tube_in      => id_prof_mov_tube_in,
            id_prof_receive_tube_in  => id_prof_receive_tube_in,
            id_room_harvest_in       => id_room_harvest_in,
            id_room_receive_tube_in  => id_room_receive_tube_in,
            id_prof_cancels_in       => id_prof_cancels_in,
            notes_cancel_in          => notes_cancel_in,
            barcode_in               => barcode_in,
            id_institution_in        => id_institution_in,
            id_episode_write_in      => id_episode_write_in,
            dt_harvest_tstz_in       => dt_harvest_tstz_in,
            dt_mov_begin_tstz_in     => dt_mov_begin_tstz_in,
            dt_lab_reception_tstz_in => dt_lab_reception_tstz_in,
            dt_cancel_tstz_in        => dt_cancel_tstz_in,
            flg_chargeable_in        => flg_chargeable_in,
            id_visit_in              => id_visit_in,
            id_patient_in            => id_patient_in,
            flg_print_in             => flg_print_in,
            create_user_in           => create_user_in,
            create_time_in           => create_time_in,
            create_institution_in    => create_institution_in,
            update_user_in           => update_user_in,
            update_time_in           => update_time_in,
            update_institution_in    => update_institution_in,
            id_cancel_reason_in      => id_cancel_reason_in,
            flg_orig_harvest_in      => flg_orig_harvest_in,
            dt_harvest_reg_tstz_in   => dt_harvest_reg_tstz_in,
            id_rep_coll_reason_in    => id_rep_coll_reason_in,
            id_harvest_group_in      => id_harvest_group_in,
            dt_begin_harvest_in      => dt_begin_harvest_in,
            prof_dep_clin_serv_in    => prof_dep_clin_serv_in,
            flg_col_inst_in          => flg_col_inst_in,
            flg_mov_tube_in          => flg_mov_tube_in,
            flg_laterality_in        => flg_laterality_in,
            flg_collection_method_in => flg_collection_method_in,
            id_specimen_condition_in => id_specimen_condition_in,
            amount_in                => amount_in,
            id_revised_by_in         => id_revised_by_in,
            harvest_instructions_in  => harvest_instructions_in,
            id_harvest_out           => id_harvest_out,
            handle_error_in          => handle_error_in,
            rows_out                 => rows_out);
    END ins;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_episode_in            IN harvest.id_episode%TYPE DEFAULT NULL,
        id_prof_harvest_in       IN harvest.id_prof_harvest%TYPE DEFAULT NULL,
        flg_status_in            IN harvest.flg_status%TYPE DEFAULT NULL,
        num_recipient_in         IN harvest.num_recipient%TYPE DEFAULT NULL,
        notes_in                 IN harvest.notes%TYPE DEFAULT NULL,
        id_body_part_in          IN harvest.id_body_part%TYPE DEFAULT NULL,
        id_prof_mov_tube_in      IN harvest.id_prof_mov_tube%TYPE DEFAULT NULL,
        id_prof_receive_tube_in  IN harvest.id_prof_receive_tube%TYPE DEFAULT NULL,
        id_room_harvest_in       IN harvest.id_room_harvest%TYPE DEFAULT NULL,
        id_room_receive_tube_in  IN harvest.id_room_receive_tube%TYPE DEFAULT NULL,
        id_prof_cancels_in       IN harvest.id_prof_cancels%TYPE DEFAULT NULL,
        notes_cancel_in          IN harvest.notes_cancel%TYPE DEFAULT NULL,
        barcode_in               IN harvest.barcode%TYPE DEFAULT NULL,
        id_institution_in        IN harvest.id_institution%TYPE DEFAULT NULL,
        id_episode_write_in      IN harvest.id_episode_write%TYPE DEFAULT NULL,
        dt_harvest_tstz_in       IN harvest.dt_harvest_tstz%TYPE DEFAULT NULL,
        dt_mov_begin_tstz_in     IN harvest.dt_mov_begin_tstz%TYPE DEFAULT NULL,
        dt_lab_reception_tstz_in IN harvest.dt_lab_reception_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in        IN harvest.dt_cancel_tstz%TYPE DEFAULT NULL,
        flg_chargeable_in        IN harvest.flg_chargeable%TYPE DEFAULT NULL,
        id_visit_in              IN harvest.id_visit%TYPE DEFAULT NULL,
        id_patient_in            IN harvest.id_patient%TYPE DEFAULT NULL,
        flg_print_in             IN harvest.flg_print%TYPE DEFAULT 'S',
        create_user_in           IN harvest.create_user%TYPE DEFAULT NULL,
        create_time_in           IN harvest.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN harvest.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN harvest.update_user%TYPE DEFAULT NULL,
        update_time_in           IN harvest.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN harvest.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in      IN harvest.id_cancel_reason%TYPE DEFAULT NULL,
        flg_orig_harvest_in      IN harvest.flg_orig_harvest%TYPE DEFAULT NULL,
        dt_harvest_reg_tstz_in   IN harvest.dt_harvest_reg_tstz%TYPE DEFAULT NULL,
        id_rep_coll_reason_in    IN harvest.id_rep_coll_reason%TYPE DEFAULT NULL,
        id_harvest_group_in      IN harvest.id_harvest_group%TYPE DEFAULT NULL,
        dt_begin_harvest_in      IN harvest.dt_begin_harvest%TYPE DEFAULT NULL,
        prof_dep_clin_serv_in    IN harvest.prof_dep_clin_serv%TYPE DEFAULT NULL,
        flg_col_inst_in          IN harvest.flg_col_inst%TYPE DEFAULT NULL,
        flg_mov_tube_in          IN harvest.flg_mov_tube%TYPE DEFAULT NULL,
        flg_laterality_in        IN harvest.flg_laterality%TYPE DEFAULT NULL,
        flg_collection_method_in IN harvest.flg_collection_method%TYPE DEFAULT NULL,
        id_specimen_condition_in IN harvest.id_specimen_condition%TYPE DEFAULT NULL,
        amount_in                IN harvest.amount%TYPE DEFAULT NULL,
        id_revised_by_in         IN harvest.id_revised_by%TYPE DEFAULT NULL,
        harvest_instructions_in  IN harvest.harvest_instructions%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN harvest.id_harvest%TYPE IS
        l_pky harvest.id_harvest%TYPE := next_key;
    BEGIN
        ins(id_harvest_in            => l_pky,
            id_episode_in            => id_episode_in,
            id_prof_harvest_in       => id_prof_harvest_in,
            flg_status_in            => flg_status_in,
            num_recipient_in         => num_recipient_in,
            notes_in                 => notes_in,
            id_body_part_in          => id_body_part_in,
            id_prof_mov_tube_in      => id_prof_mov_tube_in,
            id_prof_receive_tube_in  => id_prof_receive_tube_in,
            id_room_harvest_in       => id_room_harvest_in,
            id_room_receive_tube_in  => id_room_receive_tube_in,
            id_prof_cancels_in       => id_prof_cancels_in,
            notes_cancel_in          => notes_cancel_in,
            barcode_in               => barcode_in,
            id_institution_in        => id_institution_in,
            id_episode_write_in      => id_episode_write_in,
            dt_harvest_tstz_in       => dt_harvest_tstz_in,
            dt_mov_begin_tstz_in     => dt_mov_begin_tstz_in,
            dt_lab_reception_tstz_in => dt_lab_reception_tstz_in,
            dt_cancel_tstz_in        => dt_cancel_tstz_in,
            flg_chargeable_in        => flg_chargeable_in,
            id_visit_in              => id_visit_in,
            id_patient_in            => id_patient_in,
            flg_print_in             => flg_print_in,
            create_user_in           => create_user_in,
            create_time_in           => create_time_in,
            create_institution_in    => create_institution_in,
            update_user_in           => update_user_in,
            update_time_in           => update_time_in,
            update_institution_in    => update_institution_in,
            id_cancel_reason_in      => id_cancel_reason_in,
            flg_orig_harvest_in      => flg_orig_harvest_in,
            dt_harvest_reg_tstz_in   => dt_harvest_reg_tstz_in,
            id_rep_coll_reason_in    => id_rep_coll_reason_in,
            id_harvest_group_in      => id_harvest_group_in,
            dt_begin_harvest_in      => dt_begin_harvest_in,
            prof_dep_clin_serv_in    => prof_dep_clin_serv_in,
            flg_col_inst_in          => flg_col_inst_in,
            flg_mov_tube_in          => flg_mov_tube_in,
            flg_laterality_in        => flg_laterality_in,
            flg_collection_method_in => flg_collection_method_in,
            id_specimen_condition_in => id_specimen_condition_in,
            amount_in                => amount_in,
            id_revised_by_in         => id_revised_by_in,
            harvest_instructions_in  => harvest_instructions_in,
            handle_error_in          => handle_error_in,
            rows_out                 => rows_out);
        RETURN l_pky;
    END ins;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_episode_in            IN harvest.id_episode%TYPE DEFAULT NULL,
        id_prof_harvest_in       IN harvest.id_prof_harvest%TYPE DEFAULT NULL,
        flg_status_in            IN harvest.flg_status%TYPE DEFAULT NULL,
        num_recipient_in         IN harvest.num_recipient%TYPE DEFAULT NULL,
        notes_in                 IN harvest.notes%TYPE DEFAULT NULL,
        id_body_part_in          IN harvest.id_body_part%TYPE DEFAULT NULL,
        id_prof_mov_tube_in      IN harvest.id_prof_mov_tube%TYPE DEFAULT NULL,
        id_prof_receive_tube_in  IN harvest.id_prof_receive_tube%TYPE DEFAULT NULL,
        id_room_harvest_in       IN harvest.id_room_harvest%TYPE DEFAULT NULL,
        id_room_receive_tube_in  IN harvest.id_room_receive_tube%TYPE DEFAULT NULL,
        id_prof_cancels_in       IN harvest.id_prof_cancels%TYPE DEFAULT NULL,
        notes_cancel_in          IN harvest.notes_cancel%TYPE DEFAULT NULL,
        barcode_in               IN harvest.barcode%TYPE DEFAULT NULL,
        id_institution_in        IN harvest.id_institution%TYPE DEFAULT NULL,
        id_episode_write_in      IN harvest.id_episode_write%TYPE DEFAULT NULL,
        dt_harvest_tstz_in       IN harvest.dt_harvest_tstz%TYPE DEFAULT NULL,
        dt_mov_begin_tstz_in     IN harvest.dt_mov_begin_tstz%TYPE DEFAULT NULL,
        dt_lab_reception_tstz_in IN harvest.dt_lab_reception_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in        IN harvest.dt_cancel_tstz%TYPE DEFAULT NULL,
        flg_chargeable_in        IN harvest.flg_chargeable%TYPE DEFAULT NULL,
        id_visit_in              IN harvest.id_visit%TYPE DEFAULT NULL,
        id_patient_in            IN harvest.id_patient%TYPE DEFAULT NULL,
        flg_print_in             IN harvest.flg_print%TYPE DEFAULT 'S',
        create_user_in           IN harvest.create_user%TYPE DEFAULT NULL,
        create_time_in           IN harvest.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN harvest.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN harvest.update_user%TYPE DEFAULT NULL,
        update_time_in           IN harvest.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN harvest.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in      IN harvest.id_cancel_reason%TYPE DEFAULT NULL,
        flg_orig_harvest_in      IN harvest.flg_orig_harvest%TYPE DEFAULT NULL,
        dt_harvest_reg_tstz_in   IN harvest.dt_harvest_reg_tstz%TYPE DEFAULT NULL,
        id_rep_coll_reason_in    IN harvest.id_rep_coll_reason%TYPE DEFAULT NULL,
        id_harvest_group_in      IN harvest.id_harvest_group%TYPE DEFAULT NULL,
        dt_begin_harvest_in      IN harvest.dt_begin_harvest%TYPE DEFAULT NULL,
        prof_dep_clin_serv_in    IN harvest.prof_dep_clin_serv%TYPE DEFAULT NULL,
        flg_col_inst_in          IN harvest.flg_col_inst%TYPE DEFAULT NULL,
        flg_mov_tube_in          IN harvest.flg_mov_tube%TYPE DEFAULT NULL,
        flg_laterality_in        IN harvest.flg_laterality%TYPE DEFAULT NULL,
        flg_collection_method_in IN harvest.flg_collection_method%TYPE DEFAULT NULL,
        id_specimen_condition_in IN harvest.id_specimen_condition%TYPE DEFAULT NULL,
        amount_in                IN harvest.amount%TYPE DEFAULT NULL,
        id_revised_by_in         IN harvest.id_revised_by%TYPE DEFAULT NULL,
        harvest_instructions_in  IN harvest.harvest_instructions%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN harvest.id_harvest%TYPE IS
        l_pky    harvest.id_harvest%TYPE := next_key;
        rows_out table_varchar;
    BEGIN
        ins(id_harvest_in            => l_pky,
            id_episode_in            => id_episode_in,
            id_prof_harvest_in       => id_prof_harvest_in,
            flg_status_in            => flg_status_in,
            num_recipient_in         => num_recipient_in,
            notes_in                 => notes_in,
            id_body_part_in          => id_body_part_in,
            id_prof_mov_tube_in      => id_prof_mov_tube_in,
            id_prof_receive_tube_in  => id_prof_receive_tube_in,
            id_room_harvest_in       => id_room_harvest_in,
            id_room_receive_tube_in  => id_room_receive_tube_in,
            id_prof_cancels_in       => id_prof_cancels_in,
            notes_cancel_in          => notes_cancel_in,
            barcode_in               => barcode_in,
            id_institution_in        => id_institution_in,
            id_episode_write_in      => id_episode_write_in,
            dt_harvest_tstz_in       => dt_harvest_tstz_in,
            dt_mov_begin_tstz_in     => dt_mov_begin_tstz_in,
            dt_lab_reception_tstz_in => dt_lab_reception_tstz_in,
            dt_cancel_tstz_in        => dt_cancel_tstz_in,
            flg_chargeable_in        => flg_chargeable_in,
            id_visit_in              => id_visit_in,
            id_patient_in            => id_patient_in,
            flg_print_in             => flg_print_in,
            create_user_in           => create_user_in,
            create_time_in           => create_time_in,
            create_institution_in    => create_institution_in,
            update_user_in           => update_user_in,
            update_time_in           => update_time_in,
            update_institution_in    => update_institution_in,
            id_cancel_reason_in      => id_cancel_reason_in,
            flg_orig_harvest_in      => flg_orig_harvest_in,
            dt_harvest_reg_tstz_in   => dt_harvest_reg_tstz_in,
            id_rep_coll_reason_in    => id_rep_coll_reason_in,
            id_harvest_group_in      => id_harvest_group_in,
            dt_begin_harvest_in      => dt_begin_harvest_in,
            prof_dep_clin_serv_in    => prof_dep_clin_serv_in,
            flg_col_inst_in          => flg_col_inst_in,
            flg_mov_tube_in          => flg_mov_tube_in,
            flg_laterality_in        => flg_laterality_in,
            flg_collection_method_in => flg_collection_method_in,
            id_specimen_condition_in => id_specimen_condition_in,
            amount_in                => amount_in,
            id_revised_by_in         => id_revised_by_in,
            harvest_instructions_in  => harvest_instructions_in,
            handle_error_in          => handle_error_in,
            rows_out                 => rows_out);
        RETURN l_pky;
    END ins;

    PROCEDURE ins
    (
        id_harvest_in            IN harvest.id_harvest%TYPE,
        id_episode_in            IN harvest.id_episode%TYPE DEFAULT NULL,
        id_prof_harvest_in       IN harvest.id_prof_harvest%TYPE DEFAULT NULL,
        flg_status_in            IN harvest.flg_status%TYPE DEFAULT NULL,
        num_recipient_in         IN harvest.num_recipient%TYPE DEFAULT NULL,
        notes_in                 IN harvest.notes%TYPE DEFAULT NULL,
        id_body_part_in          IN harvest.id_body_part%TYPE DEFAULT NULL,
        id_prof_mov_tube_in      IN harvest.id_prof_mov_tube%TYPE DEFAULT NULL,
        id_prof_receive_tube_in  IN harvest.id_prof_receive_tube%TYPE DEFAULT NULL,
        id_room_harvest_in       IN harvest.id_room_harvest%TYPE DEFAULT NULL,
        id_room_receive_tube_in  IN harvest.id_room_receive_tube%TYPE DEFAULT NULL,
        id_prof_cancels_in       IN harvest.id_prof_cancels%TYPE DEFAULT NULL,
        notes_cancel_in          IN harvest.notes_cancel%TYPE DEFAULT NULL,
        barcode_in               IN harvest.barcode%TYPE DEFAULT NULL,
        id_institution_in        IN harvest.id_institution%TYPE DEFAULT NULL,
        id_episode_write_in      IN harvest.id_episode_write%TYPE DEFAULT NULL,
        dt_harvest_tstz_in       IN harvest.dt_harvest_tstz%TYPE DEFAULT NULL,
        dt_mov_begin_tstz_in     IN harvest.dt_mov_begin_tstz%TYPE DEFAULT NULL,
        dt_lab_reception_tstz_in IN harvest.dt_lab_reception_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in        IN harvest.dt_cancel_tstz%TYPE DEFAULT NULL,
        flg_chargeable_in        IN harvest.flg_chargeable%TYPE DEFAULT NULL,
        id_visit_in              IN harvest.id_visit%TYPE DEFAULT NULL,
        id_patient_in            IN harvest.id_patient%TYPE DEFAULT NULL,
        flg_print_in             IN harvest.flg_print%TYPE DEFAULT 'S',
        create_user_in           IN harvest.create_user%TYPE DEFAULT NULL,
        create_time_in           IN harvest.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN harvest.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN harvest.update_user%TYPE DEFAULT NULL,
        update_time_in           IN harvest.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN harvest.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in      IN harvest.id_cancel_reason%TYPE DEFAULT NULL,
        flg_orig_harvest_in      IN harvest.flg_orig_harvest%TYPE DEFAULT NULL,
        dt_harvest_reg_tstz_in   IN harvest.dt_harvest_reg_tstz%TYPE DEFAULT NULL,
        id_rep_coll_reason_in    IN harvest.id_rep_coll_reason%TYPE DEFAULT NULL,
        id_harvest_group_in      IN harvest.id_harvest_group%TYPE DEFAULT NULL,
        dt_begin_harvest_in      IN harvest.dt_begin_harvest%TYPE DEFAULT NULL,
        prof_dep_clin_serv_in    IN harvest.prof_dep_clin_serv%TYPE DEFAULT NULL,
        flg_col_inst_in          IN harvest.flg_col_inst%TYPE DEFAULT NULL,
        flg_mov_tube_in          IN harvest.flg_mov_tube%TYPE DEFAULT NULL,
        flg_laterality_in        IN harvest.flg_laterality%TYPE DEFAULT NULL,
        flg_collection_method_in IN harvest.flg_collection_method%TYPE DEFAULT NULL,
        id_specimen_condition_in IN harvest.id_specimen_condition%TYPE DEFAULT NULL,
        amount_in                IN harvest.amount%TYPE DEFAULT NULL,
        id_revised_by_in         IN harvest.id_revised_by%TYPE DEFAULT NULL,
        harvest_instructions_in  IN harvest.harvest_instructions%TYPE DEFAULT NULL,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 OUT table_varchar
    ) IS
    BEGIN
        INSERT INTO harvest
            (id_harvest,
             id_episode,
             id_prof_harvest,
             flg_status,
             num_recipient,
             notes,
             id_body_part,
             id_prof_mov_tube,
             id_prof_receive_tube,
             id_room_harvest,
             id_room_receive_tube,
             id_prof_cancels,
             notes_cancel,
             barcode,
             id_institution,
             id_episode_write,
             dt_harvest_tstz,
             dt_mov_begin_tstz,
             dt_lab_reception_tstz,
             dt_cancel_tstz,
             flg_chargeable,
             id_visit,
             id_patient,
             flg_print,
             create_user,
             create_time,
             create_institution,
             update_user,
             update_time,
             update_institution,
             id_cancel_reason,
             flg_orig_harvest,
             dt_harvest_reg_tstz,
             id_rep_coll_reason,
             id_harvest_group,
             dt_begin_harvest,
             prof_dep_clin_serv,
             flg_col_inst,
             flg_mov_tube,
             flg_laterality,
             flg_collection_method,
             id_specimen_condition,
             amount,
             id_revised_by,
             harvest_instructions)
        VALUES
            (id_harvest_in,
             id_episode_in,
             id_prof_harvest_in,
             flg_status_in,
             num_recipient_in,
             notes_in,
             id_body_part_in,
             id_prof_mov_tube_in,
             id_prof_receive_tube_in,
             id_room_harvest_in,
             id_room_receive_tube_in,
             id_prof_cancels_in,
             notes_cancel_in,
             barcode_in,
             id_institution_in,
             id_episode_write_in,
             dt_harvest_tstz_in,
             dt_mov_begin_tstz_in,
             dt_lab_reception_tstz_in,
             dt_cancel_tstz_in,
             flg_chargeable_in,
             id_visit_in,
             id_patient_in,
             flg_print_in,
             create_user_in,
             create_time_in,
             create_institution_in,
             update_user_in,
             update_time_in,
             update_institution_in,
             id_cancel_reason_in,
             flg_orig_harvest_in,
             dt_harvest_reg_tstz_in,
             id_rep_coll_reason_in,
             id_harvest_group_in,
             dt_begin_harvest_in,
             prof_dep_clin_serv_in,
             flg_col_inst_in,
             flg_mov_tube_in,
             flg_laterality_in,
             flg_collection_method_in,
             id_specimen_condition_in,
             amount_in,
             id_revised_by_in,
             harvest_instructions_in)
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    PROCEDURE ins
    (
        id_harvest_in            IN harvest.id_harvest%TYPE,
        id_episode_in            IN harvest.id_episode%TYPE DEFAULT NULL,
        id_prof_harvest_in       IN harvest.id_prof_harvest%TYPE DEFAULT NULL,
        flg_status_in            IN harvest.flg_status%TYPE DEFAULT NULL,
        num_recipient_in         IN harvest.num_recipient%TYPE DEFAULT NULL,
        notes_in                 IN harvest.notes%TYPE DEFAULT NULL,
        id_body_part_in          IN harvest.id_body_part%TYPE DEFAULT NULL,
        id_prof_mov_tube_in      IN harvest.id_prof_mov_tube%TYPE DEFAULT NULL,
        id_prof_receive_tube_in  IN harvest.id_prof_receive_tube%TYPE DEFAULT NULL,
        id_room_harvest_in       IN harvest.id_room_harvest%TYPE DEFAULT NULL,
        id_room_receive_tube_in  IN harvest.id_room_receive_tube%TYPE DEFAULT NULL,
        id_prof_cancels_in       IN harvest.id_prof_cancels%TYPE DEFAULT NULL,
        notes_cancel_in          IN harvest.notes_cancel%TYPE DEFAULT NULL,
        barcode_in               IN harvest.barcode%TYPE DEFAULT NULL,
        id_institution_in        IN harvest.id_institution%TYPE DEFAULT NULL,
        id_episode_write_in      IN harvest.id_episode_write%TYPE DEFAULT NULL,
        dt_harvest_tstz_in       IN harvest.dt_harvest_tstz%TYPE DEFAULT NULL,
        dt_mov_begin_tstz_in     IN harvest.dt_mov_begin_tstz%TYPE DEFAULT NULL,
        dt_lab_reception_tstz_in IN harvest.dt_lab_reception_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in        IN harvest.dt_cancel_tstz%TYPE DEFAULT NULL,
        flg_chargeable_in        IN harvest.flg_chargeable%TYPE DEFAULT NULL,
        id_visit_in              IN harvest.id_visit%TYPE DEFAULT NULL,
        id_patient_in            IN harvest.id_patient%TYPE DEFAULT NULL,
        flg_print_in             IN harvest.flg_print%TYPE DEFAULT 'S',
        create_user_in           IN harvest.create_user%TYPE DEFAULT NULL,
        create_time_in           IN harvest.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN harvest.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN harvest.update_user%TYPE DEFAULT NULL,
        update_time_in           IN harvest.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN harvest.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in      IN harvest.id_cancel_reason%TYPE DEFAULT NULL,
        flg_orig_harvest_in      IN harvest.flg_orig_harvest%TYPE DEFAULT NULL,
        dt_harvest_reg_tstz_in   IN harvest.dt_harvest_reg_tstz%TYPE DEFAULT NULL,
        id_rep_coll_reason_in    IN harvest.id_rep_coll_reason%TYPE DEFAULT NULL,
        id_harvest_group_in      IN harvest.id_harvest_group%TYPE DEFAULT NULL,
        dt_begin_harvest_in      IN harvest.dt_begin_harvest%TYPE DEFAULT NULL,
        prof_dep_clin_serv_in    IN harvest.prof_dep_clin_serv%TYPE DEFAULT NULL,
        flg_col_inst_in          IN harvest.flg_col_inst%TYPE DEFAULT NULL,
        flg_mov_tube_in          IN harvest.flg_mov_tube%TYPE DEFAULT NULL,
        flg_laterality_in        IN harvest.flg_laterality%TYPE DEFAULT NULL,
        flg_collection_method_in IN harvest.flg_collection_method%TYPE DEFAULT NULL,
        id_specimen_condition_in IN harvest.id_specimen_condition%TYPE DEFAULT NULL,
        amount_in                IN harvest.amount%TYPE DEFAULT NULL,
        id_revised_by_in         IN harvest.id_revised_by%TYPE DEFAULT NULL,
        harvest_instructions_in  IN harvest.harvest_instructions%TYPE DEFAULT NULL,
        handle_error_in          IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_harvest_in            => id_harvest_in,
            id_episode_in            => id_episode_in,
            id_prof_harvest_in       => id_prof_harvest_in,
            flg_status_in            => flg_status_in,
            num_recipient_in         => num_recipient_in,
            notes_in                 => notes_in,
            id_body_part_in          => id_body_part_in,
            id_prof_mov_tube_in      => id_prof_mov_tube_in,
            id_prof_receive_tube_in  => id_prof_receive_tube_in,
            id_room_harvest_in       => id_room_harvest_in,
            id_room_receive_tube_in  => id_room_receive_tube_in,
            id_prof_cancels_in       => id_prof_cancels_in,
            notes_cancel_in          => notes_cancel_in,
            barcode_in               => barcode_in,
            id_institution_in        => id_institution_in,
            id_episode_write_in      => id_episode_write_in,
            dt_harvest_tstz_in       => dt_harvest_tstz_in,
            dt_mov_begin_tstz_in     => dt_mov_begin_tstz_in,
            dt_lab_reception_tstz_in => dt_lab_reception_tstz_in,
            dt_cancel_tstz_in        => dt_cancel_tstz_in,
            flg_chargeable_in        => flg_chargeable_in,
            id_visit_in              => id_visit_in,
            id_patient_in            => id_patient_in,
            flg_print_in             => flg_print_in,
            create_user_in           => create_user_in,
            create_time_in           => create_time_in,
            create_institution_in    => create_institution_in,
            update_user_in           => update_user_in,
            update_time_in           => update_time_in,
            update_institution_in    => update_institution_in,
            id_cancel_reason_in      => id_cancel_reason_in,
            flg_orig_harvest_in      => flg_orig_harvest_in,
            dt_harvest_reg_tstz_in   => dt_harvest_reg_tstz_in,
            id_rep_coll_reason_in    => id_rep_coll_reason_in,
            id_harvest_group_in      => id_harvest_group_in,
            dt_begin_harvest_in      => dt_begin_harvest_in,
            prof_dep_clin_serv_in    => prof_dep_clin_serv_in,
            flg_col_inst_in          => flg_col_inst_in,
            flg_mov_tube_in          => flg_mov_tube_in,
            flg_laterality_in        => flg_laterality_in,
            flg_collection_method_in => flg_collection_method_in,
            id_specimen_condition_in => id_specimen_condition_in,
            amount_in                => amount_in,
            id_revised_by_in         => id_revised_by_in,
            harvest_instructions_in  => harvest_instructions_in,
            handle_error_in          => handle_error_in,
            rows_out                 => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN harvest%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_rec harvest%ROWTYPE := rec_in;
    BEGIN
        IF gen_pky_in
        THEN
            l_rec.id_harvest := next_key(sequence_in);
        END IF;
    
        ins(id_harvest_in            => l_rec.id_harvest,
            id_episode_in            => l_rec.id_episode,
            id_prof_harvest_in       => l_rec.id_prof_harvest,
            flg_status_in            => l_rec.flg_status,
            num_recipient_in         => l_rec.num_recipient,
            notes_in                 => l_rec.notes,
            id_body_part_in          => l_rec.id_body_part,
            id_prof_mov_tube_in      => l_rec.id_prof_mov_tube,
            id_prof_receive_tube_in  => l_rec.id_prof_receive_tube,
            id_room_harvest_in       => l_rec.id_room_harvest,
            id_room_receive_tube_in  => l_rec.id_room_receive_tube,
            id_prof_cancels_in       => l_rec.id_prof_cancels,
            notes_cancel_in          => l_rec.notes_cancel,
            barcode_in               => l_rec.barcode,
            id_institution_in        => l_rec.id_institution,
            id_episode_write_in      => l_rec.id_episode_write,
            dt_harvest_tstz_in       => l_rec.dt_harvest_tstz,
            dt_mov_begin_tstz_in     => l_rec.dt_mov_begin_tstz,
            dt_lab_reception_tstz_in => l_rec.dt_lab_reception_tstz,
            dt_cancel_tstz_in        => l_rec.dt_cancel_tstz,
            flg_chargeable_in        => l_rec.flg_chargeable,
            id_visit_in              => l_rec.id_visit,
            id_patient_in            => l_rec.id_patient,
            flg_print_in             => l_rec.flg_print,
            create_user_in           => l_rec.create_user,
            create_time_in           => l_rec.create_time,
            create_institution_in    => l_rec.create_institution,
            update_user_in           => l_rec.update_user,
            update_time_in           => l_rec.update_time,
            update_institution_in    => l_rec.update_institution,
            id_cancel_reason_in      => l_rec.id_cancel_reason,
            flg_orig_harvest_in      => l_rec.flg_orig_harvest,
            dt_harvest_reg_tstz_in   => l_rec.dt_harvest_reg_tstz,
            id_rep_coll_reason_in    => l_rec.id_rep_coll_reason,
            id_harvest_group_in      => l_rec.id_harvest_group,
            dt_begin_harvest_in      => l_rec.dt_begin_harvest,
            prof_dep_clin_serv_in    => l_rec.prof_dep_clin_serv,
            flg_col_inst_in          => l_rec.flg_col_inst,
            flg_mov_tube_in          => l_rec.flg_mov_tube,
            flg_laterality_in        => l_rec.flg_laterality,
            flg_collection_method_in => l_rec.flg_collection_method,
            id_specimen_condition_in => l_rec.id_specimen_condition,
            amount_in                => l_rec.amount,
            id_revised_by_in         => l_rec.id_revised_by,
            harvest_instructions_in  => l_rec.harvest_instructions,
            handle_error_in          => handle_error_in,
            rows_out                 => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN harvest%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rec_in          => rec_in,
            gen_pky_in      => gen_pky_in,
            sequence_in     => sequence_in,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN harvest_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        IF rows_in.count = 0
        THEN
            NULL;
        ELSE
            FORALL indx IN rows_in.first .. rows_in.last SAVE EXCEPTIONS
                INSERT INTO harvest
                    (id_harvest,
                     id_episode,
                     id_prof_harvest,
                     flg_status,
                     num_recipient,
                     notes,
                     id_body_part,
                     id_prof_mov_tube,
                     id_prof_receive_tube,
                     id_room_harvest,
                     id_room_receive_tube,
                     id_prof_cancels,
                     notes_cancel,
                     barcode,
                     id_institution,
                     id_episode_write,
                     dt_harvest_tstz,
                     dt_mov_begin_tstz,
                     dt_lab_reception_tstz,
                     dt_cancel_tstz,
                     flg_chargeable,
                     id_visit,
                     id_patient,
                     flg_print,
                     id_cancel_reason,
                     flg_orig_harvest,
                     dt_harvest_reg_tstz,
                     id_rep_coll_reason,
                     id_harvest_group,
                     dt_begin_harvest,
                     prof_dep_clin_serv,
                     flg_col_inst,
                     flg_mov_tube,
                     flg_laterality,
                     flg_collection_method,
                     id_specimen_condition,
                     amount,
                     id_revised_by,
                     harvest_instructions)
                VALUES
                    (rows_in(indx).id_harvest,
                     rows_in(indx).id_episode,
                     rows_in(indx).id_prof_harvest,
                     rows_in(indx).flg_status,
                     rows_in(indx).num_recipient,
                     rows_in(indx).notes,
                     rows_in(indx).id_body_part,
                     rows_in(indx).id_prof_mov_tube,
                     rows_in(indx).id_prof_receive_tube,
                     rows_in(indx).id_room_harvest,
                     rows_in(indx).id_room_receive_tube,
                     rows_in(indx).id_prof_cancels,
                     rows_in(indx).notes_cancel,
                     rows_in(indx).barcode,
                     rows_in(indx).id_institution,
                     rows_in(indx).id_episode_write,
                     rows_in(indx).dt_harvest_tstz,
                     rows_in(indx).dt_mov_begin_tstz,
                     rows_in(indx).dt_lab_reception_tstz,
                     rows_in(indx).dt_cancel_tstz,
                     rows_in(indx).flg_chargeable,
                     rows_in(indx).id_visit,
                     rows_in(indx).id_patient,
                     rows_in(indx).flg_print,
                     rows_in(indx).id_cancel_reason,
                     rows_in(indx).flg_orig_harvest,
                     rows_in(indx).dt_harvest_reg_tstz,
                     rows_in(indx).id_rep_coll_reason,
                     rows_in(indx).id_harvest_group,
                     rows_in(indx).dt_begin_harvest,
                     rows_in(indx).prof_dep_clin_serv,
                     rows_in(indx).flg_col_inst,
                     rows_in(indx).flg_mov_tube,
                     rows_in(indx).flg_laterality,
                     rows_in(indx).flg_collection_method,
                     rows_in(indx).id_specimen_condition,
                     rows_in(indx).amount,
                     rows_in(indx).id_revised_by,
                     rows_in(indx).harvest_instructions)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN harvest_tc,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rows_in => rows_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END ins;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_harvest_in             IN harvest.id_harvest%TYPE,
        id_episode_in             IN harvest.id_episode%TYPE DEFAULT NULL,
        id_episode_nin            IN BOOLEAN := TRUE,
        id_prof_harvest_in        IN harvest.id_prof_harvest%TYPE DEFAULT NULL,
        id_prof_harvest_nin       IN BOOLEAN := TRUE,
        flg_status_in             IN harvest.flg_status%TYPE DEFAULT NULL,
        flg_status_nin            IN BOOLEAN := TRUE,
        num_recipient_in          IN harvest.num_recipient%TYPE DEFAULT NULL,
        num_recipient_nin         IN BOOLEAN := TRUE,
        notes_in                  IN harvest.notes%TYPE DEFAULT NULL,
        notes_nin                 IN BOOLEAN := TRUE,
        id_body_part_in           IN harvest.id_body_part%TYPE DEFAULT NULL,
        id_body_part_nin          IN BOOLEAN := TRUE,
        id_prof_mov_tube_in       IN harvest.id_prof_mov_tube%TYPE DEFAULT NULL,
        id_prof_mov_tube_nin      IN BOOLEAN := TRUE,
        id_prof_receive_tube_in   IN harvest.id_prof_receive_tube%TYPE DEFAULT NULL,
        id_prof_receive_tube_nin  IN BOOLEAN := TRUE,
        id_room_harvest_in        IN harvest.id_room_harvest%TYPE DEFAULT NULL,
        id_room_harvest_nin       IN BOOLEAN := TRUE,
        id_room_receive_tube_in   IN harvest.id_room_receive_tube%TYPE DEFAULT NULL,
        id_room_receive_tube_nin  IN BOOLEAN := TRUE,
        id_prof_cancels_in        IN harvest.id_prof_cancels%TYPE DEFAULT NULL,
        id_prof_cancels_nin       IN BOOLEAN := TRUE,
        notes_cancel_in           IN harvest.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin          IN BOOLEAN := TRUE,
        barcode_in                IN harvest.barcode%TYPE DEFAULT NULL,
        barcode_nin               IN BOOLEAN := TRUE,
        id_institution_in         IN harvest.id_institution%TYPE DEFAULT NULL,
        id_institution_nin        IN BOOLEAN := TRUE,
        id_episode_write_in       IN harvest.id_episode_write%TYPE DEFAULT NULL,
        id_episode_write_nin      IN BOOLEAN := TRUE,
        dt_harvest_tstz_in        IN harvest.dt_harvest_tstz%TYPE DEFAULT NULL,
        dt_harvest_tstz_nin       IN BOOLEAN := TRUE,
        dt_mov_begin_tstz_in      IN harvest.dt_mov_begin_tstz%TYPE DEFAULT NULL,
        dt_mov_begin_tstz_nin     IN BOOLEAN := TRUE,
        dt_lab_reception_tstz_in  IN harvest.dt_lab_reception_tstz%TYPE DEFAULT NULL,
        dt_lab_reception_tstz_nin IN BOOLEAN := TRUE,
        dt_cancel_tstz_in         IN harvest.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin        IN BOOLEAN := TRUE,
        flg_chargeable_in         IN harvest.flg_chargeable%TYPE DEFAULT NULL,
        flg_chargeable_nin        IN BOOLEAN := TRUE,
        id_visit_in               IN harvest.id_visit%TYPE DEFAULT NULL,
        id_visit_nin              IN BOOLEAN := TRUE,
        id_patient_in             IN harvest.id_patient%TYPE DEFAULT NULL,
        id_patient_nin            IN BOOLEAN := TRUE,
        flg_print_in              IN harvest.flg_print%TYPE DEFAULT NULL,
        flg_print_nin             IN BOOLEAN := TRUE,
        create_user_in            IN harvest.create_user%TYPE DEFAULT NULL,
        create_user_nin           IN BOOLEAN := TRUE,
        create_time_in            IN harvest.create_time%TYPE DEFAULT NULL,
        create_time_nin           IN BOOLEAN := TRUE,
        create_institution_in     IN harvest.create_institution%TYPE DEFAULT NULL,
        create_institution_nin    IN BOOLEAN := TRUE,
        update_user_in            IN harvest.update_user%TYPE DEFAULT NULL,
        update_user_nin           IN BOOLEAN := TRUE,
        update_time_in            IN harvest.update_time%TYPE DEFAULT NULL,
        update_time_nin           IN BOOLEAN := TRUE,
        update_institution_in     IN harvest.update_institution%TYPE DEFAULT NULL,
        update_institution_nin    IN BOOLEAN := TRUE,
        id_cancel_reason_in       IN harvest.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin      IN BOOLEAN := TRUE,
        flg_orig_harvest_in       IN harvest.flg_orig_harvest%TYPE DEFAULT NULL,
        flg_orig_harvest_nin      IN BOOLEAN := TRUE,
        dt_harvest_reg_tstz_in    IN harvest.dt_harvest_reg_tstz%TYPE DEFAULT NULL,
        dt_harvest_reg_tstz_nin   IN BOOLEAN := TRUE,
        id_rep_coll_reason_in     IN harvest.id_rep_coll_reason%TYPE DEFAULT NULL,
        id_rep_coll_reason_nin    IN BOOLEAN := TRUE,
        id_harvest_group_in       IN harvest.id_harvest_group%TYPE DEFAULT NULL,
        id_harvest_group_nin      IN BOOLEAN := TRUE,
        dt_begin_harvest_in       IN harvest.dt_begin_harvest%TYPE DEFAULT NULL,
        dt_begin_harvest_nin      IN BOOLEAN := TRUE,
        prof_dep_clin_serv_in     IN harvest.prof_dep_clin_serv%TYPE DEFAULT NULL,
        prof_dep_clin_serv_nin    IN BOOLEAN := TRUE,
        flg_col_inst_in           IN harvest.flg_col_inst%TYPE DEFAULT NULL,
        flg_col_inst_nin          IN BOOLEAN := TRUE,
        flg_mov_tube_in           IN harvest.flg_mov_tube%TYPE DEFAULT NULL,
        flg_mov_tube_nin          IN BOOLEAN := TRUE,
        flg_laterality_in         IN harvest.flg_laterality%TYPE DEFAULT NULL,
        flg_laterality_nin        IN BOOLEAN := TRUE,
        flg_collection_method_in  IN harvest.flg_collection_method%TYPE DEFAULT NULL,
        flg_collection_method_nin IN BOOLEAN := TRUE,
        id_specimen_condition_in  IN harvest.id_specimen_condition%TYPE DEFAULT NULL,
        id_specimen_condition_nin IN BOOLEAN := TRUE,
        amount_in                 IN harvest.amount%TYPE DEFAULT NULL,
        amount_nin                IN BOOLEAN := TRUE,
        id_revised_by_in          IN harvest.id_revised_by%TYPE DEFAULT NULL,
        id_revised_by_nin         IN BOOLEAN := TRUE,
        harvest_instructions_in   IN harvest.harvest_instructions%TYPE DEFAULT NULL,
        harvest_instructions_nin  IN BOOLEAN := TRUE,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  IN OUT table_varchar
    ) IS
        l_rows_out                table_varchar;
        l_id_episode_n            NUMBER(1) := sys.diutil.bool_to_int(id_episode_nin);
        l_id_prof_harvest_n       NUMBER(1) := sys.diutil.bool_to_int(id_prof_harvest_nin);
        l_flg_status_n            NUMBER(1) := sys.diutil.bool_to_int(flg_status_nin);
        l_num_recipient_n         NUMBER(1) := sys.diutil.bool_to_int(num_recipient_nin);
        l_notes_n                 NUMBER(1) := sys.diutil.bool_to_int(notes_nin);
        l_id_body_part_n          NUMBER(1) := sys.diutil.bool_to_int(id_body_part_nin);
        l_id_prof_mov_tube_n      NUMBER(1) := sys.diutil.bool_to_int(id_prof_mov_tube_nin);
        l_id_prof_receive_tube_n  NUMBER(1) := sys.diutil.bool_to_int(id_prof_receive_tube_nin);
        l_id_room_harvest_n       NUMBER(1) := sys.diutil.bool_to_int(id_room_harvest_nin);
        l_id_room_receive_tube_n  NUMBER(1) := sys.diutil.bool_to_int(id_room_receive_tube_nin);
        l_id_prof_cancels_n       NUMBER(1) := sys.diutil.bool_to_int(id_prof_cancels_nin);
        l_notes_cancel_n          NUMBER(1) := sys.diutil.bool_to_int(notes_cancel_nin);
        l_barcode_n               NUMBER(1) := sys.diutil.bool_to_int(barcode_nin);
        l_id_institution_n        NUMBER(1) := sys.diutil.bool_to_int(id_institution_nin);
        l_id_episode_write_n      NUMBER(1) := sys.diutil.bool_to_int(id_episode_write_nin);
        l_dt_harvest_tstz_n       NUMBER(1) := sys.diutil.bool_to_int(dt_harvest_tstz_nin);
        l_dt_mov_begin_tstz_n     NUMBER(1) := sys.diutil.bool_to_int(dt_mov_begin_tstz_nin);
        l_dt_lab_reception_tstz_n NUMBER(1) := sys.diutil.bool_to_int(dt_lab_reception_tstz_nin);
        l_dt_cancel_tstz_n        NUMBER(1) := sys.diutil.bool_to_int(dt_cancel_tstz_nin);
        l_flg_chargeable_n        NUMBER(1) := sys.diutil.bool_to_int(flg_chargeable_nin);
        l_id_visit_n              NUMBER(1) := sys.diutil.bool_to_int(id_visit_nin);
        l_id_patient_n            NUMBER(1) := sys.diutil.bool_to_int(id_patient_nin);
        l_flg_print_n             NUMBER(1) := sys.diutil.bool_to_int(flg_print_nin);
        l_create_user_n           NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n           NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n    NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n           NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n           NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n    NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_id_cancel_reason_n      NUMBER(1) := sys.diutil.bool_to_int(id_cancel_reason_nin);
        l_flg_orig_harvest_n      NUMBER(1) := sys.diutil.bool_to_int(flg_orig_harvest_nin);
        l_dt_harvest_reg_tstz_n   NUMBER(1) := sys.diutil.bool_to_int(dt_harvest_reg_tstz_nin);
        l_id_rep_coll_reason_n    NUMBER(1) := sys.diutil.bool_to_int(id_rep_coll_reason_nin);
        l_id_harvest_group_n      NUMBER(1) := sys.diutil.bool_to_int(id_harvest_group_nin);
        l_dt_begin_harvest_n      NUMBER(1) := sys.diutil.bool_to_int(dt_begin_harvest_nin);
        l_prof_dep_clin_serv_n    NUMBER(1) := sys.diutil.bool_to_int(prof_dep_clin_serv_nin);
        l_flg_col_inst_n          NUMBER(1) := sys.diutil.bool_to_int(flg_col_inst_nin);
        l_flg_mov_tube_n          NUMBER(1) := sys.diutil.bool_to_int(flg_mov_tube_nin);
        l_flg_laterality_n        NUMBER(1) := sys.diutil.bool_to_int(flg_laterality_nin);
        l_flg_collection_method_n NUMBER(1) := sys.diutil.bool_to_int(flg_collection_method_nin);
        l_id_specimen_condition_n NUMBER(1) := sys.diutil.bool_to_int(id_specimen_condition_nin);
        l_amount_n                NUMBER(1) := sys.diutil.bool_to_int(amount_nin);
        l_id_revised_by_n         NUMBER(1) := sys.diutil.bool_to_int(id_revised_by_nin);
        l_harvest_instructions_n  NUMBER(1) := sys.diutil.bool_to_int(harvest_instructions_nin);
    BEGIN
    
        UPDATE harvest
           SET id_episode            = decode(l_id_episode_n, 0, id_episode_in, nvl(id_episode_in, id_episode)),
               id_prof_harvest       = decode(l_id_prof_harvest_n,
                                              0,
                                              id_prof_harvest_in,
                                              nvl(id_prof_harvest_in, id_prof_harvest)),
               flg_status            = decode(l_flg_status_n, 0, flg_status_in, nvl(flg_status_in, flg_status)),
               num_recipient         = decode(l_num_recipient_n,
                                              0,
                                              num_recipient_in,
                                              nvl(num_recipient_in, num_recipient)),
               notes                 = decode(l_notes_n, 0, notes_in, nvl(notes_in, notes)),
               id_body_part          = decode(l_id_body_part_n, 0, id_body_part_in, nvl(id_body_part_in, id_body_part)),
               id_prof_mov_tube      = decode(l_id_prof_mov_tube_n,
                                              0,
                                              id_prof_mov_tube_in,
                                              nvl(id_prof_mov_tube_in, id_prof_mov_tube)),
               id_prof_receive_tube  = decode(l_id_prof_receive_tube_n,
                                              0,
                                              id_prof_receive_tube_in,
                                              nvl(id_prof_receive_tube_in, id_prof_receive_tube)),
               id_room_harvest       = decode(l_id_room_harvest_n,
                                              0,
                                              id_room_harvest_in,
                                              nvl(id_room_harvest_in, id_room_harvest)),
               id_room_receive_tube  = decode(l_id_room_receive_tube_n,
                                              0,
                                              id_room_receive_tube_in,
                                              nvl(id_room_receive_tube_in, id_room_receive_tube)),
               id_prof_cancels       = decode(l_id_prof_cancels_n,
                                              0,
                                              id_prof_cancels_in,
                                              nvl(id_prof_cancels_in, id_prof_cancels)),
               notes_cancel          = decode(l_notes_cancel_n, 0, notes_cancel_in, nvl(notes_cancel_in, notes_cancel)),
               barcode               = decode(l_barcode_n, 0, barcode_in, nvl(barcode_in, barcode)),
               id_institution        = decode(l_id_institution_n,
                                              0,
                                              id_institution_in,
                                              nvl(id_institution_in, id_institution)),
               id_episode_write      = decode(l_id_episode_write_n,
                                              0,
                                              id_episode_write_in,
                                              nvl(id_episode_write_in, id_episode_write)),
               dt_harvest_tstz       = decode(l_dt_harvest_tstz_n,
                                              0,
                                              dt_harvest_tstz_in,
                                              nvl(dt_harvest_tstz_in, dt_harvest_tstz)),
               dt_mov_begin_tstz     = decode(l_dt_mov_begin_tstz_n,
                                              0,
                                              dt_mov_begin_tstz_in,
                                              nvl(dt_mov_begin_tstz_in, dt_mov_begin_tstz)),
               dt_lab_reception_tstz = decode(l_dt_lab_reception_tstz_n,
                                              0,
                                              dt_lab_reception_tstz_in,
                                              nvl(dt_lab_reception_tstz_in, dt_lab_reception_tstz)),
               dt_cancel_tstz        = decode(l_dt_cancel_tstz_n,
                                              0,
                                              dt_cancel_tstz_in,
                                              nvl(dt_cancel_tstz_in, dt_cancel_tstz)),
               flg_chargeable        = decode(l_flg_chargeable_n,
                                              0,
                                              flg_chargeable_in,
                                              nvl(flg_chargeable_in, flg_chargeable)),
               id_visit              = decode(l_id_visit_n, 0, id_visit_in, nvl(id_visit_in, id_visit)),
               id_patient            = decode(l_id_patient_n, 0, id_patient_in, nvl(id_patient_in, id_patient)),
               flg_print             = decode(l_flg_print_n, 0, flg_print_in, nvl(flg_print_in, flg_print)),
               create_user           = decode(l_create_user_n, 0, create_user_in, nvl(create_user_in, create_user)),
               create_time           = decode(l_create_time_n, 0, create_time_in, nvl(create_time_in, create_time)),
               create_institution    = decode(l_create_institution_n,
                                              0,
                                              create_institution_in,
                                              nvl(create_institution_in, create_institution)),
               update_user           = decode(l_update_user_n, 0, update_user_in, nvl(update_user_in, update_user)),
               update_time           = decode(l_update_time_n, 0, update_time_in, nvl(update_time_in, update_time)),
               update_institution    = decode(l_update_institution_n,
                                              0,
                                              update_institution_in,
                                              nvl(update_institution_in, update_institution)),
               id_cancel_reason      = decode(l_id_cancel_reason_n,
                                              0,
                                              id_cancel_reason_in,
                                              nvl(id_cancel_reason_in, id_cancel_reason)),
               flg_orig_harvest      = decode(l_flg_orig_harvest_n,
                                              0,
                                              flg_orig_harvest_in,
                                              nvl(flg_orig_harvest_in, flg_orig_harvest)),
               dt_harvest_reg_tstz   = decode(l_dt_harvest_reg_tstz_n,
                                              0,
                                              dt_harvest_reg_tstz_in,
                                              nvl(dt_harvest_reg_tstz_in, dt_harvest_reg_tstz)),
               id_rep_coll_reason    = decode(l_id_rep_coll_reason_n,
                                              0,
                                              id_rep_coll_reason_in,
                                              nvl(id_rep_coll_reason_in, id_rep_coll_reason)),
               id_harvest_group      = decode(l_id_harvest_group_n,
                                              0,
                                              id_harvest_group_in,
                                              nvl(id_harvest_group_in, id_harvest_group)),
               dt_begin_harvest      = decode(l_dt_begin_harvest_n,
                                              0,
                                              dt_begin_harvest_in,
                                              nvl(dt_begin_harvest_in, dt_begin_harvest)),
               prof_dep_clin_serv    = decode(l_prof_dep_clin_serv_n,
                                              0,
                                              prof_dep_clin_serv_in,
                                              nvl(prof_dep_clin_serv_in, prof_dep_clin_serv)),
               flg_col_inst          = decode(l_flg_col_inst_n, 0, flg_col_inst_in, nvl(flg_col_inst_in, flg_col_inst)),
               flg_mov_tube          = decode(l_flg_mov_tube_n, 0, flg_mov_tube_in, nvl(flg_mov_tube_in, flg_mov_tube)),
               flg_laterality        = decode(l_flg_laterality_n,
                                              0,
                                              flg_laterality_in,
                                              nvl(flg_laterality_in, flg_laterality)),
               flg_collection_method = decode(l_flg_collection_method_n,
                                              0,
                                              flg_collection_method_in,
                                              nvl(flg_collection_method_in, flg_collection_method)),
               id_specimen_condition = decode(l_id_specimen_condition_n,
                                              0,
                                              id_specimen_condition_in,
                                              nvl(id_specimen_condition_in, id_specimen_condition)),
               amount                = decode(l_amount_n, 0, amount_in, nvl(amount_in, amount)),
               id_revised_by         = decode(l_id_revised_by_n,
                                              0,
                                              id_revised_by_in,
                                              nvl(id_revised_by_in, id_revised_by)),
               harvest_instructions  = decode(l_harvest_instructions_n,
                                              0,
                                              harvest_instructions_in,
                                              nvl(harvest_instructions_in, harvest_instructions))
         WHERE id_harvest = id_harvest_in
        RETURNING ROWID BULK COLLECT INTO l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_harvest_in             IN harvest.id_harvest%TYPE,
        id_episode_in             IN harvest.id_episode%TYPE DEFAULT NULL,
        id_episode_nin            IN BOOLEAN := TRUE,
        id_prof_harvest_in        IN harvest.id_prof_harvest%TYPE DEFAULT NULL,
        id_prof_harvest_nin       IN BOOLEAN := TRUE,
        flg_status_in             IN harvest.flg_status%TYPE DEFAULT NULL,
        flg_status_nin            IN BOOLEAN := TRUE,
        num_recipient_in          IN harvest.num_recipient%TYPE DEFAULT NULL,
        num_recipient_nin         IN BOOLEAN := TRUE,
        notes_in                  IN harvest.notes%TYPE DEFAULT NULL,
        notes_nin                 IN BOOLEAN := TRUE,
        id_body_part_in           IN harvest.id_body_part%TYPE DEFAULT NULL,
        id_body_part_nin          IN BOOLEAN := TRUE,
        id_prof_mov_tube_in       IN harvest.id_prof_mov_tube%TYPE DEFAULT NULL,
        id_prof_mov_tube_nin      IN BOOLEAN := TRUE,
        id_prof_receive_tube_in   IN harvest.id_prof_receive_tube%TYPE DEFAULT NULL,
        id_prof_receive_tube_nin  IN BOOLEAN := TRUE,
        id_room_harvest_in        IN harvest.id_room_harvest%TYPE DEFAULT NULL,
        id_room_harvest_nin       IN BOOLEAN := TRUE,
        id_room_receive_tube_in   IN harvest.id_room_receive_tube%TYPE DEFAULT NULL,
        id_room_receive_tube_nin  IN BOOLEAN := TRUE,
        id_prof_cancels_in        IN harvest.id_prof_cancels%TYPE DEFAULT NULL,
        id_prof_cancels_nin       IN BOOLEAN := TRUE,
        notes_cancel_in           IN harvest.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin          IN BOOLEAN := TRUE,
        barcode_in                IN harvest.barcode%TYPE DEFAULT NULL,
        barcode_nin               IN BOOLEAN := TRUE,
        id_institution_in         IN harvest.id_institution%TYPE DEFAULT NULL,
        id_institution_nin        IN BOOLEAN := TRUE,
        id_episode_write_in       IN harvest.id_episode_write%TYPE DEFAULT NULL,
        id_episode_write_nin      IN BOOLEAN := TRUE,
        dt_harvest_tstz_in        IN harvest.dt_harvest_tstz%TYPE DEFAULT NULL,
        dt_harvest_tstz_nin       IN BOOLEAN := TRUE,
        dt_mov_begin_tstz_in      IN harvest.dt_mov_begin_tstz%TYPE DEFAULT NULL,
        dt_mov_begin_tstz_nin     IN BOOLEAN := TRUE,
        dt_lab_reception_tstz_in  IN harvest.dt_lab_reception_tstz%TYPE DEFAULT NULL,
        dt_lab_reception_tstz_nin IN BOOLEAN := TRUE,
        dt_cancel_tstz_in         IN harvest.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin        IN BOOLEAN := TRUE,
        flg_chargeable_in         IN harvest.flg_chargeable%TYPE DEFAULT NULL,
        flg_chargeable_nin        IN BOOLEAN := TRUE,
        id_visit_in               IN harvest.id_visit%TYPE DEFAULT NULL,
        id_visit_nin              IN BOOLEAN := TRUE,
        id_patient_in             IN harvest.id_patient%TYPE DEFAULT NULL,
        id_patient_nin            IN BOOLEAN := TRUE,
        flg_print_in              IN harvest.flg_print%TYPE DEFAULT NULL,
        flg_print_nin             IN BOOLEAN := TRUE,
        create_user_in            IN harvest.create_user%TYPE DEFAULT NULL,
        create_user_nin           IN BOOLEAN := TRUE,
        create_time_in            IN harvest.create_time%TYPE DEFAULT NULL,
        create_time_nin           IN BOOLEAN := TRUE,
        create_institution_in     IN harvest.create_institution%TYPE DEFAULT NULL,
        create_institution_nin    IN BOOLEAN := TRUE,
        update_user_in            IN harvest.update_user%TYPE DEFAULT NULL,
        update_user_nin           IN BOOLEAN := TRUE,
        update_time_in            IN harvest.update_time%TYPE DEFAULT NULL,
        update_time_nin           IN BOOLEAN := TRUE,
        update_institution_in     IN harvest.update_institution%TYPE DEFAULT NULL,
        update_institution_nin    IN BOOLEAN := TRUE,
        id_cancel_reason_in       IN harvest.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin      IN BOOLEAN := TRUE,
        flg_orig_harvest_in       IN harvest.flg_orig_harvest%TYPE DEFAULT NULL,
        flg_orig_harvest_nin      IN BOOLEAN := TRUE,
        dt_harvest_reg_tstz_in    IN harvest.dt_harvest_reg_tstz%TYPE DEFAULT NULL,
        dt_harvest_reg_tstz_nin   IN BOOLEAN := TRUE,
        id_rep_coll_reason_in     IN harvest.id_rep_coll_reason%TYPE DEFAULT NULL,
        id_rep_coll_reason_nin    IN BOOLEAN := TRUE,
        id_harvest_group_in       IN harvest.id_harvest_group%TYPE DEFAULT NULL,
        id_harvest_group_nin      IN BOOLEAN := TRUE,
        dt_begin_harvest_in       IN harvest.dt_begin_harvest%TYPE DEFAULT NULL,
        dt_begin_harvest_nin      IN BOOLEAN := TRUE,
        prof_dep_clin_serv_in     IN harvest.prof_dep_clin_serv%TYPE DEFAULT NULL,
        prof_dep_clin_serv_nin    IN BOOLEAN := TRUE,
        flg_col_inst_in           IN harvest.flg_col_inst%TYPE DEFAULT NULL,
        flg_col_inst_nin          IN BOOLEAN := TRUE,
        flg_mov_tube_in           IN harvest.flg_mov_tube%TYPE DEFAULT NULL,
        flg_mov_tube_nin          IN BOOLEAN := TRUE,
        flg_laterality_in         IN harvest.flg_laterality%TYPE DEFAULT NULL,
        flg_laterality_nin        IN BOOLEAN := TRUE,
        flg_collection_method_in  IN harvest.flg_collection_method%TYPE DEFAULT NULL,
        flg_collection_method_nin IN BOOLEAN := TRUE,
        id_specimen_condition_in  IN harvest.id_specimen_condition%TYPE DEFAULT NULL,
        id_specimen_condition_nin IN BOOLEAN := TRUE,
        amount_in                 IN harvest.amount%TYPE DEFAULT NULL,
        amount_nin                IN BOOLEAN := TRUE,
        id_revised_by_in          IN harvest.id_revised_by%TYPE DEFAULT NULL,
        id_revised_by_nin         IN BOOLEAN := TRUE,
        harvest_instructions_in   IN harvest.harvest_instructions%TYPE DEFAULT NULL,
        harvest_instructions_nin  IN BOOLEAN := TRUE,
        handle_error_in           IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_harvest_in             => id_harvest_in,
            id_episode_in             => id_episode_in,
            id_episode_nin            => id_episode_nin,
            id_prof_harvest_in        => id_prof_harvest_in,
            id_prof_harvest_nin       => id_prof_harvest_nin,
            flg_status_in             => flg_status_in,
            flg_status_nin            => flg_status_nin,
            num_recipient_in          => num_recipient_in,
            num_recipient_nin         => num_recipient_nin,
            notes_in                  => notes_in,
            notes_nin                 => notes_nin,
            id_body_part_in           => id_body_part_in,
            id_body_part_nin          => id_body_part_nin,
            id_prof_mov_tube_in       => id_prof_mov_tube_in,
            id_prof_mov_tube_nin      => id_prof_mov_tube_nin,
            id_prof_receive_tube_in   => id_prof_receive_tube_in,
            id_prof_receive_tube_nin  => id_prof_receive_tube_nin,
            id_room_harvest_in        => id_room_harvest_in,
            id_room_harvest_nin       => id_room_harvest_nin,
            id_room_receive_tube_in   => id_room_receive_tube_in,
            id_room_receive_tube_nin  => id_room_receive_tube_nin,
            id_prof_cancels_in        => id_prof_cancels_in,
            id_prof_cancels_nin       => id_prof_cancels_nin,
            notes_cancel_in           => notes_cancel_in,
            notes_cancel_nin          => notes_cancel_nin,
            barcode_in                => barcode_in,
            barcode_nin               => barcode_nin,
            id_institution_in         => id_institution_in,
            id_institution_nin        => id_institution_nin,
            id_episode_write_in       => id_episode_write_in,
            id_episode_write_nin      => id_episode_write_nin,
            dt_harvest_tstz_in        => dt_harvest_tstz_in,
            dt_harvest_tstz_nin       => dt_harvest_tstz_nin,
            dt_mov_begin_tstz_in      => dt_mov_begin_tstz_in,
            dt_mov_begin_tstz_nin     => dt_mov_begin_tstz_nin,
            dt_lab_reception_tstz_in  => dt_lab_reception_tstz_in,
            dt_lab_reception_tstz_nin => dt_lab_reception_tstz_nin,
            dt_cancel_tstz_in         => dt_cancel_tstz_in,
            dt_cancel_tstz_nin        => dt_cancel_tstz_nin,
            flg_chargeable_in         => flg_chargeable_in,
            flg_chargeable_nin        => flg_chargeable_nin,
            id_visit_in               => id_visit_in,
            id_visit_nin              => id_visit_nin,
            id_patient_in             => id_patient_in,
            id_patient_nin            => id_patient_nin,
            flg_print_in              => flg_print_in,
            flg_print_nin             => flg_print_nin,
            create_user_in            => create_user_in,
            create_user_nin           => create_user_nin,
            create_time_in            => create_time_in,
            create_time_nin           => create_time_nin,
            create_institution_in     => create_institution_in,
            create_institution_nin    => create_institution_nin,
            update_user_in            => update_user_in,
            update_user_nin           => update_user_nin,
            update_time_in            => update_time_in,
            update_time_nin           => update_time_nin,
            update_institution_in     => update_institution_in,
            update_institution_nin    => update_institution_nin,
            id_cancel_reason_in       => id_cancel_reason_in,
            id_cancel_reason_nin      => id_cancel_reason_nin,
            flg_orig_harvest_in       => flg_orig_harvest_in,
            flg_orig_harvest_nin      => flg_orig_harvest_nin,
            dt_harvest_reg_tstz_in    => dt_harvest_reg_tstz_in,
            dt_harvest_reg_tstz_nin   => dt_harvest_reg_tstz_nin,
            id_rep_coll_reason_in     => id_rep_coll_reason_in,
            id_rep_coll_reason_nin    => id_rep_coll_reason_nin,
            id_harvest_group_in       => id_harvest_group_in,
            id_harvest_group_nin      => id_harvest_group_nin,
            dt_begin_harvest_in       => dt_begin_harvest_in,
            dt_begin_harvest_nin      => dt_begin_harvest_nin,
            prof_dep_clin_serv_in     => prof_dep_clin_serv_in,
            prof_dep_clin_serv_nin    => prof_dep_clin_serv_nin,
            flg_col_inst_in           => flg_col_inst_in,
            flg_col_inst_nin          => flg_col_inst_nin,
            flg_mov_tube_in           => flg_mov_tube_in,
            flg_mov_tube_nin          => flg_mov_tube_nin,
            flg_laterality_in         => flg_laterality_in,
            flg_laterality_nin        => flg_laterality_nin,
            flg_collection_method_in  => flg_collection_method_in,
            flg_collection_method_nin => flg_collection_method_nin,
            id_specimen_condition_in  => id_specimen_condition_in,
            id_specimen_condition_nin => id_specimen_condition_nin,
            amount_in                 => amount_in,
            amount_nin                => amount_nin,
            id_revised_by_in          => id_revised_by_in,
            id_revised_by_nin         => id_revised_by_nin,
            harvest_instructions_in   => harvest_instructions_in,
            harvest_instructions_nin  => harvest_instructions_nin,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_episode_in             IN harvest.id_episode%TYPE DEFAULT NULL,
        id_episode_nin            IN BOOLEAN := TRUE,
        id_prof_harvest_in        IN harvest.id_prof_harvest%TYPE DEFAULT NULL,
        id_prof_harvest_nin       IN BOOLEAN := TRUE,
        flg_status_in             IN harvest.flg_status%TYPE DEFAULT NULL,
        flg_status_nin            IN BOOLEAN := TRUE,
        num_recipient_in          IN harvest.num_recipient%TYPE DEFAULT NULL,
        num_recipient_nin         IN BOOLEAN := TRUE,
        notes_in                  IN harvest.notes%TYPE DEFAULT NULL,
        notes_nin                 IN BOOLEAN := TRUE,
        id_body_part_in           IN harvest.id_body_part%TYPE DEFAULT NULL,
        id_body_part_nin          IN BOOLEAN := TRUE,
        id_prof_mov_tube_in       IN harvest.id_prof_mov_tube%TYPE DEFAULT NULL,
        id_prof_mov_tube_nin      IN BOOLEAN := TRUE,
        id_prof_receive_tube_in   IN harvest.id_prof_receive_tube%TYPE DEFAULT NULL,
        id_prof_receive_tube_nin  IN BOOLEAN := TRUE,
        id_room_harvest_in        IN harvest.id_room_harvest%TYPE DEFAULT NULL,
        id_room_harvest_nin       IN BOOLEAN := TRUE,
        id_room_receive_tube_in   IN harvest.id_room_receive_tube%TYPE DEFAULT NULL,
        id_room_receive_tube_nin  IN BOOLEAN := TRUE,
        id_prof_cancels_in        IN harvest.id_prof_cancels%TYPE DEFAULT NULL,
        id_prof_cancels_nin       IN BOOLEAN := TRUE,
        notes_cancel_in           IN harvest.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin          IN BOOLEAN := TRUE,
        barcode_in                IN harvest.barcode%TYPE DEFAULT NULL,
        barcode_nin               IN BOOLEAN := TRUE,
        id_institution_in         IN harvest.id_institution%TYPE DEFAULT NULL,
        id_institution_nin        IN BOOLEAN := TRUE,
        id_episode_write_in       IN harvest.id_episode_write%TYPE DEFAULT NULL,
        id_episode_write_nin      IN BOOLEAN := TRUE,
        dt_harvest_tstz_in        IN harvest.dt_harvest_tstz%TYPE DEFAULT NULL,
        dt_harvest_tstz_nin       IN BOOLEAN := TRUE,
        dt_mov_begin_tstz_in      IN harvest.dt_mov_begin_tstz%TYPE DEFAULT NULL,
        dt_mov_begin_tstz_nin     IN BOOLEAN := TRUE,
        dt_lab_reception_tstz_in  IN harvest.dt_lab_reception_tstz%TYPE DEFAULT NULL,
        dt_lab_reception_tstz_nin IN BOOLEAN := TRUE,
        dt_cancel_tstz_in         IN harvest.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin        IN BOOLEAN := TRUE,
        flg_chargeable_in         IN harvest.flg_chargeable%TYPE DEFAULT NULL,
        flg_chargeable_nin        IN BOOLEAN := TRUE,
        id_visit_in               IN harvest.id_visit%TYPE DEFAULT NULL,
        id_visit_nin              IN BOOLEAN := TRUE,
        id_patient_in             IN harvest.id_patient%TYPE DEFAULT NULL,
        id_patient_nin            IN BOOLEAN := TRUE,
        flg_print_in              IN harvest.flg_print%TYPE DEFAULT NULL,
        flg_print_nin             IN BOOLEAN := TRUE,
        create_user_in            IN harvest.create_user%TYPE DEFAULT NULL,
        create_user_nin           IN BOOLEAN := TRUE,
        create_time_in            IN harvest.create_time%TYPE DEFAULT NULL,
        create_time_nin           IN BOOLEAN := TRUE,
        create_institution_in     IN harvest.create_institution%TYPE DEFAULT NULL,
        create_institution_nin    IN BOOLEAN := TRUE,
        update_user_in            IN harvest.update_user%TYPE DEFAULT NULL,
        update_user_nin           IN BOOLEAN := TRUE,
        update_time_in            IN harvest.update_time%TYPE DEFAULT NULL,
        update_time_nin           IN BOOLEAN := TRUE,
        update_institution_in     IN harvest.update_institution%TYPE DEFAULT NULL,
        update_institution_nin    IN BOOLEAN := TRUE,
        id_cancel_reason_in       IN harvest.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin      IN BOOLEAN := TRUE,
        flg_orig_harvest_in       IN harvest.flg_orig_harvest%TYPE DEFAULT NULL,
        flg_orig_harvest_nin      IN BOOLEAN := TRUE,
        dt_harvest_reg_tstz_in    IN harvest.dt_harvest_reg_tstz%TYPE DEFAULT NULL,
        dt_harvest_reg_tstz_nin   IN BOOLEAN := TRUE,
        id_rep_coll_reason_in     IN harvest.id_rep_coll_reason%TYPE DEFAULT NULL,
        id_rep_coll_reason_nin    IN BOOLEAN := TRUE,
        id_harvest_group_in       IN harvest.id_harvest_group%TYPE DEFAULT NULL,
        id_harvest_group_nin      IN BOOLEAN := TRUE,
        dt_begin_harvest_in       IN harvest.dt_begin_harvest%TYPE DEFAULT NULL,
        dt_begin_harvest_nin      IN BOOLEAN := TRUE,
        prof_dep_clin_serv_in     IN harvest.prof_dep_clin_serv%TYPE DEFAULT NULL,
        prof_dep_clin_serv_nin    IN BOOLEAN := TRUE,
        flg_col_inst_in           IN harvest.flg_col_inst%TYPE DEFAULT NULL,
        flg_col_inst_nin          IN BOOLEAN := TRUE,
        flg_mov_tube_in           IN harvest.flg_mov_tube%TYPE DEFAULT NULL,
        flg_mov_tube_nin          IN BOOLEAN := TRUE,
        flg_laterality_in         IN harvest.flg_laterality%TYPE DEFAULT NULL,
        flg_laterality_nin        IN BOOLEAN := TRUE,
        flg_collection_method_in  IN harvest.flg_collection_method%TYPE DEFAULT NULL,
        flg_collection_method_nin IN BOOLEAN := TRUE,
        id_specimen_condition_in  IN harvest.id_specimen_condition%TYPE DEFAULT NULL,
        id_specimen_condition_nin IN BOOLEAN := TRUE,
        amount_in                 IN harvest.amount%TYPE DEFAULT NULL,
        amount_nin                IN BOOLEAN := TRUE,
        id_revised_by_in          IN harvest.id_revised_by%TYPE DEFAULT NULL,
        id_revised_by_nin         IN BOOLEAN := TRUE,
        harvest_instructions_in   IN harvest.harvest_instructions%TYPE DEFAULT NULL,
        harvest_instructions_nin  IN BOOLEAN := TRUE,
        where_in                  IN VARCHAR2,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  IN OUT table_varchar
    ) IS
        l_sql                     VARCHAR2(32767);
        l_rows_out                table_varchar;
        l_id_episode_n            NUMBER(1) := sys.diutil.bool_to_int(id_episode_nin);
        l_id_prof_harvest_n       NUMBER(1) := sys.diutil.bool_to_int(id_prof_harvest_nin);
        l_flg_status_n            NUMBER(1) := sys.diutil.bool_to_int(flg_status_nin);
        l_num_recipient_n         NUMBER(1) := sys.diutil.bool_to_int(num_recipient_nin);
        l_notes_n                 NUMBER(1) := sys.diutil.bool_to_int(notes_nin);
        l_id_body_part_n          NUMBER(1) := sys.diutil.bool_to_int(id_body_part_nin);
        l_id_prof_mov_tube_n      NUMBER(1) := sys.diutil.bool_to_int(id_prof_mov_tube_nin);
        l_id_prof_receive_tube_n  NUMBER(1) := sys.diutil.bool_to_int(id_prof_receive_tube_nin);
        l_id_room_harvest_n       NUMBER(1) := sys.diutil.bool_to_int(id_room_harvest_nin);
        l_id_room_receive_tube_n  NUMBER(1) := sys.diutil.bool_to_int(id_room_receive_tube_nin);
        l_id_prof_cancels_n       NUMBER(1) := sys.diutil.bool_to_int(id_prof_cancels_nin);
        l_notes_cancel_n          NUMBER(1) := sys.diutil.bool_to_int(notes_cancel_nin);
        l_barcode_n               NUMBER(1) := sys.diutil.bool_to_int(barcode_nin);
        l_id_institution_n        NUMBER(1) := sys.diutil.bool_to_int(id_institution_nin);
        l_id_episode_write_n      NUMBER(1) := sys.diutil.bool_to_int(id_episode_write_nin);
        l_dt_harvest_tstz_n       NUMBER(1) := sys.diutil.bool_to_int(dt_harvest_tstz_nin);
        l_dt_mov_begin_tstz_n     NUMBER(1) := sys.diutil.bool_to_int(dt_mov_begin_tstz_nin);
        l_dt_lab_reception_tstz_n NUMBER(1) := sys.diutil.bool_to_int(dt_lab_reception_tstz_nin);
        l_dt_cancel_tstz_n        NUMBER(1) := sys.diutil.bool_to_int(dt_cancel_tstz_nin);
        l_flg_chargeable_n        NUMBER(1) := sys.diutil.bool_to_int(flg_chargeable_nin);
        l_id_visit_n              NUMBER(1) := sys.diutil.bool_to_int(id_visit_nin);
        l_id_patient_n            NUMBER(1) := sys.diutil.bool_to_int(id_patient_nin);
        l_flg_print_n             NUMBER(1) := sys.diutil.bool_to_int(flg_print_nin);
        l_create_user_n           NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n           NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n    NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n           NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n           NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n    NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_id_cancel_reason_n      NUMBER(1) := sys.diutil.bool_to_int(id_cancel_reason_nin);
        l_flg_orig_harvest_n      NUMBER(1) := sys.diutil.bool_to_int(flg_orig_harvest_nin);
        l_dt_harvest_reg_tstz_n   NUMBER(1) := sys.diutil.bool_to_int(dt_harvest_reg_tstz_nin);
        l_id_rep_coll_reason_n    NUMBER(1) := sys.diutil.bool_to_int(id_rep_coll_reason_nin);
        l_id_harvest_group_n      NUMBER(1) := sys.diutil.bool_to_int(id_harvest_group_nin);
        l_dt_begin_harvest_n      NUMBER(1) := sys.diutil.bool_to_int(dt_begin_harvest_nin);
        l_prof_dep_clin_serv_n    NUMBER(1) := sys.diutil.bool_to_int(prof_dep_clin_serv_nin);
        l_flg_col_inst_n          NUMBER(1) := sys.diutil.bool_to_int(flg_col_inst_nin);
        l_flg_mov_tube_n          NUMBER(1) := sys.diutil.bool_to_int(flg_mov_tube_nin);
        l_flg_laterality_n        NUMBER(1) := sys.diutil.bool_to_int(flg_laterality_nin);
        l_flg_collection_method_n NUMBER(1) := sys.diutil.bool_to_int(flg_collection_method_nin);
        l_id_specimen_condition_n NUMBER(1) := sys.diutil.bool_to_int(id_specimen_condition_nin);
        l_amount_n                NUMBER(1) := sys.diutil.bool_to_int(amount_nin);
        l_id_revised_by_n         NUMBER(1) := sys.diutil.bool_to_int(id_revised_by_nin);
        l_harvest_instructions_n  NUMBER(1) := sys.diutil.bool_to_int(harvest_instructions_nin);
    BEGIN
        l_id_episode_n            := sys.diutil.bool_to_int(id_episode_nin);
        l_id_prof_harvest_n       := sys.diutil.bool_to_int(id_prof_harvest_nin);
        l_flg_status_n            := sys.diutil.bool_to_int(flg_status_nin);
        l_num_recipient_n         := sys.diutil.bool_to_int(num_recipient_nin);
        l_notes_n                 := sys.diutil.bool_to_int(notes_nin);
        l_id_body_part_n          := sys.diutil.bool_to_int(id_body_part_nin);
        l_id_prof_mov_tube_n      := sys.diutil.bool_to_int(id_prof_mov_tube_nin);
        l_id_prof_receive_tube_n  := sys.diutil.bool_to_int(id_prof_receive_tube_nin);
        l_id_room_harvest_n       := sys.diutil.bool_to_int(id_room_harvest_nin);
        l_id_room_receive_tube_n  := sys.diutil.bool_to_int(id_room_receive_tube_nin);
        l_id_prof_cancels_n       := sys.diutil.bool_to_int(id_prof_cancels_nin);
        l_notes_cancel_n          := sys.diutil.bool_to_int(notes_cancel_nin);
        l_barcode_n               := sys.diutil.bool_to_int(barcode_nin);
        l_id_institution_n        := sys.diutil.bool_to_int(id_institution_nin);
        l_id_episode_write_n      := sys.diutil.bool_to_int(id_episode_write_nin);
        l_dt_harvest_tstz_n       := sys.diutil.bool_to_int(dt_harvest_tstz_nin);
        l_dt_mov_begin_tstz_n     := sys.diutil.bool_to_int(dt_mov_begin_tstz_nin);
        l_dt_lab_reception_tstz_n := sys.diutil.bool_to_int(dt_lab_reception_tstz_nin);
        l_dt_cancel_tstz_n        := sys.diutil.bool_to_int(dt_cancel_tstz_nin);
        l_flg_chargeable_n        := sys.diutil.bool_to_int(flg_chargeable_nin);
        l_id_visit_n              := sys.diutil.bool_to_int(id_visit_nin);
        l_id_patient_n            := sys.diutil.bool_to_int(id_patient_nin);
        l_flg_print_n             := sys.diutil.bool_to_int(flg_print_nin);
        l_create_user_n           := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n           := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n    := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n           := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n           := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n    := sys.diutil.bool_to_int(update_institution_nin);
        l_id_cancel_reason_n      := sys.diutil.bool_to_int(id_cancel_reason_nin);
        l_flg_orig_harvest_n      := sys.diutil.bool_to_int(flg_orig_harvest_nin);
        l_dt_harvest_reg_tstz_n   := sys.diutil.bool_to_int(dt_harvest_reg_tstz_nin);
        l_id_rep_coll_reason_n    := sys.diutil.bool_to_int(id_rep_coll_reason_nin);
        l_id_harvest_group_n      := sys.diutil.bool_to_int(id_harvest_group_nin);
        l_dt_begin_harvest_n      := sys.diutil.bool_to_int(dt_begin_harvest_nin);
        l_prof_dep_clin_serv_n    := sys.diutil.bool_to_int(prof_dep_clin_serv_nin);
        l_flg_col_inst_n          := sys.diutil.bool_to_int(flg_col_inst_nin);
        l_flg_mov_tube_n          := sys.diutil.bool_to_int(flg_mov_tube_nin);
        l_flg_laterality_n        := sys.diutil.bool_to_int(flg_laterality_nin);
        l_flg_collection_method_n := sys.diutil.bool_to_int(flg_collection_method_nin);
        l_id_specimen_condition_n := sys.diutil.bool_to_int(id_specimen_condition_nin);
        l_amount_n                := sys.diutil.bool_to_int(amount_nin);
        l_id_revised_by_n         := sys.diutil.bool_to_int(id_revised_by_nin);
        l_harvest_instructions_n  := sys.diutil.bool_to_int(harvest_instructions_nin);
        l_sql                     := 'UPDATE harvest SET' || ' ID_EPISODE = decode (' || l_id_episode_n ||
                                     ',0,:ID_EPISODE_in, NVL (:ID_EPISODE_in, ID_EPISODE)) ' || ',' ||
                                     ' ID_PROF_HARVEST = decode (' || l_id_prof_harvest_n ||
                                     ',0,:ID_PROF_HARVEST_in, NVL (:ID_PROF_HARVEST_in, ID_PROF_HARVEST)) ' || ',' ||
                                     ' FLG_STATUS = decode (' || l_flg_status_n ||
                                     ',0,:FLG_STATUS_in, NVL (:FLG_STATUS_in, FLG_STATUS)) ' || ',' ||
                                     ' NUM_RECIPIENT = decode (' || l_num_recipient_n ||
                                     ',0,:NUM_RECIPIENT_in, NVL (:NUM_RECIPIENT_in, NUM_RECIPIENT)) ' || ',' ||
                                     ' NOTES = decode (' || l_notes_n || ',0,:NOTES_in, NVL (:NOTES_in, NOTES)) ' || ',' ||
                                     ' ID_BODY_PART = decode (' || l_id_body_part_n ||
                                     ',0,:ID_BODY_PART_in, NVL (:ID_BODY_PART_in, ID_BODY_PART)) ' || ',' ||
                                     ' ID_PROF_MOV_TUBE = decode (' || l_id_prof_mov_tube_n ||
                                     ',0,:ID_PROF_MOV_TUBE_in, NVL (:ID_PROF_MOV_TUBE_in, ID_PROF_MOV_TUBE)) ' || ',' ||
                                     ' ID_PROF_RECEIVE_TUBE = decode (' || l_id_prof_receive_tube_n ||
                                     ',0,:ID_PROF_RECEIVE_TUBE_in, NVL (:ID_PROF_RECEIVE_TUBE_in, ID_PROF_RECEIVE_TUBE)) ' || ',' ||
                                     ' ID_ROOM_HARVEST = decode (' || l_id_room_harvest_n ||
                                     ',0,:ID_ROOM_HARVEST_in, NVL (:ID_ROOM_HARVEST_in, ID_ROOM_HARVEST)) ' || ',' ||
                                     ' ID_ROOM_RECEIVE_TUBE = decode (' || l_id_room_receive_tube_n ||
                                     ',0,:ID_ROOM_RECEIVE_TUBE_in, NVL (:ID_ROOM_RECEIVE_TUBE_in, ID_ROOM_RECEIVE_TUBE)) ' || ',' ||
                                     ' ID_PROF_CANCELS = decode (' || l_id_prof_cancels_n ||
                                     ',0,:ID_PROF_CANCELS_in, NVL (:ID_PROF_CANCELS_in, ID_PROF_CANCELS)) ' || ',' ||
                                     ' NOTES_CANCEL = decode (' || l_notes_cancel_n ||
                                     ',0,:NOTES_CANCEL_in, NVL (:NOTES_CANCEL_in, NOTES_CANCEL)) ' || ',' ||
                                     ' BARCODE = decode (' || l_barcode_n ||
                                     ',0,:BARCODE_in, NVL (:BARCODE_in, BARCODE)) ' || ',' ||
                                     ' ID_INSTITUTION = decode (' || l_id_institution_n ||
                                     ',0,:ID_INSTITUTION_in, NVL (:ID_INSTITUTION_in, ID_INSTITUTION)) ' || ',' ||
                                     ' ID_EPISODE_WRITE = decode (' || l_id_episode_write_n ||
                                     ',0,:ID_EPISODE_WRITE_in, NVL (:ID_EPISODE_WRITE_in, ID_EPISODE_WRITE)) ' || ',' ||
                                     ' DT_HARVEST_TSTZ = decode (' || l_dt_harvest_tstz_n ||
                                     ',0,:DT_HARVEST_TSTZ_in, NVL (:DT_HARVEST_TSTZ_in, DT_HARVEST_TSTZ)) ' || ',' ||
                                     ' DT_MOV_BEGIN_TSTZ = decode (' || l_dt_mov_begin_tstz_n ||
                                     ',0,:DT_MOV_BEGIN_TSTZ_in, NVL (:DT_MOV_BEGIN_TSTZ_in, DT_MOV_BEGIN_TSTZ)) ' || ',' ||
                                     ' DT_LAB_RECEPTION_TSTZ = decode (' || l_dt_lab_reception_tstz_n ||
                                     ',0,:DT_LAB_RECEPTION_TSTZ_in, NVL (:DT_LAB_RECEPTION_TSTZ_in, DT_LAB_RECEPTION_TSTZ)) ' || ',' ||
                                     ' DT_CANCEL_TSTZ = decode (' || l_dt_cancel_tstz_n ||
                                     ',0,:DT_CANCEL_TSTZ_in, NVL (:DT_CANCEL_TSTZ_in, DT_CANCEL_TSTZ)) ' || ',' ||
                                     ' FLG_CHARGEABLE = decode (' || l_flg_chargeable_n ||
                                     ',0,:FLG_CHARGEABLE_in, NVL (:FLG_CHARGEABLE_in, FLG_CHARGEABLE)) ' || ',' ||
                                     ' ID_VISIT = decode (' || l_id_visit_n ||
                                     ',0,:ID_VISIT_in, NVL (:ID_VISIT_in, ID_VISIT)) ' || ',' ||
                                     ' ID_PATIENT = decode (' || l_id_patient_n ||
                                     ',0,:ID_PATIENT_in, NVL (:ID_PATIENT_in, ID_PATIENT)) ' || ',' ||
                                     ' FLG_PRINT = decode (' || l_flg_print_n ||
                                     ',0,:FLG_PRINT_in, NVL (:FLG_PRINT_in, FLG_PRINT)) ' || ',' ||
                                     ' CREATE_USER = decode (' || l_create_user_n ||
                                     ',0,:CREATE_USER_in, NVL (:CREATE_USER_in, CREATE_USER)) ' || ',' ||
                                     ' CREATE_TIME = decode (' || l_create_time_n ||
                                     ',0,:CREATE_TIME_in, NVL (:CREATE_TIME_in, CREATE_TIME)) ' || ',' ||
                                     ' CREATE_INSTITUTION = decode (' || l_create_institution_n ||
                                     ',0,:CREATE_INSTITUTION_in, NVL (:CREATE_INSTITUTION_in, CREATE_INSTITUTION)) ' || ',' ||
                                     ' UPDATE_USER = decode (' || l_update_user_n ||
                                     ',0,:UPDATE_USER_in, NVL (:UPDATE_USER_in, UPDATE_USER)) ' || ',' ||
                                     ' UPDATE_TIME = decode (' || l_update_time_n ||
                                     ',0,:UPDATE_TIME_in, NVL (:UPDATE_TIME_in, UPDATE_TIME)) ' || ',' ||
                                     ' UPDATE_INSTITUTION = decode (' || l_update_institution_n ||
                                     ',0,:UPDATE_INSTITUTION_in, NVL (:UPDATE_INSTITUTION_in, UPDATE_INSTITUTION)) ' || ',' ||
                                     ' ID_CANCEL_REASON = decode (' || l_id_cancel_reason_n ||
                                     ',0,:ID_CANCEL_REASON_in, NVL (:ID_CANCEL_REASON_in, ID_CANCEL_REASON)) ' || ',' ||
                                     ' FLG_ORIG_HARVEST = decode (' || l_flg_orig_harvest_n ||
                                     ',0,:FLG_ORIG_HARVEST_in, NVL (:FLG_ORIG_HARVEST_in, FLG_ORIG_HARVEST)) ' || ',' ||
                                     ' DT_HARVEST_REG_TSTZ = decode (' || l_dt_harvest_reg_tstz_n ||
                                     ',0,:DT_HARVEST_REG_TSTZ_in, NVL (:DT_HARVEST_REG_TSTZ_in, DT_HARVEST_REG_TSTZ)) ' || ',' ||
                                     ' ID_REP_COLL_REASON = decode (' || l_id_rep_coll_reason_n ||
                                     ',0,:ID_REP_COLL_REASON_in, NVL (:ID_REP_COLL_REASON_in, ID_REP_COLL_REASON)) ' || ',' ||
                                     ' ID_HARVEST_GROUP = decode (' || l_id_harvest_group_n ||
                                     ',0,:ID_HARVEST_GROUP_in, NVL (:ID_HARVEST_GROUP_in, ID_HARVEST_GROUP)) ' || ',' ||
                                     ' DT_BEGIN_HARVEST = decode (' || l_dt_begin_harvest_n ||
                                     ',0,:DT_BEGIN_HARVEST_in, NVL (:DT_BEGIN_HARVEST_in, DT_BEGIN_HARVEST)) ' || ',' ||
                                     ' PROF_DEP_CLIN_SERV = decode (' || l_prof_dep_clin_serv_n ||
                                     ',0,:PROF_DEP_CLIN_SERV_in, NVL (:PROF_DEP_CLIN_SERV_in, PROF_DEP_CLIN_SERV)) ' || ',' ||
                                     ' FLG_COL_INST = decode (' || l_flg_col_inst_n ||
                                     ',0,:FLG_COL_INST_in, NVL (:FLG_COL_INST_in, FLG_COL_INST)) ' || ',' ||
                                     ' FLG_MOV_TUBE = decode (' || l_flg_mov_tube_n ||
                                     ',0,:FLG_MOV_TUBE_in, NVL (:FLG_MOV_TUBE_in, FLG_MOV_TUBE)) ' || ',' ||
                                     ' FLG_LATERALITY = decode (' || l_flg_laterality_n ||
                                     ',0,:FLG_LATERALITY_in, NVL (:FLG_LATERALITY_in, FLG_LATERALITY)) ' || ',' ||
                                     ' FLG_COLLECTION_METHOD = decode (' || l_flg_collection_method_n ||
                                     ',0,:FLG_COLLECTION_METHOD_in, NVL (:FLG_COLLECTION_METHOD_in, FLG_COLLECTION_METHOD)) ' || ',' ||
                                     ' ID_SPECIMEN_CONDITION = decode (' || l_id_specimen_condition_n ||
                                     ',0,:ID_SPECIMEN_CONDITION_in, NVL (:ID_SPECIMEN_CONDITION_in, ID_SPECIMEN_CONDITION)) ' || ',' ||
                                     ' AMOUNT = decode (' || l_amount_n || ',0,:AMOUNT_in, NVL (:AMOUNT_in, AMOUNT)) ' || ',' ||
                                     ' ID_REVISED_BY = decode (' || l_id_revised_by_n ||
                                     ',0,:ID_REVISED_BY_in, NVL (:ID_REVISED_BY_in, ID_REVISED_BY)) ' || ',' ||
                                     ' HARVEST_INSTRUCTIONS = decode (' || l_harvest_instructions_n ||
                                     ',0,:HARVEST_INSTRUCTIONS_in, NVL (:HARVEST_INSTRUCTIONS_in, HARVEST_INSTRUCTIONS)) ' ||
                                     ' where ' || nvl(where_in, '(1=1)') ||
                                     ' RETURNING ROWID BULK COLLECT INTO :l_rows_out';
        EXECUTE IMMEDIATE 'BEGIN ' || l_sql || '; END;'
            USING IN id_episode_in, id_prof_harvest_in, flg_status_in, num_recipient_in, notes_in, id_body_part_in, id_prof_mov_tube_in, id_prof_receive_tube_in, id_room_harvest_in, id_room_receive_tube_in, id_prof_cancels_in, notes_cancel_in, barcode_in, id_institution_in, id_episode_write_in, dt_harvest_tstz_in, dt_mov_begin_tstz_in, dt_lab_reception_tstz_in, dt_cancel_tstz_in, flg_chargeable_in, id_visit_in, id_patient_in, flg_print_in, create_user_in, create_time_in, create_institution_in, update_user_in, update_time_in, update_institution_in, id_cancel_reason_in, flg_orig_harvest_in, dt_harvest_reg_tstz_in, id_rep_coll_reason_in, id_harvest_group_in, dt_begin_harvest_in, prof_dep_clin_serv_in, flg_col_inst_in, flg_mov_tube_in, flg_laterality_in, flg_collection_method_in, id_specimen_condition_in, amount_in, id_revised_by_in, harvest_instructions_in, OUT l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_episode_in             IN harvest.id_episode%TYPE DEFAULT NULL,
        id_episode_nin            IN BOOLEAN := TRUE,
        id_prof_harvest_in        IN harvest.id_prof_harvest%TYPE DEFAULT NULL,
        id_prof_harvest_nin       IN BOOLEAN := TRUE,
        flg_status_in             IN harvest.flg_status%TYPE DEFAULT NULL,
        flg_status_nin            IN BOOLEAN := TRUE,
        num_recipient_in          IN harvest.num_recipient%TYPE DEFAULT NULL,
        num_recipient_nin         IN BOOLEAN := TRUE,
        notes_in                  IN harvest.notes%TYPE DEFAULT NULL,
        notes_nin                 IN BOOLEAN := TRUE,
        id_body_part_in           IN harvest.id_body_part%TYPE DEFAULT NULL,
        id_body_part_nin          IN BOOLEAN := TRUE,
        id_prof_mov_tube_in       IN harvest.id_prof_mov_tube%TYPE DEFAULT NULL,
        id_prof_mov_tube_nin      IN BOOLEAN := TRUE,
        id_prof_receive_tube_in   IN harvest.id_prof_receive_tube%TYPE DEFAULT NULL,
        id_prof_receive_tube_nin  IN BOOLEAN := TRUE,
        id_room_harvest_in        IN harvest.id_room_harvest%TYPE DEFAULT NULL,
        id_room_harvest_nin       IN BOOLEAN := TRUE,
        id_room_receive_tube_in   IN harvest.id_room_receive_tube%TYPE DEFAULT NULL,
        id_room_receive_tube_nin  IN BOOLEAN := TRUE,
        id_prof_cancels_in        IN harvest.id_prof_cancels%TYPE DEFAULT NULL,
        id_prof_cancels_nin       IN BOOLEAN := TRUE,
        notes_cancel_in           IN harvest.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin          IN BOOLEAN := TRUE,
        barcode_in                IN harvest.barcode%TYPE DEFAULT NULL,
        barcode_nin               IN BOOLEAN := TRUE,
        id_institution_in         IN harvest.id_institution%TYPE DEFAULT NULL,
        id_institution_nin        IN BOOLEAN := TRUE,
        id_episode_write_in       IN harvest.id_episode_write%TYPE DEFAULT NULL,
        id_episode_write_nin      IN BOOLEAN := TRUE,
        dt_harvest_tstz_in        IN harvest.dt_harvest_tstz%TYPE DEFAULT NULL,
        dt_harvest_tstz_nin       IN BOOLEAN := TRUE,
        dt_mov_begin_tstz_in      IN harvest.dt_mov_begin_tstz%TYPE DEFAULT NULL,
        dt_mov_begin_tstz_nin     IN BOOLEAN := TRUE,
        dt_lab_reception_tstz_in  IN harvest.dt_lab_reception_tstz%TYPE DEFAULT NULL,
        dt_lab_reception_tstz_nin IN BOOLEAN := TRUE,
        dt_cancel_tstz_in         IN harvest.dt_cancel_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_nin        IN BOOLEAN := TRUE,
        flg_chargeable_in         IN harvest.flg_chargeable%TYPE DEFAULT NULL,
        flg_chargeable_nin        IN BOOLEAN := TRUE,
        id_visit_in               IN harvest.id_visit%TYPE DEFAULT NULL,
        id_visit_nin              IN BOOLEAN := TRUE,
        id_patient_in             IN harvest.id_patient%TYPE DEFAULT NULL,
        id_patient_nin            IN BOOLEAN := TRUE,
        flg_print_in              IN harvest.flg_print%TYPE DEFAULT NULL,
        flg_print_nin             IN BOOLEAN := TRUE,
        create_user_in            IN harvest.create_user%TYPE DEFAULT NULL,
        create_user_nin           IN BOOLEAN := TRUE,
        create_time_in            IN harvest.create_time%TYPE DEFAULT NULL,
        create_time_nin           IN BOOLEAN := TRUE,
        create_institution_in     IN harvest.create_institution%TYPE DEFAULT NULL,
        create_institution_nin    IN BOOLEAN := TRUE,
        update_user_in            IN harvest.update_user%TYPE DEFAULT NULL,
        update_user_nin           IN BOOLEAN := TRUE,
        update_time_in            IN harvest.update_time%TYPE DEFAULT NULL,
        update_time_nin           IN BOOLEAN := TRUE,
        update_institution_in     IN harvest.update_institution%TYPE DEFAULT NULL,
        update_institution_nin    IN BOOLEAN := TRUE,
        id_cancel_reason_in       IN harvest.id_cancel_reason%TYPE DEFAULT NULL,
        id_cancel_reason_nin      IN BOOLEAN := TRUE,
        flg_orig_harvest_in       IN harvest.flg_orig_harvest%TYPE DEFAULT NULL,
        flg_orig_harvest_nin      IN BOOLEAN := TRUE,
        dt_harvest_reg_tstz_in    IN harvest.dt_harvest_reg_tstz%TYPE DEFAULT NULL,
        dt_harvest_reg_tstz_nin   IN BOOLEAN := TRUE,
        id_rep_coll_reason_in     IN harvest.id_rep_coll_reason%TYPE DEFAULT NULL,
        id_rep_coll_reason_nin    IN BOOLEAN := TRUE,
        id_harvest_group_in       IN harvest.id_harvest_group%TYPE DEFAULT NULL,
        id_harvest_group_nin      IN BOOLEAN := TRUE,
        dt_begin_harvest_in       IN harvest.dt_begin_harvest%TYPE DEFAULT NULL,
        dt_begin_harvest_nin      IN BOOLEAN := TRUE,
        prof_dep_clin_serv_in     IN harvest.prof_dep_clin_serv%TYPE DEFAULT NULL,
        prof_dep_clin_serv_nin    IN BOOLEAN := TRUE,
        flg_col_inst_in           IN harvest.flg_col_inst%TYPE DEFAULT NULL,
        flg_col_inst_nin          IN BOOLEAN := TRUE,
        flg_mov_tube_in           IN harvest.flg_mov_tube%TYPE DEFAULT NULL,
        flg_mov_tube_nin          IN BOOLEAN := TRUE,
        flg_laterality_in         IN harvest.flg_laterality%TYPE DEFAULT NULL,
        flg_laterality_nin        IN BOOLEAN := TRUE,
        flg_collection_method_in  IN harvest.flg_collection_method%TYPE DEFAULT NULL,
        flg_collection_method_nin IN BOOLEAN := TRUE,
        id_specimen_condition_in  IN harvest.id_specimen_condition%TYPE DEFAULT NULL,
        id_specimen_condition_nin IN BOOLEAN := TRUE,
        amount_in                 IN harvest.amount%TYPE DEFAULT NULL,
        amount_nin                IN BOOLEAN := TRUE,
        id_revised_by_in          IN harvest.id_revised_by%TYPE DEFAULT NULL,
        id_revised_by_nin         IN BOOLEAN := TRUE,
        harvest_instructions_in   IN harvest.harvest_instructions%TYPE DEFAULT NULL,
        harvest_instructions_nin  IN BOOLEAN := TRUE,
        where_in                  IN VARCHAR2,
        handle_error_in           IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_episode_in             => id_episode_in,
            id_episode_nin            => id_episode_nin,
            id_prof_harvest_in        => id_prof_harvest_in,
            id_prof_harvest_nin       => id_prof_harvest_nin,
            flg_status_in             => flg_status_in,
            flg_status_nin            => flg_status_nin,
            num_recipient_in          => num_recipient_in,
            num_recipient_nin         => num_recipient_nin,
            notes_in                  => notes_in,
            notes_nin                 => notes_nin,
            id_body_part_in           => id_body_part_in,
            id_body_part_nin          => id_body_part_nin,
            id_prof_mov_tube_in       => id_prof_mov_tube_in,
            id_prof_mov_tube_nin      => id_prof_mov_tube_nin,
            id_prof_receive_tube_in   => id_prof_receive_tube_in,
            id_prof_receive_tube_nin  => id_prof_receive_tube_nin,
            id_room_harvest_in        => id_room_harvest_in,
            id_room_harvest_nin       => id_room_harvest_nin,
            id_room_receive_tube_in   => id_room_receive_tube_in,
            id_room_receive_tube_nin  => id_room_receive_tube_nin,
            id_prof_cancels_in        => id_prof_cancels_in,
            id_prof_cancels_nin       => id_prof_cancels_nin,
            notes_cancel_in           => notes_cancel_in,
            notes_cancel_nin          => notes_cancel_nin,
            barcode_in                => barcode_in,
            barcode_nin               => barcode_nin,
            id_institution_in         => id_institution_in,
            id_institution_nin        => id_institution_nin,
            id_episode_write_in       => id_episode_write_in,
            id_episode_write_nin      => id_episode_write_nin,
            dt_harvest_tstz_in        => dt_harvest_tstz_in,
            dt_harvest_tstz_nin       => dt_harvest_tstz_nin,
            dt_mov_begin_tstz_in      => dt_mov_begin_tstz_in,
            dt_mov_begin_tstz_nin     => dt_mov_begin_tstz_nin,
            dt_lab_reception_tstz_in  => dt_lab_reception_tstz_in,
            dt_lab_reception_tstz_nin => dt_lab_reception_tstz_nin,
            dt_cancel_tstz_in         => dt_cancel_tstz_in,
            dt_cancel_tstz_nin        => dt_cancel_tstz_nin,
            flg_chargeable_in         => flg_chargeable_in,
            flg_chargeable_nin        => flg_chargeable_nin,
            id_visit_in               => id_visit_in,
            id_visit_nin              => id_visit_nin,
            id_patient_in             => id_patient_in,
            id_patient_nin            => id_patient_nin,
            flg_print_in              => flg_print_in,
            flg_print_nin             => flg_print_nin,
            create_user_in            => create_user_in,
            create_user_nin           => create_user_nin,
            create_time_in            => create_time_in,
            create_time_nin           => create_time_nin,
            create_institution_in     => create_institution_in,
            create_institution_nin    => create_institution_nin,
            update_user_in            => update_user_in,
            update_user_nin           => update_user_nin,
            update_time_in            => update_time_in,
            update_time_nin           => update_time_nin,
            update_institution_in     => update_institution_in,
            update_institution_nin    => update_institution_nin,
            id_cancel_reason_in       => id_cancel_reason_in,
            id_cancel_reason_nin      => id_cancel_reason_nin,
            flg_orig_harvest_in       => flg_orig_harvest_in,
            flg_orig_harvest_nin      => flg_orig_harvest_nin,
            dt_harvest_reg_tstz_in    => dt_harvest_reg_tstz_in,
            dt_harvest_reg_tstz_nin   => dt_harvest_reg_tstz_nin,
            id_rep_coll_reason_in     => id_rep_coll_reason_in,
            id_rep_coll_reason_nin    => id_rep_coll_reason_nin,
            id_harvest_group_in       => id_harvest_group_in,
            id_harvest_group_nin      => id_harvest_group_nin,
            dt_begin_harvest_in       => dt_begin_harvest_in,
            dt_begin_harvest_nin      => dt_begin_harvest_nin,
            prof_dep_clin_serv_in     => prof_dep_clin_serv_in,
            prof_dep_clin_serv_nin    => prof_dep_clin_serv_nin,
            flg_col_inst_in           => flg_col_inst_in,
            flg_col_inst_nin          => flg_col_inst_nin,
            flg_mov_tube_in           => flg_mov_tube_in,
            flg_mov_tube_nin          => flg_mov_tube_nin,
            flg_laterality_in         => flg_laterality_in,
            flg_laterality_nin        => flg_laterality_nin,
            flg_collection_method_in  => flg_collection_method_in,
            flg_collection_method_nin => flg_collection_method_nin,
            id_specimen_condition_in  => id_specimen_condition_in,
            id_specimen_condition_nin => id_specimen_condition_nin,
            amount_in                 => amount_in,
            amount_nin                => amount_nin,
            id_revised_by_in          => id_revised_by_in,
            id_revised_by_nin         => id_revised_by_nin,
            harvest_instructions_in   => harvest_instructions_in,
            harvest_instructions_nin  => harvest_instructions_nin,
            where_in                  => where_in,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
    END upd;

    --Update/insert columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_harvest_in            IN harvest.id_harvest%TYPE,
        id_episode_in            IN harvest.id_episode%TYPE DEFAULT NULL,
        id_prof_harvest_in       IN harvest.id_prof_harvest%TYPE DEFAULT NULL,
        flg_status_in            IN harvest.flg_status%TYPE DEFAULT NULL,
        num_recipient_in         IN harvest.num_recipient%TYPE DEFAULT NULL,
        notes_in                 IN harvest.notes%TYPE DEFAULT NULL,
        id_body_part_in          IN harvest.id_body_part%TYPE DEFAULT NULL,
        id_prof_mov_tube_in      IN harvest.id_prof_mov_tube%TYPE DEFAULT NULL,
        id_prof_receive_tube_in  IN harvest.id_prof_receive_tube%TYPE DEFAULT NULL,
        id_room_harvest_in       IN harvest.id_room_harvest%TYPE DEFAULT NULL,
        id_room_receive_tube_in  IN harvest.id_room_receive_tube%TYPE DEFAULT NULL,
        id_prof_cancels_in       IN harvest.id_prof_cancels%TYPE DEFAULT NULL,
        notes_cancel_in          IN harvest.notes_cancel%TYPE DEFAULT NULL,
        barcode_in               IN harvest.barcode%TYPE DEFAULT NULL,
        id_institution_in        IN harvest.id_institution%TYPE DEFAULT NULL,
        id_episode_write_in      IN harvest.id_episode_write%TYPE DEFAULT NULL,
        dt_harvest_tstz_in       IN harvest.dt_harvest_tstz%TYPE DEFAULT NULL,
        dt_mov_begin_tstz_in     IN harvest.dt_mov_begin_tstz%TYPE DEFAULT NULL,
        dt_lab_reception_tstz_in IN harvest.dt_lab_reception_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in        IN harvest.dt_cancel_tstz%TYPE DEFAULT NULL,
        flg_chargeable_in        IN harvest.flg_chargeable%TYPE DEFAULT NULL,
        id_visit_in              IN harvest.id_visit%TYPE DEFAULT NULL,
        id_patient_in            IN harvest.id_patient%TYPE DEFAULT NULL,
        flg_print_in             IN harvest.flg_print%TYPE DEFAULT NULL,
        create_user_in           IN harvest.create_user%TYPE DEFAULT NULL,
        create_time_in           IN harvest.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN harvest.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN harvest.update_user%TYPE DEFAULT NULL,
        update_time_in           IN harvest.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN harvest.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in      IN harvest.id_cancel_reason%TYPE DEFAULT NULL,
        flg_orig_harvest_in      IN harvest.flg_orig_harvest%TYPE DEFAULT NULL,
        dt_harvest_reg_tstz_in   IN harvest.dt_harvest_reg_tstz%TYPE DEFAULT NULL,
        id_rep_coll_reason_in    IN harvest.id_rep_coll_reason%TYPE DEFAULT NULL,
        id_harvest_group_in      IN harvest.id_harvest_group%TYPE DEFAULT NULL,
        dt_begin_harvest_in      IN harvest.dt_begin_harvest%TYPE DEFAULT NULL,
        prof_dep_clin_serv_in    IN harvest.prof_dep_clin_serv%TYPE DEFAULT NULL,
        flg_col_inst_in          IN harvest.flg_col_inst%TYPE DEFAULT NULL,
        flg_mov_tube_in          IN harvest.flg_mov_tube%TYPE DEFAULT NULL,
        flg_laterality_in        IN harvest.flg_laterality%TYPE DEFAULT NULL,
        flg_collection_method_in IN harvest.flg_collection_method%TYPE DEFAULT NULL,
        id_specimen_condition_in IN harvest.id_specimen_condition%TYPE DEFAULT NULL,
        amount_in                IN harvest.amount%TYPE DEFAULT NULL,
        id_revised_by_in         IN harvest.id_revised_by%TYPE DEFAULT NULL,
        harvest_instructions_in  IN harvest.harvest_instructions%TYPE DEFAULT NULL,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_harvest_in            => id_harvest_in,
            id_episode_in            => id_episode_in,
            id_prof_harvest_in       => id_prof_harvest_in,
            flg_status_in            => flg_status_in,
            num_recipient_in         => num_recipient_in,
            notes_in                 => notes_in,
            id_body_part_in          => id_body_part_in,
            id_prof_mov_tube_in      => id_prof_mov_tube_in,
            id_prof_receive_tube_in  => id_prof_receive_tube_in,
            id_room_harvest_in       => id_room_harvest_in,
            id_room_receive_tube_in  => id_room_receive_tube_in,
            id_prof_cancels_in       => id_prof_cancels_in,
            notes_cancel_in          => notes_cancel_in,
            barcode_in               => barcode_in,
            id_institution_in        => id_institution_in,
            id_episode_write_in      => id_episode_write_in,
            dt_harvest_tstz_in       => dt_harvest_tstz_in,
            dt_mov_begin_tstz_in     => dt_mov_begin_tstz_in,
            dt_lab_reception_tstz_in => dt_lab_reception_tstz_in,
            dt_cancel_tstz_in        => dt_cancel_tstz_in,
            flg_chargeable_in        => flg_chargeable_in,
            id_visit_in              => id_visit_in,
            id_patient_in            => id_patient_in,
            flg_print_in             => flg_print_in,
            create_user_in           => create_user_in,
            create_time_in           => create_time_in,
            create_institution_in    => create_institution_in,
            update_user_in           => update_user_in,
            update_time_in           => update_time_in,
            update_institution_in    => update_institution_in,
            id_cancel_reason_in      => id_cancel_reason_in,
            flg_orig_harvest_in      => flg_orig_harvest_in,
            dt_harvest_reg_tstz_in   => dt_harvest_reg_tstz_in,
            id_rep_coll_reason_in    => id_rep_coll_reason_in,
            id_harvest_group_in      => id_harvest_group_in,
            dt_begin_harvest_in      => dt_begin_harvest_in,
            prof_dep_clin_serv_in    => prof_dep_clin_serv_in,
            flg_col_inst_in          => flg_col_inst_in,
            flg_mov_tube_in          => flg_mov_tube_in,
            flg_laterality_in        => flg_laterality_in,
            flg_collection_method_in => flg_collection_method_in,
            id_specimen_condition_in => id_specimen_condition_in,
            amount_in                => amount_in,
            id_revised_by_in         => id_revised_by_in,
            harvest_instructions_in  => harvest_instructions_in,
            handle_error_in          => handle_error_in,
            rows_out                 => rows_out);
        IF SQL%ROWCOUNT = 0
        THEN
            ins(id_harvest_in            => id_harvest_in,
                id_episode_in            => id_episode_in,
                id_prof_harvest_in       => id_prof_harvest_in,
                flg_status_in            => flg_status_in,
                num_recipient_in         => num_recipient_in,
                notes_in                 => notes_in,
                id_body_part_in          => id_body_part_in,
                id_prof_mov_tube_in      => id_prof_mov_tube_in,
                id_prof_receive_tube_in  => id_prof_receive_tube_in,
                id_room_harvest_in       => id_room_harvest_in,
                id_room_receive_tube_in  => id_room_receive_tube_in,
                id_prof_cancels_in       => id_prof_cancels_in,
                notes_cancel_in          => notes_cancel_in,
                barcode_in               => barcode_in,
                id_institution_in        => id_institution_in,
                id_episode_write_in      => id_episode_write_in,
                dt_harvest_tstz_in       => dt_harvest_tstz_in,
                dt_mov_begin_tstz_in     => dt_mov_begin_tstz_in,
                dt_lab_reception_tstz_in => dt_lab_reception_tstz_in,
                dt_cancel_tstz_in        => dt_cancel_tstz_in,
                flg_chargeable_in        => flg_chargeable_in,
                id_visit_in              => id_visit_in,
                id_patient_in            => id_patient_in,
                flg_print_in             => flg_print_in,
                create_user_in           => create_user_in,
                create_time_in           => create_time_in,
                create_institution_in    => create_institution_in,
                update_user_in           => update_user_in,
                update_time_in           => update_time_in,
                update_institution_in    => update_institution_in,
                id_cancel_reason_in      => id_cancel_reason_in,
                flg_orig_harvest_in      => flg_orig_harvest_in,
                dt_harvest_reg_tstz_in   => dt_harvest_reg_tstz_in,
                id_rep_coll_reason_in    => id_rep_coll_reason_in,
                id_harvest_group_in      => id_harvest_group_in,
                dt_begin_harvest_in      => dt_begin_harvest_in,
                prof_dep_clin_serv_in    => prof_dep_clin_serv_in,
                flg_col_inst_in          => flg_col_inst_in,
                flg_mov_tube_in          => flg_mov_tube_in,
                flg_laterality_in        => flg_laterality_in,
                flg_collection_method_in => flg_collection_method_in,
                id_specimen_condition_in => id_specimen_condition_in,
                amount_in                => amount_in,
                id_revised_by_in         => id_revised_by_in,
                harvest_instructions_in  => harvest_instructions_in,
                handle_error_in          => handle_error_in,
                rows_out                 => rows_out);
        END IF;
    END upd_ins;

    --Update/insert columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_harvest_in            IN harvest.id_harvest%TYPE,
        id_episode_in            IN harvest.id_episode%TYPE DEFAULT NULL,
        id_prof_harvest_in       IN harvest.id_prof_harvest%TYPE DEFAULT NULL,
        flg_status_in            IN harvest.flg_status%TYPE DEFAULT NULL,
        num_recipient_in         IN harvest.num_recipient%TYPE DEFAULT NULL,
        notes_in                 IN harvest.notes%TYPE DEFAULT NULL,
        id_body_part_in          IN harvest.id_body_part%TYPE DEFAULT NULL,
        id_prof_mov_tube_in      IN harvest.id_prof_mov_tube%TYPE DEFAULT NULL,
        id_prof_receive_tube_in  IN harvest.id_prof_receive_tube%TYPE DEFAULT NULL,
        id_room_harvest_in       IN harvest.id_room_harvest%TYPE DEFAULT NULL,
        id_room_receive_tube_in  IN harvest.id_room_receive_tube%TYPE DEFAULT NULL,
        id_prof_cancels_in       IN harvest.id_prof_cancels%TYPE DEFAULT NULL,
        notes_cancel_in          IN harvest.notes_cancel%TYPE DEFAULT NULL,
        barcode_in               IN harvest.barcode%TYPE DEFAULT NULL,
        id_institution_in        IN harvest.id_institution%TYPE DEFAULT NULL,
        id_episode_write_in      IN harvest.id_episode_write%TYPE DEFAULT NULL,
        dt_harvest_tstz_in       IN harvest.dt_harvest_tstz%TYPE DEFAULT NULL,
        dt_mov_begin_tstz_in     IN harvest.dt_mov_begin_tstz%TYPE DEFAULT NULL,
        dt_lab_reception_tstz_in IN harvest.dt_lab_reception_tstz%TYPE DEFAULT NULL,
        dt_cancel_tstz_in        IN harvest.dt_cancel_tstz%TYPE DEFAULT NULL,
        flg_chargeable_in        IN harvest.flg_chargeable%TYPE DEFAULT NULL,
        id_visit_in              IN harvest.id_visit%TYPE DEFAULT NULL,
        id_patient_in            IN harvest.id_patient%TYPE DEFAULT NULL,
        flg_print_in             IN harvest.flg_print%TYPE DEFAULT NULL,
        create_user_in           IN harvest.create_user%TYPE DEFAULT NULL,
        create_time_in           IN harvest.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN harvest.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN harvest.update_user%TYPE DEFAULT NULL,
        update_time_in           IN harvest.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN harvest.update_institution%TYPE DEFAULT NULL,
        id_cancel_reason_in      IN harvest.id_cancel_reason%TYPE DEFAULT NULL,
        flg_orig_harvest_in      IN harvest.flg_orig_harvest%TYPE DEFAULT NULL,
        dt_harvest_reg_tstz_in   IN harvest.dt_harvest_reg_tstz%TYPE DEFAULT NULL,
        id_rep_coll_reason_in    IN harvest.id_rep_coll_reason%TYPE DEFAULT NULL,
        id_harvest_group_in      IN harvest.id_harvest_group%TYPE DEFAULT NULL,
        dt_begin_harvest_in      IN harvest.dt_begin_harvest%TYPE DEFAULT NULL,
        prof_dep_clin_serv_in    IN harvest.prof_dep_clin_serv%TYPE DEFAULT NULL,
        flg_col_inst_in          IN harvest.flg_col_inst%TYPE DEFAULT NULL,
        flg_mov_tube_in          IN harvest.flg_mov_tube%TYPE DEFAULT NULL,
        flg_laterality_in        IN harvest.flg_laterality%TYPE DEFAULT NULL,
        flg_collection_method_in IN harvest.flg_collection_method%TYPE DEFAULT NULL,
        id_specimen_condition_in IN harvest.id_specimen_condition%TYPE DEFAULT NULL,
        amount_in                IN harvest.amount%TYPE DEFAULT NULL,
        id_revised_by_in         IN harvest.id_revised_by%TYPE DEFAULT NULL,
        harvest_instructions_in  IN harvest.harvest_instructions%TYPE DEFAULT NULL,
        handle_error_in          IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd_ins(id_harvest_in,
                id_episode_in,
                id_prof_harvest_in,
                flg_status_in,
                num_recipient_in,
                notes_in,
                id_body_part_in,
                id_prof_mov_tube_in,
                id_prof_receive_tube_in,
                id_room_harvest_in,
                id_room_receive_tube_in,
                id_prof_cancels_in,
                notes_cancel_in,
                barcode_in,
                id_institution_in,
                id_episode_write_in,
                dt_harvest_tstz_in,
                dt_mov_begin_tstz_in,
                dt_lab_reception_tstz_in,
                dt_cancel_tstz_in,
                flg_chargeable_in,
                id_visit_in,
                id_patient_in,
                flg_print_in,
                create_user_in,
                create_time_in,
                create_institution_in,
                update_user_in,
                update_time_in,
                update_institution_in,
                id_cancel_reason_in,
                flg_orig_harvest_in,
                dt_harvest_reg_tstz_in,
                id_rep_coll_reason_in,
                id_harvest_group_in,
                dt_begin_harvest_in,
                prof_dep_clin_serv_in,
                flg_col_inst_in,
                flg_mov_tube_in,
                flg_laterality_in,
                flg_collection_method_in,
                id_specimen_condition_in,
                amount_in,
                id_revised_by_in,
                harvest_instructions_in,
                handle_error_in,
                rows_out);
    END upd_ins;

    --Update by record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN harvest%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_harvest_in            => rec_in.id_harvest,
            id_episode_in            => rec_in.id_episode,
            id_prof_harvest_in       => rec_in.id_prof_harvest,
            flg_status_in            => rec_in.flg_status,
            num_recipient_in         => rec_in.num_recipient,
            notes_in                 => rec_in.notes,
            id_body_part_in          => rec_in.id_body_part,
            id_prof_mov_tube_in      => rec_in.id_prof_mov_tube,
            id_prof_receive_tube_in  => rec_in.id_prof_receive_tube,
            id_room_harvest_in       => rec_in.id_room_harvest,
            id_room_receive_tube_in  => rec_in.id_room_receive_tube,
            id_prof_cancels_in       => rec_in.id_prof_cancels,
            notes_cancel_in          => rec_in.notes_cancel,
            barcode_in               => rec_in.barcode,
            id_institution_in        => rec_in.id_institution,
            id_episode_write_in      => rec_in.id_episode_write,
            dt_harvest_tstz_in       => rec_in.dt_harvest_tstz,
            dt_mov_begin_tstz_in     => rec_in.dt_mov_begin_tstz,
            dt_lab_reception_tstz_in => rec_in.dt_lab_reception_tstz,
            dt_cancel_tstz_in        => rec_in.dt_cancel_tstz,
            flg_chargeable_in        => rec_in.flg_chargeable,
            id_visit_in              => rec_in.id_visit,
            id_patient_in            => rec_in.id_patient,
            flg_print_in             => rec_in.flg_print,
            create_user_in           => rec_in.create_user,
            create_time_in           => rec_in.create_time,
            create_institution_in    => rec_in.create_institution,
            update_user_in           => rec_in.update_user,
            update_time_in           => rec_in.update_time,
            update_institution_in    => rec_in.update_institution,
            id_cancel_reason_in      => rec_in.id_cancel_reason,
            flg_orig_harvest_in      => rec_in.flg_orig_harvest,
            dt_harvest_reg_tstz_in   => rec_in.dt_harvest_reg_tstz,
            id_rep_coll_reason_in    => rec_in.id_rep_coll_reason,
            id_harvest_group_in      => rec_in.id_harvest_group,
            dt_begin_harvest_in      => rec_in.dt_begin_harvest,
            prof_dep_clin_serv_in    => rec_in.prof_dep_clin_serv,
            flg_col_inst_in          => rec_in.flg_col_inst,
            flg_mov_tube_in          => rec_in.flg_mov_tube,
            flg_laterality_in        => rec_in.flg_laterality,
            flg_collection_method_in => rec_in.flg_collection_method,
            id_specimen_condition_in => rec_in.id_specimen_condition,
            amount_in                => rec_in.amount,
            id_revised_by_in         => rec_in.id_revised_by,
            harvest_instructions_in  => rec_in.harvest_instructions,
            handle_error_in          => handle_error_in,
            rows_out                 => rows_out);
    END upd;

    --Update by record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN harvest%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_harvest_in            => rec_in.id_harvest,
            id_episode_in            => rec_in.id_episode,
            id_prof_harvest_in       => rec_in.id_prof_harvest,
            flg_status_in            => rec_in.flg_status,
            num_recipient_in         => rec_in.num_recipient,
            notes_in                 => rec_in.notes,
            id_body_part_in          => rec_in.id_body_part,
            id_prof_mov_tube_in      => rec_in.id_prof_mov_tube,
            id_prof_receive_tube_in  => rec_in.id_prof_receive_tube,
            id_room_harvest_in       => rec_in.id_room_harvest,
            id_room_receive_tube_in  => rec_in.id_room_receive_tube,
            id_prof_cancels_in       => rec_in.id_prof_cancels,
            notes_cancel_in          => rec_in.notes_cancel,
            barcode_in               => rec_in.barcode,
            id_institution_in        => rec_in.id_institution,
            id_episode_write_in      => rec_in.id_episode_write,
            dt_harvest_tstz_in       => rec_in.dt_harvest_tstz,
            dt_mov_begin_tstz_in     => rec_in.dt_mov_begin_tstz,
            dt_lab_reception_tstz_in => rec_in.dt_lab_reception_tstz,
            dt_cancel_tstz_in        => rec_in.dt_cancel_tstz,
            flg_chargeable_in        => rec_in.flg_chargeable,
            id_visit_in              => rec_in.id_visit,
            id_patient_in            => rec_in.id_patient,
            flg_print_in             => rec_in.flg_print,
            create_user_in           => rec_in.create_user,
            create_time_in           => rec_in.create_time,
            create_institution_in    => rec_in.create_institution,
            update_user_in           => rec_in.update_user,
            update_time_in           => rec_in.update_time,
            update_institution_in    => rec_in.update_institution,
            id_cancel_reason_in      => rec_in.id_cancel_reason,
            flg_orig_harvest_in      => rec_in.flg_orig_harvest,
            dt_harvest_reg_tstz_in   => rec_in.dt_harvest_reg_tstz,
            id_rep_coll_reason_in    => rec_in.id_rep_coll_reason,
            id_harvest_group_in      => rec_in.id_harvest_group,
            dt_begin_harvest_in      => rec_in.dt_begin_harvest,
            prof_dep_clin_serv_in    => rec_in.prof_dep_clin_serv,
            flg_col_inst_in          => rec_in.flg_col_inst,
            flg_mov_tube_in          => rec_in.flg_mov_tube,
            flg_laterality_in        => rec_in.flg_laterality,
            flg_collection_method_in => rec_in.flg_collection_method,
            id_specimen_condition_in => rec_in.id_specimen_condition,
            amount_in                => rec_in.amount,
            id_revised_by_in         => rec_in.id_revised_by,
            harvest_instructions_in  => rec_in.harvest_instructions,
            handle_error_in          => handle_error_in,
            rows_out                 => rows_out);
    END upd;

    --Update with collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN harvest_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    ) IS
        l_id_harvest            id_harvest_cc;
        l_id_episode            id_episode_cc;
        l_id_prof_harvest       id_prof_harvest_cc;
        l_flg_status            flg_status_cc;
        l_num_recipient         num_recipient_cc;
        l_notes                 notes_cc;
        l_id_body_part          id_body_part_cc;
        l_id_prof_mov_tube      id_prof_mov_tube_cc;
        l_id_prof_receive_tube  id_prof_receive_tube_cc;
        l_id_room_harvest       id_room_harvest_cc;
        l_id_room_receive_tube  id_room_receive_tube_cc;
        l_id_prof_cancels       id_prof_cancels_cc;
        l_notes_cancel          notes_cancel_cc;
        l_barcode               barcode_cc;
        l_id_institution        id_institution_cc;
        l_id_episode_write      id_episode_write_cc;
        l_dt_harvest_tstz       dt_harvest_tstz_cc;
        l_dt_mov_begin_tstz     dt_mov_begin_tstz_cc;
        l_dt_lab_reception_tstz dt_lab_reception_tstz_cc;
        l_dt_cancel_tstz        dt_cancel_tstz_cc;
        l_flg_chargeable        flg_chargeable_cc;
        l_id_visit              id_visit_cc;
        l_id_patient            id_patient_cc;
        l_flg_print             flg_print_cc;
        l_create_user           create_user_cc;
        l_create_time           create_time_cc;
        l_create_institution    create_institution_cc;
        l_update_user           update_user_cc;
        l_update_time           update_time_cc;
        l_update_institution    update_institution_cc;
        l_id_cancel_reason      id_cancel_reason_cc;
        l_flg_orig_harvest      flg_orig_harvest_cc;
        l_dt_harvest_reg_tstz   dt_harvest_reg_tstz_cc;
        l_id_rep_coll_reason    id_rep_coll_reason_cc;
        l_id_harvest_group      id_harvest_group_cc;
        l_dt_begin_harvest      dt_begin_harvest_cc;
        l_prof_dep_clin_serv    prof_dep_clin_serv_cc;
        l_flg_col_inst          flg_col_inst_cc;
        l_flg_mov_tube          flg_mov_tube_cc;
        l_flg_laterality        flg_laterality_cc;
        l_flg_collection_method flg_collection_method_cc;
        l_id_specimen_condition id_specimen_condition_cc;
        l_amount                amount_cc;
        l_id_revised_by         id_revised_by_cc;
        l_harvest_instructions  harvest_instructions_cc;
    BEGIN
        FOR i IN col_in.first .. col_in.last
        LOOP
            l_id_harvest(i) := col_in(i).id_harvest;
            l_id_episode(i) := col_in(i).id_episode;
            l_id_prof_harvest(i) := col_in(i).id_prof_harvest;
            l_flg_status(i) := col_in(i).flg_status;
            l_num_recipient(i) := col_in(i).num_recipient;
            l_notes(i) := col_in(i).notes;
            l_id_body_part(i) := col_in(i).id_body_part;
            l_id_prof_mov_tube(i) := col_in(i).id_prof_mov_tube;
            l_id_prof_receive_tube(i) := col_in(i).id_prof_receive_tube;
            l_id_room_harvest(i) := col_in(i).id_room_harvest;
            l_id_room_receive_tube(i) := col_in(i).id_room_receive_tube;
            l_id_prof_cancels(i) := col_in(i).id_prof_cancels;
            l_notes_cancel(i) := col_in(i).notes_cancel;
            l_barcode(i) := col_in(i).barcode;
            l_id_institution(i) := col_in(i).id_institution;
            l_id_episode_write(i) := col_in(i).id_episode_write;
            l_dt_harvest_tstz(i) := col_in(i).dt_harvest_tstz;
            l_dt_mov_begin_tstz(i) := col_in(i).dt_mov_begin_tstz;
            l_dt_lab_reception_tstz(i) := col_in(i).dt_lab_reception_tstz;
            l_dt_cancel_tstz(i) := col_in(i).dt_cancel_tstz;
            l_flg_chargeable(i) := col_in(i).flg_chargeable;
            l_id_visit(i) := col_in(i).id_visit;
            l_id_patient(i) := col_in(i).id_patient;
            l_flg_print(i) := col_in(i).flg_print;
            l_create_user(i) := col_in(i).create_user;
            l_create_time(i) := col_in(i).create_time;
            l_create_institution(i) := col_in(i).create_institution;
            l_update_user(i) := col_in(i).update_user;
            l_update_time(i) := col_in(i).update_time;
            l_update_institution(i) := col_in(i).update_institution;
            l_id_cancel_reason(i) := col_in(i).id_cancel_reason;
            l_flg_orig_harvest(i) := col_in(i).flg_orig_harvest;
            l_dt_harvest_reg_tstz(i) := col_in(i).dt_harvest_reg_tstz;
            l_id_rep_coll_reason(i) := col_in(i).id_rep_coll_reason;
            l_id_harvest_group(i) := col_in(i).id_harvest_group;
            l_dt_begin_harvest(i) := col_in(i).dt_begin_harvest;
            l_prof_dep_clin_serv(i) := col_in(i).prof_dep_clin_serv;
            l_flg_col_inst(i) := col_in(i).flg_col_inst;
            l_flg_mov_tube(i) := col_in(i).flg_mov_tube;
            l_flg_laterality(i) := col_in(i).flg_laterality;
            l_flg_collection_method(i) := col_in(i).flg_collection_method;
            l_id_specimen_condition(i) := col_in(i).id_specimen_condition;
            l_amount(i) := col_in(i).amount;
            l_id_revised_by(i) := col_in(i).id_revised_by;
            l_harvest_instructions(i) := col_in(i).harvest_instructions;
        END LOOP;
        IF nvl(ignore_if_null_in, FALSE)
        THEN
            -- Set any columns to their current values
            -- if incoming value is NULL.
            -- Put WHEN clause on column-level triggers!
            FORALL i IN col_in.first .. col_in.last
                UPDATE harvest
                   SET id_episode            = nvl(l_id_episode(i), id_episode),
                       id_prof_harvest       = nvl(l_id_prof_harvest(i), id_prof_harvest),
                       flg_status            = nvl(l_flg_status(i), flg_status),
                       num_recipient         = nvl(l_num_recipient(i), num_recipient),
                       notes                 = nvl(l_notes(i), notes),
                       id_body_part          = nvl(l_id_body_part(i), id_body_part),
                       id_prof_mov_tube      = nvl(l_id_prof_mov_tube(i), id_prof_mov_tube),
                       id_prof_receive_tube  = nvl(l_id_prof_receive_tube(i), id_prof_receive_tube),
                       id_room_harvest       = nvl(l_id_room_harvest(i), id_room_harvest),
                       id_room_receive_tube  = nvl(l_id_room_receive_tube(i), id_room_receive_tube),
                       id_prof_cancels       = nvl(l_id_prof_cancels(i), id_prof_cancels),
                       notes_cancel          = nvl(l_notes_cancel(i), notes_cancel),
                       barcode               = nvl(l_barcode(i), barcode),
                       id_institution        = nvl(l_id_institution(i), id_institution),
                       id_episode_write      = nvl(l_id_episode_write(i), id_episode_write),
                       dt_harvest_tstz       = nvl(l_dt_harvest_tstz(i), dt_harvest_tstz),
                       dt_mov_begin_tstz     = nvl(l_dt_mov_begin_tstz(i), dt_mov_begin_tstz),
                       dt_lab_reception_tstz = nvl(l_dt_lab_reception_tstz(i), dt_lab_reception_tstz),
                       dt_cancel_tstz        = nvl(l_dt_cancel_tstz(i), dt_cancel_tstz),
                       flg_chargeable        = nvl(l_flg_chargeable(i), flg_chargeable),
                       id_visit              = nvl(l_id_visit(i), id_visit),
                       id_patient            = nvl(l_id_patient(i), id_patient),
                       flg_print             = nvl(l_flg_print(i), flg_print),
                       create_user           = nvl(l_create_user(i), create_user),
                       create_time           = nvl(l_create_time(i), create_time),
                       create_institution    = nvl(l_create_institution(i), create_institution),
                       update_user           = nvl(l_update_user(i), update_user),
                       update_time           = nvl(l_update_time(i), update_time),
                       update_institution    = nvl(l_update_institution(i), update_institution),
                       id_cancel_reason      = nvl(l_id_cancel_reason(i), id_cancel_reason),
                       flg_orig_harvest      = nvl(l_flg_orig_harvest(i), flg_orig_harvest),
                       dt_harvest_reg_tstz   = nvl(l_dt_harvest_reg_tstz(i), dt_harvest_reg_tstz),
                       id_rep_coll_reason    = nvl(l_id_rep_coll_reason(i), id_rep_coll_reason),
                       id_harvest_group      = nvl(l_id_harvest_group(i), id_harvest_group),
                       dt_begin_harvest      = nvl(l_dt_begin_harvest(i), dt_begin_harvest),
                       prof_dep_clin_serv    = nvl(l_prof_dep_clin_serv(i), prof_dep_clin_serv),
                       flg_col_inst          = nvl(l_flg_col_inst(i), flg_col_inst),
                       flg_mov_tube          = nvl(l_flg_mov_tube(i), flg_mov_tube),
                       flg_laterality        = nvl(l_flg_laterality(i), flg_laterality),
                       flg_collection_method = nvl(l_flg_collection_method(i), flg_collection_method),
                       id_specimen_condition = nvl(l_id_specimen_condition(i), id_specimen_condition),
                       amount                = nvl(l_amount(i), amount),
                       id_revised_by         = nvl(l_id_revised_by(i), id_revised_by),
                       harvest_instructions  = nvl(l_harvest_instructions(i), harvest_instructions)
                 WHERE id_harvest = l_id_harvest(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        ELSE
            FORALL i IN col_in.first .. col_in.last
                UPDATE harvest
                   SET id_episode            = l_id_episode(i),
                       id_prof_harvest       = l_id_prof_harvest(i),
                       flg_status            = l_flg_status(i),
                       num_recipient         = l_num_recipient(i),
                       notes                 = l_notes(i),
                       id_body_part          = l_id_body_part(i),
                       id_prof_mov_tube      = l_id_prof_mov_tube(i),
                       id_prof_receive_tube  = l_id_prof_receive_tube(i),
                       id_room_harvest       = l_id_room_harvest(i),
                       id_room_receive_tube  = l_id_room_receive_tube(i),
                       id_prof_cancels       = l_id_prof_cancels(i),
                       notes_cancel          = l_notes_cancel(i),
                       barcode               = l_barcode(i),
                       id_institution        = l_id_institution(i),
                       id_episode_write      = l_id_episode_write(i),
                       dt_harvest_tstz       = l_dt_harvest_tstz(i),
                       dt_mov_begin_tstz     = l_dt_mov_begin_tstz(i),
                       dt_lab_reception_tstz = l_dt_lab_reception_tstz(i),
                       dt_cancel_tstz        = l_dt_cancel_tstz(i),
                       flg_chargeable        = l_flg_chargeable(i),
                       id_visit              = l_id_visit(i),
                       id_patient            = l_id_patient(i),
                       flg_print             = l_flg_print(i),
                       create_user           = l_create_user(i),
                       create_time           = l_create_time(i),
                       create_institution    = l_create_institution(i),
                       update_user           = l_update_user(i),
                       update_time           = l_update_time(i),
                       update_institution    = l_update_institution(i),
                       id_cancel_reason      = l_id_cancel_reason(i),
                       flg_orig_harvest      = l_flg_orig_harvest(i),
                       dt_harvest_reg_tstz   = l_dt_harvest_reg_tstz(i),
                       id_rep_coll_reason    = l_id_rep_coll_reason(i),
                       id_harvest_group      = l_id_harvest_group(i),
                       dt_begin_harvest      = l_dt_begin_harvest(i),
                       prof_dep_clin_serv    = l_prof_dep_clin_serv(i),
                       flg_col_inst          = l_flg_col_inst(i),
                       flg_mov_tube          = l_flg_mov_tube(i),
                       flg_laterality        = l_flg_laterality(i),
                       flg_collection_method = l_flg_collection_method(i),
                       id_specimen_condition = l_id_specimen_condition(i),
                       amount                = l_amount(i),
                       id_revised_by         = l_id_revised_by(i),
                       harvest_instructions  = l_harvest_instructions(i)
                 WHERE id_harvest = l_id_harvest(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update with collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN harvest_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(col_in, ignore_if_null_in, handle_error_in, rows_out);
    END upd;

    --Dynamic update string
    FUNCTION dynupdstr
    (
        colname_in IN all_tab_columns.column_name%TYPE,
        where_in   IN VARCHAR2 := NULL
    ) RETURN VARCHAR2 IS
    BEGIN
        RETURN 'BEGIN UPDATE harvest
SET ' || colname_in || ' = :value
 WHERE ' || nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;';
    END dynupdstr;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (with rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN UPDATE harvest
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    END increment_onecol;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (without rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        EXECUTE IMMEDIATE 'UPDATE harvest
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1');
    END increment_onecol;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_harvest_in   IN harvest.id_harvest%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM harvest
         WHERE id_harvest = id_harvest_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_harvest_in   IN harvest.id_harvest%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del(id_harvest_in => id_harvest_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del;

    -- Delete all rows for this HARV_ASN_FK foreign key value
    PROCEDURE del_harv_asn_fk
    (
        id_specimen_condition_in IN harvest.id_specimen_condition%TYPE,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM harvest
         WHERE id_specimen_condition = id_specimen_condition_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_harv_asn_fk;

    -- Delete all rows for this HARV_BSE_FK foreign key value
    PROCEDURE del_harv_bse_fk
    (
        id_body_part_in IN harvest.id_body_part%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM harvest
         WHERE id_body_part = id_body_part_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_harv_bse_fk;

    -- Delete all rows for this HARV_CRE_FK foreign key value
    PROCEDURE del_harv_cre_fk
    (
        id_cancel_reason_in IN harvest.id_cancel_reason%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM harvest
         WHERE id_cancel_reason = id_cancel_reason_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_harv_cre_fk;

    -- Delete all rows for this HARV_DCS_FK foreign key value
    PROCEDURE del_harv_dcs_fk
    (
        prof_dep_clin_serv_in IN harvest.prof_dep_clin_serv%TYPE,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM harvest
         WHERE prof_dep_clin_serv = prof_dep_clin_serv_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_harv_dcs_fk;

    -- Delete all rows for this HARV_EPISODE_WRITE_FK foreign key value
    PROCEDURE del_harv_episode_write_fk
    (
        id_episode_write_in IN harvest.id_episode_write%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM harvest
         WHERE id_episode_write = id_episode_write_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_harv_episode_write_fk;

    -- Delete all rows for this HARV_EPIS_FK foreign key value
    PROCEDURE del_harv_epis_fk
    (
        id_episode_in   IN harvest.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM harvest
         WHERE id_episode = id_episode_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_harv_epis_fk;

    -- Delete all rows for this HARV_INST_FK foreign key value
    PROCEDURE del_harv_inst_fk
    (
        id_institution_in IN harvest.id_institution%TYPE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM harvest
         WHERE id_institution = id_institution_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_harv_inst_fk;

    -- Delete all rows for this HARV_PAT_FK foreign key value
    PROCEDURE del_harv_pat_fk
    (
        id_patient_in   IN harvest.id_patient%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM harvest
         WHERE id_patient = id_patient_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_harv_pat_fk;

    -- Delete all rows for this HARV_PROF_CANCEL_FK foreign key value
    PROCEDURE del_harv_prof_cancel_fk
    (
        id_prof_cancels_in IN harvest.id_prof_cancels%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM harvest
         WHERE id_prof_cancels = id_prof_cancels_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_harv_prof_cancel_fk;

    -- Delete all rows for this HARV_PROF_HARVEST_FK foreign key value
    PROCEDURE del_harv_prof_harvest_fk
    (
        id_prof_harvest_in IN harvest.id_prof_harvest%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM harvest
         WHERE id_prof_harvest = id_prof_harvest_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_harv_prof_harvest_fk;

    -- Delete all rows for this HARV_PROF_MOV_TUBE_FK foreign key value
    PROCEDURE del_harv_prof_mov_tube_fk
    (
        id_prof_mov_tube_in IN harvest.id_prof_mov_tube%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM harvest
         WHERE id_prof_mov_tube = id_prof_mov_tube_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_harv_prof_mov_tube_fk;

    -- Delete all rows for this HARV_PROF_RECEIVE_TUBE_FK foreign key value
    PROCEDURE del_harv_prof_receive_tube_fk
    (
        id_prof_receive_tube_in IN harvest.id_prof_receive_tube%TYPE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM harvest
         WHERE id_prof_receive_tube = id_prof_receive_tube_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_harv_prof_receive_tube_fk;

    -- Delete all rows for this HARV_RCN_FK foreign key value
    PROCEDURE del_harv_rcn_fk
    (
        id_rep_coll_reason_in IN harvest.id_rep_coll_reason%TYPE,
        handle_error_in       IN BOOLEAN := TRUE,
        rows_out              OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM harvest
         WHERE id_rep_coll_reason = id_rep_coll_reason_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_harv_rcn_fk;

    -- Delete all rows for this HARV_ROOM_HARVEST_FK foreign key value
    PROCEDURE del_harv_room_harvest_fk
    (
        id_room_harvest_in IN harvest.id_room_harvest%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM harvest
         WHERE id_room_harvest = id_room_harvest_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_harv_room_harvest_fk;

    -- Delete all rows for this HARV_ROOM_RECEIVE_TUBE_FK foreign key value
    PROCEDURE del_harv_room_receive_tube_fk
    (
        id_room_receive_tube_in IN harvest.id_room_receive_tube%TYPE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM harvest
         WHERE id_room_receive_tube = id_room_receive_tube_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_harv_room_receive_tube_fk;

    -- Delete all rows for this HARV_VIT_FK foreign key value
    PROCEDURE del_harv_vit_fk
    (
        id_visit_in     IN harvest.id_visit%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM harvest
         WHERE id_visit = id_visit_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_harv_vit_fk;

    -- Delete all rows for this HARV_ASN_FK foreign key value
    PROCEDURE del_harv_asn_fk
    (
        id_specimen_condition_in IN harvest.id_specimen_condition%TYPE,
        handle_error_in          IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_harv_asn_fk(id_specimen_condition_in => id_specimen_condition_in,
                        handle_error_in          => handle_error_in,
                        rows_out                 => rows_out);
    END del_harv_asn_fk;

    -- Delete all rows for this HARV_BSE_FK foreign key value
    PROCEDURE del_harv_bse_fk
    (
        id_body_part_in IN harvest.id_body_part%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_harv_bse_fk(id_body_part_in => id_body_part_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_harv_bse_fk;

    -- Delete all rows for this HARV_CRE_FK foreign key value
    PROCEDURE del_harv_cre_fk
    (
        id_cancel_reason_in IN harvest.id_cancel_reason%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_harv_cre_fk(id_cancel_reason_in => id_cancel_reason_in,
                        handle_error_in     => handle_error_in,
                        rows_out            => rows_out);
    END del_harv_cre_fk;

    -- Delete all rows for this HARV_DCS_FK foreign key value
    PROCEDURE del_harv_dcs_fk
    (
        prof_dep_clin_serv_in IN harvest.prof_dep_clin_serv%TYPE,
        handle_error_in       IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_harv_dcs_fk(prof_dep_clin_serv_in => prof_dep_clin_serv_in,
                        handle_error_in       => handle_error_in,
                        rows_out              => rows_out);
    END del_harv_dcs_fk;

    -- Delete all rows for this HARV_EPISODE_WRITE_FK foreign key value
    PROCEDURE del_harv_episode_write_fk
    (
        id_episode_write_in IN harvest.id_episode_write%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_harv_episode_write_fk(id_episode_write_in => id_episode_write_in,
                                  handle_error_in     => handle_error_in,
                                  rows_out            => rows_out);
    END del_harv_episode_write_fk;

    -- Delete all rows for this HARV_EPIS_FK foreign key value
    PROCEDURE del_harv_epis_fk
    (
        id_episode_in   IN harvest.id_episode%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_harv_epis_fk(id_episode_in => id_episode_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_harv_epis_fk;

    -- Delete all rows for this HARV_INST_FK foreign key value
    PROCEDURE del_harv_inst_fk
    (
        id_institution_in IN harvest.id_institution%TYPE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_harv_inst_fk(id_institution_in => id_institution_in,
                         handle_error_in   => handle_error_in,
                         rows_out          => rows_out);
    END del_harv_inst_fk;

    -- Delete all rows for this HARV_PAT_FK foreign key value
    PROCEDURE del_harv_pat_fk
    (
        id_patient_in   IN harvest.id_patient%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_harv_pat_fk(id_patient_in => id_patient_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_harv_pat_fk;

    -- Delete all rows for this HARV_PROF_CANCEL_FK foreign key value
    PROCEDURE del_harv_prof_cancel_fk
    (
        id_prof_cancels_in IN harvest.id_prof_cancels%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_harv_prof_cancel_fk(id_prof_cancels_in => id_prof_cancels_in,
                                handle_error_in    => handle_error_in,
                                rows_out           => rows_out);
    END del_harv_prof_cancel_fk;

    -- Delete all rows for this HARV_PROF_HARVEST_FK foreign key value
    PROCEDURE del_harv_prof_harvest_fk
    (
        id_prof_harvest_in IN harvest.id_prof_harvest%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_harv_prof_harvest_fk(id_prof_harvest_in => id_prof_harvest_in,
                                 handle_error_in    => handle_error_in,
                                 rows_out           => rows_out);
    END del_harv_prof_harvest_fk;

    -- Delete all rows for this HARV_PROF_MOV_TUBE_FK foreign key value
    PROCEDURE del_harv_prof_mov_tube_fk
    (
        id_prof_mov_tube_in IN harvest.id_prof_mov_tube%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_harv_prof_mov_tube_fk(id_prof_mov_tube_in => id_prof_mov_tube_in,
                                  handle_error_in     => handle_error_in,
                                  rows_out            => rows_out);
    END del_harv_prof_mov_tube_fk;

    -- Delete all rows for this HARV_PROF_RECEIVE_TUBE_FK foreign key value
    PROCEDURE del_harv_prof_receive_tube_fk
    (
        id_prof_receive_tube_in IN harvest.id_prof_receive_tube%TYPE,
        handle_error_in         IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_harv_prof_receive_tube_fk(id_prof_receive_tube_in => id_prof_receive_tube_in,
                                      handle_error_in         => handle_error_in,
                                      rows_out                => rows_out);
    END del_harv_prof_receive_tube_fk;

    -- Delete all rows for this HARV_RCN_FK foreign key value
    PROCEDURE del_harv_rcn_fk
    (
        id_rep_coll_reason_in IN harvest.id_rep_coll_reason%TYPE,
        handle_error_in       IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_harv_rcn_fk(id_rep_coll_reason_in => id_rep_coll_reason_in,
                        handle_error_in       => handle_error_in,
                        rows_out              => rows_out);
    END del_harv_rcn_fk;

    -- Delete all rows for this HARV_ROOM_HARVEST_FK foreign key value
    PROCEDURE del_harv_room_harvest_fk
    (
        id_room_harvest_in IN harvest.id_room_harvest%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_harv_room_harvest_fk(id_room_harvest_in => id_room_harvest_in,
                                 handle_error_in    => handle_error_in,
                                 rows_out           => rows_out);
    END del_harv_room_harvest_fk;

    -- Delete all rows for this HARV_ROOM_RECEIVE_TUBE_FK foreign key value
    PROCEDURE del_harv_room_receive_tube_fk
    (
        id_room_receive_tube_in IN harvest.id_room_receive_tube%TYPE,
        handle_error_in         IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_harv_room_receive_tube_fk(id_room_receive_tube_in => id_room_receive_tube_in,
                                      handle_error_in         => handle_error_in,
                                      rows_out                => rows_out);
    END del_harv_room_receive_tube_fk;

    -- Delete all rows for this HARV_VIT_FK foreign key value
    PROCEDURE del_harv_vit_fk
    (
        id_visit_in     IN harvest.id_visit%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_harv_vit_fk(id_visit_in => id_visit_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_harv_vit_fk;

    -- Deletions using dynamic SQL
    FUNCTION dyndelstr(where_in IN VARCHAR2) RETURN VARCHAR2 IS
    BEGIN
        IF where_in IS NULL
        THEN
            RETURN 'DELETE FROM harvest';
        ELSE
            RETURN 'DELETE FROM harvest WHERE ' || where_in;
        END IF;
    END dyndelstr;
    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyndelstr(where_clause_in) ||
                          ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyndelstr(where_clause_in);
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(harvest_inout IN OUT harvest%ROWTYPE) IS
    BEGIN
        harvest_inout.id_harvest            := NULL;
        harvest_inout.id_episode            := NULL;
        harvest_inout.id_prof_harvest       := NULL;
        harvest_inout.flg_status            := NULL;
        harvest_inout.num_recipient         := NULL;
        harvest_inout.notes                 := NULL;
        harvest_inout.id_body_part          := NULL;
        harvest_inout.id_prof_mov_tube      := NULL;
        harvest_inout.id_prof_receive_tube  := NULL;
        harvest_inout.id_room_harvest       := NULL;
        harvest_inout.id_room_receive_tube  := NULL;
        harvest_inout.id_prof_cancels       := NULL;
        harvest_inout.notes_cancel          := NULL;
        harvest_inout.barcode               := NULL;
        harvest_inout.id_institution        := NULL;
        harvest_inout.id_episode_write      := NULL;
        harvest_inout.dt_harvest_tstz       := NULL;
        harvest_inout.dt_mov_begin_tstz     := NULL;
        harvest_inout.dt_lab_reception_tstz := NULL;
        harvest_inout.dt_cancel_tstz        := NULL;
        harvest_inout.flg_chargeable        := NULL;
        harvest_inout.id_visit              := NULL;
        harvest_inout.id_patient            := NULL;
        harvest_inout.flg_print             := NULL;
        harvest_inout.create_user           := NULL;
        harvest_inout.create_time           := NULL;
        harvest_inout.create_institution    := NULL;
        harvest_inout.update_user           := NULL;
        harvest_inout.update_time           := NULL;
        harvest_inout.update_institution    := NULL;
        harvest_inout.id_cancel_reason      := NULL;
        harvest_inout.flg_orig_harvest      := NULL;
        harvest_inout.dt_harvest_reg_tstz   := NULL;
        harvest_inout.id_rep_coll_reason    := NULL;
        harvest_inout.id_harvest_group      := NULL;
        harvest_inout.dt_begin_harvest      := NULL;
        harvest_inout.prof_dep_clin_serv    := NULL;
        harvest_inout.flg_col_inst          := NULL;
        harvest_inout.flg_mov_tube          := NULL;
        harvest_inout.flg_laterality        := NULL;
        harvest_inout.flg_collection_method := NULL;
        harvest_inout.id_specimen_condition := NULL;
        harvest_inout.amount                := NULL;
        harvest_inout.id_revised_by         := NULL;
        harvest_inout.harvest_instructions  := NULL;
    END initrec;

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN harvest%ROWTYPE IS
        l_harvest harvest%ROWTYPE;
    BEGIN
        RETURN l_harvest;
    END initrec;

    --get data from rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN harvest_tc IS
        data harvest_tc;
    BEGIN
        SELECT *
          BULK COLLECT
          INTO data
          FROM harvest
         WHERE ROWID IN (SELECT /*+ OPT_ESTIMATE(TABLE t ROWS=1) */
                          *
                           FROM TABLE(rows_in) t);
        RETURN data;
    END get_data_rowid;

    --get data from rowid (pragma autonomous transacion)
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN harvest_tc IS
        data harvest_tc;
        PRAGMA AUTONOMOUS_TRANSACTION;
    BEGIN
        data := get_data_rowid(rows_in);
        COMMIT;
        RETURN data;
    
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'get_data_rowid_pat');
            ROLLBACK;
        
    END get_data_rowid_pat;

BEGIN
    NULL;
END ts_harvest;
/
