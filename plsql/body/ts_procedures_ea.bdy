/*-- Last Change Revision: $Rev: 2028333 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:45:11 +0100 (ter, 02 ago 2022) $*/

CREATE OR REPLACE PACKAGE BODY ts_procedures_ea
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2021-11-08 17:40:23
| Created By: ALERT
*/
 IS

    e_null_column_value EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_null_column_value, -1400);

    e_existing_fky_reference EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_existing_fky_reference, -2266);

    e_check_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_check_constraint_failure, -2290);

    e_no_parent_key EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_no_parent_key, -2291);

    e_child_record_found EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_child_record_found, -2292);

    e_forall_error EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_forall_error, -24381);

    -- Defined for backward compatibilty.
    e_integ_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_integ_constraint_failure, -2291);

    PROCEDURE ins
    (
        id_interv_presc_det_in     IN procedures_ea.id_interv_presc_det%TYPE,
        id_interv_prescription_in  IN procedures_ea.id_interv_prescription%TYPE DEFAULT NULL,
        id_interv_presc_plan_in    IN procedures_ea.id_interv_presc_plan%TYPE DEFAULT NULL,
        id_intervention_in         IN procedures_ea.id_intervention%TYPE DEFAULT NULL,
        flg_status_intervention_in IN procedures_ea.flg_status_intervention%TYPE DEFAULT NULL,
        flg_status_req_in          IN procedures_ea.flg_status_req%TYPE DEFAULT NULL,
        flg_status_det_in          IN procedures_ea.flg_status_det%TYPE DEFAULT NULL,
        flg_status_plan_in         IN procedures_ea.flg_status_plan%TYPE DEFAULT NULL,
        flg_time_in                IN procedures_ea.flg_time%TYPE DEFAULT NULL,
        flg_interv_type_in         IN procedures_ea.flg_interv_type%TYPE DEFAULT NULL,
        dt_begin_req_in            IN procedures_ea.dt_begin_req%TYPE DEFAULT NULL,
        dt_begin_det_in            IN procedures_ea.dt_begin_det%TYPE DEFAULT NULL,
        interval_in                IN procedures_ea.interval%TYPE DEFAULT NULL,
        dt_interv_prescription_in  IN procedures_ea.dt_interv_prescription%TYPE DEFAULT NULL,
        dt_plan_in                 IN procedures_ea.dt_plan%TYPE DEFAULT NULL,
        id_professional_in         IN procedures_ea.id_professional%TYPE DEFAULT NULL,
        flg_notes_in               IN procedures_ea.flg_notes%TYPE DEFAULT NULL,
        status_str_in              IN procedures_ea.status_str%TYPE DEFAULT NULL,
        status_msg_in              IN procedures_ea.status_msg%TYPE DEFAULT NULL,
        status_icon_in             IN procedures_ea.status_icon%TYPE DEFAULT NULL,
        status_flg_in              IN procedures_ea.status_flg%TYPE DEFAULT NULL,
        id_prof_order_in           IN procedures_ea.id_prof_order%TYPE DEFAULT NULL,
        code_intervention_alias_in IN procedures_ea.code_intervention_alias%TYPE DEFAULT NULL,
        flg_prty_in                IN procedures_ea.flg_prty%TYPE DEFAULT NULL,
        num_take_in                IN procedures_ea.num_take%TYPE DEFAULT NULL,
        id_episode_origin_in       IN procedures_ea.id_episode_origin%TYPE DEFAULT NULL,
        id_visit_in                IN procedures_ea.id_visit%TYPE DEFAULT NULL,
        id_episode_in              IN procedures_ea.id_episode%TYPE DEFAULT NULL,
        id_patient_in              IN procedures_ea.id_patient%TYPE DEFAULT NULL,
        flg_referral_in            IN procedures_ea.flg_referral%TYPE DEFAULT NULL,
        dt_interv_presc_det_in     IN procedures_ea.dt_interv_presc_det%TYPE DEFAULT NULL,
        dt_dg_last_update_in       IN procedures_ea.dt_dg_last_update%TYPE DEFAULT current_timestamp,
        dt_order_in                IN procedures_ea.dt_order%TYPE DEFAULT NULL,
        create_user_in             IN procedures_ea.create_user%TYPE DEFAULT NULL,
        create_time_in             IN procedures_ea.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN procedures_ea.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN procedures_ea.update_user%TYPE DEFAULT NULL,
        update_time_in             IN procedures_ea.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN procedures_ea.update_institution%TYPE DEFAULT NULL,
        flg_laterality_in          IN procedures_ea.flg_laterality%TYPE DEFAULT NULL,
        flg_clinical_purpose_in    IN procedures_ea.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_prn_in                 IN procedures_ea.flg_prn%TYPE DEFAULT NULL,
        flg_doc_in                 IN procedures_ea.flg_doc%TYPE DEFAULT NULL,
        id_interv_codification_in  IN procedures_ea.id_interv_codification%TYPE DEFAULT NULL,
        id_order_recurrence_in     IN procedures_ea.id_order_recurrence%TYPE DEFAULT NULL,
        id_task_dependency_in      IN procedures_ea.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in   IN procedures_ea.flg_req_origin_module%TYPE DEFAULT NULL,
        notes_in                   IN procedures_ea.notes%TYPE DEFAULT NULL,
        notes_cancel_in            IN procedures_ea.notes_cancel%TYPE DEFAULT NULL,
        id_clinical_purpose_in     IN procedures_ea.id_clinical_purpose%TYPE DEFAULT NULL,
        clinical_purpose_notes_in  IN procedures_ea.clinical_purpose_notes%TYPE DEFAULT NULL,
        flg_location_in            IN procedures_ea.flg_location%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := FALSE,
        rows_out                   OUT table_varchar
    ) IS
    BEGIN
        INSERT INTO procedures_ea
            (id_interv_presc_det,
             id_interv_prescription,
             id_interv_presc_plan,
             id_intervention,
             flg_status_intervention,
             flg_status_req,
             flg_status_det,
             flg_status_plan,
             flg_time,
             flg_interv_type,
             dt_begin_req,
             dt_begin_det,
             INTERVAL,
             dt_interv_prescription,
             dt_plan,
             id_professional,
             flg_notes,
             status_str,
             status_msg,
             status_icon,
             status_flg,
             id_prof_order,
             code_intervention_alias,
             flg_prty,
             num_take,
             id_episode_origin,
             id_visit,
             id_episode,
             id_patient,
             flg_referral,
             dt_interv_presc_det,
             dt_dg_last_update,
             dt_order,
             create_user,
             create_time,
             create_institution,
             update_user,
             update_time,
             update_institution,
             flg_laterality,
             flg_clinical_purpose,
             flg_prn,
             flg_doc,
             id_interv_codification,
             id_order_recurrence,
             id_task_dependency,
             flg_req_origin_module,
             notes,
             notes_cancel,
             id_clinical_purpose,
             clinical_purpose_notes,
             flg_location)
        VALUES
            (id_interv_presc_det_in,
             id_interv_prescription_in,
             id_interv_presc_plan_in,
             id_intervention_in,
             flg_status_intervention_in,
             flg_status_req_in,
             flg_status_det_in,
             flg_status_plan_in,
             flg_time_in,
             flg_interv_type_in,
             dt_begin_req_in,
             dt_begin_det_in,
             interval_in,
             dt_interv_prescription_in,
             dt_plan_in,
             id_professional_in,
             flg_notes_in,
             status_str_in,
             status_msg_in,
             status_icon_in,
             status_flg_in,
             id_prof_order_in,
             code_intervention_alias_in,
             flg_prty_in,
             num_take_in,
             id_episode_origin_in,
             id_visit_in,
             id_episode_in,
             id_patient_in,
             flg_referral_in,
             dt_interv_presc_det_in,
             dt_dg_last_update_in,
             dt_order_in,
             create_user_in,
             create_time_in,
             create_institution_in,
             update_user_in,
             update_time_in,
             update_institution_in,
             flg_laterality_in,
             flg_clinical_purpose_in,
             flg_prn_in,
             flg_doc_in,
             id_interv_codification_in,
             id_order_recurrence_in,
             id_task_dependency_in,
             flg_req_origin_module_in,
             notes_in,
             notes_cancel_in,
             id_clinical_purpose_in,
             clinical_purpose_notes_in,
             flg_location_in)
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    PROCEDURE ins
    (
        id_interv_presc_det_in     IN procedures_ea.id_interv_presc_det%TYPE,
        id_interv_prescription_in  IN procedures_ea.id_interv_prescription%TYPE DEFAULT NULL,
        id_interv_presc_plan_in    IN procedures_ea.id_interv_presc_plan%TYPE DEFAULT NULL,
        id_intervention_in         IN procedures_ea.id_intervention%TYPE DEFAULT NULL,
        flg_status_intervention_in IN procedures_ea.flg_status_intervention%TYPE DEFAULT NULL,
        flg_status_req_in          IN procedures_ea.flg_status_req%TYPE DEFAULT NULL,
        flg_status_det_in          IN procedures_ea.flg_status_det%TYPE DEFAULT NULL,
        flg_status_plan_in         IN procedures_ea.flg_status_plan%TYPE DEFAULT NULL,
        flg_time_in                IN procedures_ea.flg_time%TYPE DEFAULT NULL,
        flg_interv_type_in         IN procedures_ea.flg_interv_type%TYPE DEFAULT NULL,
        dt_begin_req_in            IN procedures_ea.dt_begin_req%TYPE DEFAULT NULL,
        dt_begin_det_in            IN procedures_ea.dt_begin_det%TYPE DEFAULT NULL,
        interval_in                IN procedures_ea.interval%TYPE DEFAULT NULL,
        dt_interv_prescription_in  IN procedures_ea.dt_interv_prescription%TYPE DEFAULT NULL,
        dt_plan_in                 IN procedures_ea.dt_plan%TYPE DEFAULT NULL,
        id_professional_in         IN procedures_ea.id_professional%TYPE DEFAULT NULL,
        flg_notes_in               IN procedures_ea.flg_notes%TYPE DEFAULT NULL,
        status_str_in              IN procedures_ea.status_str%TYPE DEFAULT NULL,
        status_msg_in              IN procedures_ea.status_msg%TYPE DEFAULT NULL,
        status_icon_in             IN procedures_ea.status_icon%TYPE DEFAULT NULL,
        status_flg_in              IN procedures_ea.status_flg%TYPE DEFAULT NULL,
        id_prof_order_in           IN procedures_ea.id_prof_order%TYPE DEFAULT NULL,
        code_intervention_alias_in IN procedures_ea.code_intervention_alias%TYPE DEFAULT NULL,
        flg_prty_in                IN procedures_ea.flg_prty%TYPE DEFAULT NULL,
        num_take_in                IN procedures_ea.num_take%TYPE DEFAULT NULL,
        id_episode_origin_in       IN procedures_ea.id_episode_origin%TYPE DEFAULT NULL,
        id_visit_in                IN procedures_ea.id_visit%TYPE DEFAULT NULL,
        id_episode_in              IN procedures_ea.id_episode%TYPE DEFAULT NULL,
        id_patient_in              IN procedures_ea.id_patient%TYPE DEFAULT NULL,
        flg_referral_in            IN procedures_ea.flg_referral%TYPE DEFAULT NULL,
        dt_interv_presc_det_in     IN procedures_ea.dt_interv_presc_det%TYPE DEFAULT NULL,
        dt_dg_last_update_in       IN procedures_ea.dt_dg_last_update%TYPE DEFAULT current_timestamp,
        dt_order_in                IN procedures_ea.dt_order%TYPE DEFAULT NULL,
        create_user_in             IN procedures_ea.create_user%TYPE DEFAULT NULL,
        create_time_in             IN procedures_ea.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN procedures_ea.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN procedures_ea.update_user%TYPE DEFAULT NULL,
        update_time_in             IN procedures_ea.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN procedures_ea.update_institution%TYPE DEFAULT NULL,
        flg_laterality_in          IN procedures_ea.flg_laterality%TYPE DEFAULT NULL,
        flg_clinical_purpose_in    IN procedures_ea.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_prn_in                 IN procedures_ea.flg_prn%TYPE DEFAULT NULL,
        flg_doc_in                 IN procedures_ea.flg_doc%TYPE DEFAULT NULL,
        id_interv_codification_in  IN procedures_ea.id_interv_codification%TYPE DEFAULT NULL,
        id_order_recurrence_in     IN procedures_ea.id_order_recurrence%TYPE DEFAULT NULL,
        id_task_dependency_in      IN procedures_ea.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in   IN procedures_ea.flg_req_origin_module%TYPE DEFAULT NULL,
        notes_in                   IN procedures_ea.notes%TYPE DEFAULT NULL,
        notes_cancel_in            IN procedures_ea.notes_cancel%TYPE DEFAULT NULL,
        id_clinical_purpose_in     IN procedures_ea.id_clinical_purpose%TYPE DEFAULT NULL,
        clinical_purpose_notes_in  IN procedures_ea.clinical_purpose_notes%TYPE DEFAULT NULL,
        flg_location_in            IN procedures_ea.flg_location%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_interv_presc_det_in     => id_interv_presc_det_in,
            id_interv_prescription_in  => id_interv_prescription_in,
            id_interv_presc_plan_in    => id_interv_presc_plan_in,
            id_intervention_in         => id_intervention_in,
            flg_status_intervention_in => flg_status_intervention_in,
            flg_status_req_in          => flg_status_req_in,
            flg_status_det_in          => flg_status_det_in,
            flg_status_plan_in         => flg_status_plan_in,
            flg_time_in                => flg_time_in,
            flg_interv_type_in         => flg_interv_type_in,
            dt_begin_req_in            => dt_begin_req_in,
            dt_begin_det_in            => dt_begin_det_in,
            interval_in                => interval_in,
            dt_interv_prescription_in  => dt_interv_prescription_in,
            dt_plan_in                 => dt_plan_in,
            id_professional_in         => id_professional_in,
            flg_notes_in               => flg_notes_in,
            status_str_in              => status_str_in,
            status_msg_in              => status_msg_in,
            status_icon_in             => status_icon_in,
            status_flg_in              => status_flg_in,
            id_prof_order_in           => id_prof_order_in,
            code_intervention_alias_in => code_intervention_alias_in,
            flg_prty_in                => flg_prty_in,
            num_take_in                => num_take_in,
            id_episode_origin_in       => id_episode_origin_in,
            id_visit_in                => id_visit_in,
            id_episode_in              => id_episode_in,
            id_patient_in              => id_patient_in,
            flg_referral_in            => flg_referral_in,
            dt_interv_presc_det_in     => dt_interv_presc_det_in,
            dt_dg_last_update_in       => dt_dg_last_update_in,
            dt_order_in                => dt_order_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            flg_laterality_in          => flg_laterality_in,
            flg_clinical_purpose_in    => flg_clinical_purpose_in,
            flg_prn_in                 => flg_prn_in,
            flg_doc_in                 => flg_doc_in,
            id_interv_codification_in  => id_interv_codification_in,
            id_order_recurrence_in     => id_order_recurrence_in,
            id_task_dependency_in      => id_task_dependency_in,
            flg_req_origin_module_in   => flg_req_origin_module_in,
            notes_in                   => notes_in,
            notes_cancel_in            => notes_cancel_in,
            id_clinical_purpose_in     => id_clinical_purpose_in,
            clinical_purpose_notes_in  => clinical_purpose_notes_in,
            flg_location_in            => flg_location_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN procedures_ea%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
        l_rec procedures_ea%ROWTYPE := rec_in;
    BEGIN
    
        ins(id_interv_presc_det_in     => l_rec.id_interv_presc_det,
            id_interv_prescription_in  => l_rec.id_interv_prescription,
            id_interv_presc_plan_in    => l_rec.id_interv_presc_plan,
            id_intervention_in         => l_rec.id_intervention,
            flg_status_intervention_in => l_rec.flg_status_intervention,
            flg_status_req_in          => l_rec.flg_status_req,
            flg_status_det_in          => l_rec.flg_status_det,
            flg_status_plan_in         => l_rec.flg_status_plan,
            flg_time_in                => l_rec.flg_time,
            flg_interv_type_in         => l_rec.flg_interv_type,
            dt_begin_req_in            => l_rec.dt_begin_req,
            dt_begin_det_in            => l_rec.dt_begin_det,
            interval_in                => l_rec.interval,
            dt_interv_prescription_in  => l_rec.dt_interv_prescription,
            dt_plan_in                 => l_rec.dt_plan,
            id_professional_in         => l_rec.id_professional,
            flg_notes_in               => l_rec.flg_notes,
            status_str_in              => l_rec.status_str,
            status_msg_in              => l_rec.status_msg,
            status_icon_in             => l_rec.status_icon,
            status_flg_in              => l_rec.status_flg,
            id_prof_order_in           => l_rec.id_prof_order,
            code_intervention_alias_in => l_rec.code_intervention_alias,
            flg_prty_in                => l_rec.flg_prty,
            num_take_in                => l_rec.num_take,
            id_episode_origin_in       => l_rec.id_episode_origin,
            id_visit_in                => l_rec.id_visit,
            id_episode_in              => l_rec.id_episode,
            id_patient_in              => l_rec.id_patient,
            flg_referral_in            => l_rec.flg_referral,
            dt_interv_presc_det_in     => l_rec.dt_interv_presc_det,
            dt_dg_last_update_in       => l_rec.dt_dg_last_update,
            dt_order_in                => l_rec.dt_order,
            create_user_in             => l_rec.create_user,
            create_time_in             => l_rec.create_time,
            create_institution_in      => l_rec.create_institution,
            update_user_in             => l_rec.update_user,
            update_time_in             => l_rec.update_time,
            update_institution_in      => l_rec.update_institution,
            flg_laterality_in          => l_rec.flg_laterality,
            flg_clinical_purpose_in    => l_rec.flg_clinical_purpose,
            flg_prn_in                 => l_rec.flg_prn,
            flg_doc_in                 => l_rec.flg_doc,
            id_interv_codification_in  => l_rec.id_interv_codification,
            id_order_recurrence_in     => l_rec.id_order_recurrence,
            id_task_dependency_in      => l_rec.id_task_dependency,
            flg_req_origin_module_in   => l_rec.flg_req_origin_module,
            notes_in                   => l_rec.notes,
            notes_cancel_in            => l_rec.notes_cancel,
            id_clinical_purpose_in     => l_rec.id_clinical_purpose,
            clinical_purpose_notes_in  => l_rec.clinical_purpose_notes,
            flg_location_in            => l_rec.flg_location,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN procedures_ea%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rec_in          => rec_in,
            gen_pky_in      => gen_pky_in,
            sequence_in     => sequence_in,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN procedures_ea_tc,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        IF rows_in.count = 0
        THEN
            NULL;
        ELSE
            FORALL indx IN rows_in.first .. rows_in.last SAVE EXCEPTIONS
                INSERT INTO procedures_ea
                    (id_interv_prescription,
                     id_interv_presc_det,
                     id_interv_presc_plan,
                     id_intervention,
                     flg_status_intervention,
                     flg_status_req,
                     flg_status_det,
                     flg_status_plan,
                     flg_time,
                     flg_interv_type,
                     dt_begin_req,
                     dt_begin_det,
                     INTERVAL,
                     dt_interv_prescription,
                     dt_plan,
                     id_professional,
                     flg_notes,
                     status_str,
                     status_msg,
                     status_icon,
                     status_flg,
                     id_prof_order,
                     code_intervention_alias,
                     flg_prty,
                     num_take,
                     id_episode_origin,
                     id_visit,
                     id_episode,
                     id_patient,
                     flg_referral,
                     dt_interv_presc_det,
                     dt_dg_last_update,
                     dt_order,
                     flg_laterality,
                     flg_clinical_purpose,
                     flg_prn,
                     flg_doc,
                     id_interv_codification,
                     id_order_recurrence,
                     id_task_dependency,
                     flg_req_origin_module,
                     notes,
                     notes_cancel,
                     id_clinical_purpose,
                     clinical_purpose_notes,
                     flg_location)
                VALUES
                    (rows_in(indx).id_interv_prescription,
                     rows_in(indx).id_interv_presc_det,
                     rows_in(indx).id_interv_presc_plan,
                     rows_in(indx).id_intervention,
                     rows_in(indx).flg_status_intervention,
                     rows_in(indx).flg_status_req,
                     rows_in(indx).flg_status_det,
                     rows_in(indx).flg_status_plan,
                     rows_in(indx).flg_time,
                     rows_in(indx).flg_interv_type,
                     rows_in(indx).dt_begin_req,
                     rows_in(indx).dt_begin_det,
                     rows_in(indx).interval,
                     rows_in(indx).dt_interv_prescription,
                     rows_in(indx).dt_plan,
                     rows_in(indx).id_professional,
                     rows_in(indx).flg_notes,
                     rows_in(indx).status_str,
                     rows_in(indx).status_msg,
                     rows_in(indx).status_icon,
                     rows_in(indx).status_flg,
                     rows_in(indx).id_prof_order,
                     rows_in(indx).code_intervention_alias,
                     rows_in(indx).flg_prty,
                     rows_in(indx).num_take,
                     rows_in(indx).id_episode_origin,
                     rows_in(indx).id_visit,
                     rows_in(indx).id_episode,
                     rows_in(indx).id_patient,
                     rows_in(indx).flg_referral,
                     rows_in(indx).dt_interv_presc_det,
                     rows_in(indx).dt_dg_last_update,
                     rows_in(indx).dt_order,
                     rows_in(indx).flg_laterality,
                     rows_in(indx).flg_clinical_purpose,
                     rows_in(indx).flg_prn,
                     rows_in(indx).flg_doc,
                     rows_in(indx).id_interv_codification,
                     rows_in(indx).id_order_recurrence,
                     rows_in(indx).id_task_dependency,
                     rows_in(indx).flg_req_origin_module,
                     rows_in(indx).notes,
                     rows_in(indx).notes_cancel,
                     rows_in(indx).id_clinical_purpose,
                     rows_in(indx).clinical_purpose_notes,
                     rows_in(indx).flg_location)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN procedures_ea_tc,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rows_in => rows_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END ins;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_interv_presc_det_in      IN procedures_ea.id_interv_presc_det%TYPE,
        id_interv_prescription_in   IN procedures_ea.id_interv_prescription%TYPE DEFAULT NULL,
        id_interv_prescription_nin  IN BOOLEAN := TRUE,
        id_interv_presc_plan_in     IN procedures_ea.id_interv_presc_plan%TYPE DEFAULT NULL,
        id_interv_presc_plan_nin    IN BOOLEAN := TRUE,
        id_intervention_in          IN procedures_ea.id_intervention%TYPE DEFAULT NULL,
        id_intervention_nin         IN BOOLEAN := TRUE,
        flg_status_intervention_in  IN procedures_ea.flg_status_intervention%TYPE DEFAULT NULL,
        flg_status_intervention_nin IN BOOLEAN := TRUE,
        flg_status_req_in           IN procedures_ea.flg_status_req%TYPE DEFAULT NULL,
        flg_status_req_nin          IN BOOLEAN := TRUE,
        flg_status_det_in           IN procedures_ea.flg_status_det%TYPE DEFAULT NULL,
        flg_status_det_nin          IN BOOLEAN := TRUE,
        flg_status_plan_in          IN procedures_ea.flg_status_plan%TYPE DEFAULT NULL,
        flg_status_plan_nin         IN BOOLEAN := TRUE,
        flg_time_in                 IN procedures_ea.flg_time%TYPE DEFAULT NULL,
        flg_time_nin                IN BOOLEAN := TRUE,
        flg_interv_type_in          IN procedures_ea.flg_interv_type%TYPE DEFAULT NULL,
        flg_interv_type_nin         IN BOOLEAN := TRUE,
        dt_begin_req_in             IN procedures_ea.dt_begin_req%TYPE DEFAULT NULL,
        dt_begin_req_nin            IN BOOLEAN := TRUE,
        dt_begin_det_in             IN procedures_ea.dt_begin_det%TYPE DEFAULT NULL,
        dt_begin_det_nin            IN BOOLEAN := TRUE,
        interval_in                 IN procedures_ea.interval%TYPE DEFAULT NULL,
        interval_nin                IN BOOLEAN := TRUE,
        dt_interv_prescription_in   IN procedures_ea.dt_interv_prescription%TYPE DEFAULT NULL,
        dt_interv_prescription_nin  IN BOOLEAN := TRUE,
        dt_plan_in                  IN procedures_ea.dt_plan%TYPE DEFAULT NULL,
        dt_plan_nin                 IN BOOLEAN := TRUE,
        id_professional_in          IN procedures_ea.id_professional%TYPE DEFAULT NULL,
        id_professional_nin         IN BOOLEAN := TRUE,
        flg_notes_in                IN procedures_ea.flg_notes%TYPE DEFAULT NULL,
        flg_notes_nin               IN BOOLEAN := TRUE,
        status_str_in               IN procedures_ea.status_str%TYPE DEFAULT NULL,
        status_str_nin              IN BOOLEAN := TRUE,
        status_msg_in               IN procedures_ea.status_msg%TYPE DEFAULT NULL,
        status_msg_nin              IN BOOLEAN := TRUE,
        status_icon_in              IN procedures_ea.status_icon%TYPE DEFAULT NULL,
        status_icon_nin             IN BOOLEAN := TRUE,
        status_flg_in               IN procedures_ea.status_flg%TYPE DEFAULT NULL,
        status_flg_nin              IN BOOLEAN := TRUE,
        id_prof_order_in            IN procedures_ea.id_prof_order%TYPE DEFAULT NULL,
        id_prof_order_nin           IN BOOLEAN := TRUE,
        code_intervention_alias_in  IN procedures_ea.code_intervention_alias%TYPE DEFAULT NULL,
        code_intervention_alias_nin IN BOOLEAN := TRUE,
        flg_prty_in                 IN procedures_ea.flg_prty%TYPE DEFAULT NULL,
        flg_prty_nin                IN BOOLEAN := TRUE,
        num_take_in                 IN procedures_ea.num_take%TYPE DEFAULT NULL,
        num_take_nin                IN BOOLEAN := TRUE,
        id_episode_origin_in        IN procedures_ea.id_episode_origin%TYPE DEFAULT NULL,
        id_episode_origin_nin       IN BOOLEAN := TRUE,
        id_visit_in                 IN procedures_ea.id_visit%TYPE DEFAULT NULL,
        id_visit_nin                IN BOOLEAN := TRUE,
        id_episode_in               IN procedures_ea.id_episode%TYPE DEFAULT NULL,
        id_episode_nin              IN BOOLEAN := TRUE,
        id_patient_in               IN procedures_ea.id_patient%TYPE DEFAULT NULL,
        id_patient_nin              IN BOOLEAN := TRUE,
        flg_referral_in             IN procedures_ea.flg_referral%TYPE DEFAULT NULL,
        flg_referral_nin            IN BOOLEAN := TRUE,
        dt_interv_presc_det_in      IN procedures_ea.dt_interv_presc_det%TYPE DEFAULT NULL,
        dt_interv_presc_det_nin     IN BOOLEAN := TRUE,
        dt_dg_last_update_in        IN procedures_ea.dt_dg_last_update%TYPE DEFAULT NULL,
        dt_dg_last_update_nin       IN BOOLEAN := TRUE,
        dt_order_in                 IN procedures_ea.dt_order%TYPE DEFAULT NULL,
        dt_order_nin                IN BOOLEAN := TRUE,
        create_user_in              IN procedures_ea.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN procedures_ea.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN procedures_ea.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN procedures_ea.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN procedures_ea.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN procedures_ea.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        flg_laterality_in           IN procedures_ea.flg_laterality%TYPE DEFAULT NULL,
        flg_laterality_nin          IN BOOLEAN := TRUE,
        flg_clinical_purpose_in     IN procedures_ea.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_clinical_purpose_nin    IN BOOLEAN := TRUE,
        flg_prn_in                  IN procedures_ea.flg_prn%TYPE DEFAULT NULL,
        flg_prn_nin                 IN BOOLEAN := TRUE,
        flg_doc_in                  IN procedures_ea.flg_doc%TYPE DEFAULT NULL,
        flg_doc_nin                 IN BOOLEAN := TRUE,
        id_interv_codification_in   IN procedures_ea.id_interv_codification%TYPE DEFAULT NULL,
        id_interv_codification_nin  IN BOOLEAN := TRUE,
        id_order_recurrence_in      IN procedures_ea.id_order_recurrence%TYPE DEFAULT NULL,
        id_order_recurrence_nin     IN BOOLEAN := TRUE,
        id_task_dependency_in       IN procedures_ea.id_task_dependency%TYPE DEFAULT NULL,
        id_task_dependency_nin      IN BOOLEAN := TRUE,
        flg_req_origin_module_in    IN procedures_ea.flg_req_origin_module%TYPE DEFAULT NULL,
        flg_req_origin_module_nin   IN BOOLEAN := TRUE,
        notes_in                    IN procedures_ea.notes%TYPE DEFAULT NULL,
        notes_nin                   IN BOOLEAN := TRUE,
        notes_cancel_in             IN procedures_ea.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin            IN BOOLEAN := TRUE,
        id_clinical_purpose_in      IN procedures_ea.id_clinical_purpose%TYPE DEFAULT NULL,
        id_clinical_purpose_nin     IN BOOLEAN := TRUE,
        clinical_purpose_notes_in   IN procedures_ea.clinical_purpose_notes%TYPE DEFAULT NULL,
        clinical_purpose_notes_nin  IN BOOLEAN := TRUE,
        flg_location_in             IN procedures_ea.flg_location%TYPE DEFAULT NULL,
        flg_location_nin            IN BOOLEAN := TRUE,
        handle_error_in             IN BOOLEAN := FALSE,
        rows_out                    IN OUT table_varchar
    ) IS
        l_rows_out                  table_varchar;
        l_id_interv_prescription_n  NUMBER(1) := sys.diutil.bool_to_int(id_interv_prescription_nin);
        l_id_interv_presc_plan_n    NUMBER(1) := sys.diutil.bool_to_int(id_interv_presc_plan_nin);
        l_id_intervention_n         NUMBER(1) := sys.diutil.bool_to_int(id_intervention_nin);
        l_flg_status_intervention_n NUMBER(1) := sys.diutil.bool_to_int(flg_status_intervention_nin);
        l_flg_status_req_n          NUMBER(1) := sys.diutil.bool_to_int(flg_status_req_nin);
        l_flg_status_det_n          NUMBER(1) := sys.diutil.bool_to_int(flg_status_det_nin);
        l_flg_status_plan_n         NUMBER(1) := sys.diutil.bool_to_int(flg_status_plan_nin);
        l_flg_time_n                NUMBER(1) := sys.diutil.bool_to_int(flg_time_nin);
        l_flg_interv_type_n         NUMBER(1) := sys.diutil.bool_to_int(flg_interv_type_nin);
        l_dt_begin_req_n            NUMBER(1) := sys.diutil.bool_to_int(dt_begin_req_nin);
        l_dt_begin_det_n            NUMBER(1) := sys.diutil.bool_to_int(dt_begin_det_nin);
        l_interval_n                NUMBER(1) := sys.diutil.bool_to_int(interval_nin);
        l_dt_interv_prescription_n  NUMBER(1) := sys.diutil.bool_to_int(dt_interv_prescription_nin);
        l_dt_plan_n                 NUMBER(1) := sys.diutil.bool_to_int(dt_plan_nin);
        l_id_professional_n         NUMBER(1) := sys.diutil.bool_to_int(id_professional_nin);
        l_flg_notes_n               NUMBER(1) := sys.diutil.bool_to_int(flg_notes_nin);
        l_status_str_n              NUMBER(1) := sys.diutil.bool_to_int(status_str_nin);
        l_status_msg_n              NUMBER(1) := sys.diutil.bool_to_int(status_msg_nin);
        l_status_icon_n             NUMBER(1) := sys.diutil.bool_to_int(status_icon_nin);
        l_status_flg_n              NUMBER(1) := sys.diutil.bool_to_int(status_flg_nin);
        l_id_prof_order_n           NUMBER(1) := sys.diutil.bool_to_int(id_prof_order_nin);
        l_code_intervention_alias_n NUMBER(1) := sys.diutil.bool_to_int(code_intervention_alias_nin);
        l_flg_prty_n                NUMBER(1) := sys.diutil.bool_to_int(flg_prty_nin);
        l_num_take_n                NUMBER(1) := sys.diutil.bool_to_int(num_take_nin);
        l_id_episode_origin_n       NUMBER(1) := sys.diutil.bool_to_int(id_episode_origin_nin);
        l_id_visit_n                NUMBER(1) := sys.diutil.bool_to_int(id_visit_nin);
        l_id_episode_n              NUMBER(1) := sys.diutil.bool_to_int(id_episode_nin);
        l_id_patient_n              NUMBER(1) := sys.diutil.bool_to_int(id_patient_nin);
        l_flg_referral_n            NUMBER(1) := sys.diutil.bool_to_int(flg_referral_nin);
        l_dt_interv_presc_det_n     NUMBER(1) := sys.diutil.bool_to_int(dt_interv_presc_det_nin);
        l_dt_dg_last_update_n       NUMBER(1) := sys.diutil.bool_to_int(dt_dg_last_update_nin);
        l_dt_order_n                NUMBER(1) := sys.diutil.bool_to_int(dt_order_nin);
        l_create_user_n             NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n             NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n      NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n             NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n             NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n      NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_flg_laterality_n          NUMBER(1) := sys.diutil.bool_to_int(flg_laterality_nin);
        l_flg_clinical_purpose_n    NUMBER(1) := sys.diutil.bool_to_int(flg_clinical_purpose_nin);
        l_flg_prn_n                 NUMBER(1) := sys.diutil.bool_to_int(flg_prn_nin);
        l_flg_doc_n                 NUMBER(1) := sys.diutil.bool_to_int(flg_doc_nin);
        l_id_interv_codification_n  NUMBER(1) := sys.diutil.bool_to_int(id_interv_codification_nin);
        l_id_order_recurrence_n     NUMBER(1) := sys.diutil.bool_to_int(id_order_recurrence_nin);
        l_id_task_dependency_n      NUMBER(1) := sys.diutil.bool_to_int(id_task_dependency_nin);
        l_flg_req_origin_module_n   NUMBER(1) := sys.diutil.bool_to_int(flg_req_origin_module_nin);
        l_notes_n                   NUMBER(1) := sys.diutil.bool_to_int(notes_nin);
        l_notes_cancel_n            NUMBER(1) := sys.diutil.bool_to_int(notes_cancel_nin);
        l_id_clinical_purpose_n     NUMBER(1) := sys.diutil.bool_to_int(id_clinical_purpose_nin);
        l_clinical_purpose_notes_n  NUMBER(1) := sys.diutil.bool_to_int(clinical_purpose_notes_nin);
        l_flg_location_n            NUMBER(1) := sys.diutil.bool_to_int(flg_location_nin);
    BEGIN
    
        UPDATE procedures_ea
           SET id_interv_prescription  = decode(l_id_interv_prescription_n,
                                                0,
                                                id_interv_prescription_in,
                                                nvl(id_interv_prescription_in, id_interv_prescription)),
               id_interv_presc_plan    = decode(l_id_interv_presc_plan_n,
                                                0,
                                                id_interv_presc_plan_in,
                                                nvl(id_interv_presc_plan_in, id_interv_presc_plan)),
               id_intervention         = decode(l_id_intervention_n,
                                                0,
                                                id_intervention_in,
                                                nvl(id_intervention_in, id_intervention)),
               flg_status_intervention = decode(l_flg_status_intervention_n,
                                                0,
                                                flg_status_intervention_in,
                                                nvl(flg_status_intervention_in, flg_status_intervention)),
               flg_status_req          = decode(l_flg_status_req_n,
                                                0,
                                                flg_status_req_in,
                                                nvl(flg_status_req_in, flg_status_req)),
               flg_status_det          = decode(l_flg_status_det_n,
                                                0,
                                                flg_status_det_in,
                                                nvl(flg_status_det_in, flg_status_det)),
               flg_status_plan         = decode(l_flg_status_plan_n,
                                                0,
                                                flg_status_plan_in,
                                                nvl(flg_status_plan_in, flg_status_plan)),
               flg_time                = decode(l_flg_time_n, 0, flg_time_in, nvl(flg_time_in, flg_time)),
               flg_interv_type         = decode(l_flg_interv_type_n,
                                                0,
                                                flg_interv_type_in,
                                                nvl(flg_interv_type_in, flg_interv_type)),
               dt_begin_req            = decode(l_dt_begin_req_n, 0, dt_begin_req_in, nvl(dt_begin_req_in, dt_begin_req)),
               dt_begin_det            = decode(l_dt_begin_det_n, 0, dt_begin_det_in, nvl(dt_begin_det_in, dt_begin_det)),
               INTERVAL                = decode(l_interval_n, 0, interval_in, nvl(interval_in, INTERVAL)),
               dt_interv_prescription  = decode(l_dt_interv_prescription_n,
                                                0,
                                                dt_interv_prescription_in,
                                                nvl(dt_interv_prescription_in, dt_interv_prescription)),
               dt_plan                 = decode(l_dt_plan_n, 0, dt_plan_in, nvl(dt_plan_in, dt_plan)),
               id_professional         = decode(l_id_professional_n,
                                                0,
                                                id_professional_in,
                                                nvl(id_professional_in, id_professional)),
               flg_notes               = decode(l_flg_notes_n, 0, flg_notes_in, nvl(flg_notes_in, flg_notes)),
               status_str              = decode(l_status_str_n, 0, status_str_in, nvl(status_str_in, status_str)),
               status_msg              = decode(l_status_msg_n, 0, status_msg_in, nvl(status_msg_in, status_msg)),
               status_icon             = decode(l_status_icon_n, 0, status_icon_in, nvl(status_icon_in, status_icon)),
               status_flg              = decode(l_status_flg_n, 0, status_flg_in, nvl(status_flg_in, status_flg)),
               id_prof_order           = decode(l_id_prof_order_n,
                                                0,
                                                id_prof_order_in,
                                                nvl(id_prof_order_in, id_prof_order)),
               code_intervention_alias = decode(l_code_intervention_alias_n,
                                                0,
                                                code_intervention_alias_in,
                                                nvl(code_intervention_alias_in, code_intervention_alias)),
               flg_prty                = decode(l_flg_prty_n, 0, flg_prty_in, nvl(flg_prty_in, flg_prty)),
               num_take                = decode(l_num_take_n, 0, num_take_in, nvl(num_take_in, num_take)),
               id_episode_origin       = decode(l_id_episode_origin_n,
                                                0,
                                                id_episode_origin_in,
                                                nvl(id_episode_origin_in, id_episode_origin)),
               id_visit                = decode(l_id_visit_n, 0, id_visit_in, nvl(id_visit_in, id_visit)),
               id_episode              = decode(l_id_episode_n, 0, id_episode_in, nvl(id_episode_in, id_episode)),
               id_patient              = decode(l_id_patient_n, 0, id_patient_in, nvl(id_patient_in, id_patient)),
               flg_referral            = decode(l_flg_referral_n, 0, flg_referral_in, nvl(flg_referral_in, flg_referral)),
               dt_interv_presc_det     = decode(l_dt_interv_presc_det_n,
                                                0,
                                                dt_interv_presc_det_in,
                                                nvl(dt_interv_presc_det_in, dt_interv_presc_det)),
               dt_dg_last_update       = decode(l_dt_dg_last_update_n,
                                                0,
                                                dt_dg_last_update_in,
                                                nvl(dt_dg_last_update_in, dt_dg_last_update)),
               dt_order                = decode(l_dt_order_n, 0, dt_order_in, nvl(dt_order_in, dt_order)),
               create_user             = decode(l_create_user_n, 0, create_user_in, nvl(create_user_in, create_user)),
               create_time             = decode(l_create_time_n, 0, create_time_in, nvl(create_time_in, create_time)),
               create_institution      = decode(l_create_institution_n,
                                                0,
                                                create_institution_in,
                                                nvl(create_institution_in, create_institution)),
               update_user             = decode(l_update_user_n, 0, update_user_in, nvl(update_user_in, update_user)),
               update_time             = decode(l_update_time_n, 0, update_time_in, nvl(update_time_in, update_time)),
               update_institution      = decode(l_update_institution_n,
                                                0,
                                                update_institution_in,
                                                nvl(update_institution_in, update_institution)),
               flg_laterality          = decode(l_flg_laterality_n,
                                                0,
                                                flg_laterality_in,
                                                nvl(flg_laterality_in, flg_laterality)),
               flg_clinical_purpose    = decode(l_flg_clinical_purpose_n,
                                                0,
                                                flg_clinical_purpose_in,
                                                nvl(flg_clinical_purpose_in, flg_clinical_purpose)),
               flg_prn                 = decode(l_flg_prn_n, 0, flg_prn_in, nvl(flg_prn_in, flg_prn)),
               flg_doc                 = decode(l_flg_doc_n, 0, flg_doc_in, nvl(flg_doc_in, flg_doc)),
               id_interv_codification  = decode(l_id_interv_codification_n,
                                                0,
                                                id_interv_codification_in,
                                                nvl(id_interv_codification_in, id_interv_codification)),
               id_order_recurrence     = decode(l_id_order_recurrence_n,
                                                0,
                                                id_order_recurrence_in,
                                                nvl(id_order_recurrence_in, id_order_recurrence)),
               id_task_dependency      = decode(l_id_task_dependency_n,
                                                0,
                                                id_task_dependency_in,
                                                nvl(id_task_dependency_in, id_task_dependency)),
               flg_req_origin_module   = decode(l_flg_req_origin_module_n,
                                                0,
                                                flg_req_origin_module_in,
                                                nvl(flg_req_origin_module_in, flg_req_origin_module)),
               notes                   = decode(l_notes_n, 0, notes_in, nvl(notes_in, notes)),
               notes_cancel            = decode(l_notes_cancel_n, 0, notes_cancel_in, nvl(notes_cancel_in, notes_cancel)),
               id_clinical_purpose     = decode(l_id_clinical_purpose_n,
                                                0,
                                                id_clinical_purpose_in,
                                                nvl(id_clinical_purpose_in, id_clinical_purpose)),
               clinical_purpose_notes  = decode(l_clinical_purpose_notes_n,
                                                0,
                                                clinical_purpose_notes_in,
                                                nvl(clinical_purpose_notes_in, clinical_purpose_notes)),
               flg_location            = decode(l_flg_location_n, 0, flg_location_in, nvl(flg_location_in, flg_location))
         WHERE id_interv_presc_det = id_interv_presc_det_in
        RETURNING ROWID BULK COLLECT INTO l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_interv_presc_det_in      IN procedures_ea.id_interv_presc_det%TYPE,
        id_interv_prescription_in   IN procedures_ea.id_interv_prescription%TYPE DEFAULT NULL,
        id_interv_prescription_nin  IN BOOLEAN := TRUE,
        id_interv_presc_plan_in     IN procedures_ea.id_interv_presc_plan%TYPE DEFAULT NULL,
        id_interv_presc_plan_nin    IN BOOLEAN := TRUE,
        id_intervention_in          IN procedures_ea.id_intervention%TYPE DEFAULT NULL,
        id_intervention_nin         IN BOOLEAN := TRUE,
        flg_status_intervention_in  IN procedures_ea.flg_status_intervention%TYPE DEFAULT NULL,
        flg_status_intervention_nin IN BOOLEAN := TRUE,
        flg_status_req_in           IN procedures_ea.flg_status_req%TYPE DEFAULT NULL,
        flg_status_req_nin          IN BOOLEAN := TRUE,
        flg_status_det_in           IN procedures_ea.flg_status_det%TYPE DEFAULT NULL,
        flg_status_det_nin          IN BOOLEAN := TRUE,
        flg_status_plan_in          IN procedures_ea.flg_status_plan%TYPE DEFAULT NULL,
        flg_status_plan_nin         IN BOOLEAN := TRUE,
        flg_time_in                 IN procedures_ea.flg_time%TYPE DEFAULT NULL,
        flg_time_nin                IN BOOLEAN := TRUE,
        flg_interv_type_in          IN procedures_ea.flg_interv_type%TYPE DEFAULT NULL,
        flg_interv_type_nin         IN BOOLEAN := TRUE,
        dt_begin_req_in             IN procedures_ea.dt_begin_req%TYPE DEFAULT NULL,
        dt_begin_req_nin            IN BOOLEAN := TRUE,
        dt_begin_det_in             IN procedures_ea.dt_begin_det%TYPE DEFAULT NULL,
        dt_begin_det_nin            IN BOOLEAN := TRUE,
        interval_in                 IN procedures_ea.interval%TYPE DEFAULT NULL,
        interval_nin                IN BOOLEAN := TRUE,
        dt_interv_prescription_in   IN procedures_ea.dt_interv_prescription%TYPE DEFAULT NULL,
        dt_interv_prescription_nin  IN BOOLEAN := TRUE,
        dt_plan_in                  IN procedures_ea.dt_plan%TYPE DEFAULT NULL,
        dt_plan_nin                 IN BOOLEAN := TRUE,
        id_professional_in          IN procedures_ea.id_professional%TYPE DEFAULT NULL,
        id_professional_nin         IN BOOLEAN := TRUE,
        flg_notes_in                IN procedures_ea.flg_notes%TYPE DEFAULT NULL,
        flg_notes_nin               IN BOOLEAN := TRUE,
        status_str_in               IN procedures_ea.status_str%TYPE DEFAULT NULL,
        status_str_nin              IN BOOLEAN := TRUE,
        status_msg_in               IN procedures_ea.status_msg%TYPE DEFAULT NULL,
        status_msg_nin              IN BOOLEAN := TRUE,
        status_icon_in              IN procedures_ea.status_icon%TYPE DEFAULT NULL,
        status_icon_nin             IN BOOLEAN := TRUE,
        status_flg_in               IN procedures_ea.status_flg%TYPE DEFAULT NULL,
        status_flg_nin              IN BOOLEAN := TRUE,
        id_prof_order_in            IN procedures_ea.id_prof_order%TYPE DEFAULT NULL,
        id_prof_order_nin           IN BOOLEAN := TRUE,
        code_intervention_alias_in  IN procedures_ea.code_intervention_alias%TYPE DEFAULT NULL,
        code_intervention_alias_nin IN BOOLEAN := TRUE,
        flg_prty_in                 IN procedures_ea.flg_prty%TYPE DEFAULT NULL,
        flg_prty_nin                IN BOOLEAN := TRUE,
        num_take_in                 IN procedures_ea.num_take%TYPE DEFAULT NULL,
        num_take_nin                IN BOOLEAN := TRUE,
        id_episode_origin_in        IN procedures_ea.id_episode_origin%TYPE DEFAULT NULL,
        id_episode_origin_nin       IN BOOLEAN := TRUE,
        id_visit_in                 IN procedures_ea.id_visit%TYPE DEFAULT NULL,
        id_visit_nin                IN BOOLEAN := TRUE,
        id_episode_in               IN procedures_ea.id_episode%TYPE DEFAULT NULL,
        id_episode_nin              IN BOOLEAN := TRUE,
        id_patient_in               IN procedures_ea.id_patient%TYPE DEFAULT NULL,
        id_patient_nin              IN BOOLEAN := TRUE,
        flg_referral_in             IN procedures_ea.flg_referral%TYPE DEFAULT NULL,
        flg_referral_nin            IN BOOLEAN := TRUE,
        dt_interv_presc_det_in      IN procedures_ea.dt_interv_presc_det%TYPE DEFAULT NULL,
        dt_interv_presc_det_nin     IN BOOLEAN := TRUE,
        dt_dg_last_update_in        IN procedures_ea.dt_dg_last_update%TYPE DEFAULT NULL,
        dt_dg_last_update_nin       IN BOOLEAN := TRUE,
        dt_order_in                 IN procedures_ea.dt_order%TYPE DEFAULT NULL,
        dt_order_nin                IN BOOLEAN := TRUE,
        create_user_in              IN procedures_ea.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN procedures_ea.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN procedures_ea.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN procedures_ea.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN procedures_ea.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN procedures_ea.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        flg_laterality_in           IN procedures_ea.flg_laterality%TYPE DEFAULT NULL,
        flg_laterality_nin          IN BOOLEAN := TRUE,
        flg_clinical_purpose_in     IN procedures_ea.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_clinical_purpose_nin    IN BOOLEAN := TRUE,
        flg_prn_in                  IN procedures_ea.flg_prn%TYPE DEFAULT NULL,
        flg_prn_nin                 IN BOOLEAN := TRUE,
        flg_doc_in                  IN procedures_ea.flg_doc%TYPE DEFAULT NULL,
        flg_doc_nin                 IN BOOLEAN := TRUE,
        id_interv_codification_in   IN procedures_ea.id_interv_codification%TYPE DEFAULT NULL,
        id_interv_codification_nin  IN BOOLEAN := TRUE,
        id_order_recurrence_in      IN procedures_ea.id_order_recurrence%TYPE DEFAULT NULL,
        id_order_recurrence_nin     IN BOOLEAN := TRUE,
        id_task_dependency_in       IN procedures_ea.id_task_dependency%TYPE DEFAULT NULL,
        id_task_dependency_nin      IN BOOLEAN := TRUE,
        flg_req_origin_module_in    IN procedures_ea.flg_req_origin_module%TYPE DEFAULT NULL,
        flg_req_origin_module_nin   IN BOOLEAN := TRUE,
        notes_in                    IN procedures_ea.notes%TYPE DEFAULT NULL,
        notes_nin                   IN BOOLEAN := TRUE,
        notes_cancel_in             IN procedures_ea.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin            IN BOOLEAN := TRUE,
        id_clinical_purpose_in      IN procedures_ea.id_clinical_purpose%TYPE DEFAULT NULL,
        id_clinical_purpose_nin     IN BOOLEAN := TRUE,
        clinical_purpose_notes_in   IN procedures_ea.clinical_purpose_notes%TYPE DEFAULT NULL,
        clinical_purpose_notes_nin  IN BOOLEAN := TRUE,
        flg_location_in             IN procedures_ea.flg_location%TYPE DEFAULT NULL,
        flg_location_nin            IN BOOLEAN := TRUE,
        handle_error_in             IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_interv_presc_det_in      => id_interv_presc_det_in,
            id_interv_prescription_in   => id_interv_prescription_in,
            id_interv_prescription_nin  => id_interv_prescription_nin,
            id_interv_presc_plan_in     => id_interv_presc_plan_in,
            id_interv_presc_plan_nin    => id_interv_presc_plan_nin,
            id_intervention_in          => id_intervention_in,
            id_intervention_nin         => id_intervention_nin,
            flg_status_intervention_in  => flg_status_intervention_in,
            flg_status_intervention_nin => flg_status_intervention_nin,
            flg_status_req_in           => flg_status_req_in,
            flg_status_req_nin          => flg_status_req_nin,
            flg_status_det_in           => flg_status_det_in,
            flg_status_det_nin          => flg_status_det_nin,
            flg_status_plan_in          => flg_status_plan_in,
            flg_status_plan_nin         => flg_status_plan_nin,
            flg_time_in                 => flg_time_in,
            flg_time_nin                => flg_time_nin,
            flg_interv_type_in          => flg_interv_type_in,
            flg_interv_type_nin         => flg_interv_type_nin,
            dt_begin_req_in             => dt_begin_req_in,
            dt_begin_req_nin            => dt_begin_req_nin,
            dt_begin_det_in             => dt_begin_det_in,
            dt_begin_det_nin            => dt_begin_det_nin,
            interval_in                 => interval_in,
            interval_nin                => interval_nin,
            dt_interv_prescription_in   => dt_interv_prescription_in,
            dt_interv_prescription_nin  => dt_interv_prescription_nin,
            dt_plan_in                  => dt_plan_in,
            dt_plan_nin                 => dt_plan_nin,
            id_professional_in          => id_professional_in,
            id_professional_nin         => id_professional_nin,
            flg_notes_in                => flg_notes_in,
            flg_notes_nin               => flg_notes_nin,
            status_str_in               => status_str_in,
            status_str_nin              => status_str_nin,
            status_msg_in               => status_msg_in,
            status_msg_nin              => status_msg_nin,
            status_icon_in              => status_icon_in,
            status_icon_nin             => status_icon_nin,
            status_flg_in               => status_flg_in,
            status_flg_nin              => status_flg_nin,
            id_prof_order_in            => id_prof_order_in,
            id_prof_order_nin           => id_prof_order_nin,
            code_intervention_alias_in  => code_intervention_alias_in,
            code_intervention_alias_nin => code_intervention_alias_nin,
            flg_prty_in                 => flg_prty_in,
            flg_prty_nin                => flg_prty_nin,
            num_take_in                 => num_take_in,
            num_take_nin                => num_take_nin,
            id_episode_origin_in        => id_episode_origin_in,
            id_episode_origin_nin       => id_episode_origin_nin,
            id_visit_in                 => id_visit_in,
            id_visit_nin                => id_visit_nin,
            id_episode_in               => id_episode_in,
            id_episode_nin              => id_episode_nin,
            id_patient_in               => id_patient_in,
            id_patient_nin              => id_patient_nin,
            flg_referral_in             => flg_referral_in,
            flg_referral_nin            => flg_referral_nin,
            dt_interv_presc_det_in      => dt_interv_presc_det_in,
            dt_interv_presc_det_nin     => dt_interv_presc_det_nin,
            dt_dg_last_update_in        => dt_dg_last_update_in,
            dt_dg_last_update_nin       => dt_dg_last_update_nin,
            dt_order_in                 => dt_order_in,
            dt_order_nin                => dt_order_nin,
            create_user_in              => create_user_in,
            create_user_nin             => create_user_nin,
            create_time_in              => create_time_in,
            create_time_nin             => create_time_nin,
            create_institution_in       => create_institution_in,
            create_institution_nin      => create_institution_nin,
            update_user_in              => update_user_in,
            update_user_nin             => update_user_nin,
            update_time_in              => update_time_in,
            update_time_nin             => update_time_nin,
            update_institution_in       => update_institution_in,
            update_institution_nin      => update_institution_nin,
            flg_laterality_in           => flg_laterality_in,
            flg_laterality_nin          => flg_laterality_nin,
            flg_clinical_purpose_in     => flg_clinical_purpose_in,
            flg_clinical_purpose_nin    => flg_clinical_purpose_nin,
            flg_prn_in                  => flg_prn_in,
            flg_prn_nin                 => flg_prn_nin,
            flg_doc_in                  => flg_doc_in,
            flg_doc_nin                 => flg_doc_nin,
            id_interv_codification_in   => id_interv_codification_in,
            id_interv_codification_nin  => id_interv_codification_nin,
            id_order_recurrence_in      => id_order_recurrence_in,
            id_order_recurrence_nin     => id_order_recurrence_nin,
            id_task_dependency_in       => id_task_dependency_in,
            id_task_dependency_nin      => id_task_dependency_nin,
            flg_req_origin_module_in    => flg_req_origin_module_in,
            flg_req_origin_module_nin   => flg_req_origin_module_nin,
            notes_in                    => notes_in,
            notes_nin                   => notes_nin,
            notes_cancel_in             => notes_cancel_in,
            notes_cancel_nin            => notes_cancel_nin,
            id_clinical_purpose_in      => id_clinical_purpose_in,
            id_clinical_purpose_nin     => id_clinical_purpose_nin,
            clinical_purpose_notes_in   => clinical_purpose_notes_in,
            clinical_purpose_notes_nin  => clinical_purpose_notes_nin,
            flg_location_in             => flg_location_in,
            flg_location_nin            => flg_location_nin,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_interv_prescription_in   IN procedures_ea.id_interv_prescription%TYPE DEFAULT NULL,
        id_interv_prescription_nin  IN BOOLEAN := TRUE,
        id_interv_presc_plan_in     IN procedures_ea.id_interv_presc_plan%TYPE DEFAULT NULL,
        id_interv_presc_plan_nin    IN BOOLEAN := TRUE,
        id_intervention_in          IN procedures_ea.id_intervention%TYPE DEFAULT NULL,
        id_intervention_nin         IN BOOLEAN := TRUE,
        flg_status_intervention_in  IN procedures_ea.flg_status_intervention%TYPE DEFAULT NULL,
        flg_status_intervention_nin IN BOOLEAN := TRUE,
        flg_status_req_in           IN procedures_ea.flg_status_req%TYPE DEFAULT NULL,
        flg_status_req_nin          IN BOOLEAN := TRUE,
        flg_status_det_in           IN procedures_ea.flg_status_det%TYPE DEFAULT NULL,
        flg_status_det_nin          IN BOOLEAN := TRUE,
        flg_status_plan_in          IN procedures_ea.flg_status_plan%TYPE DEFAULT NULL,
        flg_status_plan_nin         IN BOOLEAN := TRUE,
        flg_time_in                 IN procedures_ea.flg_time%TYPE DEFAULT NULL,
        flg_time_nin                IN BOOLEAN := TRUE,
        flg_interv_type_in          IN procedures_ea.flg_interv_type%TYPE DEFAULT NULL,
        flg_interv_type_nin         IN BOOLEAN := TRUE,
        dt_begin_req_in             IN procedures_ea.dt_begin_req%TYPE DEFAULT NULL,
        dt_begin_req_nin            IN BOOLEAN := TRUE,
        dt_begin_det_in             IN procedures_ea.dt_begin_det%TYPE DEFAULT NULL,
        dt_begin_det_nin            IN BOOLEAN := TRUE,
        interval_in                 IN procedures_ea.interval%TYPE DEFAULT NULL,
        interval_nin                IN BOOLEAN := TRUE,
        dt_interv_prescription_in   IN procedures_ea.dt_interv_prescription%TYPE DEFAULT NULL,
        dt_interv_prescription_nin  IN BOOLEAN := TRUE,
        dt_plan_in                  IN procedures_ea.dt_plan%TYPE DEFAULT NULL,
        dt_plan_nin                 IN BOOLEAN := TRUE,
        id_professional_in          IN procedures_ea.id_professional%TYPE DEFAULT NULL,
        id_professional_nin         IN BOOLEAN := TRUE,
        flg_notes_in                IN procedures_ea.flg_notes%TYPE DEFAULT NULL,
        flg_notes_nin               IN BOOLEAN := TRUE,
        status_str_in               IN procedures_ea.status_str%TYPE DEFAULT NULL,
        status_str_nin              IN BOOLEAN := TRUE,
        status_msg_in               IN procedures_ea.status_msg%TYPE DEFAULT NULL,
        status_msg_nin              IN BOOLEAN := TRUE,
        status_icon_in              IN procedures_ea.status_icon%TYPE DEFAULT NULL,
        status_icon_nin             IN BOOLEAN := TRUE,
        status_flg_in               IN procedures_ea.status_flg%TYPE DEFAULT NULL,
        status_flg_nin              IN BOOLEAN := TRUE,
        id_prof_order_in            IN procedures_ea.id_prof_order%TYPE DEFAULT NULL,
        id_prof_order_nin           IN BOOLEAN := TRUE,
        code_intervention_alias_in  IN procedures_ea.code_intervention_alias%TYPE DEFAULT NULL,
        code_intervention_alias_nin IN BOOLEAN := TRUE,
        flg_prty_in                 IN procedures_ea.flg_prty%TYPE DEFAULT NULL,
        flg_prty_nin                IN BOOLEAN := TRUE,
        num_take_in                 IN procedures_ea.num_take%TYPE DEFAULT NULL,
        num_take_nin                IN BOOLEAN := TRUE,
        id_episode_origin_in        IN procedures_ea.id_episode_origin%TYPE DEFAULT NULL,
        id_episode_origin_nin       IN BOOLEAN := TRUE,
        id_visit_in                 IN procedures_ea.id_visit%TYPE DEFAULT NULL,
        id_visit_nin                IN BOOLEAN := TRUE,
        id_episode_in               IN procedures_ea.id_episode%TYPE DEFAULT NULL,
        id_episode_nin              IN BOOLEAN := TRUE,
        id_patient_in               IN procedures_ea.id_patient%TYPE DEFAULT NULL,
        id_patient_nin              IN BOOLEAN := TRUE,
        flg_referral_in             IN procedures_ea.flg_referral%TYPE DEFAULT NULL,
        flg_referral_nin            IN BOOLEAN := TRUE,
        dt_interv_presc_det_in      IN procedures_ea.dt_interv_presc_det%TYPE DEFAULT NULL,
        dt_interv_presc_det_nin     IN BOOLEAN := TRUE,
        dt_dg_last_update_in        IN procedures_ea.dt_dg_last_update%TYPE DEFAULT NULL,
        dt_dg_last_update_nin       IN BOOLEAN := TRUE,
        dt_order_in                 IN procedures_ea.dt_order%TYPE DEFAULT NULL,
        dt_order_nin                IN BOOLEAN := TRUE,
        create_user_in              IN procedures_ea.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN procedures_ea.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN procedures_ea.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN procedures_ea.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN procedures_ea.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN procedures_ea.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        flg_laterality_in           IN procedures_ea.flg_laterality%TYPE DEFAULT NULL,
        flg_laterality_nin          IN BOOLEAN := TRUE,
        flg_clinical_purpose_in     IN procedures_ea.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_clinical_purpose_nin    IN BOOLEAN := TRUE,
        flg_prn_in                  IN procedures_ea.flg_prn%TYPE DEFAULT NULL,
        flg_prn_nin                 IN BOOLEAN := TRUE,
        flg_doc_in                  IN procedures_ea.flg_doc%TYPE DEFAULT NULL,
        flg_doc_nin                 IN BOOLEAN := TRUE,
        id_interv_codification_in   IN procedures_ea.id_interv_codification%TYPE DEFAULT NULL,
        id_interv_codification_nin  IN BOOLEAN := TRUE,
        id_order_recurrence_in      IN procedures_ea.id_order_recurrence%TYPE DEFAULT NULL,
        id_order_recurrence_nin     IN BOOLEAN := TRUE,
        id_task_dependency_in       IN procedures_ea.id_task_dependency%TYPE DEFAULT NULL,
        id_task_dependency_nin      IN BOOLEAN := TRUE,
        flg_req_origin_module_in    IN procedures_ea.flg_req_origin_module%TYPE DEFAULT NULL,
        flg_req_origin_module_nin   IN BOOLEAN := TRUE,
        notes_in                    IN procedures_ea.notes%TYPE DEFAULT NULL,
        notes_nin                   IN BOOLEAN := TRUE,
        notes_cancel_in             IN procedures_ea.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin            IN BOOLEAN := TRUE,
        id_clinical_purpose_in      IN procedures_ea.id_clinical_purpose%TYPE DEFAULT NULL,
        id_clinical_purpose_nin     IN BOOLEAN := TRUE,
        clinical_purpose_notes_in   IN procedures_ea.clinical_purpose_notes%TYPE DEFAULT NULL,
        clinical_purpose_notes_nin  IN BOOLEAN := TRUE,
        flg_location_in             IN procedures_ea.flg_location%TYPE DEFAULT NULL,
        flg_location_nin            IN BOOLEAN := TRUE,
        where_in                    IN VARCHAR2,
        handle_error_in             IN BOOLEAN := FALSE,
        rows_out                    IN OUT table_varchar
    ) IS
        l_sql                       VARCHAR2(32767);
        l_rows_out                  table_varchar;
        l_id_interv_prescription_n  NUMBER(1) := sys.diutil.bool_to_int(id_interv_prescription_nin);
        l_id_interv_presc_plan_n    NUMBER(1) := sys.diutil.bool_to_int(id_interv_presc_plan_nin);
        l_id_intervention_n         NUMBER(1) := sys.diutil.bool_to_int(id_intervention_nin);
        l_flg_status_intervention_n NUMBER(1) := sys.diutil.bool_to_int(flg_status_intervention_nin);
        l_flg_status_req_n          NUMBER(1) := sys.diutil.bool_to_int(flg_status_req_nin);
        l_flg_status_det_n          NUMBER(1) := sys.diutil.bool_to_int(flg_status_det_nin);
        l_flg_status_plan_n         NUMBER(1) := sys.diutil.bool_to_int(flg_status_plan_nin);
        l_flg_time_n                NUMBER(1) := sys.diutil.bool_to_int(flg_time_nin);
        l_flg_interv_type_n         NUMBER(1) := sys.diutil.bool_to_int(flg_interv_type_nin);
        l_dt_begin_req_n            NUMBER(1) := sys.diutil.bool_to_int(dt_begin_req_nin);
        l_dt_begin_det_n            NUMBER(1) := sys.diutil.bool_to_int(dt_begin_det_nin);
        l_interval_n                NUMBER(1) := sys.diutil.bool_to_int(interval_nin);
        l_dt_interv_prescription_n  NUMBER(1) := sys.diutil.bool_to_int(dt_interv_prescription_nin);
        l_dt_plan_n                 NUMBER(1) := sys.diutil.bool_to_int(dt_plan_nin);
        l_id_professional_n         NUMBER(1) := sys.diutil.bool_to_int(id_professional_nin);
        l_flg_notes_n               NUMBER(1) := sys.diutil.bool_to_int(flg_notes_nin);
        l_status_str_n              NUMBER(1) := sys.diutil.bool_to_int(status_str_nin);
        l_status_msg_n              NUMBER(1) := sys.diutil.bool_to_int(status_msg_nin);
        l_status_icon_n             NUMBER(1) := sys.diutil.bool_to_int(status_icon_nin);
        l_status_flg_n              NUMBER(1) := sys.diutil.bool_to_int(status_flg_nin);
        l_id_prof_order_n           NUMBER(1) := sys.diutil.bool_to_int(id_prof_order_nin);
        l_code_intervention_alias_n NUMBER(1) := sys.diutil.bool_to_int(code_intervention_alias_nin);
        l_flg_prty_n                NUMBER(1) := sys.diutil.bool_to_int(flg_prty_nin);
        l_num_take_n                NUMBER(1) := sys.diutil.bool_to_int(num_take_nin);
        l_id_episode_origin_n       NUMBER(1) := sys.diutil.bool_to_int(id_episode_origin_nin);
        l_id_visit_n                NUMBER(1) := sys.diutil.bool_to_int(id_visit_nin);
        l_id_episode_n              NUMBER(1) := sys.diutil.bool_to_int(id_episode_nin);
        l_id_patient_n              NUMBER(1) := sys.diutil.bool_to_int(id_patient_nin);
        l_flg_referral_n            NUMBER(1) := sys.diutil.bool_to_int(flg_referral_nin);
        l_dt_interv_presc_det_n     NUMBER(1) := sys.diutil.bool_to_int(dt_interv_presc_det_nin);
        l_dt_dg_last_update_n       NUMBER(1) := sys.diutil.bool_to_int(dt_dg_last_update_nin);
        l_dt_order_n                NUMBER(1) := sys.diutil.bool_to_int(dt_order_nin);
        l_create_user_n             NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n             NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n      NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n             NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n             NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n      NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_flg_laterality_n          NUMBER(1) := sys.diutil.bool_to_int(flg_laterality_nin);
        l_flg_clinical_purpose_n    NUMBER(1) := sys.diutil.bool_to_int(flg_clinical_purpose_nin);
        l_flg_prn_n                 NUMBER(1) := sys.diutil.bool_to_int(flg_prn_nin);
        l_flg_doc_n                 NUMBER(1) := sys.diutil.bool_to_int(flg_doc_nin);
        l_id_interv_codification_n  NUMBER(1) := sys.diutil.bool_to_int(id_interv_codification_nin);
        l_id_order_recurrence_n     NUMBER(1) := sys.diutil.bool_to_int(id_order_recurrence_nin);
        l_id_task_dependency_n      NUMBER(1) := sys.diutil.bool_to_int(id_task_dependency_nin);
        l_flg_req_origin_module_n   NUMBER(1) := sys.diutil.bool_to_int(flg_req_origin_module_nin);
        l_notes_n                   NUMBER(1) := sys.diutil.bool_to_int(notes_nin);
        l_notes_cancel_n            NUMBER(1) := sys.diutil.bool_to_int(notes_cancel_nin);
        l_id_clinical_purpose_n     NUMBER(1) := sys.diutil.bool_to_int(id_clinical_purpose_nin);
        l_clinical_purpose_notes_n  NUMBER(1) := sys.diutil.bool_to_int(clinical_purpose_notes_nin);
        l_flg_location_n            NUMBER(1) := sys.diutil.bool_to_int(flg_location_nin);
    BEGIN
        l_id_interv_prescription_n  := sys.diutil.bool_to_int(id_interv_prescription_nin);
        l_id_interv_presc_plan_n    := sys.diutil.bool_to_int(id_interv_presc_plan_nin);
        l_id_intervention_n         := sys.diutil.bool_to_int(id_intervention_nin);
        l_flg_status_intervention_n := sys.diutil.bool_to_int(flg_status_intervention_nin);
        l_flg_status_req_n          := sys.diutil.bool_to_int(flg_status_req_nin);
        l_flg_status_det_n          := sys.diutil.bool_to_int(flg_status_det_nin);
        l_flg_status_plan_n         := sys.diutil.bool_to_int(flg_status_plan_nin);
        l_flg_time_n                := sys.diutil.bool_to_int(flg_time_nin);
        l_flg_interv_type_n         := sys.diutil.bool_to_int(flg_interv_type_nin);
        l_dt_begin_req_n            := sys.diutil.bool_to_int(dt_begin_req_nin);
        l_dt_begin_det_n            := sys.diutil.bool_to_int(dt_begin_det_nin);
        l_interval_n                := sys.diutil.bool_to_int(interval_nin);
        l_dt_interv_prescription_n  := sys.diutil.bool_to_int(dt_interv_prescription_nin);
        l_dt_plan_n                 := sys.diutil.bool_to_int(dt_plan_nin);
        l_id_professional_n         := sys.diutil.bool_to_int(id_professional_nin);
        l_flg_notes_n               := sys.diutil.bool_to_int(flg_notes_nin);
        l_status_str_n              := sys.diutil.bool_to_int(status_str_nin);
        l_status_msg_n              := sys.diutil.bool_to_int(status_msg_nin);
        l_status_icon_n             := sys.diutil.bool_to_int(status_icon_nin);
        l_status_flg_n              := sys.diutil.bool_to_int(status_flg_nin);
        l_id_prof_order_n           := sys.diutil.bool_to_int(id_prof_order_nin);
        l_code_intervention_alias_n := sys.diutil.bool_to_int(code_intervention_alias_nin);
        l_flg_prty_n                := sys.diutil.bool_to_int(flg_prty_nin);
        l_num_take_n                := sys.diutil.bool_to_int(num_take_nin);
        l_id_episode_origin_n       := sys.diutil.bool_to_int(id_episode_origin_nin);
        l_id_visit_n                := sys.diutil.bool_to_int(id_visit_nin);
        l_id_episode_n              := sys.diutil.bool_to_int(id_episode_nin);
        l_id_patient_n              := sys.diutil.bool_to_int(id_patient_nin);
        l_flg_referral_n            := sys.diutil.bool_to_int(flg_referral_nin);
        l_dt_interv_presc_det_n     := sys.diutil.bool_to_int(dt_interv_presc_det_nin);
        l_dt_dg_last_update_n       := sys.diutil.bool_to_int(dt_dg_last_update_nin);
        l_dt_order_n                := sys.diutil.bool_to_int(dt_order_nin);
        l_create_user_n             := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n             := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n      := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n             := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n             := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n      := sys.diutil.bool_to_int(update_institution_nin);
        l_flg_laterality_n          := sys.diutil.bool_to_int(flg_laterality_nin);
        l_flg_clinical_purpose_n    := sys.diutil.bool_to_int(flg_clinical_purpose_nin);
        l_flg_prn_n                 := sys.diutil.bool_to_int(flg_prn_nin);
        l_flg_doc_n                 := sys.diutil.bool_to_int(flg_doc_nin);
        l_id_interv_codification_n  := sys.diutil.bool_to_int(id_interv_codification_nin);
        l_id_order_recurrence_n     := sys.diutil.bool_to_int(id_order_recurrence_nin);
        l_id_task_dependency_n      := sys.diutil.bool_to_int(id_task_dependency_nin);
        l_flg_req_origin_module_n   := sys.diutil.bool_to_int(flg_req_origin_module_nin);
        l_notes_n                   := sys.diutil.bool_to_int(notes_nin);
        l_notes_cancel_n            := sys.diutil.bool_to_int(notes_cancel_nin);
        l_id_clinical_purpose_n     := sys.diutil.bool_to_int(id_clinical_purpose_nin);
        l_clinical_purpose_notes_n  := sys.diutil.bool_to_int(clinical_purpose_notes_nin);
        l_flg_location_n            := sys.diutil.bool_to_int(flg_location_nin);
        l_sql                       := 'UPDATE procedures_ea SET' || ' ID_INTERV_PRESCRIPTION = decode (' ||
                                       l_id_interv_prescription_n ||
                                       ',0,:ID_INTERV_PRESCRIPTION_in, NVL (:ID_INTERV_PRESCRIPTION_in, ID_INTERV_PRESCRIPTION)) ' || ',' ||
                                       ' ID_INTERV_PRESC_PLAN = decode (' || l_id_interv_presc_plan_n ||
                                       ',0,:ID_INTERV_PRESC_PLAN_in, NVL (:ID_INTERV_PRESC_PLAN_in, ID_INTERV_PRESC_PLAN)) ' || ',' ||
                                       ' ID_INTERVENTION = decode (' || l_id_intervention_n ||
                                       ',0,:ID_INTERVENTION_in, NVL (:ID_INTERVENTION_in, ID_INTERVENTION)) ' || ',' ||
                                       ' FLG_STATUS_INTERVENTION = decode (' || l_flg_status_intervention_n ||
                                       ',0,:FLG_STATUS_INTERVENTION_in, NVL (:FLG_STATUS_INTERVENTION_in, FLG_STATUS_INTERVENTION)) ' || ',' ||
                                       ' FLG_STATUS_REQ = decode (' || l_flg_status_req_n ||
                                       ',0,:FLG_STATUS_REQ_in, NVL (:FLG_STATUS_REQ_in, FLG_STATUS_REQ)) ' || ',' ||
                                       ' FLG_STATUS_DET = decode (' || l_flg_status_det_n ||
                                       ',0,:FLG_STATUS_DET_in, NVL (:FLG_STATUS_DET_in, FLG_STATUS_DET)) ' || ',' ||
                                       ' FLG_STATUS_PLAN = decode (' || l_flg_status_plan_n ||
                                       ',0,:FLG_STATUS_PLAN_in, NVL (:FLG_STATUS_PLAN_in, FLG_STATUS_PLAN)) ' || ',' ||
                                       ' FLG_TIME = decode (' || l_flg_time_n ||
                                       ',0,:FLG_TIME_in, NVL (:FLG_TIME_in, FLG_TIME)) ' || ',' ||
                                       ' FLG_INTERV_TYPE = decode (' || l_flg_interv_type_n ||
                                       ',0,:FLG_INTERV_TYPE_in, NVL (:FLG_INTERV_TYPE_in, FLG_INTERV_TYPE)) ' || ',' ||
                                       ' DT_BEGIN_REQ = decode (' || l_dt_begin_req_n ||
                                       ',0,:DT_BEGIN_REQ_in, NVL (:DT_BEGIN_REQ_in, DT_BEGIN_REQ)) ' || ',' ||
                                       ' DT_BEGIN_DET = decode (' || l_dt_begin_det_n ||
                                       ',0,:DT_BEGIN_DET_in, NVL (:DT_BEGIN_DET_in, DT_BEGIN_DET)) ' || ',' ||
                                       ' INTERVAL = decode (' || l_interval_n ||
                                       ',0,:INTERVAL_in, NVL (:INTERVAL_in, INTERVAL)) ' || ',' ||
                                       ' DT_INTERV_PRESCRIPTION = decode (' || l_dt_interv_prescription_n ||
                                       ',0,:DT_INTERV_PRESCRIPTION_in, NVL (:DT_INTERV_PRESCRIPTION_in, DT_INTERV_PRESCRIPTION)) ' || ',' ||
                                       ' DT_PLAN = decode (' || l_dt_plan_n ||
                                       ',0,:DT_PLAN_in, NVL (:DT_PLAN_in, DT_PLAN)) ' || ',' ||
                                       ' ID_PROFESSIONAL = decode (' || l_id_professional_n ||
                                       ',0,:ID_PROFESSIONAL_in, NVL (:ID_PROFESSIONAL_in, ID_PROFESSIONAL)) ' || ',' ||
                                       ' FLG_NOTES = decode (' || l_flg_notes_n ||
                                       ',0,:FLG_NOTES_in, NVL (:FLG_NOTES_in, FLG_NOTES)) ' || ',' ||
                                       ' STATUS_STR = decode (' || l_status_str_n ||
                                       ',0,:STATUS_STR_in, NVL (:STATUS_STR_in, STATUS_STR)) ' || ',' ||
                                       ' STATUS_MSG = decode (' || l_status_msg_n ||
                                       ',0,:STATUS_MSG_in, NVL (:STATUS_MSG_in, STATUS_MSG)) ' || ',' ||
                                       ' STATUS_ICON = decode (' || l_status_icon_n ||
                                       ',0,:STATUS_ICON_in, NVL (:STATUS_ICON_in, STATUS_ICON)) ' || ',' ||
                                       ' STATUS_FLG = decode (' || l_status_flg_n ||
                                       ',0,:STATUS_FLG_in, NVL (:STATUS_FLG_in, STATUS_FLG)) ' || ',' ||
                                       ' ID_PROF_ORDER = decode (' || l_id_prof_order_n ||
                                       ',0,:ID_PROF_ORDER_in, NVL (:ID_PROF_ORDER_in, ID_PROF_ORDER)) ' || ',' ||
                                       ' CODE_INTERVENTION_ALIAS = decode (' || l_code_intervention_alias_n ||
                                       ',0,:CODE_INTERVENTION_ALIAS_in, NVL (:CODE_INTERVENTION_ALIAS_in, CODE_INTERVENTION_ALIAS)) ' || ',' ||
                                       ' FLG_PRTY = decode (' || l_flg_prty_n ||
                                       ',0,:FLG_PRTY_in, NVL (:FLG_PRTY_in, FLG_PRTY)) ' || ',' ||
                                       ' NUM_TAKE = decode (' || l_num_take_n ||
                                       ',0,:NUM_TAKE_in, NVL (:NUM_TAKE_in, NUM_TAKE)) ' || ',' ||
                                       ' ID_EPISODE_ORIGIN = decode (' || l_id_episode_origin_n ||
                                       ',0,:ID_EPISODE_ORIGIN_in, NVL (:ID_EPISODE_ORIGIN_in, ID_EPISODE_ORIGIN)) ' || ',' ||
                                       ' ID_VISIT = decode (' || l_id_visit_n ||
                                       ',0,:ID_VISIT_in, NVL (:ID_VISIT_in, ID_VISIT)) ' || ',' ||
                                       ' ID_EPISODE = decode (' || l_id_episode_n ||
                                       ',0,:ID_EPISODE_in, NVL (:ID_EPISODE_in, ID_EPISODE)) ' || ',' ||
                                       ' ID_PATIENT = decode (' || l_id_patient_n ||
                                       ',0,:ID_PATIENT_in, NVL (:ID_PATIENT_in, ID_PATIENT)) ' || ',' ||
                                       ' FLG_REFERRAL = decode (' || l_flg_referral_n ||
                                       ',0,:FLG_REFERRAL_in, NVL (:FLG_REFERRAL_in, FLG_REFERRAL)) ' || ',' ||
                                       ' DT_INTERV_PRESC_DET = decode (' || l_dt_interv_presc_det_n ||
                                       ',0,:DT_INTERV_PRESC_DET_in, NVL (:DT_INTERV_PRESC_DET_in, DT_INTERV_PRESC_DET)) ' || ',' ||
                                       ' DT_DG_LAST_UPDATE = decode (' || l_dt_dg_last_update_n ||
                                       ',0,:DT_DG_LAST_UPDATE_in, NVL (:DT_DG_LAST_UPDATE_in, DT_DG_LAST_UPDATE)) ' || ',' ||
                                       ' DT_ORDER = decode (' || l_dt_order_n ||
                                       ',0,:DT_ORDER_in, NVL (:DT_ORDER_in, DT_ORDER)) ' || ',' ||
                                       ' CREATE_USER = decode (' || l_create_user_n ||
                                       ',0,:CREATE_USER_in, NVL (:CREATE_USER_in, CREATE_USER)) ' || ',' ||
                                       ' CREATE_TIME = decode (' || l_create_time_n ||
                                       ',0,:CREATE_TIME_in, NVL (:CREATE_TIME_in, CREATE_TIME)) ' || ',' ||
                                       ' CREATE_INSTITUTION = decode (' || l_create_institution_n ||
                                       ',0,:CREATE_INSTITUTION_in, NVL (:CREATE_INSTITUTION_in, CREATE_INSTITUTION)) ' || ',' ||
                                       ' UPDATE_USER = decode (' || l_update_user_n ||
                                       ',0,:UPDATE_USER_in, NVL (:UPDATE_USER_in, UPDATE_USER)) ' || ',' ||
                                       ' UPDATE_TIME = decode (' || l_update_time_n ||
                                       ',0,:UPDATE_TIME_in, NVL (:UPDATE_TIME_in, UPDATE_TIME)) ' || ',' ||
                                       ' UPDATE_INSTITUTION = decode (' || l_update_institution_n ||
                                       ',0,:UPDATE_INSTITUTION_in, NVL (:UPDATE_INSTITUTION_in, UPDATE_INSTITUTION)) ' || ',' ||
                                       ' FLG_LATERALITY = decode (' || l_flg_laterality_n ||
                                       ',0,:FLG_LATERALITY_in, NVL (:FLG_LATERALITY_in, FLG_LATERALITY)) ' || ',' ||
                                       ' FLG_CLINICAL_PURPOSE = decode (' || l_flg_clinical_purpose_n ||
                                       ',0,:FLG_CLINICAL_PURPOSE_in, NVL (:FLG_CLINICAL_PURPOSE_in, FLG_CLINICAL_PURPOSE)) ' || ',' ||
                                       ' FLG_PRN = decode (' || l_flg_prn_n ||
                                       ',0,:FLG_PRN_in, NVL (:FLG_PRN_in, FLG_PRN)) ' || ',' || ' FLG_DOC = decode (' ||
                                       l_flg_doc_n || ',0,:FLG_DOC_in, NVL (:FLG_DOC_in, FLG_DOC)) ' || ',' ||
                                       ' ID_INTERV_CODIFICATION = decode (' || l_id_interv_codification_n ||
                                       ',0,:ID_INTERV_CODIFICATION_in, NVL (:ID_INTERV_CODIFICATION_in, ID_INTERV_CODIFICATION)) ' || ',' ||
                                       ' ID_ORDER_RECURRENCE = decode (' || l_id_order_recurrence_n ||
                                       ',0,:ID_ORDER_RECURRENCE_in, NVL (:ID_ORDER_RECURRENCE_in, ID_ORDER_RECURRENCE)) ' || ',' ||
                                       ' ID_TASK_DEPENDENCY = decode (' || l_id_task_dependency_n ||
                                       ',0,:ID_TASK_DEPENDENCY_in, NVL (:ID_TASK_DEPENDENCY_in, ID_TASK_DEPENDENCY)) ' || ',' ||
                                       ' FLG_REQ_ORIGIN_MODULE = decode (' || l_flg_req_origin_module_n ||
                                       ',0,:FLG_REQ_ORIGIN_MODULE_in, NVL (:FLG_REQ_ORIGIN_MODULE_in, FLG_REQ_ORIGIN_MODULE)) ' || ',' ||
                                       ' NOTES = decode (' || l_notes_n || ',0,:NOTES_in, NVL (:NOTES_in, NOTES)) ' || ',' ||
                                       ' NOTES_CANCEL = decode (' || l_notes_cancel_n ||
                                       ',0,:NOTES_CANCEL_in, NVL (:NOTES_CANCEL_in, NOTES_CANCEL)) ' || ',' ||
                                       ' ID_CLINICAL_PURPOSE = decode (' || l_id_clinical_purpose_n ||
                                       ',0,:ID_CLINICAL_PURPOSE_in, NVL (:ID_CLINICAL_PURPOSE_in, ID_CLINICAL_PURPOSE)) ' || ',' ||
                                       ' CLINICAL_PURPOSE_NOTES = decode (' || l_clinical_purpose_notes_n ||
                                       ',0,:CLINICAL_PURPOSE_NOTES_in, NVL (:CLINICAL_PURPOSE_NOTES_in, CLINICAL_PURPOSE_NOTES)) ' || ',' ||
                                       ' FLG_LOCATION = decode (' || l_flg_location_n ||
                                       ',0,:FLG_LOCATION_in, NVL (:FLG_LOCATION_in, FLG_LOCATION)) ' || ' where ' ||
                                       nvl(where_in, '(1=1)') || ' RETURNING ROWID BULK COLLECT INTO :l_rows_out';
        EXECUTE IMMEDIATE 'BEGIN ' || l_sql || '; END;'
            USING IN id_interv_prescription_in, id_interv_presc_plan_in, id_intervention_in, flg_status_intervention_in, flg_status_req_in, flg_status_det_in, flg_status_plan_in, flg_time_in, flg_interv_type_in, dt_begin_req_in, dt_begin_det_in, interval_in, dt_interv_prescription_in, dt_plan_in, id_professional_in, flg_notes_in, status_str_in, status_msg_in, status_icon_in, status_flg_in, id_prof_order_in, code_intervention_alias_in, flg_prty_in, num_take_in, id_episode_origin_in, id_visit_in, id_episode_in, id_patient_in, flg_referral_in, dt_interv_presc_det_in, dt_dg_last_update_in, dt_order_in, create_user_in, create_time_in, create_institution_in, update_user_in, update_time_in, update_institution_in, flg_laterality_in, flg_clinical_purpose_in, flg_prn_in, flg_doc_in, id_interv_codification_in, id_order_recurrence_in, id_task_dependency_in, flg_req_origin_module_in, notes_in, notes_cancel_in, id_clinical_purpose_in, clinical_purpose_notes_in, flg_location_in, OUT l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_interv_prescription_in   IN procedures_ea.id_interv_prescription%TYPE DEFAULT NULL,
        id_interv_prescription_nin  IN BOOLEAN := TRUE,
        id_interv_presc_plan_in     IN procedures_ea.id_interv_presc_plan%TYPE DEFAULT NULL,
        id_interv_presc_plan_nin    IN BOOLEAN := TRUE,
        id_intervention_in          IN procedures_ea.id_intervention%TYPE DEFAULT NULL,
        id_intervention_nin         IN BOOLEAN := TRUE,
        flg_status_intervention_in  IN procedures_ea.flg_status_intervention%TYPE DEFAULT NULL,
        flg_status_intervention_nin IN BOOLEAN := TRUE,
        flg_status_req_in           IN procedures_ea.flg_status_req%TYPE DEFAULT NULL,
        flg_status_req_nin          IN BOOLEAN := TRUE,
        flg_status_det_in           IN procedures_ea.flg_status_det%TYPE DEFAULT NULL,
        flg_status_det_nin          IN BOOLEAN := TRUE,
        flg_status_plan_in          IN procedures_ea.flg_status_plan%TYPE DEFAULT NULL,
        flg_status_plan_nin         IN BOOLEAN := TRUE,
        flg_time_in                 IN procedures_ea.flg_time%TYPE DEFAULT NULL,
        flg_time_nin                IN BOOLEAN := TRUE,
        flg_interv_type_in          IN procedures_ea.flg_interv_type%TYPE DEFAULT NULL,
        flg_interv_type_nin         IN BOOLEAN := TRUE,
        dt_begin_req_in             IN procedures_ea.dt_begin_req%TYPE DEFAULT NULL,
        dt_begin_req_nin            IN BOOLEAN := TRUE,
        dt_begin_det_in             IN procedures_ea.dt_begin_det%TYPE DEFAULT NULL,
        dt_begin_det_nin            IN BOOLEAN := TRUE,
        interval_in                 IN procedures_ea.interval%TYPE DEFAULT NULL,
        interval_nin                IN BOOLEAN := TRUE,
        dt_interv_prescription_in   IN procedures_ea.dt_interv_prescription%TYPE DEFAULT NULL,
        dt_interv_prescription_nin  IN BOOLEAN := TRUE,
        dt_plan_in                  IN procedures_ea.dt_plan%TYPE DEFAULT NULL,
        dt_plan_nin                 IN BOOLEAN := TRUE,
        id_professional_in          IN procedures_ea.id_professional%TYPE DEFAULT NULL,
        id_professional_nin         IN BOOLEAN := TRUE,
        flg_notes_in                IN procedures_ea.flg_notes%TYPE DEFAULT NULL,
        flg_notes_nin               IN BOOLEAN := TRUE,
        status_str_in               IN procedures_ea.status_str%TYPE DEFAULT NULL,
        status_str_nin              IN BOOLEAN := TRUE,
        status_msg_in               IN procedures_ea.status_msg%TYPE DEFAULT NULL,
        status_msg_nin              IN BOOLEAN := TRUE,
        status_icon_in              IN procedures_ea.status_icon%TYPE DEFAULT NULL,
        status_icon_nin             IN BOOLEAN := TRUE,
        status_flg_in               IN procedures_ea.status_flg%TYPE DEFAULT NULL,
        status_flg_nin              IN BOOLEAN := TRUE,
        id_prof_order_in            IN procedures_ea.id_prof_order%TYPE DEFAULT NULL,
        id_prof_order_nin           IN BOOLEAN := TRUE,
        code_intervention_alias_in  IN procedures_ea.code_intervention_alias%TYPE DEFAULT NULL,
        code_intervention_alias_nin IN BOOLEAN := TRUE,
        flg_prty_in                 IN procedures_ea.flg_prty%TYPE DEFAULT NULL,
        flg_prty_nin                IN BOOLEAN := TRUE,
        num_take_in                 IN procedures_ea.num_take%TYPE DEFAULT NULL,
        num_take_nin                IN BOOLEAN := TRUE,
        id_episode_origin_in        IN procedures_ea.id_episode_origin%TYPE DEFAULT NULL,
        id_episode_origin_nin       IN BOOLEAN := TRUE,
        id_visit_in                 IN procedures_ea.id_visit%TYPE DEFAULT NULL,
        id_visit_nin                IN BOOLEAN := TRUE,
        id_episode_in               IN procedures_ea.id_episode%TYPE DEFAULT NULL,
        id_episode_nin              IN BOOLEAN := TRUE,
        id_patient_in               IN procedures_ea.id_patient%TYPE DEFAULT NULL,
        id_patient_nin              IN BOOLEAN := TRUE,
        flg_referral_in             IN procedures_ea.flg_referral%TYPE DEFAULT NULL,
        flg_referral_nin            IN BOOLEAN := TRUE,
        dt_interv_presc_det_in      IN procedures_ea.dt_interv_presc_det%TYPE DEFAULT NULL,
        dt_interv_presc_det_nin     IN BOOLEAN := TRUE,
        dt_dg_last_update_in        IN procedures_ea.dt_dg_last_update%TYPE DEFAULT NULL,
        dt_dg_last_update_nin       IN BOOLEAN := TRUE,
        dt_order_in                 IN procedures_ea.dt_order%TYPE DEFAULT NULL,
        dt_order_nin                IN BOOLEAN := TRUE,
        create_user_in              IN procedures_ea.create_user%TYPE DEFAULT NULL,
        create_user_nin             IN BOOLEAN := TRUE,
        create_time_in              IN procedures_ea.create_time%TYPE DEFAULT NULL,
        create_time_nin             IN BOOLEAN := TRUE,
        create_institution_in       IN procedures_ea.create_institution%TYPE DEFAULT NULL,
        create_institution_nin      IN BOOLEAN := TRUE,
        update_user_in              IN procedures_ea.update_user%TYPE DEFAULT NULL,
        update_user_nin             IN BOOLEAN := TRUE,
        update_time_in              IN procedures_ea.update_time%TYPE DEFAULT NULL,
        update_time_nin             IN BOOLEAN := TRUE,
        update_institution_in       IN procedures_ea.update_institution%TYPE DEFAULT NULL,
        update_institution_nin      IN BOOLEAN := TRUE,
        flg_laterality_in           IN procedures_ea.flg_laterality%TYPE DEFAULT NULL,
        flg_laterality_nin          IN BOOLEAN := TRUE,
        flg_clinical_purpose_in     IN procedures_ea.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_clinical_purpose_nin    IN BOOLEAN := TRUE,
        flg_prn_in                  IN procedures_ea.flg_prn%TYPE DEFAULT NULL,
        flg_prn_nin                 IN BOOLEAN := TRUE,
        flg_doc_in                  IN procedures_ea.flg_doc%TYPE DEFAULT NULL,
        flg_doc_nin                 IN BOOLEAN := TRUE,
        id_interv_codification_in   IN procedures_ea.id_interv_codification%TYPE DEFAULT NULL,
        id_interv_codification_nin  IN BOOLEAN := TRUE,
        id_order_recurrence_in      IN procedures_ea.id_order_recurrence%TYPE DEFAULT NULL,
        id_order_recurrence_nin     IN BOOLEAN := TRUE,
        id_task_dependency_in       IN procedures_ea.id_task_dependency%TYPE DEFAULT NULL,
        id_task_dependency_nin      IN BOOLEAN := TRUE,
        flg_req_origin_module_in    IN procedures_ea.flg_req_origin_module%TYPE DEFAULT NULL,
        flg_req_origin_module_nin   IN BOOLEAN := TRUE,
        notes_in                    IN procedures_ea.notes%TYPE DEFAULT NULL,
        notes_nin                   IN BOOLEAN := TRUE,
        notes_cancel_in             IN procedures_ea.notes_cancel%TYPE DEFAULT NULL,
        notes_cancel_nin            IN BOOLEAN := TRUE,
        id_clinical_purpose_in      IN procedures_ea.id_clinical_purpose%TYPE DEFAULT NULL,
        id_clinical_purpose_nin     IN BOOLEAN := TRUE,
        clinical_purpose_notes_in   IN procedures_ea.clinical_purpose_notes%TYPE DEFAULT NULL,
        clinical_purpose_notes_nin  IN BOOLEAN := TRUE,
        flg_location_in             IN procedures_ea.flg_location%TYPE DEFAULT NULL,
        flg_location_nin            IN BOOLEAN := TRUE,
        where_in                    IN VARCHAR2,
        handle_error_in             IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_interv_prescription_in   => id_interv_prescription_in,
            id_interv_prescription_nin  => id_interv_prescription_nin,
            id_interv_presc_plan_in     => id_interv_presc_plan_in,
            id_interv_presc_plan_nin    => id_interv_presc_plan_nin,
            id_intervention_in          => id_intervention_in,
            id_intervention_nin         => id_intervention_nin,
            flg_status_intervention_in  => flg_status_intervention_in,
            flg_status_intervention_nin => flg_status_intervention_nin,
            flg_status_req_in           => flg_status_req_in,
            flg_status_req_nin          => flg_status_req_nin,
            flg_status_det_in           => flg_status_det_in,
            flg_status_det_nin          => flg_status_det_nin,
            flg_status_plan_in          => flg_status_plan_in,
            flg_status_plan_nin         => flg_status_plan_nin,
            flg_time_in                 => flg_time_in,
            flg_time_nin                => flg_time_nin,
            flg_interv_type_in          => flg_interv_type_in,
            flg_interv_type_nin         => flg_interv_type_nin,
            dt_begin_req_in             => dt_begin_req_in,
            dt_begin_req_nin            => dt_begin_req_nin,
            dt_begin_det_in             => dt_begin_det_in,
            dt_begin_det_nin            => dt_begin_det_nin,
            interval_in                 => interval_in,
            interval_nin                => interval_nin,
            dt_interv_prescription_in   => dt_interv_prescription_in,
            dt_interv_prescription_nin  => dt_interv_prescription_nin,
            dt_plan_in                  => dt_plan_in,
            dt_plan_nin                 => dt_plan_nin,
            id_professional_in          => id_professional_in,
            id_professional_nin         => id_professional_nin,
            flg_notes_in                => flg_notes_in,
            flg_notes_nin               => flg_notes_nin,
            status_str_in               => status_str_in,
            status_str_nin              => status_str_nin,
            status_msg_in               => status_msg_in,
            status_msg_nin              => status_msg_nin,
            status_icon_in              => status_icon_in,
            status_icon_nin             => status_icon_nin,
            status_flg_in               => status_flg_in,
            status_flg_nin              => status_flg_nin,
            id_prof_order_in            => id_prof_order_in,
            id_prof_order_nin           => id_prof_order_nin,
            code_intervention_alias_in  => code_intervention_alias_in,
            code_intervention_alias_nin => code_intervention_alias_nin,
            flg_prty_in                 => flg_prty_in,
            flg_prty_nin                => flg_prty_nin,
            num_take_in                 => num_take_in,
            num_take_nin                => num_take_nin,
            id_episode_origin_in        => id_episode_origin_in,
            id_episode_origin_nin       => id_episode_origin_nin,
            id_visit_in                 => id_visit_in,
            id_visit_nin                => id_visit_nin,
            id_episode_in               => id_episode_in,
            id_episode_nin              => id_episode_nin,
            id_patient_in               => id_patient_in,
            id_patient_nin              => id_patient_nin,
            flg_referral_in             => flg_referral_in,
            flg_referral_nin            => flg_referral_nin,
            dt_interv_presc_det_in      => dt_interv_presc_det_in,
            dt_interv_presc_det_nin     => dt_interv_presc_det_nin,
            dt_dg_last_update_in        => dt_dg_last_update_in,
            dt_dg_last_update_nin       => dt_dg_last_update_nin,
            dt_order_in                 => dt_order_in,
            dt_order_nin                => dt_order_nin,
            create_user_in              => create_user_in,
            create_user_nin             => create_user_nin,
            create_time_in              => create_time_in,
            create_time_nin             => create_time_nin,
            create_institution_in       => create_institution_in,
            create_institution_nin      => create_institution_nin,
            update_user_in              => update_user_in,
            update_user_nin             => update_user_nin,
            update_time_in              => update_time_in,
            update_time_nin             => update_time_nin,
            update_institution_in       => update_institution_in,
            update_institution_nin      => update_institution_nin,
            flg_laterality_in           => flg_laterality_in,
            flg_laterality_nin          => flg_laterality_nin,
            flg_clinical_purpose_in     => flg_clinical_purpose_in,
            flg_clinical_purpose_nin    => flg_clinical_purpose_nin,
            flg_prn_in                  => flg_prn_in,
            flg_prn_nin                 => flg_prn_nin,
            flg_doc_in                  => flg_doc_in,
            flg_doc_nin                 => flg_doc_nin,
            id_interv_codification_in   => id_interv_codification_in,
            id_interv_codification_nin  => id_interv_codification_nin,
            id_order_recurrence_in      => id_order_recurrence_in,
            id_order_recurrence_nin     => id_order_recurrence_nin,
            id_task_dependency_in       => id_task_dependency_in,
            id_task_dependency_nin      => id_task_dependency_nin,
            flg_req_origin_module_in    => flg_req_origin_module_in,
            flg_req_origin_module_nin   => flg_req_origin_module_nin,
            notes_in                    => notes_in,
            notes_nin                   => notes_nin,
            notes_cancel_in             => notes_cancel_in,
            notes_cancel_nin            => notes_cancel_nin,
            id_clinical_purpose_in      => id_clinical_purpose_in,
            id_clinical_purpose_nin     => id_clinical_purpose_nin,
            clinical_purpose_notes_in   => clinical_purpose_notes_in,
            clinical_purpose_notes_nin  => clinical_purpose_notes_nin,
            flg_location_in             => flg_location_in,
            flg_location_nin            => flg_location_nin,
            where_in                    => where_in,
            handle_error_in             => handle_error_in,
            rows_out                    => rows_out);
    END upd;

    --Update/insert columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_interv_presc_det_in     IN procedures_ea.id_interv_presc_det%TYPE,
        id_interv_prescription_in  IN procedures_ea.id_interv_prescription%TYPE DEFAULT NULL,
        id_interv_presc_plan_in    IN procedures_ea.id_interv_presc_plan%TYPE DEFAULT NULL,
        id_intervention_in         IN procedures_ea.id_intervention%TYPE DEFAULT NULL,
        flg_status_intervention_in IN procedures_ea.flg_status_intervention%TYPE DEFAULT NULL,
        flg_status_req_in          IN procedures_ea.flg_status_req%TYPE DEFAULT NULL,
        flg_status_det_in          IN procedures_ea.flg_status_det%TYPE DEFAULT NULL,
        flg_status_plan_in         IN procedures_ea.flg_status_plan%TYPE DEFAULT NULL,
        flg_time_in                IN procedures_ea.flg_time%TYPE DEFAULT NULL,
        flg_interv_type_in         IN procedures_ea.flg_interv_type%TYPE DEFAULT NULL,
        dt_begin_req_in            IN procedures_ea.dt_begin_req%TYPE DEFAULT NULL,
        dt_begin_det_in            IN procedures_ea.dt_begin_det%TYPE DEFAULT NULL,
        interval_in                IN procedures_ea.interval%TYPE DEFAULT NULL,
        dt_interv_prescription_in  IN procedures_ea.dt_interv_prescription%TYPE DEFAULT NULL,
        dt_plan_in                 IN procedures_ea.dt_plan%TYPE DEFAULT NULL,
        id_professional_in         IN procedures_ea.id_professional%TYPE DEFAULT NULL,
        flg_notes_in               IN procedures_ea.flg_notes%TYPE DEFAULT NULL,
        status_str_in              IN procedures_ea.status_str%TYPE DEFAULT NULL,
        status_msg_in              IN procedures_ea.status_msg%TYPE DEFAULT NULL,
        status_icon_in             IN procedures_ea.status_icon%TYPE DEFAULT NULL,
        status_flg_in              IN procedures_ea.status_flg%TYPE DEFAULT NULL,
        id_prof_order_in           IN procedures_ea.id_prof_order%TYPE DEFAULT NULL,
        code_intervention_alias_in IN procedures_ea.code_intervention_alias%TYPE DEFAULT NULL,
        flg_prty_in                IN procedures_ea.flg_prty%TYPE DEFAULT NULL,
        num_take_in                IN procedures_ea.num_take%TYPE DEFAULT NULL,
        id_episode_origin_in       IN procedures_ea.id_episode_origin%TYPE DEFAULT NULL,
        id_visit_in                IN procedures_ea.id_visit%TYPE DEFAULT NULL,
        id_episode_in              IN procedures_ea.id_episode%TYPE DEFAULT NULL,
        id_patient_in              IN procedures_ea.id_patient%TYPE DEFAULT NULL,
        flg_referral_in            IN procedures_ea.flg_referral%TYPE DEFAULT NULL,
        dt_interv_presc_det_in     IN procedures_ea.dt_interv_presc_det%TYPE DEFAULT NULL,
        dt_dg_last_update_in       IN procedures_ea.dt_dg_last_update%TYPE DEFAULT NULL,
        dt_order_in                IN procedures_ea.dt_order%TYPE DEFAULT NULL,
        create_user_in             IN procedures_ea.create_user%TYPE DEFAULT NULL,
        create_time_in             IN procedures_ea.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN procedures_ea.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN procedures_ea.update_user%TYPE DEFAULT NULL,
        update_time_in             IN procedures_ea.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN procedures_ea.update_institution%TYPE DEFAULT NULL,
        flg_laterality_in          IN procedures_ea.flg_laterality%TYPE DEFAULT NULL,
        flg_clinical_purpose_in    IN procedures_ea.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_prn_in                 IN procedures_ea.flg_prn%TYPE DEFAULT NULL,
        flg_doc_in                 IN procedures_ea.flg_doc%TYPE DEFAULT NULL,
        id_interv_codification_in  IN procedures_ea.id_interv_codification%TYPE DEFAULT NULL,
        id_order_recurrence_in     IN procedures_ea.id_order_recurrence%TYPE DEFAULT NULL,
        id_task_dependency_in      IN procedures_ea.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in   IN procedures_ea.flg_req_origin_module%TYPE DEFAULT NULL,
        notes_in                   IN procedures_ea.notes%TYPE DEFAULT NULL,
        notes_cancel_in            IN procedures_ea.notes_cancel%TYPE DEFAULT NULL,
        id_clinical_purpose_in     IN procedures_ea.id_clinical_purpose%TYPE DEFAULT NULL,
        clinical_purpose_notes_in  IN procedures_ea.clinical_purpose_notes%TYPE DEFAULT NULL,
        flg_location_in            IN procedures_ea.flg_location%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := FALSE,
        rows_out                   IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_interv_presc_det_in     => id_interv_presc_det_in,
            id_interv_prescription_in  => id_interv_prescription_in,
            id_interv_presc_plan_in    => id_interv_presc_plan_in,
            id_intervention_in         => id_intervention_in,
            flg_status_intervention_in => flg_status_intervention_in,
            flg_status_req_in          => flg_status_req_in,
            flg_status_det_in          => flg_status_det_in,
            flg_status_plan_in         => flg_status_plan_in,
            flg_time_in                => flg_time_in,
            flg_interv_type_in         => flg_interv_type_in,
            dt_begin_req_in            => dt_begin_req_in,
            dt_begin_det_in            => dt_begin_det_in,
            interval_in                => interval_in,
            dt_interv_prescription_in  => dt_interv_prescription_in,
            dt_plan_in                 => dt_plan_in,
            id_professional_in         => id_professional_in,
            flg_notes_in               => flg_notes_in,
            status_str_in              => status_str_in,
            status_msg_in              => status_msg_in,
            status_icon_in             => status_icon_in,
            status_flg_in              => status_flg_in,
            id_prof_order_in           => id_prof_order_in,
            code_intervention_alias_in => code_intervention_alias_in,
            flg_prty_in                => flg_prty_in,
            num_take_in                => num_take_in,
            id_episode_origin_in       => id_episode_origin_in,
            id_visit_in                => id_visit_in,
            id_episode_in              => id_episode_in,
            id_patient_in              => id_patient_in,
            flg_referral_in            => flg_referral_in,
            dt_interv_presc_det_in     => dt_interv_presc_det_in,
            dt_dg_last_update_in       => dt_dg_last_update_in,
            dt_order_in                => dt_order_in,
            create_user_in             => create_user_in,
            create_time_in             => create_time_in,
            create_institution_in      => create_institution_in,
            update_user_in             => update_user_in,
            update_time_in             => update_time_in,
            update_institution_in      => update_institution_in,
            flg_laterality_in          => flg_laterality_in,
            flg_clinical_purpose_in    => flg_clinical_purpose_in,
            flg_prn_in                 => flg_prn_in,
            flg_doc_in                 => flg_doc_in,
            id_interv_codification_in  => id_interv_codification_in,
            id_order_recurrence_in     => id_order_recurrence_in,
            id_task_dependency_in      => id_task_dependency_in,
            flg_req_origin_module_in   => flg_req_origin_module_in,
            notes_in                   => notes_in,
            notes_cancel_in            => notes_cancel_in,
            id_clinical_purpose_in     => id_clinical_purpose_in,
            clinical_purpose_notes_in  => clinical_purpose_notes_in,
            flg_location_in            => flg_location_in,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
        IF SQL%ROWCOUNT = 0
        THEN
            ins(id_interv_presc_det_in     => id_interv_presc_det_in,
                id_interv_prescription_in  => id_interv_prescription_in,
                id_interv_presc_plan_in    => id_interv_presc_plan_in,
                id_intervention_in         => id_intervention_in,
                flg_status_intervention_in => flg_status_intervention_in,
                flg_status_req_in          => flg_status_req_in,
                flg_status_det_in          => flg_status_det_in,
                flg_status_plan_in         => flg_status_plan_in,
                flg_time_in                => flg_time_in,
                flg_interv_type_in         => flg_interv_type_in,
                dt_begin_req_in            => dt_begin_req_in,
                dt_begin_det_in            => dt_begin_det_in,
                interval_in                => interval_in,
                dt_interv_prescription_in  => dt_interv_prescription_in,
                dt_plan_in                 => dt_plan_in,
                id_professional_in         => id_professional_in,
                flg_notes_in               => flg_notes_in,
                status_str_in              => status_str_in,
                status_msg_in              => status_msg_in,
                status_icon_in             => status_icon_in,
                status_flg_in              => status_flg_in,
                id_prof_order_in           => id_prof_order_in,
                code_intervention_alias_in => code_intervention_alias_in,
                flg_prty_in                => flg_prty_in,
                num_take_in                => num_take_in,
                id_episode_origin_in       => id_episode_origin_in,
                id_visit_in                => id_visit_in,
                id_episode_in              => id_episode_in,
                id_patient_in              => id_patient_in,
                flg_referral_in            => flg_referral_in,
                dt_interv_presc_det_in     => dt_interv_presc_det_in,
                dt_dg_last_update_in       => dt_dg_last_update_in,
                dt_order_in                => dt_order_in,
                create_user_in             => create_user_in,
                create_time_in             => create_time_in,
                create_institution_in      => create_institution_in,
                update_user_in             => update_user_in,
                update_time_in             => update_time_in,
                update_institution_in      => update_institution_in,
                flg_laterality_in          => flg_laterality_in,
                flg_clinical_purpose_in    => flg_clinical_purpose_in,
                flg_prn_in                 => flg_prn_in,
                flg_doc_in                 => flg_doc_in,
                id_interv_codification_in  => id_interv_codification_in,
                id_order_recurrence_in     => id_order_recurrence_in,
                id_task_dependency_in      => id_task_dependency_in,
                flg_req_origin_module_in   => flg_req_origin_module_in,
                notes_in                   => notes_in,
                notes_cancel_in            => notes_cancel_in,
                id_clinical_purpose_in     => id_clinical_purpose_in,
                clinical_purpose_notes_in  => clinical_purpose_notes_in,
                flg_location_in            => flg_location_in,
                handle_error_in            => handle_error_in,
                rows_out                   => rows_out);
        END IF;
    END upd_ins;

    --Update/insert columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_interv_presc_det_in     IN procedures_ea.id_interv_presc_det%TYPE,
        id_interv_prescription_in  IN procedures_ea.id_interv_prescription%TYPE DEFAULT NULL,
        id_interv_presc_plan_in    IN procedures_ea.id_interv_presc_plan%TYPE DEFAULT NULL,
        id_intervention_in         IN procedures_ea.id_intervention%TYPE DEFAULT NULL,
        flg_status_intervention_in IN procedures_ea.flg_status_intervention%TYPE DEFAULT NULL,
        flg_status_req_in          IN procedures_ea.flg_status_req%TYPE DEFAULT NULL,
        flg_status_det_in          IN procedures_ea.flg_status_det%TYPE DEFAULT NULL,
        flg_status_plan_in         IN procedures_ea.flg_status_plan%TYPE DEFAULT NULL,
        flg_time_in                IN procedures_ea.flg_time%TYPE DEFAULT NULL,
        flg_interv_type_in         IN procedures_ea.flg_interv_type%TYPE DEFAULT NULL,
        dt_begin_req_in            IN procedures_ea.dt_begin_req%TYPE DEFAULT NULL,
        dt_begin_det_in            IN procedures_ea.dt_begin_det%TYPE DEFAULT NULL,
        interval_in                IN procedures_ea.interval%TYPE DEFAULT NULL,
        dt_interv_prescription_in  IN procedures_ea.dt_interv_prescription%TYPE DEFAULT NULL,
        dt_plan_in                 IN procedures_ea.dt_plan%TYPE DEFAULT NULL,
        id_professional_in         IN procedures_ea.id_professional%TYPE DEFAULT NULL,
        flg_notes_in               IN procedures_ea.flg_notes%TYPE DEFAULT NULL,
        status_str_in              IN procedures_ea.status_str%TYPE DEFAULT NULL,
        status_msg_in              IN procedures_ea.status_msg%TYPE DEFAULT NULL,
        status_icon_in             IN procedures_ea.status_icon%TYPE DEFAULT NULL,
        status_flg_in              IN procedures_ea.status_flg%TYPE DEFAULT NULL,
        id_prof_order_in           IN procedures_ea.id_prof_order%TYPE DEFAULT NULL,
        code_intervention_alias_in IN procedures_ea.code_intervention_alias%TYPE DEFAULT NULL,
        flg_prty_in                IN procedures_ea.flg_prty%TYPE DEFAULT NULL,
        num_take_in                IN procedures_ea.num_take%TYPE DEFAULT NULL,
        id_episode_origin_in       IN procedures_ea.id_episode_origin%TYPE DEFAULT NULL,
        id_visit_in                IN procedures_ea.id_visit%TYPE DEFAULT NULL,
        id_episode_in              IN procedures_ea.id_episode%TYPE DEFAULT NULL,
        id_patient_in              IN procedures_ea.id_patient%TYPE DEFAULT NULL,
        flg_referral_in            IN procedures_ea.flg_referral%TYPE DEFAULT NULL,
        dt_interv_presc_det_in     IN procedures_ea.dt_interv_presc_det%TYPE DEFAULT NULL,
        dt_dg_last_update_in       IN procedures_ea.dt_dg_last_update%TYPE DEFAULT NULL,
        dt_order_in                IN procedures_ea.dt_order%TYPE DEFAULT NULL,
        create_user_in             IN procedures_ea.create_user%TYPE DEFAULT NULL,
        create_time_in             IN procedures_ea.create_time%TYPE DEFAULT NULL,
        create_institution_in      IN procedures_ea.create_institution%TYPE DEFAULT NULL,
        update_user_in             IN procedures_ea.update_user%TYPE DEFAULT NULL,
        update_time_in             IN procedures_ea.update_time%TYPE DEFAULT NULL,
        update_institution_in      IN procedures_ea.update_institution%TYPE DEFAULT NULL,
        flg_laterality_in          IN procedures_ea.flg_laterality%TYPE DEFAULT NULL,
        flg_clinical_purpose_in    IN procedures_ea.flg_clinical_purpose%TYPE DEFAULT NULL,
        flg_prn_in                 IN procedures_ea.flg_prn%TYPE DEFAULT NULL,
        flg_doc_in                 IN procedures_ea.flg_doc%TYPE DEFAULT NULL,
        id_interv_codification_in  IN procedures_ea.id_interv_codification%TYPE DEFAULT NULL,
        id_order_recurrence_in     IN procedures_ea.id_order_recurrence%TYPE DEFAULT NULL,
        id_task_dependency_in      IN procedures_ea.id_task_dependency%TYPE DEFAULT NULL,
        flg_req_origin_module_in   IN procedures_ea.flg_req_origin_module%TYPE DEFAULT NULL,
        notes_in                   IN procedures_ea.notes%TYPE DEFAULT NULL,
        notes_cancel_in            IN procedures_ea.notes_cancel%TYPE DEFAULT NULL,
        id_clinical_purpose_in     IN procedures_ea.id_clinical_purpose%TYPE DEFAULT NULL,
        clinical_purpose_notes_in  IN procedures_ea.clinical_purpose_notes%TYPE DEFAULT NULL,
        flg_location_in            IN procedures_ea.flg_location%TYPE DEFAULT NULL,
        handle_error_in            IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd_ins(id_interv_presc_det_in,
                id_interv_prescription_in,
                id_interv_presc_plan_in,
                id_intervention_in,
                flg_status_intervention_in,
                flg_status_req_in,
                flg_status_det_in,
                flg_status_plan_in,
                flg_time_in,
                flg_interv_type_in,
                dt_begin_req_in,
                dt_begin_det_in,
                interval_in,
                dt_interv_prescription_in,
                dt_plan_in,
                id_professional_in,
                flg_notes_in,
                status_str_in,
                status_msg_in,
                status_icon_in,
                status_flg_in,
                id_prof_order_in,
                code_intervention_alias_in,
                flg_prty_in,
                num_take_in,
                id_episode_origin_in,
                id_visit_in,
                id_episode_in,
                id_patient_in,
                flg_referral_in,
                dt_interv_presc_det_in,
                dt_dg_last_update_in,
                dt_order_in,
                create_user_in,
                create_time_in,
                create_institution_in,
                update_user_in,
                update_time_in,
                update_institution_in,
                flg_laterality_in,
                flg_clinical_purpose_in,
                flg_prn_in,
                flg_doc_in,
                id_interv_codification_in,
                id_order_recurrence_in,
                id_task_dependency_in,
                flg_req_origin_module_in,
                notes_in,
                notes_cancel_in,
                id_clinical_purpose_in,
                clinical_purpose_notes_in,
                flg_location_in,
                handle_error_in,
                rows_out);
    END upd_ins;

    --Update by record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN procedures_ea%ROWTYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_interv_presc_det_in     => rec_in.id_interv_presc_det,
            id_interv_prescription_in  => rec_in.id_interv_prescription,
            id_interv_presc_plan_in    => rec_in.id_interv_presc_plan,
            id_intervention_in         => rec_in.id_intervention,
            flg_status_intervention_in => rec_in.flg_status_intervention,
            flg_status_req_in          => rec_in.flg_status_req,
            flg_status_det_in          => rec_in.flg_status_det,
            flg_status_plan_in         => rec_in.flg_status_plan,
            flg_time_in                => rec_in.flg_time,
            flg_interv_type_in         => rec_in.flg_interv_type,
            dt_begin_req_in            => rec_in.dt_begin_req,
            dt_begin_det_in            => rec_in.dt_begin_det,
            interval_in                => rec_in.interval,
            dt_interv_prescription_in  => rec_in.dt_interv_prescription,
            dt_plan_in                 => rec_in.dt_plan,
            id_professional_in         => rec_in.id_professional,
            flg_notes_in               => rec_in.flg_notes,
            status_str_in              => rec_in.status_str,
            status_msg_in              => rec_in.status_msg,
            status_icon_in             => rec_in.status_icon,
            status_flg_in              => rec_in.status_flg,
            id_prof_order_in           => rec_in.id_prof_order,
            code_intervention_alias_in => rec_in.code_intervention_alias,
            flg_prty_in                => rec_in.flg_prty,
            num_take_in                => rec_in.num_take,
            id_episode_origin_in       => rec_in.id_episode_origin,
            id_visit_in                => rec_in.id_visit,
            id_episode_in              => rec_in.id_episode,
            id_patient_in              => rec_in.id_patient,
            flg_referral_in            => rec_in.flg_referral,
            dt_interv_presc_det_in     => rec_in.dt_interv_presc_det,
            dt_dg_last_update_in       => rec_in.dt_dg_last_update,
            dt_order_in                => rec_in.dt_order,
            create_user_in             => rec_in.create_user,
            create_time_in             => rec_in.create_time,
            create_institution_in      => rec_in.create_institution,
            update_user_in             => rec_in.update_user,
            update_time_in             => rec_in.update_time,
            update_institution_in      => rec_in.update_institution,
            flg_laterality_in          => rec_in.flg_laterality,
            flg_clinical_purpose_in    => rec_in.flg_clinical_purpose,
            flg_prn_in                 => rec_in.flg_prn,
            flg_doc_in                 => rec_in.flg_doc,
            id_interv_codification_in  => rec_in.id_interv_codification,
            id_order_recurrence_in     => rec_in.id_order_recurrence,
            id_task_dependency_in      => rec_in.id_task_dependency,
            flg_req_origin_module_in   => rec_in.flg_req_origin_module,
            notes_in                   => rec_in.notes,
            notes_cancel_in            => rec_in.notes_cancel,
            id_clinical_purpose_in     => rec_in.id_clinical_purpose,
            clinical_purpose_notes_in  => rec_in.clinical_purpose_notes,
            flg_location_in            => rec_in.flg_location,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END upd;

    --Update by record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN procedures_ea%ROWTYPE,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_interv_presc_det_in     => rec_in.id_interv_presc_det,
            id_interv_prescription_in  => rec_in.id_interv_prescription,
            id_interv_presc_plan_in    => rec_in.id_interv_presc_plan,
            id_intervention_in         => rec_in.id_intervention,
            flg_status_intervention_in => rec_in.flg_status_intervention,
            flg_status_req_in          => rec_in.flg_status_req,
            flg_status_det_in          => rec_in.flg_status_det,
            flg_status_plan_in         => rec_in.flg_status_plan,
            flg_time_in                => rec_in.flg_time,
            flg_interv_type_in         => rec_in.flg_interv_type,
            dt_begin_req_in            => rec_in.dt_begin_req,
            dt_begin_det_in            => rec_in.dt_begin_det,
            interval_in                => rec_in.interval,
            dt_interv_prescription_in  => rec_in.dt_interv_prescription,
            dt_plan_in                 => rec_in.dt_plan,
            id_professional_in         => rec_in.id_professional,
            flg_notes_in               => rec_in.flg_notes,
            status_str_in              => rec_in.status_str,
            status_msg_in              => rec_in.status_msg,
            status_icon_in             => rec_in.status_icon,
            status_flg_in              => rec_in.status_flg,
            id_prof_order_in           => rec_in.id_prof_order,
            code_intervention_alias_in => rec_in.code_intervention_alias,
            flg_prty_in                => rec_in.flg_prty,
            num_take_in                => rec_in.num_take,
            id_episode_origin_in       => rec_in.id_episode_origin,
            id_visit_in                => rec_in.id_visit,
            id_episode_in              => rec_in.id_episode,
            id_patient_in              => rec_in.id_patient,
            flg_referral_in            => rec_in.flg_referral,
            dt_interv_presc_det_in     => rec_in.dt_interv_presc_det,
            dt_dg_last_update_in       => rec_in.dt_dg_last_update,
            dt_order_in                => rec_in.dt_order,
            create_user_in             => rec_in.create_user,
            create_time_in             => rec_in.create_time,
            create_institution_in      => rec_in.create_institution,
            update_user_in             => rec_in.update_user,
            update_time_in             => rec_in.update_time,
            update_institution_in      => rec_in.update_institution,
            flg_laterality_in          => rec_in.flg_laterality,
            flg_clinical_purpose_in    => rec_in.flg_clinical_purpose,
            flg_prn_in                 => rec_in.flg_prn,
            flg_doc_in                 => rec_in.flg_doc,
            id_interv_codification_in  => rec_in.id_interv_codification,
            id_order_recurrence_in     => rec_in.id_order_recurrence,
            id_task_dependency_in      => rec_in.id_task_dependency,
            flg_req_origin_module_in   => rec_in.flg_req_origin_module,
            notes_in                   => rec_in.notes,
            notes_cancel_in            => rec_in.notes_cancel,
            id_clinical_purpose_in     => rec_in.id_clinical_purpose,
            clinical_purpose_notes_in  => rec_in.clinical_purpose_notes,
            flg_location_in            => rec_in.flg_location,
            handle_error_in            => handle_error_in,
            rows_out                   => rows_out);
    END upd;

    --Update with collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN procedures_ea_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := FALSE,
        rows_out          IN OUT table_varchar
    ) IS
        l_id_interv_presc_det     id_interv_presc_det_cc;
        l_id_interv_prescription  id_interv_prescription_cc;
        l_id_interv_presc_plan    id_interv_presc_plan_cc;
        l_id_intervention         id_intervention_cc;
        l_flg_status_intervention flg_status_intervention_cc;
        l_flg_status_req          flg_status_req_cc;
        l_flg_status_det          flg_status_det_cc;
        l_flg_status_plan         flg_status_plan_cc;
        l_flg_time                flg_time_cc;
        l_flg_interv_type         flg_interv_type_cc;
        l_dt_begin_req            dt_begin_req_cc;
        l_dt_begin_det            dt_begin_det_cc;
        l_interval                interval_cc;
        l_dt_interv_prescription  dt_interv_prescription_cc;
        l_dt_plan                 dt_plan_cc;
        l_id_professional         id_professional_cc;
        l_flg_notes               flg_notes_cc;
        l_status_str              status_str_cc;
        l_status_msg              status_msg_cc;
        l_status_icon             status_icon_cc;
        l_status_flg              status_flg_cc;
        l_id_prof_order           id_prof_order_cc;
        l_code_intervention_alias code_intervention_alias_cc;
        l_flg_prty                flg_prty_cc;
        l_num_take                num_take_cc;
        l_id_episode_origin       id_episode_origin_cc;
        l_id_visit                id_visit_cc;
        l_id_episode              id_episode_cc;
        l_id_patient              id_patient_cc;
        l_flg_referral            flg_referral_cc;
        l_dt_interv_presc_det     dt_interv_presc_det_cc;
        l_dt_dg_last_update       dt_dg_last_update_cc;
        l_dt_order                dt_order_cc;
        l_create_user             create_user_cc;
        l_create_time             create_time_cc;
        l_create_institution      create_institution_cc;
        l_update_user             update_user_cc;
        l_update_time             update_time_cc;
        l_update_institution      update_institution_cc;
        l_flg_laterality          flg_laterality_cc;
        l_flg_clinical_purpose    flg_clinical_purpose_cc;
        l_flg_prn                 flg_prn_cc;
        l_flg_doc                 flg_doc_cc;
        l_id_interv_codification  id_interv_codification_cc;
        l_id_order_recurrence     id_order_recurrence_cc;
        l_id_task_dependency      id_task_dependency_cc;
        l_flg_req_origin_module   flg_req_origin_module_cc;
        l_notes                   notes_cc;
        l_notes_cancel            notes_cancel_cc;
        l_id_clinical_purpose     id_clinical_purpose_cc;
        l_clinical_purpose_notes  clinical_purpose_notes_cc;
        l_flg_location            flg_location_cc;
    BEGIN
        FOR i IN col_in.first .. col_in.last
        LOOP
            l_id_interv_presc_det(i) := col_in(i).id_interv_presc_det;
            l_id_interv_prescription(i) := col_in(i).id_interv_prescription;
            l_id_interv_presc_plan(i) := col_in(i).id_interv_presc_plan;
            l_id_intervention(i) := col_in(i).id_intervention;
            l_flg_status_intervention(i) := col_in(i).flg_status_intervention;
            l_flg_status_req(i) := col_in(i).flg_status_req;
            l_flg_status_det(i) := col_in(i).flg_status_det;
            l_flg_status_plan(i) := col_in(i).flg_status_plan;
            l_flg_time(i) := col_in(i).flg_time;
            l_flg_interv_type(i) := col_in(i).flg_interv_type;
            l_dt_begin_req(i) := col_in(i).dt_begin_req;
            l_dt_begin_det(i) := col_in(i).dt_begin_det;
            l_interval(i) := col_in(i).interval;
            l_dt_interv_prescription(i) := col_in(i).dt_interv_prescription;
            l_dt_plan(i) := col_in(i).dt_plan;
            l_id_professional(i) := col_in(i).id_professional;
            l_flg_notes(i) := col_in(i).flg_notes;
            l_status_str(i) := col_in(i).status_str;
            l_status_msg(i) := col_in(i).status_msg;
            l_status_icon(i) := col_in(i).status_icon;
            l_status_flg(i) := col_in(i).status_flg;
            l_id_prof_order(i) := col_in(i).id_prof_order;
            l_code_intervention_alias(i) := col_in(i).code_intervention_alias;
            l_flg_prty(i) := col_in(i).flg_prty;
            l_num_take(i) := col_in(i).num_take;
            l_id_episode_origin(i) := col_in(i).id_episode_origin;
            l_id_visit(i) := col_in(i).id_visit;
            l_id_episode(i) := col_in(i).id_episode;
            l_id_patient(i) := col_in(i).id_patient;
            l_flg_referral(i) := col_in(i).flg_referral;
            l_dt_interv_presc_det(i) := col_in(i).dt_interv_presc_det;
            l_dt_dg_last_update(i) := col_in(i).dt_dg_last_update;
            l_dt_order(i) := col_in(i).dt_order;
            l_create_user(i) := col_in(i).create_user;
            l_create_time(i) := col_in(i).create_time;
            l_create_institution(i) := col_in(i).create_institution;
            l_update_user(i) := col_in(i).update_user;
            l_update_time(i) := col_in(i).update_time;
            l_update_institution(i) := col_in(i).update_institution;
            l_flg_laterality(i) := col_in(i).flg_laterality;
            l_flg_clinical_purpose(i) := col_in(i).flg_clinical_purpose;
            l_flg_prn(i) := col_in(i).flg_prn;
            l_flg_doc(i) := col_in(i).flg_doc;
            l_id_interv_codification(i) := col_in(i).id_interv_codification;
            l_id_order_recurrence(i) := col_in(i).id_order_recurrence;
            l_id_task_dependency(i) := col_in(i).id_task_dependency;
            l_flg_req_origin_module(i) := col_in(i).flg_req_origin_module;
            l_notes(i) := col_in(i).notes;
            l_notes_cancel(i) := col_in(i).notes_cancel;
            l_id_clinical_purpose(i) := col_in(i).id_clinical_purpose;
            l_clinical_purpose_notes(i) := col_in(i).clinical_purpose_notes;
            l_flg_location(i) := col_in(i).flg_location;
        END LOOP;
        IF nvl(ignore_if_null_in, FALSE)
        THEN
            -- Set any columns to their current values
            -- if incoming value is NULL.
            -- Put WHEN clause on column-level triggers!
            FORALL i IN col_in.first .. col_in.last
                UPDATE procedures_ea
                   SET id_interv_prescription  = nvl(l_id_interv_prescription(i), id_interv_prescription),
                       id_interv_presc_plan    = nvl(l_id_interv_presc_plan(i), id_interv_presc_plan),
                       id_intervention         = nvl(l_id_intervention(i), id_intervention),
                       flg_status_intervention = nvl(l_flg_status_intervention(i), flg_status_intervention),
                       flg_status_req          = nvl(l_flg_status_req(i), flg_status_req),
                       flg_status_det          = nvl(l_flg_status_det(i), flg_status_det),
                       flg_status_plan         = nvl(l_flg_status_plan(i), flg_status_plan),
                       flg_time                = nvl(l_flg_time(i), flg_time),
                       flg_interv_type         = nvl(l_flg_interv_type(i), flg_interv_type),
                       dt_begin_req            = nvl(l_dt_begin_req(i), dt_begin_req),
                       dt_begin_det            = nvl(l_dt_begin_det(i), dt_begin_det),
                       INTERVAL                = nvl(l_interval(i), INTERVAL),
                       dt_interv_prescription  = nvl(l_dt_interv_prescription(i), dt_interv_prescription),
                       dt_plan                 = nvl(l_dt_plan(i), dt_plan),
                       id_professional         = nvl(l_id_professional(i), id_professional),
                       flg_notes               = nvl(l_flg_notes(i), flg_notes),
                       status_str              = nvl(l_status_str(i), status_str),
                       status_msg              = nvl(l_status_msg(i), status_msg),
                       status_icon             = nvl(l_status_icon(i), status_icon),
                       status_flg              = nvl(l_status_flg(i), status_flg),
                       id_prof_order           = nvl(l_id_prof_order(i), id_prof_order),
                       code_intervention_alias = nvl(l_code_intervention_alias(i), code_intervention_alias),
                       flg_prty                = nvl(l_flg_prty(i), flg_prty),
                       num_take                = nvl(l_num_take(i), num_take),
                       id_episode_origin       = nvl(l_id_episode_origin(i), id_episode_origin),
                       id_visit                = nvl(l_id_visit(i), id_visit),
                       id_episode              = nvl(l_id_episode(i), id_episode),
                       id_patient              = nvl(l_id_patient(i), id_patient),
                       flg_referral            = nvl(l_flg_referral(i), flg_referral),
                       dt_interv_presc_det     = nvl(l_dt_interv_presc_det(i), dt_interv_presc_det),
                       dt_dg_last_update       = nvl(l_dt_dg_last_update(i), dt_dg_last_update),
                       dt_order                = nvl(l_dt_order(i), dt_order),
                       create_user             = nvl(l_create_user(i), create_user),
                       create_time             = nvl(l_create_time(i), create_time),
                       create_institution      = nvl(l_create_institution(i), create_institution),
                       update_user             = nvl(l_update_user(i), update_user),
                       update_time             = nvl(l_update_time(i), update_time),
                       update_institution      = nvl(l_update_institution(i), update_institution),
                       flg_laterality          = nvl(l_flg_laterality(i), flg_laterality),
                       flg_clinical_purpose    = nvl(l_flg_clinical_purpose(i), flg_clinical_purpose),
                       flg_prn                 = nvl(l_flg_prn(i), flg_prn),
                       flg_doc                 = nvl(l_flg_doc(i), flg_doc),
                       id_interv_codification  = nvl(l_id_interv_codification(i), id_interv_codification),
                       id_order_recurrence     = nvl(l_id_order_recurrence(i), id_order_recurrence),
                       id_task_dependency      = nvl(l_id_task_dependency(i), id_task_dependency),
                       flg_req_origin_module   = nvl(l_flg_req_origin_module(i), flg_req_origin_module),
                       notes                   = nvl(l_notes(i), notes),
                       notes_cancel            = nvl(l_notes_cancel(i), notes_cancel),
                       id_clinical_purpose     = nvl(l_id_clinical_purpose(i), id_clinical_purpose),
                       clinical_purpose_notes  = nvl(l_clinical_purpose_notes(i), clinical_purpose_notes),
                       flg_location            = nvl(l_flg_location(i), flg_location)
                 WHERE id_interv_presc_det = l_id_interv_presc_det(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        ELSE
            FORALL i IN col_in.first .. col_in.last
                UPDATE procedures_ea
                   SET id_interv_prescription  = l_id_interv_prescription(i),
                       id_interv_presc_plan    = l_id_interv_presc_plan(i),
                       id_intervention         = l_id_intervention(i),
                       flg_status_intervention = l_flg_status_intervention(i),
                       flg_status_req          = l_flg_status_req(i),
                       flg_status_det          = l_flg_status_det(i),
                       flg_status_plan         = l_flg_status_plan(i),
                       flg_time                = l_flg_time(i),
                       flg_interv_type         = l_flg_interv_type(i),
                       dt_begin_req            = l_dt_begin_req(i),
                       dt_begin_det            = l_dt_begin_det(i),
                       INTERVAL                = l_interval(i),
                       dt_interv_prescription  = l_dt_interv_prescription(i),
                       dt_plan                 = l_dt_plan(i),
                       id_professional         = l_id_professional(i),
                       flg_notes               = l_flg_notes(i),
                       status_str              = l_status_str(i),
                       status_msg              = l_status_msg(i),
                       status_icon             = l_status_icon(i),
                       status_flg              = l_status_flg(i),
                       id_prof_order           = l_id_prof_order(i),
                       code_intervention_alias = l_code_intervention_alias(i),
                       flg_prty                = l_flg_prty(i),
                       num_take                = l_num_take(i),
                       id_episode_origin       = l_id_episode_origin(i),
                       id_visit                = l_id_visit(i),
                       id_episode              = l_id_episode(i),
                       id_patient              = l_id_patient(i),
                       flg_referral            = l_flg_referral(i),
                       dt_interv_presc_det     = l_dt_interv_presc_det(i),
                       dt_dg_last_update       = l_dt_dg_last_update(i),
                       dt_order                = l_dt_order(i),
                       create_user             = l_create_user(i),
                       create_time             = l_create_time(i),
                       create_institution      = l_create_institution(i),
                       update_user             = l_update_user(i),
                       update_time             = l_update_time(i),
                       update_institution      = l_update_institution(i),
                       flg_laterality          = l_flg_laterality(i),
                       flg_clinical_purpose    = l_flg_clinical_purpose(i),
                       flg_prn                 = l_flg_prn(i),
                       flg_doc                 = l_flg_doc(i),
                       id_interv_codification  = l_id_interv_codification(i),
                       id_order_recurrence     = l_id_order_recurrence(i),
                       id_task_dependency      = l_id_task_dependency(i),
                       flg_req_origin_module   = l_flg_req_origin_module(i),
                       notes                   = l_notes(i),
                       notes_cancel            = l_notes_cancel(i),
                       id_clinical_purpose     = l_id_clinical_purpose(i),
                       clinical_purpose_notes  = l_clinical_purpose_notes(i),
                       flg_location            = l_flg_location(i)
                 WHERE id_interv_presc_det = l_id_interv_presc_det(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update with collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN procedures_ea_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(col_in, ignore_if_null_in, handle_error_in, rows_out);
    END upd;

    --Dynamic update string
    FUNCTION dynupdstr
    (
        colname_in IN all_tab_columns.column_name%TYPE,
        where_in   IN VARCHAR2 := NULL
    ) RETURN VARCHAR2 IS
    BEGIN
        RETURN 'BEGIN UPDATE procedures_ea
SET ' || colname_in || ' = :value
 WHERE ' || nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;';
    END dynupdstr;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (with rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := FALSE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN UPDATE procedures_ea
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    END increment_onecol;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (without rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        EXECUTE IMMEDIATE 'UPDATE procedures_ea
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1');
    END increment_onecol;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_interv_presc_det_in IN procedures_ea.id_interv_presc_det%TYPE,
        handle_error_in        IN BOOLEAN := FALSE,
        rows_out               OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM procedures_ea
         WHERE id_interv_presc_det = id_interv_presc_det_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_interv_presc_det_in IN procedures_ea.id_interv_presc_det%TYPE,
        handle_error_in        IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del(id_interv_presc_det_in => id_interv_presc_det_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del;

    -- Delete all rows for this PEA_VIS_FK foreign key value
    PROCEDURE del_pea_vis_fk
    (
        id_visit_in     IN procedures_ea.id_visit%TYPE,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM procedures_ea
         WHERE id_visit = id_visit_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_pea_vis_fk;

    -- Delete all rows for this PEA_VIS_FK foreign key value
    PROCEDURE del_pea_vis_fk
    (
        id_visit_in     IN procedures_ea.id_visit%TYPE,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_pea_vis_fk(id_visit_in => id_visit_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_pea_vis_fk;

    -- Deletions using dynamic SQL
    FUNCTION dyndelstr(where_in IN VARCHAR2) RETURN VARCHAR2 IS
    BEGIN
        IF where_in IS NULL
        THEN
            RETURN 'DELETE FROM procedures_ea';
        ELSE
            RETURN 'DELETE FROM procedures_ea WHERE ' || where_in;
        END IF;
    END dyndelstr;
    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := FALSE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyndelstr(where_clause_in) ||
                          ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := FALSE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyndelstr(where_clause_in);
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(procedures_ea_inout IN OUT procedures_ea%ROWTYPE) IS
    BEGIN
        procedures_ea_inout.id_interv_presc_det     := NULL;
        procedures_ea_inout.id_interv_prescription  := NULL;
        procedures_ea_inout.id_interv_presc_plan    := NULL;
        procedures_ea_inout.id_intervention         := NULL;
        procedures_ea_inout.flg_status_intervention := NULL;
        procedures_ea_inout.flg_status_req          := NULL;
        procedures_ea_inout.flg_status_det          := NULL;
        procedures_ea_inout.flg_status_plan         := NULL;
        procedures_ea_inout.flg_time                := NULL;
        procedures_ea_inout.flg_interv_type         := NULL;
        procedures_ea_inout.dt_begin_req            := NULL;
        procedures_ea_inout.dt_begin_det            := NULL;
        procedures_ea_inout.interval                := NULL;
        procedures_ea_inout.dt_interv_prescription  := NULL;
        procedures_ea_inout.dt_plan                 := NULL;
        procedures_ea_inout.id_professional         := NULL;
        procedures_ea_inout.flg_notes               := NULL;
        procedures_ea_inout.status_str              := NULL;
        procedures_ea_inout.status_msg              := NULL;
        procedures_ea_inout.status_icon             := NULL;
        procedures_ea_inout.status_flg              := NULL;
        procedures_ea_inout.id_prof_order           := NULL;
        procedures_ea_inout.code_intervention_alias := NULL;
        procedures_ea_inout.flg_prty                := NULL;
        procedures_ea_inout.num_take                := NULL;
        procedures_ea_inout.id_episode_origin       := NULL;
        procedures_ea_inout.id_visit                := NULL;
        procedures_ea_inout.id_episode              := NULL;
        procedures_ea_inout.id_patient              := NULL;
        procedures_ea_inout.flg_referral            := NULL;
        procedures_ea_inout.dt_interv_presc_det     := NULL;
        procedures_ea_inout.dt_dg_last_update       := NULL;
        procedures_ea_inout.dt_order                := NULL;
        procedures_ea_inout.create_user             := NULL;
        procedures_ea_inout.create_time             := NULL;
        procedures_ea_inout.create_institution      := NULL;
        procedures_ea_inout.update_user             := NULL;
        procedures_ea_inout.update_time             := NULL;
        procedures_ea_inout.update_institution      := NULL;
        procedures_ea_inout.flg_laterality          := NULL;
        procedures_ea_inout.flg_clinical_purpose    := NULL;
        procedures_ea_inout.flg_prn                 := NULL;
        procedures_ea_inout.flg_doc                 := NULL;
        procedures_ea_inout.id_interv_codification  := NULL;
        procedures_ea_inout.id_order_recurrence     := NULL;
        procedures_ea_inout.id_task_dependency      := NULL;
        procedures_ea_inout.flg_req_origin_module   := NULL;
        procedures_ea_inout.notes                   := NULL;
        procedures_ea_inout.notes_cancel            := NULL;
        procedures_ea_inout.id_clinical_purpose     := NULL;
        procedures_ea_inout.clinical_purpose_notes  := NULL;
        procedures_ea_inout.flg_location            := NULL;
    END initrec;

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN procedures_ea%ROWTYPE IS
        l_procedures_ea procedures_ea%ROWTYPE;
    BEGIN
        RETURN l_procedures_ea;
    END initrec;

    --get data from rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN procedures_ea_tc IS
        data procedures_ea_tc;
    BEGIN
        SELECT *
          BULK COLLECT
          INTO data
          FROM procedures_ea
         WHERE ROWID IN (SELECT /*+ OPT_ESTIMATE(TABLE t ROWS=1) */
                          *
                           FROM TABLE(rows_in) t);
        RETURN data;
    END get_data_rowid;

    --get data from rowid (pragma autonomous transacion)
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN procedures_ea_tc IS
        data procedures_ea_tc;
        PRAGMA AUTONOMOUS_TRANSACTION;
    BEGIN
        data := get_data_rowid(rows_in);
        COMMIT;
        RETURN data;
    
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'get_data_rowid_pat');
            ROLLBACK;
        
    END get_data_rowid_pat;

BEGIN
    NULL;
END ts_procedures_ea;
/
