/*-- Last Change Revision: $Rev: 2027960 $*/
/*-- Last Change by: $Author: mario.fernandes $*/
/*-- Date of last change: $Date: 2022-08-02 18:43:48 +0100 (ter, 02 ago 2022) $*/
CREATE OR REPLACE PACKAGE BODY ts_blood_product_execution
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2021-03-12 14:21:50
| Created By: ALERT
*/
 IS

    e_null_column_value EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_null_column_value, -1400);

    e_existing_fky_reference EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_existing_fky_reference, -2266);

    e_check_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_check_constraint_failure, -2290);

    e_no_parent_key EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_no_parent_key, -2291);

    e_child_record_found EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_child_record_found, -2292);

    e_forall_error EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_forall_error, -24381);

    -- Defined for backward compatibilty.
    e_integ_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_integ_constraint_failure, -2291);

    FUNCTION next_key(sequence_in IN VARCHAR2 := NULL) RETURN blood_product_execution.id_blood_product_execution%TYPE IS
        retval blood_product_execution.id_blood_product_execution%TYPE;
    BEGIN
        IF sequence_in IS NULL
        THEN
            retval := seq_blood_product_execution.nextval;
        ELSE
            EXECUTE IMMEDIATE 'SELECT ' || sequence_in || '.NEXTVAL FROM dual'
                INTO retval;
        END IF;
        RETURN retval;
    END next_key;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_blood_product_det_in  IN blood_product_execution.id_blood_product_det%TYPE DEFAULT NULL,
        action_in                IN blood_product_execution.action%TYPE DEFAULT NULL,
        id_action_reason_in      IN blood_product_execution.id_action_reason%TYPE DEFAULT NULL,
        notes_reason_in          IN blood_product_execution.notes_reason%TYPE DEFAULT NULL,
        id_prof_performed_in     IN blood_product_execution.id_prof_performed%TYPE DEFAULT NULL,
        dt_execution_in          IN blood_product_execution.dt_execution%TYPE DEFAULT NULL,
        dt_begin_in              IN blood_product_execution.dt_begin%TYPE DEFAULT NULL,
        duration_in              IN blood_product_execution.duration%TYPE DEFAULT NULL,
        id_unit_mea_duration_in  IN blood_product_execution.id_unit_mea_duration%TYPE DEFAULT NULL,
        dt_end_in                IN blood_product_execution.dt_end%TYPE DEFAULT NULL,
        description_in           IN blood_product_execution.description%TYPE DEFAULT NULL,
        exec_number_in           IN blood_product_execution.exec_number%TYPE DEFAULT NULL,
        create_user_in           IN blood_product_execution.create_user%TYPE DEFAULT NULL,
        create_time_in           IN blood_product_execution.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN blood_product_execution.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN blood_product_execution.update_user%TYPE DEFAULT NULL,
        update_time_in           IN blood_product_execution.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN blood_product_execution.update_institution%TYPE DEFAULT NULL,
        id_epis_documentation_in IN blood_product_execution.id_epis_documentation%TYPE DEFAULT NULL,
        id_prof_match_in         IN blood_product_execution.id_prof_match%TYPE DEFAULT NULL,
        dt_match_tstz_in         IN blood_product_execution.dt_match_tstz%TYPE DEFAULT NULL,
        id_professional_in       IN blood_product_execution.id_professional%TYPE DEFAULT NULL,
        dt_bp_execution_tstz_in  IN blood_product_execution.dt_bp_execution_tstz%TYPE DEFAULT NULL,
        flg_compatibility_in     IN blood_product_execution.flg_compatibility%TYPE DEFAULT NULL,
        notes_compatibility_in   IN blood_product_execution.notes_compatibility%TYPE DEFAULT NULL,
        flg_condition_in         IN blood_product_execution.flg_condition%TYPE DEFAULT NULL,
        flg_lab_mother_in        IN blood_product_execution.flg_lab_mother%TYPE DEFAULT NULL,
        id_analysis_req_det_in   IN blood_product_execution.id_analysis_req_det%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_pky blood_product_execution.id_blood_product_execution%TYPE := next_key;
    BEGIN
        ins(id_blood_product_execution_in => l_pky,
            id_blood_product_det_in       => id_blood_product_det_in,
            action_in                     => action_in,
            id_action_reason_in           => id_action_reason_in,
            notes_reason_in               => notes_reason_in,
            id_prof_performed_in          => id_prof_performed_in,
            dt_execution_in               => dt_execution_in,
            dt_begin_in                   => dt_begin_in,
            duration_in                   => duration_in,
            id_unit_mea_duration_in       => id_unit_mea_duration_in,
            dt_end_in                     => dt_end_in,
            description_in                => description_in,
            exec_number_in                => exec_number_in,
            create_user_in                => create_user_in,
            create_time_in                => create_time_in,
            create_institution_in         => create_institution_in,
            update_user_in                => update_user_in,
            update_time_in                => update_time_in,
            update_institution_in         => update_institution_in,
            id_epis_documentation_in      => id_epis_documentation_in,
            id_prof_match_in              => id_prof_match_in,
            dt_match_tstz_in              => dt_match_tstz_in,
            id_professional_in            => id_professional_in,
            dt_bp_execution_tstz_in       => dt_bp_execution_tstz_in,
            flg_compatibility_in          => flg_compatibility_in,
            notes_compatibility_in        => notes_compatibility_in,
            flg_condition_in              => flg_condition_in,
            flg_lab_mother_in             => flg_lab_mother_in,
            id_analysis_req_det_in        => id_analysis_req_det_in,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
    END ins;

    -- Insert one row, generating hidden primary key using a sequence
    PROCEDURE ins
    (
        id_blood_product_det_in  IN blood_product_execution.id_blood_product_det%TYPE DEFAULT NULL,
        action_in                IN blood_product_execution.action%TYPE DEFAULT NULL,
        id_action_reason_in      IN blood_product_execution.id_action_reason%TYPE DEFAULT NULL,
        notes_reason_in          IN blood_product_execution.notes_reason%TYPE DEFAULT NULL,
        id_prof_performed_in     IN blood_product_execution.id_prof_performed%TYPE DEFAULT NULL,
        dt_execution_in          IN blood_product_execution.dt_execution%TYPE DEFAULT NULL,
        dt_begin_in              IN blood_product_execution.dt_begin%TYPE DEFAULT NULL,
        duration_in              IN blood_product_execution.duration%TYPE DEFAULT NULL,
        id_unit_mea_duration_in  IN blood_product_execution.id_unit_mea_duration%TYPE DEFAULT NULL,
        dt_end_in                IN blood_product_execution.dt_end%TYPE DEFAULT NULL,
        description_in           IN blood_product_execution.description%TYPE DEFAULT NULL,
        exec_number_in           IN blood_product_execution.exec_number%TYPE DEFAULT NULL,
        create_user_in           IN blood_product_execution.create_user%TYPE DEFAULT NULL,
        create_time_in           IN blood_product_execution.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN blood_product_execution.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN blood_product_execution.update_user%TYPE DEFAULT NULL,
        update_time_in           IN blood_product_execution.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN blood_product_execution.update_institution%TYPE DEFAULT NULL,
        id_epis_documentation_in IN blood_product_execution.id_epis_documentation%TYPE DEFAULT NULL,
        id_prof_match_in         IN blood_product_execution.id_prof_match%TYPE DEFAULT NULL,
        dt_match_tstz_in         IN blood_product_execution.dt_match_tstz%TYPE DEFAULT NULL,
        id_professional_in       IN blood_product_execution.id_professional%TYPE DEFAULT NULL,
        dt_bp_execution_tstz_in  IN blood_product_execution.dt_bp_execution_tstz%TYPE DEFAULT NULL,
        flg_compatibility_in     IN blood_product_execution.flg_compatibility%TYPE DEFAULT NULL,
        notes_compatibility_in   IN blood_product_execution.notes_compatibility%TYPE DEFAULT NULL,
        flg_condition_in         IN blood_product_execution.flg_condition%TYPE DEFAULT NULL,
        flg_lab_mother_in        IN blood_product_execution.flg_lab_mother%TYPE DEFAULT NULL,
        id_analysis_req_det_in   IN blood_product_execution.id_analysis_req_det%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_blood_product_det_in  => id_blood_product_det_in,
            action_in                => action_in,
            id_action_reason_in      => id_action_reason_in,
            notes_reason_in          => notes_reason_in,
            id_prof_performed_in     => id_prof_performed_in,
            dt_execution_in          => dt_execution_in,
            dt_begin_in              => dt_begin_in,
            duration_in              => duration_in,
            id_unit_mea_duration_in  => id_unit_mea_duration_in,
            dt_end_in                => dt_end_in,
            description_in           => description_in,
            exec_number_in           => exec_number_in,
            create_user_in           => create_user_in,
            create_time_in           => create_time_in,
            create_institution_in    => create_institution_in,
            update_user_in           => update_user_in,
            update_time_in           => update_time_in,
            update_institution_in    => update_institution_in,
            id_epis_documentation_in => id_epis_documentation_in,
            id_prof_match_in         => id_prof_match_in,
            dt_match_tstz_in         => dt_match_tstz_in,
            id_professional_in       => id_professional_in,
            dt_bp_execution_tstz_in  => dt_bp_execution_tstz_in,
            flg_compatibility_in     => flg_compatibility_in,
            notes_compatibility_in   => notes_compatibility_in,
            flg_condition_in         => flg_condition_in,
            flg_lab_mother_in        => flg_lab_mother_in,
            id_analysis_req_det_in   => id_analysis_req_det_in,
            handle_error_in          => handle_error_in,
            rows_out                 => rows_out);
    END ins;

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_blood_product_det_in        IN blood_product_execution.id_blood_product_det%TYPE DEFAULT NULL,
        action_in                      IN blood_product_execution.action%TYPE DEFAULT NULL,
        id_action_reason_in            IN blood_product_execution.id_action_reason%TYPE DEFAULT NULL,
        notes_reason_in                IN blood_product_execution.notes_reason%TYPE DEFAULT NULL,
        id_prof_performed_in           IN blood_product_execution.id_prof_performed%TYPE DEFAULT NULL,
        dt_execution_in                IN blood_product_execution.dt_execution%TYPE DEFAULT NULL,
        dt_begin_in                    IN blood_product_execution.dt_begin%TYPE DEFAULT NULL,
        duration_in                    IN blood_product_execution.duration%TYPE DEFAULT NULL,
        id_unit_mea_duration_in        IN blood_product_execution.id_unit_mea_duration%TYPE DEFAULT NULL,
        dt_end_in                      IN blood_product_execution.dt_end%TYPE DEFAULT NULL,
        description_in                 IN blood_product_execution.description%TYPE DEFAULT NULL,
        exec_number_in                 IN blood_product_execution.exec_number%TYPE DEFAULT NULL,
        create_user_in                 IN blood_product_execution.create_user%TYPE DEFAULT NULL,
        create_time_in                 IN blood_product_execution.create_time%TYPE DEFAULT NULL,
        create_institution_in          IN blood_product_execution.create_institution%TYPE DEFAULT NULL,
        update_user_in                 IN blood_product_execution.update_user%TYPE DEFAULT NULL,
        update_time_in                 IN blood_product_execution.update_time%TYPE DEFAULT NULL,
        update_institution_in          IN blood_product_execution.update_institution%TYPE DEFAULT NULL,
        id_epis_documentation_in       IN blood_product_execution.id_epis_documentation%TYPE DEFAULT NULL,
        id_prof_match_in               IN blood_product_execution.id_prof_match%TYPE DEFAULT NULL,
        dt_match_tstz_in               IN blood_product_execution.dt_match_tstz%TYPE DEFAULT NULL,
        id_professional_in             IN blood_product_execution.id_professional%TYPE DEFAULT NULL,
        dt_bp_execution_tstz_in        IN blood_product_execution.dt_bp_execution_tstz%TYPE DEFAULT NULL,
        flg_compatibility_in           IN blood_product_execution.flg_compatibility%TYPE DEFAULT NULL,
        notes_compatibility_in         IN blood_product_execution.notes_compatibility%TYPE DEFAULT NULL,
        flg_condition_in               IN blood_product_execution.flg_condition%TYPE DEFAULT NULL,
        flg_lab_mother_in              IN blood_product_execution.flg_lab_mother%TYPE DEFAULT NULL,
        id_analysis_req_det_in         IN blood_product_execution.id_analysis_req_det%TYPE DEFAULT NULL,
        id_blood_product_execution_out IN OUT blood_product_execution.id_blood_product_execution%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_pky blood_product_execution.id_blood_product_execution%TYPE := next_key;
    BEGIN
        ins(id_blood_product_execution_in => l_pky,
            id_blood_product_det_in       => id_blood_product_det_in,
            action_in                     => action_in,
            id_action_reason_in           => id_action_reason_in,
            notes_reason_in               => notes_reason_in,
            id_prof_performed_in          => id_prof_performed_in,
            dt_execution_in               => dt_execution_in,
            dt_begin_in                   => dt_begin_in,
            duration_in                   => duration_in,
            id_unit_mea_duration_in       => id_unit_mea_duration_in,
            dt_end_in                     => dt_end_in,
            description_in                => description_in,
            exec_number_in                => exec_number_in,
            create_user_in                => create_user_in,
            create_time_in                => create_time_in,
            create_institution_in         => create_institution_in,
            update_user_in                => update_user_in,
            update_time_in                => update_time_in,
            update_institution_in         => update_institution_in,
            id_epis_documentation_in      => id_epis_documentation_in,
            id_prof_match_in              => id_prof_match_in,
            dt_match_tstz_in              => dt_match_tstz_in,
            id_professional_in            => id_professional_in,
            dt_bp_execution_tstz_in       => dt_bp_execution_tstz_in,
            flg_compatibility_in          => flg_compatibility_in,
            notes_compatibility_in        => notes_compatibility_in,
            flg_condition_in              => flg_condition_in,
            flg_lab_mother_in             => flg_lab_mother_in,
            id_analysis_req_det_in        => id_analysis_req_det_in,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
        id_blood_product_execution_out := l_pky;
    END ins;

    -- Insert one row, returning primary key generated by sequence
    PROCEDURE ins
    (
        id_blood_product_det_in        IN blood_product_execution.id_blood_product_det%TYPE DEFAULT NULL,
        action_in                      IN blood_product_execution.action%TYPE DEFAULT NULL,
        id_action_reason_in            IN blood_product_execution.id_action_reason%TYPE DEFAULT NULL,
        notes_reason_in                IN blood_product_execution.notes_reason%TYPE DEFAULT NULL,
        id_prof_performed_in           IN blood_product_execution.id_prof_performed%TYPE DEFAULT NULL,
        dt_execution_in                IN blood_product_execution.dt_execution%TYPE DEFAULT NULL,
        dt_begin_in                    IN blood_product_execution.dt_begin%TYPE DEFAULT NULL,
        duration_in                    IN blood_product_execution.duration%TYPE DEFAULT NULL,
        id_unit_mea_duration_in        IN blood_product_execution.id_unit_mea_duration%TYPE DEFAULT NULL,
        dt_end_in                      IN blood_product_execution.dt_end%TYPE DEFAULT NULL,
        description_in                 IN blood_product_execution.description%TYPE DEFAULT NULL,
        exec_number_in                 IN blood_product_execution.exec_number%TYPE DEFAULT NULL,
        create_user_in                 IN blood_product_execution.create_user%TYPE DEFAULT NULL,
        create_time_in                 IN blood_product_execution.create_time%TYPE DEFAULT NULL,
        create_institution_in          IN blood_product_execution.create_institution%TYPE DEFAULT NULL,
        update_user_in                 IN blood_product_execution.update_user%TYPE DEFAULT NULL,
        update_time_in                 IN blood_product_execution.update_time%TYPE DEFAULT NULL,
        update_institution_in          IN blood_product_execution.update_institution%TYPE DEFAULT NULL,
        id_epis_documentation_in       IN blood_product_execution.id_epis_documentation%TYPE DEFAULT NULL,
        id_prof_match_in               IN blood_product_execution.id_prof_match%TYPE DEFAULT NULL,
        dt_match_tstz_in               IN blood_product_execution.dt_match_tstz%TYPE DEFAULT NULL,
        id_professional_in             IN blood_product_execution.id_professional%TYPE DEFAULT NULL,
        dt_bp_execution_tstz_in        IN blood_product_execution.dt_bp_execution_tstz%TYPE DEFAULT NULL,
        flg_compatibility_in           IN blood_product_execution.flg_compatibility%TYPE DEFAULT NULL,
        notes_compatibility_in         IN blood_product_execution.notes_compatibility%TYPE DEFAULT NULL,
        flg_condition_in               IN blood_product_execution.flg_condition%TYPE DEFAULT NULL,
        flg_lab_mother_in              IN blood_product_execution.flg_lab_mother%TYPE DEFAULT NULL,
        id_analysis_req_det_in         IN blood_product_execution.id_analysis_req_det%TYPE DEFAULT NULL,
        id_blood_product_execution_out IN OUT blood_product_execution.id_blood_product_execution%TYPE,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_blood_product_det_in        => id_blood_product_det_in,
            action_in                      => action_in,
            id_action_reason_in            => id_action_reason_in,
            notes_reason_in                => notes_reason_in,
            id_prof_performed_in           => id_prof_performed_in,
            dt_execution_in                => dt_execution_in,
            dt_begin_in                    => dt_begin_in,
            duration_in                    => duration_in,
            id_unit_mea_duration_in        => id_unit_mea_duration_in,
            dt_end_in                      => dt_end_in,
            description_in                 => description_in,
            exec_number_in                 => exec_number_in,
            create_user_in                 => create_user_in,
            create_time_in                 => create_time_in,
            create_institution_in          => create_institution_in,
            update_user_in                 => update_user_in,
            update_time_in                 => update_time_in,
            update_institution_in          => update_institution_in,
            id_epis_documentation_in       => id_epis_documentation_in,
            id_prof_match_in               => id_prof_match_in,
            dt_match_tstz_in               => dt_match_tstz_in,
            id_professional_in             => id_professional_in,
            dt_bp_execution_tstz_in        => dt_bp_execution_tstz_in,
            flg_compatibility_in           => flg_compatibility_in,
            notes_compatibility_in         => notes_compatibility_in,
            flg_condition_in               => flg_condition_in,
            flg_lab_mother_in              => flg_lab_mother_in,
            id_analysis_req_det_in         => id_analysis_req_det_in,
            id_blood_product_execution_out => id_blood_product_execution_out,
            handle_error_in                => handle_error_in,
            rows_out                       => rows_out);
    END ins;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_blood_product_det_in  IN blood_product_execution.id_blood_product_det%TYPE DEFAULT NULL,
        action_in                IN blood_product_execution.action%TYPE DEFAULT NULL,
        id_action_reason_in      IN blood_product_execution.id_action_reason%TYPE DEFAULT NULL,
        notes_reason_in          IN blood_product_execution.notes_reason%TYPE DEFAULT NULL,
        id_prof_performed_in     IN blood_product_execution.id_prof_performed%TYPE DEFAULT NULL,
        dt_execution_in          IN blood_product_execution.dt_execution%TYPE DEFAULT NULL,
        dt_begin_in              IN blood_product_execution.dt_begin%TYPE DEFAULT NULL,
        duration_in              IN blood_product_execution.duration%TYPE DEFAULT NULL,
        id_unit_mea_duration_in  IN blood_product_execution.id_unit_mea_duration%TYPE DEFAULT NULL,
        dt_end_in                IN blood_product_execution.dt_end%TYPE DEFAULT NULL,
        description_in           IN blood_product_execution.description%TYPE DEFAULT NULL,
        exec_number_in           IN blood_product_execution.exec_number%TYPE DEFAULT NULL,
        create_user_in           IN blood_product_execution.create_user%TYPE DEFAULT NULL,
        create_time_in           IN blood_product_execution.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN blood_product_execution.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN blood_product_execution.update_user%TYPE DEFAULT NULL,
        update_time_in           IN blood_product_execution.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN blood_product_execution.update_institution%TYPE DEFAULT NULL,
        id_epis_documentation_in IN blood_product_execution.id_epis_documentation%TYPE DEFAULT NULL,
        id_prof_match_in         IN blood_product_execution.id_prof_match%TYPE DEFAULT NULL,
        dt_match_tstz_in         IN blood_product_execution.dt_match_tstz%TYPE DEFAULT NULL,
        id_professional_in       IN blood_product_execution.id_professional%TYPE DEFAULT NULL,
        dt_bp_execution_tstz_in  IN blood_product_execution.dt_bp_execution_tstz%TYPE DEFAULT NULL,
        flg_compatibility_in     IN blood_product_execution.flg_compatibility%TYPE DEFAULT NULL,
        notes_compatibility_in   IN blood_product_execution.notes_compatibility%TYPE DEFAULT NULL,
        flg_condition_in         IN blood_product_execution.flg_condition%TYPE DEFAULT NULL,
        flg_lab_mother_in        IN blood_product_execution.flg_lab_mother%TYPE DEFAULT NULL,
        id_analysis_req_det_in   IN blood_product_execution.id_analysis_req_det%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) RETURN blood_product_execution.id_blood_product_execution%TYPE IS
        l_pky blood_product_execution.id_blood_product_execution%TYPE := next_key;
    BEGIN
        ins(id_blood_product_execution_in => l_pky,
            id_blood_product_det_in       => id_blood_product_det_in,
            action_in                     => action_in,
            id_action_reason_in           => id_action_reason_in,
            notes_reason_in               => notes_reason_in,
            id_prof_performed_in          => id_prof_performed_in,
            dt_execution_in               => dt_execution_in,
            dt_begin_in                   => dt_begin_in,
            duration_in                   => duration_in,
            id_unit_mea_duration_in       => id_unit_mea_duration_in,
            dt_end_in                     => dt_end_in,
            description_in                => description_in,
            exec_number_in                => exec_number_in,
            create_user_in                => create_user_in,
            create_time_in                => create_time_in,
            create_institution_in         => create_institution_in,
            update_user_in                => update_user_in,
            update_time_in                => update_time_in,
            update_institution_in         => update_institution_in,
            id_epis_documentation_in      => id_epis_documentation_in,
            id_prof_match_in              => id_prof_match_in,
            dt_match_tstz_in              => dt_match_tstz_in,
            id_professional_in            => id_professional_in,
            dt_bp_execution_tstz_in       => dt_bp_execution_tstz_in,
            flg_compatibility_in          => flg_compatibility_in,
            notes_compatibility_in        => notes_compatibility_in,
            flg_condition_in              => flg_condition_in,
            flg_lab_mother_in             => flg_lab_mother_in,
            id_analysis_req_det_in        => id_analysis_req_det_in,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
        RETURN l_pky;
    END ins;

    -- Insert one row with function, return generated primary key
    FUNCTION ins
    (
        id_blood_product_det_in  IN blood_product_execution.id_blood_product_det%TYPE DEFAULT NULL,
        action_in                IN blood_product_execution.action%TYPE DEFAULT NULL,
        id_action_reason_in      IN blood_product_execution.id_action_reason%TYPE DEFAULT NULL,
        notes_reason_in          IN blood_product_execution.notes_reason%TYPE DEFAULT NULL,
        id_prof_performed_in     IN blood_product_execution.id_prof_performed%TYPE DEFAULT NULL,
        dt_execution_in          IN blood_product_execution.dt_execution%TYPE DEFAULT NULL,
        dt_begin_in              IN blood_product_execution.dt_begin%TYPE DEFAULT NULL,
        duration_in              IN blood_product_execution.duration%TYPE DEFAULT NULL,
        id_unit_mea_duration_in  IN blood_product_execution.id_unit_mea_duration%TYPE DEFAULT NULL,
        dt_end_in                IN blood_product_execution.dt_end%TYPE DEFAULT NULL,
        description_in           IN blood_product_execution.description%TYPE DEFAULT NULL,
        exec_number_in           IN blood_product_execution.exec_number%TYPE DEFAULT NULL,
        create_user_in           IN blood_product_execution.create_user%TYPE DEFAULT NULL,
        create_time_in           IN blood_product_execution.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN blood_product_execution.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN blood_product_execution.update_user%TYPE DEFAULT NULL,
        update_time_in           IN blood_product_execution.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN blood_product_execution.update_institution%TYPE DEFAULT NULL,
        id_epis_documentation_in IN blood_product_execution.id_epis_documentation%TYPE DEFAULT NULL,
        id_prof_match_in         IN blood_product_execution.id_prof_match%TYPE DEFAULT NULL,
        dt_match_tstz_in         IN blood_product_execution.dt_match_tstz%TYPE DEFAULT NULL,
        id_professional_in       IN blood_product_execution.id_professional%TYPE DEFAULT NULL,
        dt_bp_execution_tstz_in  IN blood_product_execution.dt_bp_execution_tstz%TYPE DEFAULT NULL,
        flg_compatibility_in     IN blood_product_execution.flg_compatibility%TYPE DEFAULT NULL,
        notes_compatibility_in   IN blood_product_execution.notes_compatibility%TYPE DEFAULT NULL,
        flg_condition_in         IN blood_product_execution.flg_condition%TYPE DEFAULT NULL,
        flg_lab_mother_in        IN blood_product_execution.flg_lab_mother%TYPE DEFAULT NULL,
        id_analysis_req_det_in   IN blood_product_execution.id_analysis_req_det%TYPE DEFAULT NULL,
        -- Pass false if you want errors to propagate out unhandled
        handle_error_in IN BOOLEAN := TRUE
    ) RETURN blood_product_execution.id_blood_product_execution%TYPE IS
        l_pky    blood_product_execution.id_blood_product_execution%TYPE := next_key;
        rows_out table_varchar;
    BEGIN
        ins(id_blood_product_execution_in => l_pky,
            id_blood_product_det_in       => id_blood_product_det_in,
            action_in                     => action_in,
            id_action_reason_in           => id_action_reason_in,
            notes_reason_in               => notes_reason_in,
            id_prof_performed_in          => id_prof_performed_in,
            dt_execution_in               => dt_execution_in,
            dt_begin_in                   => dt_begin_in,
            duration_in                   => duration_in,
            id_unit_mea_duration_in       => id_unit_mea_duration_in,
            dt_end_in                     => dt_end_in,
            description_in                => description_in,
            exec_number_in                => exec_number_in,
            create_user_in                => create_user_in,
            create_time_in                => create_time_in,
            create_institution_in         => create_institution_in,
            update_user_in                => update_user_in,
            update_time_in                => update_time_in,
            update_institution_in         => update_institution_in,
            id_epis_documentation_in      => id_epis_documentation_in,
            id_prof_match_in              => id_prof_match_in,
            dt_match_tstz_in              => dt_match_tstz_in,
            id_professional_in            => id_professional_in,
            dt_bp_execution_tstz_in       => dt_bp_execution_tstz_in,
            flg_compatibility_in          => flg_compatibility_in,
            notes_compatibility_in        => notes_compatibility_in,
            flg_condition_in              => flg_condition_in,
            flg_lab_mother_in             => flg_lab_mother_in,
            id_analysis_req_det_in        => id_analysis_req_det_in,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
        RETURN l_pky;
    END ins;

    PROCEDURE ins
    (
        id_blood_product_execution_in IN blood_product_execution.id_blood_product_execution%TYPE,
        id_blood_product_det_in       IN blood_product_execution.id_blood_product_det%TYPE DEFAULT NULL,
        action_in                     IN blood_product_execution.action%TYPE DEFAULT NULL,
        id_action_reason_in           IN blood_product_execution.id_action_reason%TYPE DEFAULT NULL,
        notes_reason_in               IN blood_product_execution.notes_reason%TYPE DEFAULT NULL,
        id_prof_performed_in          IN blood_product_execution.id_prof_performed%TYPE DEFAULT NULL,
        dt_execution_in               IN blood_product_execution.dt_execution%TYPE DEFAULT NULL,
        dt_begin_in                   IN blood_product_execution.dt_begin%TYPE DEFAULT NULL,
        duration_in                   IN blood_product_execution.duration%TYPE DEFAULT NULL,
        id_unit_mea_duration_in       IN blood_product_execution.id_unit_mea_duration%TYPE DEFAULT NULL,
        dt_end_in                     IN blood_product_execution.dt_end%TYPE DEFAULT NULL,
        description_in                IN blood_product_execution.description%TYPE DEFAULT NULL,
        exec_number_in                IN blood_product_execution.exec_number%TYPE DEFAULT NULL,
        create_user_in                IN blood_product_execution.create_user%TYPE DEFAULT NULL,
        create_time_in                IN blood_product_execution.create_time%TYPE DEFAULT NULL,
        create_institution_in         IN blood_product_execution.create_institution%TYPE DEFAULT NULL,
        update_user_in                IN blood_product_execution.update_user%TYPE DEFAULT NULL,
        update_time_in                IN blood_product_execution.update_time%TYPE DEFAULT NULL,
        update_institution_in         IN blood_product_execution.update_institution%TYPE DEFAULT NULL,
        id_epis_documentation_in      IN blood_product_execution.id_epis_documentation%TYPE DEFAULT NULL,
        id_prof_match_in              IN blood_product_execution.id_prof_match%TYPE DEFAULT NULL,
        dt_match_tstz_in              IN blood_product_execution.dt_match_tstz%TYPE DEFAULT NULL,
        id_professional_in            IN blood_product_execution.id_professional%TYPE DEFAULT NULL,
        dt_bp_execution_tstz_in       IN blood_product_execution.dt_bp_execution_tstz%TYPE DEFAULT NULL,
        flg_compatibility_in          IN blood_product_execution.flg_compatibility%TYPE DEFAULT NULL,
        notes_compatibility_in        IN blood_product_execution.notes_compatibility%TYPE DEFAULT NULL,
        flg_condition_in              IN blood_product_execution.flg_condition%TYPE DEFAULT NULL,
        flg_lab_mother_in             IN blood_product_execution.flg_lab_mother%TYPE DEFAULT NULL,
        id_analysis_req_det_in        IN blood_product_execution.id_analysis_req_det%TYPE DEFAULT NULL,
        handle_error_in               IN BOOLEAN := TRUE,
        rows_out                      OUT table_varchar
    ) IS
    BEGIN
        INSERT INTO blood_product_execution
            (id_blood_product_execution,
             id_blood_product_det,
             action,
             id_action_reason,
             notes_reason,
             id_prof_performed,
             dt_execution,
             dt_begin,
             duration,
             id_unit_mea_duration,
             dt_end,
             description,
             exec_number,
             create_user,
             create_time,
             create_institution,
             update_user,
             update_time,
             update_institution,
             id_epis_documentation,
             id_prof_match,
             dt_match_tstz,
             id_professional,
             dt_bp_execution_tstz,
             flg_compatibility,
             notes_compatibility,
             flg_condition,
             flg_lab_mother,
             id_analysis_req_det)
        VALUES
            (id_blood_product_execution_in,
             id_blood_product_det_in,
             action_in,
             id_action_reason_in,
             notes_reason_in,
             id_prof_performed_in,
             dt_execution_in,
             dt_begin_in,
             duration_in,
             id_unit_mea_duration_in,
             dt_end_in,
             description_in,
             exec_number_in,
             create_user_in,
             create_time_in,
             create_institution_in,
             update_user_in,
             update_time_in,
             update_institution_in,
             id_epis_documentation_in,
             id_prof_match_in,
             dt_match_tstz_in,
             id_professional_in,
             dt_bp_execution_tstz_in,
             flg_compatibility_in,
             notes_compatibility_in,
             flg_condition_in,
             flg_lab_mother_in,
             id_analysis_req_det_in)
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    PROCEDURE ins
    (
        id_blood_product_execution_in IN blood_product_execution.id_blood_product_execution%TYPE,
        id_blood_product_det_in       IN blood_product_execution.id_blood_product_det%TYPE DEFAULT NULL,
        action_in                     IN blood_product_execution.action%TYPE DEFAULT NULL,
        id_action_reason_in           IN blood_product_execution.id_action_reason%TYPE DEFAULT NULL,
        notes_reason_in               IN blood_product_execution.notes_reason%TYPE DEFAULT NULL,
        id_prof_performed_in          IN blood_product_execution.id_prof_performed%TYPE DEFAULT NULL,
        dt_execution_in               IN blood_product_execution.dt_execution%TYPE DEFAULT NULL,
        dt_begin_in                   IN blood_product_execution.dt_begin%TYPE DEFAULT NULL,
        duration_in                   IN blood_product_execution.duration%TYPE DEFAULT NULL,
        id_unit_mea_duration_in       IN blood_product_execution.id_unit_mea_duration%TYPE DEFAULT NULL,
        dt_end_in                     IN blood_product_execution.dt_end%TYPE DEFAULT NULL,
        description_in                IN blood_product_execution.description%TYPE DEFAULT NULL,
        exec_number_in                IN blood_product_execution.exec_number%TYPE DEFAULT NULL,
        create_user_in                IN blood_product_execution.create_user%TYPE DEFAULT NULL,
        create_time_in                IN blood_product_execution.create_time%TYPE DEFAULT NULL,
        create_institution_in         IN blood_product_execution.create_institution%TYPE DEFAULT NULL,
        update_user_in                IN blood_product_execution.update_user%TYPE DEFAULT NULL,
        update_time_in                IN blood_product_execution.update_time%TYPE DEFAULT NULL,
        update_institution_in         IN blood_product_execution.update_institution%TYPE DEFAULT NULL,
        id_epis_documentation_in      IN blood_product_execution.id_epis_documentation%TYPE DEFAULT NULL,
        id_prof_match_in              IN blood_product_execution.id_prof_match%TYPE DEFAULT NULL,
        dt_match_tstz_in              IN blood_product_execution.dt_match_tstz%TYPE DEFAULT NULL,
        id_professional_in            IN blood_product_execution.id_professional%TYPE DEFAULT NULL,
        dt_bp_execution_tstz_in       IN blood_product_execution.dt_bp_execution_tstz%TYPE DEFAULT NULL,
        flg_compatibility_in          IN blood_product_execution.flg_compatibility%TYPE DEFAULT NULL,
        notes_compatibility_in        IN blood_product_execution.notes_compatibility%TYPE DEFAULT NULL,
        flg_condition_in              IN blood_product_execution.flg_condition%TYPE DEFAULT NULL,
        flg_lab_mother_in             IN blood_product_execution.flg_lab_mother%TYPE DEFAULT NULL,
        id_analysis_req_det_in        IN blood_product_execution.id_analysis_req_det%TYPE DEFAULT NULL,
        handle_error_in               IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_blood_product_execution_in => id_blood_product_execution_in,
            id_blood_product_det_in       => id_blood_product_det_in,
            action_in                     => action_in,
            id_action_reason_in           => id_action_reason_in,
            notes_reason_in               => notes_reason_in,
            id_prof_performed_in          => id_prof_performed_in,
            dt_execution_in               => dt_execution_in,
            dt_begin_in                   => dt_begin_in,
            duration_in                   => duration_in,
            id_unit_mea_duration_in       => id_unit_mea_duration_in,
            dt_end_in                     => dt_end_in,
            description_in                => description_in,
            exec_number_in                => exec_number_in,
            create_user_in                => create_user_in,
            create_time_in                => create_time_in,
            create_institution_in         => create_institution_in,
            update_user_in                => update_user_in,
            update_time_in                => update_time_in,
            update_institution_in         => update_institution_in,
            id_epis_documentation_in      => id_epis_documentation_in,
            id_prof_match_in              => id_prof_match_in,
            dt_match_tstz_in              => dt_match_tstz_in,
            id_professional_in            => id_professional_in,
            dt_bp_execution_tstz_in       => dt_bp_execution_tstz_in,
            flg_compatibility_in          => flg_compatibility_in,
            notes_compatibility_in        => notes_compatibility_in,
            flg_condition_in              => flg_condition_in,
            flg_lab_mother_in             => flg_lab_mother_in,
            id_analysis_req_det_in        => id_analysis_req_det_in,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN blood_product_execution%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_rec blood_product_execution%ROWTYPE := rec_in;
    BEGIN
        IF gen_pky_in
        THEN
            l_rec.id_blood_product_execution := next_key(sequence_in);
        END IF;
    
        ins(id_blood_product_execution_in => l_rec.id_blood_product_execution,
            id_blood_product_det_in       => l_rec.id_blood_product_det,
            action_in                     => l_rec.action,
            id_action_reason_in           => l_rec.id_action_reason,
            notes_reason_in               => l_rec.notes_reason,
            id_prof_performed_in          => l_rec.id_prof_performed,
            dt_execution_in               => l_rec.dt_execution,
            dt_begin_in                   => l_rec.dt_begin,
            duration_in                   => l_rec.duration,
            id_unit_mea_duration_in       => l_rec.id_unit_mea_duration,
            dt_end_in                     => l_rec.dt_end,
            description_in                => l_rec.description,
            exec_number_in                => l_rec.exec_number,
            create_user_in                => l_rec.create_user,
            create_time_in                => l_rec.create_time,
            create_institution_in         => l_rec.create_institution,
            update_user_in                => l_rec.update_user,
            update_time_in                => l_rec.update_time,
            update_institution_in         => l_rec.update_institution,
            id_epis_documentation_in      => l_rec.id_epis_documentation,
            id_prof_match_in              => l_rec.id_prof_match,
            dt_match_tstz_in              => l_rec.dt_match_tstz,
            id_professional_in            => l_rec.id_professional,
            dt_bp_execution_tstz_in       => l_rec.dt_bp_execution_tstz,
            flg_compatibility_in          => l_rec.flg_compatibility,
            notes_compatibility_in        => l_rec.notes_compatibility,
            flg_condition_in              => l_rec.flg_condition,
            flg_lab_mother_in             => l_rec.flg_lab_mother,
            id_analysis_req_det_in        => l_rec.id_analysis_req_det,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN blood_product_execution%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rec_in          => rec_in,
            gen_pky_in      => gen_pky_in,
            sequence_in     => sequence_in,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN blood_product_execution_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        IF rows_in.count = 0
        THEN
            NULL;
        ELSE
            FORALL indx IN rows_in.first .. rows_in.last SAVE EXCEPTIONS
                INSERT INTO blood_product_execution
                    (id_blood_product_execution,
                     id_blood_product_det,
                     action,
                     id_action_reason,
                     notes_reason,
                     id_prof_performed,
                     dt_execution,
                     dt_begin,
                     duration,
                     id_unit_mea_duration,
                     dt_end,
                     description,
                     exec_number,
                     id_epis_documentation,
                     id_prof_match,
                     dt_match_tstz,
                     id_professional,
                     dt_bp_execution_tstz,
                     flg_compatibility,
                     notes_compatibility,
                     flg_condition,
                     flg_lab_mother,
                     id_analysis_req_det)
                VALUES
                    (rows_in(indx).id_blood_product_execution,
                     rows_in(indx).id_blood_product_det,
                     rows_in(indx).action,
                     rows_in(indx).id_action_reason,
                     rows_in(indx).notes_reason,
                     rows_in(indx).id_prof_performed,
                     rows_in(indx).dt_execution,
                     rows_in(indx).dt_begin,
                     rows_in(indx).duration,
                     rows_in(indx).id_unit_mea_duration,
                     rows_in(indx).dt_end,
                     rows_in(indx).description,
                     rows_in(indx).exec_number,
                     rows_in(indx).id_epis_documentation,
                     rows_in(indx).id_prof_match,
                     rows_in(indx).dt_match_tstz,
                     rows_in(indx).id_professional,
                     rows_in(indx).dt_bp_execution_tstz,
                     rows_in(indx).flg_compatibility,
                     rows_in(indx).notes_compatibility,
                     rows_in(indx).flg_condition,
                     rows_in(indx).flg_lab_mother,
                     rows_in(indx).id_analysis_req_det)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN blood_product_execution_tc,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rows_in => rows_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END ins;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_blood_product_execution_in IN blood_product_execution.id_blood_product_execution%TYPE,
        id_blood_product_det_in       IN blood_product_execution.id_blood_product_det%TYPE DEFAULT NULL,
        id_blood_product_det_nin      IN BOOLEAN := TRUE,
        action_in                     IN blood_product_execution.action%TYPE DEFAULT NULL,
        action_nin                    IN BOOLEAN := TRUE,
        id_action_reason_in           IN blood_product_execution.id_action_reason%TYPE DEFAULT NULL,
        id_action_reason_nin          IN BOOLEAN := TRUE,
        notes_reason_in               IN blood_product_execution.notes_reason%TYPE DEFAULT NULL,
        notes_reason_nin              IN BOOLEAN := TRUE,
        id_prof_performed_in          IN blood_product_execution.id_prof_performed%TYPE DEFAULT NULL,
        id_prof_performed_nin         IN BOOLEAN := TRUE,
        dt_execution_in               IN blood_product_execution.dt_execution%TYPE DEFAULT NULL,
        dt_execution_nin              IN BOOLEAN := TRUE,
        dt_begin_in                   IN blood_product_execution.dt_begin%TYPE DEFAULT NULL,
        dt_begin_nin                  IN BOOLEAN := TRUE,
        duration_in                   IN blood_product_execution.duration%TYPE DEFAULT NULL,
        duration_nin                  IN BOOLEAN := TRUE,
        id_unit_mea_duration_in       IN blood_product_execution.id_unit_mea_duration%TYPE DEFAULT NULL,
        id_unit_mea_duration_nin      IN BOOLEAN := TRUE,
        dt_end_in                     IN blood_product_execution.dt_end%TYPE DEFAULT NULL,
        dt_end_nin                    IN BOOLEAN := TRUE,
        description_in                IN blood_product_execution.description%TYPE DEFAULT NULL,
        description_nin               IN BOOLEAN := TRUE,
        exec_number_in                IN blood_product_execution.exec_number%TYPE DEFAULT NULL,
        exec_number_nin               IN BOOLEAN := TRUE,
        create_user_in                IN blood_product_execution.create_user%TYPE DEFAULT NULL,
        create_user_nin               IN BOOLEAN := TRUE,
        create_time_in                IN blood_product_execution.create_time%TYPE DEFAULT NULL,
        create_time_nin               IN BOOLEAN := TRUE,
        create_institution_in         IN blood_product_execution.create_institution%TYPE DEFAULT NULL,
        create_institution_nin        IN BOOLEAN := TRUE,
        update_user_in                IN blood_product_execution.update_user%TYPE DEFAULT NULL,
        update_user_nin               IN BOOLEAN := TRUE,
        update_time_in                IN blood_product_execution.update_time%TYPE DEFAULT NULL,
        update_time_nin               IN BOOLEAN := TRUE,
        update_institution_in         IN blood_product_execution.update_institution%TYPE DEFAULT NULL,
        update_institution_nin        IN BOOLEAN := TRUE,
        id_epis_documentation_in      IN blood_product_execution.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_documentation_nin     IN BOOLEAN := TRUE,
        id_prof_match_in              IN blood_product_execution.id_prof_match%TYPE DEFAULT NULL,
        id_prof_match_nin             IN BOOLEAN := TRUE,
        dt_match_tstz_in              IN blood_product_execution.dt_match_tstz%TYPE DEFAULT NULL,
        dt_match_tstz_nin             IN BOOLEAN := TRUE,
        id_professional_in            IN blood_product_execution.id_professional%TYPE DEFAULT NULL,
        id_professional_nin           IN BOOLEAN := TRUE,
        dt_bp_execution_tstz_in       IN blood_product_execution.dt_bp_execution_tstz%TYPE DEFAULT NULL,
        dt_bp_execution_tstz_nin      IN BOOLEAN := TRUE,
        flg_compatibility_in          IN blood_product_execution.flg_compatibility%TYPE DEFAULT NULL,
        flg_compatibility_nin         IN BOOLEAN := TRUE,
        notes_compatibility_in        IN blood_product_execution.notes_compatibility%TYPE DEFAULT NULL,
        notes_compatibility_nin       IN BOOLEAN := TRUE,
        flg_condition_in              IN blood_product_execution.flg_condition%TYPE DEFAULT NULL,
        flg_condition_nin             IN BOOLEAN := TRUE,
        flg_lab_mother_in             IN blood_product_execution.flg_lab_mother%TYPE DEFAULT NULL,
        flg_lab_mother_nin            IN BOOLEAN := TRUE,
        id_analysis_req_det_in        IN blood_product_execution.id_analysis_req_det%TYPE DEFAULT NULL,
        id_analysis_req_det_nin       IN BOOLEAN := TRUE,
        handle_error_in               IN BOOLEAN := TRUE,
        rows_out                      IN OUT table_varchar
    ) IS
        l_rows_out                table_varchar;
        l_id_blood_product_det_n  NUMBER(1) := sys.diutil.bool_to_int(id_blood_product_det_nin);
        l_action_n                NUMBER(1) := sys.diutil.bool_to_int(action_nin);
        l_id_action_reason_n      NUMBER(1) := sys.diutil.bool_to_int(id_action_reason_nin);
        l_notes_reason_n          NUMBER(1) := sys.diutil.bool_to_int(notes_reason_nin);
        l_id_prof_performed_n     NUMBER(1) := sys.diutil.bool_to_int(id_prof_performed_nin);
        l_dt_execution_n          NUMBER(1) := sys.diutil.bool_to_int(dt_execution_nin);
        l_dt_begin_n              NUMBER(1) := sys.diutil.bool_to_int(dt_begin_nin);
        l_duration_n              NUMBER(1) := sys.diutil.bool_to_int(duration_nin);
        l_id_unit_mea_duration_n  NUMBER(1) := sys.diutil.bool_to_int(id_unit_mea_duration_nin);
        l_dt_end_n                NUMBER(1) := sys.diutil.bool_to_int(dt_end_nin);
        l_description_n           NUMBER(1) := sys.diutil.bool_to_int(description_nin);
        l_exec_number_n           NUMBER(1) := sys.diutil.bool_to_int(exec_number_nin);
        l_create_user_n           NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n           NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n    NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n           NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n           NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n    NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_id_epis_documentation_n NUMBER(1) := sys.diutil.bool_to_int(id_epis_documentation_nin);
        l_id_prof_match_n         NUMBER(1) := sys.diutil.bool_to_int(id_prof_match_nin);
        l_dt_match_tstz_n         NUMBER(1) := sys.diutil.bool_to_int(dt_match_tstz_nin);
        l_id_professional_n       NUMBER(1) := sys.diutil.bool_to_int(id_professional_nin);
        l_dt_bp_execution_tstz_n  NUMBER(1) := sys.diutil.bool_to_int(dt_bp_execution_tstz_nin);
        l_flg_compatibility_n     NUMBER(1) := sys.diutil.bool_to_int(flg_compatibility_nin);
        l_notes_compatibility_n   NUMBER(1) := sys.diutil.bool_to_int(notes_compatibility_nin);
        l_flg_condition_n         NUMBER(1) := sys.diutil.bool_to_int(flg_condition_nin);
        l_flg_lab_mother_n        NUMBER(1) := sys.diutil.bool_to_int(flg_lab_mother_nin);
        l_id_analysis_req_det_n   NUMBER(1) := sys.diutil.bool_to_int(id_analysis_req_det_nin);
    BEGIN
    
        UPDATE blood_product_execution
           SET id_blood_product_det  = decode(l_id_blood_product_det_n,
                                              0,
                                              id_blood_product_det_in,
                                              nvl(id_blood_product_det_in, id_blood_product_det)),
               action                = decode(l_action_n, 0, action_in, nvl(action_in, action)),
               id_action_reason      = decode(l_id_action_reason_n,
                                              0,
                                              id_action_reason_in,
                                              nvl(id_action_reason_in, id_action_reason)),
               notes_reason          = decode(l_notes_reason_n, 0, notes_reason_in, nvl(notes_reason_in, notes_reason)),
               id_prof_performed     = decode(l_id_prof_performed_n,
                                              0,
                                              id_prof_performed_in,
                                              nvl(id_prof_performed_in, id_prof_performed)),
               dt_execution          = decode(l_dt_execution_n, 0, dt_execution_in, nvl(dt_execution_in, dt_execution)),
               dt_begin              = decode(l_dt_begin_n, 0, dt_begin_in, nvl(dt_begin_in, dt_begin)),
               duration              = decode(l_duration_n, 0, duration_in, nvl(duration_in, duration)),
               id_unit_mea_duration  = decode(l_id_unit_mea_duration_n,
                                              0,
                                              id_unit_mea_duration_in,
                                              nvl(id_unit_mea_duration_in, id_unit_mea_duration)),
               dt_end                = decode(l_dt_end_n, 0, dt_end_in, nvl(dt_end_in, dt_end)),
               description           = decode(l_description_n, 0, description_in, nvl(description_in, description)),
               exec_number           = decode(l_exec_number_n, 0, exec_number_in, nvl(exec_number_in, exec_number)),
               create_user           = decode(l_create_user_n, 0, create_user_in, nvl(create_user_in, create_user)),
               create_time           = decode(l_create_time_n, 0, create_time_in, nvl(create_time_in, create_time)),
               create_institution    = decode(l_create_institution_n,
                                              0,
                                              create_institution_in,
                                              nvl(create_institution_in, create_institution)),
               update_user           = decode(l_update_user_n, 0, update_user_in, nvl(update_user_in, update_user)),
               update_time           = decode(l_update_time_n, 0, update_time_in, nvl(update_time_in, update_time)),
               update_institution    = decode(l_update_institution_n,
                                              0,
                                              update_institution_in,
                                              nvl(update_institution_in, update_institution)),
               id_epis_documentation = decode(l_id_epis_documentation_n,
                                              0,
                                              id_epis_documentation_in,
                                              nvl(id_epis_documentation_in, id_epis_documentation)),
               id_prof_match         = decode(l_id_prof_match_n,
                                              0,
                                              id_prof_match_in,
                                              nvl(id_prof_match_in, id_prof_match)),
               dt_match_tstz         = decode(l_dt_match_tstz_n,
                                              0,
                                              dt_match_tstz_in,
                                              nvl(dt_match_tstz_in, dt_match_tstz)),
               id_professional       = decode(l_id_professional_n,
                                              0,
                                              id_professional_in,
                                              nvl(id_professional_in, id_professional)),
               dt_bp_execution_tstz  = decode(l_dt_bp_execution_tstz_n,
                                              0,
                                              dt_bp_execution_tstz_in,
                                              nvl(dt_bp_execution_tstz_in, dt_bp_execution_tstz)),
               flg_compatibility     = decode(l_flg_compatibility_n,
                                              0,
                                              flg_compatibility_in,
                                              nvl(flg_compatibility_in, flg_compatibility)),
               notes_compatibility   = decode(l_notes_compatibility_n,
                                              0,
                                              notes_compatibility_in,
                                              nvl(notes_compatibility_in, notes_compatibility)),
               flg_condition         = decode(l_flg_condition_n,
                                              0,
                                              flg_condition_in,
                                              nvl(flg_condition_in, flg_condition)),
               flg_lab_mother        = decode(l_flg_lab_mother_n,
                                              0,
                                              flg_lab_mother_in,
                                              nvl(flg_lab_mother_in, flg_lab_mother)),
               id_analysis_req_det   = decode(l_id_analysis_req_det_n,
                                              0,
                                              id_analysis_req_det_in,
                                              nvl(id_analysis_req_det_in, id_analysis_req_det))
         WHERE id_blood_product_execution = id_blood_product_execution_in
        RETURNING ROWID BULK COLLECT INTO l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_blood_product_execution_in IN blood_product_execution.id_blood_product_execution%TYPE,
        id_blood_product_det_in       IN blood_product_execution.id_blood_product_det%TYPE DEFAULT NULL,
        id_blood_product_det_nin      IN BOOLEAN := TRUE,
        action_in                     IN blood_product_execution.action%TYPE DEFAULT NULL,
        action_nin                    IN BOOLEAN := TRUE,
        id_action_reason_in           IN blood_product_execution.id_action_reason%TYPE DEFAULT NULL,
        id_action_reason_nin          IN BOOLEAN := TRUE,
        notes_reason_in               IN blood_product_execution.notes_reason%TYPE DEFAULT NULL,
        notes_reason_nin              IN BOOLEAN := TRUE,
        id_prof_performed_in          IN blood_product_execution.id_prof_performed%TYPE DEFAULT NULL,
        id_prof_performed_nin         IN BOOLEAN := TRUE,
        dt_execution_in               IN blood_product_execution.dt_execution%TYPE DEFAULT NULL,
        dt_execution_nin              IN BOOLEAN := TRUE,
        dt_begin_in                   IN blood_product_execution.dt_begin%TYPE DEFAULT NULL,
        dt_begin_nin                  IN BOOLEAN := TRUE,
        duration_in                   IN blood_product_execution.duration%TYPE DEFAULT NULL,
        duration_nin                  IN BOOLEAN := TRUE,
        id_unit_mea_duration_in       IN blood_product_execution.id_unit_mea_duration%TYPE DEFAULT NULL,
        id_unit_mea_duration_nin      IN BOOLEAN := TRUE,
        dt_end_in                     IN blood_product_execution.dt_end%TYPE DEFAULT NULL,
        dt_end_nin                    IN BOOLEAN := TRUE,
        description_in                IN blood_product_execution.description%TYPE DEFAULT NULL,
        description_nin               IN BOOLEAN := TRUE,
        exec_number_in                IN blood_product_execution.exec_number%TYPE DEFAULT NULL,
        exec_number_nin               IN BOOLEAN := TRUE,
        create_user_in                IN blood_product_execution.create_user%TYPE DEFAULT NULL,
        create_user_nin               IN BOOLEAN := TRUE,
        create_time_in                IN blood_product_execution.create_time%TYPE DEFAULT NULL,
        create_time_nin               IN BOOLEAN := TRUE,
        create_institution_in         IN blood_product_execution.create_institution%TYPE DEFAULT NULL,
        create_institution_nin        IN BOOLEAN := TRUE,
        update_user_in                IN blood_product_execution.update_user%TYPE DEFAULT NULL,
        update_user_nin               IN BOOLEAN := TRUE,
        update_time_in                IN blood_product_execution.update_time%TYPE DEFAULT NULL,
        update_time_nin               IN BOOLEAN := TRUE,
        update_institution_in         IN blood_product_execution.update_institution%TYPE DEFAULT NULL,
        update_institution_nin        IN BOOLEAN := TRUE,
        id_epis_documentation_in      IN blood_product_execution.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_documentation_nin     IN BOOLEAN := TRUE,
        id_prof_match_in              IN blood_product_execution.id_prof_match%TYPE DEFAULT NULL,
        id_prof_match_nin             IN BOOLEAN := TRUE,
        dt_match_tstz_in              IN blood_product_execution.dt_match_tstz%TYPE DEFAULT NULL,
        dt_match_tstz_nin             IN BOOLEAN := TRUE,
        id_professional_in            IN blood_product_execution.id_professional%TYPE DEFAULT NULL,
        id_professional_nin           IN BOOLEAN := TRUE,
        dt_bp_execution_tstz_in       IN blood_product_execution.dt_bp_execution_tstz%TYPE DEFAULT NULL,
        dt_bp_execution_tstz_nin      IN BOOLEAN := TRUE,
        flg_compatibility_in          IN blood_product_execution.flg_compatibility%TYPE DEFAULT NULL,
        flg_compatibility_nin         IN BOOLEAN := TRUE,
        notes_compatibility_in        IN blood_product_execution.notes_compatibility%TYPE DEFAULT NULL,
        notes_compatibility_nin       IN BOOLEAN := TRUE,
        flg_condition_in              IN blood_product_execution.flg_condition%TYPE DEFAULT NULL,
        flg_condition_nin             IN BOOLEAN := TRUE,
        flg_lab_mother_in             IN blood_product_execution.flg_lab_mother%TYPE DEFAULT NULL,
        flg_lab_mother_nin            IN BOOLEAN := TRUE,
        id_analysis_req_det_in        IN blood_product_execution.id_analysis_req_det%TYPE DEFAULT NULL,
        id_analysis_req_det_nin       IN BOOLEAN := TRUE,
        handle_error_in               IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_blood_product_execution_in => id_blood_product_execution_in,
            id_blood_product_det_in       => id_blood_product_det_in,
            id_blood_product_det_nin      => id_blood_product_det_nin,
            action_in                     => action_in,
            action_nin                    => action_nin,
            id_action_reason_in           => id_action_reason_in,
            id_action_reason_nin          => id_action_reason_nin,
            notes_reason_in               => notes_reason_in,
            notes_reason_nin              => notes_reason_nin,
            id_prof_performed_in          => id_prof_performed_in,
            id_prof_performed_nin         => id_prof_performed_nin,
            dt_execution_in               => dt_execution_in,
            dt_execution_nin              => dt_execution_nin,
            dt_begin_in                   => dt_begin_in,
            dt_begin_nin                  => dt_begin_nin,
            duration_in                   => duration_in,
            duration_nin                  => duration_nin,
            id_unit_mea_duration_in       => id_unit_mea_duration_in,
            id_unit_mea_duration_nin      => id_unit_mea_duration_nin,
            dt_end_in                     => dt_end_in,
            dt_end_nin                    => dt_end_nin,
            description_in                => description_in,
            description_nin               => description_nin,
            exec_number_in                => exec_number_in,
            exec_number_nin               => exec_number_nin,
            create_user_in                => create_user_in,
            create_user_nin               => create_user_nin,
            create_time_in                => create_time_in,
            create_time_nin               => create_time_nin,
            create_institution_in         => create_institution_in,
            create_institution_nin        => create_institution_nin,
            update_user_in                => update_user_in,
            update_user_nin               => update_user_nin,
            update_time_in                => update_time_in,
            update_time_nin               => update_time_nin,
            update_institution_in         => update_institution_in,
            update_institution_nin        => update_institution_nin,
            id_epis_documentation_in      => id_epis_documentation_in,
            id_epis_documentation_nin     => id_epis_documentation_nin,
            id_prof_match_in              => id_prof_match_in,
            id_prof_match_nin             => id_prof_match_nin,
            dt_match_tstz_in              => dt_match_tstz_in,
            dt_match_tstz_nin             => dt_match_tstz_nin,
            id_professional_in            => id_professional_in,
            id_professional_nin           => id_professional_nin,
            dt_bp_execution_tstz_in       => dt_bp_execution_tstz_in,
            dt_bp_execution_tstz_nin      => dt_bp_execution_tstz_nin,
            flg_compatibility_in          => flg_compatibility_in,
            flg_compatibility_nin         => flg_compatibility_nin,
            notes_compatibility_in        => notes_compatibility_in,
            notes_compatibility_nin       => notes_compatibility_nin,
            flg_condition_in              => flg_condition_in,
            flg_condition_nin             => flg_condition_nin,
            flg_lab_mother_in             => flg_lab_mother_in,
            flg_lab_mother_nin            => flg_lab_mother_nin,
            id_analysis_req_det_in        => id_analysis_req_det_in,
            id_analysis_req_det_nin       => id_analysis_req_det_nin,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_blood_product_det_in   IN blood_product_execution.id_blood_product_det%TYPE DEFAULT NULL,
        id_blood_product_det_nin  IN BOOLEAN := TRUE,
        action_in                 IN blood_product_execution.action%TYPE DEFAULT NULL,
        action_nin                IN BOOLEAN := TRUE,
        id_action_reason_in       IN blood_product_execution.id_action_reason%TYPE DEFAULT NULL,
        id_action_reason_nin      IN BOOLEAN := TRUE,
        notes_reason_in           IN blood_product_execution.notes_reason%TYPE DEFAULT NULL,
        notes_reason_nin          IN BOOLEAN := TRUE,
        id_prof_performed_in      IN blood_product_execution.id_prof_performed%TYPE DEFAULT NULL,
        id_prof_performed_nin     IN BOOLEAN := TRUE,
        dt_execution_in           IN blood_product_execution.dt_execution%TYPE DEFAULT NULL,
        dt_execution_nin          IN BOOLEAN := TRUE,
        dt_begin_in               IN blood_product_execution.dt_begin%TYPE DEFAULT NULL,
        dt_begin_nin              IN BOOLEAN := TRUE,
        duration_in               IN blood_product_execution.duration%TYPE DEFAULT NULL,
        duration_nin              IN BOOLEAN := TRUE,
        id_unit_mea_duration_in   IN blood_product_execution.id_unit_mea_duration%TYPE DEFAULT NULL,
        id_unit_mea_duration_nin  IN BOOLEAN := TRUE,
        dt_end_in                 IN blood_product_execution.dt_end%TYPE DEFAULT NULL,
        dt_end_nin                IN BOOLEAN := TRUE,
        description_in            IN blood_product_execution.description%TYPE DEFAULT NULL,
        description_nin           IN BOOLEAN := TRUE,
        exec_number_in            IN blood_product_execution.exec_number%TYPE DEFAULT NULL,
        exec_number_nin           IN BOOLEAN := TRUE,
        create_user_in            IN blood_product_execution.create_user%TYPE DEFAULT NULL,
        create_user_nin           IN BOOLEAN := TRUE,
        create_time_in            IN blood_product_execution.create_time%TYPE DEFAULT NULL,
        create_time_nin           IN BOOLEAN := TRUE,
        create_institution_in     IN blood_product_execution.create_institution%TYPE DEFAULT NULL,
        create_institution_nin    IN BOOLEAN := TRUE,
        update_user_in            IN blood_product_execution.update_user%TYPE DEFAULT NULL,
        update_user_nin           IN BOOLEAN := TRUE,
        update_time_in            IN blood_product_execution.update_time%TYPE DEFAULT NULL,
        update_time_nin           IN BOOLEAN := TRUE,
        update_institution_in     IN blood_product_execution.update_institution%TYPE DEFAULT NULL,
        update_institution_nin    IN BOOLEAN := TRUE,
        id_epis_documentation_in  IN blood_product_execution.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_documentation_nin IN BOOLEAN := TRUE,
        id_prof_match_in          IN blood_product_execution.id_prof_match%TYPE DEFAULT NULL,
        id_prof_match_nin         IN BOOLEAN := TRUE,
        dt_match_tstz_in          IN blood_product_execution.dt_match_tstz%TYPE DEFAULT NULL,
        dt_match_tstz_nin         IN BOOLEAN := TRUE,
        id_professional_in        IN blood_product_execution.id_professional%TYPE DEFAULT NULL,
        id_professional_nin       IN BOOLEAN := TRUE,
        dt_bp_execution_tstz_in   IN blood_product_execution.dt_bp_execution_tstz%TYPE DEFAULT NULL,
        dt_bp_execution_tstz_nin  IN BOOLEAN := TRUE,
        flg_compatibility_in      IN blood_product_execution.flg_compatibility%TYPE DEFAULT NULL,
        flg_compatibility_nin     IN BOOLEAN := TRUE,
        notes_compatibility_in    IN blood_product_execution.notes_compatibility%TYPE DEFAULT NULL,
        notes_compatibility_nin   IN BOOLEAN := TRUE,
        flg_condition_in          IN blood_product_execution.flg_condition%TYPE DEFAULT NULL,
        flg_condition_nin         IN BOOLEAN := TRUE,
        flg_lab_mother_in         IN blood_product_execution.flg_lab_mother%TYPE DEFAULT NULL,
        flg_lab_mother_nin        IN BOOLEAN := TRUE,
        id_analysis_req_det_in    IN blood_product_execution.id_analysis_req_det%TYPE DEFAULT NULL,
        id_analysis_req_det_nin   IN BOOLEAN := TRUE,
        where_in                  IN VARCHAR2,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  IN OUT table_varchar
    ) IS
        l_sql                     VARCHAR2(32767);
        l_rows_out                table_varchar;
        l_id_blood_product_det_n  NUMBER(1) := sys.diutil.bool_to_int(id_blood_product_det_nin);
        l_action_n                NUMBER(1) := sys.diutil.bool_to_int(action_nin);
        l_id_action_reason_n      NUMBER(1) := sys.diutil.bool_to_int(id_action_reason_nin);
        l_notes_reason_n          NUMBER(1) := sys.diutil.bool_to_int(notes_reason_nin);
        l_id_prof_performed_n     NUMBER(1) := sys.diutil.bool_to_int(id_prof_performed_nin);
        l_dt_execution_n          NUMBER(1) := sys.diutil.bool_to_int(dt_execution_nin);
        l_dt_begin_n              NUMBER(1) := sys.diutil.bool_to_int(dt_begin_nin);
        l_duration_n              NUMBER(1) := sys.diutil.bool_to_int(duration_nin);
        l_id_unit_mea_duration_n  NUMBER(1) := sys.diutil.bool_to_int(id_unit_mea_duration_nin);
        l_dt_end_n                NUMBER(1) := sys.diutil.bool_to_int(dt_end_nin);
        l_description_n           NUMBER(1) := sys.diutil.bool_to_int(description_nin);
        l_exec_number_n           NUMBER(1) := sys.diutil.bool_to_int(exec_number_nin);
        l_create_user_n           NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n           NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n    NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n           NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n           NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n    NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_id_epis_documentation_n NUMBER(1) := sys.diutil.bool_to_int(id_epis_documentation_nin);
        l_id_prof_match_n         NUMBER(1) := sys.diutil.bool_to_int(id_prof_match_nin);
        l_dt_match_tstz_n         NUMBER(1) := sys.diutil.bool_to_int(dt_match_tstz_nin);
        l_id_professional_n       NUMBER(1) := sys.diutil.bool_to_int(id_professional_nin);
        l_dt_bp_execution_tstz_n  NUMBER(1) := sys.diutil.bool_to_int(dt_bp_execution_tstz_nin);
        l_flg_compatibility_n     NUMBER(1) := sys.diutil.bool_to_int(flg_compatibility_nin);
        l_notes_compatibility_n   NUMBER(1) := sys.diutil.bool_to_int(notes_compatibility_nin);
        l_flg_condition_n         NUMBER(1) := sys.diutil.bool_to_int(flg_condition_nin);
        l_flg_lab_mother_n        NUMBER(1) := sys.diutil.bool_to_int(flg_lab_mother_nin);
        l_id_analysis_req_det_n   NUMBER(1) := sys.diutil.bool_to_int(id_analysis_req_det_nin);
    BEGIN
        l_id_blood_product_det_n  := sys.diutil.bool_to_int(id_blood_product_det_nin);
        l_action_n                := sys.diutil.bool_to_int(action_nin);
        l_id_action_reason_n      := sys.diutil.bool_to_int(id_action_reason_nin);
        l_notes_reason_n          := sys.diutil.bool_to_int(notes_reason_nin);
        l_id_prof_performed_n     := sys.diutil.bool_to_int(id_prof_performed_nin);
        l_dt_execution_n          := sys.diutil.bool_to_int(dt_execution_nin);
        l_dt_begin_n              := sys.diutil.bool_to_int(dt_begin_nin);
        l_duration_n              := sys.diutil.bool_to_int(duration_nin);
        l_id_unit_mea_duration_n  := sys.diutil.bool_to_int(id_unit_mea_duration_nin);
        l_dt_end_n                := sys.diutil.bool_to_int(dt_end_nin);
        l_description_n           := sys.diutil.bool_to_int(description_nin);
        l_exec_number_n           := sys.diutil.bool_to_int(exec_number_nin);
        l_create_user_n           := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n           := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n    := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n           := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n           := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n    := sys.diutil.bool_to_int(update_institution_nin);
        l_id_epis_documentation_n := sys.diutil.bool_to_int(id_epis_documentation_nin);
        l_id_prof_match_n         := sys.diutil.bool_to_int(id_prof_match_nin);
        l_dt_match_tstz_n         := sys.diutil.bool_to_int(dt_match_tstz_nin);
        l_id_professional_n       := sys.diutil.bool_to_int(id_professional_nin);
        l_dt_bp_execution_tstz_n  := sys.diutil.bool_to_int(dt_bp_execution_tstz_nin);
        l_flg_compatibility_n     := sys.diutil.bool_to_int(flg_compatibility_nin);
        l_notes_compatibility_n   := sys.diutil.bool_to_int(notes_compatibility_nin);
        l_flg_condition_n         := sys.diutil.bool_to_int(flg_condition_nin);
        l_flg_lab_mother_n        := sys.diutil.bool_to_int(flg_lab_mother_nin);
        l_id_analysis_req_det_n   := sys.diutil.bool_to_int(id_analysis_req_det_nin);
        l_sql                     := 'UPDATE blood_product_execution SET' || ' ID_BLOOD_PRODUCT_DET = decode (' ||
                                     l_id_blood_product_det_n ||
                                     ',0,:ID_BLOOD_PRODUCT_DET_in, NVL (:ID_BLOOD_PRODUCT_DET_in, ID_BLOOD_PRODUCT_DET)) ' || ',' ||
                                     ' ACTION = decode (' || l_action_n || ',0,:ACTION_in, NVL (:ACTION_in, ACTION)) ' || ',' ||
                                     ' ID_ACTION_REASON = decode (' || l_id_action_reason_n ||
                                     ',0,:ID_ACTION_REASON_in, NVL (:ID_ACTION_REASON_in, ID_ACTION_REASON)) ' || ',' ||
                                     ' NOTES_REASON = decode (' || l_notes_reason_n ||
                                     ',0,:NOTES_REASON_in, NVL (:NOTES_REASON_in, NOTES_REASON)) ' || ',' ||
                                     ' ID_PROF_PERFORMED = decode (' || l_id_prof_performed_n ||
                                     ',0,:ID_PROF_PERFORMED_in, NVL (:ID_PROF_PERFORMED_in, ID_PROF_PERFORMED)) ' || ',' ||
                                     ' DT_EXECUTION = decode (' || l_dt_execution_n ||
                                     ',0,:DT_EXECUTION_in, NVL (:DT_EXECUTION_in, DT_EXECUTION)) ' || ',' ||
                                     ' DT_BEGIN = decode (' || l_dt_begin_n ||
                                     ',0,:DT_BEGIN_in, NVL (:DT_BEGIN_in, DT_BEGIN)) ' || ',' || ' DURATION = decode (' ||
                                     l_duration_n || ',0,:DURATION_in, NVL (:DURATION_in, DURATION)) ' || ',' ||
                                     ' ID_UNIT_MEA_DURATION = decode (' || l_id_unit_mea_duration_n ||
                                     ',0,:ID_UNIT_MEA_DURATION_in, NVL (:ID_UNIT_MEA_DURATION_in, ID_UNIT_MEA_DURATION)) ' || ',' ||
                                     ' DT_END = decode (' || l_dt_end_n || ',0,:DT_END_in, NVL (:DT_END_in, DT_END)) ' || ',' ||
                                     ' DESCRIPTION = decode (' || l_description_n ||
                                     ',0,:DESCRIPTION_in, NVL (:DESCRIPTION_in, DESCRIPTION)) ' || ',' ||
                                     ' EXEC_NUMBER = decode (' || l_exec_number_n ||
                                     ',0,:EXEC_NUMBER_in, NVL (:EXEC_NUMBER_in, EXEC_NUMBER)) ' || ',' ||
                                     ' CREATE_USER = decode (' || l_create_user_n ||
                                     ',0,:CREATE_USER_in, NVL (:CREATE_USER_in, CREATE_USER)) ' || ',' ||
                                     ' CREATE_TIME = decode (' || l_create_time_n ||
                                     ',0,:CREATE_TIME_in, NVL (:CREATE_TIME_in, CREATE_TIME)) ' || ',' ||
                                     ' CREATE_INSTITUTION = decode (' || l_create_institution_n ||
                                     ',0,:CREATE_INSTITUTION_in, NVL (:CREATE_INSTITUTION_in, CREATE_INSTITUTION)) ' || ',' ||
                                     ' UPDATE_USER = decode (' || l_update_user_n ||
                                     ',0,:UPDATE_USER_in, NVL (:UPDATE_USER_in, UPDATE_USER)) ' || ',' ||
                                     ' UPDATE_TIME = decode (' || l_update_time_n ||
                                     ',0,:UPDATE_TIME_in, NVL (:UPDATE_TIME_in, UPDATE_TIME)) ' || ',' ||
                                     ' UPDATE_INSTITUTION = decode (' || l_update_institution_n ||
                                     ',0,:UPDATE_INSTITUTION_in, NVL (:UPDATE_INSTITUTION_in, UPDATE_INSTITUTION)) ' || ',' ||
                                     ' ID_EPIS_DOCUMENTATION = decode (' || l_id_epis_documentation_n ||
                                     ',0,:ID_EPIS_DOCUMENTATION_in, NVL (:ID_EPIS_DOCUMENTATION_in, ID_EPIS_DOCUMENTATION)) ' || ',' ||
                                     ' ID_PROF_MATCH = decode (' || l_id_prof_match_n ||
                                     ',0,:ID_PROF_MATCH_in, NVL (:ID_PROF_MATCH_in, ID_PROF_MATCH)) ' || ',' ||
                                     ' DT_MATCH_TSTZ = decode (' || l_dt_match_tstz_n ||
                                     ',0,:DT_MATCH_TSTZ_in, NVL (:DT_MATCH_TSTZ_in, DT_MATCH_TSTZ)) ' || ',' ||
                                     ' ID_PROFESSIONAL = decode (' || l_id_professional_n ||
                                     ',0,:ID_PROFESSIONAL_in, NVL (:ID_PROFESSIONAL_in, ID_PROFESSIONAL)) ' || ',' ||
                                     ' DT_BP_EXECUTION_TSTZ = decode (' || l_dt_bp_execution_tstz_n ||
                                     ',0,:DT_BP_EXECUTION_TSTZ_in, NVL (:DT_BP_EXECUTION_TSTZ_in, DT_BP_EXECUTION_TSTZ)) ' || ',' ||
                                     ' FLG_COMPATIBILITY = decode (' || l_flg_compatibility_n ||
                                     ',0,:FLG_COMPATIBILITY_in, NVL (:FLG_COMPATIBILITY_in, FLG_COMPATIBILITY)) ' || ',' ||
                                     ' NOTES_COMPATIBILITY = decode (' || l_notes_compatibility_n ||
                                     ',0,:NOTES_COMPATIBILITY_in, NVL (:NOTES_COMPATIBILITY_in, NOTES_COMPATIBILITY)) ' || ',' ||
                                     ' FLG_CONDITION = decode (' || l_flg_condition_n ||
                                     ',0,:FLG_CONDITION_in, NVL (:FLG_CONDITION_in, FLG_CONDITION)) ' || ',' ||
                                     ' FLG_LAB_MOTHER = decode (' || l_flg_lab_mother_n ||
                                     ',0,:FLG_LAB_MOTHER_in, NVL (:FLG_LAB_MOTHER_in, FLG_LAB_MOTHER)) ' || ',' ||
                                     ' ID_ANALYSIS_REQ_DET = decode (' || l_id_analysis_req_det_n ||
                                     ',0,:ID_ANALYSIS_REQ_DET_in, NVL (:ID_ANALYSIS_REQ_DET_in, ID_ANALYSIS_REQ_DET)) ' ||
                                     ' where ' || nvl(where_in, '(1=1)') ||
                                     ' RETURNING ROWID BULK COLLECT INTO :l_rows_out';
        EXECUTE IMMEDIATE 'BEGIN ' || l_sql || '; END;'
            USING IN id_blood_product_det_in, action_in, id_action_reason_in, notes_reason_in, id_prof_performed_in, dt_execution_in, dt_begin_in, duration_in, id_unit_mea_duration_in, dt_end_in, description_in, exec_number_in, create_user_in, create_time_in, create_institution_in, update_user_in, update_time_in, update_institution_in, id_epis_documentation_in, id_prof_match_in, dt_match_tstz_in, id_professional_in, dt_bp_execution_tstz_in, flg_compatibility_in, notes_compatibility_in, flg_condition_in, flg_lab_mother_in, id_analysis_req_det_in, OUT l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        id_blood_product_det_in   IN blood_product_execution.id_blood_product_det%TYPE DEFAULT NULL,
        id_blood_product_det_nin  IN BOOLEAN := TRUE,
        action_in                 IN blood_product_execution.action%TYPE DEFAULT NULL,
        action_nin                IN BOOLEAN := TRUE,
        id_action_reason_in       IN blood_product_execution.id_action_reason%TYPE DEFAULT NULL,
        id_action_reason_nin      IN BOOLEAN := TRUE,
        notes_reason_in           IN blood_product_execution.notes_reason%TYPE DEFAULT NULL,
        notes_reason_nin          IN BOOLEAN := TRUE,
        id_prof_performed_in      IN blood_product_execution.id_prof_performed%TYPE DEFAULT NULL,
        id_prof_performed_nin     IN BOOLEAN := TRUE,
        dt_execution_in           IN blood_product_execution.dt_execution%TYPE DEFAULT NULL,
        dt_execution_nin          IN BOOLEAN := TRUE,
        dt_begin_in               IN blood_product_execution.dt_begin%TYPE DEFAULT NULL,
        dt_begin_nin              IN BOOLEAN := TRUE,
        duration_in               IN blood_product_execution.duration%TYPE DEFAULT NULL,
        duration_nin              IN BOOLEAN := TRUE,
        id_unit_mea_duration_in   IN blood_product_execution.id_unit_mea_duration%TYPE DEFAULT NULL,
        id_unit_mea_duration_nin  IN BOOLEAN := TRUE,
        dt_end_in                 IN blood_product_execution.dt_end%TYPE DEFAULT NULL,
        dt_end_nin                IN BOOLEAN := TRUE,
        description_in            IN blood_product_execution.description%TYPE DEFAULT NULL,
        description_nin           IN BOOLEAN := TRUE,
        exec_number_in            IN blood_product_execution.exec_number%TYPE DEFAULT NULL,
        exec_number_nin           IN BOOLEAN := TRUE,
        create_user_in            IN blood_product_execution.create_user%TYPE DEFAULT NULL,
        create_user_nin           IN BOOLEAN := TRUE,
        create_time_in            IN blood_product_execution.create_time%TYPE DEFAULT NULL,
        create_time_nin           IN BOOLEAN := TRUE,
        create_institution_in     IN blood_product_execution.create_institution%TYPE DEFAULT NULL,
        create_institution_nin    IN BOOLEAN := TRUE,
        update_user_in            IN blood_product_execution.update_user%TYPE DEFAULT NULL,
        update_user_nin           IN BOOLEAN := TRUE,
        update_time_in            IN blood_product_execution.update_time%TYPE DEFAULT NULL,
        update_time_nin           IN BOOLEAN := TRUE,
        update_institution_in     IN blood_product_execution.update_institution%TYPE DEFAULT NULL,
        update_institution_nin    IN BOOLEAN := TRUE,
        id_epis_documentation_in  IN blood_product_execution.id_epis_documentation%TYPE DEFAULT NULL,
        id_epis_documentation_nin IN BOOLEAN := TRUE,
        id_prof_match_in          IN blood_product_execution.id_prof_match%TYPE DEFAULT NULL,
        id_prof_match_nin         IN BOOLEAN := TRUE,
        dt_match_tstz_in          IN blood_product_execution.dt_match_tstz%TYPE DEFAULT NULL,
        dt_match_tstz_nin         IN BOOLEAN := TRUE,
        id_professional_in        IN blood_product_execution.id_professional%TYPE DEFAULT NULL,
        id_professional_nin       IN BOOLEAN := TRUE,
        dt_bp_execution_tstz_in   IN blood_product_execution.dt_bp_execution_tstz%TYPE DEFAULT NULL,
        dt_bp_execution_tstz_nin  IN BOOLEAN := TRUE,
        flg_compatibility_in      IN blood_product_execution.flg_compatibility%TYPE DEFAULT NULL,
        flg_compatibility_nin     IN BOOLEAN := TRUE,
        notes_compatibility_in    IN blood_product_execution.notes_compatibility%TYPE DEFAULT NULL,
        notes_compatibility_nin   IN BOOLEAN := TRUE,
        flg_condition_in          IN blood_product_execution.flg_condition%TYPE DEFAULT NULL,
        flg_condition_nin         IN BOOLEAN := TRUE,
        flg_lab_mother_in         IN blood_product_execution.flg_lab_mother%TYPE DEFAULT NULL,
        flg_lab_mother_nin        IN BOOLEAN := TRUE,
        id_analysis_req_det_in    IN blood_product_execution.id_analysis_req_det%TYPE DEFAULT NULL,
        id_analysis_req_det_nin   IN BOOLEAN := TRUE,
        where_in                  IN VARCHAR2,
        handle_error_in           IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_blood_product_det_in   => id_blood_product_det_in,
            id_blood_product_det_nin  => id_blood_product_det_nin,
            action_in                 => action_in,
            action_nin                => action_nin,
            id_action_reason_in       => id_action_reason_in,
            id_action_reason_nin      => id_action_reason_nin,
            notes_reason_in           => notes_reason_in,
            notes_reason_nin          => notes_reason_nin,
            id_prof_performed_in      => id_prof_performed_in,
            id_prof_performed_nin     => id_prof_performed_nin,
            dt_execution_in           => dt_execution_in,
            dt_execution_nin          => dt_execution_nin,
            dt_begin_in               => dt_begin_in,
            dt_begin_nin              => dt_begin_nin,
            duration_in               => duration_in,
            duration_nin              => duration_nin,
            id_unit_mea_duration_in   => id_unit_mea_duration_in,
            id_unit_mea_duration_nin  => id_unit_mea_duration_nin,
            dt_end_in                 => dt_end_in,
            dt_end_nin                => dt_end_nin,
            description_in            => description_in,
            description_nin           => description_nin,
            exec_number_in            => exec_number_in,
            exec_number_nin           => exec_number_nin,
            create_user_in            => create_user_in,
            create_user_nin           => create_user_nin,
            create_time_in            => create_time_in,
            create_time_nin           => create_time_nin,
            create_institution_in     => create_institution_in,
            create_institution_nin    => create_institution_nin,
            update_user_in            => update_user_in,
            update_user_nin           => update_user_nin,
            update_time_in            => update_time_in,
            update_time_nin           => update_time_nin,
            update_institution_in     => update_institution_in,
            update_institution_nin    => update_institution_nin,
            id_epis_documentation_in  => id_epis_documentation_in,
            id_epis_documentation_nin => id_epis_documentation_nin,
            id_prof_match_in          => id_prof_match_in,
            id_prof_match_nin         => id_prof_match_nin,
            dt_match_tstz_in          => dt_match_tstz_in,
            dt_match_tstz_nin         => dt_match_tstz_nin,
            id_professional_in        => id_professional_in,
            id_professional_nin       => id_professional_nin,
            dt_bp_execution_tstz_in   => dt_bp_execution_tstz_in,
            dt_bp_execution_tstz_nin  => dt_bp_execution_tstz_nin,
            flg_compatibility_in      => flg_compatibility_in,
            flg_compatibility_nin     => flg_compatibility_nin,
            notes_compatibility_in    => notes_compatibility_in,
            notes_compatibility_nin   => notes_compatibility_nin,
            flg_condition_in          => flg_condition_in,
            flg_condition_nin         => flg_condition_nin,
            flg_lab_mother_in         => flg_lab_mother_in,
            flg_lab_mother_nin        => flg_lab_mother_nin,
            id_analysis_req_det_in    => id_analysis_req_det_in,
            id_analysis_req_det_nin   => id_analysis_req_det_nin,
            where_in                  => where_in,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
    END upd;

    --Update/insert columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_blood_product_execution_in IN blood_product_execution.id_blood_product_execution%TYPE,
        id_blood_product_det_in       IN blood_product_execution.id_blood_product_det%TYPE DEFAULT NULL,
        action_in                     IN blood_product_execution.action%TYPE DEFAULT NULL,
        id_action_reason_in           IN blood_product_execution.id_action_reason%TYPE DEFAULT NULL,
        notes_reason_in               IN blood_product_execution.notes_reason%TYPE DEFAULT NULL,
        id_prof_performed_in          IN blood_product_execution.id_prof_performed%TYPE DEFAULT NULL,
        dt_execution_in               IN blood_product_execution.dt_execution%TYPE DEFAULT NULL,
        dt_begin_in                   IN blood_product_execution.dt_begin%TYPE DEFAULT NULL,
        duration_in                   IN blood_product_execution.duration%TYPE DEFAULT NULL,
        id_unit_mea_duration_in       IN blood_product_execution.id_unit_mea_duration%TYPE DEFAULT NULL,
        dt_end_in                     IN blood_product_execution.dt_end%TYPE DEFAULT NULL,
        description_in                IN blood_product_execution.description%TYPE DEFAULT NULL,
        exec_number_in                IN blood_product_execution.exec_number%TYPE DEFAULT NULL,
        create_user_in                IN blood_product_execution.create_user%TYPE DEFAULT NULL,
        create_time_in                IN blood_product_execution.create_time%TYPE DEFAULT NULL,
        create_institution_in         IN blood_product_execution.create_institution%TYPE DEFAULT NULL,
        update_user_in                IN blood_product_execution.update_user%TYPE DEFAULT NULL,
        update_time_in                IN blood_product_execution.update_time%TYPE DEFAULT NULL,
        update_institution_in         IN blood_product_execution.update_institution%TYPE DEFAULT NULL,
        id_epis_documentation_in      IN blood_product_execution.id_epis_documentation%TYPE DEFAULT NULL,
        id_prof_match_in              IN blood_product_execution.id_prof_match%TYPE DEFAULT NULL,
        dt_match_tstz_in              IN blood_product_execution.dt_match_tstz%TYPE DEFAULT NULL,
        id_professional_in            IN blood_product_execution.id_professional%TYPE DEFAULT NULL,
        dt_bp_execution_tstz_in       IN blood_product_execution.dt_bp_execution_tstz%TYPE DEFAULT NULL,
        flg_compatibility_in          IN blood_product_execution.flg_compatibility%TYPE DEFAULT NULL,
        notes_compatibility_in        IN blood_product_execution.notes_compatibility%TYPE DEFAULT NULL,
        flg_condition_in              IN blood_product_execution.flg_condition%TYPE DEFAULT NULL,
        flg_lab_mother_in             IN blood_product_execution.flg_lab_mother%TYPE DEFAULT NULL,
        id_analysis_req_det_in        IN blood_product_execution.id_analysis_req_det%TYPE DEFAULT NULL,
        handle_error_in               IN BOOLEAN := TRUE,
        rows_out                      IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_blood_product_execution_in => id_blood_product_execution_in,
            id_blood_product_det_in       => id_blood_product_det_in,
            action_in                     => action_in,
            id_action_reason_in           => id_action_reason_in,
            notes_reason_in               => notes_reason_in,
            id_prof_performed_in          => id_prof_performed_in,
            dt_execution_in               => dt_execution_in,
            dt_begin_in                   => dt_begin_in,
            duration_in                   => duration_in,
            id_unit_mea_duration_in       => id_unit_mea_duration_in,
            dt_end_in                     => dt_end_in,
            description_in                => description_in,
            exec_number_in                => exec_number_in,
            create_user_in                => create_user_in,
            create_time_in                => create_time_in,
            create_institution_in         => create_institution_in,
            update_user_in                => update_user_in,
            update_time_in                => update_time_in,
            update_institution_in         => update_institution_in,
            id_epis_documentation_in      => id_epis_documentation_in,
            id_prof_match_in              => id_prof_match_in,
            dt_match_tstz_in              => dt_match_tstz_in,
            id_professional_in            => id_professional_in,
            dt_bp_execution_tstz_in       => dt_bp_execution_tstz_in,
            flg_compatibility_in          => flg_compatibility_in,
            notes_compatibility_in        => notes_compatibility_in,
            flg_condition_in              => flg_condition_in,
            flg_lab_mother_in             => flg_lab_mother_in,
            id_analysis_req_det_in        => id_analysis_req_det_in,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
        IF SQL%ROWCOUNT = 0
        THEN
            ins(id_blood_product_execution_in => id_blood_product_execution_in,
                id_blood_product_det_in       => id_blood_product_det_in,
                action_in                     => action_in,
                id_action_reason_in           => id_action_reason_in,
                notes_reason_in               => notes_reason_in,
                id_prof_performed_in          => id_prof_performed_in,
                dt_execution_in               => dt_execution_in,
                dt_begin_in                   => dt_begin_in,
                duration_in                   => duration_in,
                id_unit_mea_duration_in       => id_unit_mea_duration_in,
                dt_end_in                     => dt_end_in,
                description_in                => description_in,
                exec_number_in                => exec_number_in,
                create_user_in                => create_user_in,
                create_time_in                => create_time_in,
                create_institution_in         => create_institution_in,
                update_user_in                => update_user_in,
                update_time_in                => update_time_in,
                update_institution_in         => update_institution_in,
                id_epis_documentation_in      => id_epis_documentation_in,
                id_prof_match_in              => id_prof_match_in,
                dt_match_tstz_in              => dt_match_tstz_in,
                id_professional_in            => id_professional_in,
                dt_bp_execution_tstz_in       => dt_bp_execution_tstz_in,
                flg_compatibility_in          => flg_compatibility_in,
                notes_compatibility_in        => notes_compatibility_in,
                flg_condition_in              => flg_condition_in,
                flg_lab_mother_in             => flg_lab_mother_in,
                id_analysis_req_det_in        => id_analysis_req_det_in,
                handle_error_in               => handle_error_in,
                rows_out                      => rows_out);
        END IF;
    END upd_ins;

    --Update/insert columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_blood_product_execution_in IN blood_product_execution.id_blood_product_execution%TYPE,
        id_blood_product_det_in       IN blood_product_execution.id_blood_product_det%TYPE DEFAULT NULL,
        action_in                     IN blood_product_execution.action%TYPE DEFAULT NULL,
        id_action_reason_in           IN blood_product_execution.id_action_reason%TYPE DEFAULT NULL,
        notes_reason_in               IN blood_product_execution.notes_reason%TYPE DEFAULT NULL,
        id_prof_performed_in          IN blood_product_execution.id_prof_performed%TYPE DEFAULT NULL,
        dt_execution_in               IN blood_product_execution.dt_execution%TYPE DEFAULT NULL,
        dt_begin_in                   IN blood_product_execution.dt_begin%TYPE DEFAULT NULL,
        duration_in                   IN blood_product_execution.duration%TYPE DEFAULT NULL,
        id_unit_mea_duration_in       IN blood_product_execution.id_unit_mea_duration%TYPE DEFAULT NULL,
        dt_end_in                     IN blood_product_execution.dt_end%TYPE DEFAULT NULL,
        description_in                IN blood_product_execution.description%TYPE DEFAULT NULL,
        exec_number_in                IN blood_product_execution.exec_number%TYPE DEFAULT NULL,
        create_user_in                IN blood_product_execution.create_user%TYPE DEFAULT NULL,
        create_time_in                IN blood_product_execution.create_time%TYPE DEFAULT NULL,
        create_institution_in         IN blood_product_execution.create_institution%TYPE DEFAULT NULL,
        update_user_in                IN blood_product_execution.update_user%TYPE DEFAULT NULL,
        update_time_in                IN blood_product_execution.update_time%TYPE DEFAULT NULL,
        update_institution_in         IN blood_product_execution.update_institution%TYPE DEFAULT NULL,
        id_epis_documentation_in      IN blood_product_execution.id_epis_documentation%TYPE DEFAULT NULL,
        id_prof_match_in              IN blood_product_execution.id_prof_match%TYPE DEFAULT NULL,
        dt_match_tstz_in              IN blood_product_execution.dt_match_tstz%TYPE DEFAULT NULL,
        id_professional_in            IN blood_product_execution.id_professional%TYPE DEFAULT NULL,
        dt_bp_execution_tstz_in       IN blood_product_execution.dt_bp_execution_tstz%TYPE DEFAULT NULL,
        flg_compatibility_in          IN blood_product_execution.flg_compatibility%TYPE DEFAULT NULL,
        notes_compatibility_in        IN blood_product_execution.notes_compatibility%TYPE DEFAULT NULL,
        flg_condition_in              IN blood_product_execution.flg_condition%TYPE DEFAULT NULL,
        flg_lab_mother_in             IN blood_product_execution.flg_lab_mother%TYPE DEFAULT NULL,
        id_analysis_req_det_in        IN blood_product_execution.id_analysis_req_det%TYPE DEFAULT NULL,
        handle_error_in               IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd_ins(id_blood_product_execution_in,
                id_blood_product_det_in,
                action_in,
                id_action_reason_in,
                notes_reason_in,
                id_prof_performed_in,
                dt_execution_in,
                dt_begin_in,
                duration_in,
                id_unit_mea_duration_in,
                dt_end_in,
                description_in,
                exec_number_in,
                create_user_in,
                create_time_in,
                create_institution_in,
                update_user_in,
                update_time_in,
                update_institution_in,
                id_epis_documentation_in,
                id_prof_match_in,
                dt_match_tstz_in,
                id_professional_in,
                dt_bp_execution_tstz_in,
                flg_compatibility_in,
                notes_compatibility_in,
                flg_condition_in,
                flg_lab_mother_in,
                id_analysis_req_det_in,
                handle_error_in,
                rows_out);
    END upd_ins;

    --Update by record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN blood_product_execution%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_blood_product_execution_in => rec_in.id_blood_product_execution,
            id_blood_product_det_in       => rec_in.id_blood_product_det,
            action_in                     => rec_in.action,
            id_action_reason_in           => rec_in.id_action_reason,
            notes_reason_in               => rec_in.notes_reason,
            id_prof_performed_in          => rec_in.id_prof_performed,
            dt_execution_in               => rec_in.dt_execution,
            dt_begin_in                   => rec_in.dt_begin,
            duration_in                   => rec_in.duration,
            id_unit_mea_duration_in       => rec_in.id_unit_mea_duration,
            dt_end_in                     => rec_in.dt_end,
            description_in                => rec_in.description,
            exec_number_in                => rec_in.exec_number,
            create_user_in                => rec_in.create_user,
            create_time_in                => rec_in.create_time,
            create_institution_in         => rec_in.create_institution,
            update_user_in                => rec_in.update_user,
            update_time_in                => rec_in.update_time,
            update_institution_in         => rec_in.update_institution,
            id_epis_documentation_in      => rec_in.id_epis_documentation,
            id_prof_match_in              => rec_in.id_prof_match,
            dt_match_tstz_in              => rec_in.dt_match_tstz,
            id_professional_in            => rec_in.id_professional,
            dt_bp_execution_tstz_in       => rec_in.dt_bp_execution_tstz,
            flg_compatibility_in          => rec_in.flg_compatibility,
            notes_compatibility_in        => rec_in.notes_compatibility,
            flg_condition_in              => rec_in.flg_condition,
            flg_lab_mother_in             => rec_in.flg_lab_mother,
            id_analysis_req_det_in        => rec_in.id_analysis_req_det,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
    END upd;

    --Update by record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN blood_product_execution%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_blood_product_execution_in => rec_in.id_blood_product_execution,
            id_blood_product_det_in       => rec_in.id_blood_product_det,
            action_in                     => rec_in.action,
            id_action_reason_in           => rec_in.id_action_reason,
            notes_reason_in               => rec_in.notes_reason,
            id_prof_performed_in          => rec_in.id_prof_performed,
            dt_execution_in               => rec_in.dt_execution,
            dt_begin_in                   => rec_in.dt_begin,
            duration_in                   => rec_in.duration,
            id_unit_mea_duration_in       => rec_in.id_unit_mea_duration,
            dt_end_in                     => rec_in.dt_end,
            description_in                => rec_in.description,
            exec_number_in                => rec_in.exec_number,
            create_user_in                => rec_in.create_user,
            create_time_in                => rec_in.create_time,
            create_institution_in         => rec_in.create_institution,
            update_user_in                => rec_in.update_user,
            update_time_in                => rec_in.update_time,
            update_institution_in         => rec_in.update_institution,
            id_epis_documentation_in      => rec_in.id_epis_documentation,
            id_prof_match_in              => rec_in.id_prof_match,
            dt_match_tstz_in              => rec_in.dt_match_tstz,
            id_professional_in            => rec_in.id_professional,
            dt_bp_execution_tstz_in       => rec_in.dt_bp_execution_tstz,
            flg_compatibility_in          => rec_in.flg_compatibility,
            notes_compatibility_in        => rec_in.notes_compatibility,
            flg_condition_in              => rec_in.flg_condition,
            flg_lab_mother_in             => rec_in.flg_lab_mother,
            id_analysis_req_det_in        => rec_in.id_analysis_req_det,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
    END upd;

    --Update with collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN blood_product_execution_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    ) IS
        l_id_blood_product_execution id_blood_product_execution_cc;
        l_id_blood_product_det       id_blood_product_det_cc;
        l_action                     action_cc;
        l_id_action_reason           id_action_reason_cc;
        l_notes_reason               notes_reason_cc;
        l_id_prof_performed          id_prof_performed_cc;
        l_dt_execution               dt_execution_cc;
        l_dt_begin                   dt_begin_cc;
        l_duration                   duration_cc;
        l_id_unit_mea_duration       id_unit_mea_duration_cc;
        l_dt_end                     dt_end_cc;
        l_description                description_cc;
        l_exec_number                exec_number_cc;
        l_create_user                create_user_cc;
        l_create_time                create_time_cc;
        l_create_institution         create_institution_cc;
        l_update_user                update_user_cc;
        l_update_time                update_time_cc;
        l_update_institution         update_institution_cc;
        l_id_epis_documentation      id_epis_documentation_cc;
        l_id_prof_match              id_prof_match_cc;
        l_dt_match_tstz              dt_match_tstz_cc;
        l_id_professional            id_professional_cc;
        l_dt_bp_execution_tstz       dt_bp_execution_tstz_cc;
        l_flg_compatibility          flg_compatibility_cc;
        l_notes_compatibility        notes_compatibility_cc;
        l_flg_condition              flg_condition_cc;
        l_flg_lab_mother             flg_lab_mother_cc;
        l_id_analysis_req_det        id_analysis_req_det_cc;
    BEGIN
        FOR i IN col_in.first .. col_in.last
        LOOP
            l_id_blood_product_execution(i) := col_in(i).id_blood_product_execution;
            l_id_blood_product_det(i) := col_in(i).id_blood_product_det;
            l_action(i) := col_in(i).action;
            l_id_action_reason(i) := col_in(i).id_action_reason;
            l_notes_reason(i) := col_in(i).notes_reason;
            l_id_prof_performed(i) := col_in(i).id_prof_performed;
            l_dt_execution(i) := col_in(i).dt_execution;
            l_dt_begin(i) := col_in(i).dt_begin;
            l_duration(i) := col_in(i).duration;
            l_id_unit_mea_duration(i) := col_in(i).id_unit_mea_duration;
            l_dt_end(i) := col_in(i).dt_end;
            l_description(i) := col_in(i).description;
            l_exec_number(i) := col_in(i).exec_number;
            l_create_user(i) := col_in(i).create_user;
            l_create_time(i) := col_in(i).create_time;
            l_create_institution(i) := col_in(i).create_institution;
            l_update_user(i) := col_in(i).update_user;
            l_update_time(i) := col_in(i).update_time;
            l_update_institution(i) := col_in(i).update_institution;
            l_id_epis_documentation(i) := col_in(i).id_epis_documentation;
            l_id_prof_match(i) := col_in(i).id_prof_match;
            l_dt_match_tstz(i) := col_in(i).dt_match_tstz;
            l_id_professional(i) := col_in(i).id_professional;
            l_dt_bp_execution_tstz(i) := col_in(i).dt_bp_execution_tstz;
            l_flg_compatibility(i) := col_in(i).flg_compatibility;
            l_notes_compatibility(i) := col_in(i).notes_compatibility;
            l_flg_condition(i) := col_in(i).flg_condition;
            l_flg_lab_mother(i) := col_in(i).flg_lab_mother;
            l_id_analysis_req_det(i) := col_in(i).id_analysis_req_det;
        END LOOP;
        IF nvl(ignore_if_null_in, FALSE)
        THEN
            -- Set any columns to their current values
            -- if incoming value is NULL.
            -- Put WHEN clause on column-level triggers!
            FORALL i IN col_in.first .. col_in.last
                UPDATE blood_product_execution
                   SET id_blood_product_det  = nvl(l_id_blood_product_det(i), id_blood_product_det),
                       action                = nvl(l_action(i), action),
                       id_action_reason      = nvl(l_id_action_reason(i), id_action_reason),
                       notes_reason          = nvl(l_notes_reason(i), notes_reason),
                       id_prof_performed     = nvl(l_id_prof_performed(i), id_prof_performed),
                       dt_execution          = nvl(l_dt_execution(i), dt_execution),
                       dt_begin              = nvl(l_dt_begin(i), dt_begin),
                       duration              = nvl(l_duration(i), duration),
                       id_unit_mea_duration  = nvl(l_id_unit_mea_duration(i), id_unit_mea_duration),
                       dt_end                = nvl(l_dt_end(i), dt_end),
                       description           = nvl(l_description(i), description),
                       exec_number           = nvl(l_exec_number(i), exec_number),
                       create_user           = nvl(l_create_user(i), create_user),
                       create_time           = nvl(l_create_time(i), create_time),
                       create_institution    = nvl(l_create_institution(i), create_institution),
                       update_user           = nvl(l_update_user(i), update_user),
                       update_time           = nvl(l_update_time(i), update_time),
                       update_institution    = nvl(l_update_institution(i), update_institution),
                       id_epis_documentation = nvl(l_id_epis_documentation(i), id_epis_documentation),
                       id_prof_match         = nvl(l_id_prof_match(i), id_prof_match),
                       dt_match_tstz         = nvl(l_dt_match_tstz(i), dt_match_tstz),
                       id_professional       = nvl(l_id_professional(i), id_professional),
                       dt_bp_execution_tstz  = nvl(l_dt_bp_execution_tstz(i), dt_bp_execution_tstz),
                       flg_compatibility     = nvl(l_flg_compatibility(i), flg_compatibility),
                       notes_compatibility   = nvl(l_notes_compatibility(i), notes_compatibility),
                       flg_condition         = nvl(l_flg_condition(i), flg_condition),
                       flg_lab_mother        = nvl(l_flg_lab_mother(i), flg_lab_mother),
                       id_analysis_req_det   = nvl(l_id_analysis_req_det(i), id_analysis_req_det)
                 WHERE id_blood_product_execution = l_id_blood_product_execution(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        ELSE
            FORALL i IN col_in.first .. col_in.last
                UPDATE blood_product_execution
                   SET id_blood_product_det  = l_id_blood_product_det(i),
                       action                = l_action(i),
                       id_action_reason      = l_id_action_reason(i),
                       notes_reason          = l_notes_reason(i),
                       id_prof_performed     = l_id_prof_performed(i),
                       dt_execution          = l_dt_execution(i),
                       dt_begin              = l_dt_begin(i),
                       duration              = l_duration(i),
                       id_unit_mea_duration  = l_id_unit_mea_duration(i),
                       dt_end                = l_dt_end(i),
                       description           = l_description(i),
                       exec_number           = l_exec_number(i),
                       create_user           = l_create_user(i),
                       create_time           = l_create_time(i),
                       create_institution    = l_create_institution(i),
                       update_user           = l_update_user(i),
                       update_time           = l_update_time(i),
                       update_institution    = l_update_institution(i),
                       id_epis_documentation = l_id_epis_documentation(i),
                       id_prof_match         = l_id_prof_match(i),
                       dt_match_tstz         = l_dt_match_tstz(i),
                       id_professional       = l_id_professional(i),
                       dt_bp_execution_tstz  = l_dt_bp_execution_tstz(i),
                       flg_compatibility     = l_flg_compatibility(i),
                       notes_compatibility   = l_notes_compatibility(i),
                       flg_condition         = l_flg_condition(i),
                       flg_lab_mother        = l_flg_lab_mother(i),
                       id_analysis_req_det   = l_id_analysis_req_det(i)
                 WHERE id_blood_product_execution = l_id_blood_product_execution(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update with collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN blood_product_execution_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(col_in, ignore_if_null_in, handle_error_in, rows_out);
    END upd;

    --Dynamic update string
    FUNCTION dynupdstr
    (
        colname_in IN all_tab_columns.column_name%TYPE,
        where_in   IN VARCHAR2 := NULL
    ) RETURN VARCHAR2 IS
    BEGIN
        RETURN 'BEGIN UPDATE blood_product_execution
SET ' || colname_in || ' = :value
 WHERE ' || nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;';
    END dynupdstr;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (with rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN UPDATE blood_product_execution
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    END increment_onecol;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (without rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        EXECUTE IMMEDIATE 'UPDATE blood_product_execution
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1');
    END increment_onecol;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_blood_product_execution_in IN blood_product_execution.id_blood_product_execution%TYPE,
        handle_error_in               IN BOOLEAN := TRUE,
        rows_out                      OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM blood_product_execution
         WHERE id_blood_product_execution = id_blood_product_execution_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_blood_product_execution_in IN blood_product_execution.id_blood_product_execution%TYPE,
        handle_error_in               IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del(id_blood_product_execution_in => id_blood_product_execution_in,
            handle_error_in               => handle_error_in,
            rows_out                      => rows_out);
    END del;

    -- Delete all rows for this BPDE_ID_PROF_MATCH_FK foreign key value
    PROCEDURE del_bpde_id_prof_match_fk
    (
        id_prof_match_in IN blood_product_execution.id_prof_match%TYPE,
        handle_error_in  IN BOOLEAN := TRUE,
        rows_out         OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM blood_product_execution
         WHERE id_prof_match = id_prof_match_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_bpde_id_prof_match_fk;

    -- Delete all rows for this BPD_ID_PROFESSIONAL_FK foreign key value
    PROCEDURE del_bpd_id_professional_fk
    (
        id_professional_in IN blood_product_execution.id_professional%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM blood_product_execution
         WHERE id_professional = id_professional_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_bpd_id_professional_fk;

    -- Delete all rows for this BPD_UMEA_DURATION_FK foreign key value
    PROCEDURE del_bpd_umea_duration_fk
    (
        id_unit_mea_duration_in IN blood_product_execution.id_unit_mea_duration%TYPE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM blood_product_execution
         WHERE id_unit_mea_duration = id_unit_mea_duration_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_bpd_umea_duration_fk;

    -- Delete all rows for this BPE_DET_FK foreign key value
    PROCEDURE del_bpe_det_fk
    (
        id_blood_product_det_in IN blood_product_execution.id_blood_product_det%TYPE,
        handle_error_in         IN BOOLEAN := TRUE,
        rows_out                OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM blood_product_execution
         WHERE id_blood_product_det = id_blood_product_det_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_bpe_det_fk;

    -- Delete all rows for this BPE_EPIS_DOC_FK foreign key value
    PROCEDURE del_bpe_epis_doc_fk
    (
        id_epis_documentation_in IN blood_product_execution.id_epis_documentation%TYPE,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM blood_product_execution
         WHERE id_epis_documentation = id_epis_documentation_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_bpe_epis_doc_fk;

    -- Delete all rows for this BPDE_ID_PROF_MATCH_FK foreign key value
    PROCEDURE del_bpde_id_prof_match_fk
    (
        id_prof_match_in IN blood_product_execution.id_prof_match%TYPE,
        handle_error_in  IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_bpde_id_prof_match_fk(id_prof_match_in => id_prof_match_in,
                                  handle_error_in  => handle_error_in,
                                  rows_out         => rows_out);
    END del_bpde_id_prof_match_fk;

    -- Delete all rows for this BPD_ID_PROFESSIONAL_FK foreign key value
    PROCEDURE del_bpd_id_professional_fk
    (
        id_professional_in IN blood_product_execution.id_professional%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_bpd_id_professional_fk(id_professional_in => id_professional_in,
                                   handle_error_in    => handle_error_in,
                                   rows_out           => rows_out);
    END del_bpd_id_professional_fk;

    -- Delete all rows for this BPD_UMEA_DURATION_FK foreign key value
    PROCEDURE del_bpd_umea_duration_fk
    (
        id_unit_mea_duration_in IN blood_product_execution.id_unit_mea_duration%TYPE,
        handle_error_in         IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_bpd_umea_duration_fk(id_unit_mea_duration_in => id_unit_mea_duration_in,
                                 handle_error_in         => handle_error_in,
                                 rows_out                => rows_out);
    END del_bpd_umea_duration_fk;

    -- Delete all rows for this BPE_DET_FK foreign key value
    PROCEDURE del_bpe_det_fk
    (
        id_blood_product_det_in IN blood_product_execution.id_blood_product_det%TYPE,
        handle_error_in         IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_bpe_det_fk(id_blood_product_det_in => id_blood_product_det_in,
                       handle_error_in         => handle_error_in,
                       rows_out                => rows_out);
    END del_bpe_det_fk;

    -- Delete all rows for this BPE_EPIS_DOC_FK foreign key value
    PROCEDURE del_bpe_epis_doc_fk
    (
        id_epis_documentation_in IN blood_product_execution.id_epis_documentation%TYPE,
        handle_error_in          IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_bpe_epis_doc_fk(id_epis_documentation_in => id_epis_documentation_in,
                            handle_error_in          => handle_error_in,
                            rows_out                 => rows_out);
    END del_bpe_epis_doc_fk;

    -- Deletions using dynamic SQL
    FUNCTION dyndelstr(where_in IN VARCHAR2) RETURN VARCHAR2 IS
    BEGIN
        IF where_in IS NULL
        THEN
            RETURN 'DELETE FROM blood_product_execution';
        ELSE
            RETURN 'DELETE FROM blood_product_execution WHERE ' || where_in;
        END IF;
    END dyndelstr;
    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyndelstr(where_clause_in) ||
                          ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyndelstr(where_clause_in);
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_error('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(blood_product_execution_inout IN OUT blood_product_execution%ROWTYPE) IS
    BEGIN
        blood_product_execution_inout.id_blood_product_execution := NULL;
        blood_product_execution_inout.id_blood_product_det       := NULL;
        blood_product_execution_inout.action                     := NULL;
        blood_product_execution_inout.id_action_reason           := NULL;
        blood_product_execution_inout.notes_reason               := NULL;
        blood_product_execution_inout.id_prof_performed          := NULL;
        blood_product_execution_inout.dt_execution               := NULL;
        blood_product_execution_inout.dt_begin                   := NULL;
        blood_product_execution_inout.duration                   := NULL;
        blood_product_execution_inout.id_unit_mea_duration       := NULL;
        blood_product_execution_inout.dt_end                     := NULL;
        blood_product_execution_inout.description                := NULL;
        blood_product_execution_inout.exec_number                := NULL;
        blood_product_execution_inout.create_user                := NULL;
        blood_product_execution_inout.create_time                := NULL;
        blood_product_execution_inout.create_institution         := NULL;
        blood_product_execution_inout.update_user                := NULL;
        blood_product_execution_inout.update_time                := NULL;
        blood_product_execution_inout.update_institution         := NULL;
        blood_product_execution_inout.id_epis_documentation      := NULL;
        blood_product_execution_inout.id_prof_match              := NULL;
        blood_product_execution_inout.dt_match_tstz              := NULL;
        blood_product_execution_inout.id_professional            := NULL;
        blood_product_execution_inout.dt_bp_execution_tstz       := NULL;
        blood_product_execution_inout.flg_compatibility          := NULL;
        blood_product_execution_inout.notes_compatibility        := NULL;
        blood_product_execution_inout.flg_condition              := NULL;
        blood_product_execution_inout.flg_lab_mother             := NULL;
        blood_product_execution_inout.id_analysis_req_det        := NULL;
    END initrec;

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN blood_product_execution%ROWTYPE IS
        l_blood_product_execution blood_product_execution%ROWTYPE;
    BEGIN
        RETURN l_blood_product_execution;
    END initrec;

    --get data from rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN blood_product_execution_tc IS
        data blood_product_execution_tc;
    BEGIN
        SELECT *
          BULK COLLECT
          INTO data
          FROM blood_product_execution
         WHERE ROWID IN (SELECT /*+ OPT_ESTIMATE(TABLE t ROWS=1) */
                          *
                           FROM TABLE(rows_in) t);
        RETURN data;
    END get_data_rowid;

    --get data from rowid (pragma autonomous transacion)
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN blood_product_execution_tc IS
        data blood_product_execution_tc;
        PRAGMA AUTONOMOUS_TRANSACTION;
    BEGIN
        data := get_data_rowid(rows_in);
        COMMIT;
        RETURN data;
    
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'get_data_rowid_pat');
            ROLLBACK;
        
    END get_data_rowid_pat;

BEGIN
    NULL;
END ts_blood_product_execution;
/
