/*-- Last Change Revision: $Rev: 1865206 $*/
/*-- Last Change by: $Author: anna.kurowska $*/
/*-- Date of last change: $Date: 2018-09-12 15:10:49 +0100 (qua, 12 set 2018) $*/
CREATE OR REPLACE PACKAGE BODY ts_pn_dblock_ttp_mkt
/*
| Generated by or retrieved - DO NOT MODIFY!
| Created On: 2018-09-11 17:19:35
| Created By: ALERT
*/
 IS

    e_null_column_value EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_null_column_value, -1400);

    e_existing_fky_reference EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_existing_fky_reference, -2266);

    e_check_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_check_constraint_failure, -2290);

    e_no_parent_key EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_no_parent_key, -2291);

    e_child_record_found EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_child_record_found, -2292);

    e_forall_error EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_forall_error, -24381);

    -- Defined for backward compatibilty.
    e_integ_constraint_failure EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_integ_constraint_failure, -2291);

    PROCEDURE ins
    (
        id_pn_soap_block_in      IN pn_dblock_ttp_mkt.id_pn_soap_block%TYPE,
        id_pn_note_type_in       IN pn_dblock_ttp_mkt.id_pn_note_type%TYPE,
        id_task_type_in          IN pn_dblock_ttp_mkt.id_task_type%TYPE,
        id_pn_data_block_in      IN pn_dblock_ttp_mkt.id_pn_data_block%TYPE,
        id_software_in           IN pn_dblock_ttp_mkt.id_software%TYPE,
        id_market_in             IN pn_dblock_ttp_mkt.id_market%TYPE,
        flg_auto_populated_in    IN pn_dblock_ttp_mkt.flg_auto_populated%TYPE DEFAULT 'N',
        create_user_in           IN pn_dblock_ttp_mkt.create_user%TYPE DEFAULT NULL,
        create_time_in           IN pn_dblock_ttp_mkt.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN pn_dblock_ttp_mkt.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN pn_dblock_ttp_mkt.update_user%TYPE DEFAULT NULL,
        update_time_in           IN pn_dblock_ttp_mkt.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN pn_dblock_ttp_mkt.update_institution%TYPE DEFAULT NULL,
        flg_selected_in          IN pn_dblock_ttp_mkt.flg_selected%TYPE DEFAULT 'N',
        flg_import_filter_in     IN pn_dblock_ttp_mkt.flg_import_filter%TYPE DEFAULT 'N',
        last_n_records_nr_in     IN pn_dblock_ttp_mkt.last_n_records_nr%TYPE DEFAULT NULL,
        flg_shortcut_filter_in   IN pn_dblock_ttp_mkt.flg_shortcut_filter%TYPE DEFAULT 'N',
        flg_synchronized_in      IN pn_dblock_ttp_mkt.flg_synchronized%TYPE DEFAULT 'N',
        review_cat_in            IN pn_dblock_ttp_mkt.review_cat%TYPE DEFAULT NULL,
        flg_review_avail_in      IN pn_dblock_ttp_mkt.flg_review_avail%TYPE DEFAULT 'N',
        flg_description_in       IN pn_dblock_ttp_mkt.flg_description%TYPE DEFAULT NULL,
        description_condition_in IN pn_dblock_ttp_mkt.description_condition%TYPE DEFAULT NULL,
        flg_dt_task_in           IN pn_dblock_ttp_mkt.flg_dt_task%TYPE DEFAULT NULL,
        id_task_related_in       IN pn_dblock_ttp_mkt.id_task_related%TYPE DEFAULT NULL,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 OUT table_varchar
    ) IS
    BEGIN
        INSERT INTO pn_dblock_ttp_mkt
            (id_pn_soap_block,
             id_pn_note_type,
             id_task_type,
             id_pn_data_block,
             id_software,
             id_market,
             flg_auto_populated,
             create_user,
             create_time,
             create_institution,
             update_user,
             update_time,
             update_institution,
             flg_selected,
             flg_import_filter,
             last_n_records_nr,
             flg_shortcut_filter,
             flg_synchronized,
             review_cat,
             flg_review_avail,
             flg_description,
             description_condition,
             flg_dt_task,
             id_task_related)
        VALUES
            (id_pn_soap_block_in,
             id_pn_note_type_in,
             id_task_type_in,
             id_pn_data_block_in,
             id_software_in,
             id_market_in,
             flg_auto_populated_in,
             create_user_in,
             create_time_in,
             create_institution_in,
             update_user_in,
             update_time_in,
             update_institution_in,
             flg_selected_in,
             flg_import_filter_in,
             last_n_records_nr_in,
             flg_shortcut_filter_in,
             flg_synchronized_in,
             review_cat_in,
             flg_review_avail_in,
             flg_description_in,
             description_condition_in,
             flg_dt_task_in,
             id_task_related_in)
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    PROCEDURE ins
    (
        id_pn_soap_block_in      IN pn_dblock_ttp_mkt.id_pn_soap_block%TYPE,
        id_pn_note_type_in       IN pn_dblock_ttp_mkt.id_pn_note_type%TYPE,
        id_task_type_in          IN pn_dblock_ttp_mkt.id_task_type%TYPE,
        id_pn_data_block_in      IN pn_dblock_ttp_mkt.id_pn_data_block%TYPE,
        id_software_in           IN pn_dblock_ttp_mkt.id_software%TYPE,
        id_market_in             IN pn_dblock_ttp_mkt.id_market%TYPE,
        flg_auto_populated_in    IN pn_dblock_ttp_mkt.flg_auto_populated%TYPE DEFAULT 'N',
        create_user_in           IN pn_dblock_ttp_mkt.create_user%TYPE DEFAULT NULL,
        create_time_in           IN pn_dblock_ttp_mkt.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN pn_dblock_ttp_mkt.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN pn_dblock_ttp_mkt.update_user%TYPE DEFAULT NULL,
        update_time_in           IN pn_dblock_ttp_mkt.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN pn_dblock_ttp_mkt.update_institution%TYPE DEFAULT NULL,
        flg_selected_in          IN pn_dblock_ttp_mkt.flg_selected%TYPE DEFAULT 'N',
        flg_import_filter_in     IN pn_dblock_ttp_mkt.flg_import_filter%TYPE DEFAULT 'N',
        last_n_records_nr_in     IN pn_dblock_ttp_mkt.last_n_records_nr%TYPE DEFAULT NULL,
        flg_shortcut_filter_in   IN pn_dblock_ttp_mkt.flg_shortcut_filter%TYPE DEFAULT 'N',
        flg_synchronized_in      IN pn_dblock_ttp_mkt.flg_synchronized%TYPE DEFAULT 'N',
        review_cat_in            IN pn_dblock_ttp_mkt.review_cat%TYPE DEFAULT NULL,
        flg_review_avail_in      IN pn_dblock_ttp_mkt.flg_review_avail%TYPE DEFAULT 'N',
        flg_description_in       IN pn_dblock_ttp_mkt.flg_description%TYPE DEFAULT NULL,
        description_condition_in IN pn_dblock_ttp_mkt.description_condition%TYPE DEFAULT NULL,
        flg_dt_task_in           IN pn_dblock_ttp_mkt.flg_dt_task%TYPE DEFAULT NULL,
        id_task_related_in       IN pn_dblock_ttp_mkt.id_task_related%TYPE DEFAULT NULL,
        handle_error_in          IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(id_pn_soap_block_in      => id_pn_soap_block_in,
            id_pn_note_type_in       => id_pn_note_type_in,
            id_task_type_in          => id_task_type_in,
            id_pn_data_block_in      => id_pn_data_block_in,
            id_software_in           => id_software_in,
            id_market_in             => id_market_in,
            flg_auto_populated_in    => flg_auto_populated_in,
            create_user_in           => create_user_in,
            create_time_in           => create_time_in,
            create_institution_in    => create_institution_in,
            update_user_in           => update_user_in,
            update_time_in           => update_time_in,
            update_institution_in    => update_institution_in,
            flg_selected_in          => flg_selected_in,
            flg_import_filter_in     => flg_import_filter_in,
            last_n_records_nr_in     => last_n_records_nr_in,
            flg_shortcut_filter_in   => flg_shortcut_filter_in,
            flg_synchronized_in      => flg_synchronized_in,
            review_cat_in            => review_cat_in,
            flg_review_avail_in      => flg_review_avail_in,
            flg_description_in       => flg_description_in,
            description_condition_in => description_condition_in,
            flg_dt_task_in           => flg_dt_task_in,
            id_task_related_in       => id_task_related_in,
            handle_error_in          => handle_error_in,
            rows_out                 => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN pn_dblock_ttp_mkt%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
        l_rec pn_dblock_ttp_mkt%ROWTYPE := rec_in;
    BEGIN
    
        ins(id_pn_soap_block_in      => l_rec.id_pn_soap_block,
            id_pn_note_type_in       => l_rec.id_pn_note_type,
            id_task_type_in          => l_rec.id_task_type,
            id_pn_data_block_in      => l_rec.id_pn_data_block,
            id_software_in           => l_rec.id_software,
            id_market_in             => l_rec.id_market,
            flg_auto_populated_in    => l_rec.flg_auto_populated,
            create_user_in           => l_rec.create_user,
            create_time_in           => l_rec.create_time,
            create_institution_in    => l_rec.create_institution,
            update_user_in           => l_rec.update_user,
            update_time_in           => l_rec.update_time,
            update_institution_in    => l_rec.update_institution,
            flg_selected_in          => l_rec.flg_selected,
            flg_import_filter_in     => l_rec.flg_import_filter,
            last_n_records_nr_in     => l_rec.last_n_records_nr,
            flg_shortcut_filter_in   => l_rec.flg_shortcut_filter,
            flg_synchronized_in      => l_rec.flg_synchronized,
            review_cat_in            => l_rec.review_cat,
            flg_review_avail_in      => l_rec.flg_review_avail,
            flg_description_in       => l_rec.flg_description,
            description_condition_in => l_rec.description_condition,
            flg_dt_task_in           => l_rec.flg_dt_task,
            id_task_related_in       => l_rec.id_task_related,
            handle_error_in          => handle_error_in,
            rows_out                 => rows_out);
    END ins;

    PROCEDURE ins
    (
        rec_in          IN pn_dblock_ttp_mkt%ROWTYPE,
        gen_pky_in      IN BOOLEAN DEFAULT FALSE,
        sequence_in     IN VARCHAR2 := NULL,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rec_in          => rec_in,
            gen_pky_in      => gen_pky_in,
            sequence_in     => sequence_in,
            handle_error_in => handle_error_in,
            rows_out        => rows_out);
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN pn_dblock_ttp_mkt_tc,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        IF rows_in.count = 0
        THEN
            NULL;
        ELSE
            FORALL indx IN rows_in.first .. rows_in.last SAVE EXCEPTIONS
                INSERT INTO pn_dblock_ttp_mkt
                VALUES rows_in
                    (indx)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END ins;

    -- Insert a collection of rows using FORALL; all primary key values
    -- must have already been generated, or are handled in triggers
    PROCEDURE ins
    (
        rows_in         IN pn_dblock_ttp_mkt_tc,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        ins(rows_in => rows_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END ins;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_pn_soap_block_in       IN pn_dblock_ttp_mkt.id_pn_soap_block%TYPE,
        id_pn_note_type_in        IN pn_dblock_ttp_mkt.id_pn_note_type%TYPE,
        id_task_type_in           IN pn_dblock_ttp_mkt.id_task_type%TYPE,
        id_pn_data_block_in       IN pn_dblock_ttp_mkt.id_pn_data_block%TYPE,
        id_software_in            IN pn_dblock_ttp_mkt.id_software%TYPE,
        id_market_in              IN pn_dblock_ttp_mkt.id_market%TYPE,
        flg_auto_populated_in     IN pn_dblock_ttp_mkt.flg_auto_populated%TYPE DEFAULT NULL,
        flg_auto_populated_nin    IN BOOLEAN := TRUE,
        create_user_in            IN pn_dblock_ttp_mkt.create_user%TYPE DEFAULT NULL,
        create_user_nin           IN BOOLEAN := TRUE,
        create_time_in            IN pn_dblock_ttp_mkt.create_time%TYPE DEFAULT NULL,
        create_time_nin           IN BOOLEAN := TRUE,
        create_institution_in     IN pn_dblock_ttp_mkt.create_institution%TYPE DEFAULT NULL,
        create_institution_nin    IN BOOLEAN := TRUE,
        update_user_in            IN pn_dblock_ttp_mkt.update_user%TYPE DEFAULT NULL,
        update_user_nin           IN BOOLEAN := TRUE,
        update_time_in            IN pn_dblock_ttp_mkt.update_time%TYPE DEFAULT NULL,
        update_time_nin           IN BOOLEAN := TRUE,
        update_institution_in     IN pn_dblock_ttp_mkt.update_institution%TYPE DEFAULT NULL,
        update_institution_nin    IN BOOLEAN := TRUE,
        flg_selected_in           IN pn_dblock_ttp_mkt.flg_selected%TYPE DEFAULT NULL,
        flg_selected_nin          IN BOOLEAN := TRUE,
        flg_import_filter_in      IN pn_dblock_ttp_mkt.flg_import_filter%TYPE DEFAULT NULL,
        flg_import_filter_nin     IN BOOLEAN := TRUE,
        last_n_records_nr_in      IN pn_dblock_ttp_mkt.last_n_records_nr%TYPE DEFAULT NULL,
        last_n_records_nr_nin     IN BOOLEAN := TRUE,
        flg_shortcut_filter_in    IN pn_dblock_ttp_mkt.flg_shortcut_filter%TYPE DEFAULT NULL,
        flg_shortcut_filter_nin   IN BOOLEAN := TRUE,
        flg_synchronized_in       IN pn_dblock_ttp_mkt.flg_synchronized%TYPE DEFAULT NULL,
        flg_synchronized_nin      IN BOOLEAN := TRUE,
        review_cat_in             IN pn_dblock_ttp_mkt.review_cat%TYPE DEFAULT NULL,
        review_cat_nin            IN BOOLEAN := TRUE,
        flg_review_avail_in       IN pn_dblock_ttp_mkt.flg_review_avail%TYPE DEFAULT NULL,
        flg_review_avail_nin      IN BOOLEAN := TRUE,
        flg_description_in        IN pn_dblock_ttp_mkt.flg_description%TYPE DEFAULT NULL,
        flg_description_nin       IN BOOLEAN := TRUE,
        description_condition_in  IN pn_dblock_ttp_mkt.description_condition%TYPE DEFAULT NULL,
        description_condition_nin IN BOOLEAN := TRUE,
        flg_dt_task_in            IN pn_dblock_ttp_mkt.flg_dt_task%TYPE DEFAULT NULL,
        flg_dt_task_nin           IN BOOLEAN := TRUE,
        id_task_related_in        IN pn_dblock_ttp_mkt.id_task_related%TYPE DEFAULT NULL,
        id_task_related_nin       IN BOOLEAN := TRUE,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  IN OUT table_varchar
    ) IS
        l_rows_out                table_varchar;
        l_flg_auto_populated_n    NUMBER(1) := sys.diutil.bool_to_int(flg_auto_populated_nin);
        l_create_user_n           NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n           NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n    NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n           NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n           NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n    NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_flg_selected_n          NUMBER(1) := sys.diutil.bool_to_int(flg_selected_nin);
        l_flg_import_filter_n     NUMBER(1) := sys.diutil.bool_to_int(flg_import_filter_nin);
        l_last_n_records_nr_n     NUMBER(1) := sys.diutil.bool_to_int(last_n_records_nr_nin);
        l_flg_shortcut_filter_n   NUMBER(1) := sys.diutil.bool_to_int(flg_shortcut_filter_nin);
        l_flg_synchronized_n      NUMBER(1) := sys.diutil.bool_to_int(flg_synchronized_nin);
        l_review_cat_n            NUMBER(1) := sys.diutil.bool_to_int(review_cat_nin);
        l_flg_review_avail_n      NUMBER(1) := sys.diutil.bool_to_int(flg_review_avail_nin);
        l_flg_description_n       NUMBER(1) := sys.diutil.bool_to_int(flg_description_nin);
        l_description_condition_n NUMBER(1) := sys.diutil.bool_to_int(description_condition_nin);
        l_flg_dt_task_n           NUMBER(1) := sys.diutil.bool_to_int(flg_dt_task_nin);
        l_id_task_related_n       NUMBER(1) := sys.diutil.bool_to_int(id_task_related_nin);
    BEGIN
    
        UPDATE pn_dblock_ttp_mkt
           SET flg_auto_populated    = decode(l_flg_auto_populated_n,
                                              0,
                                              flg_auto_populated_in,
                                              nvl(flg_auto_populated_in, flg_auto_populated)),
               create_user           = decode(l_create_user_n, 0, create_user_in, nvl(create_user_in, create_user)),
               create_time           = decode(l_create_time_n, 0, create_time_in, nvl(create_time_in, create_time)),
               create_institution    = decode(l_create_institution_n,
                                              0,
                                              create_institution_in,
                                              nvl(create_institution_in, create_institution)),
               update_user           = decode(l_update_user_n, 0, update_user_in, nvl(update_user_in, update_user)),
               update_time           = decode(l_update_time_n, 0, update_time_in, nvl(update_time_in, update_time)),
               update_institution    = decode(l_update_institution_n,
                                              0,
                                              update_institution_in,
                                              nvl(update_institution_in, update_institution)),
               flg_selected          = decode(l_flg_selected_n, 0, flg_selected_in, nvl(flg_selected_in, flg_selected)),
               flg_import_filter     = decode(l_flg_import_filter_n,
                                              0,
                                              flg_import_filter_in,
                                              nvl(flg_import_filter_in, flg_import_filter)),
               last_n_records_nr     = decode(l_last_n_records_nr_n,
                                              0,
                                              last_n_records_nr_in,
                                              nvl(last_n_records_nr_in, last_n_records_nr)),
               flg_shortcut_filter   = decode(l_flg_shortcut_filter_n,
                                              0,
                                              flg_shortcut_filter_in,
                                              nvl(flg_shortcut_filter_in, flg_shortcut_filter)),
               flg_synchronized      = decode(l_flg_synchronized_n,
                                              0,
                                              flg_synchronized_in,
                                              nvl(flg_synchronized_in, flg_synchronized)),
               review_cat            = decode(l_review_cat_n, 0, review_cat_in, nvl(review_cat_in, review_cat)),
               flg_review_avail      = decode(l_flg_review_avail_n,
                                              0,
                                              flg_review_avail_in,
                                              nvl(flg_review_avail_in, flg_review_avail)),
               flg_description       = decode(l_flg_description_n,
                                              0,
                                              flg_description_in,
                                              nvl(flg_description_in, flg_description)),
               description_condition = decode(l_description_condition_n,
                                              0,
                                              description_condition_in,
                                              nvl(description_condition_in, description_condition)),
               flg_dt_task           = decode(l_flg_dt_task_n, 0, flg_dt_task_in, nvl(flg_dt_task_in, flg_dt_task)),
               id_task_related       = decode(l_id_task_related_n,
                                              0,
                                              id_task_related_in,
                                              nvl(id_task_related_in, id_task_related))
         WHERE id_pn_soap_block = id_pn_soap_block_in
           AND id_pn_note_type = id_pn_note_type_in
           AND id_task_type = id_task_type_in
           AND id_pn_data_block = id_pn_data_block_in
           AND id_software = id_software_in
           AND id_market = id_market_in
        RETURNING ROWID BULK COLLECT INTO l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    -- Update any/all columns by primary key. If you pass NULL, then
    -- the current column value is set to itself. If you need a more
    -- selected UPDATE then use one of the onecol procedures below.
    PROCEDURE upd
    (
        id_pn_soap_block_in       IN pn_dblock_ttp_mkt.id_pn_soap_block%TYPE,
        id_pn_note_type_in        IN pn_dblock_ttp_mkt.id_pn_note_type%TYPE,
        id_task_type_in           IN pn_dblock_ttp_mkt.id_task_type%TYPE,
        id_pn_data_block_in       IN pn_dblock_ttp_mkt.id_pn_data_block%TYPE,
        id_software_in            IN pn_dblock_ttp_mkt.id_software%TYPE,
        id_market_in              IN pn_dblock_ttp_mkt.id_market%TYPE,
        flg_auto_populated_in     IN pn_dblock_ttp_mkt.flg_auto_populated%TYPE DEFAULT NULL,
        flg_auto_populated_nin    IN BOOLEAN := TRUE,
        create_user_in            IN pn_dblock_ttp_mkt.create_user%TYPE DEFAULT NULL,
        create_user_nin           IN BOOLEAN := TRUE,
        create_time_in            IN pn_dblock_ttp_mkt.create_time%TYPE DEFAULT NULL,
        create_time_nin           IN BOOLEAN := TRUE,
        create_institution_in     IN pn_dblock_ttp_mkt.create_institution%TYPE DEFAULT NULL,
        create_institution_nin    IN BOOLEAN := TRUE,
        update_user_in            IN pn_dblock_ttp_mkt.update_user%TYPE DEFAULT NULL,
        update_user_nin           IN BOOLEAN := TRUE,
        update_time_in            IN pn_dblock_ttp_mkt.update_time%TYPE DEFAULT NULL,
        update_time_nin           IN BOOLEAN := TRUE,
        update_institution_in     IN pn_dblock_ttp_mkt.update_institution%TYPE DEFAULT NULL,
        update_institution_nin    IN BOOLEAN := TRUE,
        flg_selected_in           IN pn_dblock_ttp_mkt.flg_selected%TYPE DEFAULT NULL,
        flg_selected_nin          IN BOOLEAN := TRUE,
        flg_import_filter_in      IN pn_dblock_ttp_mkt.flg_import_filter%TYPE DEFAULT NULL,
        flg_import_filter_nin     IN BOOLEAN := TRUE,
        last_n_records_nr_in      IN pn_dblock_ttp_mkt.last_n_records_nr%TYPE DEFAULT NULL,
        last_n_records_nr_nin     IN BOOLEAN := TRUE,
        flg_shortcut_filter_in    IN pn_dblock_ttp_mkt.flg_shortcut_filter%TYPE DEFAULT NULL,
        flg_shortcut_filter_nin   IN BOOLEAN := TRUE,
        flg_synchronized_in       IN pn_dblock_ttp_mkt.flg_synchronized%TYPE DEFAULT NULL,
        flg_synchronized_nin      IN BOOLEAN := TRUE,
        review_cat_in             IN pn_dblock_ttp_mkt.review_cat%TYPE DEFAULT NULL,
        review_cat_nin            IN BOOLEAN := TRUE,
        flg_review_avail_in       IN pn_dblock_ttp_mkt.flg_review_avail%TYPE DEFAULT NULL,
        flg_review_avail_nin      IN BOOLEAN := TRUE,
        flg_description_in        IN pn_dblock_ttp_mkt.flg_description%TYPE DEFAULT NULL,
        flg_description_nin       IN BOOLEAN := TRUE,
        description_condition_in  IN pn_dblock_ttp_mkt.description_condition%TYPE DEFAULT NULL,
        description_condition_nin IN BOOLEAN := TRUE,
        flg_dt_task_in            IN pn_dblock_ttp_mkt.flg_dt_task%TYPE DEFAULT NULL,
        flg_dt_task_nin           IN BOOLEAN := TRUE,
        id_task_related_in        IN pn_dblock_ttp_mkt.id_task_related%TYPE DEFAULT NULL,
        id_task_related_nin       IN BOOLEAN := TRUE,
        handle_error_in           IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_pn_soap_block_in       => id_pn_soap_block_in,
            id_pn_note_type_in        => id_pn_note_type_in,
            id_task_type_in           => id_task_type_in,
            id_pn_data_block_in       => id_pn_data_block_in,
            id_software_in            => id_software_in,
            id_market_in              => id_market_in,
            flg_auto_populated_in     => flg_auto_populated_in,
            flg_auto_populated_nin    => flg_auto_populated_nin,
            create_user_in            => create_user_in,
            create_user_nin           => create_user_nin,
            create_time_in            => create_time_in,
            create_time_nin           => create_time_nin,
            create_institution_in     => create_institution_in,
            create_institution_nin    => create_institution_nin,
            update_user_in            => update_user_in,
            update_user_nin           => update_user_nin,
            update_time_in            => update_time_in,
            update_time_nin           => update_time_nin,
            update_institution_in     => update_institution_in,
            update_institution_nin    => update_institution_nin,
            flg_selected_in           => flg_selected_in,
            flg_selected_nin          => flg_selected_nin,
            flg_import_filter_in      => flg_import_filter_in,
            flg_import_filter_nin     => flg_import_filter_nin,
            last_n_records_nr_in      => last_n_records_nr_in,
            last_n_records_nr_nin     => last_n_records_nr_nin,
            flg_shortcut_filter_in    => flg_shortcut_filter_in,
            flg_shortcut_filter_nin   => flg_shortcut_filter_nin,
            flg_synchronized_in       => flg_synchronized_in,
            flg_synchronized_nin      => flg_synchronized_nin,
            review_cat_in             => review_cat_in,
            review_cat_nin            => review_cat_nin,
            flg_review_avail_in       => flg_review_avail_in,
            flg_review_avail_nin      => flg_review_avail_nin,
            flg_description_in        => flg_description_in,
            flg_description_nin       => flg_description_nin,
            description_condition_in  => description_condition_in,
            description_condition_nin => description_condition_nin,
            flg_dt_task_in            => flg_dt_task_in,
            flg_dt_task_nin           => flg_dt_task_nin,
            id_task_related_in        => id_task_related_in,
            id_task_related_nin       => id_task_related_nin,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        flg_auto_populated_in     IN pn_dblock_ttp_mkt.flg_auto_populated%TYPE DEFAULT NULL,
        flg_auto_populated_nin    IN BOOLEAN := TRUE,
        create_user_in            IN pn_dblock_ttp_mkt.create_user%TYPE DEFAULT NULL,
        create_user_nin           IN BOOLEAN := TRUE,
        create_time_in            IN pn_dblock_ttp_mkt.create_time%TYPE DEFAULT NULL,
        create_time_nin           IN BOOLEAN := TRUE,
        create_institution_in     IN pn_dblock_ttp_mkt.create_institution%TYPE DEFAULT NULL,
        create_institution_nin    IN BOOLEAN := TRUE,
        update_user_in            IN pn_dblock_ttp_mkt.update_user%TYPE DEFAULT NULL,
        update_user_nin           IN BOOLEAN := TRUE,
        update_time_in            IN pn_dblock_ttp_mkt.update_time%TYPE DEFAULT NULL,
        update_time_nin           IN BOOLEAN := TRUE,
        update_institution_in     IN pn_dblock_ttp_mkt.update_institution%TYPE DEFAULT NULL,
        update_institution_nin    IN BOOLEAN := TRUE,
        flg_selected_in           IN pn_dblock_ttp_mkt.flg_selected%TYPE DEFAULT NULL,
        flg_selected_nin          IN BOOLEAN := TRUE,
        flg_import_filter_in      IN pn_dblock_ttp_mkt.flg_import_filter%TYPE DEFAULT NULL,
        flg_import_filter_nin     IN BOOLEAN := TRUE,
        last_n_records_nr_in      IN pn_dblock_ttp_mkt.last_n_records_nr%TYPE DEFAULT NULL,
        last_n_records_nr_nin     IN BOOLEAN := TRUE,
        flg_shortcut_filter_in    IN pn_dblock_ttp_mkt.flg_shortcut_filter%TYPE DEFAULT NULL,
        flg_shortcut_filter_nin   IN BOOLEAN := TRUE,
        flg_synchronized_in       IN pn_dblock_ttp_mkt.flg_synchronized%TYPE DEFAULT NULL,
        flg_synchronized_nin      IN BOOLEAN := TRUE,
        review_cat_in             IN pn_dblock_ttp_mkt.review_cat%TYPE DEFAULT NULL,
        review_cat_nin            IN BOOLEAN := TRUE,
        flg_review_avail_in       IN pn_dblock_ttp_mkt.flg_review_avail%TYPE DEFAULT NULL,
        flg_review_avail_nin      IN BOOLEAN := TRUE,
        flg_description_in        IN pn_dblock_ttp_mkt.flg_description%TYPE DEFAULT NULL,
        flg_description_nin       IN BOOLEAN := TRUE,
        description_condition_in  IN pn_dblock_ttp_mkt.description_condition%TYPE DEFAULT NULL,
        description_condition_nin IN BOOLEAN := TRUE,
        flg_dt_task_in            IN pn_dblock_ttp_mkt.flg_dt_task%TYPE DEFAULT NULL,
        flg_dt_task_nin           IN BOOLEAN := TRUE,
        id_task_related_in        IN pn_dblock_ttp_mkt.id_task_related%TYPE DEFAULT NULL,
        id_task_related_nin       IN BOOLEAN := TRUE,
        where_in                  IN VARCHAR2,
        handle_error_in           IN BOOLEAN := TRUE,
        rows_out                  IN OUT table_varchar
    ) IS
        l_sql                     VARCHAR2(32767);
        l_rows_out                table_varchar;
        l_flg_auto_populated_n    NUMBER(1) := sys.diutil.bool_to_int(flg_auto_populated_nin);
        l_create_user_n           NUMBER(1) := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n           NUMBER(1) := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n    NUMBER(1) := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n           NUMBER(1) := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n           NUMBER(1) := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n    NUMBER(1) := sys.diutil.bool_to_int(update_institution_nin);
        l_flg_selected_n          NUMBER(1) := sys.diutil.bool_to_int(flg_selected_nin);
        l_flg_import_filter_n     NUMBER(1) := sys.diutil.bool_to_int(flg_import_filter_nin);
        l_last_n_records_nr_n     NUMBER(1) := sys.diutil.bool_to_int(last_n_records_nr_nin);
        l_flg_shortcut_filter_n   NUMBER(1) := sys.diutil.bool_to_int(flg_shortcut_filter_nin);
        l_flg_synchronized_n      NUMBER(1) := sys.diutil.bool_to_int(flg_synchronized_nin);
        l_review_cat_n            NUMBER(1) := sys.diutil.bool_to_int(review_cat_nin);
        l_flg_review_avail_n      NUMBER(1) := sys.diutil.bool_to_int(flg_review_avail_nin);
        l_flg_description_n       NUMBER(1) := sys.diutil.bool_to_int(flg_description_nin);
        l_description_condition_n NUMBER(1) := sys.diutil.bool_to_int(description_condition_nin);
        l_flg_dt_task_n           NUMBER(1) := sys.diutil.bool_to_int(flg_dt_task_nin);
        l_id_task_related_n       NUMBER(1) := sys.diutil.bool_to_int(id_task_related_nin);
    BEGIN
        l_flg_auto_populated_n    := sys.diutil.bool_to_int(flg_auto_populated_nin);
        l_create_user_n           := sys.diutil.bool_to_int(create_user_nin);
        l_create_time_n           := sys.diutil.bool_to_int(create_time_nin);
        l_create_institution_n    := sys.diutil.bool_to_int(create_institution_nin);
        l_update_user_n           := sys.diutil.bool_to_int(update_user_nin);
        l_update_time_n           := sys.diutil.bool_to_int(update_time_nin);
        l_update_institution_n    := sys.diutil.bool_to_int(update_institution_nin);
        l_flg_selected_n          := sys.diutil.bool_to_int(flg_selected_nin);
        l_flg_import_filter_n     := sys.diutil.bool_to_int(flg_import_filter_nin);
        l_last_n_records_nr_n     := sys.diutil.bool_to_int(last_n_records_nr_nin);
        l_flg_shortcut_filter_n   := sys.diutil.bool_to_int(flg_shortcut_filter_nin);
        l_flg_synchronized_n      := sys.diutil.bool_to_int(flg_synchronized_nin);
        l_review_cat_n            := sys.diutil.bool_to_int(review_cat_nin);
        l_flg_review_avail_n      := sys.diutil.bool_to_int(flg_review_avail_nin);
        l_flg_description_n       := sys.diutil.bool_to_int(flg_description_nin);
        l_description_condition_n := sys.diutil.bool_to_int(description_condition_nin);
        l_flg_dt_task_n           := sys.diutil.bool_to_int(flg_dt_task_nin);
        l_id_task_related_n       := sys.diutil.bool_to_int(id_task_related_nin);
        l_sql                     := 'UPDATE pn_dblock_ttp_mkt SET' || ' FLG_AUTO_POPULATED = decode (' ||
                                     l_flg_auto_populated_n ||
                                     ',0,:FLG_AUTO_POPULATED_in, NVL (:FLG_AUTO_POPULATED_in, FLG_AUTO_POPULATED)) ' || ',' ||
                                     ' CREATE_USER = decode (' || l_create_user_n ||
                                     ',0,:CREATE_USER_in, NVL (:CREATE_USER_in, CREATE_USER)) ' || ',' ||
                                     ' CREATE_TIME = decode (' || l_create_time_n ||
                                     ',0,:CREATE_TIME_in, NVL (:CREATE_TIME_in, CREATE_TIME)) ' || ',' ||
                                     ' CREATE_INSTITUTION = decode (' || l_create_institution_n ||
                                     ',0,:CREATE_INSTITUTION_in, NVL (:CREATE_INSTITUTION_in, CREATE_INSTITUTION)) ' || ',' ||
                                     ' UPDATE_USER = decode (' || l_update_user_n ||
                                     ',0,:UPDATE_USER_in, NVL (:UPDATE_USER_in, UPDATE_USER)) ' || ',' ||
                                     ' UPDATE_TIME = decode (' || l_update_time_n ||
                                     ',0,:UPDATE_TIME_in, NVL (:UPDATE_TIME_in, UPDATE_TIME)) ' || ',' ||
                                     ' UPDATE_INSTITUTION = decode (' || l_update_institution_n ||
                                     ',0,:UPDATE_INSTITUTION_in, NVL (:UPDATE_INSTITUTION_in, UPDATE_INSTITUTION)) ' || ',' ||
                                     ' FLG_SELECTED = decode (' || l_flg_selected_n ||
                                     ',0,:FLG_SELECTED_in, NVL (:FLG_SELECTED_in, FLG_SELECTED)) ' || ',' ||
                                     ' FLG_IMPORT_FILTER = decode (' || l_flg_import_filter_n ||
                                     ',0,:FLG_IMPORT_FILTER_in, NVL (:FLG_IMPORT_FILTER_in, FLG_IMPORT_FILTER)) ' || ',' ||
                                     ' LAST_N_RECORDS_NR = decode (' || l_last_n_records_nr_n ||
                                     ',0,:LAST_N_RECORDS_NR_in, NVL (:LAST_N_RECORDS_NR_in, LAST_N_RECORDS_NR)) ' || ',' ||
                                     ' FLG_SHORTCUT_FILTER = decode (' || l_flg_shortcut_filter_n ||
                                     ',0,:FLG_SHORTCUT_FILTER_in, NVL (:FLG_SHORTCUT_FILTER_in, FLG_SHORTCUT_FILTER)) ' || ',' ||
                                     ' FLG_SYNCHRONIZED = decode (' || l_flg_synchronized_n ||
                                     ',0,:FLG_SYNCHRONIZED_in, NVL (:FLG_SYNCHRONIZED_in, FLG_SYNCHRONIZED)) ' || ',' ||
                                     ' REVIEW_CAT = decode (' || l_review_cat_n ||
                                     ',0,:REVIEW_CAT_in, NVL (:REVIEW_CAT_in, REVIEW_CAT)) ' || ',' ||
                                     ' FLG_REVIEW_AVAIL = decode (' || l_flg_review_avail_n ||
                                     ',0,:FLG_REVIEW_AVAIL_in, NVL (:FLG_REVIEW_AVAIL_in, FLG_REVIEW_AVAIL)) ' || ',' ||
                                     ' FLG_DESCRIPTION = decode (' || l_flg_description_n ||
                                     ',0,:FLG_DESCRIPTION_in, NVL (:FLG_DESCRIPTION_in, FLG_DESCRIPTION)) ' || ',' ||
                                     ' DESCRIPTION_CONDITION = decode (' || l_description_condition_n ||
                                     ',0,:DESCRIPTION_CONDITION_in, NVL (:DESCRIPTION_CONDITION_in, DESCRIPTION_CONDITION)) ' || ',' ||
                                     ' FLG_DT_TASK = decode (' || l_flg_dt_task_n ||
                                     ',0,:FLG_DT_TASK_in, NVL (:FLG_DT_TASK_in, FLG_DT_TASK)) ' || ',' ||
                                     ' ID_TASK_RELATED = decode (' || l_id_task_related_n ||
                                     ',0,:ID_TASK_RELATED_in, NVL (:ID_TASK_RELATED_in, ID_TASK_RELATED)) ' ||
                                     ' where ' || nvl(where_in, '(1=1)') ||
                                     ' RETURNING ROWID BULK COLLECT INTO :l_rows_out';
        EXECUTE IMMEDIATE 'BEGIN ' || l_sql || '; END;'
            USING IN flg_auto_populated_in, create_user_in, create_time_in, create_institution_in, update_user_in, update_time_in, update_institution_in, flg_selected_in, flg_import_filter_in, last_n_records_nr_in, flg_shortcut_filter_in, flg_synchronized_in, review_cat_in, flg_review_avail_in, flg_description_in, description_condition_in, flg_dt_task_in, id_task_related_in, OUT l_rows_out;
        IF (rows_out IS NULL)
        THEN
            rows_out := table_varchar();
        END IF;
        rows_out := rows_out MULTISET UNION DISTINCT l_rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update any/all columns by dynamic WHERE
    -- If you pass NULL, then the current column value is set to itself
    PROCEDURE upd
    (
        flg_auto_populated_in     IN pn_dblock_ttp_mkt.flg_auto_populated%TYPE DEFAULT NULL,
        flg_auto_populated_nin    IN BOOLEAN := TRUE,
        create_user_in            IN pn_dblock_ttp_mkt.create_user%TYPE DEFAULT NULL,
        create_user_nin           IN BOOLEAN := TRUE,
        create_time_in            IN pn_dblock_ttp_mkt.create_time%TYPE DEFAULT NULL,
        create_time_nin           IN BOOLEAN := TRUE,
        create_institution_in     IN pn_dblock_ttp_mkt.create_institution%TYPE DEFAULT NULL,
        create_institution_nin    IN BOOLEAN := TRUE,
        update_user_in            IN pn_dblock_ttp_mkt.update_user%TYPE DEFAULT NULL,
        update_user_nin           IN BOOLEAN := TRUE,
        update_time_in            IN pn_dblock_ttp_mkt.update_time%TYPE DEFAULT NULL,
        update_time_nin           IN BOOLEAN := TRUE,
        update_institution_in     IN pn_dblock_ttp_mkt.update_institution%TYPE DEFAULT NULL,
        update_institution_nin    IN BOOLEAN := TRUE,
        flg_selected_in           IN pn_dblock_ttp_mkt.flg_selected%TYPE DEFAULT NULL,
        flg_selected_nin          IN BOOLEAN := TRUE,
        flg_import_filter_in      IN pn_dblock_ttp_mkt.flg_import_filter%TYPE DEFAULT NULL,
        flg_import_filter_nin     IN BOOLEAN := TRUE,
        last_n_records_nr_in      IN pn_dblock_ttp_mkt.last_n_records_nr%TYPE DEFAULT NULL,
        last_n_records_nr_nin     IN BOOLEAN := TRUE,
        flg_shortcut_filter_in    IN pn_dblock_ttp_mkt.flg_shortcut_filter%TYPE DEFAULT NULL,
        flg_shortcut_filter_nin   IN BOOLEAN := TRUE,
        flg_synchronized_in       IN pn_dblock_ttp_mkt.flg_synchronized%TYPE DEFAULT NULL,
        flg_synchronized_nin      IN BOOLEAN := TRUE,
        review_cat_in             IN pn_dblock_ttp_mkt.review_cat%TYPE DEFAULT NULL,
        review_cat_nin            IN BOOLEAN := TRUE,
        flg_review_avail_in       IN pn_dblock_ttp_mkt.flg_review_avail%TYPE DEFAULT NULL,
        flg_review_avail_nin      IN BOOLEAN := TRUE,
        flg_description_in        IN pn_dblock_ttp_mkt.flg_description%TYPE DEFAULT NULL,
        flg_description_nin       IN BOOLEAN := TRUE,
        description_condition_in  IN pn_dblock_ttp_mkt.description_condition%TYPE DEFAULT NULL,
        description_condition_nin IN BOOLEAN := TRUE,
        flg_dt_task_in            IN pn_dblock_ttp_mkt.flg_dt_task%TYPE DEFAULT NULL,
        flg_dt_task_nin           IN BOOLEAN := TRUE,
        id_task_related_in        IN pn_dblock_ttp_mkt.id_task_related%TYPE DEFAULT NULL,
        id_task_related_nin       IN BOOLEAN := TRUE,
        where_in                  IN VARCHAR2,
        handle_error_in           IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(flg_auto_populated_in     => flg_auto_populated_in,
            flg_auto_populated_nin    => flg_auto_populated_nin,
            create_user_in            => create_user_in,
            create_user_nin           => create_user_nin,
            create_time_in            => create_time_in,
            create_time_nin           => create_time_nin,
            create_institution_in     => create_institution_in,
            create_institution_nin    => create_institution_nin,
            update_user_in            => update_user_in,
            update_user_nin           => update_user_nin,
            update_time_in            => update_time_in,
            update_time_nin           => update_time_nin,
            update_institution_in     => update_institution_in,
            update_institution_nin    => update_institution_nin,
            flg_selected_in           => flg_selected_in,
            flg_selected_nin          => flg_selected_nin,
            flg_import_filter_in      => flg_import_filter_in,
            flg_import_filter_nin     => flg_import_filter_nin,
            last_n_records_nr_in      => last_n_records_nr_in,
            last_n_records_nr_nin     => last_n_records_nr_nin,
            flg_shortcut_filter_in    => flg_shortcut_filter_in,
            flg_shortcut_filter_nin   => flg_shortcut_filter_nin,
            flg_synchronized_in       => flg_synchronized_in,
            flg_synchronized_nin      => flg_synchronized_nin,
            review_cat_in             => review_cat_in,
            review_cat_nin            => review_cat_nin,
            flg_review_avail_in       => flg_review_avail_in,
            flg_review_avail_nin      => flg_review_avail_nin,
            flg_description_in        => flg_description_in,
            flg_description_nin       => flg_description_nin,
            description_condition_in  => description_condition_in,
            description_condition_nin => description_condition_nin,
            flg_dt_task_in            => flg_dt_task_in,
            flg_dt_task_nin           => flg_dt_task_nin,
            id_task_related_in        => id_task_related_in,
            id_task_related_nin       => id_task_related_nin,
            where_in                  => where_in,
            handle_error_in           => handle_error_in,
            rows_out                  => rows_out);
    END upd;

    --Update/insert columns (with rows_out)
    PROCEDURE upd_ins
    (
        id_pn_soap_block_in      IN pn_dblock_ttp_mkt.id_pn_soap_block%TYPE,
        id_pn_note_type_in       IN pn_dblock_ttp_mkt.id_pn_note_type%TYPE,
        id_task_type_in          IN pn_dblock_ttp_mkt.id_task_type%TYPE,
        id_pn_data_block_in      IN pn_dblock_ttp_mkt.id_pn_data_block%TYPE,
        id_software_in           IN pn_dblock_ttp_mkt.id_software%TYPE,
        id_market_in             IN pn_dblock_ttp_mkt.id_market%TYPE,
        flg_auto_populated_in    IN pn_dblock_ttp_mkt.flg_auto_populated%TYPE DEFAULT NULL,
        create_user_in           IN pn_dblock_ttp_mkt.create_user%TYPE DEFAULT NULL,
        create_time_in           IN pn_dblock_ttp_mkt.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN pn_dblock_ttp_mkt.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN pn_dblock_ttp_mkt.update_user%TYPE DEFAULT NULL,
        update_time_in           IN pn_dblock_ttp_mkt.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN pn_dblock_ttp_mkt.update_institution%TYPE DEFAULT NULL,
        flg_selected_in          IN pn_dblock_ttp_mkt.flg_selected%TYPE DEFAULT NULL,
        flg_import_filter_in     IN pn_dblock_ttp_mkt.flg_import_filter%TYPE DEFAULT NULL,
        last_n_records_nr_in     IN pn_dblock_ttp_mkt.last_n_records_nr%TYPE DEFAULT NULL,
        flg_shortcut_filter_in   IN pn_dblock_ttp_mkt.flg_shortcut_filter%TYPE DEFAULT NULL,
        flg_synchronized_in      IN pn_dblock_ttp_mkt.flg_synchronized%TYPE DEFAULT NULL,
        review_cat_in            IN pn_dblock_ttp_mkt.review_cat%TYPE DEFAULT NULL,
        flg_review_avail_in      IN pn_dblock_ttp_mkt.flg_review_avail%TYPE DEFAULT NULL,
        flg_description_in       IN pn_dblock_ttp_mkt.flg_description%TYPE DEFAULT NULL,
        description_condition_in IN pn_dblock_ttp_mkt.description_condition%TYPE DEFAULT NULL,
        flg_dt_task_in           IN pn_dblock_ttp_mkt.flg_dt_task%TYPE DEFAULT NULL,
        id_task_related_in       IN pn_dblock_ttp_mkt.id_task_related%TYPE DEFAULT NULL,
        handle_error_in          IN BOOLEAN := TRUE,
        rows_out                 IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_pn_soap_block_in      => id_pn_soap_block_in,
            id_pn_note_type_in       => id_pn_note_type_in,
            id_task_type_in          => id_task_type_in,
            id_pn_data_block_in      => id_pn_data_block_in,
            id_software_in           => id_software_in,
            id_market_in             => id_market_in,
            flg_auto_populated_in    => flg_auto_populated_in,
            create_user_in           => create_user_in,
            create_time_in           => create_time_in,
            create_institution_in    => create_institution_in,
            update_user_in           => update_user_in,
            update_time_in           => update_time_in,
            update_institution_in    => update_institution_in,
            flg_selected_in          => flg_selected_in,
            flg_import_filter_in     => flg_import_filter_in,
            last_n_records_nr_in     => last_n_records_nr_in,
            flg_shortcut_filter_in   => flg_shortcut_filter_in,
            flg_synchronized_in      => flg_synchronized_in,
            review_cat_in            => review_cat_in,
            flg_review_avail_in      => flg_review_avail_in,
            flg_description_in       => flg_description_in,
            description_condition_in => description_condition_in,
            flg_dt_task_in           => flg_dt_task_in,
            id_task_related_in       => id_task_related_in,
            handle_error_in          => handle_error_in,
            rows_out                 => rows_out);
        IF SQL%ROWCOUNT = 0
        THEN
            ins(id_pn_soap_block_in      => id_pn_soap_block_in,
                id_pn_note_type_in       => id_pn_note_type_in,
                id_task_type_in          => id_task_type_in,
                id_pn_data_block_in      => id_pn_data_block_in,
                id_software_in           => id_software_in,
                id_market_in             => id_market_in,
                flg_auto_populated_in    => flg_auto_populated_in,
                create_user_in           => create_user_in,
                create_time_in           => create_time_in,
                create_institution_in    => create_institution_in,
                update_user_in           => update_user_in,
                update_time_in           => update_time_in,
                update_institution_in    => update_institution_in,
                flg_selected_in          => flg_selected_in,
                flg_import_filter_in     => flg_import_filter_in,
                last_n_records_nr_in     => last_n_records_nr_in,
                flg_shortcut_filter_in   => flg_shortcut_filter_in,
                flg_synchronized_in      => flg_synchronized_in,
                review_cat_in            => review_cat_in,
                flg_review_avail_in      => flg_review_avail_in,
                flg_description_in       => flg_description_in,
                description_condition_in => description_condition_in,
                flg_dt_task_in           => flg_dt_task_in,
                id_task_related_in       => id_task_related_in,
                handle_error_in          => handle_error_in,
                rows_out                 => rows_out);
        END IF;
    END upd_ins;

    --Update/insert columns (without rows_out)
    PROCEDURE upd_ins
    (
        id_pn_soap_block_in      IN pn_dblock_ttp_mkt.id_pn_soap_block%TYPE,
        id_pn_note_type_in       IN pn_dblock_ttp_mkt.id_pn_note_type%TYPE,
        id_task_type_in          IN pn_dblock_ttp_mkt.id_task_type%TYPE,
        id_pn_data_block_in      IN pn_dblock_ttp_mkt.id_pn_data_block%TYPE,
        id_software_in           IN pn_dblock_ttp_mkt.id_software%TYPE,
        id_market_in             IN pn_dblock_ttp_mkt.id_market%TYPE,
        flg_auto_populated_in    IN pn_dblock_ttp_mkt.flg_auto_populated%TYPE DEFAULT NULL,
        create_user_in           IN pn_dblock_ttp_mkt.create_user%TYPE DEFAULT NULL,
        create_time_in           IN pn_dblock_ttp_mkt.create_time%TYPE DEFAULT NULL,
        create_institution_in    IN pn_dblock_ttp_mkt.create_institution%TYPE DEFAULT NULL,
        update_user_in           IN pn_dblock_ttp_mkt.update_user%TYPE DEFAULT NULL,
        update_time_in           IN pn_dblock_ttp_mkt.update_time%TYPE DEFAULT NULL,
        update_institution_in    IN pn_dblock_ttp_mkt.update_institution%TYPE DEFAULT NULL,
        flg_selected_in          IN pn_dblock_ttp_mkt.flg_selected%TYPE DEFAULT NULL,
        flg_import_filter_in     IN pn_dblock_ttp_mkt.flg_import_filter%TYPE DEFAULT NULL,
        last_n_records_nr_in     IN pn_dblock_ttp_mkt.last_n_records_nr%TYPE DEFAULT NULL,
        flg_shortcut_filter_in   IN pn_dblock_ttp_mkt.flg_shortcut_filter%TYPE DEFAULT NULL,
        flg_synchronized_in      IN pn_dblock_ttp_mkt.flg_synchronized%TYPE DEFAULT NULL,
        review_cat_in            IN pn_dblock_ttp_mkt.review_cat%TYPE DEFAULT NULL,
        flg_review_avail_in      IN pn_dblock_ttp_mkt.flg_review_avail%TYPE DEFAULT NULL,
        flg_description_in       IN pn_dblock_ttp_mkt.flg_description%TYPE DEFAULT NULL,
        description_condition_in IN pn_dblock_ttp_mkt.description_condition%TYPE DEFAULT NULL,
        flg_dt_task_in           IN pn_dblock_ttp_mkt.flg_dt_task%TYPE DEFAULT NULL,
        id_task_related_in       IN pn_dblock_ttp_mkt.id_task_related%TYPE DEFAULT NULL,
        handle_error_in          IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd_ins(id_pn_soap_block_in,
                id_pn_note_type_in,
                id_task_type_in,
                id_pn_data_block_in,
                id_software_in,
                id_market_in,
                flg_auto_populated_in,
                create_user_in,
                create_time_in,
                create_institution_in,
                update_user_in,
                update_time_in,
                update_institution_in,
                flg_selected_in,
                flg_import_filter_in,
                last_n_records_nr_in,
                flg_shortcut_filter_in,
                flg_synchronized_in,
                review_cat_in,
                flg_review_avail_in,
                flg_description_in,
                description_condition_in,
                flg_dt_task_in,
                id_task_related_in,
                handle_error_in,
                rows_out);
    END upd_ins;

    --Update by record (with rows_out)
    PROCEDURE upd
    (
        rec_in          IN pn_dblock_ttp_mkt%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        IN OUT table_varchar
    ) IS
    BEGIN
        upd(id_pn_soap_block_in      => rec_in.id_pn_soap_block,
            id_pn_note_type_in       => rec_in.id_pn_note_type,
            id_task_type_in          => rec_in.id_task_type,
            id_pn_data_block_in      => rec_in.id_pn_data_block,
            id_software_in           => rec_in.id_software,
            id_market_in             => rec_in.id_market,
            flg_auto_populated_in    => rec_in.flg_auto_populated,
            create_user_in           => rec_in.create_user,
            create_time_in           => rec_in.create_time,
            create_institution_in    => rec_in.create_institution,
            update_user_in           => rec_in.update_user,
            update_time_in           => rec_in.update_time,
            update_institution_in    => rec_in.update_institution,
            flg_selected_in          => rec_in.flg_selected,
            flg_import_filter_in     => rec_in.flg_import_filter,
            last_n_records_nr_in     => rec_in.last_n_records_nr,
            flg_shortcut_filter_in   => rec_in.flg_shortcut_filter,
            flg_synchronized_in      => rec_in.flg_synchronized,
            review_cat_in            => rec_in.review_cat,
            flg_review_avail_in      => rec_in.flg_review_avail,
            flg_description_in       => rec_in.flg_description,
            description_condition_in => rec_in.description_condition,
            flg_dt_task_in           => rec_in.flg_dt_task,
            id_task_related_in       => rec_in.id_task_related,
            handle_error_in          => handle_error_in,
            rows_out                 => rows_out);
    END upd;

    --Update by record (without rows_out)
    PROCEDURE upd
    (
        rec_in          IN pn_dblock_ttp_mkt%ROWTYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(id_pn_soap_block_in      => rec_in.id_pn_soap_block,
            id_pn_note_type_in       => rec_in.id_pn_note_type,
            id_task_type_in          => rec_in.id_task_type,
            id_pn_data_block_in      => rec_in.id_pn_data_block,
            id_software_in           => rec_in.id_software,
            id_market_in             => rec_in.id_market,
            flg_auto_populated_in    => rec_in.flg_auto_populated,
            create_user_in           => rec_in.create_user,
            create_time_in           => rec_in.create_time,
            create_institution_in    => rec_in.create_institution,
            update_user_in           => rec_in.update_user,
            update_time_in           => rec_in.update_time,
            update_institution_in    => rec_in.update_institution,
            flg_selected_in          => rec_in.flg_selected,
            flg_import_filter_in     => rec_in.flg_import_filter,
            last_n_records_nr_in     => rec_in.last_n_records_nr,
            flg_shortcut_filter_in   => rec_in.flg_shortcut_filter,
            flg_synchronized_in      => rec_in.flg_synchronized,
            review_cat_in            => rec_in.review_cat,
            flg_review_avail_in      => rec_in.flg_review_avail,
            flg_description_in       => rec_in.flg_description,
            description_condition_in => rec_in.description_condition,
            flg_dt_task_in           => rec_in.flg_dt_task,
            id_task_related_in       => rec_in.id_task_related,
            handle_error_in          => handle_error_in,
            rows_out                 => rows_out);
    END upd;

    --Update with collection (with rows_out)
    PROCEDURE upd
    (
        col_in            IN pn_dblock_ttp_mkt_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE,
        rows_out          IN OUT table_varchar
    ) IS
        l_id_pn_soap_block      id_pn_soap_block_cc;
        l_id_pn_note_type       id_pn_note_type_cc;
        l_id_task_type          id_task_type_cc;
        l_id_pn_data_block      id_pn_data_block_cc;
        l_id_software           id_software_cc;
        l_id_market             id_market_cc;
        l_flg_auto_populated    flg_auto_populated_cc;
        l_create_user           create_user_cc;
        l_create_time           create_time_cc;
        l_create_institution    create_institution_cc;
        l_update_user           update_user_cc;
        l_update_time           update_time_cc;
        l_update_institution    update_institution_cc;
        l_flg_selected          flg_selected_cc;
        l_flg_import_filter     flg_import_filter_cc;
        l_last_n_records_nr     last_n_records_nr_cc;
        l_flg_shortcut_filter   flg_shortcut_filter_cc;
        l_flg_synchronized      flg_synchronized_cc;
        l_review_cat            review_cat_cc;
        l_flg_review_avail      flg_review_avail_cc;
        l_flg_description       flg_description_cc;
        l_description_condition description_condition_cc;
        l_flg_dt_task           flg_dt_task_cc;
        l_id_task_related       id_task_related_cc;
    BEGIN
        FOR i IN col_in.first .. col_in.last
        LOOP
            l_id_pn_soap_block(i) := col_in(i).id_pn_soap_block;
            l_id_pn_note_type(i) := col_in(i).id_pn_note_type;
            l_id_task_type(i) := col_in(i).id_task_type;
            l_id_pn_data_block(i) := col_in(i).id_pn_data_block;
            l_id_software(i) := col_in(i).id_software;
            l_id_market(i) := col_in(i).id_market;
            l_flg_auto_populated(i) := col_in(i).flg_auto_populated;
            l_create_user(i) := col_in(i).create_user;
            l_create_time(i) := col_in(i).create_time;
            l_create_institution(i) := col_in(i).create_institution;
            l_update_user(i) := col_in(i).update_user;
            l_update_time(i) := col_in(i).update_time;
            l_update_institution(i) := col_in(i).update_institution;
            l_flg_selected(i) := col_in(i).flg_selected;
            l_flg_import_filter(i) := col_in(i).flg_import_filter;
            l_last_n_records_nr(i) := col_in(i).last_n_records_nr;
            l_flg_shortcut_filter(i) := col_in(i).flg_shortcut_filter;
            l_flg_synchronized(i) := col_in(i).flg_synchronized;
            l_review_cat(i) := col_in(i).review_cat;
            l_flg_review_avail(i) := col_in(i).flg_review_avail;
            l_flg_description(i) := col_in(i).flg_description;
            l_description_condition(i) := col_in(i).description_condition;
            l_flg_dt_task(i) := col_in(i).flg_dt_task;
            l_id_task_related(i) := col_in(i).id_task_related;
        END LOOP;
        IF nvl(ignore_if_null_in, FALSE)
        THEN
            -- Set any columns to their current values
            -- if incoming value is NULL.
            -- Put WHEN clause on column-level triggers!
            FORALL i IN col_in.first .. col_in.last
                UPDATE pn_dblock_ttp_mkt
                   SET flg_auto_populated    = nvl(l_flg_auto_populated(i), flg_auto_populated),
                       create_user           = nvl(l_create_user(i), create_user),
                       create_time           = nvl(l_create_time(i), create_time),
                       create_institution    = nvl(l_create_institution(i), create_institution),
                       update_user           = nvl(l_update_user(i), update_user),
                       update_time           = nvl(l_update_time(i), update_time),
                       update_institution    = nvl(l_update_institution(i), update_institution),
                       flg_selected          = nvl(l_flg_selected(i), flg_selected),
                       flg_import_filter     = nvl(l_flg_import_filter(i), flg_import_filter),
                       last_n_records_nr     = nvl(l_last_n_records_nr(i), last_n_records_nr),
                       flg_shortcut_filter   = nvl(l_flg_shortcut_filter(i), flg_shortcut_filter),
                       flg_synchronized      = nvl(l_flg_synchronized(i), flg_synchronized),
                       review_cat            = nvl(l_review_cat(i), review_cat),
                       flg_review_avail      = nvl(l_flg_review_avail(i), flg_review_avail),
                       flg_description       = nvl(l_flg_description(i), flg_description),
                       description_condition = nvl(l_description_condition(i), description_condition),
                       flg_dt_task           = nvl(l_flg_dt_task(i), flg_dt_task),
                       id_task_related       = nvl(l_id_task_related(i), id_task_related)
                 WHERE id_pn_soap_block = l_id_pn_soap_block(i)
                   AND id_pn_note_type = l_id_pn_note_type(i)
                   AND id_task_type = l_id_task_type(i)
                   AND id_pn_data_block = l_id_pn_data_block(i)
                   AND id_software = l_id_software(i)
                   AND id_market = l_id_market(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        ELSE
            FORALL i IN col_in.first .. col_in.last
                UPDATE pn_dblock_ttp_mkt
                   SET flg_auto_populated    = l_flg_auto_populated(i),
                       create_user           = l_create_user(i),
                       create_time           = l_create_time(i),
                       create_institution    = l_create_institution(i),
                       update_user           = l_update_user(i),
                       update_time           = l_update_time(i),
                       update_institution    = l_update_institution(i),
                       flg_selected          = l_flg_selected(i),
                       flg_import_filter     = l_flg_import_filter(i),
                       last_n_records_nr     = l_last_n_records_nr(i),
                       flg_shortcut_filter   = l_flg_shortcut_filter(i),
                       flg_synchronized      = l_flg_synchronized(i),
                       review_cat            = l_review_cat(i),
                       flg_review_avail      = l_flg_review_avail(i),
                       flg_description       = l_flg_description(i),
                       description_condition = l_description_condition(i),
                       flg_dt_task           = l_flg_dt_task(i),
                       id_task_related       = l_id_task_related(i)
                 WHERE id_pn_soap_block = l_id_pn_soap_block(i)
                   AND id_pn_note_type = l_id_pn_note_type(i)
                   AND id_task_type = l_id_task_type(i)
                   AND id_pn_data_block = l_id_pn_data_block(i)
                   AND id_software = l_id_software(i)
                   AND id_market = l_id_market(i)
                RETURNING ROWID BULK COLLECT INTO rows_out;
        END IF;
    
    EXCEPTION
        WHEN e_forall_error THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                FOR indx IN 1 .. SQL%bulk_exceptions.count
                LOOP
                    pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
                END LOOP;
            END IF;
        WHEN OTHERS THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END upd;

    --Update with collection (without rows_out)
    PROCEDURE upd
    (
        col_in            IN pn_dblock_ttp_mkt_tc,
        ignore_if_null_in IN BOOLEAN := TRUE,
        handle_error_in   IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        upd(col_in, ignore_if_null_in, handle_error_in, rows_out);
    END upd;

    --Dynamic update string
    FUNCTION dynupdstr
    (
        colname_in IN all_tab_columns.column_name%TYPE,
        where_in   IN VARCHAR2 := NULL
    ) RETURN VARCHAR2 IS
    BEGIN
        RETURN 'BEGIN UPDATE pn_dblock_ttp_mkt
SET ' || colname_in || ' = :value
 WHERE ' || nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;';
    END dynupdstr;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (with rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN UPDATE pn_dblock_ttp_mkt
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1') || ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    END increment_onecol;

    -- Use Native Dynamic SQL increment a single NUMBER column
    -- for all rows specified by the dynamic WHERE clause (without rows_out)
    PROCEDURE increment_onecol
    (
        colname_in         IN all_tab_columns.column_name%TYPE,
        where_in           IN VARCHAR2,
        increment_value_in IN NUMBER DEFAULT 1,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        EXECUTE IMMEDIATE 'UPDATE pn_dblock_ttp_mkt
SET ' || colname_in || '=' || colname_in || '+' || nvl(increment_value_in, 1) || ' WHERE ' ||
                          nvl(where_in, '1=1');
    END increment_onecol;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_pn_soap_block_in IN pn_dblock_ttp_mkt.id_pn_soap_block%TYPE,
        id_pn_note_type_in  IN pn_dblock_ttp_mkt.id_pn_note_type%TYPE,
        id_task_type_in     IN pn_dblock_ttp_mkt.id_task_type%TYPE,
        id_pn_data_block_in IN pn_dblock_ttp_mkt.id_pn_data_block%TYPE,
        id_software_in      IN pn_dblock_ttp_mkt.id_software%TYPE,
        id_market_in        IN pn_dblock_ttp_mkt.id_market%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM pn_dblock_ttp_mkt
         WHERE id_pn_soap_block = id_pn_soap_block_in
           AND id_pn_note_type = id_pn_note_type_in
           AND id_task_type = id_task_type_in
           AND id_pn_data_block = id_pn_data_block_in
           AND id_software = id_software_in
           AND id_market = id_market_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del;

    -- Delete one row by primary key
    PROCEDURE del
    (
        id_pn_soap_block_in IN pn_dblock_ttp_mkt.id_pn_soap_block%TYPE,
        id_pn_note_type_in  IN pn_dblock_ttp_mkt.id_pn_note_type%TYPE,
        id_task_type_in     IN pn_dblock_ttp_mkt.id_task_type%TYPE,
        id_pn_data_block_in IN pn_dblock_ttp_mkt.id_pn_data_block%TYPE,
        id_software_in      IN pn_dblock_ttp_mkt.id_software%TYPE,
        id_market_in        IN pn_dblock_ttp_mkt.id_market%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del(id_pn_soap_block_in => id_pn_soap_block_in,
            id_pn_note_type_in  => id_pn_note_type_in,
            id_task_type_in     => id_task_type_in,
            id_pn_data_block_in => id_pn_data_block_in,
            id_software_in      => id_software_in,
            id_market_in        => id_market_in,
            handle_error_in     => handle_error_in,
            rows_out            => rows_out);
    END del;

    -- Delete all rows for this PDBTTM_DB_FK foreign key value
    PROCEDURE del_pdbttm_db_fk
    (
        id_pn_data_block_in IN pn_dblock_ttp_mkt.id_pn_data_block%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM pn_dblock_ttp_mkt
         WHERE id_pn_data_block = id_pn_data_block_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_pdbttm_db_fk;

    -- Delete all rows for this PDBTTM_MRK_FK foreign key value
    PROCEDURE del_pdbttm_mrk_fk
    (
        id_market_in    IN pn_dblock_ttp_mkt.id_market%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM pn_dblock_ttp_mkt
         WHERE id_market = id_market_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_pdbttm_mrk_fk;

    -- Delete all rows for this PDBTTM_NT_FK foreign key value
    PROCEDURE del_pdbttm_nt_fk
    (
        id_pn_note_type_in IN pn_dblock_ttp_mkt.id_pn_note_type%TYPE,
        handle_error_in    IN BOOLEAN := TRUE,
        rows_out           OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM pn_dblock_ttp_mkt
         WHERE id_pn_note_type = id_pn_note_type_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_pdbttm_nt_fk;

    -- Delete all rows for this PDBTTM_SB_FK foreign key value
    PROCEDURE del_pdbttm_sb_fk
    (
        id_pn_soap_block_in IN pn_dblock_ttp_mkt.id_pn_soap_block%TYPE,
        handle_error_in     IN BOOLEAN := TRUE,
        rows_out            OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM pn_dblock_ttp_mkt
         WHERE id_pn_soap_block = id_pn_soap_block_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_pdbttm_sb_fk;

    -- Delete all rows for this PDBTTM_S_FK foreign key value
    PROCEDURE del_pdbttm_s_fk
    (
        id_software_in  IN pn_dblock_ttp_mkt.id_software%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM pn_dblock_ttp_mkt
         WHERE id_software = id_software_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_pdbttm_s_fk;

    -- Delete all rows for this PDBTTM_TT_FK foreign key value
    PROCEDURE del_pdbttm_tt_fk
    (
        id_task_type_in IN pn_dblock_ttp_mkt.id_task_type%TYPE,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        DELETE FROM pn_dblock_ttp_mkt
         WHERE id_task_type = id_task_type_in
        RETURNING ROWID BULK COLLECT INTO rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_pdbttm_tt_fk;

    -- Delete all rows for this PDBTTM_DB_FK foreign key value
    PROCEDURE del_pdbttm_db_fk
    (
        id_pn_data_block_in IN pn_dblock_ttp_mkt.id_pn_data_block%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_pdbttm_db_fk(id_pn_data_block_in => id_pn_data_block_in,
                         handle_error_in     => handle_error_in,
                         rows_out            => rows_out);
    END del_pdbttm_db_fk;

    -- Delete all rows for this PDBTTM_MRK_FK foreign key value
    PROCEDURE del_pdbttm_mrk_fk
    (
        id_market_in    IN pn_dblock_ttp_mkt.id_market%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_pdbttm_mrk_fk(id_market_in => id_market_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_pdbttm_mrk_fk;

    -- Delete all rows for this PDBTTM_NT_FK foreign key value
    PROCEDURE del_pdbttm_nt_fk
    (
        id_pn_note_type_in IN pn_dblock_ttp_mkt.id_pn_note_type%TYPE,
        handle_error_in    IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_pdbttm_nt_fk(id_pn_note_type_in => id_pn_note_type_in,
                         handle_error_in    => handle_error_in,
                         rows_out           => rows_out);
    END del_pdbttm_nt_fk;

    -- Delete all rows for this PDBTTM_SB_FK foreign key value
    PROCEDURE del_pdbttm_sb_fk
    (
        id_pn_soap_block_in IN pn_dblock_ttp_mkt.id_pn_soap_block%TYPE,
        handle_error_in     IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_pdbttm_sb_fk(id_pn_soap_block_in => id_pn_soap_block_in,
                         handle_error_in     => handle_error_in,
                         rows_out            => rows_out);
    END del_pdbttm_sb_fk;

    -- Delete all rows for this PDBTTM_S_FK foreign key value
    PROCEDURE del_pdbttm_s_fk
    (
        id_software_in  IN pn_dblock_ttp_mkt.id_software%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_pdbttm_s_fk(id_software_in => id_software_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_pdbttm_s_fk;

    -- Delete all rows for this PDBTTM_TT_FK foreign key value
    PROCEDURE del_pdbttm_tt_fk
    (
        id_task_type_in IN pn_dblock_ttp_mkt.id_task_type%TYPE,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
        rows_out table_varchar;
    BEGIN
        del_pdbttm_tt_fk(id_task_type_in => id_task_type_in, handle_error_in => handle_error_in, rows_out => rows_out);
    END del_pdbttm_tt_fk;

    -- Deletions using dynamic SQL
    FUNCTION dyndelstr(where_in IN VARCHAR2) RETURN VARCHAR2 IS
    BEGIN
        IF where_in IS NULL
        THEN
            RETURN 'DELETE FROM pn_dblock_ttp_mkt';
        ELSE
            RETURN 'DELETE FROM pn_dblock_ttp_mkt WHERE ' || where_in;
        END IF;
    END dyndelstr;
    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE,
        rows_out        OUT table_varchar
    ) IS
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN ' || dyndelstr(where_clause_in) ||
                          ' RETURNING ROWID BULK COLLECT INTO :rows_out; END;'
            USING OUT rows_out;
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Delete all rows specified by dynamic WHERE clause
    PROCEDURE del_by
    (
        where_clause_in IN VARCHAR2,
        handle_error_in IN BOOLEAN := TRUE
    ) IS
    BEGIN
        EXECUTE IMMEDIATE dyndelstr(where_clause_in);
    
    EXCEPTION
        WHEN e_null_column_value
             OR e_existing_fky_reference
             OR e_check_constraint_failure
             OR e_no_parent_key
             OR e_child_record_found
             OR e_forall_error
             OR e_integ_constraint_failure THEN
            IF NOT handle_error_in
            THEN
                RAISE;
            ELSE
                pk_alertlog.log_info('DML error ignored: ' || SQLCODE || ': ' || SQLERRM);
            END IF;
        
    END del_by;

    -- Initialize a record with default values for columns in the table (prc)
    PROCEDURE initrec(pn_dblock_ttp_mkt_inout IN OUT pn_dblock_ttp_mkt%ROWTYPE) IS
    BEGIN
        pn_dblock_ttp_mkt_inout.id_pn_soap_block      := NULL;
        pn_dblock_ttp_mkt_inout.id_pn_note_type       := NULL;
        pn_dblock_ttp_mkt_inout.id_task_type          := NULL;
        pn_dblock_ttp_mkt_inout.id_pn_data_block      := NULL;
        pn_dblock_ttp_mkt_inout.id_software           := NULL;
        pn_dblock_ttp_mkt_inout.id_market             := NULL;
        pn_dblock_ttp_mkt_inout.flg_auto_populated    := NULL;
        pn_dblock_ttp_mkt_inout.create_user           := NULL;
        pn_dblock_ttp_mkt_inout.create_time           := NULL;
        pn_dblock_ttp_mkt_inout.create_institution    := NULL;
        pn_dblock_ttp_mkt_inout.update_user           := NULL;
        pn_dblock_ttp_mkt_inout.update_time           := NULL;
        pn_dblock_ttp_mkt_inout.update_institution    := NULL;
        pn_dblock_ttp_mkt_inout.flg_selected          := NULL;
        pn_dblock_ttp_mkt_inout.flg_import_filter     := NULL;
        pn_dblock_ttp_mkt_inout.last_n_records_nr     := NULL;
        pn_dblock_ttp_mkt_inout.flg_shortcut_filter   := NULL;
        pn_dblock_ttp_mkt_inout.flg_synchronized      := NULL;
        pn_dblock_ttp_mkt_inout.review_cat            := NULL;
        pn_dblock_ttp_mkt_inout.flg_review_avail      := NULL;
        pn_dblock_ttp_mkt_inout.flg_description       := NULL;
        pn_dblock_ttp_mkt_inout.description_condition := NULL;
        pn_dblock_ttp_mkt_inout.flg_dt_task           := NULL;
        pn_dblock_ttp_mkt_inout.id_task_related       := NULL;
    END initrec;

    -- Initialize a record with default values for columns in the table (fnc)
    FUNCTION initrec RETURN pn_dblock_ttp_mkt%ROWTYPE IS
        l_pn_dblock_ttp_mkt pn_dblock_ttp_mkt%ROWTYPE;
    BEGIN
        RETURN l_pn_dblock_ttp_mkt;
    END initrec;

    --get data from rowid
    FUNCTION get_data_rowid(rows_in IN table_varchar) RETURN pn_dblock_ttp_mkt_tc IS
        data pn_dblock_ttp_mkt_tc;
    BEGIN
        SELECT *
          BULK COLLECT
          INTO data
          FROM pn_dblock_ttp_mkt
         WHERE ROWID IN (SELECT /*+opt_estimate(table,t,scale_rows=0.0000001))*/
                          *
                           FROM TABLE(rows_in) t);
        RETURN data;
    END get_data_rowid;

    --get data from rowid (pragma autonomous transacion)
    FUNCTION get_data_rowid_pat(rows_in IN table_varchar) RETURN pn_dblock_ttp_mkt_tc IS
        data pn_dblock_ttp_mkt_tc;
        PRAGMA AUTONOMOUS_TRANSACTION;
    BEGIN
        data := get_data_rowid(rows_in);
        COMMIT;
        RETURN data;
    
    EXCEPTION
        WHEN OTHERS THEN
            pk_alert_exceptions.raise_error(error_name_in => 'get_data_rowid_pat');
            ROLLBACK;
        
    END get_data_rowid_pat;

BEGIN
    NULL;
END ts_pn_dblock_ttp_mkt;
/
