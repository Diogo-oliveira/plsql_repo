ALTER TABLE ADM_PREPARATION ADD CONSTRAINT APREP_FAVAI_CHK CHECK (flg_Available in ('Y', 'N')) ENABLE;



ALTER TABLE ADM_PREPARATION ADD CONSTRAINT APREP_PK PRIMARY KEY (ID_ADM_PREPARATION) ENABLE;



ALTER TABLE ADM_PREPARATION MODIFY (ID_ADM_PREPARATION NOT NULL ENABLE);



ALTER TABLE ADM_PREPARATION MODIFY (CODE_ADM_PREPARATION NOT NULL ENABLE);



ALTER TABLE ADM_PREPARATION MODIFY (FLG_AVAILABLE NOT NULL ENABLE);

ALTER TABLE adm_preparation modify(id_institution NOT NULL ENABLE);


-- CHANGED BY: orlando.antunes
-- CHANGE DATE: 18/06/2010 14:24
-- CHANGE REASON: [ALERT-105487] 
ALTER TABLE ADM_PREPARATION 
ADD CONSTRAINT AP_FLG_STATUS_CHK CHECK (FLG_STATUS IN ('A', 'C', 'E')) ENABLE;

ALTER TABLE ADM_PREPARATION 
ADD CONSTRAINT AP_FLG_PARAM_TYPE_CHK CHECK (FLG_PARAMETERIZATION_TYPE IN ('B', 'C')) ENABLE;
-- CHANGE END: orlando.antunes

-- CHANGED BY: Paulo Teixeira
-- CHANGE DATE: 06/12/2013 11:22
-- CHANGE REASON: [ALERT-256633] 
DECLARE
    e_object_exists EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_object_exists, -02260);
    e_object_exists2 EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_object_exists2, -06512);
    e_object_exists3 EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_object_exists3, -02264);
BEGIN

    BEGIN
        EXECUTE IMMEDIATE 'alter table adm_preparation
    add constraint ap_cbt_chk
    check (case when CODE_adm_preparation is not null and DESC_adm_preparation is not null then 0 else 1 end = 1)';
    EXCEPTION
        WHEN e_object_exists THEN
            dbms_output.put_line('AVISO: Operação já executada anteriormente.');
        WHEN e_object_exists2 THEN
            dbms_output.put_line('AVISO: Operação já executada anteriormente.');
        WHEN e_object_exists3 THEN
            dbms_output.put_line('AVISO: Operação já executada anteriormente.');
    END;

END;
/
-- CHANGE END: Paulo Teixeira